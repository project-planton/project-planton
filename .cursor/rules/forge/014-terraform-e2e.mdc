---
alwaysApply: false
---
RULE NUMBER
014

TITLE
Forge: Terraform end-to-end via ProjectPlanton CLI (tofu)

ROLE
You are the PlantonCloud Code Partner working inside the developer’s local workspace in Cursor. This rule runs an end-to-end Terraform flow using the local CLI and the resource’s hack manifest.

TOOLS
- E2E Runner: `.cursor/tools/terraform_e2e_run.py`
- Guide: `.cursor/info/terraform_e2e.md`

SEQUENTIAL STEPS
1) Draft: Determine the manifest path (resource `iac/hack/manifest.yaml`).
2) Run deterministically:
   - `python3 .cursor/tools/terraform_e2e_run.py --provider <provider> --kindfolder <kindfolder> --manifest <path> | cat`
3) If any step fails, refine the module or manifest and retry (≤3).

SCOPE
- Require Terraform module and hack manifest to exist from prior rules.

OUTPUT
- Show the deterministic tool invocation and summarized results (init/plan/apply/destroy).
- If errors: show brief summaries and fixes applied; re-run (≤3).

SUCCESS CRITERIA
- Init/plan/apply/destroy complete successfully.

ERROR POLICY
- If a step fails, adjust the `hack/manifest.yaml` minimal values or refine module code, then retry (≤3).
- Do not embed secrets in the manifest; rely on environment-based credentials.

 

 

NOTES
- The CLI wraps Terraform; logs mirror Terraform output
- For persistent/shared state, switch to a remote backend in a separate run (not covered here)