---
alwaysApply: false
---
RULE NUMBER
008

TITLE
Forge: Generate top-level hack/manifest.yaml for the resource

ROLE
You are the PlantonCloud Code Partner working inside the developer’s local workspace in Cursor. This rule generates a minimal `iac/hack/manifest.yaml` for quick testing.

TOOLS
- Proto Readers: reuse `.cursor/tools/spec_proto_reader.py` and `.cursor/tools/api_reader.py`.
- Writer: `.cursor/tools/hack_manifest_write.py` writes the manifest deterministically.
- Authoring guide: `.cursor/info/hack_manifest.md`.

SCOPE
- Target: `apis/project/planton/provider/<provider>/<kindfolder>/v1/iac/hack/manifest.yaml`
- Create/update a minimal YAML manifest with safe defaults.

SEQUENTIAL STEPS
1) Read: Use proto readers to obtain `<Kind>`, `api_version`, and essential fields from `<Kind>Spec`.
2) Draft: Read `.cursor/info/hack_manifest.md`. Generate minimal manifest YAML.
3) Write: `cat <<'YAML' | python3 .cursor/tools/hack_manifest_write.py --provider <provider> --kindfolder <kindfolder> --stdin | cat`
   - If edits are needed, refine and re-run (≤3).

SUCCESS CRITERIA
- Manifest exists at `.../v1/iac/hack/manifest.yaml`.
- Minimal, valid spec with safe defaults; no credentials.

OUTPUT STYLE IN CHAT
- Show created path and a short snippet (no secrets).