load("@gazelle//:def.bzl", "gazelle")
load("@rules_go//go:def.bzl", "go_binary", "go_library", "nogo")

exports_files([".bazelrc"])

# Keep Gazelle minimal. We will not generate proto rules here; buf handles stubs.
# Disable Gazelle proto generation globally to avoid conflicts with buf outputs.
# You can still enable per-package if needed later.
# gazelle:proto disable
# gazelle:prefix github.com/project-planton/project-planton

gazelle(
    name = "gazelle",
    args = [
        "-proto",
        "disable",
    ],  # prevent proto/go_proto generation globally
)

go_library(
    name = "project-planton_lib",
    srcs = ["main.go"],
    importpath = "github.com/project-planton/project-planton",
    visibility = ["//visibility:private"],
    deps = [
        "//cmd/project-planton",
        "//internal/cli/panic",
    ],
)

go_binary(
    name = "project-planton",
    embed = [":project-planton_lib"],
    visibility = ["//visibility:public"],
)

# Static analysis configuration with all standard go vet analyzers
# Explicit list ensures version compatibility and transparency
# Includes all 29 standard analyzers for complete go vet parity
nogo(
    name = "project_planton_nogo",
    visibility = ["//visibility:public"],
    deps = [
        "@org_golang_x_tools//go/analysis/passes/appends:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/asmdecl:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/assign:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/atomic:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/bools:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/buildtag:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/cgocall:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/composite:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/copylock:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/defers:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/directive:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/errorsas:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/framepointer:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/httpresponse:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/ifaceassert:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/loopclosure:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/lostcancel:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/nilfunc:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/printf:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/shift:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/slog:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/stdmethods:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/stringintconv:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/structtag:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/tests:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/unmarshal:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/unreachable:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/unsafeptr:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/unusedresult:go_default_library",
    ],
)
