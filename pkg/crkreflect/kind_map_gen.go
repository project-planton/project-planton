// Code generated by pkg/crkreflect/codegen; DO NOT EDIT.
//
// This file defines ToMessageMap which maps CloudResourceKind enums to protobuf message instances.
// To regenerate: make generate-cloud-resource-kind-map
//
// IMPORTANT: Files that import ToMessageMap should use "//go:build !codegen" tag
// to prevent chicken-and-egg compilation issues during generation.
// See new_instance.go for an example.
package crkreflect

import (
	mongodbatlasv1 "github.com/project-planton/project-planton/apis/project/planton/provider/atlas/mongodbatlas/v1"
	awsalbv1 "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awsalb/v1"
	awscertmanagercertv1 "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awscertmanagercert/v1"
	awsclientvpnv1 "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awsclientvpn/v1"
	awscloudfrontv1 "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awscloudfront/v1"
	awsdynamodbv1 "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awsdynamodb/v1"
	awsec2instancev1 "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awsec2instance/v1"
	awsecrrepov1 "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awsecrrepo/v1"
	awsecsclusterv1 "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awsecscluster/v1"
	awsecsservicev1 "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awsecsservice/v1"
	awseksclusterv1 "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awsekscluster/v1"
	awseksnodegroupv1 "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awseksnodegroup/v1"
	awsiamrolev1 "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awsiamrole/v1"
	awsiamuserv1 "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awsiamuser/v1"
	awskmskeyv1 "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awskmskey/v1"
	awslambdav1 "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awslambda/v1"
	awsrdsclusterv1 "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awsrdscluster/v1"
	awsrdsinstancev1 "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awsrdsinstance/v1"
	awsroute53zonev1 "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awsroute53zone/v1"
	awss3bucketv1 "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awss3bucket/v1"
	awssecretsmanagerv1 "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awssecretsmanager/v1"
	awssecuritygroupv1 "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awssecuritygroup/v1"
	awsstaticwebsitev1 "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awsstaticwebsite/v1"
	awsvpcv1 "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awsvpc/v1"
	azureaksclusterv1 "github.com/project-planton/project-planton/apis/project/planton/provider/azure/azureakscluster/v1"
	azureaksnodepoolv1 "github.com/project-planton/project-planton/apis/project/planton/provider/azure/azureaksnodepool/v1"
	azurecontainerregistryv1 "github.com/project-planton/project-planton/apis/project/planton/provider/azure/azurecontainerregistry/v1"
	azurednszonev1 "github.com/project-planton/project-planton/apis/project/planton/provider/azure/azurednszone/v1"
	azurekeyvaultv1 "github.com/project-planton/project-planton/apis/project/planton/provider/azure/azurekeyvault/v1"
	azurenatgatewayv1 "github.com/project-planton/project-planton/apis/project/planton/provider/azure/azurenatgateway/v1"
	azurevpcv1 "github.com/project-planton/project-planton/apis/project/planton/provider/azure/azurevpc/v1"
	civobucketv1 "github.com/project-planton/project-planton/apis/project/planton/provider/civo/civobucket/v1"
	civocertificatev1 "github.com/project-planton/project-planton/apis/project/planton/provider/civo/civocertificate/v1"
	civocomputeinstancev1 "github.com/project-planton/project-planton/apis/project/planton/provider/civo/civocomputeinstance/v1"
	civodatabasev1 "github.com/project-planton/project-planton/apis/project/planton/provider/civo/civodatabase/v1"
	civodnszonev1 "github.com/project-planton/project-planton/apis/project/planton/provider/civo/civodnszone/v1"
	civofirewallv1 "github.com/project-planton/project-planton/apis/project/planton/provider/civo/civofirewall/v1"
	civoipaddressv1 "github.com/project-planton/project-planton/apis/project/planton/provider/civo/civoipaddress/v1"
	civokubernetesclusterv1 "github.com/project-planton/project-planton/apis/project/planton/provider/civo/civokubernetescluster/v1"
	civokubernetesnodepoolv1 "github.com/project-planton/project-planton/apis/project/planton/provider/civo/civokubernetesnodepool/v1"
	civoloadbalancerv1 "github.com/project-planton/project-planton/apis/project/planton/provider/civo/civoloadbalancer/v1"
	civovolumev1 "github.com/project-planton/project-planton/apis/project/planton/provider/civo/civovolume/v1"
	civovpcv1 "github.com/project-planton/project-planton/apis/project/planton/provider/civo/civovpc/v1"
	cloudflared1databasev1 "github.com/project-planton/project-planton/apis/project/planton/provider/cloudflare/cloudflared1database/v1"
	cloudflarednszonev1 "github.com/project-planton/project-planton/apis/project/planton/provider/cloudflare/cloudflarednszone/v1"
	cloudflarekvnamespacev1 "github.com/project-planton/project-planton/apis/project/planton/provider/cloudflare/cloudflarekvnamespace/v1"
	cloudflareloadbalancerv1 "github.com/project-planton/project-planton/apis/project/planton/provider/cloudflare/cloudflareloadbalancer/v1"
	cloudflarer2bucketv1 "github.com/project-planton/project-planton/apis/project/planton/provider/cloudflare/cloudflarer2bucket/v1"
	cloudflareworkerv1 "github.com/project-planton/project-planton/apis/project/planton/provider/cloudflare/cloudflareworker/v1"
	cloudflarezerotrustaccessapplicationv1 "github.com/project-planton/project-planton/apis/project/planton/provider/cloudflare/cloudflarezerotrustaccessapplication/v1"
	confluentkafkav1 "github.com/project-planton/project-planton/apis/project/planton/provider/confluent/confluentkafka/v1"
	digitaloceanappplatformservicev1 "github.com/project-planton/project-planton/apis/project/planton/provider/digitalocean/digitaloceanappplatformservice/v1"
	digitaloceanbucketv1 "github.com/project-planton/project-planton/apis/project/planton/provider/digitalocean/digitaloceanbucket/v1"
	digitaloceancertificatev1 "github.com/project-planton/project-planton/apis/project/planton/provider/digitalocean/digitaloceancertificate/v1"
	digitaloceancontainerregistryv1 "github.com/project-planton/project-planton/apis/project/planton/provider/digitalocean/digitaloceancontainerregistry/v1"
	digitaloceandatabaseclusterv1 "github.com/project-planton/project-planton/apis/project/planton/provider/digitalocean/digitaloceandatabasecluster/v1"
	digitaloceandnszonev1 "github.com/project-planton/project-planton/apis/project/planton/provider/digitalocean/digitaloceandnszone/v1"
	digitaloceandropletv1 "github.com/project-planton/project-planton/apis/project/planton/provider/digitalocean/digitaloceandroplet/v1"
	digitaloceanfirewallv1 "github.com/project-planton/project-planton/apis/project/planton/provider/digitalocean/digitaloceanfirewall/v1"
	digitaloceanfunctionv1 "github.com/project-planton/project-planton/apis/project/planton/provider/digitalocean/digitaloceanfunction/v1"
	digitaloceankubernetesclusterv1 "github.com/project-planton/project-planton/apis/project/planton/provider/digitalocean/digitaloceankubernetescluster/v1"
	digitaloceankubernetesnodepoolv1 "github.com/project-planton/project-planton/apis/project/planton/provider/digitalocean/digitaloceankubernetesnodepool/v1"
	digitaloceanloadbalancerv1 "github.com/project-planton/project-planton/apis/project/planton/provider/digitalocean/digitaloceanloadbalancer/v1"
	digitaloceanvolumev1 "github.com/project-planton/project-planton/apis/project/planton/provider/digitalocean/digitaloceanvolume/v1"
	digitaloceanvpcv1 "github.com/project-planton/project-planton/apis/project/planton/provider/digitalocean/digitaloceanvpc/v1"
	gcpartifactregistryrepov1 "github.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpartifactregistryrepo/v1"
	gcpcloudcdnv1 "github.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpcloudcdn/v1"
	gcpcloudfunctionv1 "github.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpcloudfunction/v1"
	gcpcloudrunv1 "github.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpcloudrun/v1"
	gcpcloudsqlv1 "github.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpcloudsql/v1"
	gcpdnszonev1 "github.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpdnszone/v1"
	gcpgcsbucketv1 "github.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpgcsbucket/v1"
	gcpgkeaddonbundlev1 "github.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpgkeaddonbundle/v1"
	gcpgkeclusterv1 "github.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpgkecluster/v1"
	gcpgkeclustercorev1 "github.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpgkeclustercore/v1"
	gcpgkenodepoolv1 "github.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpgkenodepool/v1"
	gcpgkeworkloadidentitybindingv1 "github.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpgkeworkloadidentitybinding/v1"
	gcpprojectv1 "github.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpproject/v1"
	gcprouternatv1 "github.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcprouternat/v1"
	gcpsecretsmanagerv1 "github.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpsecretsmanager/v1"
	gcpserviceaccountv1 "github.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpserviceaccount/v1"
	gcpstaticwebsitev1 "github.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpstaticwebsite/v1"
	gcpsubnetworkv1 "github.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpsubnetwork/v1"
	gcpvpcv1 "github.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpvpc/v1"
	altinityoperatorkubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/addon/altinityoperatorkubernetes/v1"
	certmanagerkubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/addon/certmanagerkubernetes/v1"
	elasticoperatorkubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/addon/elasticoperatorkubernetes/v1"
	externaldnskubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/addon/externaldnskubernetes/v1"
	externalsecretskubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/addon/externalsecretskubernetes/v1"
	ingressnginxkubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/addon/ingressnginxkubernetes/v1"
	istiokubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/addon/istiokubernetes/v1"
	kafkaoperatorkubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/addon/kafkaoperatorkubernetes/v1"
	perconaservermongodboperatorv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/addon/perconaservermongodboperator/v1"
	postgresoperatorkubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/addon/postgresoperatorkubernetes/v1"
	solroperatorkubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/addon/solroperatorkubernetes/v1"
	argocdkubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/argocdkubernetes/v1"
	clickhousekubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/clickhousekubernetes/v1"
	cronjobkubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/cronjobkubernetes/v1"
	elasticsearchkubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/elasticsearchkubernetes/v1"
	gitlabkubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/gitlabkubernetes/v1"
	grafanakubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/grafanakubernetes/v1"
	helmreleasev1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/helmrelease/v1"
	jenkinskubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/jenkinskubernetes/v1"
	kafkakubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/kafkakubernetes/v1"
	keycloakkubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/keycloakkubernetes/v1"
	kuberneteshttpendpointv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/kuberneteshttpendpoint/v1"
	locustkubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/locustkubernetes/v1"
	microservicekubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/microservicekubernetes/v1"
	mongodbkubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/mongodbkubernetes/v1"
	natskubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/natskubernetes/v1"
	neo4jkubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/neo4jkubernetes/v1"
	openfgakubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/openfgakubernetes/v1"
	postgreskubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/postgreskubernetes/v1"
	prometheuskubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/prometheuskubernetes/v1"
	rediskubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/rediskubernetes/v1"
	signozkubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/signozkubernetes/v1"
	solrkubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/solrkubernetes/v1"
	stackjobrunnerkubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/stackjobrunnerkubernetes/v1"
	temporalkubernetesv1 "github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/temporalkubernetes/v1"
	snowflakedatabasev1 "github.com/project-planton/project-planton/apis/project/planton/provider/snowflake/snowflakedatabase/v1"
	"github.com/project-planton/project-planton/apis/project/planton/shared/cloudresourcekind"
	"google.golang.org/protobuf/proto"
)

func merge(maps ...map[cloudresourcekind.CloudResourceKind]proto.Message) map[cloudresourcekind.CloudResourceKind]proto.Message {
	out := make(map[cloudresourcekind.CloudResourceKind]proto.Message)
	for _, m := range maps {
		for k, v := range m {
			out[k] = v
		}
	}
	return out
}

var ProviderAtlasMap = map[cloudresourcekind.CloudResourceKind]proto.Message{
	cloudresourcekind.CloudResourceKind_MongodbAtlas: &mongodbatlasv1.MongodbAtlas{},
}

var ProviderAwsMap = map[cloudresourcekind.CloudResourceKind]proto.Message{
	cloudresourcekind.CloudResourceKind_AwsAlb:             &awsalbv1.AwsAlb{},
	cloudresourcekind.CloudResourceKind_AwsCertManagerCert: &awscertmanagercertv1.AwsCertManagerCert{},
	cloudresourcekind.CloudResourceKind_AwsClientVpn:       &awsclientvpnv1.AwsClientVpn{},
	cloudresourcekind.CloudResourceKind_AwsCloudFront:      &awscloudfrontv1.AwsCloudFront{},
	cloudresourcekind.CloudResourceKind_AwsDynamodb:        &awsdynamodbv1.AwsDynamodb{},
	cloudresourcekind.CloudResourceKind_AwsEc2Instance:     &awsec2instancev1.AwsEc2Instance{},
	cloudresourcekind.CloudResourceKind_AwsEcrRepo:         &awsecrrepov1.AwsEcrRepo{},
	cloudresourcekind.CloudResourceKind_AwsEcsCluster:      &awsecsclusterv1.AwsEcsCluster{},
	cloudresourcekind.CloudResourceKind_AwsEcsService:      &awsecsservicev1.AwsEcsService{},
	cloudresourcekind.CloudResourceKind_AwsEksCluster:      &awseksclusterv1.AwsEksCluster{},
	cloudresourcekind.CloudResourceKind_AwsEksNodeGroup:    &awseksnodegroupv1.AwsEksNodeGroup{},
	cloudresourcekind.CloudResourceKind_AwsIamRole:         &awsiamrolev1.AwsIamRole{},
	cloudresourcekind.CloudResourceKind_AwsIamUser:         &awsiamuserv1.AwsIamUser{},
	cloudresourcekind.CloudResourceKind_AwsKmsKey:          &awskmskeyv1.AwsKmsKey{},
	cloudresourcekind.CloudResourceKind_AwsLambda:          &awslambdav1.AwsLambda{},
	cloudresourcekind.CloudResourceKind_AwsRdsCluster:      &awsrdsclusterv1.AwsRdsCluster{},
	cloudresourcekind.CloudResourceKind_AwsRdsInstance:     &awsrdsinstancev1.AwsRdsInstance{},
	cloudresourcekind.CloudResourceKind_AwsRoute53Zone:     &awsroute53zonev1.AwsRoute53Zone{},
	cloudresourcekind.CloudResourceKind_AwsS3Bucket:        &awss3bucketv1.AwsS3Bucket{},
	cloudresourcekind.CloudResourceKind_AwsSecretsManager:  &awssecretsmanagerv1.AwsSecretsManager{},
	cloudresourcekind.CloudResourceKind_AwsSecurityGroup:   &awssecuritygroupv1.AwsSecurityGroup{},
	cloudresourcekind.CloudResourceKind_AwsStaticWebsite:   &awsstaticwebsitev1.AwsStaticWebsite{},
	cloudresourcekind.CloudResourceKind_AwsVpc:             &awsvpcv1.AwsVpc{},
}

var ProviderAzureMap = map[cloudresourcekind.CloudResourceKind]proto.Message{
	cloudresourcekind.CloudResourceKind_AzureAksCluster:        &azureaksclusterv1.AzureAksCluster{},
	cloudresourcekind.CloudResourceKind_AzureAksNodePool:       &azureaksnodepoolv1.AzureAksNodePool{},
	cloudresourcekind.CloudResourceKind_AzureContainerRegistry: &azurecontainerregistryv1.AzureContainerRegistry{},
	cloudresourcekind.CloudResourceKind_AzureDnsZone:           &azurednszonev1.AzureDnsZone{},
	cloudresourcekind.CloudResourceKind_AzureKeyVault:          &azurekeyvaultv1.AzureKeyVault{},
	cloudresourcekind.CloudResourceKind_AzureNatGateway:        &azurenatgatewayv1.AzureNatGateway{},
	cloudresourcekind.CloudResourceKind_AzureVpc:               &azurevpcv1.AzureVpc{},
}

var ProviderCivoMap = map[cloudresourcekind.CloudResourceKind]proto.Message{
	cloudresourcekind.CloudResourceKind_CivoBucket:             &civobucketv1.CivoBucket{},
	cloudresourcekind.CloudResourceKind_CivoCertificate:        &civocertificatev1.CivoCertificate{},
	cloudresourcekind.CloudResourceKind_CivoComputeInstance:    &civocomputeinstancev1.CivoComputeInstance{},
	cloudresourcekind.CloudResourceKind_CivoDatabase:           &civodatabasev1.CivoDatabase{},
	cloudresourcekind.CloudResourceKind_CivoDnsZone:            &civodnszonev1.CivoDnsZone{},
	cloudresourcekind.CloudResourceKind_CivoFirewall:           &civofirewallv1.CivoFirewall{},
	cloudresourcekind.CloudResourceKind_CivoIpAddress:          &civoipaddressv1.CivoIpAddress{},
	cloudresourcekind.CloudResourceKind_CivoKubernetesCluster:  &civokubernetesclusterv1.CivoKubernetesCluster{},
	cloudresourcekind.CloudResourceKind_CivoKubernetesNodePool: &civokubernetesnodepoolv1.CivoKubernetesNodePool{},
	cloudresourcekind.CloudResourceKind_CivoLoadBalancer:       &civoloadbalancerv1.CivoLoadBalancer{},
	cloudresourcekind.CloudResourceKind_CivoVolume:             &civovolumev1.CivoVolume{},
	cloudresourcekind.CloudResourceKind_CivoVpc:                &civovpcv1.CivoVpc{},
}

var ProviderCloudflareMap = map[cloudresourcekind.CloudResourceKind]proto.Message{
	cloudresourcekind.CloudResourceKind_CloudflareD1Database:                 &cloudflared1databasev1.CloudflareD1Database{},
	cloudresourcekind.CloudResourceKind_CloudflareDnsZone:                    &cloudflarednszonev1.CloudflareDnsZone{},
	cloudresourcekind.CloudResourceKind_CloudflareKvNamespace:                &cloudflarekvnamespacev1.CloudflareKvNamespace{},
	cloudresourcekind.CloudResourceKind_CloudflareLoadBalancer:               &cloudflareloadbalancerv1.CloudflareLoadBalancer{},
	cloudresourcekind.CloudResourceKind_CloudflareR2Bucket:                   &cloudflarer2bucketv1.CloudflareR2Bucket{},
	cloudresourcekind.CloudResourceKind_CloudflareWorker:                     &cloudflareworkerv1.CloudflareWorker{},
	cloudresourcekind.CloudResourceKind_CloudflareZeroTrustAccessApplication: &cloudflarezerotrustaccessapplicationv1.CloudflareZeroTrustAccessApplication{},
}

var ProviderConfluentMap = map[cloudresourcekind.CloudResourceKind]proto.Message{
	cloudresourcekind.CloudResourceKind_ConfluentKafka: &confluentkafkav1.ConfluentKafka{},
}

var ProviderDigitalOceanMap = map[cloudresourcekind.CloudResourceKind]proto.Message{
	cloudresourcekind.CloudResourceKind_DigitalOceanAppPlatformService: &digitaloceanappplatformservicev1.DigitalOceanAppPlatformService{},
	cloudresourcekind.CloudResourceKind_DigitalOceanBucket:             &digitaloceanbucketv1.DigitalOceanBucket{},
	cloudresourcekind.CloudResourceKind_DigitalOceanCertificate:        &digitaloceancertificatev1.DigitalOceanCertificate{},
	cloudresourcekind.CloudResourceKind_DigitalOceanContainerRegistry:  &digitaloceancontainerregistryv1.DigitalOceanContainerRegistry{},
	cloudresourcekind.CloudResourceKind_DigitalOceanDatabaseCluster:    &digitaloceandatabaseclusterv1.DigitalOceanDatabaseCluster{},
	cloudresourcekind.CloudResourceKind_DigitalOceanDnsZone:            &digitaloceandnszonev1.DigitalOceanDnsZone{},
	cloudresourcekind.CloudResourceKind_DigitalOceanDroplet:            &digitaloceandropletv1.DigitalOceanDroplet{},
	cloudresourcekind.CloudResourceKind_DigitalOceanFirewall:           &digitaloceanfirewallv1.DigitalOceanFirewall{},
	cloudresourcekind.CloudResourceKind_DigitalOceanFunction:           &digitaloceanfunctionv1.DigitalOceanFunction{},
	cloudresourcekind.CloudResourceKind_DigitalOceanKubernetesCluster:  &digitaloceankubernetesclusterv1.DigitalOceanKubernetesCluster{},
	cloudresourcekind.CloudResourceKind_DigitalOceanKubernetesNodePool: &digitaloceankubernetesnodepoolv1.DigitalOceanKubernetesNodePool{},
	cloudresourcekind.CloudResourceKind_DigitalOceanLoadBalancer:       &digitaloceanloadbalancerv1.DigitalOceanLoadBalancer{},
	cloudresourcekind.CloudResourceKind_DigitalOceanVolume:             &digitaloceanvolumev1.DigitalOceanVolume{},
	cloudresourcekind.CloudResourceKind_DigitalOceanVpc:                &digitaloceanvpcv1.DigitalOceanVpc{},
}

var ProviderGcpMap = map[cloudresourcekind.CloudResourceKind]proto.Message{
	cloudresourcekind.CloudResourceKind_GcpArtifactRegistryRepo:       &gcpartifactregistryrepov1.GcpArtifactRegistryRepo{},
	cloudresourcekind.CloudResourceKind_GcpCloudCdn:                   &gcpcloudcdnv1.GcpCloudCdn{},
	cloudresourcekind.CloudResourceKind_GcpCloudFunction:              &gcpcloudfunctionv1.GcpCloudFunction{},
	cloudresourcekind.CloudResourceKind_GcpCloudRun:                   &gcpcloudrunv1.GcpCloudRun{},
	cloudresourcekind.CloudResourceKind_GcpCloudSql:                   &gcpcloudsqlv1.GcpCloudSql{},
	cloudresourcekind.CloudResourceKind_GcpDnsZone:                    &gcpdnszonev1.GcpDnsZone{},
	cloudresourcekind.CloudResourceKind_GcpGcsBucket:                  &gcpgcsbucketv1.GcpGcsBucket{},
	cloudresourcekind.CloudResourceKind_GcpGkeAddonBundle:             &gcpgkeaddonbundlev1.GcpGkeAddonBundle{},
	cloudresourcekind.CloudResourceKind_GcpGkeCluster:                 &gcpgkeclusterv1.GcpGkeCluster{},
	cloudresourcekind.CloudResourceKind_GcpGkeClusterCore:             &gcpgkeclustercorev1.GcpGkeClusterCore{},
	cloudresourcekind.CloudResourceKind_GcpGkeNodePool:                &gcpgkenodepoolv1.GcpGkeNodePool{},
	cloudresourcekind.CloudResourceKind_GcpGkeWorkloadIdentityBinding: &gcpgkeworkloadidentitybindingv1.GcpGkeWorkloadIdentityBinding{},
	cloudresourcekind.CloudResourceKind_GcpProject:                    &gcpprojectv1.GcpProject{},
	cloudresourcekind.CloudResourceKind_GcpRouterNat:                  &gcprouternatv1.GcpRouterNat{},
	cloudresourcekind.CloudResourceKind_GcpSecretsManager:             &gcpsecretsmanagerv1.GcpSecretsManager{},
	cloudresourcekind.CloudResourceKind_GcpServiceAccount:             &gcpserviceaccountv1.GcpServiceAccount{},
	cloudresourcekind.CloudResourceKind_GcpStaticWebsite:              &gcpstaticwebsitev1.GcpStaticWebsite{},
	cloudresourcekind.CloudResourceKind_GcpSubnetwork:                 &gcpsubnetworkv1.GcpSubnetwork{},
	cloudresourcekind.CloudResourceKind_GcpVpc:                        &gcpvpcv1.GcpVpc{},
}

var ProviderSnowflakeMap = map[cloudresourcekind.CloudResourceKind]proto.Message{
	cloudresourcekind.CloudResourceKind_SnowflakeDatabase: &snowflakedatabasev1.SnowflakeDatabase{},
}

var ProviderKubernetesAddonMap = map[cloudresourcekind.CloudResourceKind]proto.Message{
	cloudresourcekind.CloudResourceKind_AltinityOperatorKubernetes:   &altinityoperatorkubernetesv1.AltinityOperatorKubernetes{},
	cloudresourcekind.CloudResourceKind_CertManagerKubernetes:        &certmanagerkubernetesv1.CertManagerKubernetes{},
	cloudresourcekind.CloudResourceKind_ElasticOperatorKubernetes:    &elasticoperatorkubernetesv1.ElasticOperatorKubernetes{},
	cloudresourcekind.CloudResourceKind_ExternalDnsKubernetes:        &externaldnskubernetesv1.ExternalDnsKubernetes{},
	cloudresourcekind.CloudResourceKind_ExternalSecretsKubernetes:    &externalsecretskubernetesv1.ExternalSecretsKubernetes{},
	cloudresourcekind.CloudResourceKind_IngressNginxKubernetes:       &ingressnginxkubernetesv1.IngressNginxKubernetes{},
	cloudresourcekind.CloudResourceKind_IstioKubernetes:              &istiokubernetesv1.IstioKubernetes{},
	cloudresourcekind.CloudResourceKind_KafkaOperatorKubernetes:      &kafkaoperatorkubernetesv1.KafkaOperatorKubernetes{},
	cloudresourcekind.CloudResourceKind_PerconaServerMongodbOperator: &perconaservermongodboperatorv1.PerconaServerMongodbOperator{},
	cloudresourcekind.CloudResourceKind_PostgresOperatorKubernetes:   &postgresoperatorkubernetesv1.PostgresOperatorKubernetes{},
	cloudresourcekind.CloudResourceKind_SolrOperatorKubernetes:       &solroperatorkubernetesv1.SolrOperatorKubernetes{},
}

var ProviderKubernetesWorkloadMap = map[cloudresourcekind.CloudResourceKind]proto.Message{
	cloudresourcekind.CloudResourceKind_ArgocdKubernetes:         &argocdkubernetesv1.ArgocdKubernetes{},
	cloudresourcekind.CloudResourceKind_ClickHouseKubernetes:     &clickhousekubernetesv1.ClickHouseKubernetes{},
	cloudresourcekind.CloudResourceKind_CronJobKubernetes:        &cronjobkubernetesv1.CronJobKubernetes{},
	cloudresourcekind.CloudResourceKind_ElasticsearchKubernetes:  &elasticsearchkubernetesv1.ElasticsearchKubernetes{},
	cloudresourcekind.CloudResourceKind_GitlabKubernetes:         &gitlabkubernetesv1.GitlabKubernetes{},
	cloudresourcekind.CloudResourceKind_GrafanaKubernetes:        &grafanakubernetesv1.GrafanaKubernetes{},
	cloudresourcekind.CloudResourceKind_HelmRelease:              &helmreleasev1.HelmRelease{},
	cloudresourcekind.CloudResourceKind_JenkinsKubernetes:        &jenkinskubernetesv1.JenkinsKubernetes{},
	cloudresourcekind.CloudResourceKind_KafkaKubernetes:          &kafkakubernetesv1.KafkaKubernetes{},
	cloudresourcekind.CloudResourceKind_KeycloakKubernetes:       &keycloakkubernetesv1.KeycloakKubernetes{},
	cloudresourcekind.CloudResourceKind_KubernetesHttpEndpoint:   &kuberneteshttpendpointv1.KubernetesHttpEndpoint{},
	cloudresourcekind.CloudResourceKind_LocustKubernetes:         &locustkubernetesv1.LocustKubernetes{},
	cloudresourcekind.CloudResourceKind_MicroserviceKubernetes:   &microservicekubernetesv1.MicroserviceKubernetes{},
	cloudresourcekind.CloudResourceKind_MongodbKubernetes:        &mongodbkubernetesv1.MongodbKubernetes{},
	cloudresourcekind.CloudResourceKind_NatsKubernetes:           &natskubernetesv1.NatsKubernetes{},
	cloudresourcekind.CloudResourceKind_Neo4jKubernetes:          &neo4jkubernetesv1.Neo4JKubernetes{},
	cloudresourcekind.CloudResourceKind_OpenFgaKubernetes:        &openfgakubernetesv1.OpenFgaKubernetes{},
	cloudresourcekind.CloudResourceKind_PostgresKubernetes:       &postgreskubernetesv1.PostgresKubernetes{},
	cloudresourcekind.CloudResourceKind_PrometheusKubernetes:     &prometheuskubernetesv1.PrometheusKubernetes{},
	cloudresourcekind.CloudResourceKind_RedisKubernetes:          &rediskubernetesv1.RedisKubernetes{},
	cloudresourcekind.CloudResourceKind_SignozKubernetes:         &signozkubernetesv1.SignozKubernetes{},
	cloudresourcekind.CloudResourceKind_SolrKubernetes:           &solrkubernetesv1.SolrKubernetes{},
	cloudresourcekind.CloudResourceKind_StackJobRunnerKubernetes: &stackjobrunnerkubernetesv1.StackJobRunnerKubernetes{},
	cloudresourcekind.CloudResourceKind_TemporalKubernetes:       &temporalkubernetesv1.TemporalKubernetes{},
}

var ProviderKubernetesMap = merge(ProviderKubernetesAddonMap, ProviderKubernetesWorkloadMap)

var ToMessageMap = merge(
	ProviderAtlasMap,
	ProviderAwsMap,
	ProviderAzureMap,
	ProviderCivoMap,
	ProviderCloudflareMap,
	ProviderConfluentMap,
	ProviderDigitalOceanMap,
	ProviderGcpMap,
	ProviderSnowflakeMap,
	ProviderKubernetesMap,
)
