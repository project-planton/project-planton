// Build Tag Explanation:
// The !codegen build tag prevents this file from being compiled during code generation.
// This is necessary because:
//   1. This file depends on ToMessageMap (defined in kind_map_gen.go)
//   2. kind_map_gen.go is GENERATED by pkg/crkreflect/codegen/main.go
//   3. When running "go run ./pkg/crkreflect/codegen", Go compiles ALL files in pkg/crkreflect
//   4. Without this tag, compilation would fail because kind_map_gen.go doesn't exist yet
//
// The Makefile uses "go run -tags codegen" to exclude this file during generation.
// In normal builds (without the codegen tag), this file is included as expected.

//go:build !codegen
// +build !codegen

package crkreflect

import (
	"github.com/pkg/errors"
	"github.com/project-planton/project-planton/apis/project/planton/shared/cloudresourcekind"
	"google.golang.org/protobuf/proto"
)

// NewInstance creates a new instance of the proto message for the given CloudResourceKind.
// This function returns a fresh instance, not a shared reference from ToMessageMap.
// Use this instead of directly accessing ToMessageMap to avoid shared state issues.
func NewInstance(kind cloudresourcekind.CloudResourceKind) (proto.Message, error) {
	template := ToMessageMap[kind]

	if template == nil {
		return nil, errors.Errorf("unsupported cloud resource kind: %s", kind.String())
	}

	// Create a new instance using protobuf reflection
	// This ensures each call gets its own independent object
	newInstance := template.ProtoReflect().New().Interface()

	return newInstance, nil
}
