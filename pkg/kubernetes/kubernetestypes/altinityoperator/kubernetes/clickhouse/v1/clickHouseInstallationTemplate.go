// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// define a set of Kubernetes resources (StatefulSet, PVC, Service, ConfigMap) which describe behavior one or more clusters
type ClickHouseInstallationTemplate struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput                       `pulumi:"metadata"`
	Spec     ClickHouseInstallationTemplateSpecOutput      `pulumi:"spec"`
	Status   ClickHouseInstallationTemplateStatusPtrOutput `pulumi:"status"`
}

// NewClickHouseInstallationTemplate registers a new resource with the given unique name, arguments, and options.
func NewClickHouseInstallationTemplate(ctx *pulumi.Context,
	name string, args *ClickHouseInstallationTemplateArgs, opts ...pulumi.ResourceOption) (*ClickHouseInstallationTemplate, error) {
	if args == nil {
		args = &ClickHouseInstallationTemplateArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("clickhouse.altinity.com/v1")
	args.Kind = pulumi.StringPtr("ClickHouseInstallationTemplate")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ClickHouseInstallationTemplate
	err := ctx.RegisterResource("kubernetes:clickhouse.altinity.com/v1:ClickHouseInstallationTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClickHouseInstallationTemplate gets an existing ClickHouseInstallationTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClickHouseInstallationTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClickHouseInstallationTemplateState, opts ...pulumi.ResourceOption) (*ClickHouseInstallationTemplate, error) {
	var resource ClickHouseInstallationTemplate
	err := ctx.ReadResource("kubernetes:clickhouse.altinity.com/v1:ClickHouseInstallationTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClickHouseInstallationTemplate resources.
type clickHouseInstallationTemplateState struct {
}

type ClickHouseInstallationTemplateState struct {
}

func (ClickHouseInstallationTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*clickHouseInstallationTemplateState)(nil)).Elem()
}

type clickHouseInstallationTemplateArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta                  `pulumi:"metadata"`
	Spec     *ClickHouseInstallationTemplateSpec `pulumi:"spec"`
}

// The set of arguments for constructing a ClickHouseInstallationTemplate resource.
type ClickHouseInstallationTemplateArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     ClickHouseInstallationTemplateSpecPtrInput
}

func (ClickHouseInstallationTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clickHouseInstallationTemplateArgs)(nil)).Elem()
}

type ClickHouseInstallationTemplateInput interface {
	pulumi.Input

	ToClickHouseInstallationTemplateOutput() ClickHouseInstallationTemplateOutput
	ToClickHouseInstallationTemplateOutputWithContext(ctx context.Context) ClickHouseInstallationTemplateOutput
}

func (*ClickHouseInstallationTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseInstallationTemplate)(nil)).Elem()
}

func (i *ClickHouseInstallationTemplate) ToClickHouseInstallationTemplateOutput() ClickHouseInstallationTemplateOutput {
	return i.ToClickHouseInstallationTemplateOutputWithContext(context.Background())
}

func (i *ClickHouseInstallationTemplate) ToClickHouseInstallationTemplateOutputWithContext(ctx context.Context) ClickHouseInstallationTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseInstallationTemplateOutput)
}

// ClickHouseInstallationTemplateArrayInput is an input type that accepts ClickHouseInstallationTemplateArray and ClickHouseInstallationTemplateArrayOutput values.
// You can construct a concrete instance of `ClickHouseInstallationTemplateArrayInput` via:
//
//	ClickHouseInstallationTemplateArray{ ClickHouseInstallationTemplateArgs{...} }
type ClickHouseInstallationTemplateArrayInput interface {
	pulumi.Input

	ToClickHouseInstallationTemplateArrayOutput() ClickHouseInstallationTemplateArrayOutput
	ToClickHouseInstallationTemplateArrayOutputWithContext(context.Context) ClickHouseInstallationTemplateArrayOutput
}

type ClickHouseInstallationTemplateArray []ClickHouseInstallationTemplateInput

func (ClickHouseInstallationTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClickHouseInstallationTemplate)(nil)).Elem()
}

func (i ClickHouseInstallationTemplateArray) ToClickHouseInstallationTemplateArrayOutput() ClickHouseInstallationTemplateArrayOutput {
	return i.ToClickHouseInstallationTemplateArrayOutputWithContext(context.Background())
}

func (i ClickHouseInstallationTemplateArray) ToClickHouseInstallationTemplateArrayOutputWithContext(ctx context.Context) ClickHouseInstallationTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseInstallationTemplateArrayOutput)
}

// ClickHouseInstallationTemplateMapInput is an input type that accepts ClickHouseInstallationTemplateMap and ClickHouseInstallationTemplateMapOutput values.
// You can construct a concrete instance of `ClickHouseInstallationTemplateMapInput` via:
//
//	ClickHouseInstallationTemplateMap{ "key": ClickHouseInstallationTemplateArgs{...} }
type ClickHouseInstallationTemplateMapInput interface {
	pulumi.Input

	ToClickHouseInstallationTemplateMapOutput() ClickHouseInstallationTemplateMapOutput
	ToClickHouseInstallationTemplateMapOutputWithContext(context.Context) ClickHouseInstallationTemplateMapOutput
}

type ClickHouseInstallationTemplateMap map[string]ClickHouseInstallationTemplateInput

func (ClickHouseInstallationTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClickHouseInstallationTemplate)(nil)).Elem()
}

func (i ClickHouseInstallationTemplateMap) ToClickHouseInstallationTemplateMapOutput() ClickHouseInstallationTemplateMapOutput {
	return i.ToClickHouseInstallationTemplateMapOutputWithContext(context.Background())
}

func (i ClickHouseInstallationTemplateMap) ToClickHouseInstallationTemplateMapOutputWithContext(ctx context.Context) ClickHouseInstallationTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseInstallationTemplateMapOutput)
}

type ClickHouseInstallationTemplateOutput struct{ *pulumi.OutputState }

func (ClickHouseInstallationTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseInstallationTemplate)(nil)).Elem()
}

func (o ClickHouseInstallationTemplateOutput) ToClickHouseInstallationTemplateOutput() ClickHouseInstallationTemplateOutput {
	return o
}

func (o ClickHouseInstallationTemplateOutput) ToClickHouseInstallationTemplateOutputWithContext(ctx context.Context) ClickHouseInstallationTemplateOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ClickHouseInstallationTemplateOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ClickHouseInstallationTemplate) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClickHouseInstallationTemplateOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *ClickHouseInstallationTemplate) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ClickHouseInstallationTemplateOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *ClickHouseInstallationTemplate) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o ClickHouseInstallationTemplateOutput) Spec() ClickHouseInstallationTemplateSpecOutput {
	return o.ApplyT(func(v *ClickHouseInstallationTemplate) ClickHouseInstallationTemplateSpecOutput { return v.Spec }).(ClickHouseInstallationTemplateSpecOutput)
}

func (o ClickHouseInstallationTemplateOutput) Status() ClickHouseInstallationTemplateStatusPtrOutput {
	return o.ApplyT(func(v *ClickHouseInstallationTemplate) ClickHouseInstallationTemplateStatusPtrOutput { return v.Status }).(ClickHouseInstallationTemplateStatusPtrOutput)
}

type ClickHouseInstallationTemplateArrayOutput struct{ *pulumi.OutputState }

func (ClickHouseInstallationTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClickHouseInstallationTemplate)(nil)).Elem()
}

func (o ClickHouseInstallationTemplateArrayOutput) ToClickHouseInstallationTemplateArrayOutput() ClickHouseInstallationTemplateArrayOutput {
	return o
}

func (o ClickHouseInstallationTemplateArrayOutput) ToClickHouseInstallationTemplateArrayOutputWithContext(ctx context.Context) ClickHouseInstallationTemplateArrayOutput {
	return o
}

func (o ClickHouseInstallationTemplateArrayOutput) Index(i pulumi.IntInput) ClickHouseInstallationTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClickHouseInstallationTemplate {
		return vs[0].([]*ClickHouseInstallationTemplate)[vs[1].(int)]
	}).(ClickHouseInstallationTemplateOutput)
}

type ClickHouseInstallationTemplateMapOutput struct{ *pulumi.OutputState }

func (ClickHouseInstallationTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClickHouseInstallationTemplate)(nil)).Elem()
}

func (o ClickHouseInstallationTemplateMapOutput) ToClickHouseInstallationTemplateMapOutput() ClickHouseInstallationTemplateMapOutput {
	return o
}

func (o ClickHouseInstallationTemplateMapOutput) ToClickHouseInstallationTemplateMapOutputWithContext(ctx context.Context) ClickHouseInstallationTemplateMapOutput {
	return o
}

func (o ClickHouseInstallationTemplateMapOutput) MapIndex(k pulumi.StringInput) ClickHouseInstallationTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClickHouseInstallationTemplate {
		return vs[0].(map[string]*ClickHouseInstallationTemplate)[vs[1].(string)]
	}).(ClickHouseInstallationTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseInstallationTemplateInput)(nil)).Elem(), &ClickHouseInstallationTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseInstallationTemplateArrayInput)(nil)).Elem(), ClickHouseInstallationTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseInstallationTemplateMapInput)(nil)).Elem(), ClickHouseInstallationTemplateMap{})
	pulumi.RegisterOutputType(ClickHouseInstallationTemplateOutput{})
	pulumi.RegisterOutputType(ClickHouseInstallationTemplateArrayOutput{})
	pulumi.RegisterOutputType(ClickHouseInstallationTemplateMapOutput{})
}
