// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
// define a set of Kubernetes resources (StatefulSet, PVC, Service, ConfigMap) which describe behavior one or more clusters
type ClickHouseKeeperInstallationPatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput                  `pulumi:"metadata"`
	Spec     ClickHouseKeeperInstallationSpecPatchPtrOutput   `pulumi:"spec"`
	Status   ClickHouseKeeperInstallationStatusPatchPtrOutput `pulumi:"status"`
}

// NewClickHouseKeeperInstallationPatch registers a new resource with the given unique name, arguments, and options.
func NewClickHouseKeeperInstallationPatch(ctx *pulumi.Context,
	name string, args *ClickHouseKeeperInstallationPatchArgs, opts ...pulumi.ResourceOption) (*ClickHouseKeeperInstallationPatch, error) {
	if args == nil {
		args = &ClickHouseKeeperInstallationPatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("clickhouse-keeper.altinity.com/v1")
	args.Kind = pulumi.StringPtr("ClickHouseKeeperInstallation")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ClickHouseKeeperInstallationPatch
	err := ctx.RegisterResource("kubernetes:clickhouse-keeper.altinity.com/v1:ClickHouseKeeperInstallationPatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClickHouseKeeperInstallationPatch gets an existing ClickHouseKeeperInstallationPatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClickHouseKeeperInstallationPatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClickHouseKeeperInstallationPatchState, opts ...pulumi.ResourceOption) (*ClickHouseKeeperInstallationPatch, error) {
	var resource ClickHouseKeeperInstallationPatch
	err := ctx.ReadResource("kubernetes:clickhouse-keeper.altinity.com/v1:ClickHouseKeeperInstallationPatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClickHouseKeeperInstallationPatch resources.
type clickHouseKeeperInstallationPatchState struct {
}

type ClickHouseKeeperInstallationPatchState struct {
}

func (ClickHouseKeeperInstallationPatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*clickHouseKeeperInstallationPatchState)(nil)).Elem()
}

type clickHouseKeeperInstallationPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch                `pulumi:"metadata"`
	Spec     *ClickHouseKeeperInstallationSpecPatch `pulumi:"spec"`
}

// The set of arguments for constructing a ClickHouseKeeperInstallationPatch resource.
type ClickHouseKeeperInstallationPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     ClickHouseKeeperInstallationSpecPatchPtrInput
}

func (ClickHouseKeeperInstallationPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clickHouseKeeperInstallationPatchArgs)(nil)).Elem()
}

type ClickHouseKeeperInstallationPatchInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationPatchOutput() ClickHouseKeeperInstallationPatchOutput
	ToClickHouseKeeperInstallationPatchOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationPatchOutput
}

func (*ClickHouseKeeperInstallationPatch) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationPatch)(nil)).Elem()
}

func (i *ClickHouseKeeperInstallationPatch) ToClickHouseKeeperInstallationPatchOutput() ClickHouseKeeperInstallationPatchOutput {
	return i.ToClickHouseKeeperInstallationPatchOutputWithContext(context.Background())
}

func (i *ClickHouseKeeperInstallationPatch) ToClickHouseKeeperInstallationPatchOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationPatchOutput)
}

// ClickHouseKeeperInstallationPatchArrayInput is an input type that accepts ClickHouseKeeperInstallationPatchArray and ClickHouseKeeperInstallationPatchArrayOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationPatchArrayInput` via:
//
//	ClickHouseKeeperInstallationPatchArray{ ClickHouseKeeperInstallationPatchArgs{...} }
type ClickHouseKeeperInstallationPatchArrayInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationPatchArrayOutput() ClickHouseKeeperInstallationPatchArrayOutput
	ToClickHouseKeeperInstallationPatchArrayOutputWithContext(context.Context) ClickHouseKeeperInstallationPatchArrayOutput
}

type ClickHouseKeeperInstallationPatchArray []ClickHouseKeeperInstallationPatchInput

func (ClickHouseKeeperInstallationPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClickHouseKeeperInstallationPatch)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationPatchArray) ToClickHouseKeeperInstallationPatchArrayOutput() ClickHouseKeeperInstallationPatchArrayOutput {
	return i.ToClickHouseKeeperInstallationPatchArrayOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationPatchArray) ToClickHouseKeeperInstallationPatchArrayOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationPatchArrayOutput)
}

// ClickHouseKeeperInstallationPatchMapInput is an input type that accepts ClickHouseKeeperInstallationPatchMap and ClickHouseKeeperInstallationPatchMapOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationPatchMapInput` via:
//
//	ClickHouseKeeperInstallationPatchMap{ "key": ClickHouseKeeperInstallationPatchArgs{...} }
type ClickHouseKeeperInstallationPatchMapInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationPatchMapOutput() ClickHouseKeeperInstallationPatchMapOutput
	ToClickHouseKeeperInstallationPatchMapOutputWithContext(context.Context) ClickHouseKeeperInstallationPatchMapOutput
}

type ClickHouseKeeperInstallationPatchMap map[string]ClickHouseKeeperInstallationPatchInput

func (ClickHouseKeeperInstallationPatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClickHouseKeeperInstallationPatch)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationPatchMap) ToClickHouseKeeperInstallationPatchMapOutput() ClickHouseKeeperInstallationPatchMapOutput {
	return i.ToClickHouseKeeperInstallationPatchMapOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationPatchMap) ToClickHouseKeeperInstallationPatchMapOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationPatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationPatchMapOutput)
}

type ClickHouseKeeperInstallationPatchOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationPatch)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationPatchOutput) ToClickHouseKeeperInstallationPatchOutput() ClickHouseKeeperInstallationPatchOutput {
	return o
}

func (o ClickHouseKeeperInstallationPatchOutput) ToClickHouseKeeperInstallationPatchOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationPatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ClickHouseKeeperInstallationPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationPatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClickHouseKeeperInstallationPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationPatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ClickHouseKeeperInstallationPatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationPatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o ClickHouseKeeperInstallationPatchOutput) Spec() ClickHouseKeeperInstallationSpecPatchPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationPatch) ClickHouseKeeperInstallationSpecPatchPtrOutput {
		return v.Spec
	}).(ClickHouseKeeperInstallationSpecPatchPtrOutput)
}

func (o ClickHouseKeeperInstallationPatchOutput) Status() ClickHouseKeeperInstallationStatusPatchPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationPatch) ClickHouseKeeperInstallationStatusPatchPtrOutput {
		return v.Status
	}).(ClickHouseKeeperInstallationStatusPatchPtrOutput)
}

type ClickHouseKeeperInstallationPatchArrayOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClickHouseKeeperInstallationPatch)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationPatchArrayOutput) ToClickHouseKeeperInstallationPatchArrayOutput() ClickHouseKeeperInstallationPatchArrayOutput {
	return o
}

func (o ClickHouseKeeperInstallationPatchArrayOutput) ToClickHouseKeeperInstallationPatchArrayOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationPatchArrayOutput {
	return o
}

func (o ClickHouseKeeperInstallationPatchArrayOutput) Index(i pulumi.IntInput) ClickHouseKeeperInstallationPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClickHouseKeeperInstallationPatch {
		return vs[0].([]*ClickHouseKeeperInstallationPatch)[vs[1].(int)]
	}).(ClickHouseKeeperInstallationPatchOutput)
}

type ClickHouseKeeperInstallationPatchMapOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationPatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClickHouseKeeperInstallationPatch)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationPatchMapOutput) ToClickHouseKeeperInstallationPatchMapOutput() ClickHouseKeeperInstallationPatchMapOutput {
	return o
}

func (o ClickHouseKeeperInstallationPatchMapOutput) ToClickHouseKeeperInstallationPatchMapOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationPatchMapOutput {
	return o
}

func (o ClickHouseKeeperInstallationPatchMapOutput) MapIndex(k pulumi.StringInput) ClickHouseKeeperInstallationPatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClickHouseKeeperInstallationPatch {
		return vs[0].(map[string]*ClickHouseKeeperInstallationPatch)[vs[1].(string)]
	}).(ClickHouseKeeperInstallationPatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationPatchInput)(nil)).Elem(), &ClickHouseKeeperInstallationPatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationPatchArrayInput)(nil)).Elem(), ClickHouseKeeperInstallationPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationPatchMapInput)(nil)).Elem(), ClickHouseKeeperInstallationPatchMap{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationPatchOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationPatchArrayOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationPatchMapOutput{})
}
