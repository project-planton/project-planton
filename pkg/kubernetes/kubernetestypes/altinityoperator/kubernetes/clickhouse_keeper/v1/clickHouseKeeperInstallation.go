// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// define a set of Kubernetes resources (StatefulSet, PVC, Service, ConfigMap) which describe behavior one or more clusters
type ClickHouseKeeperInstallation struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput                     `pulumi:"metadata"`
	Spec     ClickHouseKeeperInstallationSpecOutput      `pulumi:"spec"`
	Status   ClickHouseKeeperInstallationStatusPtrOutput `pulumi:"status"`
}

// NewClickHouseKeeperInstallation registers a new resource with the given unique name, arguments, and options.
func NewClickHouseKeeperInstallation(ctx *pulumi.Context,
	name string, args *ClickHouseKeeperInstallationArgs, opts ...pulumi.ResourceOption) (*ClickHouseKeeperInstallation, error) {
	if args == nil {
		args = &ClickHouseKeeperInstallationArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("clickhouse-keeper.altinity.com/v1")
	args.Kind = pulumi.StringPtr("ClickHouseKeeperInstallation")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ClickHouseKeeperInstallation
	err := ctx.RegisterResource("kubernetes:clickhouse-keeper.altinity.com/v1:ClickHouseKeeperInstallation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClickHouseKeeperInstallation gets an existing ClickHouseKeeperInstallation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClickHouseKeeperInstallation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClickHouseKeeperInstallationState, opts ...pulumi.ResourceOption) (*ClickHouseKeeperInstallation, error) {
	var resource ClickHouseKeeperInstallation
	err := ctx.ReadResource("kubernetes:clickhouse-keeper.altinity.com/v1:ClickHouseKeeperInstallation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClickHouseKeeperInstallation resources.
type clickHouseKeeperInstallationState struct {
}

type ClickHouseKeeperInstallationState struct {
}

func (ClickHouseKeeperInstallationState) ElementType() reflect.Type {
	return reflect.TypeOf((*clickHouseKeeperInstallationState)(nil)).Elem()
}

type clickHouseKeeperInstallationArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta                `pulumi:"metadata"`
	Spec     *ClickHouseKeeperInstallationSpec `pulumi:"spec"`
}

// The set of arguments for constructing a ClickHouseKeeperInstallation resource.
type ClickHouseKeeperInstallationArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     ClickHouseKeeperInstallationSpecPtrInput
}

func (ClickHouseKeeperInstallationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clickHouseKeeperInstallationArgs)(nil)).Elem()
}

type ClickHouseKeeperInstallationInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationOutput() ClickHouseKeeperInstallationOutput
	ToClickHouseKeeperInstallationOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationOutput
}

func (*ClickHouseKeeperInstallation) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallation)(nil)).Elem()
}

func (i *ClickHouseKeeperInstallation) ToClickHouseKeeperInstallationOutput() ClickHouseKeeperInstallationOutput {
	return i.ToClickHouseKeeperInstallationOutputWithContext(context.Background())
}

func (i *ClickHouseKeeperInstallation) ToClickHouseKeeperInstallationOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationOutput)
}

// ClickHouseKeeperInstallationArrayInput is an input type that accepts ClickHouseKeeperInstallationArray and ClickHouseKeeperInstallationArrayOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationArrayInput` via:
//
//	ClickHouseKeeperInstallationArray{ ClickHouseKeeperInstallationArgs{...} }
type ClickHouseKeeperInstallationArrayInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationArrayOutput() ClickHouseKeeperInstallationArrayOutput
	ToClickHouseKeeperInstallationArrayOutputWithContext(context.Context) ClickHouseKeeperInstallationArrayOutput
}

type ClickHouseKeeperInstallationArray []ClickHouseKeeperInstallationInput

func (ClickHouseKeeperInstallationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClickHouseKeeperInstallation)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationArray) ToClickHouseKeeperInstallationArrayOutput() ClickHouseKeeperInstallationArrayOutput {
	return i.ToClickHouseKeeperInstallationArrayOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationArray) ToClickHouseKeeperInstallationArrayOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationArrayOutput)
}

// ClickHouseKeeperInstallationMapInput is an input type that accepts ClickHouseKeeperInstallationMap and ClickHouseKeeperInstallationMapOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationMapInput` via:
//
//	ClickHouseKeeperInstallationMap{ "key": ClickHouseKeeperInstallationArgs{...} }
type ClickHouseKeeperInstallationMapInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationMapOutput() ClickHouseKeeperInstallationMapOutput
	ToClickHouseKeeperInstallationMapOutputWithContext(context.Context) ClickHouseKeeperInstallationMapOutput
}

type ClickHouseKeeperInstallationMap map[string]ClickHouseKeeperInstallationInput

func (ClickHouseKeeperInstallationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClickHouseKeeperInstallation)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationMap) ToClickHouseKeeperInstallationMapOutput() ClickHouseKeeperInstallationMapOutput {
	return i.ToClickHouseKeeperInstallationMapOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationMap) ToClickHouseKeeperInstallationMapOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationMapOutput)
}

type ClickHouseKeeperInstallationOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallation)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationOutput) ToClickHouseKeeperInstallationOutput() ClickHouseKeeperInstallationOutput {
	return o
}

func (o ClickHouseKeeperInstallationOutput) ToClickHouseKeeperInstallationOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ClickHouseKeeperInstallationOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallation) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClickHouseKeeperInstallationOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallation) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ClickHouseKeeperInstallationOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallation) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o ClickHouseKeeperInstallationOutput) Spec() ClickHouseKeeperInstallationSpecOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallation) ClickHouseKeeperInstallationSpecOutput { return v.Spec }).(ClickHouseKeeperInstallationSpecOutput)
}

func (o ClickHouseKeeperInstallationOutput) Status() ClickHouseKeeperInstallationStatusPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallation) ClickHouseKeeperInstallationStatusPtrOutput { return v.Status }).(ClickHouseKeeperInstallationStatusPtrOutput)
}

type ClickHouseKeeperInstallationArrayOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClickHouseKeeperInstallation)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationArrayOutput) ToClickHouseKeeperInstallationArrayOutput() ClickHouseKeeperInstallationArrayOutput {
	return o
}

func (o ClickHouseKeeperInstallationArrayOutput) ToClickHouseKeeperInstallationArrayOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationArrayOutput {
	return o
}

func (o ClickHouseKeeperInstallationArrayOutput) Index(i pulumi.IntInput) ClickHouseKeeperInstallationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClickHouseKeeperInstallation {
		return vs[0].([]*ClickHouseKeeperInstallation)[vs[1].(int)]
	}).(ClickHouseKeeperInstallationOutput)
}

type ClickHouseKeeperInstallationMapOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClickHouseKeeperInstallation)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationMapOutput) ToClickHouseKeeperInstallationMapOutput() ClickHouseKeeperInstallationMapOutput {
	return o
}

func (o ClickHouseKeeperInstallationMapOutput) ToClickHouseKeeperInstallationMapOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationMapOutput {
	return o
}

func (o ClickHouseKeeperInstallationMapOutput) MapIndex(k pulumi.StringInput) ClickHouseKeeperInstallationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClickHouseKeeperInstallation {
		return vs[0].(map[string]*ClickHouseKeeperInstallation)[vs[1].(string)]
	}).(ClickHouseKeeperInstallationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationInput)(nil)).Elem(), &ClickHouseKeeperInstallation{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationArrayInput)(nil)).Elem(), ClickHouseKeeperInstallationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationMapInput)(nil)).Elem(), ClickHouseKeeperInstallationMap{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationArrayOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationMapOutput{})
}
