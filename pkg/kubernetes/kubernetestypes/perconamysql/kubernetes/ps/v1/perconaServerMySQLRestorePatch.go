// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
type PerconaServerMySQLRestorePatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput               `pulumi:"metadata"`
	Spec     PerconaServerMySQLRestoreSpecPatchPtrOutput   `pulumi:"spec"`
	Status   PerconaServerMySQLRestoreStatusPatchPtrOutput `pulumi:"status"`
}

// NewPerconaServerMySQLRestorePatch registers a new resource with the given unique name, arguments, and options.
func NewPerconaServerMySQLRestorePatch(ctx *pulumi.Context,
	name string, args *PerconaServerMySQLRestorePatchArgs, opts ...pulumi.ResourceOption) (*PerconaServerMySQLRestorePatch, error) {
	if args == nil {
		args = &PerconaServerMySQLRestorePatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("ps.percona.com/v1")
	args.Kind = pulumi.StringPtr("PerconaServerMySQLRestore")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PerconaServerMySQLRestorePatch
	err := ctx.RegisterResource("kubernetes:ps.percona.com/v1:PerconaServerMySQLRestorePatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPerconaServerMySQLRestorePatch gets an existing PerconaServerMySQLRestorePatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPerconaServerMySQLRestorePatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PerconaServerMySQLRestorePatchState, opts ...pulumi.ResourceOption) (*PerconaServerMySQLRestorePatch, error) {
	var resource PerconaServerMySQLRestorePatch
	err := ctx.ReadResource("kubernetes:ps.percona.com/v1:PerconaServerMySQLRestorePatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PerconaServerMySQLRestorePatch resources.
type perconaServerMySQLRestorePatchState struct {
}

type PerconaServerMySQLRestorePatchState struct {
}

func (PerconaServerMySQLRestorePatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaServerMySQLRestorePatchState)(nil)).Elem()
}

type perconaServerMySQLRestorePatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch             `pulumi:"metadata"`
	Spec     *PerconaServerMySQLRestoreSpecPatch `pulumi:"spec"`
}

// The set of arguments for constructing a PerconaServerMySQLRestorePatch resource.
type PerconaServerMySQLRestorePatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     PerconaServerMySQLRestoreSpecPatchPtrInput
}

func (PerconaServerMySQLRestorePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaServerMySQLRestorePatchArgs)(nil)).Elem()
}

type PerconaServerMySQLRestorePatchInput interface {
	pulumi.Input

	ToPerconaServerMySQLRestorePatchOutput() PerconaServerMySQLRestorePatchOutput
	ToPerconaServerMySQLRestorePatchOutputWithContext(ctx context.Context) PerconaServerMySQLRestorePatchOutput
}

func (*PerconaServerMySQLRestorePatch) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaServerMySQLRestorePatch)(nil)).Elem()
}

func (i *PerconaServerMySQLRestorePatch) ToPerconaServerMySQLRestorePatchOutput() PerconaServerMySQLRestorePatchOutput {
	return i.ToPerconaServerMySQLRestorePatchOutputWithContext(context.Background())
}

func (i *PerconaServerMySQLRestorePatch) ToPerconaServerMySQLRestorePatchOutputWithContext(ctx context.Context) PerconaServerMySQLRestorePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaServerMySQLRestorePatchOutput)
}

// PerconaServerMySQLRestorePatchArrayInput is an input type that accepts PerconaServerMySQLRestorePatchArray and PerconaServerMySQLRestorePatchArrayOutput values.
// You can construct a concrete instance of `PerconaServerMySQLRestorePatchArrayInput` via:
//
//	PerconaServerMySQLRestorePatchArray{ PerconaServerMySQLRestorePatchArgs{...} }
type PerconaServerMySQLRestorePatchArrayInput interface {
	pulumi.Input

	ToPerconaServerMySQLRestorePatchArrayOutput() PerconaServerMySQLRestorePatchArrayOutput
	ToPerconaServerMySQLRestorePatchArrayOutputWithContext(context.Context) PerconaServerMySQLRestorePatchArrayOutput
}

type PerconaServerMySQLRestorePatchArray []PerconaServerMySQLRestorePatchInput

func (PerconaServerMySQLRestorePatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaServerMySQLRestorePatch)(nil)).Elem()
}

func (i PerconaServerMySQLRestorePatchArray) ToPerconaServerMySQLRestorePatchArrayOutput() PerconaServerMySQLRestorePatchArrayOutput {
	return i.ToPerconaServerMySQLRestorePatchArrayOutputWithContext(context.Background())
}

func (i PerconaServerMySQLRestorePatchArray) ToPerconaServerMySQLRestorePatchArrayOutputWithContext(ctx context.Context) PerconaServerMySQLRestorePatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaServerMySQLRestorePatchArrayOutput)
}

// PerconaServerMySQLRestorePatchMapInput is an input type that accepts PerconaServerMySQLRestorePatchMap and PerconaServerMySQLRestorePatchMapOutput values.
// You can construct a concrete instance of `PerconaServerMySQLRestorePatchMapInput` via:
//
//	PerconaServerMySQLRestorePatchMap{ "key": PerconaServerMySQLRestorePatchArgs{...} }
type PerconaServerMySQLRestorePatchMapInput interface {
	pulumi.Input

	ToPerconaServerMySQLRestorePatchMapOutput() PerconaServerMySQLRestorePatchMapOutput
	ToPerconaServerMySQLRestorePatchMapOutputWithContext(context.Context) PerconaServerMySQLRestorePatchMapOutput
}

type PerconaServerMySQLRestorePatchMap map[string]PerconaServerMySQLRestorePatchInput

func (PerconaServerMySQLRestorePatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaServerMySQLRestorePatch)(nil)).Elem()
}

func (i PerconaServerMySQLRestorePatchMap) ToPerconaServerMySQLRestorePatchMapOutput() PerconaServerMySQLRestorePatchMapOutput {
	return i.ToPerconaServerMySQLRestorePatchMapOutputWithContext(context.Background())
}

func (i PerconaServerMySQLRestorePatchMap) ToPerconaServerMySQLRestorePatchMapOutputWithContext(ctx context.Context) PerconaServerMySQLRestorePatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaServerMySQLRestorePatchMapOutput)
}

type PerconaServerMySQLRestorePatchOutput struct{ *pulumi.OutputState }

func (PerconaServerMySQLRestorePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaServerMySQLRestorePatch)(nil)).Elem()
}

func (o PerconaServerMySQLRestorePatchOutput) ToPerconaServerMySQLRestorePatchOutput() PerconaServerMySQLRestorePatchOutput {
	return o
}

func (o PerconaServerMySQLRestorePatchOutput) ToPerconaServerMySQLRestorePatchOutputWithContext(ctx context.Context) PerconaServerMySQLRestorePatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PerconaServerMySQLRestorePatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PerconaServerMySQLRestorePatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PerconaServerMySQLRestorePatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PerconaServerMySQLRestorePatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PerconaServerMySQLRestorePatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *PerconaServerMySQLRestorePatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o PerconaServerMySQLRestorePatchOutput) Spec() PerconaServerMySQLRestoreSpecPatchPtrOutput {
	return o.ApplyT(func(v *PerconaServerMySQLRestorePatch) PerconaServerMySQLRestoreSpecPatchPtrOutput { return v.Spec }).(PerconaServerMySQLRestoreSpecPatchPtrOutput)
}

func (o PerconaServerMySQLRestorePatchOutput) Status() PerconaServerMySQLRestoreStatusPatchPtrOutput {
	return o.ApplyT(func(v *PerconaServerMySQLRestorePatch) PerconaServerMySQLRestoreStatusPatchPtrOutput { return v.Status }).(PerconaServerMySQLRestoreStatusPatchPtrOutput)
}

type PerconaServerMySQLRestorePatchArrayOutput struct{ *pulumi.OutputState }

func (PerconaServerMySQLRestorePatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaServerMySQLRestorePatch)(nil)).Elem()
}

func (o PerconaServerMySQLRestorePatchArrayOutput) ToPerconaServerMySQLRestorePatchArrayOutput() PerconaServerMySQLRestorePatchArrayOutput {
	return o
}

func (o PerconaServerMySQLRestorePatchArrayOutput) ToPerconaServerMySQLRestorePatchArrayOutputWithContext(ctx context.Context) PerconaServerMySQLRestorePatchArrayOutput {
	return o
}

func (o PerconaServerMySQLRestorePatchArrayOutput) Index(i pulumi.IntInput) PerconaServerMySQLRestorePatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PerconaServerMySQLRestorePatch {
		return vs[0].([]*PerconaServerMySQLRestorePatch)[vs[1].(int)]
	}).(PerconaServerMySQLRestorePatchOutput)
}

type PerconaServerMySQLRestorePatchMapOutput struct{ *pulumi.OutputState }

func (PerconaServerMySQLRestorePatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaServerMySQLRestorePatch)(nil)).Elem()
}

func (o PerconaServerMySQLRestorePatchMapOutput) ToPerconaServerMySQLRestorePatchMapOutput() PerconaServerMySQLRestorePatchMapOutput {
	return o
}

func (o PerconaServerMySQLRestorePatchMapOutput) ToPerconaServerMySQLRestorePatchMapOutputWithContext(ctx context.Context) PerconaServerMySQLRestorePatchMapOutput {
	return o
}

func (o PerconaServerMySQLRestorePatchMapOutput) MapIndex(k pulumi.StringInput) PerconaServerMySQLRestorePatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PerconaServerMySQLRestorePatch {
		return vs[0].(map[string]*PerconaServerMySQLRestorePatch)[vs[1].(string)]
	}).(PerconaServerMySQLRestorePatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaServerMySQLRestorePatchInput)(nil)).Elem(), &PerconaServerMySQLRestorePatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaServerMySQLRestorePatchArrayInput)(nil)).Elem(), PerconaServerMySQLRestorePatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaServerMySQLRestorePatchMapInput)(nil)).Elem(), PerconaServerMySQLRestorePatchMap{})
	pulumi.RegisterOutputType(PerconaServerMySQLRestorePatchOutput{})
	pulumi.RegisterOutputType(PerconaServerMySQLRestorePatchArrayOutput{})
	pulumi.RegisterOutputType(PerconaServerMySQLRestorePatchMapOutput{})
}
