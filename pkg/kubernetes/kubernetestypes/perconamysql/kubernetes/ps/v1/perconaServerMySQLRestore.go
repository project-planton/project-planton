// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PerconaServerMySQLRestore struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput                  `pulumi:"metadata"`
	Spec     PerconaServerMySQLRestoreSpecOutput      `pulumi:"spec"`
	Status   PerconaServerMySQLRestoreStatusPtrOutput `pulumi:"status"`
}

// NewPerconaServerMySQLRestore registers a new resource with the given unique name, arguments, and options.
func NewPerconaServerMySQLRestore(ctx *pulumi.Context,
	name string, args *PerconaServerMySQLRestoreArgs, opts ...pulumi.ResourceOption) (*PerconaServerMySQLRestore, error) {
	if args == nil {
		args = &PerconaServerMySQLRestoreArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("ps.percona.com/v1")
	args.Kind = pulumi.StringPtr("PerconaServerMySQLRestore")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PerconaServerMySQLRestore
	err := ctx.RegisterResource("kubernetes:ps.percona.com/v1:PerconaServerMySQLRestore", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPerconaServerMySQLRestore gets an existing PerconaServerMySQLRestore resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPerconaServerMySQLRestore(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PerconaServerMySQLRestoreState, opts ...pulumi.ResourceOption) (*PerconaServerMySQLRestore, error) {
	var resource PerconaServerMySQLRestore
	err := ctx.ReadResource("kubernetes:ps.percona.com/v1:PerconaServerMySQLRestore", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PerconaServerMySQLRestore resources.
type perconaServerMySQLRestoreState struct {
}

type PerconaServerMySQLRestoreState struct {
}

func (PerconaServerMySQLRestoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaServerMySQLRestoreState)(nil)).Elem()
}

type perconaServerMySQLRestoreArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta             `pulumi:"metadata"`
	Spec     *PerconaServerMySQLRestoreSpec `pulumi:"spec"`
}

// The set of arguments for constructing a PerconaServerMySQLRestore resource.
type PerconaServerMySQLRestoreArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     PerconaServerMySQLRestoreSpecPtrInput
}

func (PerconaServerMySQLRestoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaServerMySQLRestoreArgs)(nil)).Elem()
}

type PerconaServerMySQLRestoreInput interface {
	pulumi.Input

	ToPerconaServerMySQLRestoreOutput() PerconaServerMySQLRestoreOutput
	ToPerconaServerMySQLRestoreOutputWithContext(ctx context.Context) PerconaServerMySQLRestoreOutput
}

func (*PerconaServerMySQLRestore) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaServerMySQLRestore)(nil)).Elem()
}

func (i *PerconaServerMySQLRestore) ToPerconaServerMySQLRestoreOutput() PerconaServerMySQLRestoreOutput {
	return i.ToPerconaServerMySQLRestoreOutputWithContext(context.Background())
}

func (i *PerconaServerMySQLRestore) ToPerconaServerMySQLRestoreOutputWithContext(ctx context.Context) PerconaServerMySQLRestoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaServerMySQLRestoreOutput)
}

// PerconaServerMySQLRestoreArrayInput is an input type that accepts PerconaServerMySQLRestoreArray and PerconaServerMySQLRestoreArrayOutput values.
// You can construct a concrete instance of `PerconaServerMySQLRestoreArrayInput` via:
//
//	PerconaServerMySQLRestoreArray{ PerconaServerMySQLRestoreArgs{...} }
type PerconaServerMySQLRestoreArrayInput interface {
	pulumi.Input

	ToPerconaServerMySQLRestoreArrayOutput() PerconaServerMySQLRestoreArrayOutput
	ToPerconaServerMySQLRestoreArrayOutputWithContext(context.Context) PerconaServerMySQLRestoreArrayOutput
}

type PerconaServerMySQLRestoreArray []PerconaServerMySQLRestoreInput

func (PerconaServerMySQLRestoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaServerMySQLRestore)(nil)).Elem()
}

func (i PerconaServerMySQLRestoreArray) ToPerconaServerMySQLRestoreArrayOutput() PerconaServerMySQLRestoreArrayOutput {
	return i.ToPerconaServerMySQLRestoreArrayOutputWithContext(context.Background())
}

func (i PerconaServerMySQLRestoreArray) ToPerconaServerMySQLRestoreArrayOutputWithContext(ctx context.Context) PerconaServerMySQLRestoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaServerMySQLRestoreArrayOutput)
}

// PerconaServerMySQLRestoreMapInput is an input type that accepts PerconaServerMySQLRestoreMap and PerconaServerMySQLRestoreMapOutput values.
// You can construct a concrete instance of `PerconaServerMySQLRestoreMapInput` via:
//
//	PerconaServerMySQLRestoreMap{ "key": PerconaServerMySQLRestoreArgs{...} }
type PerconaServerMySQLRestoreMapInput interface {
	pulumi.Input

	ToPerconaServerMySQLRestoreMapOutput() PerconaServerMySQLRestoreMapOutput
	ToPerconaServerMySQLRestoreMapOutputWithContext(context.Context) PerconaServerMySQLRestoreMapOutput
}

type PerconaServerMySQLRestoreMap map[string]PerconaServerMySQLRestoreInput

func (PerconaServerMySQLRestoreMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaServerMySQLRestore)(nil)).Elem()
}

func (i PerconaServerMySQLRestoreMap) ToPerconaServerMySQLRestoreMapOutput() PerconaServerMySQLRestoreMapOutput {
	return i.ToPerconaServerMySQLRestoreMapOutputWithContext(context.Background())
}

func (i PerconaServerMySQLRestoreMap) ToPerconaServerMySQLRestoreMapOutputWithContext(ctx context.Context) PerconaServerMySQLRestoreMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaServerMySQLRestoreMapOutput)
}

type PerconaServerMySQLRestoreOutput struct{ *pulumi.OutputState }

func (PerconaServerMySQLRestoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaServerMySQLRestore)(nil)).Elem()
}

func (o PerconaServerMySQLRestoreOutput) ToPerconaServerMySQLRestoreOutput() PerconaServerMySQLRestoreOutput {
	return o
}

func (o PerconaServerMySQLRestoreOutput) ToPerconaServerMySQLRestoreOutputWithContext(ctx context.Context) PerconaServerMySQLRestoreOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PerconaServerMySQLRestoreOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *PerconaServerMySQLRestore) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PerconaServerMySQLRestoreOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *PerconaServerMySQLRestore) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PerconaServerMySQLRestoreOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *PerconaServerMySQLRestore) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o PerconaServerMySQLRestoreOutput) Spec() PerconaServerMySQLRestoreSpecOutput {
	return o.ApplyT(func(v *PerconaServerMySQLRestore) PerconaServerMySQLRestoreSpecOutput { return v.Spec }).(PerconaServerMySQLRestoreSpecOutput)
}

func (o PerconaServerMySQLRestoreOutput) Status() PerconaServerMySQLRestoreStatusPtrOutput {
	return o.ApplyT(func(v *PerconaServerMySQLRestore) PerconaServerMySQLRestoreStatusPtrOutput { return v.Status }).(PerconaServerMySQLRestoreStatusPtrOutput)
}

type PerconaServerMySQLRestoreArrayOutput struct{ *pulumi.OutputState }

func (PerconaServerMySQLRestoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaServerMySQLRestore)(nil)).Elem()
}

func (o PerconaServerMySQLRestoreArrayOutput) ToPerconaServerMySQLRestoreArrayOutput() PerconaServerMySQLRestoreArrayOutput {
	return o
}

func (o PerconaServerMySQLRestoreArrayOutput) ToPerconaServerMySQLRestoreArrayOutputWithContext(ctx context.Context) PerconaServerMySQLRestoreArrayOutput {
	return o
}

func (o PerconaServerMySQLRestoreArrayOutput) Index(i pulumi.IntInput) PerconaServerMySQLRestoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PerconaServerMySQLRestore {
		return vs[0].([]*PerconaServerMySQLRestore)[vs[1].(int)]
	}).(PerconaServerMySQLRestoreOutput)
}

type PerconaServerMySQLRestoreMapOutput struct{ *pulumi.OutputState }

func (PerconaServerMySQLRestoreMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaServerMySQLRestore)(nil)).Elem()
}

func (o PerconaServerMySQLRestoreMapOutput) ToPerconaServerMySQLRestoreMapOutput() PerconaServerMySQLRestoreMapOutput {
	return o
}

func (o PerconaServerMySQLRestoreMapOutput) ToPerconaServerMySQLRestoreMapOutputWithContext(ctx context.Context) PerconaServerMySQLRestoreMapOutput {
	return o
}

func (o PerconaServerMySQLRestoreMapOutput) MapIndex(k pulumi.StringInput) PerconaServerMySQLRestoreOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PerconaServerMySQLRestore {
		return vs[0].(map[string]*PerconaServerMySQLRestore)[vs[1].(string)]
	}).(PerconaServerMySQLRestoreOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaServerMySQLRestoreInput)(nil)).Elem(), &PerconaServerMySQLRestore{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaServerMySQLRestoreArrayInput)(nil)).Elem(), PerconaServerMySQLRestoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaServerMySQLRestoreMapInput)(nil)).Elem(), PerconaServerMySQLRestoreMap{})
	pulumi.RegisterOutputType(PerconaServerMySQLRestoreOutput{})
	pulumi.RegisterOutputType(PerconaServerMySQLRestoreArrayOutput{})
	pulumi.RegisterOutputType(PerconaServerMySQLRestoreMapOutput{})
}
