// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// PerconaServerMySQLRestoreList is a list of PerconaServerMySQLRestore
type PerconaServerMySQLRestoreList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of perconaservermysqlrestores. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PerconaServerMySQLRestoreTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewPerconaServerMySQLRestoreList registers a new resource with the given unique name, arguments, and options.
func NewPerconaServerMySQLRestoreList(ctx *pulumi.Context,
	name string, args *PerconaServerMySQLRestoreListArgs, opts ...pulumi.ResourceOption) (*PerconaServerMySQLRestoreList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("ps.percona.com/v1")
	args.Kind = pulumi.StringPtr("PerconaServerMySQLRestoreList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PerconaServerMySQLRestoreList
	err := ctx.RegisterResource("kubernetes:ps.percona.com/v1:PerconaServerMySQLRestoreList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPerconaServerMySQLRestoreList gets an existing PerconaServerMySQLRestoreList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPerconaServerMySQLRestoreList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PerconaServerMySQLRestoreListState, opts ...pulumi.ResourceOption) (*PerconaServerMySQLRestoreList, error) {
	var resource PerconaServerMySQLRestoreList
	err := ctx.ReadResource("kubernetes:ps.percona.com/v1:PerconaServerMySQLRestoreList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PerconaServerMySQLRestoreList resources.
type perconaServerMySQLRestoreListState struct {
}

type PerconaServerMySQLRestoreListState struct {
}

func (PerconaServerMySQLRestoreListState) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaServerMySQLRestoreListState)(nil)).Elem()
}

type perconaServerMySQLRestoreListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of perconaservermysqlrestores. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []PerconaServerMySQLRestoreType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a PerconaServerMySQLRestoreList resource.
type PerconaServerMySQLRestoreListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of perconaservermysqlrestores. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PerconaServerMySQLRestoreTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (PerconaServerMySQLRestoreListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaServerMySQLRestoreListArgs)(nil)).Elem()
}

type PerconaServerMySQLRestoreListInput interface {
	pulumi.Input

	ToPerconaServerMySQLRestoreListOutput() PerconaServerMySQLRestoreListOutput
	ToPerconaServerMySQLRestoreListOutputWithContext(ctx context.Context) PerconaServerMySQLRestoreListOutput
}

func (*PerconaServerMySQLRestoreList) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaServerMySQLRestoreList)(nil)).Elem()
}

func (i *PerconaServerMySQLRestoreList) ToPerconaServerMySQLRestoreListOutput() PerconaServerMySQLRestoreListOutput {
	return i.ToPerconaServerMySQLRestoreListOutputWithContext(context.Background())
}

func (i *PerconaServerMySQLRestoreList) ToPerconaServerMySQLRestoreListOutputWithContext(ctx context.Context) PerconaServerMySQLRestoreListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaServerMySQLRestoreListOutput)
}

// PerconaServerMySQLRestoreListArrayInput is an input type that accepts PerconaServerMySQLRestoreListArray and PerconaServerMySQLRestoreListArrayOutput values.
// You can construct a concrete instance of `PerconaServerMySQLRestoreListArrayInput` via:
//
//	PerconaServerMySQLRestoreListArray{ PerconaServerMySQLRestoreListArgs{...} }
type PerconaServerMySQLRestoreListArrayInput interface {
	pulumi.Input

	ToPerconaServerMySQLRestoreListArrayOutput() PerconaServerMySQLRestoreListArrayOutput
	ToPerconaServerMySQLRestoreListArrayOutputWithContext(context.Context) PerconaServerMySQLRestoreListArrayOutput
}

type PerconaServerMySQLRestoreListArray []PerconaServerMySQLRestoreListInput

func (PerconaServerMySQLRestoreListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaServerMySQLRestoreList)(nil)).Elem()
}

func (i PerconaServerMySQLRestoreListArray) ToPerconaServerMySQLRestoreListArrayOutput() PerconaServerMySQLRestoreListArrayOutput {
	return i.ToPerconaServerMySQLRestoreListArrayOutputWithContext(context.Background())
}

func (i PerconaServerMySQLRestoreListArray) ToPerconaServerMySQLRestoreListArrayOutputWithContext(ctx context.Context) PerconaServerMySQLRestoreListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaServerMySQLRestoreListArrayOutput)
}

// PerconaServerMySQLRestoreListMapInput is an input type that accepts PerconaServerMySQLRestoreListMap and PerconaServerMySQLRestoreListMapOutput values.
// You can construct a concrete instance of `PerconaServerMySQLRestoreListMapInput` via:
//
//	PerconaServerMySQLRestoreListMap{ "key": PerconaServerMySQLRestoreListArgs{...} }
type PerconaServerMySQLRestoreListMapInput interface {
	pulumi.Input

	ToPerconaServerMySQLRestoreListMapOutput() PerconaServerMySQLRestoreListMapOutput
	ToPerconaServerMySQLRestoreListMapOutputWithContext(context.Context) PerconaServerMySQLRestoreListMapOutput
}

type PerconaServerMySQLRestoreListMap map[string]PerconaServerMySQLRestoreListInput

func (PerconaServerMySQLRestoreListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaServerMySQLRestoreList)(nil)).Elem()
}

func (i PerconaServerMySQLRestoreListMap) ToPerconaServerMySQLRestoreListMapOutput() PerconaServerMySQLRestoreListMapOutput {
	return i.ToPerconaServerMySQLRestoreListMapOutputWithContext(context.Background())
}

func (i PerconaServerMySQLRestoreListMap) ToPerconaServerMySQLRestoreListMapOutputWithContext(ctx context.Context) PerconaServerMySQLRestoreListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaServerMySQLRestoreListMapOutput)
}

type PerconaServerMySQLRestoreListOutput struct{ *pulumi.OutputState }

func (PerconaServerMySQLRestoreListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaServerMySQLRestoreList)(nil)).Elem()
}

func (o PerconaServerMySQLRestoreListOutput) ToPerconaServerMySQLRestoreListOutput() PerconaServerMySQLRestoreListOutput {
	return o
}

func (o PerconaServerMySQLRestoreListOutput) ToPerconaServerMySQLRestoreListOutputWithContext(ctx context.Context) PerconaServerMySQLRestoreListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PerconaServerMySQLRestoreListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *PerconaServerMySQLRestoreList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of perconaservermysqlrestores. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o PerconaServerMySQLRestoreListOutput) Items() PerconaServerMySQLRestoreTypeArrayOutput {
	return o.ApplyT(func(v *PerconaServerMySQLRestoreList) PerconaServerMySQLRestoreTypeArrayOutput { return v.Items }).(PerconaServerMySQLRestoreTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PerconaServerMySQLRestoreListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *PerconaServerMySQLRestoreList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PerconaServerMySQLRestoreListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *PerconaServerMySQLRestoreList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type PerconaServerMySQLRestoreListArrayOutput struct{ *pulumi.OutputState }

func (PerconaServerMySQLRestoreListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaServerMySQLRestoreList)(nil)).Elem()
}

func (o PerconaServerMySQLRestoreListArrayOutput) ToPerconaServerMySQLRestoreListArrayOutput() PerconaServerMySQLRestoreListArrayOutput {
	return o
}

func (o PerconaServerMySQLRestoreListArrayOutput) ToPerconaServerMySQLRestoreListArrayOutputWithContext(ctx context.Context) PerconaServerMySQLRestoreListArrayOutput {
	return o
}

func (o PerconaServerMySQLRestoreListArrayOutput) Index(i pulumi.IntInput) PerconaServerMySQLRestoreListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PerconaServerMySQLRestoreList {
		return vs[0].([]*PerconaServerMySQLRestoreList)[vs[1].(int)]
	}).(PerconaServerMySQLRestoreListOutput)
}

type PerconaServerMySQLRestoreListMapOutput struct{ *pulumi.OutputState }

func (PerconaServerMySQLRestoreListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaServerMySQLRestoreList)(nil)).Elem()
}

func (o PerconaServerMySQLRestoreListMapOutput) ToPerconaServerMySQLRestoreListMapOutput() PerconaServerMySQLRestoreListMapOutput {
	return o
}

func (o PerconaServerMySQLRestoreListMapOutput) ToPerconaServerMySQLRestoreListMapOutputWithContext(ctx context.Context) PerconaServerMySQLRestoreListMapOutput {
	return o
}

func (o PerconaServerMySQLRestoreListMapOutput) MapIndex(k pulumi.StringInput) PerconaServerMySQLRestoreListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PerconaServerMySQLRestoreList {
		return vs[0].(map[string]*PerconaServerMySQLRestoreList)[vs[1].(string)]
	}).(PerconaServerMySQLRestoreListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaServerMySQLRestoreListInput)(nil)).Elem(), &PerconaServerMySQLRestoreList{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaServerMySQLRestoreListArrayInput)(nil)).Elem(), PerconaServerMySQLRestoreListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaServerMySQLRestoreListMapInput)(nil)).Elem(), PerconaServerMySQLRestoreListMap{})
	pulumi.RegisterOutputType(PerconaServerMySQLRestoreListOutput{})
	pulumi.RegisterOutputType(PerconaServerMySQLRestoreListArrayOutput{})
	pulumi.RegisterOutputType(PerconaServerMySQLRestoreListMapOutput{})
}
