// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta2

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
type StrimziPodSetPatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput   `pulumi:"metadata"`
	Spec     StrimziPodSetSpecPatchPtrOutput   `pulumi:"spec"`
	Status   StrimziPodSetStatusPatchPtrOutput `pulumi:"status"`
}

// NewStrimziPodSetPatch registers a new resource with the given unique name, arguments, and options.
func NewStrimziPodSetPatch(ctx *pulumi.Context,
	name string, args *StrimziPodSetPatchArgs, opts ...pulumi.ResourceOption) (*StrimziPodSetPatch, error) {
	if args == nil {
		args = &StrimziPodSetPatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("core.strimzi.io/v1beta2")
	args.Kind = pulumi.StringPtr("StrimziPodSet")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource StrimziPodSetPatch
	err := ctx.RegisterResource("kubernetes:core.strimzi.io/v1beta2:StrimziPodSetPatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStrimziPodSetPatch gets an existing StrimziPodSetPatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStrimziPodSetPatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StrimziPodSetPatchState, opts ...pulumi.ResourceOption) (*StrimziPodSetPatch, error) {
	var resource StrimziPodSetPatch
	err := ctx.ReadResource("kubernetes:core.strimzi.io/v1beta2:StrimziPodSetPatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StrimziPodSetPatch resources.
type strimziPodSetPatchState struct {
}

type StrimziPodSetPatchState struct {
}

func (StrimziPodSetPatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*strimziPodSetPatchState)(nil)).Elem()
}

type strimziPodSetPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *StrimziPodSetSpecPatch `pulumi:"spec"`
}

// The set of arguments for constructing a StrimziPodSetPatch resource.
type StrimziPodSetPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     StrimziPodSetSpecPatchPtrInput
}

func (StrimziPodSetPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*strimziPodSetPatchArgs)(nil)).Elem()
}

type StrimziPodSetPatchInput interface {
	pulumi.Input

	ToStrimziPodSetPatchOutput() StrimziPodSetPatchOutput
	ToStrimziPodSetPatchOutputWithContext(ctx context.Context) StrimziPodSetPatchOutput
}

func (*StrimziPodSetPatch) ElementType() reflect.Type {
	return reflect.TypeOf((**StrimziPodSetPatch)(nil)).Elem()
}

func (i *StrimziPodSetPatch) ToStrimziPodSetPatchOutput() StrimziPodSetPatchOutput {
	return i.ToStrimziPodSetPatchOutputWithContext(context.Background())
}

func (i *StrimziPodSetPatch) ToStrimziPodSetPatchOutputWithContext(ctx context.Context) StrimziPodSetPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetPatchOutput)
}

// StrimziPodSetPatchArrayInput is an input type that accepts StrimziPodSetPatchArray and StrimziPodSetPatchArrayOutput values.
// You can construct a concrete instance of `StrimziPodSetPatchArrayInput` via:
//
//	StrimziPodSetPatchArray{ StrimziPodSetPatchArgs{...} }
type StrimziPodSetPatchArrayInput interface {
	pulumi.Input

	ToStrimziPodSetPatchArrayOutput() StrimziPodSetPatchArrayOutput
	ToStrimziPodSetPatchArrayOutputWithContext(context.Context) StrimziPodSetPatchArrayOutput
}

type StrimziPodSetPatchArray []StrimziPodSetPatchInput

func (StrimziPodSetPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StrimziPodSetPatch)(nil)).Elem()
}

func (i StrimziPodSetPatchArray) ToStrimziPodSetPatchArrayOutput() StrimziPodSetPatchArrayOutput {
	return i.ToStrimziPodSetPatchArrayOutputWithContext(context.Background())
}

func (i StrimziPodSetPatchArray) ToStrimziPodSetPatchArrayOutputWithContext(ctx context.Context) StrimziPodSetPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetPatchArrayOutput)
}

// StrimziPodSetPatchMapInput is an input type that accepts StrimziPodSetPatchMap and StrimziPodSetPatchMapOutput values.
// You can construct a concrete instance of `StrimziPodSetPatchMapInput` via:
//
//	StrimziPodSetPatchMap{ "key": StrimziPodSetPatchArgs{...} }
type StrimziPodSetPatchMapInput interface {
	pulumi.Input

	ToStrimziPodSetPatchMapOutput() StrimziPodSetPatchMapOutput
	ToStrimziPodSetPatchMapOutputWithContext(context.Context) StrimziPodSetPatchMapOutput
}

type StrimziPodSetPatchMap map[string]StrimziPodSetPatchInput

func (StrimziPodSetPatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StrimziPodSetPatch)(nil)).Elem()
}

func (i StrimziPodSetPatchMap) ToStrimziPodSetPatchMapOutput() StrimziPodSetPatchMapOutput {
	return i.ToStrimziPodSetPatchMapOutputWithContext(context.Background())
}

func (i StrimziPodSetPatchMap) ToStrimziPodSetPatchMapOutputWithContext(ctx context.Context) StrimziPodSetPatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetPatchMapOutput)
}

type StrimziPodSetPatchOutput struct{ *pulumi.OutputState }

func (StrimziPodSetPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StrimziPodSetPatch)(nil)).Elem()
}

func (o StrimziPodSetPatchOutput) ToStrimziPodSetPatchOutput() StrimziPodSetPatchOutput {
	return o
}

func (o StrimziPodSetPatchOutput) ToStrimziPodSetPatchOutputWithContext(ctx context.Context) StrimziPodSetPatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o StrimziPodSetPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StrimziPodSetPatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o StrimziPodSetPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StrimziPodSetPatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o StrimziPodSetPatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *StrimziPodSetPatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o StrimziPodSetPatchOutput) Spec() StrimziPodSetSpecPatchPtrOutput {
	return o.ApplyT(func(v *StrimziPodSetPatch) StrimziPodSetSpecPatchPtrOutput { return v.Spec }).(StrimziPodSetSpecPatchPtrOutput)
}

func (o StrimziPodSetPatchOutput) Status() StrimziPodSetStatusPatchPtrOutput {
	return o.ApplyT(func(v *StrimziPodSetPatch) StrimziPodSetStatusPatchPtrOutput { return v.Status }).(StrimziPodSetStatusPatchPtrOutput)
}

type StrimziPodSetPatchArrayOutput struct{ *pulumi.OutputState }

func (StrimziPodSetPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StrimziPodSetPatch)(nil)).Elem()
}

func (o StrimziPodSetPatchArrayOutput) ToStrimziPodSetPatchArrayOutput() StrimziPodSetPatchArrayOutput {
	return o
}

func (o StrimziPodSetPatchArrayOutput) ToStrimziPodSetPatchArrayOutputWithContext(ctx context.Context) StrimziPodSetPatchArrayOutput {
	return o
}

func (o StrimziPodSetPatchArrayOutput) Index(i pulumi.IntInput) StrimziPodSetPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StrimziPodSetPatch {
		return vs[0].([]*StrimziPodSetPatch)[vs[1].(int)]
	}).(StrimziPodSetPatchOutput)
}

type StrimziPodSetPatchMapOutput struct{ *pulumi.OutputState }

func (StrimziPodSetPatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StrimziPodSetPatch)(nil)).Elem()
}

func (o StrimziPodSetPatchMapOutput) ToStrimziPodSetPatchMapOutput() StrimziPodSetPatchMapOutput {
	return o
}

func (o StrimziPodSetPatchMapOutput) ToStrimziPodSetPatchMapOutputWithContext(ctx context.Context) StrimziPodSetPatchMapOutput {
	return o
}

func (o StrimziPodSetPatchMapOutput) MapIndex(k pulumi.StringInput) StrimziPodSetPatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StrimziPodSetPatch {
		return vs[0].(map[string]*StrimziPodSetPatch)[vs[1].(string)]
	}).(StrimziPodSetPatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetPatchInput)(nil)).Elem(), &StrimziPodSetPatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetPatchArrayInput)(nil)).Elem(), StrimziPodSetPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetPatchMapInput)(nil)).Elem(), StrimziPodSetPatchMap{})
	pulumi.RegisterOutputType(StrimziPodSetPatchOutput{})
	pulumi.RegisterOutputType(StrimziPodSetPatchArrayOutput{})
	pulumi.RegisterOutputType(StrimziPodSetPatchMapOutput{})
}
