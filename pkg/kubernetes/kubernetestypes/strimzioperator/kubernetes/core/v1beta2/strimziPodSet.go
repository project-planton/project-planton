// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta2

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type StrimziPodSet struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput      `pulumi:"metadata"`
	Spec     StrimziPodSetSpecOutput      `pulumi:"spec"`
	Status   StrimziPodSetStatusPtrOutput `pulumi:"status"`
}

// NewStrimziPodSet registers a new resource with the given unique name, arguments, and options.
func NewStrimziPodSet(ctx *pulumi.Context,
	name string, args *StrimziPodSetArgs, opts ...pulumi.ResourceOption) (*StrimziPodSet, error) {
	if args == nil {
		args = &StrimziPodSetArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("core.strimzi.io/v1beta2")
	args.Kind = pulumi.StringPtr("StrimziPodSet")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource StrimziPodSet
	err := ctx.RegisterResource("kubernetes:core.strimzi.io/v1beta2:StrimziPodSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStrimziPodSet gets an existing StrimziPodSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStrimziPodSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StrimziPodSetState, opts ...pulumi.ResourceOption) (*StrimziPodSet, error) {
	var resource StrimziPodSet
	err := ctx.ReadResource("kubernetes:core.strimzi.io/v1beta2:StrimziPodSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StrimziPodSet resources.
type strimziPodSetState struct {
}

type StrimziPodSetState struct {
}

func (StrimziPodSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*strimziPodSetState)(nil)).Elem()
}

type strimziPodSetArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *StrimziPodSetSpec `pulumi:"spec"`
}

// The set of arguments for constructing a StrimziPodSet resource.
type StrimziPodSetArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     StrimziPodSetSpecPtrInput
}

func (StrimziPodSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*strimziPodSetArgs)(nil)).Elem()
}

type StrimziPodSetInput interface {
	pulumi.Input

	ToStrimziPodSetOutput() StrimziPodSetOutput
	ToStrimziPodSetOutputWithContext(ctx context.Context) StrimziPodSetOutput
}

func (*StrimziPodSet) ElementType() reflect.Type {
	return reflect.TypeOf((**StrimziPodSet)(nil)).Elem()
}

func (i *StrimziPodSet) ToStrimziPodSetOutput() StrimziPodSetOutput {
	return i.ToStrimziPodSetOutputWithContext(context.Background())
}

func (i *StrimziPodSet) ToStrimziPodSetOutputWithContext(ctx context.Context) StrimziPodSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetOutput)
}

// StrimziPodSetArrayInput is an input type that accepts StrimziPodSetArray and StrimziPodSetArrayOutput values.
// You can construct a concrete instance of `StrimziPodSetArrayInput` via:
//
//	StrimziPodSetArray{ StrimziPodSetArgs{...} }
type StrimziPodSetArrayInput interface {
	pulumi.Input

	ToStrimziPodSetArrayOutput() StrimziPodSetArrayOutput
	ToStrimziPodSetArrayOutputWithContext(context.Context) StrimziPodSetArrayOutput
}

type StrimziPodSetArray []StrimziPodSetInput

func (StrimziPodSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StrimziPodSet)(nil)).Elem()
}

func (i StrimziPodSetArray) ToStrimziPodSetArrayOutput() StrimziPodSetArrayOutput {
	return i.ToStrimziPodSetArrayOutputWithContext(context.Background())
}

func (i StrimziPodSetArray) ToStrimziPodSetArrayOutputWithContext(ctx context.Context) StrimziPodSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetArrayOutput)
}

// StrimziPodSetMapInput is an input type that accepts StrimziPodSetMap and StrimziPodSetMapOutput values.
// You can construct a concrete instance of `StrimziPodSetMapInput` via:
//
//	StrimziPodSetMap{ "key": StrimziPodSetArgs{...} }
type StrimziPodSetMapInput interface {
	pulumi.Input

	ToStrimziPodSetMapOutput() StrimziPodSetMapOutput
	ToStrimziPodSetMapOutputWithContext(context.Context) StrimziPodSetMapOutput
}

type StrimziPodSetMap map[string]StrimziPodSetInput

func (StrimziPodSetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StrimziPodSet)(nil)).Elem()
}

func (i StrimziPodSetMap) ToStrimziPodSetMapOutput() StrimziPodSetMapOutput {
	return i.ToStrimziPodSetMapOutputWithContext(context.Background())
}

func (i StrimziPodSetMap) ToStrimziPodSetMapOutputWithContext(ctx context.Context) StrimziPodSetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetMapOutput)
}

type StrimziPodSetOutput struct{ *pulumi.OutputState }

func (StrimziPodSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StrimziPodSet)(nil)).Elem()
}

func (o StrimziPodSetOutput) ToStrimziPodSetOutput() StrimziPodSetOutput {
	return o
}

func (o StrimziPodSetOutput) ToStrimziPodSetOutputWithContext(ctx context.Context) StrimziPodSetOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o StrimziPodSetOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *StrimziPodSet) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o StrimziPodSetOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *StrimziPodSet) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o StrimziPodSetOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *StrimziPodSet) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o StrimziPodSetOutput) Spec() StrimziPodSetSpecOutput {
	return o.ApplyT(func(v *StrimziPodSet) StrimziPodSetSpecOutput { return v.Spec }).(StrimziPodSetSpecOutput)
}

func (o StrimziPodSetOutput) Status() StrimziPodSetStatusPtrOutput {
	return o.ApplyT(func(v *StrimziPodSet) StrimziPodSetStatusPtrOutput { return v.Status }).(StrimziPodSetStatusPtrOutput)
}

type StrimziPodSetArrayOutput struct{ *pulumi.OutputState }

func (StrimziPodSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StrimziPodSet)(nil)).Elem()
}

func (o StrimziPodSetArrayOutput) ToStrimziPodSetArrayOutput() StrimziPodSetArrayOutput {
	return o
}

func (o StrimziPodSetArrayOutput) ToStrimziPodSetArrayOutputWithContext(ctx context.Context) StrimziPodSetArrayOutput {
	return o
}

func (o StrimziPodSetArrayOutput) Index(i pulumi.IntInput) StrimziPodSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StrimziPodSet {
		return vs[0].([]*StrimziPodSet)[vs[1].(int)]
	}).(StrimziPodSetOutput)
}

type StrimziPodSetMapOutput struct{ *pulumi.OutputState }

func (StrimziPodSetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StrimziPodSet)(nil)).Elem()
}

func (o StrimziPodSetMapOutput) ToStrimziPodSetMapOutput() StrimziPodSetMapOutput {
	return o
}

func (o StrimziPodSetMapOutput) ToStrimziPodSetMapOutputWithContext(ctx context.Context) StrimziPodSetMapOutput {
	return o
}

func (o StrimziPodSetMapOutput) MapIndex(k pulumi.StringInput) StrimziPodSetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StrimziPodSet {
		return vs[0].(map[string]*StrimziPodSet)[vs[1].(string)]
	}).(StrimziPodSetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetInput)(nil)).Elem(), &StrimziPodSet{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetArrayInput)(nil)).Elem(), StrimziPodSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetMapInput)(nil)).Elem(), StrimziPodSetMap{})
	pulumi.RegisterOutputType(StrimziPodSetOutput{})
	pulumi.RegisterOutputType(StrimziPodSetArrayOutput{})
	pulumi.RegisterOutputType(StrimziPodSetMapOutput{})
}
