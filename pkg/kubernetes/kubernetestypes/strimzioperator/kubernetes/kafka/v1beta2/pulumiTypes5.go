// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta2

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Template for Kafka `StrimziPodSet` resource.
type KafkaSpecKafkaTemplatePodSetPatch struct {
	Metadata *KafkaSpecKafkaTemplatePodSetMetadataPatch `pulumi:"metadata"`
}

// KafkaSpecKafkaTemplatePodSetPatchInput is an input type that accepts KafkaSpecKafkaTemplatePodSetPatchArgs and KafkaSpecKafkaTemplatePodSetPatchOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodSetPatchInput` via:
//
//	KafkaSpecKafkaTemplatePodSetPatchArgs{...}
type KafkaSpecKafkaTemplatePodSetPatchInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodSetPatchOutput() KafkaSpecKafkaTemplatePodSetPatchOutput
	ToKafkaSpecKafkaTemplatePodSetPatchOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodSetPatchOutput
}

// Template for Kafka `StrimziPodSet` resource.
type KafkaSpecKafkaTemplatePodSetPatchArgs struct {
	Metadata KafkaSpecKafkaTemplatePodSetMetadataPatchPtrInput `pulumi:"metadata"`
}

func (KafkaSpecKafkaTemplatePodSetPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodSetPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodSetPatchArgs) ToKafkaSpecKafkaTemplatePodSetPatchOutput() KafkaSpecKafkaTemplatePodSetPatchOutput {
	return i.ToKafkaSpecKafkaTemplatePodSetPatchOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodSetPatchArgs) ToKafkaSpecKafkaTemplatePodSetPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodSetPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodSetPatchOutput)
}

func (i KafkaSpecKafkaTemplatePodSetPatchArgs) ToKafkaSpecKafkaTemplatePodSetPatchPtrOutput() KafkaSpecKafkaTemplatePodSetPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodSetPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodSetPatchArgs) ToKafkaSpecKafkaTemplatePodSetPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodSetPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodSetPatchOutput).ToKafkaSpecKafkaTemplatePodSetPatchPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplatePodSetPatchPtrInput is an input type that accepts KafkaSpecKafkaTemplatePodSetPatchArgs, KafkaSpecKafkaTemplatePodSetPatchPtr and KafkaSpecKafkaTemplatePodSetPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodSetPatchPtrInput` via:
//
//	        KafkaSpecKafkaTemplatePodSetPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplatePodSetPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodSetPatchPtrOutput() KafkaSpecKafkaTemplatePodSetPatchPtrOutput
	ToKafkaSpecKafkaTemplatePodSetPatchPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodSetPatchPtrOutput
}

type kafkaSpecKafkaTemplatePodSetPatchPtrType KafkaSpecKafkaTemplatePodSetPatchArgs

func KafkaSpecKafkaTemplatePodSetPatchPtr(v *KafkaSpecKafkaTemplatePodSetPatchArgs) KafkaSpecKafkaTemplatePodSetPatchPtrInput {
	return (*kafkaSpecKafkaTemplatePodSetPatchPtrType)(v)
}

func (*kafkaSpecKafkaTemplatePodSetPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodSetPatch)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplatePodSetPatchPtrType) ToKafkaSpecKafkaTemplatePodSetPatchPtrOutput() KafkaSpecKafkaTemplatePodSetPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodSetPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplatePodSetPatchPtrType) ToKafkaSpecKafkaTemplatePodSetPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodSetPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodSetPatchPtrOutput)
}

// Template for Kafka `StrimziPodSet` resource.
type KafkaSpecKafkaTemplatePodSetPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodSetPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodSetPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodSetPatchOutput) ToKafkaSpecKafkaTemplatePodSetPatchOutput() KafkaSpecKafkaTemplatePodSetPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodSetPatchOutput) ToKafkaSpecKafkaTemplatePodSetPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodSetPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodSetPatchOutput) ToKafkaSpecKafkaTemplatePodSetPatchPtrOutput() KafkaSpecKafkaTemplatePodSetPatchPtrOutput {
	return o.ToKafkaSpecKafkaTemplatePodSetPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplatePodSetPatchOutput) ToKafkaSpecKafkaTemplatePodSetPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodSetPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplatePodSetPatch) *KafkaSpecKafkaTemplatePodSetPatch {
		return &v
	}).(KafkaSpecKafkaTemplatePodSetPatchPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodSetPatchOutput) Metadata() KafkaSpecKafkaTemplatePodSetMetadataPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodSetPatch) *KafkaSpecKafkaTemplatePodSetMetadataPatch {
		return v.Metadata
	}).(KafkaSpecKafkaTemplatePodSetMetadataPatchPtrOutput)
}

type KafkaSpecKafkaTemplatePodSetPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodSetPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodSetPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodSetPatchPtrOutput) ToKafkaSpecKafkaTemplatePodSetPatchPtrOutput() KafkaSpecKafkaTemplatePodSetPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodSetPatchPtrOutput) ToKafkaSpecKafkaTemplatePodSetPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodSetPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodSetPatchPtrOutput) Elem() KafkaSpecKafkaTemplatePodSetPatchOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodSetPatch) KafkaSpecKafkaTemplatePodSetPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplatePodSetPatch
		return ret
	}).(KafkaSpecKafkaTemplatePodSetPatchOutput)
}

func (o KafkaSpecKafkaTemplatePodSetPatchPtrOutput) Metadata() KafkaSpecKafkaTemplatePodSetMetadataPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodSetPatch) *KafkaSpecKafkaTemplatePodSetMetadataPatch {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaSpecKafkaTemplatePodSetMetadataPatchPtrOutput)
}

type KafkaSpecKafkaTemplatePodTolerations struct {
	Effect            *string `pulumi:"effect"`
	Key               *string `pulumi:"key"`
	Operator          *string `pulumi:"operator"`
	TolerationSeconds *int    `pulumi:"tolerationSeconds"`
	Value             *string `pulumi:"value"`
}

// KafkaSpecKafkaTemplatePodTolerationsInput is an input type that accepts KafkaSpecKafkaTemplatePodTolerationsArgs and KafkaSpecKafkaTemplatePodTolerationsOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodTolerationsInput` via:
//
//	KafkaSpecKafkaTemplatePodTolerationsArgs{...}
type KafkaSpecKafkaTemplatePodTolerationsInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodTolerationsOutput() KafkaSpecKafkaTemplatePodTolerationsOutput
	ToKafkaSpecKafkaTemplatePodTolerationsOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodTolerationsOutput
}

type KafkaSpecKafkaTemplatePodTolerationsArgs struct {
	Effect            pulumi.StringPtrInput `pulumi:"effect"`
	Key               pulumi.StringPtrInput `pulumi:"key"`
	Operator          pulumi.StringPtrInput `pulumi:"operator"`
	TolerationSeconds pulumi.IntPtrInput    `pulumi:"tolerationSeconds"`
	Value             pulumi.StringPtrInput `pulumi:"value"`
}

func (KafkaSpecKafkaTemplatePodTolerationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodTolerations)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodTolerationsArgs) ToKafkaSpecKafkaTemplatePodTolerationsOutput() KafkaSpecKafkaTemplatePodTolerationsOutput {
	return i.ToKafkaSpecKafkaTemplatePodTolerationsOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodTolerationsArgs) ToKafkaSpecKafkaTemplatePodTolerationsOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTolerationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodTolerationsOutput)
}

// KafkaSpecKafkaTemplatePodTolerationsArrayInput is an input type that accepts KafkaSpecKafkaTemplatePodTolerationsArray and KafkaSpecKafkaTemplatePodTolerationsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodTolerationsArrayInput` via:
//
//	KafkaSpecKafkaTemplatePodTolerationsArray{ KafkaSpecKafkaTemplatePodTolerationsArgs{...} }
type KafkaSpecKafkaTemplatePodTolerationsArrayInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodTolerationsArrayOutput() KafkaSpecKafkaTemplatePodTolerationsArrayOutput
	ToKafkaSpecKafkaTemplatePodTolerationsArrayOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodTolerationsArrayOutput
}

type KafkaSpecKafkaTemplatePodTolerationsArray []KafkaSpecKafkaTemplatePodTolerationsInput

func (KafkaSpecKafkaTemplatePodTolerationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodTolerations)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodTolerationsArray) ToKafkaSpecKafkaTemplatePodTolerationsArrayOutput() KafkaSpecKafkaTemplatePodTolerationsArrayOutput {
	return i.ToKafkaSpecKafkaTemplatePodTolerationsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodTolerationsArray) ToKafkaSpecKafkaTemplatePodTolerationsArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTolerationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodTolerationsArrayOutput)
}

type KafkaSpecKafkaTemplatePodTolerationsOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodTolerationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodTolerations)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodTolerationsOutput) ToKafkaSpecKafkaTemplatePodTolerationsOutput() KafkaSpecKafkaTemplatePodTolerationsOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTolerationsOutput) ToKafkaSpecKafkaTemplatePodTolerationsOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTolerationsOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTolerationsOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTolerations) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTolerationsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTolerations) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTolerationsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTolerations) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTolerationsOutput) TolerationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTolerations) *int { return v.TolerationSeconds }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTolerationsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTolerations) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTemplatePodTolerationsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodTolerationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodTolerations)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodTolerationsArrayOutput) ToKafkaSpecKafkaTemplatePodTolerationsArrayOutput() KafkaSpecKafkaTemplatePodTolerationsArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTolerationsArrayOutput) ToKafkaSpecKafkaTemplatePodTolerationsArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTolerationsArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTolerationsArrayOutput) Index(i pulumi.IntInput) KafkaSpecKafkaTemplatePodTolerationsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecKafkaTemplatePodTolerations {
		return vs[0].([]KafkaSpecKafkaTemplatePodTolerations)[vs[1].(int)]
	}).(KafkaSpecKafkaTemplatePodTolerationsOutput)
}

type KafkaSpecKafkaTemplatePodTolerationsPatch struct {
	Effect            *string `pulumi:"effect"`
	Key               *string `pulumi:"key"`
	Operator          *string `pulumi:"operator"`
	TolerationSeconds *int    `pulumi:"tolerationSeconds"`
	Value             *string `pulumi:"value"`
}

// KafkaSpecKafkaTemplatePodTolerationsPatchInput is an input type that accepts KafkaSpecKafkaTemplatePodTolerationsPatchArgs and KafkaSpecKafkaTemplatePodTolerationsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodTolerationsPatchInput` via:
//
//	KafkaSpecKafkaTemplatePodTolerationsPatchArgs{...}
type KafkaSpecKafkaTemplatePodTolerationsPatchInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodTolerationsPatchOutput() KafkaSpecKafkaTemplatePodTolerationsPatchOutput
	ToKafkaSpecKafkaTemplatePodTolerationsPatchOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodTolerationsPatchOutput
}

type KafkaSpecKafkaTemplatePodTolerationsPatchArgs struct {
	Effect            pulumi.StringPtrInput `pulumi:"effect"`
	Key               pulumi.StringPtrInput `pulumi:"key"`
	Operator          pulumi.StringPtrInput `pulumi:"operator"`
	TolerationSeconds pulumi.IntPtrInput    `pulumi:"tolerationSeconds"`
	Value             pulumi.StringPtrInput `pulumi:"value"`
}

func (KafkaSpecKafkaTemplatePodTolerationsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodTolerationsPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodTolerationsPatchArgs) ToKafkaSpecKafkaTemplatePodTolerationsPatchOutput() KafkaSpecKafkaTemplatePodTolerationsPatchOutput {
	return i.ToKafkaSpecKafkaTemplatePodTolerationsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodTolerationsPatchArgs) ToKafkaSpecKafkaTemplatePodTolerationsPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTolerationsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodTolerationsPatchOutput)
}

// KafkaSpecKafkaTemplatePodTolerationsPatchArrayInput is an input type that accepts KafkaSpecKafkaTemplatePodTolerationsPatchArray and KafkaSpecKafkaTemplatePodTolerationsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodTolerationsPatchArrayInput` via:
//
//	KafkaSpecKafkaTemplatePodTolerationsPatchArray{ KafkaSpecKafkaTemplatePodTolerationsPatchArgs{...} }
type KafkaSpecKafkaTemplatePodTolerationsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodTolerationsPatchArrayOutput() KafkaSpecKafkaTemplatePodTolerationsPatchArrayOutput
	ToKafkaSpecKafkaTemplatePodTolerationsPatchArrayOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodTolerationsPatchArrayOutput
}

type KafkaSpecKafkaTemplatePodTolerationsPatchArray []KafkaSpecKafkaTemplatePodTolerationsPatchInput

func (KafkaSpecKafkaTemplatePodTolerationsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodTolerationsPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodTolerationsPatchArray) ToKafkaSpecKafkaTemplatePodTolerationsPatchArrayOutput() KafkaSpecKafkaTemplatePodTolerationsPatchArrayOutput {
	return i.ToKafkaSpecKafkaTemplatePodTolerationsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodTolerationsPatchArray) ToKafkaSpecKafkaTemplatePodTolerationsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTolerationsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodTolerationsPatchArrayOutput)
}

type KafkaSpecKafkaTemplatePodTolerationsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodTolerationsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodTolerationsPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodTolerationsPatchOutput) ToKafkaSpecKafkaTemplatePodTolerationsPatchOutput() KafkaSpecKafkaTemplatePodTolerationsPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTolerationsPatchOutput) ToKafkaSpecKafkaTemplatePodTolerationsPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTolerationsPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTolerationsPatchOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTolerationsPatch) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTolerationsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTolerationsPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTolerationsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTolerationsPatch) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTolerationsPatchOutput) TolerationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTolerationsPatch) *int { return v.TolerationSeconds }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTolerationsPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTolerationsPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTemplatePodTolerationsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodTolerationsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodTolerationsPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodTolerationsPatchArrayOutput) ToKafkaSpecKafkaTemplatePodTolerationsPatchArrayOutput() KafkaSpecKafkaTemplatePodTolerationsPatchArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTolerationsPatchArrayOutput) ToKafkaSpecKafkaTemplatePodTolerationsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTolerationsPatchArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTolerationsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecKafkaTemplatePodTolerationsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecKafkaTemplatePodTolerationsPatch {
		return vs[0].([]KafkaSpecKafkaTemplatePodTolerationsPatch)[vs[1].(int)]
	}).(KafkaSpecKafkaTemplatePodTolerationsPatchOutput)
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraints struct {
	LabelSelector      *KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelector `pulumi:"labelSelector"`
	MatchLabelKeys     []string                                                         `pulumi:"matchLabelKeys"`
	MaxSkew            *int                                                             `pulumi:"maxSkew"`
	MinDomains         *int                                                             `pulumi:"minDomains"`
	NodeAffinityPolicy *string                                                          `pulumi:"nodeAffinityPolicy"`
	NodeTaintsPolicy   *string                                                          `pulumi:"nodeTaintsPolicy"`
	TopologyKey        *string                                                          `pulumi:"topologyKey"`
	WhenUnsatisfiable  *string                                                          `pulumi:"whenUnsatisfiable"`
}

// KafkaSpecKafkaTemplatePodTopologySpreadConstraintsInput is an input type that accepts KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArgs and KafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodTopologySpreadConstraintsInput` via:
//
//	KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArgs{...}
type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput
	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArgs struct {
	LabelSelector      KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrInput `pulumi:"labelSelector"`
	MatchLabelKeys     pulumi.StringArrayInput                                                 `pulumi:"matchLabelKeys"`
	MaxSkew            pulumi.IntPtrInput                                                      `pulumi:"maxSkew"`
	MinDomains         pulumi.IntPtrInput                                                      `pulumi:"minDomains"`
	NodeAffinityPolicy pulumi.StringPtrInput                                                   `pulumi:"nodeAffinityPolicy"`
	NodeTaintsPolicy   pulumi.StringPtrInput                                                   `pulumi:"nodeTaintsPolicy"`
	TopologyKey        pulumi.StringPtrInput                                                   `pulumi:"topologyKey"`
	WhenUnsatisfiable  pulumi.StringPtrInput                                                   `pulumi:"whenUnsatisfiable"`
}

func (KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraints)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArgs) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput {
	return i.ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArgs) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput)
}

// KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayInput is an input type that accepts KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArray and KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayInput` via:
//
//	KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArray{ KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArgs{...} }
type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayOutput
	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayOutput
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArray []KafkaSpecKafkaTemplatePodTopologySpreadConstraintsInput

func (KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodTopologySpreadConstraints)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArray) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayOutput {
	return i.ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArray) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayOutput)
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraints)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput) LabelSelector() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraints) *KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelector {
		return v.LabelSelector
	}).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraints) []string { return v.MatchLabelKeys }).(pulumi.StringArrayOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput) MaxSkew() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraints) *int { return v.MaxSkew }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput) MinDomains() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraints) *int { return v.MinDomains }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput) NodeAffinityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraints) *string { return v.NodeAffinityPolicy }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput) NodeTaintsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraints) *string { return v.NodeTaintsPolicy }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraints) *string { return v.TopologyKey }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput) WhenUnsatisfiable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraints) *string { return v.WhenUnsatisfiable }).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodTopologySpreadConstraints)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayOutput) Index(i pulumi.IntInput) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecKafkaTemplatePodTopologySpreadConstraints {
		return vs[0].([]KafkaSpecKafkaTemplatePodTopologySpreadConstraints)[vs[1].(int)]
	}).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput)
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelector struct {
	MatchExpressions []KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                                                                 `pulumi:"matchLabels"`
}

// KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorInput is an input type that accepts KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorArgs and KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorInput` via:
//
//	KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorArgs{...}
type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutput
	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutput
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorArgs struct {
	MatchExpressions KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                                                                     `pulumi:"matchLabels"`
}

func (KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelector)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorArgs) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutput {
	return i.ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorArgs) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutput)
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorArgs) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorArgs) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutput).ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrInput is an input type that accepts KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorArgs, KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtr and KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrInput` via:
//
//	        KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput
	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput
}

type kafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrType KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorArgs

func KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtr(v *KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorArgs) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrInput {
	return (*kafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrType)(v)
}

func (*kafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelector)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrType) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrType) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput)
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelector)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput {
	return o.ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelector) *KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelector {
		return &v
	}).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutput) MatchExpressions() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelector) []KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelector)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput) Elem() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelector) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelector {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelector
		return ret
	}).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput) MatchExpressions() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelector) []KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsInput is an input type that accepts KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs and KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsInput` via:
//
//	KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs{...}
type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput
	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput {
	return i.ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput)
}

// KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayInput is an input type that accepts KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArray and KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayInput` via:
//
//	KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArray{ KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs{...} }
type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput
	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArray []KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsInput

func (KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArray) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput {
	return i.ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArray) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput)
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions {
		return vs[0].([]KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput)
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchInput is an input type that accepts KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArgs and KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchInput` via:
//
//	KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArgs{...}
type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput
	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArgs) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput {
	return i.ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArgs) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput)
}

// KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayInput is an input type that accepts KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArray and KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayInput` via:
//
//	KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArray{ KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArgs{...} }
type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput
	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArray []KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchInput

func (KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArray) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput {
	return i.ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArray) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput)
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch {
		return vs[0].([]KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput)
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatch struct {
	MatchExpressions []KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                                                                      `pulumi:"matchLabels"`
}

// KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchInput is an input type that accepts KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs and KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchInput` via:
//
//	KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs{...}
type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput
	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs struct {
	MatchExpressions KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                                                                          `pulumi:"matchLabels"`
}

func (KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput {
	return i.ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput)
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput).ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrInput is an input type that accepts KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs, KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtr and KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrInput` via:
//
//	        KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput
	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput
}

type kafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrType KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs

func KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtr(v *KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrInput {
	return (*kafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrType)(v)
}

func (*kafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatch)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrType) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrType) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput)
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput {
	return o.ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatch) *KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatch {
		return &v
	}).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput) MatchExpressions() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatch) []KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatch) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput) Elem() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatch) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatch
		return ret
	}).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput) MatchExpressions() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatch) []KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatch struct {
	LabelSelector      *KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatch `pulumi:"labelSelector"`
	MatchLabelKeys     []string                                                              `pulumi:"matchLabelKeys"`
	MaxSkew            *int                                                                  `pulumi:"maxSkew"`
	MinDomains         *int                                                                  `pulumi:"minDomains"`
	NodeAffinityPolicy *string                                                               `pulumi:"nodeAffinityPolicy"`
	NodeTaintsPolicy   *string                                                               `pulumi:"nodeTaintsPolicy"`
	TopologyKey        *string                                                               `pulumi:"topologyKey"`
	WhenUnsatisfiable  *string                                                               `pulumi:"whenUnsatisfiable"`
}

// KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchInput is an input type that accepts KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArgs and KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchInput` via:
//
//	KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArgs{...}
type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput
	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArgs struct {
	LabelSelector      KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrInput `pulumi:"labelSelector"`
	MatchLabelKeys     pulumi.StringArrayInput                                                      `pulumi:"matchLabelKeys"`
	MaxSkew            pulumi.IntPtrInput                                                           `pulumi:"maxSkew"`
	MinDomains         pulumi.IntPtrInput                                                           `pulumi:"minDomains"`
	NodeAffinityPolicy pulumi.StringPtrInput                                                        `pulumi:"nodeAffinityPolicy"`
	NodeTaintsPolicy   pulumi.StringPtrInput                                                        `pulumi:"nodeTaintsPolicy"`
	TopologyKey        pulumi.StringPtrInput                                                        `pulumi:"topologyKey"`
	WhenUnsatisfiable  pulumi.StringPtrInput                                                        `pulumi:"whenUnsatisfiable"`
}

func (KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArgs) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput {
	return i.ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArgs) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput)
}

// KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayInput is an input type that accepts KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArray and KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayInput` via:
//
//	KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArray{ KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArgs{...} }
type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayOutput
	ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayOutput
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArray []KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchInput

func (KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArray) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayOutput {
	return i.ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArray) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayOutput)
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput) LabelSelector() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatch) *KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatch {
		return v.LabelSelector
	}).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatch) []string { return v.MatchLabelKeys }).(pulumi.StringArrayOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput) MaxSkew() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatch) *int { return v.MaxSkew }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput) MinDomains() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatch) *int { return v.MinDomains }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput) NodeAffinityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatch) *string { return v.NodeAffinityPolicy }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput) NodeTaintsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatch) *string { return v.NodeTaintsPolicy }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatch) *string { return v.TopologyKey }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput) WhenUnsatisfiable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatch) *string { return v.WhenUnsatisfiable }).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayOutput() KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayOutput) ToKafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatch {
		return vs[0].([]KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatch)[vs[1].(int)]
	}).(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput)
}

type KafkaSpecKafkaTemplatePodVolumes struct {
	ConfigMap *KafkaSpecKafkaTemplatePodVolumesConfigMap `pulumi:"configMap"`
	Csi       *KafkaSpecKafkaTemplatePodVolumesCsi       `pulumi:"csi"`
	EmptyDir  *KafkaSpecKafkaTemplatePodVolumesEmptyDir  `pulumi:"emptyDir"`
	Image     *KafkaSpecKafkaTemplatePodVolumesImage     `pulumi:"image"`
	// Name to use for the volume. Required.
	Name                  *string                                                `pulumi:"name"`
	PersistentVolumeClaim *KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaim `pulumi:"persistentVolumeClaim"`
	Secret                *KafkaSpecKafkaTemplatePodVolumesSecret                `pulumi:"secret"`
}

// KafkaSpecKafkaTemplatePodVolumesInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesArgs and KafkaSpecKafkaTemplatePodVolumesOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesArgs{...}
type KafkaSpecKafkaTemplatePodVolumesInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesOutput() KafkaSpecKafkaTemplatePodVolumesOutput
	ToKafkaSpecKafkaTemplatePodVolumesOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesOutput
}

type KafkaSpecKafkaTemplatePodVolumesArgs struct {
	ConfigMap KafkaSpecKafkaTemplatePodVolumesConfigMapPtrInput `pulumi:"configMap"`
	Csi       KafkaSpecKafkaTemplatePodVolumesCsiPtrInput       `pulumi:"csi"`
	EmptyDir  KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrInput  `pulumi:"emptyDir"`
	Image     KafkaSpecKafkaTemplatePodVolumesImagePtrInput     `pulumi:"image"`
	// Name to use for the volume. Required.
	Name                  pulumi.StringPtrInput                                         `pulumi:"name"`
	PersistentVolumeClaim KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrInput `pulumi:"persistentVolumeClaim"`
	Secret                KafkaSpecKafkaTemplatePodVolumesSecretPtrInput                `pulumi:"secret"`
}

func (KafkaSpecKafkaTemplatePodVolumesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumes)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesArgs) ToKafkaSpecKafkaTemplatePodVolumesOutput() KafkaSpecKafkaTemplatePodVolumesOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesArgs) ToKafkaSpecKafkaTemplatePodVolumesOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesOutput)
}

// KafkaSpecKafkaTemplatePodVolumesArrayInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesArray and KafkaSpecKafkaTemplatePodVolumesArrayOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesArrayInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesArray{ KafkaSpecKafkaTemplatePodVolumesArgs{...} }
type KafkaSpecKafkaTemplatePodVolumesArrayInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesArrayOutput() KafkaSpecKafkaTemplatePodVolumesArrayOutput
	ToKafkaSpecKafkaTemplatePodVolumesArrayOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesArrayOutput
}

type KafkaSpecKafkaTemplatePodVolumesArray []KafkaSpecKafkaTemplatePodVolumesInput

func (KafkaSpecKafkaTemplatePodVolumesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodVolumes)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesArray) ToKafkaSpecKafkaTemplatePodVolumesArrayOutput() KafkaSpecKafkaTemplatePodVolumesArrayOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesArrayOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesArray) ToKafkaSpecKafkaTemplatePodVolumesArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesArrayOutput)
}

type KafkaSpecKafkaTemplatePodVolumesOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumes)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesOutput) ToKafkaSpecKafkaTemplatePodVolumesOutput() KafkaSpecKafkaTemplatePodVolumesOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesOutput) ToKafkaSpecKafkaTemplatePodVolumesOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesOutput) ConfigMap() KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumes) *KafkaSpecKafkaTemplatePodVolumesConfigMap {
		return v.ConfigMap
	}).(KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesOutput) Csi() KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumes) *KafkaSpecKafkaTemplatePodVolumesCsi { return v.Csi }).(KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesOutput) EmptyDir() KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumes) *KafkaSpecKafkaTemplatePodVolumesEmptyDir { return v.EmptyDir }).(KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesOutput) Image() KafkaSpecKafkaTemplatePodVolumesImagePtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumes) *KafkaSpecKafkaTemplatePodVolumesImage { return v.Image }).(KafkaSpecKafkaTemplatePodVolumesImagePtrOutput)
}

// Name to use for the volume. Required.
func (o KafkaSpecKafkaTemplatePodVolumesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumes) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesOutput) PersistentVolumeClaim() KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumes) *KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaim {
		return v.PersistentVolumeClaim
	}).(KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesOutput) Secret() KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumes) *KafkaSpecKafkaTemplatePodVolumesSecret { return v.Secret }).(KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodVolumes)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesArrayOutput) ToKafkaSpecKafkaTemplatePodVolumesArrayOutput() KafkaSpecKafkaTemplatePodVolumesArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesArrayOutput) ToKafkaSpecKafkaTemplatePodVolumesArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesArrayOutput) Index(i pulumi.IntInput) KafkaSpecKafkaTemplatePodVolumesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecKafkaTemplatePodVolumes {
		return vs[0].([]KafkaSpecKafkaTemplatePodVolumes)[vs[1].(int)]
	}).(KafkaSpecKafkaTemplatePodVolumesOutput)
}

// `ConfigMap` to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesConfigMap struct {
	DefaultMode *int                                             `pulumi:"defaultMode"`
	Items       []KafkaSpecKafkaTemplatePodVolumesConfigMapItems `pulumi:"items"`
	Name        *string                                          `pulumi:"name"`
	Optional    *bool                                            `pulumi:"optional"`
}

// KafkaSpecKafkaTemplatePodVolumesConfigMapInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesConfigMap and KafkaSpecKafkaTemplatePodVolumesConfigMapOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesConfigMapInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesConfigMap{ "key": KafkaSpecKafkaTemplatePodVolumesConfigArgs{...} }
type KafkaSpecKafkaTemplatePodVolumesConfigMapInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesConfigMapOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapOutput
	ToKafkaSpecKafkaTemplatePodVolumesConfigMapOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapOutput
}

// `ConfigMap` to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesConfigMapArgs struct {
	DefaultMode pulumi.IntPtrInput                                       `pulumi:"defaultMode"`
	Items       KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayInput `pulumi:"items"`
	Name        pulumi.StringPtrInput                                    `pulumi:"name"`
	Optional    pulumi.BoolPtrInput                                      `pulumi:"optional"`
}

func (KafkaSpecKafkaTemplatePodVolumesConfigMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesConfigMap)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesConfigMapArgs) ToKafkaSpecKafkaTemplatePodVolumesConfigMapOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesConfigMapOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesConfigMapArgs) ToKafkaSpecKafkaTemplatePodVolumesConfigMapOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesConfigMapOutput)
}

func (i KafkaSpecKafkaTemplatePodVolumesConfigMapArgs) ToKafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesConfigMapArgs) ToKafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesConfigMapOutput).ToKafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplatePodVolumesConfigMapPtrInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesConfigMapArgs, KafkaSpecKafkaTemplatePodVolumesConfigMapPtr and KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesConfigMapPtrInput` via:
//
//	        KafkaSpecKafkaTemplatePodVolumesConfigMapArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplatePodVolumesConfigMapPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput
	ToKafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput
}

type kafkaSpecKafkaTemplatePodVolumesConfigMapPtrType KafkaSpecKafkaTemplatePodVolumesConfigMapArgs

func KafkaSpecKafkaTemplatePodVolumesConfigMapPtr(v *KafkaSpecKafkaTemplatePodVolumesConfigMapArgs) KafkaSpecKafkaTemplatePodVolumesConfigMapPtrInput {
	return (*kafkaSpecKafkaTemplatePodVolumesConfigMapPtrType)(v)
}

func (*kafkaSpecKafkaTemplatePodVolumesConfigMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesConfigMap)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplatePodVolumesConfigMapPtrType) ToKafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplatePodVolumesConfigMapPtrType) ToKafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput)
}

// `ConfigMap` to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesConfigMapOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesConfigMap)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapOutput) ToKafkaSpecKafkaTemplatePodVolumesConfigMapOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapOutput) ToKafkaSpecKafkaTemplatePodVolumesConfigMapOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapOutput) ToKafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput {
	return o.ToKafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapOutput) ToKafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplatePodVolumesConfigMap) *KafkaSpecKafkaTemplatePodVolumesConfigMap {
		return &v
	}).(KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesConfigMap) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapOutput) Items() KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesConfigMap) []KafkaSpecKafkaTemplatePodVolumesConfigMapItems {
		return v.Items
	}).(KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesConfigMap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesConfigMap) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesConfigMap)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput) Elem() KafkaSpecKafkaTemplatePodVolumesConfigMapOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesConfigMap) KafkaSpecKafkaTemplatePodVolumesConfigMap {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplatePodVolumesConfigMap
		return ret
	}).(KafkaSpecKafkaTemplatePodVolumesConfigMapOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesConfigMap) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput) Items() KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesConfigMap) []KafkaSpecKafkaTemplatePodVolumesConfigMapItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesConfigMap) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesConfigMap) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesConfigMapItems struct {
	Key  *string `pulumi:"key"`
	Mode *int    `pulumi:"mode"`
	Path *string `pulumi:"path"`
}

// KafkaSpecKafkaTemplatePodVolumesConfigMapItemsInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArgs and KafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesConfigMapItemsInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArgs{...}
type KafkaSpecKafkaTemplatePodVolumesConfigMapItemsInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutput
	ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutput
}

type KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArgs struct {
	Key  pulumi.StringPtrInput `pulumi:"key"`
	Mode pulumi.IntPtrInput    `pulumi:"mode"`
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesConfigMapItems)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArgs) ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArgs) ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutput)
}

// KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArray and KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArray{ KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArgs{...} }
type KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutput
	ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutput
}

type KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArray []KafkaSpecKafkaTemplatePodVolumesConfigMapItemsInput

func (KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodVolumesConfigMapItems)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArray) ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArray) ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutput)
}

type KafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesConfigMapItems)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutput) ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutput) ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesConfigMapItems) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesConfigMapItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesConfigMapItems) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodVolumesConfigMapItems)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutput) ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutput) ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutput) Index(i pulumi.IntInput) KafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecKafkaTemplatePodVolumesConfigMapItems {
		return vs[0].([]KafkaSpecKafkaTemplatePodVolumesConfigMapItems)[vs[1].(int)]
	}).(KafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutput)
}

type KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatch struct {
	Key  *string `pulumi:"key"`
	Mode *int    `pulumi:"mode"`
	Path *string `pulumi:"path"`
}

// KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArgs and KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArgs{...}
type KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutput
	ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutput
}

type KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArgs struct {
	Key  pulumi.StringPtrInput `pulumi:"key"`
	Mode pulumi.IntPtrInput    `pulumi:"mode"`
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutput)
}

// KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArray and KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArray{ KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArgs{...} }
type KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutput
	ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutput
}

type KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArray []KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchInput

func (KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArray) ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArray) ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutput)
}

type KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatch) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutput) ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutput) ToKafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatch {
		return vs[0].([]KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatch)[vs[1].(int)]
	}).(KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutput)
}

// `ConfigMap` to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesConfigMapPatch struct {
	DefaultMode *int                                                  `pulumi:"defaultMode"`
	Items       []KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatch `pulumi:"items"`
	Name        *string                                               `pulumi:"name"`
	Optional    *bool                                                 `pulumi:"optional"`
}

// KafkaSpecKafkaTemplatePodVolumesConfigMapPatchInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesConfigMapPatchArgs and KafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesConfigMapPatchInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesConfigMapPatchArgs{...}
type KafkaSpecKafkaTemplatePodVolumesConfigMapPatchInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput
	ToKafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput
}

// `ConfigMap` to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesConfigMapPatchArgs struct {
	DefaultMode pulumi.IntPtrInput                                            `pulumi:"defaultMode"`
	Items       KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayInput `pulumi:"items"`
	Name        pulumi.StringPtrInput                                         `pulumi:"name"`
	Optional    pulumi.BoolPtrInput                                           `pulumi:"optional"`
}

func (KafkaSpecKafkaTemplatePodVolumesConfigMapPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesConfigMapPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesConfigMapPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesConfigMapPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput)
}

func (i KafkaSpecKafkaTemplatePodVolumesConfigMapPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesConfigMapPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput).ToKafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesConfigMapPatchArgs, KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtr and KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrInput` via:
//
//	        KafkaSpecKafkaTemplatePodVolumesConfigMapPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput
	ToKafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput
}

type kafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrType KafkaSpecKafkaTemplatePodVolumesConfigMapPatchArgs

func KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtr(v *KafkaSpecKafkaTemplatePodVolumesConfigMapPatchArgs) KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrInput {
	return (*kafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrType)(v)
}

func (*kafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesConfigMapPatch)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrType) ToKafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrType) ToKafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput)
}

// `ConfigMap` to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesConfigMapPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput {
	return o.ToKafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplatePodVolumesConfigMapPatch) *KafkaSpecKafkaTemplatePodVolumesConfigMapPatch {
		return &v
	}).(KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesConfigMapPatch) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput) Items() KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesConfigMapPatch) []KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatch {
		return v.Items
	}).(KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesConfigMapPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesConfigMapPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesConfigMapPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput) Elem() KafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesConfigMapPatch) KafkaSpecKafkaTemplatePodVolumesConfigMapPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplatePodVolumesConfigMapPatch
		return ret
	}).(KafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesConfigMapPatch) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput) Items() KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesConfigMapPatch) []KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatch {
		if v == nil {
			return nil
		}
		return v.Items
	}).(KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesConfigMapPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesConfigMapPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// `CSIVolumeSource` object to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesCsi struct {
	Driver               *string                                                  `pulumi:"driver"`
	FsType               *string                                                  `pulumi:"fsType"`
	NodePublishSecretRef *KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRef `pulumi:"nodePublishSecretRef"`
	ReadOnly             *bool                                                    `pulumi:"readOnly"`
	VolumeAttributes     map[string]string                                        `pulumi:"volumeAttributes"`
}

// KafkaSpecKafkaTemplatePodVolumesCsiInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesCsiArgs and KafkaSpecKafkaTemplatePodVolumesCsiOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesCsiInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesCsiArgs{...}
type KafkaSpecKafkaTemplatePodVolumesCsiInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesCsiOutput() KafkaSpecKafkaTemplatePodVolumesCsiOutput
	ToKafkaSpecKafkaTemplatePodVolumesCsiOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesCsiOutput
}

// `CSIVolumeSource` object to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesCsiArgs struct {
	Driver               pulumi.StringPtrInput                                           `pulumi:"driver"`
	FsType               pulumi.StringPtrInput                                           `pulumi:"fsType"`
	NodePublishSecretRef KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrInput `pulumi:"nodePublishSecretRef"`
	ReadOnly             pulumi.BoolPtrInput                                             `pulumi:"readOnly"`
	VolumeAttributes     pulumi.StringMapInput                                           `pulumi:"volumeAttributes"`
}

func (KafkaSpecKafkaTemplatePodVolumesCsiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesCsi)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesCsiArgs) ToKafkaSpecKafkaTemplatePodVolumesCsiOutput() KafkaSpecKafkaTemplatePodVolumesCsiOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesCsiOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesCsiArgs) ToKafkaSpecKafkaTemplatePodVolumesCsiOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesCsiOutput)
}

func (i KafkaSpecKafkaTemplatePodVolumesCsiArgs) ToKafkaSpecKafkaTemplatePodVolumesCsiPtrOutput() KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesCsiPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesCsiArgs) ToKafkaSpecKafkaTemplatePodVolumesCsiPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesCsiOutput).ToKafkaSpecKafkaTemplatePodVolumesCsiPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplatePodVolumesCsiPtrInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesCsiArgs, KafkaSpecKafkaTemplatePodVolumesCsiPtr and KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesCsiPtrInput` via:
//
//	        KafkaSpecKafkaTemplatePodVolumesCsiArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplatePodVolumesCsiPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesCsiPtrOutput() KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput
	ToKafkaSpecKafkaTemplatePodVolumesCsiPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput
}

type kafkaSpecKafkaTemplatePodVolumesCsiPtrType KafkaSpecKafkaTemplatePodVolumesCsiArgs

func KafkaSpecKafkaTemplatePodVolumesCsiPtr(v *KafkaSpecKafkaTemplatePodVolumesCsiArgs) KafkaSpecKafkaTemplatePodVolumesCsiPtrInput {
	return (*kafkaSpecKafkaTemplatePodVolumesCsiPtrType)(v)
}

func (*kafkaSpecKafkaTemplatePodVolumesCsiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesCsi)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplatePodVolumesCsiPtrType) ToKafkaSpecKafkaTemplatePodVolumesCsiPtrOutput() KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesCsiPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplatePodVolumesCsiPtrType) ToKafkaSpecKafkaTemplatePodVolumesCsiPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput)
}

// `CSIVolumeSource` object to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesCsiOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesCsiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesCsi)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiOutput() KafkaSpecKafkaTemplatePodVolumesCsiOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiPtrOutput() KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput {
	return o.ToKafkaSpecKafkaTemplatePodVolumesCsiPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplatePodVolumesCsi) *KafkaSpecKafkaTemplatePodVolumesCsi {
		return &v
	}).(KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesCsi) *string { return v.Driver }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesCsi) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiOutput) NodePublishSecretRef() KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesCsi) *KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRef {
		return v.NodePublishSecretRef
	}).(KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesCsi) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiOutput) VolumeAttributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesCsi) map[string]string { return v.VolumeAttributes }).(pulumi.StringMapOutput)
}

type KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesCsi)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiPtrOutput() KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput) Elem() KafkaSpecKafkaTemplatePodVolumesCsiOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesCsi) KafkaSpecKafkaTemplatePodVolumesCsi {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplatePodVolumesCsi
		return ret
	}).(KafkaSpecKafkaTemplatePodVolumesCsiOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesCsi) *string {
		if v == nil {
			return nil
		}
		return v.Driver
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesCsi) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput) NodePublishSecretRef() KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesCsi) *KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRef {
		if v == nil {
			return nil
		}
		return v.NodePublishSecretRef
	}).(KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesCsi) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput) VolumeAttributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesCsi) map[string]string {
		if v == nil {
			return nil
		}
		return v.VolumeAttributes
	}).(pulumi.StringMapOutput)
}

type KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRef struct {
	Name *string `pulumi:"name"`
}

// KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefArgs and KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefArgs{...}
type KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutput() KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutput
	ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutput
}

type KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRef)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefArgs) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutput() KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefArgs) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutput)
}

func (i KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefArgs) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput() KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefArgs) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutput).ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefArgs, KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtr and KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrInput` via:
//
//	        KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput() KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput
	ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput
}

type kafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrType KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefArgs

func KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtr(v *KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefArgs) KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrInput {
	return (*kafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrType)(v)
}

func (*kafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRef)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrType) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput() KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrType) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRef)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutput() KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput() KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput {
	return o.ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRef) *KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRef {
		return &v
	}).(KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRef)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput() KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput) Elem() KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRef) KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRef {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRef
		return ret
	}).(KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatch struct {
	Name *string `pulumi:"name"`
}

// KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchArgs and KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchArgs{...}
type KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutput() KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutput
	ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutput
}

type KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutput() KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutput)
}

func (i KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutput).ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchArgs, KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtr and KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrInput` via:
//
//	        KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput
	ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput
}

type kafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrType KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchArgs

func KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtr(v *KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchArgs) KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrInput {
	return (*kafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrType)(v)
}

func (*kafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatch)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrType) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrType) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutput() KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput {
	return o.ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatch) *KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatch {
		return &v
	}).(KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput) Elem() KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatch) KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatch
		return ret
	}).(KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// `CSIVolumeSource` object to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesCsiPatch struct {
	Driver               *string                                                       `pulumi:"driver"`
	FsType               *string                                                       `pulumi:"fsType"`
	NodePublishSecretRef *KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatch `pulumi:"nodePublishSecretRef"`
	ReadOnly             *bool                                                         `pulumi:"readOnly"`
	VolumeAttributes     map[string]string                                             `pulumi:"volumeAttributes"`
}

// KafkaSpecKafkaTemplatePodVolumesCsiPatchInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesCsiPatchArgs and KafkaSpecKafkaTemplatePodVolumesCsiPatchOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesCsiPatchInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesCsiPatchArgs{...}
type KafkaSpecKafkaTemplatePodVolumesCsiPatchInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesCsiPatchOutput() KafkaSpecKafkaTemplatePodVolumesCsiPatchOutput
	ToKafkaSpecKafkaTemplatePodVolumesCsiPatchOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesCsiPatchOutput
}

// `CSIVolumeSource` object to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesCsiPatchArgs struct {
	Driver               pulumi.StringPtrInput                                                `pulumi:"driver"`
	FsType               pulumi.StringPtrInput                                                `pulumi:"fsType"`
	NodePublishSecretRef KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrInput `pulumi:"nodePublishSecretRef"`
	ReadOnly             pulumi.BoolPtrInput                                                  `pulumi:"readOnly"`
	VolumeAttributes     pulumi.StringMapInput                                                `pulumi:"volumeAttributes"`
}

func (KafkaSpecKafkaTemplatePodVolumesCsiPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesCsiPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesCsiPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesCsiPatchOutput() KafkaSpecKafkaTemplatePodVolumesCsiPatchOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesCsiPatchOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesCsiPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesCsiPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesCsiPatchOutput)
}

func (i KafkaSpecKafkaTemplatePodVolumesCsiPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesCsiPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesCsiPatchOutput).ToKafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesCsiPatchArgs, KafkaSpecKafkaTemplatePodVolumesCsiPatchPtr and KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrInput` via:
//
//	        KafkaSpecKafkaTemplatePodVolumesCsiPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput
	ToKafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput
}

type kafkaSpecKafkaTemplatePodVolumesCsiPatchPtrType KafkaSpecKafkaTemplatePodVolumesCsiPatchArgs

func KafkaSpecKafkaTemplatePodVolumesCsiPatchPtr(v *KafkaSpecKafkaTemplatePodVolumesCsiPatchArgs) KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrInput {
	return (*kafkaSpecKafkaTemplatePodVolumesCsiPatchPtrType)(v)
}

func (*kafkaSpecKafkaTemplatePodVolumesCsiPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesCsiPatch)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplatePodVolumesCsiPatchPtrType) ToKafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplatePodVolumesCsiPatchPtrType) ToKafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput)
}

// `CSIVolumeSource` object to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesCsiPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesCsiPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesCsiPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiPatchOutput() KafkaSpecKafkaTemplatePodVolumesCsiPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput {
	return o.ToKafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplatePodVolumesCsiPatch) *KafkaSpecKafkaTemplatePodVolumesCsiPatch {
		return &v
	}).(KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPatchOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesCsiPatch) *string { return v.Driver }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPatchOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesCsiPatch) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPatchOutput) NodePublishSecretRef() KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesCsiPatch) *KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatch {
		return v.NodePublishSecretRef
	}).(KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPatchOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesCsiPatch) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPatchOutput) VolumeAttributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesCsiPatch) map[string]string { return v.VolumeAttributes }).(pulumi.StringMapOutput)
}

type KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesCsiPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput) Elem() KafkaSpecKafkaTemplatePodVolumesCsiPatchOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesCsiPatch) KafkaSpecKafkaTemplatePodVolumesCsiPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplatePodVolumesCsiPatch
		return ret
	}).(KafkaSpecKafkaTemplatePodVolumesCsiPatchOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesCsiPatch) *string {
		if v == nil {
			return nil
		}
		return v.Driver
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesCsiPatch) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput) NodePublishSecretRef() KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesCsiPatch) *KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.NodePublishSecretRef
	}).(KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesCsiPatch) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput) VolumeAttributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesCsiPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.VolumeAttributes
	}).(pulumi.StringMapOutput)
}

// `EmptyDir` to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesEmptyDir struct {
	Medium    *string                                            `pulumi:"medium"`
	SizeLimit *KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimit `pulumi:"sizeLimit"`
}

// KafkaSpecKafkaTemplatePodVolumesEmptyDirInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesEmptyDirArgs and KafkaSpecKafkaTemplatePodVolumesEmptyDirOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesEmptyDirInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesEmptyDirArgs{...}
type KafkaSpecKafkaTemplatePodVolumesEmptyDirInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesEmptyDirOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirOutput
	ToKafkaSpecKafkaTemplatePodVolumesEmptyDirOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirOutput
}

// `EmptyDir` to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesEmptyDirArgs struct {
	Medium    pulumi.StringPtrInput                                     `pulumi:"medium"`
	SizeLimit KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrInput `pulumi:"sizeLimit"`
}

func (KafkaSpecKafkaTemplatePodVolumesEmptyDirArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesEmptyDir)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesEmptyDirArgs) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesEmptyDirOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesEmptyDirArgs) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesEmptyDirOutput)
}

func (i KafkaSpecKafkaTemplatePodVolumesEmptyDirArgs) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesEmptyDirArgs) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesEmptyDirOutput).ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesEmptyDirArgs, KafkaSpecKafkaTemplatePodVolumesEmptyDirPtr and KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrInput` via:
//
//	        KafkaSpecKafkaTemplatePodVolumesEmptyDirArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput
	ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput
}

type kafkaSpecKafkaTemplatePodVolumesEmptyDirPtrType KafkaSpecKafkaTemplatePodVolumesEmptyDirArgs

func KafkaSpecKafkaTemplatePodVolumesEmptyDirPtr(v *KafkaSpecKafkaTemplatePodVolumesEmptyDirArgs) KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrInput {
	return (*kafkaSpecKafkaTemplatePodVolumesEmptyDirPtrType)(v)
}

func (*kafkaSpecKafkaTemplatePodVolumesEmptyDirPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesEmptyDir)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplatePodVolumesEmptyDirPtrType) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplatePodVolumesEmptyDirPtrType) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput)
}

// `EmptyDir` to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesEmptyDirOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesEmptyDirOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesEmptyDir)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput {
	return o.ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplatePodVolumesEmptyDir) *KafkaSpecKafkaTemplatePodVolumesEmptyDir {
		return &v
	}).(KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesEmptyDir) *string { return v.Medium }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirOutput) SizeLimit() KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesEmptyDir) *KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimit {
		return v.SizeLimit
	}).(KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesEmptyDir)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput) Elem() KafkaSpecKafkaTemplatePodVolumesEmptyDirOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesEmptyDir) KafkaSpecKafkaTemplatePodVolumesEmptyDir {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplatePodVolumesEmptyDir
		return ret
	}).(KafkaSpecKafkaTemplatePodVolumesEmptyDirOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesEmptyDir) *string {
		if v == nil {
			return nil
		}
		return v.Medium
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput) SizeLimit() KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesEmptyDir) *KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimit {
		if v == nil {
			return nil
		}
		return v.SizeLimit
	}).(KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput)
}

// `EmptyDir` to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesEmptyDirPatch struct {
	Medium    *string                                                 `pulumi:"medium"`
	SizeLimit *KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatch `pulumi:"sizeLimit"`
}

// KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchArgs and KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchArgs{...}
type KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutput
	ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutput
}

// `EmptyDir` to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchArgs struct {
	Medium    pulumi.StringPtrInput                                          `pulumi:"medium"`
	SizeLimit KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrInput `pulumi:"sizeLimit"`
}

func (KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesEmptyDirPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutput)
}

func (i KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutput).ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchArgs, KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtr and KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrInput` via:
//
//	        KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput
	ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput
}

type kafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrType KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchArgs

func KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtr(v *KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchArgs) KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrInput {
	return (*kafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrType)(v)
}

func (*kafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesEmptyDirPatch)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrType) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrType) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput)
}

// `EmptyDir` to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesEmptyDirPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput {
	return o.ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplatePodVolumesEmptyDirPatch) *KafkaSpecKafkaTemplatePodVolumesEmptyDirPatch {
		return &v
	}).(KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesEmptyDirPatch) *string { return v.Medium }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutput) SizeLimit() KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesEmptyDirPatch) *KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatch {
		return v.SizeLimit
	}).(KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesEmptyDirPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput) Elem() KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesEmptyDirPatch) KafkaSpecKafkaTemplatePodVolumesEmptyDirPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplatePodVolumesEmptyDirPatch
		return ret
	}).(KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesEmptyDirPatch) *string {
		if v == nil {
			return nil
		}
		return v.Medium
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput) SizeLimit() KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesEmptyDirPatch) *KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatch {
		if v == nil {
			return nil
		}
		return v.SizeLimit
	}).(KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimit struct {
	Amount *string `pulumi:"amount"`
	Format *string `pulumi:"format"`
}

// KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitArgs and KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitArgs{...}
type KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutput
	ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutput
}

type KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitArgs struct {
	Amount pulumi.StringPtrInput `pulumi:"amount"`
	Format pulumi.StringPtrInput `pulumi:"format"`
}

func (KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimit)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitArgs) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitArgs) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutput)
}

func (i KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitArgs) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitArgs) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutput).ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitArgs, KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtr and KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrInput` via:
//
//	        KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput
	ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput
}

type kafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrType KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitArgs

func KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtr(v *KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitArgs) KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrInput {
	return (*kafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrType)(v)
}

func (*kafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimit)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrType) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrType) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimit)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput {
	return o.ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimit) *KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimit {
		return &v
	}).(KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutput) Amount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimit) *string { return v.Amount }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimit) *string { return v.Format }).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimit)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput) Elem() KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimit) KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimit {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimit
		return ret
	}).(KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput) Amount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimit) *string {
		if v == nil {
			return nil
		}
		return v.Amount
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimit) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatch struct {
	Amount *string `pulumi:"amount"`
	Format *string `pulumi:"format"`
}

// KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchArgs and KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchArgs{...}
type KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutput
	ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutput
}

type KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchArgs struct {
	Amount pulumi.StringPtrInput `pulumi:"amount"`
	Format pulumi.StringPtrInput `pulumi:"format"`
}

func (KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutput)
}

func (i KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutput).ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchArgs, KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtr and KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrInput` via:
//
//	        KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput
	ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput
}

type kafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrType KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchArgs

func KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtr(v *KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchArgs) KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrInput {
	return (*kafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrType)(v)
}

func (*kafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatch)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrType) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrType) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput {
	return o.ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatch) *KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatch {
		return &v
	}).(KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutput) Amount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatch) *string { return v.Amount }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatch) *string { return v.Format }).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput) Elem() KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatch) KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatch
		return ret
	}).(KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput) Amount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatch) *string {
		if v == nil {
			return nil
		}
		return v.Amount
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatch) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

// `ImageVolumeSource` object to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesImage struct {
	PullPolicy *string `pulumi:"pullPolicy"`
	Reference  *string `pulumi:"reference"`
}

// KafkaSpecKafkaTemplatePodVolumesImageInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesImageArgs and KafkaSpecKafkaTemplatePodVolumesImageOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesImageInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesImageArgs{...}
type KafkaSpecKafkaTemplatePodVolumesImageInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesImageOutput() KafkaSpecKafkaTemplatePodVolumesImageOutput
	ToKafkaSpecKafkaTemplatePodVolumesImageOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesImageOutput
}

// `ImageVolumeSource` object to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesImageArgs struct {
	PullPolicy pulumi.StringPtrInput `pulumi:"pullPolicy"`
	Reference  pulumi.StringPtrInput `pulumi:"reference"`
}

func (KafkaSpecKafkaTemplatePodVolumesImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesImage)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesImageArgs) ToKafkaSpecKafkaTemplatePodVolumesImageOutput() KafkaSpecKafkaTemplatePodVolumesImageOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesImageOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesImageArgs) ToKafkaSpecKafkaTemplatePodVolumesImageOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesImageOutput)
}

func (i KafkaSpecKafkaTemplatePodVolumesImageArgs) ToKafkaSpecKafkaTemplatePodVolumesImagePtrOutput() KafkaSpecKafkaTemplatePodVolumesImagePtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesImagePtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesImageArgs) ToKafkaSpecKafkaTemplatePodVolumesImagePtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesImageOutput).ToKafkaSpecKafkaTemplatePodVolumesImagePtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplatePodVolumesImagePtrInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesImageArgs, KafkaSpecKafkaTemplatePodVolumesImagePtr and KafkaSpecKafkaTemplatePodVolumesImagePtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesImagePtrInput` via:
//
//	        KafkaSpecKafkaTemplatePodVolumesImageArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplatePodVolumesImagePtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesImagePtrOutput() KafkaSpecKafkaTemplatePodVolumesImagePtrOutput
	ToKafkaSpecKafkaTemplatePodVolumesImagePtrOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesImagePtrOutput
}

type kafkaSpecKafkaTemplatePodVolumesImagePtrType KafkaSpecKafkaTemplatePodVolumesImageArgs

func KafkaSpecKafkaTemplatePodVolumesImagePtr(v *KafkaSpecKafkaTemplatePodVolumesImageArgs) KafkaSpecKafkaTemplatePodVolumesImagePtrInput {
	return (*kafkaSpecKafkaTemplatePodVolumesImagePtrType)(v)
}

func (*kafkaSpecKafkaTemplatePodVolumesImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesImage)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplatePodVolumesImagePtrType) ToKafkaSpecKafkaTemplatePodVolumesImagePtrOutput() KafkaSpecKafkaTemplatePodVolumesImagePtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesImagePtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplatePodVolumesImagePtrType) ToKafkaSpecKafkaTemplatePodVolumesImagePtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesImagePtrOutput)
}

// `ImageVolumeSource` object to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesImageOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesImage)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesImageOutput) ToKafkaSpecKafkaTemplatePodVolumesImageOutput() KafkaSpecKafkaTemplatePodVolumesImageOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesImageOutput) ToKafkaSpecKafkaTemplatePodVolumesImageOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesImageOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesImageOutput) ToKafkaSpecKafkaTemplatePodVolumesImagePtrOutput() KafkaSpecKafkaTemplatePodVolumesImagePtrOutput {
	return o.ToKafkaSpecKafkaTemplatePodVolumesImagePtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplatePodVolumesImageOutput) ToKafkaSpecKafkaTemplatePodVolumesImagePtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplatePodVolumesImage) *KafkaSpecKafkaTemplatePodVolumesImage {
		return &v
	}).(KafkaSpecKafkaTemplatePodVolumesImagePtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesImageOutput) PullPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesImage) *string { return v.PullPolicy }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesImageOutput) Reference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesImage) *string { return v.Reference }).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesImagePtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesImage)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesImagePtrOutput) ToKafkaSpecKafkaTemplatePodVolumesImagePtrOutput() KafkaSpecKafkaTemplatePodVolumesImagePtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesImagePtrOutput) ToKafkaSpecKafkaTemplatePodVolumesImagePtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesImagePtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesImagePtrOutput) Elem() KafkaSpecKafkaTemplatePodVolumesImageOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesImage) KafkaSpecKafkaTemplatePodVolumesImage {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplatePodVolumesImage
		return ret
	}).(KafkaSpecKafkaTemplatePodVolumesImageOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesImagePtrOutput) PullPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesImage) *string {
		if v == nil {
			return nil
		}
		return v.PullPolicy
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesImagePtrOutput) Reference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesImage) *string {
		if v == nil {
			return nil
		}
		return v.Reference
	}).(pulumi.StringPtrOutput)
}

// `ImageVolumeSource` object to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesImagePatch struct {
	PullPolicy *string `pulumi:"pullPolicy"`
	Reference  *string `pulumi:"reference"`
}

// KafkaSpecKafkaTemplatePodVolumesImagePatchInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesImagePatchArgs and KafkaSpecKafkaTemplatePodVolumesImagePatchOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesImagePatchInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesImagePatchArgs{...}
type KafkaSpecKafkaTemplatePodVolumesImagePatchInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesImagePatchOutput() KafkaSpecKafkaTemplatePodVolumesImagePatchOutput
	ToKafkaSpecKafkaTemplatePodVolumesImagePatchOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesImagePatchOutput
}

// `ImageVolumeSource` object to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesImagePatchArgs struct {
	PullPolicy pulumi.StringPtrInput `pulumi:"pullPolicy"`
	Reference  pulumi.StringPtrInput `pulumi:"reference"`
}

func (KafkaSpecKafkaTemplatePodVolumesImagePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesImagePatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesImagePatchArgs) ToKafkaSpecKafkaTemplatePodVolumesImagePatchOutput() KafkaSpecKafkaTemplatePodVolumesImagePatchOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesImagePatchOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesImagePatchArgs) ToKafkaSpecKafkaTemplatePodVolumesImagePatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesImagePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesImagePatchOutput)
}

func (i KafkaSpecKafkaTemplatePodVolumesImagePatchArgs) ToKafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesImagePatchArgs) ToKafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesImagePatchOutput).ToKafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplatePodVolumesImagePatchPtrInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesImagePatchArgs, KafkaSpecKafkaTemplatePodVolumesImagePatchPtr and KafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesImagePatchPtrInput` via:
//
//	        KafkaSpecKafkaTemplatePodVolumesImagePatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplatePodVolumesImagePatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput
	ToKafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput
}

type kafkaSpecKafkaTemplatePodVolumesImagePatchPtrType KafkaSpecKafkaTemplatePodVolumesImagePatchArgs

func KafkaSpecKafkaTemplatePodVolumesImagePatchPtr(v *KafkaSpecKafkaTemplatePodVolumesImagePatchArgs) KafkaSpecKafkaTemplatePodVolumesImagePatchPtrInput {
	return (*kafkaSpecKafkaTemplatePodVolumesImagePatchPtrType)(v)
}

func (*kafkaSpecKafkaTemplatePodVolumesImagePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesImagePatch)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplatePodVolumesImagePatchPtrType) ToKafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplatePodVolumesImagePatchPtrType) ToKafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput)
}

// `ImageVolumeSource` object to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesImagePatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesImagePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesImagePatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesImagePatchOutput) ToKafkaSpecKafkaTemplatePodVolumesImagePatchOutput() KafkaSpecKafkaTemplatePodVolumesImagePatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesImagePatchOutput) ToKafkaSpecKafkaTemplatePodVolumesImagePatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesImagePatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesImagePatchOutput) ToKafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput {
	return o.ToKafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplatePodVolumesImagePatchOutput) ToKafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplatePodVolumesImagePatch) *KafkaSpecKafkaTemplatePodVolumesImagePatch {
		return &v
	}).(KafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesImagePatchOutput) PullPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesImagePatch) *string { return v.PullPolicy }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesImagePatchOutput) Reference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesImagePatch) *string { return v.Reference }).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesImagePatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput) Elem() KafkaSpecKafkaTemplatePodVolumesImagePatchOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesImagePatch) KafkaSpecKafkaTemplatePodVolumesImagePatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplatePodVolumesImagePatch
		return ret
	}).(KafkaSpecKafkaTemplatePodVolumesImagePatchOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput) PullPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesImagePatch) *string {
		if v == nil {
			return nil
		}
		return v.PullPolicy
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput) Reference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesImagePatch) *string {
		if v == nil {
			return nil
		}
		return v.Reference
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesPatch struct {
	ConfigMap *KafkaSpecKafkaTemplatePodVolumesConfigMapPatch `pulumi:"configMap"`
	Csi       *KafkaSpecKafkaTemplatePodVolumesCsiPatch       `pulumi:"csi"`
	EmptyDir  *KafkaSpecKafkaTemplatePodVolumesEmptyDirPatch  `pulumi:"emptyDir"`
	Image     *KafkaSpecKafkaTemplatePodVolumesImagePatch     `pulumi:"image"`
	// Name to use for the volume. Required.
	Name                  *string                                                     `pulumi:"name"`
	PersistentVolumeClaim *KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatch `pulumi:"persistentVolumeClaim"`
	Secret                *KafkaSpecKafkaTemplatePodVolumesSecretPatch                `pulumi:"secret"`
}

// KafkaSpecKafkaTemplatePodVolumesPatchInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesPatchArgs and KafkaSpecKafkaTemplatePodVolumesPatchOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesPatchInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesPatchArgs{...}
type KafkaSpecKafkaTemplatePodVolumesPatchInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesPatchOutput() KafkaSpecKafkaTemplatePodVolumesPatchOutput
	ToKafkaSpecKafkaTemplatePodVolumesPatchOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesPatchOutput
}

type KafkaSpecKafkaTemplatePodVolumesPatchArgs struct {
	ConfigMap KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrInput `pulumi:"configMap"`
	Csi       KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrInput       `pulumi:"csi"`
	EmptyDir  KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrInput  `pulumi:"emptyDir"`
	Image     KafkaSpecKafkaTemplatePodVolumesImagePatchPtrInput     `pulumi:"image"`
	// Name to use for the volume. Required.
	Name                  pulumi.StringPtrInput                                              `pulumi:"name"`
	PersistentVolumeClaim KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrInput `pulumi:"persistentVolumeClaim"`
	Secret                KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrInput                `pulumi:"secret"`
}

func (KafkaSpecKafkaTemplatePodVolumesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesPatchOutput() KafkaSpecKafkaTemplatePodVolumesPatchOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesPatchOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesPatchOutput)
}

// KafkaSpecKafkaTemplatePodVolumesPatchArrayInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesPatchArray and KafkaSpecKafkaTemplatePodVolumesPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesPatchArrayInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesPatchArray{ KafkaSpecKafkaTemplatePodVolumesPatchArgs{...} }
type KafkaSpecKafkaTemplatePodVolumesPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesPatchArrayOutput() KafkaSpecKafkaTemplatePodVolumesPatchArrayOutput
	ToKafkaSpecKafkaTemplatePodVolumesPatchArrayOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesPatchArrayOutput
}

type KafkaSpecKafkaTemplatePodVolumesPatchArray []KafkaSpecKafkaTemplatePodVolumesPatchInput

func (KafkaSpecKafkaTemplatePodVolumesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodVolumesPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesPatchArray) ToKafkaSpecKafkaTemplatePodVolumesPatchArrayOutput() KafkaSpecKafkaTemplatePodVolumesPatchArrayOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesPatchArray) ToKafkaSpecKafkaTemplatePodVolumesPatchArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesPatchArrayOutput)
}

type KafkaSpecKafkaTemplatePodVolumesPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesPatchOutput() KafkaSpecKafkaTemplatePodVolumesPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesPatchOutput) ConfigMap() KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesPatch) *KafkaSpecKafkaTemplatePodVolumesConfigMapPatch {
		return v.ConfigMap
	}).(KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesPatchOutput) Csi() KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesPatch) *KafkaSpecKafkaTemplatePodVolumesCsiPatch { return v.Csi }).(KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesPatchOutput) EmptyDir() KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesPatch) *KafkaSpecKafkaTemplatePodVolumesEmptyDirPatch {
		return v.EmptyDir
	}).(KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesPatchOutput) Image() KafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesPatch) *KafkaSpecKafkaTemplatePodVolumesImagePatch {
		return v.Image
	}).(KafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput)
}

// Name to use for the volume. Required.
func (o KafkaSpecKafkaTemplatePodVolumesPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesPatchOutput) PersistentVolumeClaim() KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesPatch) *KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatch {
		return v.PersistentVolumeClaim
	}).(KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesPatchOutput) Secret() KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesPatch) *KafkaSpecKafkaTemplatePodVolumesSecretPatch {
		return v.Secret
	}).(KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodVolumesPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesPatchArrayOutput) ToKafkaSpecKafkaTemplatePodVolumesPatchArrayOutput() KafkaSpecKafkaTemplatePodVolumesPatchArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesPatchArrayOutput) ToKafkaSpecKafkaTemplatePodVolumesPatchArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesPatchArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecKafkaTemplatePodVolumesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecKafkaTemplatePodVolumesPatch {
		return vs[0].([]KafkaSpecKafkaTemplatePodVolumesPatch)[vs[1].(int)]
	}).(KafkaSpecKafkaTemplatePodVolumesPatchOutput)
}

// `PersistentVolumeClaim` object to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaim struct {
	ClaimName *string `pulumi:"claimName"`
	ReadOnly  *bool   `pulumi:"readOnly"`
}

// KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimArgs and KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimArgs{...}
type KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutput() KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutput
	ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutput
}

// `PersistentVolumeClaim` object to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimArgs struct {
	ClaimName pulumi.StringPtrInput `pulumi:"claimName"`
	ReadOnly  pulumi.BoolPtrInput   `pulumi:"readOnly"`
}

func (KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimArgs) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutput() KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimArgs) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutput)
}

func (i KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimArgs) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput() KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimArgs) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutput).ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimArgs, KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtr and KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrInput` via:
//
//	        KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput() KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput
	ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput
}

type kafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrType KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimArgs

func KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtr(v *KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimArgs) KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrInput {
	return (*kafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrType)(v)
}

func (*kafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrType) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput() KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrType) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput)
}

// `PersistentVolumeClaim` object to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutput) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutput() KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutput) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutput) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput() KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput {
	return o.ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutput) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaim) *KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaim {
		return &v
	}).(KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutput) ClaimName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaim) *string { return v.ClaimName }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaim) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput() KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput) Elem() KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaim) KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaim {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaim
		return ret
	}).(KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput) ClaimName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaim) *string {
		if v == nil {
			return nil
		}
		return v.ClaimName
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaim) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// `PersistentVolumeClaim` object to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatch struct {
	ClaimName *string `pulumi:"claimName"`
	ReadOnly  *bool   `pulumi:"readOnly"`
}

// KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchArgs and KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchArgs{...}
type KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutput() KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutput
	ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutput
}

// `PersistentVolumeClaim` object to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchArgs struct {
	ClaimName pulumi.StringPtrInput `pulumi:"claimName"`
	ReadOnly  pulumi.BoolPtrInput   `pulumi:"readOnly"`
}

func (KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutput() KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutput)
}

func (i KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutput).ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchArgs, KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtr and KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrInput` via:
//
//	        KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput
	ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput
}

type kafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrType KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchArgs

func KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtr(v *KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchArgs) KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrInput {
	return (*kafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrType)(v)
}

func (*kafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatch)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrType) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrType) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput)
}

// `PersistentVolumeClaim` object to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutput() KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput {
	return o.ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatch) *KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatch {
		return &v
	}).(KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutput) ClaimName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatch) *string { return v.ClaimName }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatch) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput) Elem() KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatch) KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatch
		return ret
	}).(KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput) ClaimName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatch) *string {
		if v == nil {
			return nil
		}
		return v.ClaimName
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatch) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// `Secret` to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesSecret struct {
	DefaultMode *int                                          `pulumi:"defaultMode"`
	Items       []KafkaSpecKafkaTemplatePodVolumesSecretItems `pulumi:"items"`
	Optional    *bool                                         `pulumi:"optional"`
	SecretName  *string                                       `pulumi:"secretName"`
}

// KafkaSpecKafkaTemplatePodVolumesSecretInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesSecretArgs and KafkaSpecKafkaTemplatePodVolumesSecretOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesSecretInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesSecretArgs{...}
type KafkaSpecKafkaTemplatePodVolumesSecretInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesSecretOutput() KafkaSpecKafkaTemplatePodVolumesSecretOutput
	ToKafkaSpecKafkaTemplatePodVolumesSecretOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesSecretOutput
}

// `Secret` to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesSecretArgs struct {
	DefaultMode pulumi.IntPtrInput                                    `pulumi:"defaultMode"`
	Items       KafkaSpecKafkaTemplatePodVolumesSecretItemsArrayInput `pulumi:"items"`
	Optional    pulumi.BoolPtrInput                                   `pulumi:"optional"`
	SecretName  pulumi.StringPtrInput                                 `pulumi:"secretName"`
}

func (KafkaSpecKafkaTemplatePodVolumesSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesSecret)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesSecretArgs) ToKafkaSpecKafkaTemplatePodVolumesSecretOutput() KafkaSpecKafkaTemplatePodVolumesSecretOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesSecretOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesSecretArgs) ToKafkaSpecKafkaTemplatePodVolumesSecretOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesSecretOutput)
}

func (i KafkaSpecKafkaTemplatePodVolumesSecretArgs) ToKafkaSpecKafkaTemplatePodVolumesSecretPtrOutput() KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesSecretPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesSecretArgs) ToKafkaSpecKafkaTemplatePodVolumesSecretPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesSecretOutput).ToKafkaSpecKafkaTemplatePodVolumesSecretPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplatePodVolumesSecretPtrInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesSecretArgs, KafkaSpecKafkaTemplatePodVolumesSecretPtr and KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesSecretPtrInput` via:
//
//	        KafkaSpecKafkaTemplatePodVolumesSecretArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplatePodVolumesSecretPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesSecretPtrOutput() KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput
	ToKafkaSpecKafkaTemplatePodVolumesSecretPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput
}

type kafkaSpecKafkaTemplatePodVolumesSecretPtrType KafkaSpecKafkaTemplatePodVolumesSecretArgs

func KafkaSpecKafkaTemplatePodVolumesSecretPtr(v *KafkaSpecKafkaTemplatePodVolumesSecretArgs) KafkaSpecKafkaTemplatePodVolumesSecretPtrInput {
	return (*kafkaSpecKafkaTemplatePodVolumesSecretPtrType)(v)
}

func (*kafkaSpecKafkaTemplatePodVolumesSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesSecret)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplatePodVolumesSecretPtrType) ToKafkaSpecKafkaTemplatePodVolumesSecretPtrOutput() KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesSecretPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplatePodVolumesSecretPtrType) ToKafkaSpecKafkaTemplatePodVolumesSecretPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput)
}

// `Secret` to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesSecretOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesSecret)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretOutput) ToKafkaSpecKafkaTemplatePodVolumesSecretOutput() KafkaSpecKafkaTemplatePodVolumesSecretOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretOutput) ToKafkaSpecKafkaTemplatePodVolumesSecretOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesSecretOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretOutput) ToKafkaSpecKafkaTemplatePodVolumesSecretPtrOutput() KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput {
	return o.ToKafkaSpecKafkaTemplatePodVolumesSecretPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretOutput) ToKafkaSpecKafkaTemplatePodVolumesSecretPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplatePodVolumesSecret) *KafkaSpecKafkaTemplatePodVolumesSecret {
		return &v
	}).(KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesSecret) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretOutput) Items() KafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesSecret) []KafkaSpecKafkaTemplatePodVolumesSecretItems {
		return v.Items
	}).(KafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesSecret) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesSecret) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesSecret)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesSecretPtrOutput() KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesSecretPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput) Elem() KafkaSpecKafkaTemplatePodVolumesSecretOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesSecret) KafkaSpecKafkaTemplatePodVolumesSecret {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplatePodVolumesSecret
		return ret
	}).(KafkaSpecKafkaTemplatePodVolumesSecretOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesSecret) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput) Items() KafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesSecret) []KafkaSpecKafkaTemplatePodVolumesSecretItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(KafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesSecret) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesSecret) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesSecretItems struct {
	Key  *string `pulumi:"key"`
	Mode *int    `pulumi:"mode"`
	Path *string `pulumi:"path"`
}

// KafkaSpecKafkaTemplatePodVolumesSecretItemsInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesSecretItemsArgs and KafkaSpecKafkaTemplatePodVolumesSecretItemsOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesSecretItemsInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesSecretItemsArgs{...}
type KafkaSpecKafkaTemplatePodVolumesSecretItemsInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesSecretItemsOutput() KafkaSpecKafkaTemplatePodVolumesSecretItemsOutput
	ToKafkaSpecKafkaTemplatePodVolumesSecretItemsOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesSecretItemsOutput
}

type KafkaSpecKafkaTemplatePodVolumesSecretItemsArgs struct {
	Key  pulumi.StringPtrInput `pulumi:"key"`
	Mode pulumi.IntPtrInput    `pulumi:"mode"`
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (KafkaSpecKafkaTemplatePodVolumesSecretItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesSecretItems)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesSecretItemsArgs) ToKafkaSpecKafkaTemplatePodVolumesSecretItemsOutput() KafkaSpecKafkaTemplatePodVolumesSecretItemsOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesSecretItemsOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesSecretItemsArgs) ToKafkaSpecKafkaTemplatePodVolumesSecretItemsOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesSecretItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesSecretItemsOutput)
}

// KafkaSpecKafkaTemplatePodVolumesSecretItemsArrayInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesSecretItemsArray and KafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesSecretItemsArrayInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesSecretItemsArray{ KafkaSpecKafkaTemplatePodVolumesSecretItemsArgs{...} }
type KafkaSpecKafkaTemplatePodVolumesSecretItemsArrayInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutput() KafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutput
	ToKafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutput
}

type KafkaSpecKafkaTemplatePodVolumesSecretItemsArray []KafkaSpecKafkaTemplatePodVolumesSecretItemsInput

func (KafkaSpecKafkaTemplatePodVolumesSecretItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodVolumesSecretItems)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesSecretItemsArray) ToKafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutput() KafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesSecretItemsArray) ToKafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutput)
}

type KafkaSpecKafkaTemplatePodVolumesSecretItemsOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesSecretItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesSecretItems)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretItemsOutput) ToKafkaSpecKafkaTemplatePodVolumesSecretItemsOutput() KafkaSpecKafkaTemplatePodVolumesSecretItemsOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretItemsOutput) ToKafkaSpecKafkaTemplatePodVolumesSecretItemsOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesSecretItemsOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretItemsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesSecretItems) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesSecretItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretItemsOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesSecretItems) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodVolumesSecretItems)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutput) ToKafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutput() KafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutput) ToKafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutput) Index(i pulumi.IntInput) KafkaSpecKafkaTemplatePodVolumesSecretItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecKafkaTemplatePodVolumesSecretItems {
		return vs[0].([]KafkaSpecKafkaTemplatePodVolumesSecretItems)[vs[1].(int)]
	}).(KafkaSpecKafkaTemplatePodVolumesSecretItemsOutput)
}

type KafkaSpecKafkaTemplatePodVolumesSecretItemsPatch struct {
	Key  *string `pulumi:"key"`
	Mode *int    `pulumi:"mode"`
	Path *string `pulumi:"path"`
}

// KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArgs and KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArgs{...}
type KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutput() KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutput
	ToKafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutput
}

type KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArgs struct {
	Key  pulumi.StringPtrInput `pulumi:"key"`
	Mode pulumi.IntPtrInput    `pulumi:"mode"`
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesSecretItemsPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutput() KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutput)
}

// KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArray and KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArray{ KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArgs{...} }
type KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutput() KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutput
	ToKafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutput
}

type KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArray []KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchInput

func (KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodVolumesSecretItemsPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArray) ToKafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutput() KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArray) ToKafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutput)
}

type KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesSecretItemsPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutput() KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesSecretItemsPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesSecretItemsPatch) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesSecretItemsPatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecKafkaTemplatePodVolumesSecretItemsPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutput) ToKafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutput() KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutput) ToKafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecKafkaTemplatePodVolumesSecretItemsPatch {
		return vs[0].([]KafkaSpecKafkaTemplatePodVolumesSecretItemsPatch)[vs[1].(int)]
	}).(KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutput)
}

// `Secret` to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesSecretPatch struct {
	DefaultMode *int                                               `pulumi:"defaultMode"`
	Items       []KafkaSpecKafkaTemplatePodVolumesSecretItemsPatch `pulumi:"items"`
	Optional    *bool                                              `pulumi:"optional"`
	SecretName  *string                                            `pulumi:"secretName"`
}

// KafkaSpecKafkaTemplatePodVolumesSecretPatchInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesSecretPatchArgs and KafkaSpecKafkaTemplatePodVolumesSecretPatchOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesSecretPatchInput` via:
//
//	KafkaSpecKafkaTemplatePodVolumesSecretPatchArgs{...}
type KafkaSpecKafkaTemplatePodVolumesSecretPatchInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesSecretPatchOutput() KafkaSpecKafkaTemplatePodVolumesSecretPatchOutput
	ToKafkaSpecKafkaTemplatePodVolumesSecretPatchOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesSecretPatchOutput
}

// `Secret` to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesSecretPatchArgs struct {
	DefaultMode pulumi.IntPtrInput                                         `pulumi:"defaultMode"`
	Items       KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayInput `pulumi:"items"`
	Optional    pulumi.BoolPtrInput                                        `pulumi:"optional"`
	SecretName  pulumi.StringPtrInput                                      `pulumi:"secretName"`
}

func (KafkaSpecKafkaTemplatePodVolumesSecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesSecretPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplatePodVolumesSecretPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesSecretPatchOutput() KafkaSpecKafkaTemplatePodVolumesSecretPatchOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesSecretPatchOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesSecretPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesSecretPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesSecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesSecretPatchOutput)
}

func (i KafkaSpecKafkaTemplatePodVolumesSecretPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplatePodVolumesSecretPatchArgs) ToKafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesSecretPatchOutput).ToKafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrInput is an input type that accepts KafkaSpecKafkaTemplatePodVolumesSecretPatchArgs, KafkaSpecKafkaTemplatePodVolumesSecretPatchPtr and KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrInput` via:
//
//	        KafkaSpecKafkaTemplatePodVolumesSecretPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput
	ToKafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput
}

type kafkaSpecKafkaTemplatePodVolumesSecretPatchPtrType KafkaSpecKafkaTemplatePodVolumesSecretPatchArgs

func KafkaSpecKafkaTemplatePodVolumesSecretPatchPtr(v *KafkaSpecKafkaTemplatePodVolumesSecretPatchArgs) KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrInput {
	return (*kafkaSpecKafkaTemplatePodVolumesSecretPatchPtrType)(v)
}

func (*kafkaSpecKafkaTemplatePodVolumesSecretPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesSecretPatch)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplatePodVolumesSecretPatchPtrType) ToKafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplatePodVolumesSecretPatchPtrType) ToKafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput)
}

// `Secret` to use to populate the volume.
type KafkaSpecKafkaTemplatePodVolumesSecretPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesSecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesSecretPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesSecretPatchOutput() KafkaSpecKafkaTemplatePodVolumesSecretPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesSecretPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesSecretPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput {
	return o.ToKafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretPatchOutput) ToKafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplatePodVolumesSecretPatch) *KafkaSpecKafkaTemplatePodVolumesSecretPatch {
		return &v
	}).(KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretPatchOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesSecretPatch) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretPatchOutput) Items() KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesSecretPatch) []KafkaSpecKafkaTemplatePodVolumesSecretItemsPatch {
		return v.Items
	}).(KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesSecretPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretPatchOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplatePodVolumesSecretPatch) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplatePodVolumesSecretPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput() KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput) ToKafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput) Elem() KafkaSpecKafkaTemplatePodVolumesSecretPatchOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesSecretPatch) KafkaSpecKafkaTemplatePodVolumesSecretPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplatePodVolumesSecretPatch
		return ret
	}).(KafkaSpecKafkaTemplatePodVolumesSecretPatchOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesSecretPatch) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput) Items() KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesSecretPatch) []KafkaSpecKafkaTemplatePodVolumesSecretItemsPatch {
		if v == nil {
			return nil
		}
		return v.Items
	}).(KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesSecretPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplatePodVolumesSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// Template for the Kafka service account.
type KafkaSpecKafkaTemplateServiceAccount struct {
	Metadata *KafkaSpecKafkaTemplateServiceAccountMetadata `pulumi:"metadata"`
}

// KafkaSpecKafkaTemplateServiceAccountInput is an input type that accepts KafkaSpecKafkaTemplateServiceAccountArgs and KafkaSpecKafkaTemplateServiceAccountOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplateServiceAccountInput` via:
//
//	KafkaSpecKafkaTemplateServiceAccountArgs{...}
type KafkaSpecKafkaTemplateServiceAccountInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplateServiceAccountOutput() KafkaSpecKafkaTemplateServiceAccountOutput
	ToKafkaSpecKafkaTemplateServiceAccountOutputWithContext(context.Context) KafkaSpecKafkaTemplateServiceAccountOutput
}

// Template for the Kafka service account.
type KafkaSpecKafkaTemplateServiceAccountArgs struct {
	Metadata KafkaSpecKafkaTemplateServiceAccountMetadataPtrInput `pulumi:"metadata"`
}

func (KafkaSpecKafkaTemplateServiceAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplateServiceAccount)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplateServiceAccountArgs) ToKafkaSpecKafkaTemplateServiceAccountOutput() KafkaSpecKafkaTemplateServiceAccountOutput {
	return i.ToKafkaSpecKafkaTemplateServiceAccountOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplateServiceAccountArgs) ToKafkaSpecKafkaTemplateServiceAccountOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateServiceAccountOutput)
}

func (i KafkaSpecKafkaTemplateServiceAccountArgs) ToKafkaSpecKafkaTemplateServiceAccountPtrOutput() KafkaSpecKafkaTemplateServiceAccountPtrOutput {
	return i.ToKafkaSpecKafkaTemplateServiceAccountPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplateServiceAccountArgs) ToKafkaSpecKafkaTemplateServiceAccountPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateServiceAccountOutput).ToKafkaSpecKafkaTemplateServiceAccountPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplateServiceAccountPtrInput is an input type that accepts KafkaSpecKafkaTemplateServiceAccountArgs, KafkaSpecKafkaTemplateServiceAccountPtr and KafkaSpecKafkaTemplateServiceAccountPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplateServiceAccountPtrInput` via:
//
//	        KafkaSpecKafkaTemplateServiceAccountArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplateServiceAccountPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplateServiceAccountPtrOutput() KafkaSpecKafkaTemplateServiceAccountPtrOutput
	ToKafkaSpecKafkaTemplateServiceAccountPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplateServiceAccountPtrOutput
}

type kafkaSpecKafkaTemplateServiceAccountPtrType KafkaSpecKafkaTemplateServiceAccountArgs

func KafkaSpecKafkaTemplateServiceAccountPtr(v *KafkaSpecKafkaTemplateServiceAccountArgs) KafkaSpecKafkaTemplateServiceAccountPtrInput {
	return (*kafkaSpecKafkaTemplateServiceAccountPtrType)(v)
}

func (*kafkaSpecKafkaTemplateServiceAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplateServiceAccount)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplateServiceAccountPtrType) ToKafkaSpecKafkaTemplateServiceAccountPtrOutput() KafkaSpecKafkaTemplateServiceAccountPtrOutput {
	return i.ToKafkaSpecKafkaTemplateServiceAccountPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplateServiceAccountPtrType) ToKafkaSpecKafkaTemplateServiceAccountPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateServiceAccountPtrOutput)
}

// Template for the Kafka service account.
type KafkaSpecKafkaTemplateServiceAccountOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplateServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplateServiceAccount)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplateServiceAccountOutput) ToKafkaSpecKafkaTemplateServiceAccountOutput() KafkaSpecKafkaTemplateServiceAccountOutput {
	return o
}

func (o KafkaSpecKafkaTemplateServiceAccountOutput) ToKafkaSpecKafkaTemplateServiceAccountOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountOutput {
	return o
}

func (o KafkaSpecKafkaTemplateServiceAccountOutput) ToKafkaSpecKafkaTemplateServiceAccountPtrOutput() KafkaSpecKafkaTemplateServiceAccountPtrOutput {
	return o.ToKafkaSpecKafkaTemplateServiceAccountPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplateServiceAccountOutput) ToKafkaSpecKafkaTemplateServiceAccountPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplateServiceAccount) *KafkaSpecKafkaTemplateServiceAccount {
		return &v
	}).(KafkaSpecKafkaTemplateServiceAccountPtrOutput)
}

func (o KafkaSpecKafkaTemplateServiceAccountOutput) Metadata() KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplateServiceAccount) *KafkaSpecKafkaTemplateServiceAccountMetadata {
		return v.Metadata
	}).(KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput)
}

type KafkaSpecKafkaTemplateServiceAccountPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplateServiceAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplateServiceAccount)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplateServiceAccountPtrOutput) ToKafkaSpecKafkaTemplateServiceAccountPtrOutput() KafkaSpecKafkaTemplateServiceAccountPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplateServiceAccountPtrOutput) ToKafkaSpecKafkaTemplateServiceAccountPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplateServiceAccountPtrOutput) Elem() KafkaSpecKafkaTemplateServiceAccountOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplateServiceAccount) KafkaSpecKafkaTemplateServiceAccount {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplateServiceAccount
		return ret
	}).(KafkaSpecKafkaTemplateServiceAccountOutput)
}

func (o KafkaSpecKafkaTemplateServiceAccountPtrOutput) Metadata() KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplateServiceAccount) *KafkaSpecKafkaTemplateServiceAccountMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecKafkaTemplateServiceAccountMetadata struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaSpecKafkaTemplateServiceAccountMetadataInput is an input type that accepts KafkaSpecKafkaTemplateServiceAccountMetadataArgs and KafkaSpecKafkaTemplateServiceAccountMetadataOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplateServiceAccountMetadataInput` via:
//
//	KafkaSpecKafkaTemplateServiceAccountMetadataArgs{...}
type KafkaSpecKafkaTemplateServiceAccountMetadataInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplateServiceAccountMetadataOutput() KafkaSpecKafkaTemplateServiceAccountMetadataOutput
	ToKafkaSpecKafkaTemplateServiceAccountMetadataOutputWithContext(context.Context) KafkaSpecKafkaTemplateServiceAccountMetadataOutput
}

// Metadata applied to the resource.
type KafkaSpecKafkaTemplateServiceAccountMetadataArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaSpecKafkaTemplateServiceAccountMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplateServiceAccountMetadata)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplateServiceAccountMetadataArgs) ToKafkaSpecKafkaTemplateServiceAccountMetadataOutput() KafkaSpecKafkaTemplateServiceAccountMetadataOutput {
	return i.ToKafkaSpecKafkaTemplateServiceAccountMetadataOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplateServiceAccountMetadataArgs) ToKafkaSpecKafkaTemplateServiceAccountMetadataOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateServiceAccountMetadataOutput)
}

func (i KafkaSpecKafkaTemplateServiceAccountMetadataArgs) ToKafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput() KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput {
	return i.ToKafkaSpecKafkaTemplateServiceAccountMetadataPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplateServiceAccountMetadataArgs) ToKafkaSpecKafkaTemplateServiceAccountMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateServiceAccountMetadataOutput).ToKafkaSpecKafkaTemplateServiceAccountMetadataPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplateServiceAccountMetadataPtrInput is an input type that accepts KafkaSpecKafkaTemplateServiceAccountMetadataArgs, KafkaSpecKafkaTemplateServiceAccountMetadataPtr and KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplateServiceAccountMetadataPtrInput` via:
//
//	        KafkaSpecKafkaTemplateServiceAccountMetadataArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplateServiceAccountMetadataPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput() KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput
	ToKafkaSpecKafkaTemplateServiceAccountMetadataPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput
}

type kafkaSpecKafkaTemplateServiceAccountMetadataPtrType KafkaSpecKafkaTemplateServiceAccountMetadataArgs

func KafkaSpecKafkaTemplateServiceAccountMetadataPtr(v *KafkaSpecKafkaTemplateServiceAccountMetadataArgs) KafkaSpecKafkaTemplateServiceAccountMetadataPtrInput {
	return (*kafkaSpecKafkaTemplateServiceAccountMetadataPtrType)(v)
}

func (*kafkaSpecKafkaTemplateServiceAccountMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplateServiceAccountMetadata)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplateServiceAccountMetadataPtrType) ToKafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput() KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput {
	return i.ToKafkaSpecKafkaTemplateServiceAccountMetadataPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplateServiceAccountMetadataPtrType) ToKafkaSpecKafkaTemplateServiceAccountMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecKafkaTemplateServiceAccountMetadataOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplateServiceAccountMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplateServiceAccountMetadata)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplateServiceAccountMetadataOutput) ToKafkaSpecKafkaTemplateServiceAccountMetadataOutput() KafkaSpecKafkaTemplateServiceAccountMetadataOutput {
	return o
}

func (o KafkaSpecKafkaTemplateServiceAccountMetadataOutput) ToKafkaSpecKafkaTemplateServiceAccountMetadataOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountMetadataOutput {
	return o
}

func (o KafkaSpecKafkaTemplateServiceAccountMetadataOutput) ToKafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput() KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput {
	return o.ToKafkaSpecKafkaTemplateServiceAccountMetadataPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplateServiceAccountMetadataOutput) ToKafkaSpecKafkaTemplateServiceAccountMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplateServiceAccountMetadata) *KafkaSpecKafkaTemplateServiceAccountMetadata {
		return &v
	}).(KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecKafkaTemplateServiceAccountMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplateServiceAccountMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecKafkaTemplateServiceAccountMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplateServiceAccountMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplateServiceAccountMetadata)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput) ToKafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput() KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput) ToKafkaSpecKafkaTemplateServiceAccountMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput) Elem() KafkaSpecKafkaTemplateServiceAccountMetadataOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplateServiceAccountMetadata) KafkaSpecKafkaTemplateServiceAccountMetadata {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplateServiceAccountMetadata
		return ret
	}).(KafkaSpecKafkaTemplateServiceAccountMetadataOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplateServiceAccountMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplateServiceAccountMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Metadata applied to the resource.
type KafkaSpecKafkaTemplateServiceAccountMetadataPatch struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaSpecKafkaTemplateServiceAccountMetadataPatchInput is an input type that accepts KafkaSpecKafkaTemplateServiceAccountMetadataPatchArgs and KafkaSpecKafkaTemplateServiceAccountMetadataPatchOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplateServiceAccountMetadataPatchInput` via:
//
//	KafkaSpecKafkaTemplateServiceAccountMetadataPatchArgs{...}
type KafkaSpecKafkaTemplateServiceAccountMetadataPatchInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplateServiceAccountMetadataPatchOutput() KafkaSpecKafkaTemplateServiceAccountMetadataPatchOutput
	ToKafkaSpecKafkaTemplateServiceAccountMetadataPatchOutputWithContext(context.Context) KafkaSpecKafkaTemplateServiceAccountMetadataPatchOutput
}

// Metadata applied to the resource.
type KafkaSpecKafkaTemplateServiceAccountMetadataPatchArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaSpecKafkaTemplateServiceAccountMetadataPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplateServiceAccountMetadataPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplateServiceAccountMetadataPatchArgs) ToKafkaSpecKafkaTemplateServiceAccountMetadataPatchOutput() KafkaSpecKafkaTemplateServiceAccountMetadataPatchOutput {
	return i.ToKafkaSpecKafkaTemplateServiceAccountMetadataPatchOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplateServiceAccountMetadataPatchArgs) ToKafkaSpecKafkaTemplateServiceAccountMetadataPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountMetadataPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateServiceAccountMetadataPatchOutput)
}

func (i KafkaSpecKafkaTemplateServiceAccountMetadataPatchArgs) ToKafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput() KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplateServiceAccountMetadataPatchArgs) ToKafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateServiceAccountMetadataPatchOutput).ToKafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrInput is an input type that accepts KafkaSpecKafkaTemplateServiceAccountMetadataPatchArgs, KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtr and KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrInput` via:
//
//	        KafkaSpecKafkaTemplateServiceAccountMetadataPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput() KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput
	ToKafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput
}

type kafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrType KafkaSpecKafkaTemplateServiceAccountMetadataPatchArgs

func KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtr(v *KafkaSpecKafkaTemplateServiceAccountMetadataPatchArgs) KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrInput {
	return (*kafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrType)(v)
}

func (*kafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplateServiceAccountMetadataPatch)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrType) ToKafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput() KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrType) ToKafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecKafkaTemplateServiceAccountMetadataPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplateServiceAccountMetadataPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplateServiceAccountMetadataPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplateServiceAccountMetadataPatchOutput) ToKafkaSpecKafkaTemplateServiceAccountMetadataPatchOutput() KafkaSpecKafkaTemplateServiceAccountMetadataPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplateServiceAccountMetadataPatchOutput) ToKafkaSpecKafkaTemplateServiceAccountMetadataPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountMetadataPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplateServiceAccountMetadataPatchOutput) ToKafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput() KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput {
	return o.ToKafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplateServiceAccountMetadataPatchOutput) ToKafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplateServiceAccountMetadataPatch) *KafkaSpecKafkaTemplateServiceAccountMetadataPatch {
		return &v
	}).(KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecKafkaTemplateServiceAccountMetadataPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplateServiceAccountMetadataPatch) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecKafkaTemplateServiceAccountMetadataPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplateServiceAccountMetadataPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplateServiceAccountMetadataPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput) ToKafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput() KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput) ToKafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput) Elem() KafkaSpecKafkaTemplateServiceAccountMetadataPatchOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplateServiceAccountMetadataPatch) KafkaSpecKafkaTemplateServiceAccountMetadataPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplateServiceAccountMetadataPatch
		return ret
	}).(KafkaSpecKafkaTemplateServiceAccountMetadataPatchOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplateServiceAccountMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplateServiceAccountMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Template for the Kafka service account.
type KafkaSpecKafkaTemplateServiceAccountPatch struct {
	Metadata *KafkaSpecKafkaTemplateServiceAccountMetadataPatch `pulumi:"metadata"`
}

// KafkaSpecKafkaTemplateServiceAccountPatchInput is an input type that accepts KafkaSpecKafkaTemplateServiceAccountPatchArgs and KafkaSpecKafkaTemplateServiceAccountPatchOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplateServiceAccountPatchInput` via:
//
//	KafkaSpecKafkaTemplateServiceAccountPatchArgs{...}
type KafkaSpecKafkaTemplateServiceAccountPatchInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplateServiceAccountPatchOutput() KafkaSpecKafkaTemplateServiceAccountPatchOutput
	ToKafkaSpecKafkaTemplateServiceAccountPatchOutputWithContext(context.Context) KafkaSpecKafkaTemplateServiceAccountPatchOutput
}

// Template for the Kafka service account.
type KafkaSpecKafkaTemplateServiceAccountPatchArgs struct {
	Metadata KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrInput `pulumi:"metadata"`
}

func (KafkaSpecKafkaTemplateServiceAccountPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplateServiceAccountPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplateServiceAccountPatchArgs) ToKafkaSpecKafkaTemplateServiceAccountPatchOutput() KafkaSpecKafkaTemplateServiceAccountPatchOutput {
	return i.ToKafkaSpecKafkaTemplateServiceAccountPatchOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplateServiceAccountPatchArgs) ToKafkaSpecKafkaTemplateServiceAccountPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateServiceAccountPatchOutput)
}

func (i KafkaSpecKafkaTemplateServiceAccountPatchArgs) ToKafkaSpecKafkaTemplateServiceAccountPatchPtrOutput() KafkaSpecKafkaTemplateServiceAccountPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplateServiceAccountPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplateServiceAccountPatchArgs) ToKafkaSpecKafkaTemplateServiceAccountPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateServiceAccountPatchOutput).ToKafkaSpecKafkaTemplateServiceAccountPatchPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplateServiceAccountPatchPtrInput is an input type that accepts KafkaSpecKafkaTemplateServiceAccountPatchArgs, KafkaSpecKafkaTemplateServiceAccountPatchPtr and KafkaSpecKafkaTemplateServiceAccountPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplateServiceAccountPatchPtrInput` via:
//
//	        KafkaSpecKafkaTemplateServiceAccountPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplateServiceAccountPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplateServiceAccountPatchPtrOutput() KafkaSpecKafkaTemplateServiceAccountPatchPtrOutput
	ToKafkaSpecKafkaTemplateServiceAccountPatchPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplateServiceAccountPatchPtrOutput
}

type kafkaSpecKafkaTemplateServiceAccountPatchPtrType KafkaSpecKafkaTemplateServiceAccountPatchArgs

func KafkaSpecKafkaTemplateServiceAccountPatchPtr(v *KafkaSpecKafkaTemplateServiceAccountPatchArgs) KafkaSpecKafkaTemplateServiceAccountPatchPtrInput {
	return (*kafkaSpecKafkaTemplateServiceAccountPatchPtrType)(v)
}

func (*kafkaSpecKafkaTemplateServiceAccountPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplateServiceAccountPatch)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplateServiceAccountPatchPtrType) ToKafkaSpecKafkaTemplateServiceAccountPatchPtrOutput() KafkaSpecKafkaTemplateServiceAccountPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplateServiceAccountPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplateServiceAccountPatchPtrType) ToKafkaSpecKafkaTemplateServiceAccountPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateServiceAccountPatchPtrOutput)
}

// Template for the Kafka service account.
type KafkaSpecKafkaTemplateServiceAccountPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplateServiceAccountPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplateServiceAccountPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplateServiceAccountPatchOutput) ToKafkaSpecKafkaTemplateServiceAccountPatchOutput() KafkaSpecKafkaTemplateServiceAccountPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplateServiceAccountPatchOutput) ToKafkaSpecKafkaTemplateServiceAccountPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplateServiceAccountPatchOutput) ToKafkaSpecKafkaTemplateServiceAccountPatchPtrOutput() KafkaSpecKafkaTemplateServiceAccountPatchPtrOutput {
	return o.ToKafkaSpecKafkaTemplateServiceAccountPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplateServiceAccountPatchOutput) ToKafkaSpecKafkaTemplateServiceAccountPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplateServiceAccountPatch) *KafkaSpecKafkaTemplateServiceAccountPatch {
		return &v
	}).(KafkaSpecKafkaTemplateServiceAccountPatchPtrOutput)
}

func (o KafkaSpecKafkaTemplateServiceAccountPatchOutput) Metadata() KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplateServiceAccountPatch) *KafkaSpecKafkaTemplateServiceAccountMetadataPatch {
		return v.Metadata
	}).(KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput)
}

type KafkaSpecKafkaTemplateServiceAccountPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplateServiceAccountPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplateServiceAccountPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplateServiceAccountPatchPtrOutput) ToKafkaSpecKafkaTemplateServiceAccountPatchPtrOutput() KafkaSpecKafkaTemplateServiceAccountPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplateServiceAccountPatchPtrOutput) ToKafkaSpecKafkaTemplateServiceAccountPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateServiceAccountPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplateServiceAccountPatchPtrOutput) Elem() KafkaSpecKafkaTemplateServiceAccountPatchOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplateServiceAccountPatch) KafkaSpecKafkaTemplateServiceAccountPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplateServiceAccountPatch
		return ret
	}).(KafkaSpecKafkaTemplateServiceAccountPatchOutput)
}

func (o KafkaSpecKafkaTemplateServiceAccountPatchPtrOutput) Metadata() KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplateServiceAccountPatch) *KafkaSpecKafkaTemplateServiceAccountMetadataPatch {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput)
}

// Template for Kafka `StatefulSet`.
type KafkaSpecKafkaTemplateStatefulset struct {
	Metadata *KafkaSpecKafkaTemplateStatefulsetMetadata `pulumi:"metadata"`
	// PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.
	PodManagementPolicy *string `pulumi:"podManagementPolicy"`
}

// KafkaSpecKafkaTemplateStatefulsetInput is an input type that accepts KafkaSpecKafkaTemplateStatefulsetArgs and KafkaSpecKafkaTemplateStatefulsetOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplateStatefulsetInput` via:
//
//	KafkaSpecKafkaTemplateStatefulsetArgs{...}
type KafkaSpecKafkaTemplateStatefulsetInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplateStatefulsetOutput() KafkaSpecKafkaTemplateStatefulsetOutput
	ToKafkaSpecKafkaTemplateStatefulsetOutputWithContext(context.Context) KafkaSpecKafkaTemplateStatefulsetOutput
}

// Template for Kafka `StatefulSet`.
type KafkaSpecKafkaTemplateStatefulsetArgs struct {
	Metadata KafkaSpecKafkaTemplateStatefulsetMetadataPtrInput `pulumi:"metadata"`
	// PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.
	PodManagementPolicy pulumi.StringPtrInput `pulumi:"podManagementPolicy"`
}

func (KafkaSpecKafkaTemplateStatefulsetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplateStatefulset)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplateStatefulsetArgs) ToKafkaSpecKafkaTemplateStatefulsetOutput() KafkaSpecKafkaTemplateStatefulsetOutput {
	return i.ToKafkaSpecKafkaTemplateStatefulsetOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplateStatefulsetArgs) ToKafkaSpecKafkaTemplateStatefulsetOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateStatefulsetOutput)
}

func (i KafkaSpecKafkaTemplateStatefulsetArgs) ToKafkaSpecKafkaTemplateStatefulsetPtrOutput() KafkaSpecKafkaTemplateStatefulsetPtrOutput {
	return i.ToKafkaSpecKafkaTemplateStatefulsetPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplateStatefulsetArgs) ToKafkaSpecKafkaTemplateStatefulsetPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateStatefulsetOutput).ToKafkaSpecKafkaTemplateStatefulsetPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplateStatefulsetPtrInput is an input type that accepts KafkaSpecKafkaTemplateStatefulsetArgs, KafkaSpecKafkaTemplateStatefulsetPtr and KafkaSpecKafkaTemplateStatefulsetPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplateStatefulsetPtrInput` via:
//
//	        KafkaSpecKafkaTemplateStatefulsetArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplateStatefulsetPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplateStatefulsetPtrOutput() KafkaSpecKafkaTemplateStatefulsetPtrOutput
	ToKafkaSpecKafkaTemplateStatefulsetPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplateStatefulsetPtrOutput
}

type kafkaSpecKafkaTemplateStatefulsetPtrType KafkaSpecKafkaTemplateStatefulsetArgs

func KafkaSpecKafkaTemplateStatefulsetPtr(v *KafkaSpecKafkaTemplateStatefulsetArgs) KafkaSpecKafkaTemplateStatefulsetPtrInput {
	return (*kafkaSpecKafkaTemplateStatefulsetPtrType)(v)
}

func (*kafkaSpecKafkaTemplateStatefulsetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplateStatefulset)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplateStatefulsetPtrType) ToKafkaSpecKafkaTemplateStatefulsetPtrOutput() KafkaSpecKafkaTemplateStatefulsetPtrOutput {
	return i.ToKafkaSpecKafkaTemplateStatefulsetPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplateStatefulsetPtrType) ToKafkaSpecKafkaTemplateStatefulsetPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateStatefulsetPtrOutput)
}

// Template for Kafka `StatefulSet`.
type KafkaSpecKafkaTemplateStatefulsetOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplateStatefulsetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplateStatefulset)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplateStatefulsetOutput) ToKafkaSpecKafkaTemplateStatefulsetOutput() KafkaSpecKafkaTemplateStatefulsetOutput {
	return o
}

func (o KafkaSpecKafkaTemplateStatefulsetOutput) ToKafkaSpecKafkaTemplateStatefulsetOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetOutput {
	return o
}

func (o KafkaSpecKafkaTemplateStatefulsetOutput) ToKafkaSpecKafkaTemplateStatefulsetPtrOutput() KafkaSpecKafkaTemplateStatefulsetPtrOutput {
	return o.ToKafkaSpecKafkaTemplateStatefulsetPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplateStatefulsetOutput) ToKafkaSpecKafkaTemplateStatefulsetPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplateStatefulset) *KafkaSpecKafkaTemplateStatefulset {
		return &v
	}).(KafkaSpecKafkaTemplateStatefulsetPtrOutput)
}

func (o KafkaSpecKafkaTemplateStatefulsetOutput) Metadata() KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplateStatefulset) *KafkaSpecKafkaTemplateStatefulsetMetadata {
		return v.Metadata
	}).(KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput)
}

// PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.
func (o KafkaSpecKafkaTemplateStatefulsetOutput) PodManagementPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplateStatefulset) *string { return v.PodManagementPolicy }).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTemplateStatefulsetPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplateStatefulsetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplateStatefulset)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplateStatefulsetPtrOutput) ToKafkaSpecKafkaTemplateStatefulsetPtrOutput() KafkaSpecKafkaTemplateStatefulsetPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplateStatefulsetPtrOutput) ToKafkaSpecKafkaTemplateStatefulsetPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplateStatefulsetPtrOutput) Elem() KafkaSpecKafkaTemplateStatefulsetOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplateStatefulset) KafkaSpecKafkaTemplateStatefulset {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplateStatefulset
		return ret
	}).(KafkaSpecKafkaTemplateStatefulsetOutput)
}

func (o KafkaSpecKafkaTemplateStatefulsetPtrOutput) Metadata() KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplateStatefulset) *KafkaSpecKafkaTemplateStatefulsetMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput)
}

// PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.
func (o KafkaSpecKafkaTemplateStatefulsetPtrOutput) PodManagementPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplateStatefulset) *string {
		if v == nil {
			return nil
		}
		return v.PodManagementPolicy
	}).(pulumi.StringPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecKafkaTemplateStatefulsetMetadata struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaSpecKafkaTemplateStatefulsetMetadataInput is an input type that accepts KafkaSpecKafkaTemplateStatefulsetMetadataArgs and KafkaSpecKafkaTemplateStatefulsetMetadataOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplateStatefulsetMetadataInput` via:
//
//	KafkaSpecKafkaTemplateStatefulsetMetadataArgs{...}
type KafkaSpecKafkaTemplateStatefulsetMetadataInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplateStatefulsetMetadataOutput() KafkaSpecKafkaTemplateStatefulsetMetadataOutput
	ToKafkaSpecKafkaTemplateStatefulsetMetadataOutputWithContext(context.Context) KafkaSpecKafkaTemplateStatefulsetMetadataOutput
}

// Metadata applied to the resource.
type KafkaSpecKafkaTemplateStatefulsetMetadataArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaSpecKafkaTemplateStatefulsetMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplateStatefulsetMetadata)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplateStatefulsetMetadataArgs) ToKafkaSpecKafkaTemplateStatefulsetMetadataOutput() KafkaSpecKafkaTemplateStatefulsetMetadataOutput {
	return i.ToKafkaSpecKafkaTemplateStatefulsetMetadataOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplateStatefulsetMetadataArgs) ToKafkaSpecKafkaTemplateStatefulsetMetadataOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateStatefulsetMetadataOutput)
}

func (i KafkaSpecKafkaTemplateStatefulsetMetadataArgs) ToKafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput() KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput {
	return i.ToKafkaSpecKafkaTemplateStatefulsetMetadataPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplateStatefulsetMetadataArgs) ToKafkaSpecKafkaTemplateStatefulsetMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateStatefulsetMetadataOutput).ToKafkaSpecKafkaTemplateStatefulsetMetadataPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplateStatefulsetMetadataPtrInput is an input type that accepts KafkaSpecKafkaTemplateStatefulsetMetadataArgs, KafkaSpecKafkaTemplateStatefulsetMetadataPtr and KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplateStatefulsetMetadataPtrInput` via:
//
//	        KafkaSpecKafkaTemplateStatefulsetMetadataArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplateStatefulsetMetadataPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput() KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput
	ToKafkaSpecKafkaTemplateStatefulsetMetadataPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput
}

type kafkaSpecKafkaTemplateStatefulsetMetadataPtrType KafkaSpecKafkaTemplateStatefulsetMetadataArgs

func KafkaSpecKafkaTemplateStatefulsetMetadataPtr(v *KafkaSpecKafkaTemplateStatefulsetMetadataArgs) KafkaSpecKafkaTemplateStatefulsetMetadataPtrInput {
	return (*kafkaSpecKafkaTemplateStatefulsetMetadataPtrType)(v)
}

func (*kafkaSpecKafkaTemplateStatefulsetMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplateStatefulsetMetadata)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplateStatefulsetMetadataPtrType) ToKafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput() KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput {
	return i.ToKafkaSpecKafkaTemplateStatefulsetMetadataPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplateStatefulsetMetadataPtrType) ToKafkaSpecKafkaTemplateStatefulsetMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecKafkaTemplateStatefulsetMetadataOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplateStatefulsetMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplateStatefulsetMetadata)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplateStatefulsetMetadataOutput) ToKafkaSpecKafkaTemplateStatefulsetMetadataOutput() KafkaSpecKafkaTemplateStatefulsetMetadataOutput {
	return o
}

func (o KafkaSpecKafkaTemplateStatefulsetMetadataOutput) ToKafkaSpecKafkaTemplateStatefulsetMetadataOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetMetadataOutput {
	return o
}

func (o KafkaSpecKafkaTemplateStatefulsetMetadataOutput) ToKafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput() KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput {
	return o.ToKafkaSpecKafkaTemplateStatefulsetMetadataPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplateStatefulsetMetadataOutput) ToKafkaSpecKafkaTemplateStatefulsetMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplateStatefulsetMetadata) *KafkaSpecKafkaTemplateStatefulsetMetadata {
		return &v
	}).(KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecKafkaTemplateStatefulsetMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplateStatefulsetMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecKafkaTemplateStatefulsetMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplateStatefulsetMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplateStatefulsetMetadata)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput) ToKafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput() KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput) ToKafkaSpecKafkaTemplateStatefulsetMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput) Elem() KafkaSpecKafkaTemplateStatefulsetMetadataOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplateStatefulsetMetadata) KafkaSpecKafkaTemplateStatefulsetMetadata {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplateStatefulsetMetadata
		return ret
	}).(KafkaSpecKafkaTemplateStatefulsetMetadataOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplateStatefulsetMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplateStatefulsetMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Metadata applied to the resource.
type KafkaSpecKafkaTemplateStatefulsetMetadataPatch struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaSpecKafkaTemplateStatefulsetMetadataPatchInput is an input type that accepts KafkaSpecKafkaTemplateStatefulsetMetadataPatchArgs and KafkaSpecKafkaTemplateStatefulsetMetadataPatchOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplateStatefulsetMetadataPatchInput` via:
//
//	KafkaSpecKafkaTemplateStatefulsetMetadataPatchArgs{...}
type KafkaSpecKafkaTemplateStatefulsetMetadataPatchInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplateStatefulsetMetadataPatchOutput() KafkaSpecKafkaTemplateStatefulsetMetadataPatchOutput
	ToKafkaSpecKafkaTemplateStatefulsetMetadataPatchOutputWithContext(context.Context) KafkaSpecKafkaTemplateStatefulsetMetadataPatchOutput
}

// Metadata applied to the resource.
type KafkaSpecKafkaTemplateStatefulsetMetadataPatchArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaSpecKafkaTemplateStatefulsetMetadataPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplateStatefulsetMetadataPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplateStatefulsetMetadataPatchArgs) ToKafkaSpecKafkaTemplateStatefulsetMetadataPatchOutput() KafkaSpecKafkaTemplateStatefulsetMetadataPatchOutput {
	return i.ToKafkaSpecKafkaTemplateStatefulsetMetadataPatchOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplateStatefulsetMetadataPatchArgs) ToKafkaSpecKafkaTemplateStatefulsetMetadataPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetMetadataPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateStatefulsetMetadataPatchOutput)
}

func (i KafkaSpecKafkaTemplateStatefulsetMetadataPatchArgs) ToKafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput() KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplateStatefulsetMetadataPatchArgs) ToKafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateStatefulsetMetadataPatchOutput).ToKafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrInput is an input type that accepts KafkaSpecKafkaTemplateStatefulsetMetadataPatchArgs, KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtr and KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrInput` via:
//
//	        KafkaSpecKafkaTemplateStatefulsetMetadataPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput() KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput
	ToKafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput
}

type kafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrType KafkaSpecKafkaTemplateStatefulsetMetadataPatchArgs

func KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtr(v *KafkaSpecKafkaTemplateStatefulsetMetadataPatchArgs) KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrInput {
	return (*kafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrType)(v)
}

func (*kafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplateStatefulsetMetadataPatch)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrType) ToKafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput() KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrType) ToKafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecKafkaTemplateStatefulsetMetadataPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplateStatefulsetMetadataPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplateStatefulsetMetadataPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplateStatefulsetMetadataPatchOutput) ToKafkaSpecKafkaTemplateStatefulsetMetadataPatchOutput() KafkaSpecKafkaTemplateStatefulsetMetadataPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplateStatefulsetMetadataPatchOutput) ToKafkaSpecKafkaTemplateStatefulsetMetadataPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetMetadataPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplateStatefulsetMetadataPatchOutput) ToKafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput() KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput {
	return o.ToKafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplateStatefulsetMetadataPatchOutput) ToKafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplateStatefulsetMetadataPatch) *KafkaSpecKafkaTemplateStatefulsetMetadataPatch {
		return &v
	}).(KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecKafkaTemplateStatefulsetMetadataPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplateStatefulsetMetadataPatch) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecKafkaTemplateStatefulsetMetadataPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplateStatefulsetMetadataPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplateStatefulsetMetadataPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput) ToKafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput() KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput) ToKafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput) Elem() KafkaSpecKafkaTemplateStatefulsetMetadataPatchOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplateStatefulsetMetadataPatch) KafkaSpecKafkaTemplateStatefulsetMetadataPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplateStatefulsetMetadataPatch
		return ret
	}).(KafkaSpecKafkaTemplateStatefulsetMetadataPatchOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplateStatefulsetMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplateStatefulsetMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Template for Kafka `StatefulSet`.
type KafkaSpecKafkaTemplateStatefulsetPatch struct {
	Metadata *KafkaSpecKafkaTemplateStatefulsetMetadataPatch `pulumi:"metadata"`
	// PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.
	PodManagementPolicy *string `pulumi:"podManagementPolicy"`
}

// KafkaSpecKafkaTemplateStatefulsetPatchInput is an input type that accepts KafkaSpecKafkaTemplateStatefulsetPatchArgs and KafkaSpecKafkaTemplateStatefulsetPatchOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplateStatefulsetPatchInput` via:
//
//	KafkaSpecKafkaTemplateStatefulsetPatchArgs{...}
type KafkaSpecKafkaTemplateStatefulsetPatchInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplateStatefulsetPatchOutput() KafkaSpecKafkaTemplateStatefulsetPatchOutput
	ToKafkaSpecKafkaTemplateStatefulsetPatchOutputWithContext(context.Context) KafkaSpecKafkaTemplateStatefulsetPatchOutput
}

// Template for Kafka `StatefulSet`.
type KafkaSpecKafkaTemplateStatefulsetPatchArgs struct {
	Metadata KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrInput `pulumi:"metadata"`
	// PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.
	PodManagementPolicy pulumi.StringPtrInput `pulumi:"podManagementPolicy"`
}

func (KafkaSpecKafkaTemplateStatefulsetPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplateStatefulsetPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTemplateStatefulsetPatchArgs) ToKafkaSpecKafkaTemplateStatefulsetPatchOutput() KafkaSpecKafkaTemplateStatefulsetPatchOutput {
	return i.ToKafkaSpecKafkaTemplateStatefulsetPatchOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplateStatefulsetPatchArgs) ToKafkaSpecKafkaTemplateStatefulsetPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateStatefulsetPatchOutput)
}

func (i KafkaSpecKafkaTemplateStatefulsetPatchArgs) ToKafkaSpecKafkaTemplateStatefulsetPatchPtrOutput() KafkaSpecKafkaTemplateStatefulsetPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplateStatefulsetPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTemplateStatefulsetPatchArgs) ToKafkaSpecKafkaTemplateStatefulsetPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateStatefulsetPatchOutput).ToKafkaSpecKafkaTemplateStatefulsetPatchPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTemplateStatefulsetPatchPtrInput is an input type that accepts KafkaSpecKafkaTemplateStatefulsetPatchArgs, KafkaSpecKafkaTemplateStatefulsetPatchPtr and KafkaSpecKafkaTemplateStatefulsetPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTemplateStatefulsetPatchPtrInput` via:
//
//	        KafkaSpecKafkaTemplateStatefulsetPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTemplateStatefulsetPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTemplateStatefulsetPatchPtrOutput() KafkaSpecKafkaTemplateStatefulsetPatchPtrOutput
	ToKafkaSpecKafkaTemplateStatefulsetPatchPtrOutputWithContext(context.Context) KafkaSpecKafkaTemplateStatefulsetPatchPtrOutput
}

type kafkaSpecKafkaTemplateStatefulsetPatchPtrType KafkaSpecKafkaTemplateStatefulsetPatchArgs

func KafkaSpecKafkaTemplateStatefulsetPatchPtr(v *KafkaSpecKafkaTemplateStatefulsetPatchArgs) KafkaSpecKafkaTemplateStatefulsetPatchPtrInput {
	return (*kafkaSpecKafkaTemplateStatefulsetPatchPtrType)(v)
}

func (*kafkaSpecKafkaTemplateStatefulsetPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplateStatefulsetPatch)(nil)).Elem()
}

func (i *kafkaSpecKafkaTemplateStatefulsetPatchPtrType) ToKafkaSpecKafkaTemplateStatefulsetPatchPtrOutput() KafkaSpecKafkaTemplateStatefulsetPatchPtrOutput {
	return i.ToKafkaSpecKafkaTemplateStatefulsetPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTemplateStatefulsetPatchPtrType) ToKafkaSpecKafkaTemplateStatefulsetPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTemplateStatefulsetPatchPtrOutput)
}

// Template for Kafka `StatefulSet`.
type KafkaSpecKafkaTemplateStatefulsetPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplateStatefulsetPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTemplateStatefulsetPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplateStatefulsetPatchOutput) ToKafkaSpecKafkaTemplateStatefulsetPatchOutput() KafkaSpecKafkaTemplateStatefulsetPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplateStatefulsetPatchOutput) ToKafkaSpecKafkaTemplateStatefulsetPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetPatchOutput {
	return o
}

func (o KafkaSpecKafkaTemplateStatefulsetPatchOutput) ToKafkaSpecKafkaTemplateStatefulsetPatchPtrOutput() KafkaSpecKafkaTemplateStatefulsetPatchPtrOutput {
	return o.ToKafkaSpecKafkaTemplateStatefulsetPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTemplateStatefulsetPatchOutput) ToKafkaSpecKafkaTemplateStatefulsetPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTemplateStatefulsetPatch) *KafkaSpecKafkaTemplateStatefulsetPatch {
		return &v
	}).(KafkaSpecKafkaTemplateStatefulsetPatchPtrOutput)
}

func (o KafkaSpecKafkaTemplateStatefulsetPatchOutput) Metadata() KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplateStatefulsetPatch) *KafkaSpecKafkaTemplateStatefulsetMetadataPatch {
		return v.Metadata
	}).(KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput)
}

// PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.
func (o KafkaSpecKafkaTemplateStatefulsetPatchOutput) PodManagementPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTemplateStatefulsetPatch) *string { return v.PodManagementPolicy }).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTemplateStatefulsetPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTemplateStatefulsetPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTemplateStatefulsetPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTemplateStatefulsetPatchPtrOutput) ToKafkaSpecKafkaTemplateStatefulsetPatchPtrOutput() KafkaSpecKafkaTemplateStatefulsetPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplateStatefulsetPatchPtrOutput) ToKafkaSpecKafkaTemplateStatefulsetPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTemplateStatefulsetPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTemplateStatefulsetPatchPtrOutput) Elem() KafkaSpecKafkaTemplateStatefulsetPatchOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplateStatefulsetPatch) KafkaSpecKafkaTemplateStatefulsetPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTemplateStatefulsetPatch
		return ret
	}).(KafkaSpecKafkaTemplateStatefulsetPatchOutput)
}

func (o KafkaSpecKafkaTemplateStatefulsetPatchPtrOutput) Metadata() KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplateStatefulsetPatch) *KafkaSpecKafkaTemplateStatefulsetMetadataPatch {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput)
}

// PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.
func (o KafkaSpecKafkaTemplateStatefulsetPatchPtrOutput) PodManagementPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTemplateStatefulsetPatch) *string {
		if v == nil {
			return nil
		}
		return v.PodManagementPolicy
	}).(pulumi.StringPtrOutput)
}

// Configure the tiered storage feature for Kafka brokers.
type KafkaSpecKafkaTieredStorage struct {
	RemoteStorageManager *KafkaSpecKafkaTieredStorageRemoteStorageManager `pulumi:"remoteStorageManager"`
	// Storage type, only 'custom' is supported at the moment.
	Type *string `pulumi:"type"`
}

// KafkaSpecKafkaTieredStorageInput is an input type that accepts KafkaSpecKafkaTieredStorageArgs and KafkaSpecKafkaTieredStorageOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTieredStorageInput` via:
//
//	KafkaSpecKafkaTieredStorageArgs{...}
type KafkaSpecKafkaTieredStorageInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTieredStorageOutput() KafkaSpecKafkaTieredStorageOutput
	ToKafkaSpecKafkaTieredStorageOutputWithContext(context.Context) KafkaSpecKafkaTieredStorageOutput
}

// Configure the tiered storage feature for Kafka brokers.
type KafkaSpecKafkaTieredStorageArgs struct {
	RemoteStorageManager KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrInput `pulumi:"remoteStorageManager"`
	// Storage type, only 'custom' is supported at the moment.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaSpecKafkaTieredStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTieredStorage)(nil)).Elem()
}

func (i KafkaSpecKafkaTieredStorageArgs) ToKafkaSpecKafkaTieredStorageOutput() KafkaSpecKafkaTieredStorageOutput {
	return i.ToKafkaSpecKafkaTieredStorageOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTieredStorageArgs) ToKafkaSpecKafkaTieredStorageOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTieredStorageOutput)
}

func (i KafkaSpecKafkaTieredStorageArgs) ToKafkaSpecKafkaTieredStoragePtrOutput() KafkaSpecKafkaTieredStoragePtrOutput {
	return i.ToKafkaSpecKafkaTieredStoragePtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTieredStorageArgs) ToKafkaSpecKafkaTieredStoragePtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTieredStorageOutput).ToKafkaSpecKafkaTieredStoragePtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTieredStoragePtrInput is an input type that accepts KafkaSpecKafkaTieredStorageArgs, KafkaSpecKafkaTieredStoragePtr and KafkaSpecKafkaTieredStoragePtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTieredStoragePtrInput` via:
//
//	        KafkaSpecKafkaTieredStorageArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTieredStoragePtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTieredStoragePtrOutput() KafkaSpecKafkaTieredStoragePtrOutput
	ToKafkaSpecKafkaTieredStoragePtrOutputWithContext(context.Context) KafkaSpecKafkaTieredStoragePtrOutput
}

type kafkaSpecKafkaTieredStoragePtrType KafkaSpecKafkaTieredStorageArgs

func KafkaSpecKafkaTieredStoragePtr(v *KafkaSpecKafkaTieredStorageArgs) KafkaSpecKafkaTieredStoragePtrInput {
	return (*kafkaSpecKafkaTieredStoragePtrType)(v)
}

func (*kafkaSpecKafkaTieredStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTieredStorage)(nil)).Elem()
}

func (i *kafkaSpecKafkaTieredStoragePtrType) ToKafkaSpecKafkaTieredStoragePtrOutput() KafkaSpecKafkaTieredStoragePtrOutput {
	return i.ToKafkaSpecKafkaTieredStoragePtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTieredStoragePtrType) ToKafkaSpecKafkaTieredStoragePtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTieredStoragePtrOutput)
}

// Configure the tiered storage feature for Kafka brokers.
type KafkaSpecKafkaTieredStorageOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTieredStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTieredStorage)(nil)).Elem()
}

func (o KafkaSpecKafkaTieredStorageOutput) ToKafkaSpecKafkaTieredStorageOutput() KafkaSpecKafkaTieredStorageOutput {
	return o
}

func (o KafkaSpecKafkaTieredStorageOutput) ToKafkaSpecKafkaTieredStorageOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStorageOutput {
	return o
}

func (o KafkaSpecKafkaTieredStorageOutput) ToKafkaSpecKafkaTieredStoragePtrOutput() KafkaSpecKafkaTieredStoragePtrOutput {
	return o.ToKafkaSpecKafkaTieredStoragePtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTieredStorageOutput) ToKafkaSpecKafkaTieredStoragePtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTieredStorage) *KafkaSpecKafkaTieredStorage {
		return &v
	}).(KafkaSpecKafkaTieredStoragePtrOutput)
}

func (o KafkaSpecKafkaTieredStorageOutput) RemoteStorageManager() KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTieredStorage) *KafkaSpecKafkaTieredStorageRemoteStorageManager {
		return v.RemoteStorageManager
	}).(KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput)
}

// Storage type, only 'custom' is supported at the moment.
func (o KafkaSpecKafkaTieredStorageOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTieredStorage) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTieredStoragePtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTieredStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTieredStorage)(nil)).Elem()
}

func (o KafkaSpecKafkaTieredStoragePtrOutput) ToKafkaSpecKafkaTieredStoragePtrOutput() KafkaSpecKafkaTieredStoragePtrOutput {
	return o
}

func (o KafkaSpecKafkaTieredStoragePtrOutput) ToKafkaSpecKafkaTieredStoragePtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStoragePtrOutput {
	return o
}

func (o KafkaSpecKafkaTieredStoragePtrOutput) Elem() KafkaSpecKafkaTieredStorageOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTieredStorage) KafkaSpecKafkaTieredStorage {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTieredStorage
		return ret
	}).(KafkaSpecKafkaTieredStorageOutput)
}

func (o KafkaSpecKafkaTieredStoragePtrOutput) RemoteStorageManager() KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTieredStorage) *KafkaSpecKafkaTieredStorageRemoteStorageManager {
		if v == nil {
			return nil
		}
		return v.RemoteStorageManager
	}).(KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput)
}

// Storage type, only 'custom' is supported at the moment.
func (o KafkaSpecKafkaTieredStoragePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTieredStorage) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Configure the tiered storage feature for Kafka brokers.
type KafkaSpecKafkaTieredStoragePatch struct {
	RemoteStorageManager *KafkaSpecKafkaTieredStorageRemoteStorageManagerPatch `pulumi:"remoteStorageManager"`
	// Storage type, only 'custom' is supported at the moment.
	Type *string `pulumi:"type"`
}

// KafkaSpecKafkaTieredStoragePatchInput is an input type that accepts KafkaSpecKafkaTieredStoragePatchArgs and KafkaSpecKafkaTieredStoragePatchOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTieredStoragePatchInput` via:
//
//	KafkaSpecKafkaTieredStoragePatchArgs{...}
type KafkaSpecKafkaTieredStoragePatchInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTieredStoragePatchOutput() KafkaSpecKafkaTieredStoragePatchOutput
	ToKafkaSpecKafkaTieredStoragePatchOutputWithContext(context.Context) KafkaSpecKafkaTieredStoragePatchOutput
}

// Configure the tiered storage feature for Kafka brokers.
type KafkaSpecKafkaTieredStoragePatchArgs struct {
	RemoteStorageManager KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrInput `pulumi:"remoteStorageManager"`
	// Storage type, only 'custom' is supported at the moment.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaSpecKafkaTieredStoragePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTieredStoragePatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTieredStoragePatchArgs) ToKafkaSpecKafkaTieredStoragePatchOutput() KafkaSpecKafkaTieredStoragePatchOutput {
	return i.ToKafkaSpecKafkaTieredStoragePatchOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTieredStoragePatchArgs) ToKafkaSpecKafkaTieredStoragePatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStoragePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTieredStoragePatchOutput)
}

func (i KafkaSpecKafkaTieredStoragePatchArgs) ToKafkaSpecKafkaTieredStoragePatchPtrOutput() KafkaSpecKafkaTieredStoragePatchPtrOutput {
	return i.ToKafkaSpecKafkaTieredStoragePatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTieredStoragePatchArgs) ToKafkaSpecKafkaTieredStoragePatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStoragePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTieredStoragePatchOutput).ToKafkaSpecKafkaTieredStoragePatchPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTieredStoragePatchPtrInput is an input type that accepts KafkaSpecKafkaTieredStoragePatchArgs, KafkaSpecKafkaTieredStoragePatchPtr and KafkaSpecKafkaTieredStoragePatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTieredStoragePatchPtrInput` via:
//
//	        KafkaSpecKafkaTieredStoragePatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTieredStoragePatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTieredStoragePatchPtrOutput() KafkaSpecKafkaTieredStoragePatchPtrOutput
	ToKafkaSpecKafkaTieredStoragePatchPtrOutputWithContext(context.Context) KafkaSpecKafkaTieredStoragePatchPtrOutput
}

type kafkaSpecKafkaTieredStoragePatchPtrType KafkaSpecKafkaTieredStoragePatchArgs

func KafkaSpecKafkaTieredStoragePatchPtr(v *KafkaSpecKafkaTieredStoragePatchArgs) KafkaSpecKafkaTieredStoragePatchPtrInput {
	return (*kafkaSpecKafkaTieredStoragePatchPtrType)(v)
}

func (*kafkaSpecKafkaTieredStoragePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTieredStoragePatch)(nil)).Elem()
}

func (i *kafkaSpecKafkaTieredStoragePatchPtrType) ToKafkaSpecKafkaTieredStoragePatchPtrOutput() KafkaSpecKafkaTieredStoragePatchPtrOutput {
	return i.ToKafkaSpecKafkaTieredStoragePatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTieredStoragePatchPtrType) ToKafkaSpecKafkaTieredStoragePatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStoragePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTieredStoragePatchPtrOutput)
}

// Configure the tiered storage feature for Kafka brokers.
type KafkaSpecKafkaTieredStoragePatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTieredStoragePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTieredStoragePatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTieredStoragePatchOutput) ToKafkaSpecKafkaTieredStoragePatchOutput() KafkaSpecKafkaTieredStoragePatchOutput {
	return o
}

func (o KafkaSpecKafkaTieredStoragePatchOutput) ToKafkaSpecKafkaTieredStoragePatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStoragePatchOutput {
	return o
}

func (o KafkaSpecKafkaTieredStoragePatchOutput) ToKafkaSpecKafkaTieredStoragePatchPtrOutput() KafkaSpecKafkaTieredStoragePatchPtrOutput {
	return o.ToKafkaSpecKafkaTieredStoragePatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTieredStoragePatchOutput) ToKafkaSpecKafkaTieredStoragePatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStoragePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTieredStoragePatch) *KafkaSpecKafkaTieredStoragePatch {
		return &v
	}).(KafkaSpecKafkaTieredStoragePatchPtrOutput)
}

func (o KafkaSpecKafkaTieredStoragePatchOutput) RemoteStorageManager() KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTieredStoragePatch) *KafkaSpecKafkaTieredStorageRemoteStorageManagerPatch {
		return v.RemoteStorageManager
	}).(KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput)
}

// Storage type, only 'custom' is supported at the moment.
func (o KafkaSpecKafkaTieredStoragePatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTieredStoragePatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaSpecKafkaTieredStoragePatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTieredStoragePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTieredStoragePatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTieredStoragePatchPtrOutput) ToKafkaSpecKafkaTieredStoragePatchPtrOutput() KafkaSpecKafkaTieredStoragePatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTieredStoragePatchPtrOutput) ToKafkaSpecKafkaTieredStoragePatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStoragePatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTieredStoragePatchPtrOutput) Elem() KafkaSpecKafkaTieredStoragePatchOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTieredStoragePatch) KafkaSpecKafkaTieredStoragePatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTieredStoragePatch
		return ret
	}).(KafkaSpecKafkaTieredStoragePatchOutput)
}

func (o KafkaSpecKafkaTieredStoragePatchPtrOutput) RemoteStorageManager() KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTieredStoragePatch) *KafkaSpecKafkaTieredStorageRemoteStorageManagerPatch {
		if v == nil {
			return nil
		}
		return v.RemoteStorageManager
	}).(KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput)
}

// Storage type, only 'custom' is supported at the moment.
func (o KafkaSpecKafkaTieredStoragePatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTieredStoragePatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Configuration for the Remote Storage Manager.
type KafkaSpecKafkaTieredStorageRemoteStorageManager struct {
	// The class name for the `RemoteStorageManager` implementation.
	ClassName *string `pulumi:"className"`
	// The class path for the `RemoteStorageManager` implementation.
	ClassPath *string `pulumi:"classPath"`
	// The additional configuration map for the `RemoteStorageManager` implementation. Keys will be automatically prefixed with `rsm.config.`, and added to Kafka broker configuration.
	Config map[string]string `pulumi:"config"`
}

// KafkaSpecKafkaTieredStorageRemoteStorageManagerInput is an input type that accepts KafkaSpecKafkaTieredStorageRemoteStorageManagerArgs and KafkaSpecKafkaTieredStorageRemoteStorageManagerOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTieredStorageRemoteStorageManagerInput` via:
//
//	KafkaSpecKafkaTieredStorageRemoteStorageManagerArgs{...}
type KafkaSpecKafkaTieredStorageRemoteStorageManagerInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTieredStorageRemoteStorageManagerOutput() KafkaSpecKafkaTieredStorageRemoteStorageManagerOutput
	ToKafkaSpecKafkaTieredStorageRemoteStorageManagerOutputWithContext(context.Context) KafkaSpecKafkaTieredStorageRemoteStorageManagerOutput
}

// Configuration for the Remote Storage Manager.
type KafkaSpecKafkaTieredStorageRemoteStorageManagerArgs struct {
	// The class name for the `RemoteStorageManager` implementation.
	ClassName pulumi.StringPtrInput `pulumi:"className"`
	// The class path for the `RemoteStorageManager` implementation.
	ClassPath pulumi.StringPtrInput `pulumi:"classPath"`
	// The additional configuration map for the `RemoteStorageManager` implementation. Keys will be automatically prefixed with `rsm.config.`, and added to Kafka broker configuration.
	Config pulumi.StringMapInput `pulumi:"config"`
}

func (KafkaSpecKafkaTieredStorageRemoteStorageManagerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTieredStorageRemoteStorageManager)(nil)).Elem()
}

func (i KafkaSpecKafkaTieredStorageRemoteStorageManagerArgs) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerOutput() KafkaSpecKafkaTieredStorageRemoteStorageManagerOutput {
	return i.ToKafkaSpecKafkaTieredStorageRemoteStorageManagerOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTieredStorageRemoteStorageManagerArgs) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStorageRemoteStorageManagerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTieredStorageRemoteStorageManagerOutput)
}

func (i KafkaSpecKafkaTieredStorageRemoteStorageManagerArgs) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput() KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput {
	return i.ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTieredStorageRemoteStorageManagerArgs) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTieredStorageRemoteStorageManagerOutput).ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrInput is an input type that accepts KafkaSpecKafkaTieredStorageRemoteStorageManagerArgs, KafkaSpecKafkaTieredStorageRemoteStorageManagerPtr and KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrInput` via:
//
//	        KafkaSpecKafkaTieredStorageRemoteStorageManagerArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput() KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput
	ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutputWithContext(context.Context) KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput
}

type kafkaSpecKafkaTieredStorageRemoteStorageManagerPtrType KafkaSpecKafkaTieredStorageRemoteStorageManagerArgs

func KafkaSpecKafkaTieredStorageRemoteStorageManagerPtr(v *KafkaSpecKafkaTieredStorageRemoteStorageManagerArgs) KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrInput {
	return (*kafkaSpecKafkaTieredStorageRemoteStorageManagerPtrType)(v)
}

func (*kafkaSpecKafkaTieredStorageRemoteStorageManagerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTieredStorageRemoteStorageManager)(nil)).Elem()
}

func (i *kafkaSpecKafkaTieredStorageRemoteStorageManagerPtrType) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput() KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput {
	return i.ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTieredStorageRemoteStorageManagerPtrType) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput)
}

// Configuration for the Remote Storage Manager.
type KafkaSpecKafkaTieredStorageRemoteStorageManagerOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTieredStorageRemoteStorageManagerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTieredStorageRemoteStorageManager)(nil)).Elem()
}

func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerOutput) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerOutput() KafkaSpecKafkaTieredStorageRemoteStorageManagerOutput {
	return o
}

func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerOutput) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStorageRemoteStorageManagerOutput {
	return o
}

func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerOutput) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput() KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput {
	return o.ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerOutput) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTieredStorageRemoteStorageManager) *KafkaSpecKafkaTieredStorageRemoteStorageManager {
		return &v
	}).(KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput)
}

// The class name for the `RemoteStorageManager` implementation.
func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerOutput) ClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTieredStorageRemoteStorageManager) *string { return v.ClassName }).(pulumi.StringPtrOutput)
}

// The class path for the `RemoteStorageManager` implementation.
func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerOutput) ClassPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTieredStorageRemoteStorageManager) *string { return v.ClassPath }).(pulumi.StringPtrOutput)
}

// The additional configuration map for the `RemoteStorageManager` implementation. Keys will be automatically prefixed with `rsm.config.`, and added to Kafka broker configuration.
func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerOutput) Config() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTieredStorageRemoteStorageManager) map[string]string { return v.Config }).(pulumi.StringMapOutput)
}

type KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTieredStorageRemoteStorageManager)(nil)).Elem()
}

func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput() KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput {
	return o
}

func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput {
	return o
}

func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput) Elem() KafkaSpecKafkaTieredStorageRemoteStorageManagerOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTieredStorageRemoteStorageManager) KafkaSpecKafkaTieredStorageRemoteStorageManager {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTieredStorageRemoteStorageManager
		return ret
	}).(KafkaSpecKafkaTieredStorageRemoteStorageManagerOutput)
}

// The class name for the `RemoteStorageManager` implementation.
func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput) ClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTieredStorageRemoteStorageManager) *string {
		if v == nil {
			return nil
		}
		return v.ClassName
	}).(pulumi.StringPtrOutput)
}

// The class path for the `RemoteStorageManager` implementation.
func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput) ClassPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTieredStorageRemoteStorageManager) *string {
		if v == nil {
			return nil
		}
		return v.ClassPath
	}).(pulumi.StringPtrOutput)
}

// The additional configuration map for the `RemoteStorageManager` implementation. Keys will be automatically prefixed with `rsm.config.`, and added to Kafka broker configuration.
func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput) Config() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTieredStorageRemoteStorageManager) map[string]string {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.StringMapOutput)
}

// Configuration for the Remote Storage Manager.
type KafkaSpecKafkaTieredStorageRemoteStorageManagerPatch struct {
	// The class name for the `RemoteStorageManager` implementation.
	ClassName *string `pulumi:"className"`
	// The class path for the `RemoteStorageManager` implementation.
	ClassPath *string `pulumi:"classPath"`
	// The additional configuration map for the `RemoteStorageManager` implementation. Keys will be automatically prefixed with `rsm.config.`, and added to Kafka broker configuration.
	Config map[string]string `pulumi:"config"`
}

// KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchInput is an input type that accepts KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchArgs and KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchInput` via:
//
//	KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchArgs{...}
type KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput() KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput
	ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutputWithContext(context.Context) KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput
}

// Configuration for the Remote Storage Manager.
type KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchArgs struct {
	// The class name for the `RemoteStorageManager` implementation.
	ClassName pulumi.StringPtrInput `pulumi:"className"`
	// The class path for the `RemoteStorageManager` implementation.
	ClassPath pulumi.StringPtrInput `pulumi:"classPath"`
	// The additional configuration map for the `RemoteStorageManager` implementation. Keys will be automatically prefixed with `rsm.config.`, and added to Kafka broker configuration.
	Config pulumi.StringMapInput `pulumi:"config"`
}

func (KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTieredStorageRemoteStorageManagerPatch)(nil)).Elem()
}

func (i KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchArgs) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput() KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput {
	return i.ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchArgs) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput)
}

func (i KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchArgs) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput() KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput {
	return i.ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchArgs) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput).ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutputWithContext(ctx)
}

// KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrInput is an input type that accepts KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchArgs, KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtr and KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrInput` via:
//
//	        KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput() KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput
	ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutputWithContext(context.Context) KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput
}

type kafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrType KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchArgs

func KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtr(v *KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchArgs) KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrInput {
	return (*kafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrType)(v)
}

func (*kafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTieredStorageRemoteStorageManagerPatch)(nil)).Elem()
}

func (i *kafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrType) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput() KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput {
	return i.ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrType) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput)
}

// Configuration for the Remote Storage Manager.
type KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecKafkaTieredStorageRemoteStorageManagerPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput() KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput {
	return o
}

func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput {
	return o
}

func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput() KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput {
	return o.ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecKafkaTieredStorageRemoteStorageManagerPatch) *KafkaSpecKafkaTieredStorageRemoteStorageManagerPatch {
		return &v
	}).(KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput)
}

// The class name for the `RemoteStorageManager` implementation.
func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput) ClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTieredStorageRemoteStorageManagerPatch) *string { return v.ClassName }).(pulumi.StringPtrOutput)
}

// The class path for the `RemoteStorageManager` implementation.
func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput) ClassPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTieredStorageRemoteStorageManagerPatch) *string { return v.ClassPath }).(pulumi.StringPtrOutput)
}

// The additional configuration map for the `RemoteStorageManager` implementation. Keys will be automatically prefixed with `rsm.config.`, and added to Kafka broker configuration.
func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput) Config() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecKafkaTieredStorageRemoteStorageManagerPatch) map[string]string { return v.Config }).(pulumi.StringMapOutput)
}

type KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecKafkaTieredStorageRemoteStorageManagerPatch)(nil)).Elem()
}

func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput() KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput) ToKafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutputWithContext(ctx context.Context) KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput {
	return o
}

func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput) Elem() KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTieredStorageRemoteStorageManagerPatch) KafkaSpecKafkaTieredStorageRemoteStorageManagerPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecKafkaTieredStorageRemoteStorageManagerPatch
		return ret
	}).(KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput)
}

// The class name for the `RemoteStorageManager` implementation.
func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput) ClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTieredStorageRemoteStorageManagerPatch) *string {
		if v == nil {
			return nil
		}
		return v.ClassName
	}).(pulumi.StringPtrOutput)
}

// The class path for the `RemoteStorageManager` implementation.
func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput) ClassPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTieredStorageRemoteStorageManagerPatch) *string {
		if v == nil {
			return nil
		}
		return v.ClassPath
	}).(pulumi.StringPtrOutput)
}

// The additional configuration map for the `RemoteStorageManager` implementation. Keys will be automatically prefixed with `rsm.config.`, and added to Kafka broker configuration.
func (o KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput) Config() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecKafkaTieredStorageRemoteStorageManagerPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.StringMapOutput)
}

// The specification of the Kafka cluster.
type KafkaSpecPatch struct {
	ClientsCa      *KafkaSpecClientsCaPatch      `pulumi:"clientsCa"`
	ClusterCa      *KafkaSpecClusterCaPatch      `pulumi:"clusterCa"`
	CruiseControl  *KafkaSpecCruiseControlPatch  `pulumi:"cruiseControl"`
	EntityOperator *KafkaSpecEntityOperatorPatch `pulumi:"entityOperator"`
	JmxTrans       *KafkaSpecJmxTransPatch       `pulumi:"jmxTrans"`
	Kafka          *KafkaSpecKafkaPatch          `pulumi:"kafka"`
	KafkaExporter  *KafkaSpecKafkaExporterPatch  `pulumi:"kafkaExporter"`
	// A list of time windows for maintenance tasks (that is, certificates renewal). Each time window is defined by a cron expression.
	MaintenanceTimeWindows []string                 `pulumi:"maintenanceTimeWindows"`
	Zookeeper              *KafkaSpecZookeeperPatch `pulumi:"zookeeper"`
}

// KafkaSpecPatchInput is an input type that accepts KafkaSpecPatchArgs and KafkaSpecPatchOutput values.
// You can construct a concrete instance of `KafkaSpecPatchInput` via:
//
//	KafkaSpecPatchArgs{...}
type KafkaSpecPatchInput interface {
	pulumi.Input

	ToKafkaSpecPatchOutput() KafkaSpecPatchOutput
	ToKafkaSpecPatchOutputWithContext(context.Context) KafkaSpecPatchOutput
}

// The specification of the Kafka cluster.
type KafkaSpecPatchArgs struct {
	ClientsCa      KafkaSpecClientsCaPatchPtrInput      `pulumi:"clientsCa"`
	ClusterCa      KafkaSpecClusterCaPatchPtrInput      `pulumi:"clusterCa"`
	CruiseControl  KafkaSpecCruiseControlPatchPtrInput  `pulumi:"cruiseControl"`
	EntityOperator KafkaSpecEntityOperatorPatchPtrInput `pulumi:"entityOperator"`
	JmxTrans       KafkaSpecJmxTransPatchPtrInput       `pulumi:"jmxTrans"`
	Kafka          KafkaSpecKafkaPatchPtrInput          `pulumi:"kafka"`
	KafkaExporter  KafkaSpecKafkaExporterPatchPtrInput  `pulumi:"kafkaExporter"`
	// A list of time windows for maintenance tasks (that is, certificates renewal). Each time window is defined by a cron expression.
	MaintenanceTimeWindows pulumi.StringArrayInput         `pulumi:"maintenanceTimeWindows"`
	Zookeeper              KafkaSpecZookeeperPatchPtrInput `pulumi:"zookeeper"`
}

func (KafkaSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecPatch)(nil)).Elem()
}

func (i KafkaSpecPatchArgs) ToKafkaSpecPatchOutput() KafkaSpecPatchOutput {
	return i.ToKafkaSpecPatchOutputWithContext(context.Background())
}

func (i KafkaSpecPatchArgs) ToKafkaSpecPatchOutputWithContext(ctx context.Context) KafkaSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecPatchOutput)
}

func (i KafkaSpecPatchArgs) ToKafkaSpecPatchPtrOutput() KafkaSpecPatchPtrOutput {
	return i.ToKafkaSpecPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecPatchArgs) ToKafkaSpecPatchPtrOutputWithContext(ctx context.Context) KafkaSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecPatchOutput).ToKafkaSpecPatchPtrOutputWithContext(ctx)
}

// KafkaSpecPatchPtrInput is an input type that accepts KafkaSpecPatchArgs, KafkaSpecPatchPtr and KafkaSpecPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecPatchPtrInput` via:
//
//	        KafkaSpecPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecPatchPtrOutput() KafkaSpecPatchPtrOutput
	ToKafkaSpecPatchPtrOutputWithContext(context.Context) KafkaSpecPatchPtrOutput
}

type kafkaSpecPatchPtrType KafkaSpecPatchArgs

func KafkaSpecPatchPtr(v *KafkaSpecPatchArgs) KafkaSpecPatchPtrInput {
	return (*kafkaSpecPatchPtrType)(v)
}

func (*kafkaSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecPatch)(nil)).Elem()
}

func (i *kafkaSpecPatchPtrType) ToKafkaSpecPatchPtrOutput() KafkaSpecPatchPtrOutput {
	return i.ToKafkaSpecPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecPatchPtrType) ToKafkaSpecPatchPtrOutputWithContext(ctx context.Context) KafkaSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecPatchPtrOutput)
}

// The specification of the Kafka cluster.
type KafkaSpecPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecPatch)(nil)).Elem()
}

func (o KafkaSpecPatchOutput) ToKafkaSpecPatchOutput() KafkaSpecPatchOutput {
	return o
}

func (o KafkaSpecPatchOutput) ToKafkaSpecPatchOutputWithContext(ctx context.Context) KafkaSpecPatchOutput {
	return o
}

func (o KafkaSpecPatchOutput) ToKafkaSpecPatchPtrOutput() KafkaSpecPatchPtrOutput {
	return o.ToKafkaSpecPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecPatchOutput) ToKafkaSpecPatchPtrOutputWithContext(ctx context.Context) KafkaSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecPatch) *KafkaSpecPatch {
		return &v
	}).(KafkaSpecPatchPtrOutput)
}

func (o KafkaSpecPatchOutput) ClientsCa() KafkaSpecClientsCaPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecPatch) *KafkaSpecClientsCaPatch { return v.ClientsCa }).(KafkaSpecClientsCaPatchPtrOutput)
}

func (o KafkaSpecPatchOutput) ClusterCa() KafkaSpecClusterCaPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecPatch) *KafkaSpecClusterCaPatch { return v.ClusterCa }).(KafkaSpecClusterCaPatchPtrOutput)
}

func (o KafkaSpecPatchOutput) CruiseControl() KafkaSpecCruiseControlPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecPatch) *KafkaSpecCruiseControlPatch { return v.CruiseControl }).(KafkaSpecCruiseControlPatchPtrOutput)
}

func (o KafkaSpecPatchOutput) EntityOperator() KafkaSpecEntityOperatorPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecPatch) *KafkaSpecEntityOperatorPatch { return v.EntityOperator }).(KafkaSpecEntityOperatorPatchPtrOutput)
}

func (o KafkaSpecPatchOutput) JmxTrans() KafkaSpecJmxTransPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecPatch) *KafkaSpecJmxTransPatch { return v.JmxTrans }).(KafkaSpecJmxTransPatchPtrOutput)
}

func (o KafkaSpecPatchOutput) Kafka() KafkaSpecKafkaPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecPatch) *KafkaSpecKafkaPatch { return v.Kafka }).(KafkaSpecKafkaPatchPtrOutput)
}

func (o KafkaSpecPatchOutput) KafkaExporter() KafkaSpecKafkaExporterPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecPatch) *KafkaSpecKafkaExporterPatch { return v.KafkaExporter }).(KafkaSpecKafkaExporterPatchPtrOutput)
}

// A list of time windows for maintenance tasks (that is, certificates renewal). Each time window is defined by a cron expression.
func (o KafkaSpecPatchOutput) MaintenanceTimeWindows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecPatch) []string { return v.MaintenanceTimeWindows }).(pulumi.StringArrayOutput)
}

func (o KafkaSpecPatchOutput) Zookeeper() KafkaSpecZookeeperPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecPatch) *KafkaSpecZookeeperPatch { return v.Zookeeper }).(KafkaSpecZookeeperPatchPtrOutput)
}

type KafkaSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecPatch)(nil)).Elem()
}

func (o KafkaSpecPatchPtrOutput) ToKafkaSpecPatchPtrOutput() KafkaSpecPatchPtrOutput {
	return o
}

func (o KafkaSpecPatchPtrOutput) ToKafkaSpecPatchPtrOutputWithContext(ctx context.Context) KafkaSpecPatchPtrOutput {
	return o
}

func (o KafkaSpecPatchPtrOutput) Elem() KafkaSpecPatchOutput {
	return o.ApplyT(func(v *KafkaSpecPatch) KafkaSpecPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecPatch
		return ret
	}).(KafkaSpecPatchOutput)
}

func (o KafkaSpecPatchPtrOutput) ClientsCa() KafkaSpecClientsCaPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecPatch) *KafkaSpecClientsCaPatch {
		if v == nil {
			return nil
		}
		return v.ClientsCa
	}).(KafkaSpecClientsCaPatchPtrOutput)
}

func (o KafkaSpecPatchPtrOutput) ClusterCa() KafkaSpecClusterCaPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecPatch) *KafkaSpecClusterCaPatch {
		if v == nil {
			return nil
		}
		return v.ClusterCa
	}).(KafkaSpecClusterCaPatchPtrOutput)
}

func (o KafkaSpecPatchPtrOutput) CruiseControl() KafkaSpecCruiseControlPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecPatch) *KafkaSpecCruiseControlPatch {
		if v == nil {
			return nil
		}
		return v.CruiseControl
	}).(KafkaSpecCruiseControlPatchPtrOutput)
}

func (o KafkaSpecPatchPtrOutput) EntityOperator() KafkaSpecEntityOperatorPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecPatch) *KafkaSpecEntityOperatorPatch {
		if v == nil {
			return nil
		}
		return v.EntityOperator
	}).(KafkaSpecEntityOperatorPatchPtrOutput)
}

func (o KafkaSpecPatchPtrOutput) JmxTrans() KafkaSpecJmxTransPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecPatch) *KafkaSpecJmxTransPatch {
		if v == nil {
			return nil
		}
		return v.JmxTrans
	}).(KafkaSpecJmxTransPatchPtrOutput)
}

func (o KafkaSpecPatchPtrOutput) Kafka() KafkaSpecKafkaPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecPatch) *KafkaSpecKafkaPatch {
		if v == nil {
			return nil
		}
		return v.Kafka
	}).(KafkaSpecKafkaPatchPtrOutput)
}

func (o KafkaSpecPatchPtrOutput) KafkaExporter() KafkaSpecKafkaExporterPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecPatch) *KafkaSpecKafkaExporterPatch {
		if v == nil {
			return nil
		}
		return v.KafkaExporter
	}).(KafkaSpecKafkaExporterPatchPtrOutput)
}

// A list of time windows for maintenance tasks (that is, certificates renewal). Each time window is defined by a cron expression.
func (o KafkaSpecPatchPtrOutput) MaintenanceTimeWindows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecPatch) []string {
		if v == nil {
			return nil
		}
		return v.MaintenanceTimeWindows
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecPatchPtrOutput) Zookeeper() KafkaSpecZookeeperPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecPatch) *KafkaSpecZookeeperPatch {
		if v == nil {
			return nil
		}
		return v.Zookeeper
	}).(KafkaSpecZookeeperPatchPtrOutput)
}

// As of Strimzi 0.46.0, ZooKeeper-based Apache Kafka clusters are not supported anymore and this option is ignored.
type KafkaSpecZookeeper struct {
	// The ZooKeeper broker config. Properties with the following prefixes cannot be set: server., dataDir, dataLogDir, clientPort, authProvider, quorum.auth, requireClientAuthScheme, snapshot.trust.empty, standaloneEnabled, reconfigEnabled, 4lw.commands.whitelist, secureClientPort, ssl., serverCnxnFactory, sslQuorum (with the exception of: ssl.protocol, ssl.quorum.protocol, ssl.enabledProtocols, ssl.quorum.enabledProtocols, ssl.ciphersuites, ssl.quorum.ciphersuites, ssl.hostnameVerification, ssl.quorum.hostnameVerification).
	Config map[string]interface{} `pulumi:"config"`
	// The container image used for ZooKeeper pods. If no image name is explicitly specified, it is determined based on the Kafka version set in `spec.kafka.version`. The image names are specifically mapped to corresponding versions in the Cluster Operator configuration.
	Image          *string                           `pulumi:"image"`
	JmxOptions     *KafkaSpecZookeeperJmxOptions     `pulumi:"jmxOptions"`
	JvmOptions     *KafkaSpecZookeeperJvmOptions     `pulumi:"jvmOptions"`
	LivenessProbe  *KafkaSpecZookeeperLivenessProbe  `pulumi:"livenessProbe"`
	Logging        *KafkaSpecZookeeperLogging        `pulumi:"logging"`
	MetricsConfig  *KafkaSpecZookeeperMetricsConfig  `pulumi:"metricsConfig"`
	ReadinessProbe *KafkaSpecZookeeperReadinessProbe `pulumi:"readinessProbe"`
	// The number of pods in the cluster.
	Replicas  *int                         `pulumi:"replicas"`
	Resources *KafkaSpecZookeeperResources `pulumi:"resources"`
	Storage   *KafkaSpecZookeeperStorage   `pulumi:"storage"`
	Template  *KafkaSpecZookeeperTemplate  `pulumi:"template"`
}

// KafkaSpecZookeeperInput is an input type that accepts KafkaSpecZookeeperArgs and KafkaSpecZookeeperOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperInput` via:
//
//	KafkaSpecZookeeperArgs{...}
type KafkaSpecZookeeperInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperOutput() KafkaSpecZookeeperOutput
	ToKafkaSpecZookeeperOutputWithContext(context.Context) KafkaSpecZookeeperOutput
}

// As of Strimzi 0.46.0, ZooKeeper-based Apache Kafka clusters are not supported anymore and this option is ignored.
type KafkaSpecZookeeperArgs struct {
	// The ZooKeeper broker config. Properties with the following prefixes cannot be set: server., dataDir, dataLogDir, clientPort, authProvider, quorum.auth, requireClientAuthScheme, snapshot.trust.empty, standaloneEnabled, reconfigEnabled, 4lw.commands.whitelist, secureClientPort, ssl., serverCnxnFactory, sslQuorum (with the exception of: ssl.protocol, ssl.quorum.protocol, ssl.enabledProtocols, ssl.quorum.enabledProtocols, ssl.ciphersuites, ssl.quorum.ciphersuites, ssl.hostnameVerification, ssl.quorum.hostnameVerification).
	Config pulumi.MapInput `pulumi:"config"`
	// The container image used for ZooKeeper pods. If no image name is explicitly specified, it is determined based on the Kafka version set in `spec.kafka.version`. The image names are specifically mapped to corresponding versions in the Cluster Operator configuration.
	Image          pulumi.StringPtrInput                    `pulumi:"image"`
	JmxOptions     KafkaSpecZookeeperJmxOptionsPtrInput     `pulumi:"jmxOptions"`
	JvmOptions     KafkaSpecZookeeperJvmOptionsPtrInput     `pulumi:"jvmOptions"`
	LivenessProbe  KafkaSpecZookeeperLivenessProbePtrInput  `pulumi:"livenessProbe"`
	Logging        KafkaSpecZookeeperLoggingPtrInput        `pulumi:"logging"`
	MetricsConfig  KafkaSpecZookeeperMetricsConfigPtrInput  `pulumi:"metricsConfig"`
	ReadinessProbe KafkaSpecZookeeperReadinessProbePtrInput `pulumi:"readinessProbe"`
	// The number of pods in the cluster.
	Replicas  pulumi.IntPtrInput                  `pulumi:"replicas"`
	Resources KafkaSpecZookeeperResourcesPtrInput `pulumi:"resources"`
	Storage   KafkaSpecZookeeperStoragePtrInput   `pulumi:"storage"`
	Template  KafkaSpecZookeeperTemplatePtrInput  `pulumi:"template"`
}

func (KafkaSpecZookeeperArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeper)(nil)).Elem()
}

func (i KafkaSpecZookeeperArgs) ToKafkaSpecZookeeperOutput() KafkaSpecZookeeperOutput {
	return i.ToKafkaSpecZookeeperOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperArgs) ToKafkaSpecZookeeperOutputWithContext(ctx context.Context) KafkaSpecZookeeperOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperOutput)
}

func (i KafkaSpecZookeeperArgs) ToKafkaSpecZookeeperPtrOutput() KafkaSpecZookeeperPtrOutput {
	return i.ToKafkaSpecZookeeperPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperArgs) ToKafkaSpecZookeeperPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperOutput).ToKafkaSpecZookeeperPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperPtrInput is an input type that accepts KafkaSpecZookeeperArgs, KafkaSpecZookeeperPtr and KafkaSpecZookeeperPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperPtrInput` via:
//
//	        KafkaSpecZookeeperArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperPtrOutput() KafkaSpecZookeeperPtrOutput
	ToKafkaSpecZookeeperPtrOutputWithContext(context.Context) KafkaSpecZookeeperPtrOutput
}

type kafkaSpecZookeeperPtrType KafkaSpecZookeeperArgs

func KafkaSpecZookeeperPtr(v *KafkaSpecZookeeperArgs) KafkaSpecZookeeperPtrInput {
	return (*kafkaSpecZookeeperPtrType)(v)
}

func (*kafkaSpecZookeeperPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeper)(nil)).Elem()
}

func (i *kafkaSpecZookeeperPtrType) ToKafkaSpecZookeeperPtrOutput() KafkaSpecZookeeperPtrOutput {
	return i.ToKafkaSpecZookeeperPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperPtrType) ToKafkaSpecZookeeperPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperPtrOutput)
}

// As of Strimzi 0.46.0, ZooKeeper-based Apache Kafka clusters are not supported anymore and this option is ignored.
type KafkaSpecZookeeperOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeper)(nil)).Elem()
}

func (o KafkaSpecZookeeperOutput) ToKafkaSpecZookeeperOutput() KafkaSpecZookeeperOutput {
	return o
}

func (o KafkaSpecZookeeperOutput) ToKafkaSpecZookeeperOutputWithContext(ctx context.Context) KafkaSpecZookeeperOutput {
	return o
}

func (o KafkaSpecZookeeperOutput) ToKafkaSpecZookeeperPtrOutput() KafkaSpecZookeeperPtrOutput {
	return o.ToKafkaSpecZookeeperPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperOutput) ToKafkaSpecZookeeperPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeper) *KafkaSpecZookeeper {
		return &v
	}).(KafkaSpecZookeeperPtrOutput)
}

// The ZooKeeper broker config. Properties with the following prefixes cannot be set: server., dataDir, dataLogDir, clientPort, authProvider, quorum.auth, requireClientAuthScheme, snapshot.trust.empty, standaloneEnabled, reconfigEnabled, 4lw.commands.whitelist, secureClientPort, ssl., serverCnxnFactory, sslQuorum (with the exception of: ssl.protocol, ssl.quorum.protocol, ssl.enabledProtocols, ssl.quorum.enabledProtocols, ssl.ciphersuites, ssl.quorum.ciphersuites, ssl.hostnameVerification, ssl.quorum.hostnameVerification).
func (o KafkaSpecZookeeperOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeper) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// The container image used for ZooKeeper pods. If no image name is explicitly specified, it is determined based on the Kafka version set in `spec.kafka.version`. The image names are specifically mapped to corresponding versions in the Cluster Operator configuration.
func (o KafkaSpecZookeeperOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeper) *string { return v.Image }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperOutput) JmxOptions() KafkaSpecZookeeperJmxOptionsPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeper) *KafkaSpecZookeeperJmxOptions { return v.JmxOptions }).(KafkaSpecZookeeperJmxOptionsPtrOutput)
}

func (o KafkaSpecZookeeperOutput) JvmOptions() KafkaSpecZookeeperJvmOptionsPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeper) *KafkaSpecZookeeperJvmOptions { return v.JvmOptions }).(KafkaSpecZookeeperJvmOptionsPtrOutput)
}

func (o KafkaSpecZookeeperOutput) LivenessProbe() KafkaSpecZookeeperLivenessProbePtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeper) *KafkaSpecZookeeperLivenessProbe { return v.LivenessProbe }).(KafkaSpecZookeeperLivenessProbePtrOutput)
}

func (o KafkaSpecZookeeperOutput) Logging() KafkaSpecZookeeperLoggingPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeper) *KafkaSpecZookeeperLogging { return v.Logging }).(KafkaSpecZookeeperLoggingPtrOutput)
}

func (o KafkaSpecZookeeperOutput) MetricsConfig() KafkaSpecZookeeperMetricsConfigPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeper) *KafkaSpecZookeeperMetricsConfig { return v.MetricsConfig }).(KafkaSpecZookeeperMetricsConfigPtrOutput)
}

func (o KafkaSpecZookeeperOutput) ReadinessProbe() KafkaSpecZookeeperReadinessProbePtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeper) *KafkaSpecZookeeperReadinessProbe { return v.ReadinessProbe }).(KafkaSpecZookeeperReadinessProbePtrOutput)
}

// The number of pods in the cluster.
func (o KafkaSpecZookeeperOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeper) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperOutput) Resources() KafkaSpecZookeeperResourcesPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeper) *KafkaSpecZookeeperResources { return v.Resources }).(KafkaSpecZookeeperResourcesPtrOutput)
}

func (o KafkaSpecZookeeperOutput) Storage() KafkaSpecZookeeperStoragePtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeper) *KafkaSpecZookeeperStorage { return v.Storage }).(KafkaSpecZookeeperStoragePtrOutput)
}

func (o KafkaSpecZookeeperOutput) Template() KafkaSpecZookeeperTemplatePtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeper) *KafkaSpecZookeeperTemplate { return v.Template }).(KafkaSpecZookeeperTemplatePtrOutput)
}

type KafkaSpecZookeeperPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeper)(nil)).Elem()
}

func (o KafkaSpecZookeeperPtrOutput) ToKafkaSpecZookeeperPtrOutput() KafkaSpecZookeeperPtrOutput {
	return o
}

func (o KafkaSpecZookeeperPtrOutput) ToKafkaSpecZookeeperPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperPtrOutput {
	return o
}

func (o KafkaSpecZookeeperPtrOutput) Elem() KafkaSpecZookeeperOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeper) KafkaSpecZookeeper {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeper
		return ret
	}).(KafkaSpecZookeeperOutput)
}

// The ZooKeeper broker config. Properties with the following prefixes cannot be set: server., dataDir, dataLogDir, clientPort, authProvider, quorum.auth, requireClientAuthScheme, snapshot.trust.empty, standaloneEnabled, reconfigEnabled, 4lw.commands.whitelist, secureClientPort, ssl., serverCnxnFactory, sslQuorum (with the exception of: ssl.protocol, ssl.quorum.protocol, ssl.enabledProtocols, ssl.quorum.enabledProtocols, ssl.ciphersuites, ssl.quorum.ciphersuites, ssl.hostnameVerification, ssl.quorum.hostnameVerification).
func (o KafkaSpecZookeeperPtrOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeper) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.MapOutput)
}

// The container image used for ZooKeeper pods. If no image name is explicitly specified, it is determined based on the Kafka version set in `spec.kafka.version`. The image names are specifically mapped to corresponding versions in the Cluster Operator configuration.
func (o KafkaSpecZookeeperPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeper) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperPtrOutput) JmxOptions() KafkaSpecZookeeperJmxOptionsPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeper) *KafkaSpecZookeeperJmxOptions {
		if v == nil {
			return nil
		}
		return v.JmxOptions
	}).(KafkaSpecZookeeperJmxOptionsPtrOutput)
}

func (o KafkaSpecZookeeperPtrOutput) JvmOptions() KafkaSpecZookeeperJvmOptionsPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeper) *KafkaSpecZookeeperJvmOptions {
		if v == nil {
			return nil
		}
		return v.JvmOptions
	}).(KafkaSpecZookeeperJvmOptionsPtrOutput)
}

func (o KafkaSpecZookeeperPtrOutput) LivenessProbe() KafkaSpecZookeeperLivenessProbePtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeper) *KafkaSpecZookeeperLivenessProbe {
		if v == nil {
			return nil
		}
		return v.LivenessProbe
	}).(KafkaSpecZookeeperLivenessProbePtrOutput)
}

func (o KafkaSpecZookeeperPtrOutput) Logging() KafkaSpecZookeeperLoggingPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeper) *KafkaSpecZookeeperLogging {
		if v == nil {
			return nil
		}
		return v.Logging
	}).(KafkaSpecZookeeperLoggingPtrOutput)
}

func (o KafkaSpecZookeeperPtrOutput) MetricsConfig() KafkaSpecZookeeperMetricsConfigPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeper) *KafkaSpecZookeeperMetricsConfig {
		if v == nil {
			return nil
		}
		return v.MetricsConfig
	}).(KafkaSpecZookeeperMetricsConfigPtrOutput)
}

func (o KafkaSpecZookeeperPtrOutput) ReadinessProbe() KafkaSpecZookeeperReadinessProbePtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeper) *KafkaSpecZookeeperReadinessProbe {
		if v == nil {
			return nil
		}
		return v.ReadinessProbe
	}).(KafkaSpecZookeeperReadinessProbePtrOutput)
}

// The number of pods in the cluster.
func (o KafkaSpecZookeeperPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeper) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperPtrOutput) Resources() KafkaSpecZookeeperResourcesPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeper) *KafkaSpecZookeeperResources {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(KafkaSpecZookeeperResourcesPtrOutput)
}

func (o KafkaSpecZookeeperPtrOutput) Storage() KafkaSpecZookeeperStoragePtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeper) *KafkaSpecZookeeperStorage {
		if v == nil {
			return nil
		}
		return v.Storage
	}).(KafkaSpecZookeeperStoragePtrOutput)
}

func (o KafkaSpecZookeeperPtrOutput) Template() KafkaSpecZookeeperTemplatePtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeper) *KafkaSpecZookeeperTemplate {
		if v == nil {
			return nil
		}
		return v.Template
	}).(KafkaSpecZookeeperTemplatePtrOutput)
}

// JMX Options for Zookeeper nodes.
type KafkaSpecZookeeperJmxOptions struct {
	Authentication *KafkaSpecZookeeperJmxOptionsAuthentication `pulumi:"authentication"`
}

// KafkaSpecZookeeperJmxOptionsInput is an input type that accepts KafkaSpecZookeeperJmxOptionsArgs and KafkaSpecZookeeperJmxOptionsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperJmxOptionsInput` via:
//
//	KafkaSpecZookeeperJmxOptionsArgs{...}
type KafkaSpecZookeeperJmxOptionsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperJmxOptionsOutput() KafkaSpecZookeeperJmxOptionsOutput
	ToKafkaSpecZookeeperJmxOptionsOutputWithContext(context.Context) KafkaSpecZookeeperJmxOptionsOutput
}

// JMX Options for Zookeeper nodes.
type KafkaSpecZookeeperJmxOptionsArgs struct {
	Authentication KafkaSpecZookeeperJmxOptionsAuthenticationPtrInput `pulumi:"authentication"`
}

func (KafkaSpecZookeeperJmxOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperJmxOptions)(nil)).Elem()
}

func (i KafkaSpecZookeeperJmxOptionsArgs) ToKafkaSpecZookeeperJmxOptionsOutput() KafkaSpecZookeeperJmxOptionsOutput {
	return i.ToKafkaSpecZookeeperJmxOptionsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperJmxOptionsArgs) ToKafkaSpecZookeeperJmxOptionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperJmxOptionsOutput)
}

func (i KafkaSpecZookeeperJmxOptionsArgs) ToKafkaSpecZookeeperJmxOptionsPtrOutput() KafkaSpecZookeeperJmxOptionsPtrOutput {
	return i.ToKafkaSpecZookeeperJmxOptionsPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperJmxOptionsArgs) ToKafkaSpecZookeeperJmxOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperJmxOptionsOutput).ToKafkaSpecZookeeperJmxOptionsPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperJmxOptionsPtrInput is an input type that accepts KafkaSpecZookeeperJmxOptionsArgs, KafkaSpecZookeeperJmxOptionsPtr and KafkaSpecZookeeperJmxOptionsPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperJmxOptionsPtrInput` via:
//
//	        KafkaSpecZookeeperJmxOptionsArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperJmxOptionsPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperJmxOptionsPtrOutput() KafkaSpecZookeeperJmxOptionsPtrOutput
	ToKafkaSpecZookeeperJmxOptionsPtrOutputWithContext(context.Context) KafkaSpecZookeeperJmxOptionsPtrOutput
}

type kafkaSpecZookeeperJmxOptionsPtrType KafkaSpecZookeeperJmxOptionsArgs

func KafkaSpecZookeeperJmxOptionsPtr(v *KafkaSpecZookeeperJmxOptionsArgs) KafkaSpecZookeeperJmxOptionsPtrInput {
	return (*kafkaSpecZookeeperJmxOptionsPtrType)(v)
}

func (*kafkaSpecZookeeperJmxOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperJmxOptions)(nil)).Elem()
}

func (i *kafkaSpecZookeeperJmxOptionsPtrType) ToKafkaSpecZookeeperJmxOptionsPtrOutput() KafkaSpecZookeeperJmxOptionsPtrOutput {
	return i.ToKafkaSpecZookeeperJmxOptionsPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperJmxOptionsPtrType) ToKafkaSpecZookeeperJmxOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperJmxOptionsPtrOutput)
}

// JMX Options for Zookeeper nodes.
type KafkaSpecZookeeperJmxOptionsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperJmxOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperJmxOptions)(nil)).Elem()
}

func (o KafkaSpecZookeeperJmxOptionsOutput) ToKafkaSpecZookeeperJmxOptionsOutput() KafkaSpecZookeeperJmxOptionsOutput {
	return o
}

func (o KafkaSpecZookeeperJmxOptionsOutput) ToKafkaSpecZookeeperJmxOptionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsOutput {
	return o
}

func (o KafkaSpecZookeeperJmxOptionsOutput) ToKafkaSpecZookeeperJmxOptionsPtrOutput() KafkaSpecZookeeperJmxOptionsPtrOutput {
	return o.ToKafkaSpecZookeeperJmxOptionsPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperJmxOptionsOutput) ToKafkaSpecZookeeperJmxOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperJmxOptions) *KafkaSpecZookeeperJmxOptions {
		return &v
	}).(KafkaSpecZookeeperJmxOptionsPtrOutput)
}

func (o KafkaSpecZookeeperJmxOptionsOutput) Authentication() KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperJmxOptions) *KafkaSpecZookeeperJmxOptionsAuthentication {
		return v.Authentication
	}).(KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput)
}

type KafkaSpecZookeeperJmxOptionsPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperJmxOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperJmxOptions)(nil)).Elem()
}

func (o KafkaSpecZookeeperJmxOptionsPtrOutput) ToKafkaSpecZookeeperJmxOptionsPtrOutput() KafkaSpecZookeeperJmxOptionsPtrOutput {
	return o
}

func (o KafkaSpecZookeeperJmxOptionsPtrOutput) ToKafkaSpecZookeeperJmxOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsPtrOutput {
	return o
}

func (o KafkaSpecZookeeperJmxOptionsPtrOutput) Elem() KafkaSpecZookeeperJmxOptionsOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperJmxOptions) KafkaSpecZookeeperJmxOptions {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperJmxOptions
		return ret
	}).(KafkaSpecZookeeperJmxOptionsOutput)
}

func (o KafkaSpecZookeeperJmxOptionsPtrOutput) Authentication() KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperJmxOptions) *KafkaSpecZookeeperJmxOptionsAuthentication {
		if v == nil {
			return nil
		}
		return v.Authentication
	}).(KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput)
}

// Authentication configuration for connecting to the JMX port.
type KafkaSpecZookeeperJmxOptionsAuthentication struct {
	// Authentication type. Currently the only supported types are `password`.`password` type creates a username and protected port with no TLS.
	Type *string `pulumi:"type"`
}

// KafkaSpecZookeeperJmxOptionsAuthenticationInput is an input type that accepts KafkaSpecZookeeperJmxOptionsAuthenticationArgs and KafkaSpecZookeeperJmxOptionsAuthenticationOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperJmxOptionsAuthenticationInput` via:
//
//	KafkaSpecZookeeperJmxOptionsAuthenticationArgs{...}
type KafkaSpecZookeeperJmxOptionsAuthenticationInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperJmxOptionsAuthenticationOutput() KafkaSpecZookeeperJmxOptionsAuthenticationOutput
	ToKafkaSpecZookeeperJmxOptionsAuthenticationOutputWithContext(context.Context) KafkaSpecZookeeperJmxOptionsAuthenticationOutput
}

// Authentication configuration for connecting to the JMX port.
type KafkaSpecZookeeperJmxOptionsAuthenticationArgs struct {
	// Authentication type. Currently the only supported types are `password`.`password` type creates a username and protected port with no TLS.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaSpecZookeeperJmxOptionsAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperJmxOptionsAuthentication)(nil)).Elem()
}

func (i KafkaSpecZookeeperJmxOptionsAuthenticationArgs) ToKafkaSpecZookeeperJmxOptionsAuthenticationOutput() KafkaSpecZookeeperJmxOptionsAuthenticationOutput {
	return i.ToKafkaSpecZookeeperJmxOptionsAuthenticationOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperJmxOptionsAuthenticationArgs) ToKafkaSpecZookeeperJmxOptionsAuthenticationOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperJmxOptionsAuthenticationOutput)
}

func (i KafkaSpecZookeeperJmxOptionsAuthenticationArgs) ToKafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput() KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput {
	return i.ToKafkaSpecZookeeperJmxOptionsAuthenticationPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperJmxOptionsAuthenticationArgs) ToKafkaSpecZookeeperJmxOptionsAuthenticationPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperJmxOptionsAuthenticationOutput).ToKafkaSpecZookeeperJmxOptionsAuthenticationPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperJmxOptionsAuthenticationPtrInput is an input type that accepts KafkaSpecZookeeperJmxOptionsAuthenticationArgs, KafkaSpecZookeeperJmxOptionsAuthenticationPtr and KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperJmxOptionsAuthenticationPtrInput` via:
//
//	        KafkaSpecZookeeperJmxOptionsAuthenticationArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperJmxOptionsAuthenticationPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput() KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput
	ToKafkaSpecZookeeperJmxOptionsAuthenticationPtrOutputWithContext(context.Context) KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput
}

type kafkaSpecZookeeperJmxOptionsAuthenticationPtrType KafkaSpecZookeeperJmxOptionsAuthenticationArgs

func KafkaSpecZookeeperJmxOptionsAuthenticationPtr(v *KafkaSpecZookeeperJmxOptionsAuthenticationArgs) KafkaSpecZookeeperJmxOptionsAuthenticationPtrInput {
	return (*kafkaSpecZookeeperJmxOptionsAuthenticationPtrType)(v)
}

func (*kafkaSpecZookeeperJmxOptionsAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperJmxOptionsAuthentication)(nil)).Elem()
}

func (i *kafkaSpecZookeeperJmxOptionsAuthenticationPtrType) ToKafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput() KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput {
	return i.ToKafkaSpecZookeeperJmxOptionsAuthenticationPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperJmxOptionsAuthenticationPtrType) ToKafkaSpecZookeeperJmxOptionsAuthenticationPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput)
}

// Authentication configuration for connecting to the JMX port.
type KafkaSpecZookeeperJmxOptionsAuthenticationOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperJmxOptionsAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperJmxOptionsAuthentication)(nil)).Elem()
}

func (o KafkaSpecZookeeperJmxOptionsAuthenticationOutput) ToKafkaSpecZookeeperJmxOptionsAuthenticationOutput() KafkaSpecZookeeperJmxOptionsAuthenticationOutput {
	return o
}

func (o KafkaSpecZookeeperJmxOptionsAuthenticationOutput) ToKafkaSpecZookeeperJmxOptionsAuthenticationOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsAuthenticationOutput {
	return o
}

func (o KafkaSpecZookeeperJmxOptionsAuthenticationOutput) ToKafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput() KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput {
	return o.ToKafkaSpecZookeeperJmxOptionsAuthenticationPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperJmxOptionsAuthenticationOutput) ToKafkaSpecZookeeperJmxOptionsAuthenticationPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperJmxOptionsAuthentication) *KafkaSpecZookeeperJmxOptionsAuthentication {
		return &v
	}).(KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput)
}

// Authentication type. Currently the only supported types are `password`.`password` type creates a username and protected port with no TLS.
func (o KafkaSpecZookeeperJmxOptionsAuthenticationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperJmxOptionsAuthentication) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperJmxOptionsAuthentication)(nil)).Elem()
}

func (o KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput) ToKafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput() KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput {
	return o
}

func (o KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput) ToKafkaSpecZookeeperJmxOptionsAuthenticationPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput {
	return o
}

func (o KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput) Elem() KafkaSpecZookeeperJmxOptionsAuthenticationOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperJmxOptionsAuthentication) KafkaSpecZookeeperJmxOptionsAuthentication {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperJmxOptionsAuthentication
		return ret
	}).(KafkaSpecZookeeperJmxOptionsAuthenticationOutput)
}

// Authentication type. Currently the only supported types are `password`.`password` type creates a username and protected port with no TLS.
func (o KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperJmxOptionsAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Authentication configuration for connecting to the JMX port.
type KafkaSpecZookeeperJmxOptionsAuthenticationPatch struct {
	// Authentication type. Currently the only supported types are `password`.`password` type creates a username and protected port with no TLS.
	Type *string `pulumi:"type"`
}

// KafkaSpecZookeeperJmxOptionsAuthenticationPatchInput is an input type that accepts KafkaSpecZookeeperJmxOptionsAuthenticationPatchArgs and KafkaSpecZookeeperJmxOptionsAuthenticationPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperJmxOptionsAuthenticationPatchInput` via:
//
//	KafkaSpecZookeeperJmxOptionsAuthenticationPatchArgs{...}
type KafkaSpecZookeeperJmxOptionsAuthenticationPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperJmxOptionsAuthenticationPatchOutput() KafkaSpecZookeeperJmxOptionsAuthenticationPatchOutput
	ToKafkaSpecZookeeperJmxOptionsAuthenticationPatchOutputWithContext(context.Context) KafkaSpecZookeeperJmxOptionsAuthenticationPatchOutput
}

// Authentication configuration for connecting to the JMX port.
type KafkaSpecZookeeperJmxOptionsAuthenticationPatchArgs struct {
	// Authentication type. Currently the only supported types are `password`.`password` type creates a username and protected port with no TLS.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaSpecZookeeperJmxOptionsAuthenticationPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperJmxOptionsAuthenticationPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperJmxOptionsAuthenticationPatchArgs) ToKafkaSpecZookeeperJmxOptionsAuthenticationPatchOutput() KafkaSpecZookeeperJmxOptionsAuthenticationPatchOutput {
	return i.ToKafkaSpecZookeeperJmxOptionsAuthenticationPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperJmxOptionsAuthenticationPatchArgs) ToKafkaSpecZookeeperJmxOptionsAuthenticationPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsAuthenticationPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperJmxOptionsAuthenticationPatchOutput)
}

func (i KafkaSpecZookeeperJmxOptionsAuthenticationPatchArgs) ToKafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput() KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput {
	return i.ToKafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperJmxOptionsAuthenticationPatchArgs) ToKafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperJmxOptionsAuthenticationPatchOutput).ToKafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrInput is an input type that accepts KafkaSpecZookeeperJmxOptionsAuthenticationPatchArgs, KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtr and KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrInput` via:
//
//	        KafkaSpecZookeeperJmxOptionsAuthenticationPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput() KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput
	ToKafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput
}

type kafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrType KafkaSpecZookeeperJmxOptionsAuthenticationPatchArgs

func KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtr(v *KafkaSpecZookeeperJmxOptionsAuthenticationPatchArgs) KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrInput {
	return (*kafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrType)(v)
}

func (*kafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperJmxOptionsAuthenticationPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrType) ToKafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput() KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput {
	return i.ToKafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrType) ToKafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput)
}

// Authentication configuration for connecting to the JMX port.
type KafkaSpecZookeeperJmxOptionsAuthenticationPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperJmxOptionsAuthenticationPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperJmxOptionsAuthenticationPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperJmxOptionsAuthenticationPatchOutput) ToKafkaSpecZookeeperJmxOptionsAuthenticationPatchOutput() KafkaSpecZookeeperJmxOptionsAuthenticationPatchOutput {
	return o
}

func (o KafkaSpecZookeeperJmxOptionsAuthenticationPatchOutput) ToKafkaSpecZookeeperJmxOptionsAuthenticationPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsAuthenticationPatchOutput {
	return o
}

func (o KafkaSpecZookeeperJmxOptionsAuthenticationPatchOutput) ToKafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput() KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput {
	return o.ToKafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperJmxOptionsAuthenticationPatchOutput) ToKafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperJmxOptionsAuthenticationPatch) *KafkaSpecZookeeperJmxOptionsAuthenticationPatch {
		return &v
	}).(KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput)
}

// Authentication type. Currently the only supported types are `password`.`password` type creates a username and protected port with no TLS.
func (o KafkaSpecZookeeperJmxOptionsAuthenticationPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperJmxOptionsAuthenticationPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperJmxOptionsAuthenticationPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput) ToKafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput() KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput) ToKafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput) Elem() KafkaSpecZookeeperJmxOptionsAuthenticationPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperJmxOptionsAuthenticationPatch) KafkaSpecZookeeperJmxOptionsAuthenticationPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperJmxOptionsAuthenticationPatch
		return ret
	}).(KafkaSpecZookeeperJmxOptionsAuthenticationPatchOutput)
}

// Authentication type. Currently the only supported types are `password`.`password` type creates a username and protected port with no TLS.
func (o KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperJmxOptionsAuthenticationPatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// JMX Options for Zookeeper nodes.
type KafkaSpecZookeeperJmxOptionsPatch struct {
	Authentication *KafkaSpecZookeeperJmxOptionsAuthenticationPatch `pulumi:"authentication"`
}

// KafkaSpecZookeeperJmxOptionsPatchInput is an input type that accepts KafkaSpecZookeeperJmxOptionsPatchArgs and KafkaSpecZookeeperJmxOptionsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperJmxOptionsPatchInput` via:
//
//	KafkaSpecZookeeperJmxOptionsPatchArgs{...}
type KafkaSpecZookeeperJmxOptionsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperJmxOptionsPatchOutput() KafkaSpecZookeeperJmxOptionsPatchOutput
	ToKafkaSpecZookeeperJmxOptionsPatchOutputWithContext(context.Context) KafkaSpecZookeeperJmxOptionsPatchOutput
}

// JMX Options for Zookeeper nodes.
type KafkaSpecZookeeperJmxOptionsPatchArgs struct {
	Authentication KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrInput `pulumi:"authentication"`
}

func (KafkaSpecZookeeperJmxOptionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperJmxOptionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperJmxOptionsPatchArgs) ToKafkaSpecZookeeperJmxOptionsPatchOutput() KafkaSpecZookeeperJmxOptionsPatchOutput {
	return i.ToKafkaSpecZookeeperJmxOptionsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperJmxOptionsPatchArgs) ToKafkaSpecZookeeperJmxOptionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperJmxOptionsPatchOutput)
}

func (i KafkaSpecZookeeperJmxOptionsPatchArgs) ToKafkaSpecZookeeperJmxOptionsPatchPtrOutput() KafkaSpecZookeeperJmxOptionsPatchPtrOutput {
	return i.ToKafkaSpecZookeeperJmxOptionsPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperJmxOptionsPatchArgs) ToKafkaSpecZookeeperJmxOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperJmxOptionsPatchOutput).ToKafkaSpecZookeeperJmxOptionsPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperJmxOptionsPatchPtrInput is an input type that accepts KafkaSpecZookeeperJmxOptionsPatchArgs, KafkaSpecZookeeperJmxOptionsPatchPtr and KafkaSpecZookeeperJmxOptionsPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperJmxOptionsPatchPtrInput` via:
//
//	        KafkaSpecZookeeperJmxOptionsPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperJmxOptionsPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperJmxOptionsPatchPtrOutput() KafkaSpecZookeeperJmxOptionsPatchPtrOutput
	ToKafkaSpecZookeeperJmxOptionsPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperJmxOptionsPatchPtrOutput
}

type kafkaSpecZookeeperJmxOptionsPatchPtrType KafkaSpecZookeeperJmxOptionsPatchArgs

func KafkaSpecZookeeperJmxOptionsPatchPtr(v *KafkaSpecZookeeperJmxOptionsPatchArgs) KafkaSpecZookeeperJmxOptionsPatchPtrInput {
	return (*kafkaSpecZookeeperJmxOptionsPatchPtrType)(v)
}

func (*kafkaSpecZookeeperJmxOptionsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperJmxOptionsPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperJmxOptionsPatchPtrType) ToKafkaSpecZookeeperJmxOptionsPatchPtrOutput() KafkaSpecZookeeperJmxOptionsPatchPtrOutput {
	return i.ToKafkaSpecZookeeperJmxOptionsPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperJmxOptionsPatchPtrType) ToKafkaSpecZookeeperJmxOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperJmxOptionsPatchPtrOutput)
}

// JMX Options for Zookeeper nodes.
type KafkaSpecZookeeperJmxOptionsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperJmxOptionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperJmxOptionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperJmxOptionsPatchOutput) ToKafkaSpecZookeeperJmxOptionsPatchOutput() KafkaSpecZookeeperJmxOptionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperJmxOptionsPatchOutput) ToKafkaSpecZookeeperJmxOptionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperJmxOptionsPatchOutput) ToKafkaSpecZookeeperJmxOptionsPatchPtrOutput() KafkaSpecZookeeperJmxOptionsPatchPtrOutput {
	return o.ToKafkaSpecZookeeperJmxOptionsPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperJmxOptionsPatchOutput) ToKafkaSpecZookeeperJmxOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperJmxOptionsPatch) *KafkaSpecZookeeperJmxOptionsPatch {
		return &v
	}).(KafkaSpecZookeeperJmxOptionsPatchPtrOutput)
}

func (o KafkaSpecZookeeperJmxOptionsPatchOutput) Authentication() KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperJmxOptionsPatch) *KafkaSpecZookeeperJmxOptionsAuthenticationPatch {
		return v.Authentication
	}).(KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput)
}

type KafkaSpecZookeeperJmxOptionsPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperJmxOptionsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperJmxOptionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperJmxOptionsPatchPtrOutput) ToKafkaSpecZookeeperJmxOptionsPatchPtrOutput() KafkaSpecZookeeperJmxOptionsPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperJmxOptionsPatchPtrOutput) ToKafkaSpecZookeeperJmxOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJmxOptionsPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperJmxOptionsPatchPtrOutput) Elem() KafkaSpecZookeeperJmxOptionsPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperJmxOptionsPatch) KafkaSpecZookeeperJmxOptionsPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperJmxOptionsPatch
		return ret
	}).(KafkaSpecZookeeperJmxOptionsPatchOutput)
}

func (o KafkaSpecZookeeperJmxOptionsPatchPtrOutput) Authentication() KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperJmxOptionsPatch) *KafkaSpecZookeeperJmxOptionsAuthenticationPatch {
		if v == nil {
			return nil
		}
		return v.Authentication
	}).(KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput)
}

// JVM Options for pods.
type KafkaSpecZookeeperJvmOptions struct {
	// A map of -XX options to the JVM.
	XX map[string]string `pulumi:"-XX"`
	// -Xms option to to the JVM.
	Xms *string `pulumi:"-Xms"`
	// -Xmx option to to the JVM.
	Xmx *string `pulumi:"-Xmx"`
	// Specifies whether the Garbage Collection logging is enabled. The default is false.
	GcLoggingEnabled *bool `pulumi:"gcLoggingEnabled"`
	// A map of additional system properties which will be passed using the `-D` option to the JVM.
	JavaSystemProperties []KafkaSpecZookeeperJvmOptionsJavaSystemProperties `pulumi:"javaSystemProperties"`
}

// KafkaSpecZookeeperJvmOptionsInput is an input type that accepts KafkaSpecZookeeperJvmOptionsArgs and KafkaSpecZookeeperJvmOptionsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperJvmOptionsInput` via:
//
//	KafkaSpecZookeeperJvmOptionsArgs{...}
type KafkaSpecZookeeperJvmOptionsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperJvmOptionsOutput() KafkaSpecZookeeperJvmOptionsOutput
	ToKafkaSpecZookeeperJvmOptionsOutputWithContext(context.Context) KafkaSpecZookeeperJvmOptionsOutput
}

// JVM Options for pods.
type KafkaSpecZookeeperJvmOptionsArgs struct {
	// A map of -XX options to the JVM.
	XX pulumi.StringMapInput `pulumi:"-XX"`
	// -Xms option to to the JVM.
	Xms pulumi.StringPtrInput `pulumi:"-Xms"`
	// -Xmx option to to the JVM.
	Xmx pulumi.StringPtrInput `pulumi:"-Xmx"`
	// Specifies whether the Garbage Collection logging is enabled. The default is false.
	GcLoggingEnabled pulumi.BoolPtrInput `pulumi:"gcLoggingEnabled"`
	// A map of additional system properties which will be passed using the `-D` option to the JVM.
	JavaSystemProperties KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayInput `pulumi:"javaSystemProperties"`
}

func (KafkaSpecZookeeperJvmOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperJvmOptions)(nil)).Elem()
}

func (i KafkaSpecZookeeperJvmOptionsArgs) ToKafkaSpecZookeeperJvmOptionsOutput() KafkaSpecZookeeperJvmOptionsOutput {
	return i.ToKafkaSpecZookeeperJvmOptionsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperJvmOptionsArgs) ToKafkaSpecZookeeperJvmOptionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperJvmOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperJvmOptionsOutput)
}

func (i KafkaSpecZookeeperJvmOptionsArgs) ToKafkaSpecZookeeperJvmOptionsPtrOutput() KafkaSpecZookeeperJvmOptionsPtrOutput {
	return i.ToKafkaSpecZookeeperJvmOptionsPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperJvmOptionsArgs) ToKafkaSpecZookeeperJvmOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJvmOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperJvmOptionsOutput).ToKafkaSpecZookeeperJvmOptionsPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperJvmOptionsPtrInput is an input type that accepts KafkaSpecZookeeperJvmOptionsArgs, KafkaSpecZookeeperJvmOptionsPtr and KafkaSpecZookeeperJvmOptionsPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperJvmOptionsPtrInput` via:
//
//	        KafkaSpecZookeeperJvmOptionsArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperJvmOptionsPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperJvmOptionsPtrOutput() KafkaSpecZookeeperJvmOptionsPtrOutput
	ToKafkaSpecZookeeperJvmOptionsPtrOutputWithContext(context.Context) KafkaSpecZookeeperJvmOptionsPtrOutput
}

type kafkaSpecZookeeperJvmOptionsPtrType KafkaSpecZookeeperJvmOptionsArgs

func KafkaSpecZookeeperJvmOptionsPtr(v *KafkaSpecZookeeperJvmOptionsArgs) KafkaSpecZookeeperJvmOptionsPtrInput {
	return (*kafkaSpecZookeeperJvmOptionsPtrType)(v)
}

func (*kafkaSpecZookeeperJvmOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperJvmOptions)(nil)).Elem()
}

func (i *kafkaSpecZookeeperJvmOptionsPtrType) ToKafkaSpecZookeeperJvmOptionsPtrOutput() KafkaSpecZookeeperJvmOptionsPtrOutput {
	return i.ToKafkaSpecZookeeperJvmOptionsPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperJvmOptionsPtrType) ToKafkaSpecZookeeperJvmOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJvmOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperJvmOptionsPtrOutput)
}

// JVM Options for pods.
type KafkaSpecZookeeperJvmOptionsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperJvmOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperJvmOptions)(nil)).Elem()
}

func (o KafkaSpecZookeeperJvmOptionsOutput) ToKafkaSpecZookeeperJvmOptionsOutput() KafkaSpecZookeeperJvmOptionsOutput {
	return o
}

func (o KafkaSpecZookeeperJvmOptionsOutput) ToKafkaSpecZookeeperJvmOptionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperJvmOptionsOutput {
	return o
}

func (o KafkaSpecZookeeperJvmOptionsOutput) ToKafkaSpecZookeeperJvmOptionsPtrOutput() KafkaSpecZookeeperJvmOptionsPtrOutput {
	return o.ToKafkaSpecZookeeperJvmOptionsPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperJvmOptionsOutput) ToKafkaSpecZookeeperJvmOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJvmOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperJvmOptions) *KafkaSpecZookeeperJvmOptions {
		return &v
	}).(KafkaSpecZookeeperJvmOptionsPtrOutput)
}

// A map of -XX options to the JVM.
func (o KafkaSpecZookeeperJvmOptionsOutput) XX() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperJvmOptions) map[string]string { return v.XX }).(pulumi.StringMapOutput)
}

// -Xms option to to the JVM.
func (o KafkaSpecZookeeperJvmOptionsOutput) Xms() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperJvmOptions) *string { return v.Xms }).(pulumi.StringPtrOutput)
}

// -Xmx option to to the JVM.
func (o KafkaSpecZookeeperJvmOptionsOutput) Xmx() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperJvmOptions) *string { return v.Xmx }).(pulumi.StringPtrOutput)
}

// Specifies whether the Garbage Collection logging is enabled. The default is false.
func (o KafkaSpecZookeeperJvmOptionsOutput) GcLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperJvmOptions) *bool { return v.GcLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// A map of additional system properties which will be passed using the `-D` option to the JVM.
func (o KafkaSpecZookeeperJvmOptionsOutput) JavaSystemProperties() KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperJvmOptions) []KafkaSpecZookeeperJvmOptionsJavaSystemProperties {
		return v.JavaSystemProperties
	}).(KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutput)
}

type KafkaSpecZookeeperJvmOptionsPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperJvmOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperJvmOptions)(nil)).Elem()
}

func (o KafkaSpecZookeeperJvmOptionsPtrOutput) ToKafkaSpecZookeeperJvmOptionsPtrOutput() KafkaSpecZookeeperJvmOptionsPtrOutput {
	return o
}

func (o KafkaSpecZookeeperJvmOptionsPtrOutput) ToKafkaSpecZookeeperJvmOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJvmOptionsPtrOutput {
	return o
}

func (o KafkaSpecZookeeperJvmOptionsPtrOutput) Elem() KafkaSpecZookeeperJvmOptionsOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperJvmOptions) KafkaSpecZookeeperJvmOptions {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperJvmOptions
		return ret
	}).(KafkaSpecZookeeperJvmOptionsOutput)
}

// A map of -XX options to the JVM.
func (o KafkaSpecZookeeperJvmOptionsPtrOutput) XX() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperJvmOptions) map[string]string {
		if v == nil {
			return nil
		}
		return v.XX
	}).(pulumi.StringMapOutput)
}

// -Xms option to to the JVM.
func (o KafkaSpecZookeeperJvmOptionsPtrOutput) Xms() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperJvmOptions) *string {
		if v == nil {
			return nil
		}
		return v.Xms
	}).(pulumi.StringPtrOutput)
}

// -Xmx option to to the JVM.
func (o KafkaSpecZookeeperJvmOptionsPtrOutput) Xmx() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperJvmOptions) *string {
		if v == nil {
			return nil
		}
		return v.Xmx
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the Garbage Collection logging is enabled. The default is false.
func (o KafkaSpecZookeeperJvmOptionsPtrOutput) GcLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperJvmOptions) *bool {
		if v == nil {
			return nil
		}
		return v.GcLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// A map of additional system properties which will be passed using the `-D` option to the JVM.
func (o KafkaSpecZookeeperJvmOptionsPtrOutput) JavaSystemProperties() KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperJvmOptions) []KafkaSpecZookeeperJvmOptionsJavaSystemProperties {
		if v == nil {
			return nil
		}
		return v.JavaSystemProperties
	}).(KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutput)
}

type KafkaSpecZookeeperJvmOptionsJavaSystemProperties struct {
	// The system property name.
	Name *string `pulumi:"name"`
	// The system property value.
	Value *string `pulumi:"value"`
}

// KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesInput is an input type that accepts KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArgs and KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesInput` via:
//
//	KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArgs{...}
type KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutput() KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutput
	ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutputWithContext(context.Context) KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutput
}

type KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArgs struct {
	// The system property name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The system property value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperJvmOptionsJavaSystemProperties)(nil)).Elem()
}

func (i KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArgs) ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutput() KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutput {
	return i.ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArgs) ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutputWithContext(ctx context.Context) KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutput)
}

// KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayInput is an input type that accepts KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArray and KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayInput` via:
//
//	KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArray{ KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArgs{...} }
type KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutput() KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutput
	ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutputWithContext(context.Context) KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutput
}

type KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArray []KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesInput

func (KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperJvmOptionsJavaSystemProperties)(nil)).Elem()
}

func (i KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArray) ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutput() KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutput {
	return i.ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArray) ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutput)
}

type KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperJvmOptionsJavaSystemProperties)(nil)).Elem()
}

func (o KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutput) ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutput() KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutput {
	return o
}

func (o KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutput) ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutputWithContext(ctx context.Context) KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutput {
	return o
}

// The system property name.
func (o KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperJvmOptionsJavaSystemProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The system property value.
func (o KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperJvmOptionsJavaSystemProperties) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperJvmOptionsJavaSystemProperties)(nil)).Elem()
}

func (o KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutput) ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutput() KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutput {
	return o
}

func (o KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutput) ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutput {
	return o
}

func (o KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperJvmOptionsJavaSystemProperties {
		return vs[0].([]KafkaSpecZookeeperJvmOptionsJavaSystemProperties)[vs[1].(int)]
	}).(KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutput)
}

type KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatch struct {
	// The system property name.
	Name *string `pulumi:"name"`
	// The system property value.
	Value *string `pulumi:"value"`
}

// KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchInput is an input type that accepts KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArgs and KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchInput` via:
//
//	KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArgs{...}
type KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutput() KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutput
	ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutputWithContext(context.Context) KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutput
}

type KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArgs struct {
	// The system property name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The system property value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArgs) ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutput() KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutput {
	return i.ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArgs) ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutput)
}

// KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayInput is an input type that accepts KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArray and KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayInput` via:
//
//	KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArray{ KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArgs{...} }
type KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutput() KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutput
	ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutput
}

type KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArray []KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchInput

func (KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArray) ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutput() KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutput {
	return i.ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArray) ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutput)
}

type KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutput) ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutput() KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutput {
	return o
}

func (o KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutput) ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutput {
	return o
}

// The system property name.
func (o KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The system property value.
func (o KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutput) ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutput() KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutput) ToKafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatch {
		return vs[0].([]KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutput)
}

// JVM Options for pods.
type KafkaSpecZookeeperJvmOptionsPatch struct {
	// A map of -XX options to the JVM.
	XX map[string]string `pulumi:"-XX"`
	// -Xms option to to the JVM.
	Xms *string `pulumi:"-Xms"`
	// -Xmx option to to the JVM.
	Xmx *string `pulumi:"-Xmx"`
	// Specifies whether the Garbage Collection logging is enabled. The default is false.
	GcLoggingEnabled *bool `pulumi:"gcLoggingEnabled"`
	// A map of additional system properties which will be passed using the `-D` option to the JVM.
	JavaSystemProperties []KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatch `pulumi:"javaSystemProperties"`
}

// KafkaSpecZookeeperJvmOptionsPatchInput is an input type that accepts KafkaSpecZookeeperJvmOptionsPatchArgs and KafkaSpecZookeeperJvmOptionsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperJvmOptionsPatchInput` via:
//
//	KafkaSpecZookeeperJvmOptionsPatchArgs{...}
type KafkaSpecZookeeperJvmOptionsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperJvmOptionsPatchOutput() KafkaSpecZookeeperJvmOptionsPatchOutput
	ToKafkaSpecZookeeperJvmOptionsPatchOutputWithContext(context.Context) KafkaSpecZookeeperJvmOptionsPatchOutput
}

// JVM Options for pods.
type KafkaSpecZookeeperJvmOptionsPatchArgs struct {
	// A map of -XX options to the JVM.
	XX pulumi.StringMapInput `pulumi:"-XX"`
	// -Xms option to to the JVM.
	Xms pulumi.StringPtrInput `pulumi:"-Xms"`
	// -Xmx option to to the JVM.
	Xmx pulumi.StringPtrInput `pulumi:"-Xmx"`
	// Specifies whether the Garbage Collection logging is enabled. The default is false.
	GcLoggingEnabled pulumi.BoolPtrInput `pulumi:"gcLoggingEnabled"`
	// A map of additional system properties which will be passed using the `-D` option to the JVM.
	JavaSystemProperties KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayInput `pulumi:"javaSystemProperties"`
}

func (KafkaSpecZookeeperJvmOptionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperJvmOptionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperJvmOptionsPatchArgs) ToKafkaSpecZookeeperJvmOptionsPatchOutput() KafkaSpecZookeeperJvmOptionsPatchOutput {
	return i.ToKafkaSpecZookeeperJvmOptionsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperJvmOptionsPatchArgs) ToKafkaSpecZookeeperJvmOptionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperJvmOptionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperJvmOptionsPatchOutput)
}

func (i KafkaSpecZookeeperJvmOptionsPatchArgs) ToKafkaSpecZookeeperJvmOptionsPatchPtrOutput() KafkaSpecZookeeperJvmOptionsPatchPtrOutput {
	return i.ToKafkaSpecZookeeperJvmOptionsPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperJvmOptionsPatchArgs) ToKafkaSpecZookeeperJvmOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJvmOptionsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperJvmOptionsPatchOutput).ToKafkaSpecZookeeperJvmOptionsPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperJvmOptionsPatchPtrInput is an input type that accepts KafkaSpecZookeeperJvmOptionsPatchArgs, KafkaSpecZookeeperJvmOptionsPatchPtr and KafkaSpecZookeeperJvmOptionsPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperJvmOptionsPatchPtrInput` via:
//
//	        KafkaSpecZookeeperJvmOptionsPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperJvmOptionsPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperJvmOptionsPatchPtrOutput() KafkaSpecZookeeperJvmOptionsPatchPtrOutput
	ToKafkaSpecZookeeperJvmOptionsPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperJvmOptionsPatchPtrOutput
}

type kafkaSpecZookeeperJvmOptionsPatchPtrType KafkaSpecZookeeperJvmOptionsPatchArgs

func KafkaSpecZookeeperJvmOptionsPatchPtr(v *KafkaSpecZookeeperJvmOptionsPatchArgs) KafkaSpecZookeeperJvmOptionsPatchPtrInput {
	return (*kafkaSpecZookeeperJvmOptionsPatchPtrType)(v)
}

func (*kafkaSpecZookeeperJvmOptionsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperJvmOptionsPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperJvmOptionsPatchPtrType) ToKafkaSpecZookeeperJvmOptionsPatchPtrOutput() KafkaSpecZookeeperJvmOptionsPatchPtrOutput {
	return i.ToKafkaSpecZookeeperJvmOptionsPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperJvmOptionsPatchPtrType) ToKafkaSpecZookeeperJvmOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJvmOptionsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperJvmOptionsPatchPtrOutput)
}

// JVM Options for pods.
type KafkaSpecZookeeperJvmOptionsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperJvmOptionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperJvmOptionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperJvmOptionsPatchOutput) ToKafkaSpecZookeeperJvmOptionsPatchOutput() KafkaSpecZookeeperJvmOptionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperJvmOptionsPatchOutput) ToKafkaSpecZookeeperJvmOptionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperJvmOptionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperJvmOptionsPatchOutput) ToKafkaSpecZookeeperJvmOptionsPatchPtrOutput() KafkaSpecZookeeperJvmOptionsPatchPtrOutput {
	return o.ToKafkaSpecZookeeperJvmOptionsPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperJvmOptionsPatchOutput) ToKafkaSpecZookeeperJvmOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJvmOptionsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperJvmOptionsPatch) *KafkaSpecZookeeperJvmOptionsPatch {
		return &v
	}).(KafkaSpecZookeeperJvmOptionsPatchPtrOutput)
}

// A map of -XX options to the JVM.
func (o KafkaSpecZookeeperJvmOptionsPatchOutput) XX() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperJvmOptionsPatch) map[string]string { return v.XX }).(pulumi.StringMapOutput)
}

// -Xms option to to the JVM.
func (o KafkaSpecZookeeperJvmOptionsPatchOutput) Xms() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperJvmOptionsPatch) *string { return v.Xms }).(pulumi.StringPtrOutput)
}

// -Xmx option to to the JVM.
func (o KafkaSpecZookeeperJvmOptionsPatchOutput) Xmx() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperJvmOptionsPatch) *string { return v.Xmx }).(pulumi.StringPtrOutput)
}

// Specifies whether the Garbage Collection logging is enabled. The default is false.
func (o KafkaSpecZookeeperJvmOptionsPatchOutput) GcLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperJvmOptionsPatch) *bool { return v.GcLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// A map of additional system properties which will be passed using the `-D` option to the JVM.
func (o KafkaSpecZookeeperJvmOptionsPatchOutput) JavaSystemProperties() KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperJvmOptionsPatch) []KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatch {
		return v.JavaSystemProperties
	}).(KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutput)
}

type KafkaSpecZookeeperJvmOptionsPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperJvmOptionsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperJvmOptionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperJvmOptionsPatchPtrOutput) ToKafkaSpecZookeeperJvmOptionsPatchPtrOutput() KafkaSpecZookeeperJvmOptionsPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperJvmOptionsPatchPtrOutput) ToKafkaSpecZookeeperJvmOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperJvmOptionsPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperJvmOptionsPatchPtrOutput) Elem() KafkaSpecZookeeperJvmOptionsPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperJvmOptionsPatch) KafkaSpecZookeeperJvmOptionsPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperJvmOptionsPatch
		return ret
	}).(KafkaSpecZookeeperJvmOptionsPatchOutput)
}

// A map of -XX options to the JVM.
func (o KafkaSpecZookeeperJvmOptionsPatchPtrOutput) XX() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperJvmOptionsPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.XX
	}).(pulumi.StringMapOutput)
}

// -Xms option to to the JVM.
func (o KafkaSpecZookeeperJvmOptionsPatchPtrOutput) Xms() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperJvmOptionsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Xms
	}).(pulumi.StringPtrOutput)
}

// -Xmx option to to the JVM.
func (o KafkaSpecZookeeperJvmOptionsPatchPtrOutput) Xmx() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperJvmOptionsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Xmx
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the Garbage Collection logging is enabled. The default is false.
func (o KafkaSpecZookeeperJvmOptionsPatchPtrOutput) GcLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperJvmOptionsPatch) *bool {
		if v == nil {
			return nil
		}
		return v.GcLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// A map of additional system properties which will be passed using the `-D` option to the JVM.
func (o KafkaSpecZookeeperJvmOptionsPatchPtrOutput) JavaSystemProperties() KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperJvmOptionsPatch) []KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatch {
		if v == nil {
			return nil
		}
		return v.JavaSystemProperties
	}).(KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutput)
}

// Pod liveness checking.
type KafkaSpecZookeeperLivenessProbe struct {
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// KafkaSpecZookeeperLivenessProbeInput is an input type that accepts KafkaSpecZookeeperLivenessProbeArgs and KafkaSpecZookeeperLivenessProbeOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperLivenessProbeInput` via:
//
//	KafkaSpecZookeeperLivenessProbeArgs{...}
type KafkaSpecZookeeperLivenessProbeInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperLivenessProbeOutput() KafkaSpecZookeeperLivenessProbeOutput
	ToKafkaSpecZookeeperLivenessProbeOutputWithContext(context.Context) KafkaSpecZookeeperLivenessProbeOutput
}

// Pod liveness checking.
type KafkaSpecZookeeperLivenessProbeArgs struct {
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (KafkaSpecZookeeperLivenessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperLivenessProbe)(nil)).Elem()
}

func (i KafkaSpecZookeeperLivenessProbeArgs) ToKafkaSpecZookeeperLivenessProbeOutput() KafkaSpecZookeeperLivenessProbeOutput {
	return i.ToKafkaSpecZookeeperLivenessProbeOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperLivenessProbeArgs) ToKafkaSpecZookeeperLivenessProbeOutputWithContext(ctx context.Context) KafkaSpecZookeeperLivenessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLivenessProbeOutput)
}

func (i KafkaSpecZookeeperLivenessProbeArgs) ToKafkaSpecZookeeperLivenessProbePtrOutput() KafkaSpecZookeeperLivenessProbePtrOutput {
	return i.ToKafkaSpecZookeeperLivenessProbePtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperLivenessProbeArgs) ToKafkaSpecZookeeperLivenessProbePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLivenessProbeOutput).ToKafkaSpecZookeeperLivenessProbePtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperLivenessProbePtrInput is an input type that accepts KafkaSpecZookeeperLivenessProbeArgs, KafkaSpecZookeeperLivenessProbePtr and KafkaSpecZookeeperLivenessProbePtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperLivenessProbePtrInput` via:
//
//	        KafkaSpecZookeeperLivenessProbeArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperLivenessProbePtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperLivenessProbePtrOutput() KafkaSpecZookeeperLivenessProbePtrOutput
	ToKafkaSpecZookeeperLivenessProbePtrOutputWithContext(context.Context) KafkaSpecZookeeperLivenessProbePtrOutput
}

type kafkaSpecZookeeperLivenessProbePtrType KafkaSpecZookeeperLivenessProbeArgs

func KafkaSpecZookeeperLivenessProbePtr(v *KafkaSpecZookeeperLivenessProbeArgs) KafkaSpecZookeeperLivenessProbePtrInput {
	return (*kafkaSpecZookeeperLivenessProbePtrType)(v)
}

func (*kafkaSpecZookeeperLivenessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperLivenessProbe)(nil)).Elem()
}

func (i *kafkaSpecZookeeperLivenessProbePtrType) ToKafkaSpecZookeeperLivenessProbePtrOutput() KafkaSpecZookeeperLivenessProbePtrOutput {
	return i.ToKafkaSpecZookeeperLivenessProbePtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperLivenessProbePtrType) ToKafkaSpecZookeeperLivenessProbePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLivenessProbePtrOutput)
}

// Pod liveness checking.
type KafkaSpecZookeeperLivenessProbeOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperLivenessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperLivenessProbe)(nil)).Elem()
}

func (o KafkaSpecZookeeperLivenessProbeOutput) ToKafkaSpecZookeeperLivenessProbeOutput() KafkaSpecZookeeperLivenessProbeOutput {
	return o
}

func (o KafkaSpecZookeeperLivenessProbeOutput) ToKafkaSpecZookeeperLivenessProbeOutputWithContext(ctx context.Context) KafkaSpecZookeeperLivenessProbeOutput {
	return o
}

func (o KafkaSpecZookeeperLivenessProbeOutput) ToKafkaSpecZookeeperLivenessProbePtrOutput() KafkaSpecZookeeperLivenessProbePtrOutput {
	return o.ToKafkaSpecZookeeperLivenessProbePtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperLivenessProbeOutput) ToKafkaSpecZookeeperLivenessProbePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLivenessProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperLivenessProbe) *KafkaSpecZookeeperLivenessProbe {
		return &v
	}).(KafkaSpecZookeeperLivenessProbePtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
func (o KafkaSpecZookeeperLivenessProbeOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLivenessProbe) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
func (o KafkaSpecZookeeperLivenessProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLivenessProbe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
func (o KafkaSpecZookeeperLivenessProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLivenessProbe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
func (o KafkaSpecZookeeperLivenessProbeOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLivenessProbe) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
func (o KafkaSpecZookeeperLivenessProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLivenessProbe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type KafkaSpecZookeeperLivenessProbePtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperLivenessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperLivenessProbe)(nil)).Elem()
}

func (o KafkaSpecZookeeperLivenessProbePtrOutput) ToKafkaSpecZookeeperLivenessProbePtrOutput() KafkaSpecZookeeperLivenessProbePtrOutput {
	return o
}

func (o KafkaSpecZookeeperLivenessProbePtrOutput) ToKafkaSpecZookeeperLivenessProbePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLivenessProbePtrOutput {
	return o
}

func (o KafkaSpecZookeeperLivenessProbePtrOutput) Elem() KafkaSpecZookeeperLivenessProbeOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLivenessProbe) KafkaSpecZookeeperLivenessProbe {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperLivenessProbe
		return ret
	}).(KafkaSpecZookeeperLivenessProbeOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
func (o KafkaSpecZookeeperLivenessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
func (o KafkaSpecZookeeperLivenessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
func (o KafkaSpecZookeeperLivenessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
func (o KafkaSpecZookeeperLivenessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
func (o KafkaSpecZookeeperLivenessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Pod liveness checking.
type KafkaSpecZookeeperLivenessProbePatch struct {
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// KafkaSpecZookeeperLivenessProbePatchInput is an input type that accepts KafkaSpecZookeeperLivenessProbePatchArgs and KafkaSpecZookeeperLivenessProbePatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperLivenessProbePatchInput` via:
//
//	KafkaSpecZookeeperLivenessProbePatchArgs{...}
type KafkaSpecZookeeperLivenessProbePatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperLivenessProbePatchOutput() KafkaSpecZookeeperLivenessProbePatchOutput
	ToKafkaSpecZookeeperLivenessProbePatchOutputWithContext(context.Context) KafkaSpecZookeeperLivenessProbePatchOutput
}

// Pod liveness checking.
type KafkaSpecZookeeperLivenessProbePatchArgs struct {
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (KafkaSpecZookeeperLivenessProbePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperLivenessProbePatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperLivenessProbePatchArgs) ToKafkaSpecZookeeperLivenessProbePatchOutput() KafkaSpecZookeeperLivenessProbePatchOutput {
	return i.ToKafkaSpecZookeeperLivenessProbePatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperLivenessProbePatchArgs) ToKafkaSpecZookeeperLivenessProbePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperLivenessProbePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLivenessProbePatchOutput)
}

func (i KafkaSpecZookeeperLivenessProbePatchArgs) ToKafkaSpecZookeeperLivenessProbePatchPtrOutput() KafkaSpecZookeeperLivenessProbePatchPtrOutput {
	return i.ToKafkaSpecZookeeperLivenessProbePatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperLivenessProbePatchArgs) ToKafkaSpecZookeeperLivenessProbePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLivenessProbePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLivenessProbePatchOutput).ToKafkaSpecZookeeperLivenessProbePatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperLivenessProbePatchPtrInput is an input type that accepts KafkaSpecZookeeperLivenessProbePatchArgs, KafkaSpecZookeeperLivenessProbePatchPtr and KafkaSpecZookeeperLivenessProbePatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperLivenessProbePatchPtrInput` via:
//
//	        KafkaSpecZookeeperLivenessProbePatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperLivenessProbePatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperLivenessProbePatchPtrOutput() KafkaSpecZookeeperLivenessProbePatchPtrOutput
	ToKafkaSpecZookeeperLivenessProbePatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperLivenessProbePatchPtrOutput
}

type kafkaSpecZookeeperLivenessProbePatchPtrType KafkaSpecZookeeperLivenessProbePatchArgs

func KafkaSpecZookeeperLivenessProbePatchPtr(v *KafkaSpecZookeeperLivenessProbePatchArgs) KafkaSpecZookeeperLivenessProbePatchPtrInput {
	return (*kafkaSpecZookeeperLivenessProbePatchPtrType)(v)
}

func (*kafkaSpecZookeeperLivenessProbePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperLivenessProbePatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperLivenessProbePatchPtrType) ToKafkaSpecZookeeperLivenessProbePatchPtrOutput() KafkaSpecZookeeperLivenessProbePatchPtrOutput {
	return i.ToKafkaSpecZookeeperLivenessProbePatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperLivenessProbePatchPtrType) ToKafkaSpecZookeeperLivenessProbePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLivenessProbePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLivenessProbePatchPtrOutput)
}

// Pod liveness checking.
type KafkaSpecZookeeperLivenessProbePatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperLivenessProbePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperLivenessProbePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperLivenessProbePatchOutput) ToKafkaSpecZookeeperLivenessProbePatchOutput() KafkaSpecZookeeperLivenessProbePatchOutput {
	return o
}

func (o KafkaSpecZookeeperLivenessProbePatchOutput) ToKafkaSpecZookeeperLivenessProbePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperLivenessProbePatchOutput {
	return o
}

func (o KafkaSpecZookeeperLivenessProbePatchOutput) ToKafkaSpecZookeeperLivenessProbePatchPtrOutput() KafkaSpecZookeeperLivenessProbePatchPtrOutput {
	return o.ToKafkaSpecZookeeperLivenessProbePatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperLivenessProbePatchOutput) ToKafkaSpecZookeeperLivenessProbePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLivenessProbePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperLivenessProbePatch) *KafkaSpecZookeeperLivenessProbePatch {
		return &v
	}).(KafkaSpecZookeeperLivenessProbePatchPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
func (o KafkaSpecZookeeperLivenessProbePatchOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLivenessProbePatch) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
func (o KafkaSpecZookeeperLivenessProbePatchOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLivenessProbePatch) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
func (o KafkaSpecZookeeperLivenessProbePatchOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLivenessProbePatch) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
func (o KafkaSpecZookeeperLivenessProbePatchOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLivenessProbePatch) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
func (o KafkaSpecZookeeperLivenessProbePatchOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLivenessProbePatch) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type KafkaSpecZookeeperLivenessProbePatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperLivenessProbePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperLivenessProbePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperLivenessProbePatchPtrOutput) ToKafkaSpecZookeeperLivenessProbePatchPtrOutput() KafkaSpecZookeeperLivenessProbePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperLivenessProbePatchPtrOutput) ToKafkaSpecZookeeperLivenessProbePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLivenessProbePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperLivenessProbePatchPtrOutput) Elem() KafkaSpecZookeeperLivenessProbePatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLivenessProbePatch) KafkaSpecZookeeperLivenessProbePatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperLivenessProbePatch
		return ret
	}).(KafkaSpecZookeeperLivenessProbePatchOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
func (o KafkaSpecZookeeperLivenessProbePatchPtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLivenessProbePatch) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
func (o KafkaSpecZookeeperLivenessProbePatchPtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLivenessProbePatch) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
func (o KafkaSpecZookeeperLivenessProbePatchPtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLivenessProbePatch) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
func (o KafkaSpecZookeeperLivenessProbePatchPtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLivenessProbePatch) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
func (o KafkaSpecZookeeperLivenessProbePatchPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLivenessProbePatch) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Logging configuration for ZooKeeper.
type KafkaSpecZookeeperLogging struct {
	// A Map from logger name to logger level.
	Loggers map[string]string `pulumi:"loggers"`
	// Logging type, must be either 'inline' or 'external'.
	Type      *string                             `pulumi:"type"`
	ValueFrom *KafkaSpecZookeeperLoggingValueFrom `pulumi:"valueFrom"`
}

// KafkaSpecZookeeperLoggingInput is an input type that accepts KafkaSpecZookeeperLoggingArgs and KafkaSpecZookeeperLoggingOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperLoggingInput` via:
//
//	KafkaSpecZookeeperLoggingArgs{...}
type KafkaSpecZookeeperLoggingInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperLoggingOutput() KafkaSpecZookeeperLoggingOutput
	ToKafkaSpecZookeeperLoggingOutputWithContext(context.Context) KafkaSpecZookeeperLoggingOutput
}

// Logging configuration for ZooKeeper.
type KafkaSpecZookeeperLoggingArgs struct {
	// A Map from logger name to logger level.
	Loggers pulumi.StringMapInput `pulumi:"loggers"`
	// Logging type, must be either 'inline' or 'external'.
	Type      pulumi.StringPtrInput                      `pulumi:"type"`
	ValueFrom KafkaSpecZookeeperLoggingValueFromPtrInput `pulumi:"valueFrom"`
}

func (KafkaSpecZookeeperLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperLogging)(nil)).Elem()
}

func (i KafkaSpecZookeeperLoggingArgs) ToKafkaSpecZookeeperLoggingOutput() KafkaSpecZookeeperLoggingOutput {
	return i.ToKafkaSpecZookeeperLoggingOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperLoggingArgs) ToKafkaSpecZookeeperLoggingOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLoggingOutput)
}

func (i KafkaSpecZookeeperLoggingArgs) ToKafkaSpecZookeeperLoggingPtrOutput() KafkaSpecZookeeperLoggingPtrOutput {
	return i.ToKafkaSpecZookeeperLoggingPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperLoggingArgs) ToKafkaSpecZookeeperLoggingPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLoggingOutput).ToKafkaSpecZookeeperLoggingPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperLoggingPtrInput is an input type that accepts KafkaSpecZookeeperLoggingArgs, KafkaSpecZookeeperLoggingPtr and KafkaSpecZookeeperLoggingPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperLoggingPtrInput` via:
//
//	        KafkaSpecZookeeperLoggingArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperLoggingPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperLoggingPtrOutput() KafkaSpecZookeeperLoggingPtrOutput
	ToKafkaSpecZookeeperLoggingPtrOutputWithContext(context.Context) KafkaSpecZookeeperLoggingPtrOutput
}

type kafkaSpecZookeeperLoggingPtrType KafkaSpecZookeeperLoggingArgs

func KafkaSpecZookeeperLoggingPtr(v *KafkaSpecZookeeperLoggingArgs) KafkaSpecZookeeperLoggingPtrInput {
	return (*kafkaSpecZookeeperLoggingPtrType)(v)
}

func (*kafkaSpecZookeeperLoggingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperLogging)(nil)).Elem()
}

func (i *kafkaSpecZookeeperLoggingPtrType) ToKafkaSpecZookeeperLoggingPtrOutput() KafkaSpecZookeeperLoggingPtrOutput {
	return i.ToKafkaSpecZookeeperLoggingPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperLoggingPtrType) ToKafkaSpecZookeeperLoggingPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLoggingPtrOutput)
}

// Logging configuration for ZooKeeper.
type KafkaSpecZookeeperLoggingOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperLogging)(nil)).Elem()
}

func (o KafkaSpecZookeeperLoggingOutput) ToKafkaSpecZookeeperLoggingOutput() KafkaSpecZookeeperLoggingOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingOutput) ToKafkaSpecZookeeperLoggingOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingOutput) ToKafkaSpecZookeeperLoggingPtrOutput() KafkaSpecZookeeperLoggingPtrOutput {
	return o.ToKafkaSpecZookeeperLoggingPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperLoggingOutput) ToKafkaSpecZookeeperLoggingPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperLogging) *KafkaSpecZookeeperLogging {
		return &v
	}).(KafkaSpecZookeeperLoggingPtrOutput)
}

// A Map from logger name to logger level.
func (o KafkaSpecZookeeperLoggingOutput) Loggers() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLogging) map[string]string { return v.Loggers }).(pulumi.StringMapOutput)
}

// Logging type, must be either 'inline' or 'external'.
func (o KafkaSpecZookeeperLoggingOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLogging) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperLoggingOutput) ValueFrom() KafkaSpecZookeeperLoggingValueFromPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLogging) *KafkaSpecZookeeperLoggingValueFrom { return v.ValueFrom }).(KafkaSpecZookeeperLoggingValueFromPtrOutput)
}

type KafkaSpecZookeeperLoggingPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperLoggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperLogging)(nil)).Elem()
}

func (o KafkaSpecZookeeperLoggingPtrOutput) ToKafkaSpecZookeeperLoggingPtrOutput() KafkaSpecZookeeperLoggingPtrOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingPtrOutput) ToKafkaSpecZookeeperLoggingPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingPtrOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingPtrOutput) Elem() KafkaSpecZookeeperLoggingOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLogging) KafkaSpecZookeeperLogging {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperLogging
		return ret
	}).(KafkaSpecZookeeperLoggingOutput)
}

// A Map from logger name to logger level.
func (o KafkaSpecZookeeperLoggingPtrOutput) Loggers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLogging) map[string]string {
		if v == nil {
			return nil
		}
		return v.Loggers
	}).(pulumi.StringMapOutput)
}

// Logging type, must be either 'inline' or 'external'.
func (o KafkaSpecZookeeperLoggingPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLogging) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperLoggingPtrOutput) ValueFrom() KafkaSpecZookeeperLoggingValueFromPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLogging) *KafkaSpecZookeeperLoggingValueFrom {
		if v == nil {
			return nil
		}
		return v.ValueFrom
	}).(KafkaSpecZookeeperLoggingValueFromPtrOutput)
}

// Logging configuration for ZooKeeper.
type KafkaSpecZookeeperLoggingPatch struct {
	// A Map from logger name to logger level.
	Loggers map[string]string `pulumi:"loggers"`
	// Logging type, must be either 'inline' or 'external'.
	Type      *string                                  `pulumi:"type"`
	ValueFrom *KafkaSpecZookeeperLoggingValueFromPatch `pulumi:"valueFrom"`
}

// KafkaSpecZookeeperLoggingPatchInput is an input type that accepts KafkaSpecZookeeperLoggingPatchArgs and KafkaSpecZookeeperLoggingPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperLoggingPatchInput` via:
//
//	KafkaSpecZookeeperLoggingPatchArgs{...}
type KafkaSpecZookeeperLoggingPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperLoggingPatchOutput() KafkaSpecZookeeperLoggingPatchOutput
	ToKafkaSpecZookeeperLoggingPatchOutputWithContext(context.Context) KafkaSpecZookeeperLoggingPatchOutput
}

// Logging configuration for ZooKeeper.
type KafkaSpecZookeeperLoggingPatchArgs struct {
	// A Map from logger name to logger level.
	Loggers pulumi.StringMapInput `pulumi:"loggers"`
	// Logging type, must be either 'inline' or 'external'.
	Type      pulumi.StringPtrInput                           `pulumi:"type"`
	ValueFrom KafkaSpecZookeeperLoggingValueFromPatchPtrInput `pulumi:"valueFrom"`
}

func (KafkaSpecZookeeperLoggingPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperLoggingPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperLoggingPatchArgs) ToKafkaSpecZookeeperLoggingPatchOutput() KafkaSpecZookeeperLoggingPatchOutput {
	return i.ToKafkaSpecZookeeperLoggingPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperLoggingPatchArgs) ToKafkaSpecZookeeperLoggingPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLoggingPatchOutput)
}

func (i KafkaSpecZookeeperLoggingPatchArgs) ToKafkaSpecZookeeperLoggingPatchPtrOutput() KafkaSpecZookeeperLoggingPatchPtrOutput {
	return i.ToKafkaSpecZookeeperLoggingPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperLoggingPatchArgs) ToKafkaSpecZookeeperLoggingPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLoggingPatchOutput).ToKafkaSpecZookeeperLoggingPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperLoggingPatchPtrInput is an input type that accepts KafkaSpecZookeeperLoggingPatchArgs, KafkaSpecZookeeperLoggingPatchPtr and KafkaSpecZookeeperLoggingPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperLoggingPatchPtrInput` via:
//
//	        KafkaSpecZookeeperLoggingPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperLoggingPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperLoggingPatchPtrOutput() KafkaSpecZookeeperLoggingPatchPtrOutput
	ToKafkaSpecZookeeperLoggingPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperLoggingPatchPtrOutput
}

type kafkaSpecZookeeperLoggingPatchPtrType KafkaSpecZookeeperLoggingPatchArgs

func KafkaSpecZookeeperLoggingPatchPtr(v *KafkaSpecZookeeperLoggingPatchArgs) KafkaSpecZookeeperLoggingPatchPtrInput {
	return (*kafkaSpecZookeeperLoggingPatchPtrType)(v)
}

func (*kafkaSpecZookeeperLoggingPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperLoggingPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperLoggingPatchPtrType) ToKafkaSpecZookeeperLoggingPatchPtrOutput() KafkaSpecZookeeperLoggingPatchPtrOutput {
	return i.ToKafkaSpecZookeeperLoggingPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperLoggingPatchPtrType) ToKafkaSpecZookeeperLoggingPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLoggingPatchPtrOutput)
}

// Logging configuration for ZooKeeper.
type KafkaSpecZookeeperLoggingPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperLoggingPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperLoggingPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperLoggingPatchOutput) ToKafkaSpecZookeeperLoggingPatchOutput() KafkaSpecZookeeperLoggingPatchOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingPatchOutput) ToKafkaSpecZookeeperLoggingPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingPatchOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingPatchOutput) ToKafkaSpecZookeeperLoggingPatchPtrOutput() KafkaSpecZookeeperLoggingPatchPtrOutput {
	return o.ToKafkaSpecZookeeperLoggingPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperLoggingPatchOutput) ToKafkaSpecZookeeperLoggingPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperLoggingPatch) *KafkaSpecZookeeperLoggingPatch {
		return &v
	}).(KafkaSpecZookeeperLoggingPatchPtrOutput)
}

// A Map from logger name to logger level.
func (o KafkaSpecZookeeperLoggingPatchOutput) Loggers() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLoggingPatch) map[string]string { return v.Loggers }).(pulumi.StringMapOutput)
}

// Logging type, must be either 'inline' or 'external'.
func (o KafkaSpecZookeeperLoggingPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLoggingPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperLoggingPatchOutput) ValueFrom() KafkaSpecZookeeperLoggingValueFromPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLoggingPatch) *KafkaSpecZookeeperLoggingValueFromPatch { return v.ValueFrom }).(KafkaSpecZookeeperLoggingValueFromPatchPtrOutput)
}

type KafkaSpecZookeeperLoggingPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperLoggingPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperLoggingPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperLoggingPatchPtrOutput) ToKafkaSpecZookeeperLoggingPatchPtrOutput() KafkaSpecZookeeperLoggingPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingPatchPtrOutput) ToKafkaSpecZookeeperLoggingPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingPatchPtrOutput) Elem() KafkaSpecZookeeperLoggingPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLoggingPatch) KafkaSpecZookeeperLoggingPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperLoggingPatch
		return ret
	}).(KafkaSpecZookeeperLoggingPatchOutput)
}

// A Map from logger name to logger level.
func (o KafkaSpecZookeeperLoggingPatchPtrOutput) Loggers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLoggingPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Loggers
	}).(pulumi.StringMapOutput)
}

// Logging type, must be either 'inline' or 'external'.
func (o KafkaSpecZookeeperLoggingPatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLoggingPatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperLoggingPatchPtrOutput) ValueFrom() KafkaSpecZookeeperLoggingValueFromPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLoggingPatch) *KafkaSpecZookeeperLoggingValueFromPatch {
		if v == nil {
			return nil
		}
		return v.ValueFrom
	}).(KafkaSpecZookeeperLoggingValueFromPatchPtrOutput)
}

// `ConfigMap` entry where the logging configuration is stored.
type KafkaSpecZookeeperLoggingValueFrom struct {
	ConfigMapKeyRef *KafkaSpecZookeeperLoggingValueFromConfigMapKeyRef `pulumi:"configMapKeyRef"`
}

// KafkaSpecZookeeperLoggingValueFromInput is an input type that accepts KafkaSpecZookeeperLoggingValueFromArgs and KafkaSpecZookeeperLoggingValueFromOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperLoggingValueFromInput` via:
//
//	KafkaSpecZookeeperLoggingValueFromArgs{...}
type KafkaSpecZookeeperLoggingValueFromInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperLoggingValueFromOutput() KafkaSpecZookeeperLoggingValueFromOutput
	ToKafkaSpecZookeeperLoggingValueFromOutputWithContext(context.Context) KafkaSpecZookeeperLoggingValueFromOutput
}

// `ConfigMap` entry where the logging configuration is stored.
type KafkaSpecZookeeperLoggingValueFromArgs struct {
	ConfigMapKeyRef KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrInput `pulumi:"configMapKeyRef"`
}

func (KafkaSpecZookeeperLoggingValueFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperLoggingValueFrom)(nil)).Elem()
}

func (i KafkaSpecZookeeperLoggingValueFromArgs) ToKafkaSpecZookeeperLoggingValueFromOutput() KafkaSpecZookeeperLoggingValueFromOutput {
	return i.ToKafkaSpecZookeeperLoggingValueFromOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperLoggingValueFromArgs) ToKafkaSpecZookeeperLoggingValueFromOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLoggingValueFromOutput)
}

func (i KafkaSpecZookeeperLoggingValueFromArgs) ToKafkaSpecZookeeperLoggingValueFromPtrOutput() KafkaSpecZookeeperLoggingValueFromPtrOutput {
	return i.ToKafkaSpecZookeeperLoggingValueFromPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperLoggingValueFromArgs) ToKafkaSpecZookeeperLoggingValueFromPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLoggingValueFromOutput).ToKafkaSpecZookeeperLoggingValueFromPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperLoggingValueFromPtrInput is an input type that accepts KafkaSpecZookeeperLoggingValueFromArgs, KafkaSpecZookeeperLoggingValueFromPtr and KafkaSpecZookeeperLoggingValueFromPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperLoggingValueFromPtrInput` via:
//
//	        KafkaSpecZookeeperLoggingValueFromArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperLoggingValueFromPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperLoggingValueFromPtrOutput() KafkaSpecZookeeperLoggingValueFromPtrOutput
	ToKafkaSpecZookeeperLoggingValueFromPtrOutputWithContext(context.Context) KafkaSpecZookeeperLoggingValueFromPtrOutput
}

type kafkaSpecZookeeperLoggingValueFromPtrType KafkaSpecZookeeperLoggingValueFromArgs

func KafkaSpecZookeeperLoggingValueFromPtr(v *KafkaSpecZookeeperLoggingValueFromArgs) KafkaSpecZookeeperLoggingValueFromPtrInput {
	return (*kafkaSpecZookeeperLoggingValueFromPtrType)(v)
}

func (*kafkaSpecZookeeperLoggingValueFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperLoggingValueFrom)(nil)).Elem()
}

func (i *kafkaSpecZookeeperLoggingValueFromPtrType) ToKafkaSpecZookeeperLoggingValueFromPtrOutput() KafkaSpecZookeeperLoggingValueFromPtrOutput {
	return i.ToKafkaSpecZookeeperLoggingValueFromPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperLoggingValueFromPtrType) ToKafkaSpecZookeeperLoggingValueFromPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLoggingValueFromPtrOutput)
}

// `ConfigMap` entry where the logging configuration is stored.
type KafkaSpecZookeeperLoggingValueFromOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperLoggingValueFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperLoggingValueFrom)(nil)).Elem()
}

func (o KafkaSpecZookeeperLoggingValueFromOutput) ToKafkaSpecZookeeperLoggingValueFromOutput() KafkaSpecZookeeperLoggingValueFromOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingValueFromOutput) ToKafkaSpecZookeeperLoggingValueFromOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingValueFromOutput) ToKafkaSpecZookeeperLoggingValueFromPtrOutput() KafkaSpecZookeeperLoggingValueFromPtrOutput {
	return o.ToKafkaSpecZookeeperLoggingValueFromPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperLoggingValueFromOutput) ToKafkaSpecZookeeperLoggingValueFromPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperLoggingValueFrom) *KafkaSpecZookeeperLoggingValueFrom {
		return &v
	}).(KafkaSpecZookeeperLoggingValueFromPtrOutput)
}

func (o KafkaSpecZookeeperLoggingValueFromOutput) ConfigMapKeyRef() KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLoggingValueFrom) *KafkaSpecZookeeperLoggingValueFromConfigMapKeyRef {
		return v.ConfigMapKeyRef
	}).(KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput)
}

type KafkaSpecZookeeperLoggingValueFromPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperLoggingValueFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperLoggingValueFrom)(nil)).Elem()
}

func (o KafkaSpecZookeeperLoggingValueFromPtrOutput) ToKafkaSpecZookeeperLoggingValueFromPtrOutput() KafkaSpecZookeeperLoggingValueFromPtrOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingValueFromPtrOutput) ToKafkaSpecZookeeperLoggingValueFromPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromPtrOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingValueFromPtrOutput) Elem() KafkaSpecZookeeperLoggingValueFromOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLoggingValueFrom) KafkaSpecZookeeperLoggingValueFrom {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperLoggingValueFrom
		return ret
	}).(KafkaSpecZookeeperLoggingValueFromOutput)
}

func (o KafkaSpecZookeeperLoggingValueFromPtrOutput) ConfigMapKeyRef() KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLoggingValueFrom) *KafkaSpecZookeeperLoggingValueFromConfigMapKeyRef {
		if v == nil {
			return nil
		}
		return v.ConfigMapKeyRef
	}).(KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput)
}

// Reference to the key in the ConfigMap containing the configuration.
type KafkaSpecZookeeperLoggingValueFromConfigMapKeyRef struct {
	Key      *string `pulumi:"key"`
	Name     *string `pulumi:"name"`
	Optional *bool   `pulumi:"optional"`
}

// KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefInput is an input type that accepts KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefArgs and KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefInput` via:
//
//	KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefArgs{...}
type KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput() KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput
	ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutputWithContext(context.Context) KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput
}

// Reference to the key in the ConfigMap containing the configuration.
type KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefArgs struct {
	Key      pulumi.StringPtrInput `pulumi:"key"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Optional pulumi.BoolPtrInput   `pulumi:"optional"`
}

func (KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperLoggingValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefArgs) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput() KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput {
	return i.ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefArgs) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput)
}

func (i KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefArgs) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput() KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput {
	return i.ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefArgs) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput).ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrInput is an input type that accepts KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefArgs, KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtr and KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrInput` via:
//
//	        KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput() KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput
	ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutputWithContext(context.Context) KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput
}

type kafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrType KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefArgs

func KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtr(v *KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefArgs) KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrInput {
	return (*kafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrType)(v)
}

func (*kafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperLoggingValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i *kafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrType) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput() KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput {
	return i.ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrType) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput)
}

// Reference to the key in the ConfigMap containing the configuration.
type KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperLoggingValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput() KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput() KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput {
	return o.ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperLoggingValueFromConfigMapKeyRef) *KafkaSpecZookeeperLoggingValueFromConfigMapKeyRef {
		return &v
	}).(KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput)
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLoggingValueFromConfigMapKeyRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLoggingValueFromConfigMapKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLoggingValueFromConfigMapKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperLoggingValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput() KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput) Elem() KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLoggingValueFromConfigMapKeyRef) KafkaSpecZookeeperLoggingValueFromConfigMapKeyRef {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperLoggingValueFromConfigMapKeyRef
		return ret
	}).(KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput)
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLoggingValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLoggingValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLoggingValueFromConfigMapKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Reference to the key in the ConfigMap containing the configuration.
type KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatch struct {
	Key      *string `pulumi:"key"`
	Name     *string `pulumi:"name"`
	Optional *bool   `pulumi:"optional"`
}

// KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchInput is an input type that accepts KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchArgs and KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchInput` via:
//
//	KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchArgs{...}
type KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput() KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput
	ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutputWithContext(context.Context) KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput
}

// Reference to the key in the ConfigMap containing the configuration.
type KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchArgs struct {
	Key      pulumi.StringPtrInput `pulumi:"key"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Optional pulumi.BoolPtrInput   `pulumi:"optional"`
}

func (KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchArgs) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput() KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput {
	return i.ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchArgs) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput)
}

func (i KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchArgs) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput() KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput {
	return i.ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchArgs) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput).ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrInput is an input type that accepts KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchArgs, KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtr and KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrInput` via:
//
//	        KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput() KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput
	ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput
}

type kafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrType KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchArgs

func KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtr(v *KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchArgs) KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrInput {
	return (*kafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrType)(v)
}

func (*kafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrType) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput() KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput {
	return i.ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrType) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput)
}

// Reference to the key in the ConfigMap containing the configuration.
type KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput() KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput() KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput {
	return o.ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatch) *KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatch {
		return &v
	}).(KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput)
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput() KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput) ToKafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput) Elem() KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatch) KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatch
		return ret
	}).(KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput)
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// `ConfigMap` entry where the logging configuration is stored.
type KafkaSpecZookeeperLoggingValueFromPatch struct {
	ConfigMapKeyRef *KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatch `pulumi:"configMapKeyRef"`
}

// KafkaSpecZookeeperLoggingValueFromPatchInput is an input type that accepts KafkaSpecZookeeperLoggingValueFromPatchArgs and KafkaSpecZookeeperLoggingValueFromPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperLoggingValueFromPatchInput` via:
//
//	KafkaSpecZookeeperLoggingValueFromPatchArgs{...}
type KafkaSpecZookeeperLoggingValueFromPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperLoggingValueFromPatchOutput() KafkaSpecZookeeperLoggingValueFromPatchOutput
	ToKafkaSpecZookeeperLoggingValueFromPatchOutputWithContext(context.Context) KafkaSpecZookeeperLoggingValueFromPatchOutput
}

// `ConfigMap` entry where the logging configuration is stored.
type KafkaSpecZookeeperLoggingValueFromPatchArgs struct {
	ConfigMapKeyRef KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrInput `pulumi:"configMapKeyRef"`
}

func (KafkaSpecZookeeperLoggingValueFromPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperLoggingValueFromPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperLoggingValueFromPatchArgs) ToKafkaSpecZookeeperLoggingValueFromPatchOutput() KafkaSpecZookeeperLoggingValueFromPatchOutput {
	return i.ToKafkaSpecZookeeperLoggingValueFromPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperLoggingValueFromPatchArgs) ToKafkaSpecZookeeperLoggingValueFromPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLoggingValueFromPatchOutput)
}

func (i KafkaSpecZookeeperLoggingValueFromPatchArgs) ToKafkaSpecZookeeperLoggingValueFromPatchPtrOutput() KafkaSpecZookeeperLoggingValueFromPatchPtrOutput {
	return i.ToKafkaSpecZookeeperLoggingValueFromPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperLoggingValueFromPatchArgs) ToKafkaSpecZookeeperLoggingValueFromPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLoggingValueFromPatchOutput).ToKafkaSpecZookeeperLoggingValueFromPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperLoggingValueFromPatchPtrInput is an input type that accepts KafkaSpecZookeeperLoggingValueFromPatchArgs, KafkaSpecZookeeperLoggingValueFromPatchPtr and KafkaSpecZookeeperLoggingValueFromPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperLoggingValueFromPatchPtrInput` via:
//
//	        KafkaSpecZookeeperLoggingValueFromPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperLoggingValueFromPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperLoggingValueFromPatchPtrOutput() KafkaSpecZookeeperLoggingValueFromPatchPtrOutput
	ToKafkaSpecZookeeperLoggingValueFromPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperLoggingValueFromPatchPtrOutput
}

type kafkaSpecZookeeperLoggingValueFromPatchPtrType KafkaSpecZookeeperLoggingValueFromPatchArgs

func KafkaSpecZookeeperLoggingValueFromPatchPtr(v *KafkaSpecZookeeperLoggingValueFromPatchArgs) KafkaSpecZookeeperLoggingValueFromPatchPtrInput {
	return (*kafkaSpecZookeeperLoggingValueFromPatchPtrType)(v)
}

func (*kafkaSpecZookeeperLoggingValueFromPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperLoggingValueFromPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperLoggingValueFromPatchPtrType) ToKafkaSpecZookeeperLoggingValueFromPatchPtrOutput() KafkaSpecZookeeperLoggingValueFromPatchPtrOutput {
	return i.ToKafkaSpecZookeeperLoggingValueFromPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperLoggingValueFromPatchPtrType) ToKafkaSpecZookeeperLoggingValueFromPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperLoggingValueFromPatchPtrOutput)
}

// `ConfigMap` entry where the logging configuration is stored.
type KafkaSpecZookeeperLoggingValueFromPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperLoggingValueFromPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperLoggingValueFromPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperLoggingValueFromPatchOutput) ToKafkaSpecZookeeperLoggingValueFromPatchOutput() KafkaSpecZookeeperLoggingValueFromPatchOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingValueFromPatchOutput) ToKafkaSpecZookeeperLoggingValueFromPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromPatchOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingValueFromPatchOutput) ToKafkaSpecZookeeperLoggingValueFromPatchPtrOutput() KafkaSpecZookeeperLoggingValueFromPatchPtrOutput {
	return o.ToKafkaSpecZookeeperLoggingValueFromPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperLoggingValueFromPatchOutput) ToKafkaSpecZookeeperLoggingValueFromPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperLoggingValueFromPatch) *KafkaSpecZookeeperLoggingValueFromPatch {
		return &v
	}).(KafkaSpecZookeeperLoggingValueFromPatchPtrOutput)
}

func (o KafkaSpecZookeeperLoggingValueFromPatchOutput) ConfigMapKeyRef() KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperLoggingValueFromPatch) *KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatch {
		return v.ConfigMapKeyRef
	}).(KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput)
}

type KafkaSpecZookeeperLoggingValueFromPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperLoggingValueFromPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperLoggingValueFromPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperLoggingValueFromPatchPtrOutput) ToKafkaSpecZookeeperLoggingValueFromPatchPtrOutput() KafkaSpecZookeeperLoggingValueFromPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingValueFromPatchPtrOutput) ToKafkaSpecZookeeperLoggingValueFromPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperLoggingValueFromPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperLoggingValueFromPatchPtrOutput) Elem() KafkaSpecZookeeperLoggingValueFromPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLoggingValueFromPatch) KafkaSpecZookeeperLoggingValueFromPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperLoggingValueFromPatch
		return ret
	}).(KafkaSpecZookeeperLoggingValueFromPatchOutput)
}

func (o KafkaSpecZookeeperLoggingValueFromPatchPtrOutput) ConfigMapKeyRef() KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperLoggingValueFromPatch) *KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatch {
		if v == nil {
			return nil
		}
		return v.ConfigMapKeyRef
	}).(KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput)
}

// Metrics configuration.
type KafkaSpecZookeeperMetricsConfig struct {
	// Metrics type. The supported types are `jmxPrometheusExporter` and `strimziMetricsReporter`. Type `jmxPrometheusExporter` uses the Prometheus JMX Exporter to expose Kafka JMX metrics in Prometheus format through an HTTP endpoint. Type `strimziMetricsReporter` uses the Strimzi Metrics Reporter to directly expose Kafka metrics in Prometheus format through an HTTP endpoint.
	Type      *string                                   `pulumi:"type"`
	ValueFrom *KafkaSpecZookeeperMetricsConfigValueFrom `pulumi:"valueFrom"`
	Values    *KafkaSpecZookeeperMetricsConfigValues    `pulumi:"values"`
}

// KafkaSpecZookeeperMetricsConfigInput is an input type that accepts KafkaSpecZookeeperMetricsConfigArgs and KafkaSpecZookeeperMetricsConfigOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperMetricsConfigInput` via:
//
//	KafkaSpecZookeeperMetricsConfigArgs{...}
type KafkaSpecZookeeperMetricsConfigInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperMetricsConfigOutput() KafkaSpecZookeeperMetricsConfigOutput
	ToKafkaSpecZookeeperMetricsConfigOutputWithContext(context.Context) KafkaSpecZookeeperMetricsConfigOutput
}

// Metrics configuration.
type KafkaSpecZookeeperMetricsConfigArgs struct {
	// Metrics type. The supported types are `jmxPrometheusExporter` and `strimziMetricsReporter`. Type `jmxPrometheusExporter` uses the Prometheus JMX Exporter to expose Kafka JMX metrics in Prometheus format through an HTTP endpoint. Type `strimziMetricsReporter` uses the Strimzi Metrics Reporter to directly expose Kafka metrics in Prometheus format through an HTTP endpoint.
	Type      pulumi.StringPtrInput                            `pulumi:"type"`
	ValueFrom KafkaSpecZookeeperMetricsConfigValueFromPtrInput `pulumi:"valueFrom"`
	Values    KafkaSpecZookeeperMetricsConfigValuesPtrInput    `pulumi:"values"`
}

func (KafkaSpecZookeeperMetricsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperMetricsConfig)(nil)).Elem()
}

func (i KafkaSpecZookeeperMetricsConfigArgs) ToKafkaSpecZookeeperMetricsConfigOutput() KafkaSpecZookeeperMetricsConfigOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperMetricsConfigArgs) ToKafkaSpecZookeeperMetricsConfigOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigOutput)
}

func (i KafkaSpecZookeeperMetricsConfigArgs) ToKafkaSpecZookeeperMetricsConfigPtrOutput() KafkaSpecZookeeperMetricsConfigPtrOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperMetricsConfigArgs) ToKafkaSpecZookeeperMetricsConfigPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigOutput).ToKafkaSpecZookeeperMetricsConfigPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperMetricsConfigPtrInput is an input type that accepts KafkaSpecZookeeperMetricsConfigArgs, KafkaSpecZookeeperMetricsConfigPtr and KafkaSpecZookeeperMetricsConfigPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperMetricsConfigPtrInput` via:
//
//	        KafkaSpecZookeeperMetricsConfigArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperMetricsConfigPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperMetricsConfigPtrOutput() KafkaSpecZookeeperMetricsConfigPtrOutput
	ToKafkaSpecZookeeperMetricsConfigPtrOutputWithContext(context.Context) KafkaSpecZookeeperMetricsConfigPtrOutput
}

type kafkaSpecZookeeperMetricsConfigPtrType KafkaSpecZookeeperMetricsConfigArgs

func KafkaSpecZookeeperMetricsConfigPtr(v *KafkaSpecZookeeperMetricsConfigArgs) KafkaSpecZookeeperMetricsConfigPtrInput {
	return (*kafkaSpecZookeeperMetricsConfigPtrType)(v)
}

func (*kafkaSpecZookeeperMetricsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperMetricsConfig)(nil)).Elem()
}

func (i *kafkaSpecZookeeperMetricsConfigPtrType) ToKafkaSpecZookeeperMetricsConfigPtrOutput() KafkaSpecZookeeperMetricsConfigPtrOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperMetricsConfigPtrType) ToKafkaSpecZookeeperMetricsConfigPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigPtrOutput)
}

// Metrics configuration.
type KafkaSpecZookeeperMetricsConfigOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperMetricsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperMetricsConfig)(nil)).Elem()
}

func (o KafkaSpecZookeeperMetricsConfigOutput) ToKafkaSpecZookeeperMetricsConfigOutput() KafkaSpecZookeeperMetricsConfigOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigOutput) ToKafkaSpecZookeeperMetricsConfigOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigOutput) ToKafkaSpecZookeeperMetricsConfigPtrOutput() KafkaSpecZookeeperMetricsConfigPtrOutput {
	return o.ToKafkaSpecZookeeperMetricsConfigPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperMetricsConfigOutput) ToKafkaSpecZookeeperMetricsConfigPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperMetricsConfig) *KafkaSpecZookeeperMetricsConfig {
		return &v
	}).(KafkaSpecZookeeperMetricsConfigPtrOutput)
}

// Metrics type. The supported types are `jmxPrometheusExporter` and `strimziMetricsReporter`. Type `jmxPrometheusExporter` uses the Prometheus JMX Exporter to expose Kafka JMX metrics in Prometheus format through an HTTP endpoint. Type `strimziMetricsReporter` uses the Strimzi Metrics Reporter to directly expose Kafka metrics in Prometheus format through an HTTP endpoint.
func (o KafkaSpecZookeeperMetricsConfigOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperMetricsConfig) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperMetricsConfigOutput) ValueFrom() KafkaSpecZookeeperMetricsConfigValueFromPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperMetricsConfig) *KafkaSpecZookeeperMetricsConfigValueFrom { return v.ValueFrom }).(KafkaSpecZookeeperMetricsConfigValueFromPtrOutput)
}

func (o KafkaSpecZookeeperMetricsConfigOutput) Values() KafkaSpecZookeeperMetricsConfigValuesPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperMetricsConfig) *KafkaSpecZookeeperMetricsConfigValues { return v.Values }).(KafkaSpecZookeeperMetricsConfigValuesPtrOutput)
}

type KafkaSpecZookeeperMetricsConfigPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperMetricsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperMetricsConfig)(nil)).Elem()
}

func (o KafkaSpecZookeeperMetricsConfigPtrOutput) ToKafkaSpecZookeeperMetricsConfigPtrOutput() KafkaSpecZookeeperMetricsConfigPtrOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigPtrOutput) ToKafkaSpecZookeeperMetricsConfigPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigPtrOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigPtrOutput) Elem() KafkaSpecZookeeperMetricsConfigOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfig) KafkaSpecZookeeperMetricsConfig {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperMetricsConfig
		return ret
	}).(KafkaSpecZookeeperMetricsConfigOutput)
}

// Metrics type. The supported types are `jmxPrometheusExporter` and `strimziMetricsReporter`. Type `jmxPrometheusExporter` uses the Prometheus JMX Exporter to expose Kafka JMX metrics in Prometheus format through an HTTP endpoint. Type `strimziMetricsReporter` uses the Strimzi Metrics Reporter to directly expose Kafka metrics in Prometheus format through an HTTP endpoint.
func (o KafkaSpecZookeeperMetricsConfigPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfig) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperMetricsConfigPtrOutput) ValueFrom() KafkaSpecZookeeperMetricsConfigValueFromPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfig) *KafkaSpecZookeeperMetricsConfigValueFrom {
		if v == nil {
			return nil
		}
		return v.ValueFrom
	}).(KafkaSpecZookeeperMetricsConfigValueFromPtrOutput)
}

func (o KafkaSpecZookeeperMetricsConfigPtrOutput) Values() KafkaSpecZookeeperMetricsConfigValuesPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfig) *KafkaSpecZookeeperMetricsConfigValues {
		if v == nil {
			return nil
		}
		return v.Values
	}).(KafkaSpecZookeeperMetricsConfigValuesPtrOutput)
}

// Metrics configuration.
type KafkaSpecZookeeperMetricsConfigPatch struct {
	// Metrics type. The supported types are `jmxPrometheusExporter` and `strimziMetricsReporter`. Type `jmxPrometheusExporter` uses the Prometheus JMX Exporter to expose Kafka JMX metrics in Prometheus format through an HTTP endpoint. Type `strimziMetricsReporter` uses the Strimzi Metrics Reporter to directly expose Kafka metrics in Prometheus format through an HTTP endpoint.
	Type      *string                                        `pulumi:"type"`
	ValueFrom *KafkaSpecZookeeperMetricsConfigValueFromPatch `pulumi:"valueFrom"`
	Values    *KafkaSpecZookeeperMetricsConfigValuesPatch    `pulumi:"values"`
}

// KafkaSpecZookeeperMetricsConfigPatchInput is an input type that accepts KafkaSpecZookeeperMetricsConfigPatchArgs and KafkaSpecZookeeperMetricsConfigPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperMetricsConfigPatchInput` via:
//
//	KafkaSpecZookeeperMetricsConfigPatchArgs{...}
type KafkaSpecZookeeperMetricsConfigPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperMetricsConfigPatchOutput() KafkaSpecZookeeperMetricsConfigPatchOutput
	ToKafkaSpecZookeeperMetricsConfigPatchOutputWithContext(context.Context) KafkaSpecZookeeperMetricsConfigPatchOutput
}

// Metrics configuration.
type KafkaSpecZookeeperMetricsConfigPatchArgs struct {
	// Metrics type. The supported types are `jmxPrometheusExporter` and `strimziMetricsReporter`. Type `jmxPrometheusExporter` uses the Prometheus JMX Exporter to expose Kafka JMX metrics in Prometheus format through an HTTP endpoint. Type `strimziMetricsReporter` uses the Strimzi Metrics Reporter to directly expose Kafka metrics in Prometheus format through an HTTP endpoint.
	Type      pulumi.StringPtrInput                                 `pulumi:"type"`
	ValueFrom KafkaSpecZookeeperMetricsConfigValueFromPatchPtrInput `pulumi:"valueFrom"`
	Values    KafkaSpecZookeeperMetricsConfigValuesPatchPtrInput    `pulumi:"values"`
}

func (KafkaSpecZookeeperMetricsConfigPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperMetricsConfigPatchArgs) ToKafkaSpecZookeeperMetricsConfigPatchOutput() KafkaSpecZookeeperMetricsConfigPatchOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperMetricsConfigPatchArgs) ToKafkaSpecZookeeperMetricsConfigPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigPatchOutput)
}

func (i KafkaSpecZookeeperMetricsConfigPatchArgs) ToKafkaSpecZookeeperMetricsConfigPatchPtrOutput() KafkaSpecZookeeperMetricsConfigPatchPtrOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperMetricsConfigPatchArgs) ToKafkaSpecZookeeperMetricsConfigPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigPatchOutput).ToKafkaSpecZookeeperMetricsConfigPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperMetricsConfigPatchPtrInput is an input type that accepts KafkaSpecZookeeperMetricsConfigPatchArgs, KafkaSpecZookeeperMetricsConfigPatchPtr and KafkaSpecZookeeperMetricsConfigPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperMetricsConfigPatchPtrInput` via:
//
//	        KafkaSpecZookeeperMetricsConfigPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperMetricsConfigPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperMetricsConfigPatchPtrOutput() KafkaSpecZookeeperMetricsConfigPatchPtrOutput
	ToKafkaSpecZookeeperMetricsConfigPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperMetricsConfigPatchPtrOutput
}

type kafkaSpecZookeeperMetricsConfigPatchPtrType KafkaSpecZookeeperMetricsConfigPatchArgs

func KafkaSpecZookeeperMetricsConfigPatchPtr(v *KafkaSpecZookeeperMetricsConfigPatchArgs) KafkaSpecZookeeperMetricsConfigPatchPtrInput {
	return (*kafkaSpecZookeeperMetricsConfigPatchPtrType)(v)
}

func (*kafkaSpecZookeeperMetricsConfigPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperMetricsConfigPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperMetricsConfigPatchPtrType) ToKafkaSpecZookeeperMetricsConfigPatchPtrOutput() KafkaSpecZookeeperMetricsConfigPatchPtrOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperMetricsConfigPatchPtrType) ToKafkaSpecZookeeperMetricsConfigPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigPatchPtrOutput)
}

// Metrics configuration.
type KafkaSpecZookeeperMetricsConfigPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperMetricsConfigPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperMetricsConfigPatchOutput) ToKafkaSpecZookeeperMetricsConfigPatchOutput() KafkaSpecZookeeperMetricsConfigPatchOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigPatchOutput) ToKafkaSpecZookeeperMetricsConfigPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigPatchOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigPatchOutput) ToKafkaSpecZookeeperMetricsConfigPatchPtrOutput() KafkaSpecZookeeperMetricsConfigPatchPtrOutput {
	return o.ToKafkaSpecZookeeperMetricsConfigPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperMetricsConfigPatchOutput) ToKafkaSpecZookeeperMetricsConfigPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperMetricsConfigPatch) *KafkaSpecZookeeperMetricsConfigPatch {
		return &v
	}).(KafkaSpecZookeeperMetricsConfigPatchPtrOutput)
}

// Metrics type. The supported types are `jmxPrometheusExporter` and `strimziMetricsReporter`. Type `jmxPrometheusExporter` uses the Prometheus JMX Exporter to expose Kafka JMX metrics in Prometheus format through an HTTP endpoint. Type `strimziMetricsReporter` uses the Strimzi Metrics Reporter to directly expose Kafka metrics in Prometheus format through an HTTP endpoint.
func (o KafkaSpecZookeeperMetricsConfigPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperMetricsConfigPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperMetricsConfigPatchOutput) ValueFrom() KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperMetricsConfigPatch) *KafkaSpecZookeeperMetricsConfigValueFromPatch {
		return v.ValueFrom
	}).(KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput)
}

func (o KafkaSpecZookeeperMetricsConfigPatchOutput) Values() KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperMetricsConfigPatch) *KafkaSpecZookeeperMetricsConfigValuesPatch {
		return v.Values
	}).(KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput)
}

type KafkaSpecZookeeperMetricsConfigPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperMetricsConfigPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperMetricsConfigPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperMetricsConfigPatchPtrOutput) ToKafkaSpecZookeeperMetricsConfigPatchPtrOutput() KafkaSpecZookeeperMetricsConfigPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigPatchPtrOutput) ToKafkaSpecZookeeperMetricsConfigPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigPatchPtrOutput) Elem() KafkaSpecZookeeperMetricsConfigPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfigPatch) KafkaSpecZookeeperMetricsConfigPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperMetricsConfigPatch
		return ret
	}).(KafkaSpecZookeeperMetricsConfigPatchOutput)
}

// Metrics type. The supported types are `jmxPrometheusExporter` and `strimziMetricsReporter`. Type `jmxPrometheusExporter` uses the Prometheus JMX Exporter to expose Kafka JMX metrics in Prometheus format through an HTTP endpoint. Type `strimziMetricsReporter` uses the Strimzi Metrics Reporter to directly expose Kafka metrics in Prometheus format through an HTTP endpoint.
func (o KafkaSpecZookeeperMetricsConfigPatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfigPatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperMetricsConfigPatchPtrOutput) ValueFrom() KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfigPatch) *KafkaSpecZookeeperMetricsConfigValueFromPatch {
		if v == nil {
			return nil
		}
		return v.ValueFrom
	}).(KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput)
}

func (o KafkaSpecZookeeperMetricsConfigPatchPtrOutput) Values() KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfigPatch) *KafkaSpecZookeeperMetricsConfigValuesPatch {
		if v == nil {
			return nil
		}
		return v.Values
	}).(KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput)
}

// ConfigMap entry where the Prometheus JMX Exporter configuration is stored.
type KafkaSpecZookeeperMetricsConfigValueFrom struct {
	ConfigMapKeyRef *KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRef `pulumi:"configMapKeyRef"`
}

// KafkaSpecZookeeperMetricsConfigValueFromInput is an input type that accepts KafkaSpecZookeeperMetricsConfigValueFromArgs and KafkaSpecZookeeperMetricsConfigValueFromOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperMetricsConfigValueFromInput` via:
//
//	KafkaSpecZookeeperMetricsConfigValueFromArgs{...}
type KafkaSpecZookeeperMetricsConfigValueFromInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperMetricsConfigValueFromOutput() KafkaSpecZookeeperMetricsConfigValueFromOutput
	ToKafkaSpecZookeeperMetricsConfigValueFromOutputWithContext(context.Context) KafkaSpecZookeeperMetricsConfigValueFromOutput
}

// ConfigMap entry where the Prometheus JMX Exporter configuration is stored.
type KafkaSpecZookeeperMetricsConfigValueFromArgs struct {
	ConfigMapKeyRef KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrInput `pulumi:"configMapKeyRef"`
}

func (KafkaSpecZookeeperMetricsConfigValueFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValueFrom)(nil)).Elem()
}

func (i KafkaSpecZookeeperMetricsConfigValueFromArgs) ToKafkaSpecZookeeperMetricsConfigValueFromOutput() KafkaSpecZookeeperMetricsConfigValueFromOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigValueFromOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperMetricsConfigValueFromArgs) ToKafkaSpecZookeeperMetricsConfigValueFromOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigValueFromOutput)
}

func (i KafkaSpecZookeeperMetricsConfigValueFromArgs) ToKafkaSpecZookeeperMetricsConfigValueFromPtrOutput() KafkaSpecZookeeperMetricsConfigValueFromPtrOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigValueFromPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperMetricsConfigValueFromArgs) ToKafkaSpecZookeeperMetricsConfigValueFromPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigValueFromOutput).ToKafkaSpecZookeeperMetricsConfigValueFromPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperMetricsConfigValueFromPtrInput is an input type that accepts KafkaSpecZookeeperMetricsConfigValueFromArgs, KafkaSpecZookeeperMetricsConfigValueFromPtr and KafkaSpecZookeeperMetricsConfigValueFromPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperMetricsConfigValueFromPtrInput` via:
//
//	        KafkaSpecZookeeperMetricsConfigValueFromArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperMetricsConfigValueFromPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperMetricsConfigValueFromPtrOutput() KafkaSpecZookeeperMetricsConfigValueFromPtrOutput
	ToKafkaSpecZookeeperMetricsConfigValueFromPtrOutputWithContext(context.Context) KafkaSpecZookeeperMetricsConfigValueFromPtrOutput
}

type kafkaSpecZookeeperMetricsConfigValueFromPtrType KafkaSpecZookeeperMetricsConfigValueFromArgs

func KafkaSpecZookeeperMetricsConfigValueFromPtr(v *KafkaSpecZookeeperMetricsConfigValueFromArgs) KafkaSpecZookeeperMetricsConfigValueFromPtrInput {
	return (*kafkaSpecZookeeperMetricsConfigValueFromPtrType)(v)
}

func (*kafkaSpecZookeeperMetricsConfigValueFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperMetricsConfigValueFrom)(nil)).Elem()
}

func (i *kafkaSpecZookeeperMetricsConfigValueFromPtrType) ToKafkaSpecZookeeperMetricsConfigValueFromPtrOutput() KafkaSpecZookeeperMetricsConfigValueFromPtrOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigValueFromPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperMetricsConfigValueFromPtrType) ToKafkaSpecZookeeperMetricsConfigValueFromPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigValueFromPtrOutput)
}

// ConfigMap entry where the Prometheus JMX Exporter configuration is stored.
type KafkaSpecZookeeperMetricsConfigValueFromOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperMetricsConfigValueFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValueFrom)(nil)).Elem()
}

func (o KafkaSpecZookeeperMetricsConfigValueFromOutput) ToKafkaSpecZookeeperMetricsConfigValueFromOutput() KafkaSpecZookeeperMetricsConfigValueFromOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValueFromOutput) ToKafkaSpecZookeeperMetricsConfigValueFromOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValueFromOutput) ToKafkaSpecZookeeperMetricsConfigValueFromPtrOutput() KafkaSpecZookeeperMetricsConfigValueFromPtrOutput {
	return o.ToKafkaSpecZookeeperMetricsConfigValueFromPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperMetricsConfigValueFromOutput) ToKafkaSpecZookeeperMetricsConfigValueFromPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperMetricsConfigValueFrom) *KafkaSpecZookeeperMetricsConfigValueFrom {
		return &v
	}).(KafkaSpecZookeeperMetricsConfigValueFromPtrOutput)
}

func (o KafkaSpecZookeeperMetricsConfigValueFromOutput) ConfigMapKeyRef() KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperMetricsConfigValueFrom) *KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRef {
		return v.ConfigMapKeyRef
	}).(KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput)
}

type KafkaSpecZookeeperMetricsConfigValueFromPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperMetricsConfigValueFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperMetricsConfigValueFrom)(nil)).Elem()
}

func (o KafkaSpecZookeeperMetricsConfigValueFromPtrOutput) ToKafkaSpecZookeeperMetricsConfigValueFromPtrOutput() KafkaSpecZookeeperMetricsConfigValueFromPtrOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValueFromPtrOutput) ToKafkaSpecZookeeperMetricsConfigValueFromPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromPtrOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValueFromPtrOutput) Elem() KafkaSpecZookeeperMetricsConfigValueFromOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfigValueFrom) KafkaSpecZookeeperMetricsConfigValueFrom {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperMetricsConfigValueFrom
		return ret
	}).(KafkaSpecZookeeperMetricsConfigValueFromOutput)
}

func (o KafkaSpecZookeeperMetricsConfigValueFromPtrOutput) ConfigMapKeyRef() KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfigValueFrom) *KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRef {
		if v == nil {
			return nil
		}
		return v.ConfigMapKeyRef
	}).(KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput)
}

// Reference to the key in the ConfigMap containing the configuration.
type KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRef struct {
	Key      *string `pulumi:"key"`
	Name     *string `pulumi:"name"`
	Optional *bool   `pulumi:"optional"`
}

// KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefInput is an input type that accepts KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefArgs and KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefInput` via:
//
//	KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefArgs{...}
type KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput() KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput
	ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutputWithContext(context.Context) KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput
}

// Reference to the key in the ConfigMap containing the configuration.
type KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefArgs struct {
	Key      pulumi.StringPtrInput `pulumi:"key"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Optional pulumi.BoolPtrInput   `pulumi:"optional"`
}

func (KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefArgs) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput() KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefArgs) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput)
}

func (i KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefArgs) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput() KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefArgs) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput).ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrInput is an input type that accepts KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefArgs, KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtr and KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrInput` via:
//
//	        KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput() KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput
	ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutputWithContext(context.Context) KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput
}

type kafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrType KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefArgs

func KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtr(v *KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefArgs) KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrInput {
	return (*kafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrType)(v)
}

func (*kafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i *kafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrType) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput() KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrType) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput)
}

// Reference to the key in the ConfigMap containing the configuration.
type KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput() KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput() KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput {
	return o.ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRef) *KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRef {
		return &v
	}).(KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput)
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput() KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput) Elem() KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRef) KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRef {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRef
		return ret
	}).(KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput)
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Reference to the key in the ConfigMap containing the configuration.
type KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatch struct {
	Key      *string `pulumi:"key"`
	Name     *string `pulumi:"name"`
	Optional *bool   `pulumi:"optional"`
}

// KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchInput is an input type that accepts KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchArgs and KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchInput` via:
//
//	KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchArgs{...}
type KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput() KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput
	ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutputWithContext(context.Context) KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput
}

// Reference to the key in the ConfigMap containing the configuration.
type KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchArgs struct {
	Key      pulumi.StringPtrInput `pulumi:"key"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Optional pulumi.BoolPtrInput   `pulumi:"optional"`
}

func (KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchArgs) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput() KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchArgs) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput)
}

func (i KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchArgs) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput() KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchArgs) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput).ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrInput is an input type that accepts KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchArgs, KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtr and KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrInput` via:
//
//	        KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput() KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput
	ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput
}

type kafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrType KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchArgs

func KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtr(v *KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchArgs) KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrInput {
	return (*kafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrType)(v)
}

func (*kafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrType) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput() KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrType) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput)
}

// Reference to the key in the ConfigMap containing the configuration.
type KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput() KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput() KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput {
	return o.ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatch) *KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatch {
		return &v
	}).(KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput)
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput() KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput) ToKafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput) Elem() KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatch) KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatch
		return ret
	}).(KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput)
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// ConfigMap entry where the Prometheus JMX Exporter configuration is stored.
type KafkaSpecZookeeperMetricsConfigValueFromPatch struct {
	ConfigMapKeyRef *KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatch `pulumi:"configMapKeyRef"`
}

// KafkaSpecZookeeperMetricsConfigValueFromPatchInput is an input type that accepts KafkaSpecZookeeperMetricsConfigValueFromPatchArgs and KafkaSpecZookeeperMetricsConfigValueFromPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperMetricsConfigValueFromPatchInput` via:
//
//	KafkaSpecZookeeperMetricsConfigValueFromPatchArgs{...}
type KafkaSpecZookeeperMetricsConfigValueFromPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperMetricsConfigValueFromPatchOutput() KafkaSpecZookeeperMetricsConfigValueFromPatchOutput
	ToKafkaSpecZookeeperMetricsConfigValueFromPatchOutputWithContext(context.Context) KafkaSpecZookeeperMetricsConfigValueFromPatchOutput
}

// ConfigMap entry where the Prometheus JMX Exporter configuration is stored.
type KafkaSpecZookeeperMetricsConfigValueFromPatchArgs struct {
	ConfigMapKeyRef KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrInput `pulumi:"configMapKeyRef"`
}

func (KafkaSpecZookeeperMetricsConfigValueFromPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValueFromPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperMetricsConfigValueFromPatchArgs) ToKafkaSpecZookeeperMetricsConfigValueFromPatchOutput() KafkaSpecZookeeperMetricsConfigValueFromPatchOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigValueFromPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperMetricsConfigValueFromPatchArgs) ToKafkaSpecZookeeperMetricsConfigValueFromPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigValueFromPatchOutput)
}

func (i KafkaSpecZookeeperMetricsConfigValueFromPatchArgs) ToKafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput() KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperMetricsConfigValueFromPatchArgs) ToKafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigValueFromPatchOutput).ToKafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperMetricsConfigValueFromPatchPtrInput is an input type that accepts KafkaSpecZookeeperMetricsConfigValueFromPatchArgs, KafkaSpecZookeeperMetricsConfigValueFromPatchPtr and KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperMetricsConfigValueFromPatchPtrInput` via:
//
//	        KafkaSpecZookeeperMetricsConfigValueFromPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperMetricsConfigValueFromPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput() KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput
	ToKafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput
}

type kafkaSpecZookeeperMetricsConfigValueFromPatchPtrType KafkaSpecZookeeperMetricsConfigValueFromPatchArgs

func KafkaSpecZookeeperMetricsConfigValueFromPatchPtr(v *KafkaSpecZookeeperMetricsConfigValueFromPatchArgs) KafkaSpecZookeeperMetricsConfigValueFromPatchPtrInput {
	return (*kafkaSpecZookeeperMetricsConfigValueFromPatchPtrType)(v)
}

func (*kafkaSpecZookeeperMetricsConfigValueFromPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperMetricsConfigValueFromPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperMetricsConfigValueFromPatchPtrType) ToKafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput() KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperMetricsConfigValueFromPatchPtrType) ToKafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput)
}

// ConfigMap entry where the Prometheus JMX Exporter configuration is stored.
type KafkaSpecZookeeperMetricsConfigValueFromPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperMetricsConfigValueFromPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValueFromPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperMetricsConfigValueFromPatchOutput) ToKafkaSpecZookeeperMetricsConfigValueFromPatchOutput() KafkaSpecZookeeperMetricsConfigValueFromPatchOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValueFromPatchOutput) ToKafkaSpecZookeeperMetricsConfigValueFromPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromPatchOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValueFromPatchOutput) ToKafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput() KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput {
	return o.ToKafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperMetricsConfigValueFromPatchOutput) ToKafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperMetricsConfigValueFromPatch) *KafkaSpecZookeeperMetricsConfigValueFromPatch {
		return &v
	}).(KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput)
}

func (o KafkaSpecZookeeperMetricsConfigValueFromPatchOutput) ConfigMapKeyRef() KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperMetricsConfigValueFromPatch) *KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatch {
		return v.ConfigMapKeyRef
	}).(KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput)
}

type KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperMetricsConfigValueFromPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput) ToKafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput() KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput) ToKafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput) Elem() KafkaSpecZookeeperMetricsConfigValueFromPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfigValueFromPatch) KafkaSpecZookeeperMetricsConfigValueFromPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperMetricsConfigValueFromPatch
		return ret
	}).(KafkaSpecZookeeperMetricsConfigValueFromPatchOutput)
}

func (o KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput) ConfigMapKeyRef() KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfigValueFromPatch) *KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatch {
		if v == nil {
			return nil
		}
		return v.ConfigMapKeyRef
	}).(KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput)
}

// Configuration values for the Strimzi Metrics Reporter.
type KafkaSpecZookeeperMetricsConfigValues struct {
	// A list of regex patterns to filter the metrics to collect. Should contain at least one element.
	AllowList []string `pulumi:"allowList"`
}

// KafkaSpecZookeeperMetricsConfigValuesInput is an input type that accepts KafkaSpecZookeeperMetricsConfigValuesArgs and KafkaSpecZookeeperMetricsConfigValuesOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperMetricsConfigValuesInput` via:
//
//	KafkaSpecZookeeperMetricsConfigValuesArgs{...}
type KafkaSpecZookeeperMetricsConfigValuesInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperMetricsConfigValuesOutput() KafkaSpecZookeeperMetricsConfigValuesOutput
	ToKafkaSpecZookeeperMetricsConfigValuesOutputWithContext(context.Context) KafkaSpecZookeeperMetricsConfigValuesOutput
}

// Configuration values for the Strimzi Metrics Reporter.
type KafkaSpecZookeeperMetricsConfigValuesArgs struct {
	// A list of regex patterns to filter the metrics to collect. Should contain at least one element.
	AllowList pulumi.StringArrayInput `pulumi:"allowList"`
}

func (KafkaSpecZookeeperMetricsConfigValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValues)(nil)).Elem()
}

func (i KafkaSpecZookeeperMetricsConfigValuesArgs) ToKafkaSpecZookeeperMetricsConfigValuesOutput() KafkaSpecZookeeperMetricsConfigValuesOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigValuesOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperMetricsConfigValuesArgs) ToKafkaSpecZookeeperMetricsConfigValuesOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigValuesOutput)
}

func (i KafkaSpecZookeeperMetricsConfigValuesArgs) ToKafkaSpecZookeeperMetricsConfigValuesPtrOutput() KafkaSpecZookeeperMetricsConfigValuesPtrOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigValuesPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperMetricsConfigValuesArgs) ToKafkaSpecZookeeperMetricsConfigValuesPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigValuesOutput).ToKafkaSpecZookeeperMetricsConfigValuesPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperMetricsConfigValuesPtrInput is an input type that accepts KafkaSpecZookeeperMetricsConfigValuesArgs, KafkaSpecZookeeperMetricsConfigValuesPtr and KafkaSpecZookeeperMetricsConfigValuesPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperMetricsConfigValuesPtrInput` via:
//
//	        KafkaSpecZookeeperMetricsConfigValuesArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperMetricsConfigValuesPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperMetricsConfigValuesPtrOutput() KafkaSpecZookeeperMetricsConfigValuesPtrOutput
	ToKafkaSpecZookeeperMetricsConfigValuesPtrOutputWithContext(context.Context) KafkaSpecZookeeperMetricsConfigValuesPtrOutput
}

type kafkaSpecZookeeperMetricsConfigValuesPtrType KafkaSpecZookeeperMetricsConfigValuesArgs

func KafkaSpecZookeeperMetricsConfigValuesPtr(v *KafkaSpecZookeeperMetricsConfigValuesArgs) KafkaSpecZookeeperMetricsConfigValuesPtrInput {
	return (*kafkaSpecZookeeperMetricsConfigValuesPtrType)(v)
}

func (*kafkaSpecZookeeperMetricsConfigValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperMetricsConfigValues)(nil)).Elem()
}

func (i *kafkaSpecZookeeperMetricsConfigValuesPtrType) ToKafkaSpecZookeeperMetricsConfigValuesPtrOutput() KafkaSpecZookeeperMetricsConfigValuesPtrOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigValuesPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperMetricsConfigValuesPtrType) ToKafkaSpecZookeeperMetricsConfigValuesPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigValuesPtrOutput)
}

// Configuration values for the Strimzi Metrics Reporter.
type KafkaSpecZookeeperMetricsConfigValuesOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperMetricsConfigValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValues)(nil)).Elem()
}

func (o KafkaSpecZookeeperMetricsConfigValuesOutput) ToKafkaSpecZookeeperMetricsConfigValuesOutput() KafkaSpecZookeeperMetricsConfigValuesOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValuesOutput) ToKafkaSpecZookeeperMetricsConfigValuesOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValuesOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValuesOutput) ToKafkaSpecZookeeperMetricsConfigValuesPtrOutput() KafkaSpecZookeeperMetricsConfigValuesPtrOutput {
	return o.ToKafkaSpecZookeeperMetricsConfigValuesPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperMetricsConfigValuesOutput) ToKafkaSpecZookeeperMetricsConfigValuesPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperMetricsConfigValues) *KafkaSpecZookeeperMetricsConfigValues {
		return &v
	}).(KafkaSpecZookeeperMetricsConfigValuesPtrOutput)
}

// A list of regex patterns to filter the metrics to collect. Should contain at least one element.
func (o KafkaSpecZookeeperMetricsConfigValuesOutput) AllowList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperMetricsConfigValues) []string { return v.AllowList }).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperMetricsConfigValuesPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperMetricsConfigValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperMetricsConfigValues)(nil)).Elem()
}

func (o KafkaSpecZookeeperMetricsConfigValuesPtrOutput) ToKafkaSpecZookeeperMetricsConfigValuesPtrOutput() KafkaSpecZookeeperMetricsConfigValuesPtrOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValuesPtrOutput) ToKafkaSpecZookeeperMetricsConfigValuesPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValuesPtrOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValuesPtrOutput) Elem() KafkaSpecZookeeperMetricsConfigValuesOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfigValues) KafkaSpecZookeeperMetricsConfigValues {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperMetricsConfigValues
		return ret
	}).(KafkaSpecZookeeperMetricsConfigValuesOutput)
}

// A list of regex patterns to filter the metrics to collect. Should contain at least one element.
func (o KafkaSpecZookeeperMetricsConfigValuesPtrOutput) AllowList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfigValues) []string {
		if v == nil {
			return nil
		}
		return v.AllowList
	}).(pulumi.StringArrayOutput)
}

// Configuration values for the Strimzi Metrics Reporter.
type KafkaSpecZookeeperMetricsConfigValuesPatch struct {
	// A list of regex patterns to filter the metrics to collect. Should contain at least one element.
	AllowList []string `pulumi:"allowList"`
}

// KafkaSpecZookeeperMetricsConfigValuesPatchInput is an input type that accepts KafkaSpecZookeeperMetricsConfigValuesPatchArgs and KafkaSpecZookeeperMetricsConfigValuesPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperMetricsConfigValuesPatchInput` via:
//
//	KafkaSpecZookeeperMetricsConfigValuesPatchArgs{...}
type KafkaSpecZookeeperMetricsConfigValuesPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperMetricsConfigValuesPatchOutput() KafkaSpecZookeeperMetricsConfigValuesPatchOutput
	ToKafkaSpecZookeeperMetricsConfigValuesPatchOutputWithContext(context.Context) KafkaSpecZookeeperMetricsConfigValuesPatchOutput
}

// Configuration values for the Strimzi Metrics Reporter.
type KafkaSpecZookeeperMetricsConfigValuesPatchArgs struct {
	// A list of regex patterns to filter the metrics to collect. Should contain at least one element.
	AllowList pulumi.StringArrayInput `pulumi:"allowList"`
}

func (KafkaSpecZookeeperMetricsConfigValuesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValuesPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperMetricsConfigValuesPatchArgs) ToKafkaSpecZookeeperMetricsConfigValuesPatchOutput() KafkaSpecZookeeperMetricsConfigValuesPatchOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigValuesPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperMetricsConfigValuesPatchArgs) ToKafkaSpecZookeeperMetricsConfigValuesPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValuesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigValuesPatchOutput)
}

func (i KafkaSpecZookeeperMetricsConfigValuesPatchArgs) ToKafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput() KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigValuesPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperMetricsConfigValuesPatchArgs) ToKafkaSpecZookeeperMetricsConfigValuesPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigValuesPatchOutput).ToKafkaSpecZookeeperMetricsConfigValuesPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperMetricsConfigValuesPatchPtrInput is an input type that accepts KafkaSpecZookeeperMetricsConfigValuesPatchArgs, KafkaSpecZookeeperMetricsConfigValuesPatchPtr and KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperMetricsConfigValuesPatchPtrInput` via:
//
//	        KafkaSpecZookeeperMetricsConfigValuesPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperMetricsConfigValuesPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput() KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput
	ToKafkaSpecZookeeperMetricsConfigValuesPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput
}

type kafkaSpecZookeeperMetricsConfigValuesPatchPtrType KafkaSpecZookeeperMetricsConfigValuesPatchArgs

func KafkaSpecZookeeperMetricsConfigValuesPatchPtr(v *KafkaSpecZookeeperMetricsConfigValuesPatchArgs) KafkaSpecZookeeperMetricsConfigValuesPatchPtrInput {
	return (*kafkaSpecZookeeperMetricsConfigValuesPatchPtrType)(v)
}

func (*kafkaSpecZookeeperMetricsConfigValuesPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperMetricsConfigValuesPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperMetricsConfigValuesPatchPtrType) ToKafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput() KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput {
	return i.ToKafkaSpecZookeeperMetricsConfigValuesPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperMetricsConfigValuesPatchPtrType) ToKafkaSpecZookeeperMetricsConfigValuesPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput)
}

// Configuration values for the Strimzi Metrics Reporter.
type KafkaSpecZookeeperMetricsConfigValuesPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperMetricsConfigValuesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValuesPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperMetricsConfigValuesPatchOutput) ToKafkaSpecZookeeperMetricsConfigValuesPatchOutput() KafkaSpecZookeeperMetricsConfigValuesPatchOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValuesPatchOutput) ToKafkaSpecZookeeperMetricsConfigValuesPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValuesPatchOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValuesPatchOutput) ToKafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput() KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput {
	return o.ToKafkaSpecZookeeperMetricsConfigValuesPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperMetricsConfigValuesPatchOutput) ToKafkaSpecZookeeperMetricsConfigValuesPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperMetricsConfigValuesPatch) *KafkaSpecZookeeperMetricsConfigValuesPatch {
		return &v
	}).(KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput)
}

// A list of regex patterns to filter the metrics to collect. Should contain at least one element.
func (o KafkaSpecZookeeperMetricsConfigValuesPatchOutput) AllowList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperMetricsConfigValuesPatch) []string { return v.AllowList }).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperMetricsConfigValuesPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput) ToKafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput() KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput) ToKafkaSpecZookeeperMetricsConfigValuesPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput) Elem() KafkaSpecZookeeperMetricsConfigValuesPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfigValuesPatch) KafkaSpecZookeeperMetricsConfigValuesPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperMetricsConfigValuesPatch
		return ret
	}).(KafkaSpecZookeeperMetricsConfigValuesPatchOutput)
}

// A list of regex patterns to filter the metrics to collect. Should contain at least one element.
func (o KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput) AllowList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperMetricsConfigValuesPatch) []string {
		if v == nil {
			return nil
		}
		return v.AllowList
	}).(pulumi.StringArrayOutput)
}

// As of Strimzi 0.46.0, ZooKeeper-based Apache Kafka clusters are not supported anymore and this option is ignored.
type KafkaSpecZookeeperPatch struct {
	// The ZooKeeper broker config. Properties with the following prefixes cannot be set: server., dataDir, dataLogDir, clientPort, authProvider, quorum.auth, requireClientAuthScheme, snapshot.trust.empty, standaloneEnabled, reconfigEnabled, 4lw.commands.whitelist, secureClientPort, ssl., serverCnxnFactory, sslQuorum (with the exception of: ssl.protocol, ssl.quorum.protocol, ssl.enabledProtocols, ssl.quorum.enabledProtocols, ssl.ciphersuites, ssl.quorum.ciphersuites, ssl.hostnameVerification, ssl.quorum.hostnameVerification).
	Config map[string]interface{} `pulumi:"config"`
	// The container image used for ZooKeeper pods. If no image name is explicitly specified, it is determined based on the Kafka version set in `spec.kafka.version`. The image names are specifically mapped to corresponding versions in the Cluster Operator configuration.
	Image          *string                                `pulumi:"image"`
	JmxOptions     *KafkaSpecZookeeperJmxOptionsPatch     `pulumi:"jmxOptions"`
	JvmOptions     *KafkaSpecZookeeperJvmOptionsPatch     `pulumi:"jvmOptions"`
	LivenessProbe  *KafkaSpecZookeeperLivenessProbePatch  `pulumi:"livenessProbe"`
	Logging        *KafkaSpecZookeeperLoggingPatch        `pulumi:"logging"`
	MetricsConfig  *KafkaSpecZookeeperMetricsConfigPatch  `pulumi:"metricsConfig"`
	ReadinessProbe *KafkaSpecZookeeperReadinessProbePatch `pulumi:"readinessProbe"`
	// The number of pods in the cluster.
	Replicas  *int                              `pulumi:"replicas"`
	Resources *KafkaSpecZookeeperResourcesPatch `pulumi:"resources"`
	Storage   *KafkaSpecZookeeperStoragePatch   `pulumi:"storage"`
	Template  *KafkaSpecZookeeperTemplatePatch  `pulumi:"template"`
}

// KafkaSpecZookeeperPatchInput is an input type that accepts KafkaSpecZookeeperPatchArgs and KafkaSpecZookeeperPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperPatchInput` via:
//
//	KafkaSpecZookeeperPatchArgs{...}
type KafkaSpecZookeeperPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperPatchOutput() KafkaSpecZookeeperPatchOutput
	ToKafkaSpecZookeeperPatchOutputWithContext(context.Context) KafkaSpecZookeeperPatchOutput
}

// As of Strimzi 0.46.0, ZooKeeper-based Apache Kafka clusters are not supported anymore and this option is ignored.
type KafkaSpecZookeeperPatchArgs struct {
	// The ZooKeeper broker config. Properties with the following prefixes cannot be set: server., dataDir, dataLogDir, clientPort, authProvider, quorum.auth, requireClientAuthScheme, snapshot.trust.empty, standaloneEnabled, reconfigEnabled, 4lw.commands.whitelist, secureClientPort, ssl., serverCnxnFactory, sslQuorum (with the exception of: ssl.protocol, ssl.quorum.protocol, ssl.enabledProtocols, ssl.quorum.enabledProtocols, ssl.ciphersuites, ssl.quorum.ciphersuites, ssl.hostnameVerification, ssl.quorum.hostnameVerification).
	Config pulumi.MapInput `pulumi:"config"`
	// The container image used for ZooKeeper pods. If no image name is explicitly specified, it is determined based on the Kafka version set in `spec.kafka.version`. The image names are specifically mapped to corresponding versions in the Cluster Operator configuration.
	Image          pulumi.StringPtrInput                         `pulumi:"image"`
	JmxOptions     KafkaSpecZookeeperJmxOptionsPatchPtrInput     `pulumi:"jmxOptions"`
	JvmOptions     KafkaSpecZookeeperJvmOptionsPatchPtrInput     `pulumi:"jvmOptions"`
	LivenessProbe  KafkaSpecZookeeperLivenessProbePatchPtrInput  `pulumi:"livenessProbe"`
	Logging        KafkaSpecZookeeperLoggingPatchPtrInput        `pulumi:"logging"`
	MetricsConfig  KafkaSpecZookeeperMetricsConfigPatchPtrInput  `pulumi:"metricsConfig"`
	ReadinessProbe KafkaSpecZookeeperReadinessProbePatchPtrInput `pulumi:"readinessProbe"`
	// The number of pods in the cluster.
	Replicas  pulumi.IntPtrInput                       `pulumi:"replicas"`
	Resources KafkaSpecZookeeperResourcesPatchPtrInput `pulumi:"resources"`
	Storage   KafkaSpecZookeeperStoragePatchPtrInput   `pulumi:"storage"`
	Template  KafkaSpecZookeeperTemplatePatchPtrInput  `pulumi:"template"`
}

func (KafkaSpecZookeeperPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperPatchArgs) ToKafkaSpecZookeeperPatchOutput() KafkaSpecZookeeperPatchOutput {
	return i.ToKafkaSpecZookeeperPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperPatchArgs) ToKafkaSpecZookeeperPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperPatchOutput)
}

func (i KafkaSpecZookeeperPatchArgs) ToKafkaSpecZookeeperPatchPtrOutput() KafkaSpecZookeeperPatchPtrOutput {
	return i.ToKafkaSpecZookeeperPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperPatchArgs) ToKafkaSpecZookeeperPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperPatchOutput).ToKafkaSpecZookeeperPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperPatchPtrInput is an input type that accepts KafkaSpecZookeeperPatchArgs, KafkaSpecZookeeperPatchPtr and KafkaSpecZookeeperPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperPatchPtrInput` via:
//
//	        KafkaSpecZookeeperPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperPatchPtrOutput() KafkaSpecZookeeperPatchPtrOutput
	ToKafkaSpecZookeeperPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperPatchPtrOutput
}

type kafkaSpecZookeeperPatchPtrType KafkaSpecZookeeperPatchArgs

func KafkaSpecZookeeperPatchPtr(v *KafkaSpecZookeeperPatchArgs) KafkaSpecZookeeperPatchPtrInput {
	return (*kafkaSpecZookeeperPatchPtrType)(v)
}

func (*kafkaSpecZookeeperPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperPatchPtrType) ToKafkaSpecZookeeperPatchPtrOutput() KafkaSpecZookeeperPatchPtrOutput {
	return i.ToKafkaSpecZookeeperPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperPatchPtrType) ToKafkaSpecZookeeperPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperPatchPtrOutput)
}

// As of Strimzi 0.46.0, ZooKeeper-based Apache Kafka clusters are not supported anymore and this option is ignored.
type KafkaSpecZookeeperPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperPatchOutput) ToKafkaSpecZookeeperPatchOutput() KafkaSpecZookeeperPatchOutput {
	return o
}

func (o KafkaSpecZookeeperPatchOutput) ToKafkaSpecZookeeperPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperPatchOutput {
	return o
}

func (o KafkaSpecZookeeperPatchOutput) ToKafkaSpecZookeeperPatchPtrOutput() KafkaSpecZookeeperPatchPtrOutput {
	return o.ToKafkaSpecZookeeperPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperPatchOutput) ToKafkaSpecZookeeperPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperPatch) *KafkaSpecZookeeperPatch {
		return &v
	}).(KafkaSpecZookeeperPatchPtrOutput)
}

// The ZooKeeper broker config. Properties with the following prefixes cannot be set: server., dataDir, dataLogDir, clientPort, authProvider, quorum.auth, requireClientAuthScheme, snapshot.trust.empty, standaloneEnabled, reconfigEnabled, 4lw.commands.whitelist, secureClientPort, ssl., serverCnxnFactory, sslQuorum (with the exception of: ssl.protocol, ssl.quorum.protocol, ssl.enabledProtocols, ssl.quorum.enabledProtocols, ssl.ciphersuites, ssl.quorum.ciphersuites, ssl.hostnameVerification, ssl.quorum.hostnameVerification).
func (o KafkaSpecZookeeperPatchOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperPatch) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// The container image used for ZooKeeper pods. If no image name is explicitly specified, it is determined based on the Kafka version set in `spec.kafka.version`. The image names are specifically mapped to corresponding versions in the Cluster Operator configuration.
func (o KafkaSpecZookeeperPatchOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperPatch) *string { return v.Image }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperPatchOutput) JmxOptions() KafkaSpecZookeeperJmxOptionsPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperPatch) *KafkaSpecZookeeperJmxOptionsPatch { return v.JmxOptions }).(KafkaSpecZookeeperJmxOptionsPatchPtrOutput)
}

func (o KafkaSpecZookeeperPatchOutput) JvmOptions() KafkaSpecZookeeperJvmOptionsPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperPatch) *KafkaSpecZookeeperJvmOptionsPatch { return v.JvmOptions }).(KafkaSpecZookeeperJvmOptionsPatchPtrOutput)
}

func (o KafkaSpecZookeeperPatchOutput) LivenessProbe() KafkaSpecZookeeperLivenessProbePatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperPatch) *KafkaSpecZookeeperLivenessProbePatch { return v.LivenessProbe }).(KafkaSpecZookeeperLivenessProbePatchPtrOutput)
}

func (o KafkaSpecZookeeperPatchOutput) Logging() KafkaSpecZookeeperLoggingPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperPatch) *KafkaSpecZookeeperLoggingPatch { return v.Logging }).(KafkaSpecZookeeperLoggingPatchPtrOutput)
}

func (o KafkaSpecZookeeperPatchOutput) MetricsConfig() KafkaSpecZookeeperMetricsConfigPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperPatch) *KafkaSpecZookeeperMetricsConfigPatch { return v.MetricsConfig }).(KafkaSpecZookeeperMetricsConfigPatchPtrOutput)
}

func (o KafkaSpecZookeeperPatchOutput) ReadinessProbe() KafkaSpecZookeeperReadinessProbePatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperPatch) *KafkaSpecZookeeperReadinessProbePatch { return v.ReadinessProbe }).(KafkaSpecZookeeperReadinessProbePatchPtrOutput)
}

// The number of pods in the cluster.
func (o KafkaSpecZookeeperPatchOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperPatch) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperPatchOutput) Resources() KafkaSpecZookeeperResourcesPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperPatch) *KafkaSpecZookeeperResourcesPatch { return v.Resources }).(KafkaSpecZookeeperResourcesPatchPtrOutput)
}

func (o KafkaSpecZookeeperPatchOutput) Storage() KafkaSpecZookeeperStoragePatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperPatch) *KafkaSpecZookeeperStoragePatch { return v.Storage }).(KafkaSpecZookeeperStoragePatchPtrOutput)
}

func (o KafkaSpecZookeeperPatchOutput) Template() KafkaSpecZookeeperTemplatePatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperPatch) *KafkaSpecZookeeperTemplatePatch { return v.Template }).(KafkaSpecZookeeperTemplatePatchPtrOutput)
}

type KafkaSpecZookeeperPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperPatchPtrOutput) ToKafkaSpecZookeeperPatchPtrOutput() KafkaSpecZookeeperPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperPatchPtrOutput) ToKafkaSpecZookeeperPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperPatchPtrOutput) Elem() KafkaSpecZookeeperPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperPatch) KafkaSpecZookeeperPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperPatch
		return ret
	}).(KafkaSpecZookeeperPatchOutput)
}

// The ZooKeeper broker config. Properties with the following prefixes cannot be set: server., dataDir, dataLogDir, clientPort, authProvider, quorum.auth, requireClientAuthScheme, snapshot.trust.empty, standaloneEnabled, reconfigEnabled, 4lw.commands.whitelist, secureClientPort, ssl., serverCnxnFactory, sslQuorum (with the exception of: ssl.protocol, ssl.quorum.protocol, ssl.enabledProtocols, ssl.quorum.enabledProtocols, ssl.ciphersuites, ssl.quorum.ciphersuites, ssl.hostnameVerification, ssl.quorum.hostnameVerification).
func (o KafkaSpecZookeeperPatchPtrOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperPatch) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.MapOutput)
}

// The container image used for ZooKeeper pods. If no image name is explicitly specified, it is determined based on the Kafka version set in `spec.kafka.version`. The image names are specifically mapped to corresponding versions in the Cluster Operator configuration.
func (o KafkaSpecZookeeperPatchPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperPatch) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperPatchPtrOutput) JmxOptions() KafkaSpecZookeeperJmxOptionsPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperPatch) *KafkaSpecZookeeperJmxOptionsPatch {
		if v == nil {
			return nil
		}
		return v.JmxOptions
	}).(KafkaSpecZookeeperJmxOptionsPatchPtrOutput)
}

func (o KafkaSpecZookeeperPatchPtrOutput) JvmOptions() KafkaSpecZookeeperJvmOptionsPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperPatch) *KafkaSpecZookeeperJvmOptionsPatch {
		if v == nil {
			return nil
		}
		return v.JvmOptions
	}).(KafkaSpecZookeeperJvmOptionsPatchPtrOutput)
}

func (o KafkaSpecZookeeperPatchPtrOutput) LivenessProbe() KafkaSpecZookeeperLivenessProbePatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperPatch) *KafkaSpecZookeeperLivenessProbePatch {
		if v == nil {
			return nil
		}
		return v.LivenessProbe
	}).(KafkaSpecZookeeperLivenessProbePatchPtrOutput)
}

func (o KafkaSpecZookeeperPatchPtrOutput) Logging() KafkaSpecZookeeperLoggingPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperPatch) *KafkaSpecZookeeperLoggingPatch {
		if v == nil {
			return nil
		}
		return v.Logging
	}).(KafkaSpecZookeeperLoggingPatchPtrOutput)
}

func (o KafkaSpecZookeeperPatchPtrOutput) MetricsConfig() KafkaSpecZookeeperMetricsConfigPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperPatch) *KafkaSpecZookeeperMetricsConfigPatch {
		if v == nil {
			return nil
		}
		return v.MetricsConfig
	}).(KafkaSpecZookeeperMetricsConfigPatchPtrOutput)
}

func (o KafkaSpecZookeeperPatchPtrOutput) ReadinessProbe() KafkaSpecZookeeperReadinessProbePatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperPatch) *KafkaSpecZookeeperReadinessProbePatch {
		if v == nil {
			return nil
		}
		return v.ReadinessProbe
	}).(KafkaSpecZookeeperReadinessProbePatchPtrOutput)
}

// The number of pods in the cluster.
func (o KafkaSpecZookeeperPatchPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperPatch) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperPatchPtrOutput) Resources() KafkaSpecZookeeperResourcesPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperPatch) *KafkaSpecZookeeperResourcesPatch {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(KafkaSpecZookeeperResourcesPatchPtrOutput)
}

func (o KafkaSpecZookeeperPatchPtrOutput) Storage() KafkaSpecZookeeperStoragePatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperPatch) *KafkaSpecZookeeperStoragePatch {
		if v == nil {
			return nil
		}
		return v.Storage
	}).(KafkaSpecZookeeperStoragePatchPtrOutput)
}

func (o KafkaSpecZookeeperPatchPtrOutput) Template() KafkaSpecZookeeperTemplatePatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperPatch) *KafkaSpecZookeeperTemplatePatch {
		if v == nil {
			return nil
		}
		return v.Template
	}).(KafkaSpecZookeeperTemplatePatchPtrOutput)
}

// Pod readiness checking.
type KafkaSpecZookeeperReadinessProbe struct {
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// KafkaSpecZookeeperReadinessProbeInput is an input type that accepts KafkaSpecZookeeperReadinessProbeArgs and KafkaSpecZookeeperReadinessProbeOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperReadinessProbeInput` via:
//
//	KafkaSpecZookeeperReadinessProbeArgs{...}
type KafkaSpecZookeeperReadinessProbeInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperReadinessProbeOutput() KafkaSpecZookeeperReadinessProbeOutput
	ToKafkaSpecZookeeperReadinessProbeOutputWithContext(context.Context) KafkaSpecZookeeperReadinessProbeOutput
}

// Pod readiness checking.
type KafkaSpecZookeeperReadinessProbeArgs struct {
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (KafkaSpecZookeeperReadinessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperReadinessProbe)(nil)).Elem()
}

func (i KafkaSpecZookeeperReadinessProbeArgs) ToKafkaSpecZookeeperReadinessProbeOutput() KafkaSpecZookeeperReadinessProbeOutput {
	return i.ToKafkaSpecZookeeperReadinessProbeOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperReadinessProbeArgs) ToKafkaSpecZookeeperReadinessProbeOutputWithContext(ctx context.Context) KafkaSpecZookeeperReadinessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperReadinessProbeOutput)
}

func (i KafkaSpecZookeeperReadinessProbeArgs) ToKafkaSpecZookeeperReadinessProbePtrOutput() KafkaSpecZookeeperReadinessProbePtrOutput {
	return i.ToKafkaSpecZookeeperReadinessProbePtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperReadinessProbeArgs) ToKafkaSpecZookeeperReadinessProbePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperReadinessProbeOutput).ToKafkaSpecZookeeperReadinessProbePtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperReadinessProbePtrInput is an input type that accepts KafkaSpecZookeeperReadinessProbeArgs, KafkaSpecZookeeperReadinessProbePtr and KafkaSpecZookeeperReadinessProbePtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperReadinessProbePtrInput` via:
//
//	        KafkaSpecZookeeperReadinessProbeArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperReadinessProbePtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperReadinessProbePtrOutput() KafkaSpecZookeeperReadinessProbePtrOutput
	ToKafkaSpecZookeeperReadinessProbePtrOutputWithContext(context.Context) KafkaSpecZookeeperReadinessProbePtrOutput
}

type kafkaSpecZookeeperReadinessProbePtrType KafkaSpecZookeeperReadinessProbeArgs

func KafkaSpecZookeeperReadinessProbePtr(v *KafkaSpecZookeeperReadinessProbeArgs) KafkaSpecZookeeperReadinessProbePtrInput {
	return (*kafkaSpecZookeeperReadinessProbePtrType)(v)
}

func (*kafkaSpecZookeeperReadinessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperReadinessProbe)(nil)).Elem()
}

func (i *kafkaSpecZookeeperReadinessProbePtrType) ToKafkaSpecZookeeperReadinessProbePtrOutput() KafkaSpecZookeeperReadinessProbePtrOutput {
	return i.ToKafkaSpecZookeeperReadinessProbePtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperReadinessProbePtrType) ToKafkaSpecZookeeperReadinessProbePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperReadinessProbePtrOutput)
}

// Pod readiness checking.
type KafkaSpecZookeeperReadinessProbeOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperReadinessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperReadinessProbe)(nil)).Elem()
}

func (o KafkaSpecZookeeperReadinessProbeOutput) ToKafkaSpecZookeeperReadinessProbeOutput() KafkaSpecZookeeperReadinessProbeOutput {
	return o
}

func (o KafkaSpecZookeeperReadinessProbeOutput) ToKafkaSpecZookeeperReadinessProbeOutputWithContext(ctx context.Context) KafkaSpecZookeeperReadinessProbeOutput {
	return o
}

func (o KafkaSpecZookeeperReadinessProbeOutput) ToKafkaSpecZookeeperReadinessProbePtrOutput() KafkaSpecZookeeperReadinessProbePtrOutput {
	return o.ToKafkaSpecZookeeperReadinessProbePtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperReadinessProbeOutput) ToKafkaSpecZookeeperReadinessProbePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperReadinessProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperReadinessProbe) *KafkaSpecZookeeperReadinessProbe {
		return &v
	}).(KafkaSpecZookeeperReadinessProbePtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
func (o KafkaSpecZookeeperReadinessProbeOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperReadinessProbe) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
func (o KafkaSpecZookeeperReadinessProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperReadinessProbe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
func (o KafkaSpecZookeeperReadinessProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperReadinessProbe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
func (o KafkaSpecZookeeperReadinessProbeOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperReadinessProbe) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
func (o KafkaSpecZookeeperReadinessProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperReadinessProbe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type KafkaSpecZookeeperReadinessProbePtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperReadinessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperReadinessProbe)(nil)).Elem()
}

func (o KafkaSpecZookeeperReadinessProbePtrOutput) ToKafkaSpecZookeeperReadinessProbePtrOutput() KafkaSpecZookeeperReadinessProbePtrOutput {
	return o
}

func (o KafkaSpecZookeeperReadinessProbePtrOutput) ToKafkaSpecZookeeperReadinessProbePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperReadinessProbePtrOutput {
	return o
}

func (o KafkaSpecZookeeperReadinessProbePtrOutput) Elem() KafkaSpecZookeeperReadinessProbeOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperReadinessProbe) KafkaSpecZookeeperReadinessProbe {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperReadinessProbe
		return ret
	}).(KafkaSpecZookeeperReadinessProbeOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
func (o KafkaSpecZookeeperReadinessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
func (o KafkaSpecZookeeperReadinessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
func (o KafkaSpecZookeeperReadinessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
func (o KafkaSpecZookeeperReadinessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
func (o KafkaSpecZookeeperReadinessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Pod readiness checking.
type KafkaSpecZookeeperReadinessProbePatch struct {
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// KafkaSpecZookeeperReadinessProbePatchInput is an input type that accepts KafkaSpecZookeeperReadinessProbePatchArgs and KafkaSpecZookeeperReadinessProbePatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperReadinessProbePatchInput` via:
//
//	KafkaSpecZookeeperReadinessProbePatchArgs{...}
type KafkaSpecZookeeperReadinessProbePatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperReadinessProbePatchOutput() KafkaSpecZookeeperReadinessProbePatchOutput
	ToKafkaSpecZookeeperReadinessProbePatchOutputWithContext(context.Context) KafkaSpecZookeeperReadinessProbePatchOutput
}

// Pod readiness checking.
type KafkaSpecZookeeperReadinessProbePatchArgs struct {
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (KafkaSpecZookeeperReadinessProbePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperReadinessProbePatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperReadinessProbePatchArgs) ToKafkaSpecZookeeperReadinessProbePatchOutput() KafkaSpecZookeeperReadinessProbePatchOutput {
	return i.ToKafkaSpecZookeeperReadinessProbePatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperReadinessProbePatchArgs) ToKafkaSpecZookeeperReadinessProbePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperReadinessProbePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperReadinessProbePatchOutput)
}

func (i KafkaSpecZookeeperReadinessProbePatchArgs) ToKafkaSpecZookeeperReadinessProbePatchPtrOutput() KafkaSpecZookeeperReadinessProbePatchPtrOutput {
	return i.ToKafkaSpecZookeeperReadinessProbePatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperReadinessProbePatchArgs) ToKafkaSpecZookeeperReadinessProbePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperReadinessProbePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperReadinessProbePatchOutput).ToKafkaSpecZookeeperReadinessProbePatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperReadinessProbePatchPtrInput is an input type that accepts KafkaSpecZookeeperReadinessProbePatchArgs, KafkaSpecZookeeperReadinessProbePatchPtr and KafkaSpecZookeeperReadinessProbePatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperReadinessProbePatchPtrInput` via:
//
//	        KafkaSpecZookeeperReadinessProbePatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperReadinessProbePatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperReadinessProbePatchPtrOutput() KafkaSpecZookeeperReadinessProbePatchPtrOutput
	ToKafkaSpecZookeeperReadinessProbePatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperReadinessProbePatchPtrOutput
}

type kafkaSpecZookeeperReadinessProbePatchPtrType KafkaSpecZookeeperReadinessProbePatchArgs

func KafkaSpecZookeeperReadinessProbePatchPtr(v *KafkaSpecZookeeperReadinessProbePatchArgs) KafkaSpecZookeeperReadinessProbePatchPtrInput {
	return (*kafkaSpecZookeeperReadinessProbePatchPtrType)(v)
}

func (*kafkaSpecZookeeperReadinessProbePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperReadinessProbePatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperReadinessProbePatchPtrType) ToKafkaSpecZookeeperReadinessProbePatchPtrOutput() KafkaSpecZookeeperReadinessProbePatchPtrOutput {
	return i.ToKafkaSpecZookeeperReadinessProbePatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperReadinessProbePatchPtrType) ToKafkaSpecZookeeperReadinessProbePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperReadinessProbePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperReadinessProbePatchPtrOutput)
}

// Pod readiness checking.
type KafkaSpecZookeeperReadinessProbePatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperReadinessProbePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperReadinessProbePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperReadinessProbePatchOutput) ToKafkaSpecZookeeperReadinessProbePatchOutput() KafkaSpecZookeeperReadinessProbePatchOutput {
	return o
}

func (o KafkaSpecZookeeperReadinessProbePatchOutput) ToKafkaSpecZookeeperReadinessProbePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperReadinessProbePatchOutput {
	return o
}

func (o KafkaSpecZookeeperReadinessProbePatchOutput) ToKafkaSpecZookeeperReadinessProbePatchPtrOutput() KafkaSpecZookeeperReadinessProbePatchPtrOutput {
	return o.ToKafkaSpecZookeeperReadinessProbePatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperReadinessProbePatchOutput) ToKafkaSpecZookeeperReadinessProbePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperReadinessProbePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperReadinessProbePatch) *KafkaSpecZookeeperReadinessProbePatch {
		return &v
	}).(KafkaSpecZookeeperReadinessProbePatchPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
func (o KafkaSpecZookeeperReadinessProbePatchOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperReadinessProbePatch) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
func (o KafkaSpecZookeeperReadinessProbePatchOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperReadinessProbePatch) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
func (o KafkaSpecZookeeperReadinessProbePatchOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperReadinessProbePatch) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
func (o KafkaSpecZookeeperReadinessProbePatchOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperReadinessProbePatch) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
func (o KafkaSpecZookeeperReadinessProbePatchOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperReadinessProbePatch) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type KafkaSpecZookeeperReadinessProbePatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperReadinessProbePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperReadinessProbePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperReadinessProbePatchPtrOutput) ToKafkaSpecZookeeperReadinessProbePatchPtrOutput() KafkaSpecZookeeperReadinessProbePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperReadinessProbePatchPtrOutput) ToKafkaSpecZookeeperReadinessProbePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperReadinessProbePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperReadinessProbePatchPtrOutput) Elem() KafkaSpecZookeeperReadinessProbePatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperReadinessProbePatch) KafkaSpecZookeeperReadinessProbePatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperReadinessProbePatch
		return ret
	}).(KafkaSpecZookeeperReadinessProbePatchOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
func (o KafkaSpecZookeeperReadinessProbePatchPtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperReadinessProbePatch) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.
func (o KafkaSpecZookeeperReadinessProbePatchPtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperReadinessProbePatch) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
func (o KafkaSpecZookeeperReadinessProbePatchPtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperReadinessProbePatch) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
func (o KafkaSpecZookeeperReadinessProbePatchPtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperReadinessProbePatch) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.
func (o KafkaSpecZookeeperReadinessProbePatchPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperReadinessProbePatch) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// CPU and memory resources to reserve.
type KafkaSpecZookeeperResources struct {
	Claims   []KafkaSpecZookeeperResourcesClaims `pulumi:"claims"`
	Limits   map[string]interface{}              `pulumi:"limits"`
	Requests map[string]interface{}              `pulumi:"requests"`
}

// KafkaSpecZookeeperResourcesInput is an input type that accepts KafkaSpecZookeeperResourcesArgs and KafkaSpecZookeeperResourcesOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperResourcesInput` via:
//
//	KafkaSpecZookeeperResourcesArgs{...}
type KafkaSpecZookeeperResourcesInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperResourcesOutput() KafkaSpecZookeeperResourcesOutput
	ToKafkaSpecZookeeperResourcesOutputWithContext(context.Context) KafkaSpecZookeeperResourcesOutput
}

// CPU and memory resources to reserve.
type KafkaSpecZookeeperResourcesArgs struct {
	Claims   KafkaSpecZookeeperResourcesClaimsArrayInput `pulumi:"claims"`
	Limits   pulumi.MapInput                             `pulumi:"limits"`
	Requests pulumi.MapInput                             `pulumi:"requests"`
}

func (KafkaSpecZookeeperResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperResources)(nil)).Elem()
}

func (i KafkaSpecZookeeperResourcesArgs) ToKafkaSpecZookeeperResourcesOutput() KafkaSpecZookeeperResourcesOutput {
	return i.ToKafkaSpecZookeeperResourcesOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperResourcesArgs) ToKafkaSpecZookeeperResourcesOutputWithContext(ctx context.Context) KafkaSpecZookeeperResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperResourcesOutput)
}

func (i KafkaSpecZookeeperResourcesArgs) ToKafkaSpecZookeeperResourcesPtrOutput() KafkaSpecZookeeperResourcesPtrOutput {
	return i.ToKafkaSpecZookeeperResourcesPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperResourcesArgs) ToKafkaSpecZookeeperResourcesPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperResourcesOutput).ToKafkaSpecZookeeperResourcesPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperResourcesPtrInput is an input type that accepts KafkaSpecZookeeperResourcesArgs, KafkaSpecZookeeperResourcesPtr and KafkaSpecZookeeperResourcesPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperResourcesPtrInput` via:
//
//	        KafkaSpecZookeeperResourcesArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperResourcesPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperResourcesPtrOutput() KafkaSpecZookeeperResourcesPtrOutput
	ToKafkaSpecZookeeperResourcesPtrOutputWithContext(context.Context) KafkaSpecZookeeperResourcesPtrOutput
}

type kafkaSpecZookeeperResourcesPtrType KafkaSpecZookeeperResourcesArgs

func KafkaSpecZookeeperResourcesPtr(v *KafkaSpecZookeeperResourcesArgs) KafkaSpecZookeeperResourcesPtrInput {
	return (*kafkaSpecZookeeperResourcesPtrType)(v)
}

func (*kafkaSpecZookeeperResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperResources)(nil)).Elem()
}

func (i *kafkaSpecZookeeperResourcesPtrType) ToKafkaSpecZookeeperResourcesPtrOutput() KafkaSpecZookeeperResourcesPtrOutput {
	return i.ToKafkaSpecZookeeperResourcesPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperResourcesPtrType) ToKafkaSpecZookeeperResourcesPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperResourcesPtrOutput)
}

// CPU and memory resources to reserve.
type KafkaSpecZookeeperResourcesOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperResources)(nil)).Elem()
}

func (o KafkaSpecZookeeperResourcesOutput) ToKafkaSpecZookeeperResourcesOutput() KafkaSpecZookeeperResourcesOutput {
	return o
}

func (o KafkaSpecZookeeperResourcesOutput) ToKafkaSpecZookeeperResourcesOutputWithContext(ctx context.Context) KafkaSpecZookeeperResourcesOutput {
	return o
}

func (o KafkaSpecZookeeperResourcesOutput) ToKafkaSpecZookeeperResourcesPtrOutput() KafkaSpecZookeeperResourcesPtrOutput {
	return o.ToKafkaSpecZookeeperResourcesPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperResourcesOutput) ToKafkaSpecZookeeperResourcesPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperResourcesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperResources) *KafkaSpecZookeeperResources {
		return &v
	}).(KafkaSpecZookeeperResourcesPtrOutput)
}

func (o KafkaSpecZookeeperResourcesOutput) Claims() KafkaSpecZookeeperResourcesClaimsArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperResources) []KafkaSpecZookeeperResourcesClaims { return v.Claims }).(KafkaSpecZookeeperResourcesClaimsArrayOutput)
}

func (o KafkaSpecZookeeperResourcesOutput) Limits() pulumi.MapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperResources) map[string]interface{} { return v.Limits }).(pulumi.MapOutput)
}

func (o KafkaSpecZookeeperResourcesOutput) Requests() pulumi.MapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperResources) map[string]interface{} { return v.Requests }).(pulumi.MapOutput)
}

type KafkaSpecZookeeperResourcesPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperResources)(nil)).Elem()
}

func (o KafkaSpecZookeeperResourcesPtrOutput) ToKafkaSpecZookeeperResourcesPtrOutput() KafkaSpecZookeeperResourcesPtrOutput {
	return o
}

func (o KafkaSpecZookeeperResourcesPtrOutput) ToKafkaSpecZookeeperResourcesPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperResourcesPtrOutput {
	return o
}

func (o KafkaSpecZookeeperResourcesPtrOutput) Elem() KafkaSpecZookeeperResourcesOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperResources) KafkaSpecZookeeperResources {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperResources
		return ret
	}).(KafkaSpecZookeeperResourcesOutput)
}

func (o KafkaSpecZookeeperResourcesPtrOutput) Claims() KafkaSpecZookeeperResourcesClaimsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperResources) []KafkaSpecZookeeperResourcesClaims {
		if v == nil {
			return nil
		}
		return v.Claims
	}).(KafkaSpecZookeeperResourcesClaimsArrayOutput)
}

func (o KafkaSpecZookeeperResourcesPtrOutput) Limits() pulumi.MapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperResources) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.MapOutput)
}

func (o KafkaSpecZookeeperResourcesPtrOutput) Requests() pulumi.MapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperResources) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(pulumi.MapOutput)
}

type KafkaSpecZookeeperResourcesClaims struct {
	Name    *string `pulumi:"name"`
	Request *string `pulumi:"request"`
}

// KafkaSpecZookeeperResourcesClaimsInput is an input type that accepts KafkaSpecZookeeperResourcesClaimsArgs and KafkaSpecZookeeperResourcesClaimsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperResourcesClaimsInput` via:
//
//	KafkaSpecZookeeperResourcesClaimsArgs{...}
type KafkaSpecZookeeperResourcesClaimsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperResourcesClaimsOutput() KafkaSpecZookeeperResourcesClaimsOutput
	ToKafkaSpecZookeeperResourcesClaimsOutputWithContext(context.Context) KafkaSpecZookeeperResourcesClaimsOutput
}

type KafkaSpecZookeeperResourcesClaimsArgs struct {
	Name    pulumi.StringPtrInput `pulumi:"name"`
	Request pulumi.StringPtrInput `pulumi:"request"`
}

func (KafkaSpecZookeeperResourcesClaimsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperResourcesClaims)(nil)).Elem()
}

func (i KafkaSpecZookeeperResourcesClaimsArgs) ToKafkaSpecZookeeperResourcesClaimsOutput() KafkaSpecZookeeperResourcesClaimsOutput {
	return i.ToKafkaSpecZookeeperResourcesClaimsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperResourcesClaimsArgs) ToKafkaSpecZookeeperResourcesClaimsOutputWithContext(ctx context.Context) KafkaSpecZookeeperResourcesClaimsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperResourcesClaimsOutput)
}

// KafkaSpecZookeeperResourcesClaimsArrayInput is an input type that accepts KafkaSpecZookeeperResourcesClaimsArray and KafkaSpecZookeeperResourcesClaimsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperResourcesClaimsArrayInput` via:
//
//	KafkaSpecZookeeperResourcesClaimsArray{ KafkaSpecZookeeperResourcesClaimsArgs{...} }
type KafkaSpecZookeeperResourcesClaimsArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperResourcesClaimsArrayOutput() KafkaSpecZookeeperResourcesClaimsArrayOutput
	ToKafkaSpecZookeeperResourcesClaimsArrayOutputWithContext(context.Context) KafkaSpecZookeeperResourcesClaimsArrayOutput
}

type KafkaSpecZookeeperResourcesClaimsArray []KafkaSpecZookeeperResourcesClaimsInput

func (KafkaSpecZookeeperResourcesClaimsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperResourcesClaims)(nil)).Elem()
}

func (i KafkaSpecZookeeperResourcesClaimsArray) ToKafkaSpecZookeeperResourcesClaimsArrayOutput() KafkaSpecZookeeperResourcesClaimsArrayOutput {
	return i.ToKafkaSpecZookeeperResourcesClaimsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperResourcesClaimsArray) ToKafkaSpecZookeeperResourcesClaimsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperResourcesClaimsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperResourcesClaimsArrayOutput)
}

type KafkaSpecZookeeperResourcesClaimsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperResourcesClaimsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperResourcesClaims)(nil)).Elem()
}

func (o KafkaSpecZookeeperResourcesClaimsOutput) ToKafkaSpecZookeeperResourcesClaimsOutput() KafkaSpecZookeeperResourcesClaimsOutput {
	return o
}

func (o KafkaSpecZookeeperResourcesClaimsOutput) ToKafkaSpecZookeeperResourcesClaimsOutputWithContext(ctx context.Context) KafkaSpecZookeeperResourcesClaimsOutput {
	return o
}

func (o KafkaSpecZookeeperResourcesClaimsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperResourcesClaims) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperResourcesClaimsOutput) Request() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperResourcesClaims) *string { return v.Request }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperResourcesClaimsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperResourcesClaimsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperResourcesClaims)(nil)).Elem()
}

func (o KafkaSpecZookeeperResourcesClaimsArrayOutput) ToKafkaSpecZookeeperResourcesClaimsArrayOutput() KafkaSpecZookeeperResourcesClaimsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperResourcesClaimsArrayOutput) ToKafkaSpecZookeeperResourcesClaimsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperResourcesClaimsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperResourcesClaimsArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperResourcesClaimsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperResourcesClaims {
		return vs[0].([]KafkaSpecZookeeperResourcesClaims)[vs[1].(int)]
	}).(KafkaSpecZookeeperResourcesClaimsOutput)
}

type KafkaSpecZookeeperResourcesClaimsPatch struct {
	Name    *string `pulumi:"name"`
	Request *string `pulumi:"request"`
}

// KafkaSpecZookeeperResourcesClaimsPatchInput is an input type that accepts KafkaSpecZookeeperResourcesClaimsPatchArgs and KafkaSpecZookeeperResourcesClaimsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperResourcesClaimsPatchInput` via:
//
//	KafkaSpecZookeeperResourcesClaimsPatchArgs{...}
type KafkaSpecZookeeperResourcesClaimsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperResourcesClaimsPatchOutput() KafkaSpecZookeeperResourcesClaimsPatchOutput
	ToKafkaSpecZookeeperResourcesClaimsPatchOutputWithContext(context.Context) KafkaSpecZookeeperResourcesClaimsPatchOutput
}

type KafkaSpecZookeeperResourcesClaimsPatchArgs struct {
	Name    pulumi.StringPtrInput `pulumi:"name"`
	Request pulumi.StringPtrInput `pulumi:"request"`
}

func (KafkaSpecZookeeperResourcesClaimsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperResourcesClaimsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperResourcesClaimsPatchArgs) ToKafkaSpecZookeeperResourcesClaimsPatchOutput() KafkaSpecZookeeperResourcesClaimsPatchOutput {
	return i.ToKafkaSpecZookeeperResourcesClaimsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperResourcesClaimsPatchArgs) ToKafkaSpecZookeeperResourcesClaimsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperResourcesClaimsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperResourcesClaimsPatchOutput)
}

// KafkaSpecZookeeperResourcesClaimsPatchArrayInput is an input type that accepts KafkaSpecZookeeperResourcesClaimsPatchArray and KafkaSpecZookeeperResourcesClaimsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperResourcesClaimsPatchArrayInput` via:
//
//	KafkaSpecZookeeperResourcesClaimsPatchArray{ KafkaSpecZookeeperResourcesClaimsPatchArgs{...} }
type KafkaSpecZookeeperResourcesClaimsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperResourcesClaimsPatchArrayOutput() KafkaSpecZookeeperResourcesClaimsPatchArrayOutput
	ToKafkaSpecZookeeperResourcesClaimsPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperResourcesClaimsPatchArrayOutput
}

type KafkaSpecZookeeperResourcesClaimsPatchArray []KafkaSpecZookeeperResourcesClaimsPatchInput

func (KafkaSpecZookeeperResourcesClaimsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperResourcesClaimsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperResourcesClaimsPatchArray) ToKafkaSpecZookeeperResourcesClaimsPatchArrayOutput() KafkaSpecZookeeperResourcesClaimsPatchArrayOutput {
	return i.ToKafkaSpecZookeeperResourcesClaimsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperResourcesClaimsPatchArray) ToKafkaSpecZookeeperResourcesClaimsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperResourcesClaimsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperResourcesClaimsPatchArrayOutput)
}

type KafkaSpecZookeeperResourcesClaimsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperResourcesClaimsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperResourcesClaimsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperResourcesClaimsPatchOutput) ToKafkaSpecZookeeperResourcesClaimsPatchOutput() KafkaSpecZookeeperResourcesClaimsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperResourcesClaimsPatchOutput) ToKafkaSpecZookeeperResourcesClaimsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperResourcesClaimsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperResourcesClaimsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperResourcesClaimsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperResourcesClaimsPatchOutput) Request() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperResourcesClaimsPatch) *string { return v.Request }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperResourcesClaimsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperResourcesClaimsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperResourcesClaimsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperResourcesClaimsPatchArrayOutput) ToKafkaSpecZookeeperResourcesClaimsPatchArrayOutput() KafkaSpecZookeeperResourcesClaimsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperResourcesClaimsPatchArrayOutput) ToKafkaSpecZookeeperResourcesClaimsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperResourcesClaimsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperResourcesClaimsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperResourcesClaimsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperResourcesClaimsPatch {
		return vs[0].([]KafkaSpecZookeeperResourcesClaimsPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperResourcesClaimsPatchOutput)
}

// CPU and memory resources to reserve.
type KafkaSpecZookeeperResourcesPatch struct {
	Claims   []KafkaSpecZookeeperResourcesClaimsPatch `pulumi:"claims"`
	Limits   map[string]interface{}                   `pulumi:"limits"`
	Requests map[string]interface{}                   `pulumi:"requests"`
}

// KafkaSpecZookeeperResourcesPatchInput is an input type that accepts KafkaSpecZookeeperResourcesPatchArgs and KafkaSpecZookeeperResourcesPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperResourcesPatchInput` via:
//
//	KafkaSpecZookeeperResourcesPatchArgs{...}
type KafkaSpecZookeeperResourcesPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperResourcesPatchOutput() KafkaSpecZookeeperResourcesPatchOutput
	ToKafkaSpecZookeeperResourcesPatchOutputWithContext(context.Context) KafkaSpecZookeeperResourcesPatchOutput
}

// CPU and memory resources to reserve.
type KafkaSpecZookeeperResourcesPatchArgs struct {
	Claims   KafkaSpecZookeeperResourcesClaimsPatchArrayInput `pulumi:"claims"`
	Limits   pulumi.MapInput                                  `pulumi:"limits"`
	Requests pulumi.MapInput                                  `pulumi:"requests"`
}

func (KafkaSpecZookeeperResourcesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperResourcesPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperResourcesPatchArgs) ToKafkaSpecZookeeperResourcesPatchOutput() KafkaSpecZookeeperResourcesPatchOutput {
	return i.ToKafkaSpecZookeeperResourcesPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperResourcesPatchArgs) ToKafkaSpecZookeeperResourcesPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperResourcesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperResourcesPatchOutput)
}

func (i KafkaSpecZookeeperResourcesPatchArgs) ToKafkaSpecZookeeperResourcesPatchPtrOutput() KafkaSpecZookeeperResourcesPatchPtrOutput {
	return i.ToKafkaSpecZookeeperResourcesPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperResourcesPatchArgs) ToKafkaSpecZookeeperResourcesPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperResourcesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperResourcesPatchOutput).ToKafkaSpecZookeeperResourcesPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperResourcesPatchPtrInput is an input type that accepts KafkaSpecZookeeperResourcesPatchArgs, KafkaSpecZookeeperResourcesPatchPtr and KafkaSpecZookeeperResourcesPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperResourcesPatchPtrInput` via:
//
//	        KafkaSpecZookeeperResourcesPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperResourcesPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperResourcesPatchPtrOutput() KafkaSpecZookeeperResourcesPatchPtrOutput
	ToKafkaSpecZookeeperResourcesPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperResourcesPatchPtrOutput
}

type kafkaSpecZookeeperResourcesPatchPtrType KafkaSpecZookeeperResourcesPatchArgs

func KafkaSpecZookeeperResourcesPatchPtr(v *KafkaSpecZookeeperResourcesPatchArgs) KafkaSpecZookeeperResourcesPatchPtrInput {
	return (*kafkaSpecZookeeperResourcesPatchPtrType)(v)
}

func (*kafkaSpecZookeeperResourcesPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperResourcesPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperResourcesPatchPtrType) ToKafkaSpecZookeeperResourcesPatchPtrOutput() KafkaSpecZookeeperResourcesPatchPtrOutput {
	return i.ToKafkaSpecZookeeperResourcesPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperResourcesPatchPtrType) ToKafkaSpecZookeeperResourcesPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperResourcesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperResourcesPatchPtrOutput)
}

// CPU and memory resources to reserve.
type KafkaSpecZookeeperResourcesPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperResourcesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperResourcesPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperResourcesPatchOutput) ToKafkaSpecZookeeperResourcesPatchOutput() KafkaSpecZookeeperResourcesPatchOutput {
	return o
}

func (o KafkaSpecZookeeperResourcesPatchOutput) ToKafkaSpecZookeeperResourcesPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperResourcesPatchOutput {
	return o
}

func (o KafkaSpecZookeeperResourcesPatchOutput) ToKafkaSpecZookeeperResourcesPatchPtrOutput() KafkaSpecZookeeperResourcesPatchPtrOutput {
	return o.ToKafkaSpecZookeeperResourcesPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperResourcesPatchOutput) ToKafkaSpecZookeeperResourcesPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperResourcesPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperResourcesPatch) *KafkaSpecZookeeperResourcesPatch {
		return &v
	}).(KafkaSpecZookeeperResourcesPatchPtrOutput)
}

func (o KafkaSpecZookeeperResourcesPatchOutput) Claims() KafkaSpecZookeeperResourcesClaimsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperResourcesPatch) []KafkaSpecZookeeperResourcesClaimsPatch { return v.Claims }).(KafkaSpecZookeeperResourcesClaimsPatchArrayOutput)
}

func (o KafkaSpecZookeeperResourcesPatchOutput) Limits() pulumi.MapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperResourcesPatch) map[string]interface{} { return v.Limits }).(pulumi.MapOutput)
}

func (o KafkaSpecZookeeperResourcesPatchOutput) Requests() pulumi.MapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperResourcesPatch) map[string]interface{} { return v.Requests }).(pulumi.MapOutput)
}

type KafkaSpecZookeeperResourcesPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperResourcesPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperResourcesPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperResourcesPatchPtrOutput) ToKafkaSpecZookeeperResourcesPatchPtrOutput() KafkaSpecZookeeperResourcesPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperResourcesPatchPtrOutput) ToKafkaSpecZookeeperResourcesPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperResourcesPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperResourcesPatchPtrOutput) Elem() KafkaSpecZookeeperResourcesPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperResourcesPatch) KafkaSpecZookeeperResourcesPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperResourcesPatch
		return ret
	}).(KafkaSpecZookeeperResourcesPatchOutput)
}

func (o KafkaSpecZookeeperResourcesPatchPtrOutput) Claims() KafkaSpecZookeeperResourcesClaimsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperResourcesPatch) []KafkaSpecZookeeperResourcesClaimsPatch {
		if v == nil {
			return nil
		}
		return v.Claims
	}).(KafkaSpecZookeeperResourcesClaimsPatchArrayOutput)
}

func (o KafkaSpecZookeeperResourcesPatchPtrOutput) Limits() pulumi.MapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperResourcesPatch) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.MapOutput)
}

func (o KafkaSpecZookeeperResourcesPatchPtrOutput) Requests() pulumi.MapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperResourcesPatch) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(pulumi.MapOutput)
}

// Storage configuration (disk). Cannot be updated.
type KafkaSpecZookeeperStorage struct {
	// The storage class to use for dynamic volume allocation.
	Class *string `pulumi:"class"`
	// Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.
	DeleteClaim *bool `pulumi:"deleteClaim"`
	// Storage identification number. Mandatory for storage volumes defined with a `jbod` storage type configuration.
	Id *int `pulumi:"id"`
	// Specifies whether this volume should be used for storing KRaft metadata. This property is optional. When set, the only currently supported value is `shared`. At most one volume can have this property set.
	KraftMetadata *string `pulumi:"kraftMetadata"`
	// As of Strimzi 0.46.0, the storage overrides for individual brokers are not supported anymore and this option is ignored.
	Overrides []KafkaSpecZookeeperStorageOverrides `pulumi:"overrides"`
	// Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.
	Selector map[string]string `pulumi:"selector"`
	// When `type=persistent-claim`, defines the size of the persistent volume claim, such as 100Gi. Mandatory when `type=persistent-claim`.
	Size *string `pulumi:"size"`
	// When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).
	SizeLimit *string `pulumi:"sizeLimit"`
	// Storage type, must be either 'ephemeral' or 'persistent-claim'.
	Type *string `pulumi:"type"`
}

// KafkaSpecZookeeperStorageInput is an input type that accepts KafkaSpecZookeeperStorageArgs and KafkaSpecZookeeperStorageOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperStorageInput` via:
//
//	KafkaSpecZookeeperStorageArgs{...}
type KafkaSpecZookeeperStorageInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperStorageOutput() KafkaSpecZookeeperStorageOutput
	ToKafkaSpecZookeeperStorageOutputWithContext(context.Context) KafkaSpecZookeeperStorageOutput
}

// Storage configuration (disk). Cannot be updated.
type KafkaSpecZookeeperStorageArgs struct {
	// The storage class to use for dynamic volume allocation.
	Class pulumi.StringPtrInput `pulumi:"class"`
	// Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.
	DeleteClaim pulumi.BoolPtrInput `pulumi:"deleteClaim"`
	// Storage identification number. Mandatory for storage volumes defined with a `jbod` storage type configuration.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Specifies whether this volume should be used for storing KRaft metadata. This property is optional. When set, the only currently supported value is `shared`. At most one volume can have this property set.
	KraftMetadata pulumi.StringPtrInput `pulumi:"kraftMetadata"`
	// As of Strimzi 0.46.0, the storage overrides for individual brokers are not supported anymore and this option is ignored.
	Overrides KafkaSpecZookeeperStorageOverridesArrayInput `pulumi:"overrides"`
	// Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.
	Selector pulumi.StringMapInput `pulumi:"selector"`
	// When `type=persistent-claim`, defines the size of the persistent volume claim, such as 100Gi. Mandatory when `type=persistent-claim`.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).
	SizeLimit pulumi.StringPtrInput `pulumi:"sizeLimit"`
	// Storage type, must be either 'ephemeral' or 'persistent-claim'.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaSpecZookeeperStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperStorage)(nil)).Elem()
}

func (i KafkaSpecZookeeperStorageArgs) ToKafkaSpecZookeeperStorageOutput() KafkaSpecZookeeperStorageOutput {
	return i.ToKafkaSpecZookeeperStorageOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperStorageArgs) ToKafkaSpecZookeeperStorageOutputWithContext(ctx context.Context) KafkaSpecZookeeperStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperStorageOutput)
}

func (i KafkaSpecZookeeperStorageArgs) ToKafkaSpecZookeeperStoragePtrOutput() KafkaSpecZookeeperStoragePtrOutput {
	return i.ToKafkaSpecZookeeperStoragePtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperStorageArgs) ToKafkaSpecZookeeperStoragePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperStorageOutput).ToKafkaSpecZookeeperStoragePtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperStoragePtrInput is an input type that accepts KafkaSpecZookeeperStorageArgs, KafkaSpecZookeeperStoragePtr and KafkaSpecZookeeperStoragePtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperStoragePtrInput` via:
//
//	        KafkaSpecZookeeperStorageArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperStoragePtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperStoragePtrOutput() KafkaSpecZookeeperStoragePtrOutput
	ToKafkaSpecZookeeperStoragePtrOutputWithContext(context.Context) KafkaSpecZookeeperStoragePtrOutput
}

type kafkaSpecZookeeperStoragePtrType KafkaSpecZookeeperStorageArgs

func KafkaSpecZookeeperStoragePtr(v *KafkaSpecZookeeperStorageArgs) KafkaSpecZookeeperStoragePtrInput {
	return (*kafkaSpecZookeeperStoragePtrType)(v)
}

func (*kafkaSpecZookeeperStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperStorage)(nil)).Elem()
}

func (i *kafkaSpecZookeeperStoragePtrType) ToKafkaSpecZookeeperStoragePtrOutput() KafkaSpecZookeeperStoragePtrOutput {
	return i.ToKafkaSpecZookeeperStoragePtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperStoragePtrType) ToKafkaSpecZookeeperStoragePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperStoragePtrOutput)
}

// Storage configuration (disk). Cannot be updated.
type KafkaSpecZookeeperStorageOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperStorage)(nil)).Elem()
}

func (o KafkaSpecZookeeperStorageOutput) ToKafkaSpecZookeeperStorageOutput() KafkaSpecZookeeperStorageOutput {
	return o
}

func (o KafkaSpecZookeeperStorageOutput) ToKafkaSpecZookeeperStorageOutputWithContext(ctx context.Context) KafkaSpecZookeeperStorageOutput {
	return o
}

func (o KafkaSpecZookeeperStorageOutput) ToKafkaSpecZookeeperStoragePtrOutput() KafkaSpecZookeeperStoragePtrOutput {
	return o.ToKafkaSpecZookeeperStoragePtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperStorageOutput) ToKafkaSpecZookeeperStoragePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperStorage) *KafkaSpecZookeeperStorage {
		return &v
	}).(KafkaSpecZookeeperStoragePtrOutput)
}

// The storage class to use for dynamic volume allocation.
func (o KafkaSpecZookeeperStorageOutput) Class() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperStorage) *string { return v.Class }).(pulumi.StringPtrOutput)
}

// Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.
func (o KafkaSpecZookeeperStorageOutput) DeleteClaim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperStorage) *bool { return v.DeleteClaim }).(pulumi.BoolPtrOutput)
}

// Storage identification number. Mandatory for storage volumes defined with a `jbod` storage type configuration.
func (o KafkaSpecZookeeperStorageOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperStorage) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Specifies whether this volume should be used for storing KRaft metadata. This property is optional. When set, the only currently supported value is `shared`. At most one volume can have this property set.
func (o KafkaSpecZookeeperStorageOutput) KraftMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperStorage) *string { return v.KraftMetadata }).(pulumi.StringPtrOutput)
}

// As of Strimzi 0.46.0, the storage overrides for individual brokers are not supported anymore and this option is ignored.
func (o KafkaSpecZookeeperStorageOutput) Overrides() KafkaSpecZookeeperStorageOverridesArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperStorage) []KafkaSpecZookeeperStorageOverrides { return v.Overrides }).(KafkaSpecZookeeperStorageOverridesArrayOutput)
}

// Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.
func (o KafkaSpecZookeeperStorageOutput) Selector() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperStorage) map[string]string { return v.Selector }).(pulumi.StringMapOutput)
}

// When `type=persistent-claim`, defines the size of the persistent volume claim, such as 100Gi. Mandatory when `type=persistent-claim`.
func (o KafkaSpecZookeeperStorageOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperStorage) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).
func (o KafkaSpecZookeeperStorageOutput) SizeLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperStorage) *string { return v.SizeLimit }).(pulumi.StringPtrOutput)
}

// Storage type, must be either 'ephemeral' or 'persistent-claim'.
func (o KafkaSpecZookeeperStorageOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperStorage) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperStoragePtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperStorage)(nil)).Elem()
}

func (o KafkaSpecZookeeperStoragePtrOutput) ToKafkaSpecZookeeperStoragePtrOutput() KafkaSpecZookeeperStoragePtrOutput {
	return o
}

func (o KafkaSpecZookeeperStoragePtrOutput) ToKafkaSpecZookeeperStoragePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperStoragePtrOutput {
	return o
}

func (o KafkaSpecZookeeperStoragePtrOutput) Elem() KafkaSpecZookeeperStorageOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperStorage) KafkaSpecZookeeperStorage {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperStorage
		return ret
	}).(KafkaSpecZookeeperStorageOutput)
}

// The storage class to use for dynamic volume allocation.
func (o KafkaSpecZookeeperStoragePtrOutput) Class() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperStorage) *string {
		if v == nil {
			return nil
		}
		return v.Class
	}).(pulumi.StringPtrOutput)
}

// Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.
func (o KafkaSpecZookeeperStoragePtrOutput) DeleteClaim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperStorage) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteClaim
	}).(pulumi.BoolPtrOutput)
}

// Storage identification number. Mandatory for storage volumes defined with a `jbod` storage type configuration.
func (o KafkaSpecZookeeperStoragePtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperStorage) *int {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.IntPtrOutput)
}

// Specifies whether this volume should be used for storing KRaft metadata. This property is optional. When set, the only currently supported value is `shared`. At most one volume can have this property set.
func (o KafkaSpecZookeeperStoragePtrOutput) KraftMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperStorage) *string {
		if v == nil {
			return nil
		}
		return v.KraftMetadata
	}).(pulumi.StringPtrOutput)
}

// As of Strimzi 0.46.0, the storage overrides for individual brokers are not supported anymore and this option is ignored.
func (o KafkaSpecZookeeperStoragePtrOutput) Overrides() KafkaSpecZookeeperStorageOverridesArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperStorage) []KafkaSpecZookeeperStorageOverrides {
		if v == nil {
			return nil
		}
		return v.Overrides
	}).(KafkaSpecZookeeperStorageOverridesArrayOutput)
}

// Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.
func (o KafkaSpecZookeeperStoragePtrOutput) Selector() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperStorage) map[string]string {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(pulumi.StringMapOutput)
}

// When `type=persistent-claim`, defines the size of the persistent volume claim, such as 100Gi. Mandatory when `type=persistent-claim`.
func (o KafkaSpecZookeeperStoragePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperStorage) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).
func (o KafkaSpecZookeeperStoragePtrOutput) SizeLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperStorage) *string {
		if v == nil {
			return nil
		}
		return v.SizeLimit
	}).(pulumi.StringPtrOutput)
}

// Storage type, must be either 'ephemeral' or 'persistent-claim'.
func (o KafkaSpecZookeeperStoragePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperStorage) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperStorageOverrides struct {
	// Id of the kafka broker (broker identifier).
	Broker *int `pulumi:"broker"`
	// The storage class to use for dynamic volume allocation for this broker.
	Class *string `pulumi:"class"`
}

// KafkaSpecZookeeperStorageOverridesInput is an input type that accepts KafkaSpecZookeeperStorageOverridesArgs and KafkaSpecZookeeperStorageOverridesOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperStorageOverridesInput` via:
//
//	KafkaSpecZookeeperStorageOverridesArgs{...}
type KafkaSpecZookeeperStorageOverridesInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperStorageOverridesOutput() KafkaSpecZookeeperStorageOverridesOutput
	ToKafkaSpecZookeeperStorageOverridesOutputWithContext(context.Context) KafkaSpecZookeeperStorageOverridesOutput
}

type KafkaSpecZookeeperStorageOverridesArgs struct {
	// Id of the kafka broker (broker identifier).
	Broker pulumi.IntPtrInput `pulumi:"broker"`
	// The storage class to use for dynamic volume allocation for this broker.
	Class pulumi.StringPtrInput `pulumi:"class"`
}

func (KafkaSpecZookeeperStorageOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperStorageOverrides)(nil)).Elem()
}

func (i KafkaSpecZookeeperStorageOverridesArgs) ToKafkaSpecZookeeperStorageOverridesOutput() KafkaSpecZookeeperStorageOverridesOutput {
	return i.ToKafkaSpecZookeeperStorageOverridesOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperStorageOverridesArgs) ToKafkaSpecZookeeperStorageOverridesOutputWithContext(ctx context.Context) KafkaSpecZookeeperStorageOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperStorageOverridesOutput)
}

// KafkaSpecZookeeperStorageOverridesArrayInput is an input type that accepts KafkaSpecZookeeperStorageOverridesArray and KafkaSpecZookeeperStorageOverridesArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperStorageOverridesArrayInput` via:
//
//	KafkaSpecZookeeperStorageOverridesArray{ KafkaSpecZookeeperStorageOverridesArgs{...} }
type KafkaSpecZookeeperStorageOverridesArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperStorageOverridesArrayOutput() KafkaSpecZookeeperStorageOverridesArrayOutput
	ToKafkaSpecZookeeperStorageOverridesArrayOutputWithContext(context.Context) KafkaSpecZookeeperStorageOverridesArrayOutput
}

type KafkaSpecZookeeperStorageOverridesArray []KafkaSpecZookeeperStorageOverridesInput

func (KafkaSpecZookeeperStorageOverridesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperStorageOverrides)(nil)).Elem()
}

func (i KafkaSpecZookeeperStorageOverridesArray) ToKafkaSpecZookeeperStorageOverridesArrayOutput() KafkaSpecZookeeperStorageOverridesArrayOutput {
	return i.ToKafkaSpecZookeeperStorageOverridesArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperStorageOverridesArray) ToKafkaSpecZookeeperStorageOverridesArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperStorageOverridesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperStorageOverridesArrayOutput)
}

type KafkaSpecZookeeperStorageOverridesOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperStorageOverridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperStorageOverrides)(nil)).Elem()
}

func (o KafkaSpecZookeeperStorageOverridesOutput) ToKafkaSpecZookeeperStorageOverridesOutput() KafkaSpecZookeeperStorageOverridesOutput {
	return o
}

func (o KafkaSpecZookeeperStorageOverridesOutput) ToKafkaSpecZookeeperStorageOverridesOutputWithContext(ctx context.Context) KafkaSpecZookeeperStorageOverridesOutput {
	return o
}

// Id of the kafka broker (broker identifier).
func (o KafkaSpecZookeeperStorageOverridesOutput) Broker() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperStorageOverrides) *int { return v.Broker }).(pulumi.IntPtrOutput)
}

// The storage class to use for dynamic volume allocation for this broker.
func (o KafkaSpecZookeeperStorageOverridesOutput) Class() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperStorageOverrides) *string { return v.Class }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperStorageOverridesArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperStorageOverridesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperStorageOverrides)(nil)).Elem()
}

func (o KafkaSpecZookeeperStorageOverridesArrayOutput) ToKafkaSpecZookeeperStorageOverridesArrayOutput() KafkaSpecZookeeperStorageOverridesArrayOutput {
	return o
}

func (o KafkaSpecZookeeperStorageOverridesArrayOutput) ToKafkaSpecZookeeperStorageOverridesArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperStorageOverridesArrayOutput {
	return o
}

func (o KafkaSpecZookeeperStorageOverridesArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperStorageOverridesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperStorageOverrides {
		return vs[0].([]KafkaSpecZookeeperStorageOverrides)[vs[1].(int)]
	}).(KafkaSpecZookeeperStorageOverridesOutput)
}

type KafkaSpecZookeeperStorageOverridesPatch struct {
	// Id of the kafka broker (broker identifier).
	Broker *int `pulumi:"broker"`
	// The storage class to use for dynamic volume allocation for this broker.
	Class *string `pulumi:"class"`
}

// KafkaSpecZookeeperStorageOverridesPatchInput is an input type that accepts KafkaSpecZookeeperStorageOverridesPatchArgs and KafkaSpecZookeeperStorageOverridesPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperStorageOverridesPatchInput` via:
//
//	KafkaSpecZookeeperStorageOverridesPatchArgs{...}
type KafkaSpecZookeeperStorageOverridesPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperStorageOverridesPatchOutput() KafkaSpecZookeeperStorageOverridesPatchOutput
	ToKafkaSpecZookeeperStorageOverridesPatchOutputWithContext(context.Context) KafkaSpecZookeeperStorageOverridesPatchOutput
}

type KafkaSpecZookeeperStorageOverridesPatchArgs struct {
	// Id of the kafka broker (broker identifier).
	Broker pulumi.IntPtrInput `pulumi:"broker"`
	// The storage class to use for dynamic volume allocation for this broker.
	Class pulumi.StringPtrInput `pulumi:"class"`
}

func (KafkaSpecZookeeperStorageOverridesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperStorageOverridesPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperStorageOverridesPatchArgs) ToKafkaSpecZookeeperStorageOverridesPatchOutput() KafkaSpecZookeeperStorageOverridesPatchOutput {
	return i.ToKafkaSpecZookeeperStorageOverridesPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperStorageOverridesPatchArgs) ToKafkaSpecZookeeperStorageOverridesPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperStorageOverridesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperStorageOverridesPatchOutput)
}

// KafkaSpecZookeeperStorageOverridesPatchArrayInput is an input type that accepts KafkaSpecZookeeperStorageOverridesPatchArray and KafkaSpecZookeeperStorageOverridesPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperStorageOverridesPatchArrayInput` via:
//
//	KafkaSpecZookeeperStorageOverridesPatchArray{ KafkaSpecZookeeperStorageOverridesPatchArgs{...} }
type KafkaSpecZookeeperStorageOverridesPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperStorageOverridesPatchArrayOutput() KafkaSpecZookeeperStorageOverridesPatchArrayOutput
	ToKafkaSpecZookeeperStorageOverridesPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperStorageOverridesPatchArrayOutput
}

type KafkaSpecZookeeperStorageOverridesPatchArray []KafkaSpecZookeeperStorageOverridesPatchInput

func (KafkaSpecZookeeperStorageOverridesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperStorageOverridesPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperStorageOverridesPatchArray) ToKafkaSpecZookeeperStorageOverridesPatchArrayOutput() KafkaSpecZookeeperStorageOverridesPatchArrayOutput {
	return i.ToKafkaSpecZookeeperStorageOverridesPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperStorageOverridesPatchArray) ToKafkaSpecZookeeperStorageOverridesPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperStorageOverridesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperStorageOverridesPatchArrayOutput)
}

type KafkaSpecZookeeperStorageOverridesPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperStorageOverridesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperStorageOverridesPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperStorageOverridesPatchOutput) ToKafkaSpecZookeeperStorageOverridesPatchOutput() KafkaSpecZookeeperStorageOverridesPatchOutput {
	return o
}

func (o KafkaSpecZookeeperStorageOverridesPatchOutput) ToKafkaSpecZookeeperStorageOverridesPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperStorageOverridesPatchOutput {
	return o
}

// Id of the kafka broker (broker identifier).
func (o KafkaSpecZookeeperStorageOverridesPatchOutput) Broker() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperStorageOverridesPatch) *int { return v.Broker }).(pulumi.IntPtrOutput)
}

// The storage class to use for dynamic volume allocation for this broker.
func (o KafkaSpecZookeeperStorageOverridesPatchOutput) Class() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperStorageOverridesPatch) *string { return v.Class }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperStorageOverridesPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperStorageOverridesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperStorageOverridesPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperStorageOverridesPatchArrayOutput) ToKafkaSpecZookeeperStorageOverridesPatchArrayOutput() KafkaSpecZookeeperStorageOverridesPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperStorageOverridesPatchArrayOutput) ToKafkaSpecZookeeperStorageOverridesPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperStorageOverridesPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperStorageOverridesPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperStorageOverridesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperStorageOverridesPatch {
		return vs[0].([]KafkaSpecZookeeperStorageOverridesPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperStorageOverridesPatchOutput)
}

// Storage configuration (disk). Cannot be updated.
type KafkaSpecZookeeperStoragePatch struct {
	// The storage class to use for dynamic volume allocation.
	Class *string `pulumi:"class"`
	// Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.
	DeleteClaim *bool `pulumi:"deleteClaim"`
	// Storage identification number. Mandatory for storage volumes defined with a `jbod` storage type configuration.
	Id *int `pulumi:"id"`
	// Specifies whether this volume should be used for storing KRaft metadata. This property is optional. When set, the only currently supported value is `shared`. At most one volume can have this property set.
	KraftMetadata *string `pulumi:"kraftMetadata"`
	// As of Strimzi 0.46.0, the storage overrides for individual brokers are not supported anymore and this option is ignored.
	Overrides []KafkaSpecZookeeperStorageOverridesPatch `pulumi:"overrides"`
	// Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.
	Selector map[string]string `pulumi:"selector"`
	// When `type=persistent-claim`, defines the size of the persistent volume claim, such as 100Gi. Mandatory when `type=persistent-claim`.
	Size *string `pulumi:"size"`
	// When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).
	SizeLimit *string `pulumi:"sizeLimit"`
	// Storage type, must be either 'ephemeral' or 'persistent-claim'.
	Type *string `pulumi:"type"`
}

// KafkaSpecZookeeperStoragePatchInput is an input type that accepts KafkaSpecZookeeperStoragePatchArgs and KafkaSpecZookeeperStoragePatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperStoragePatchInput` via:
//
//	KafkaSpecZookeeperStoragePatchArgs{...}
type KafkaSpecZookeeperStoragePatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperStoragePatchOutput() KafkaSpecZookeeperStoragePatchOutput
	ToKafkaSpecZookeeperStoragePatchOutputWithContext(context.Context) KafkaSpecZookeeperStoragePatchOutput
}

// Storage configuration (disk). Cannot be updated.
type KafkaSpecZookeeperStoragePatchArgs struct {
	// The storage class to use for dynamic volume allocation.
	Class pulumi.StringPtrInput `pulumi:"class"`
	// Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.
	DeleteClaim pulumi.BoolPtrInput `pulumi:"deleteClaim"`
	// Storage identification number. Mandatory for storage volumes defined with a `jbod` storage type configuration.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Specifies whether this volume should be used for storing KRaft metadata. This property is optional. When set, the only currently supported value is `shared`. At most one volume can have this property set.
	KraftMetadata pulumi.StringPtrInput `pulumi:"kraftMetadata"`
	// As of Strimzi 0.46.0, the storage overrides for individual brokers are not supported anymore and this option is ignored.
	Overrides KafkaSpecZookeeperStorageOverridesPatchArrayInput `pulumi:"overrides"`
	// Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.
	Selector pulumi.StringMapInput `pulumi:"selector"`
	// When `type=persistent-claim`, defines the size of the persistent volume claim, such as 100Gi. Mandatory when `type=persistent-claim`.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).
	SizeLimit pulumi.StringPtrInput `pulumi:"sizeLimit"`
	// Storage type, must be either 'ephemeral' or 'persistent-claim'.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaSpecZookeeperStoragePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperStoragePatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperStoragePatchArgs) ToKafkaSpecZookeeperStoragePatchOutput() KafkaSpecZookeeperStoragePatchOutput {
	return i.ToKafkaSpecZookeeperStoragePatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperStoragePatchArgs) ToKafkaSpecZookeeperStoragePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperStoragePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperStoragePatchOutput)
}

func (i KafkaSpecZookeeperStoragePatchArgs) ToKafkaSpecZookeeperStoragePatchPtrOutput() KafkaSpecZookeeperStoragePatchPtrOutput {
	return i.ToKafkaSpecZookeeperStoragePatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperStoragePatchArgs) ToKafkaSpecZookeeperStoragePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperStoragePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperStoragePatchOutput).ToKafkaSpecZookeeperStoragePatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperStoragePatchPtrInput is an input type that accepts KafkaSpecZookeeperStoragePatchArgs, KafkaSpecZookeeperStoragePatchPtr and KafkaSpecZookeeperStoragePatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperStoragePatchPtrInput` via:
//
//	        KafkaSpecZookeeperStoragePatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperStoragePatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperStoragePatchPtrOutput() KafkaSpecZookeeperStoragePatchPtrOutput
	ToKafkaSpecZookeeperStoragePatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperStoragePatchPtrOutput
}

type kafkaSpecZookeeperStoragePatchPtrType KafkaSpecZookeeperStoragePatchArgs

func KafkaSpecZookeeperStoragePatchPtr(v *KafkaSpecZookeeperStoragePatchArgs) KafkaSpecZookeeperStoragePatchPtrInput {
	return (*kafkaSpecZookeeperStoragePatchPtrType)(v)
}

func (*kafkaSpecZookeeperStoragePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperStoragePatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperStoragePatchPtrType) ToKafkaSpecZookeeperStoragePatchPtrOutput() KafkaSpecZookeeperStoragePatchPtrOutput {
	return i.ToKafkaSpecZookeeperStoragePatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperStoragePatchPtrType) ToKafkaSpecZookeeperStoragePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperStoragePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperStoragePatchPtrOutput)
}

// Storage configuration (disk). Cannot be updated.
type KafkaSpecZookeeperStoragePatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperStoragePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperStoragePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperStoragePatchOutput) ToKafkaSpecZookeeperStoragePatchOutput() KafkaSpecZookeeperStoragePatchOutput {
	return o
}

func (o KafkaSpecZookeeperStoragePatchOutput) ToKafkaSpecZookeeperStoragePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperStoragePatchOutput {
	return o
}

func (o KafkaSpecZookeeperStoragePatchOutput) ToKafkaSpecZookeeperStoragePatchPtrOutput() KafkaSpecZookeeperStoragePatchPtrOutput {
	return o.ToKafkaSpecZookeeperStoragePatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperStoragePatchOutput) ToKafkaSpecZookeeperStoragePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperStoragePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperStoragePatch) *KafkaSpecZookeeperStoragePatch {
		return &v
	}).(KafkaSpecZookeeperStoragePatchPtrOutput)
}

// The storage class to use for dynamic volume allocation.
func (o KafkaSpecZookeeperStoragePatchOutput) Class() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperStoragePatch) *string { return v.Class }).(pulumi.StringPtrOutput)
}

// Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.
func (o KafkaSpecZookeeperStoragePatchOutput) DeleteClaim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperStoragePatch) *bool { return v.DeleteClaim }).(pulumi.BoolPtrOutput)
}

// Storage identification number. Mandatory for storage volumes defined with a `jbod` storage type configuration.
func (o KafkaSpecZookeeperStoragePatchOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperStoragePatch) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Specifies whether this volume should be used for storing KRaft metadata. This property is optional. When set, the only currently supported value is `shared`. At most one volume can have this property set.
func (o KafkaSpecZookeeperStoragePatchOutput) KraftMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperStoragePatch) *string { return v.KraftMetadata }).(pulumi.StringPtrOutput)
}

// As of Strimzi 0.46.0, the storage overrides for individual brokers are not supported anymore and this option is ignored.
func (o KafkaSpecZookeeperStoragePatchOutput) Overrides() KafkaSpecZookeeperStorageOverridesPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperStoragePatch) []KafkaSpecZookeeperStorageOverridesPatch { return v.Overrides }).(KafkaSpecZookeeperStorageOverridesPatchArrayOutput)
}

// Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.
func (o KafkaSpecZookeeperStoragePatchOutput) Selector() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperStoragePatch) map[string]string { return v.Selector }).(pulumi.StringMapOutput)
}

// When `type=persistent-claim`, defines the size of the persistent volume claim, such as 100Gi. Mandatory when `type=persistent-claim`.
func (o KafkaSpecZookeeperStoragePatchOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperStoragePatch) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).
func (o KafkaSpecZookeeperStoragePatchOutput) SizeLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperStoragePatch) *string { return v.SizeLimit }).(pulumi.StringPtrOutput)
}

// Storage type, must be either 'ephemeral' or 'persistent-claim'.
func (o KafkaSpecZookeeperStoragePatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperStoragePatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperStoragePatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperStoragePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperStoragePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperStoragePatchPtrOutput) ToKafkaSpecZookeeperStoragePatchPtrOutput() KafkaSpecZookeeperStoragePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperStoragePatchPtrOutput) ToKafkaSpecZookeeperStoragePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperStoragePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperStoragePatchPtrOutput) Elem() KafkaSpecZookeeperStoragePatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperStoragePatch) KafkaSpecZookeeperStoragePatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperStoragePatch
		return ret
	}).(KafkaSpecZookeeperStoragePatchOutput)
}

// The storage class to use for dynamic volume allocation.
func (o KafkaSpecZookeeperStoragePatchPtrOutput) Class() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperStoragePatch) *string {
		if v == nil {
			return nil
		}
		return v.Class
	}).(pulumi.StringPtrOutput)
}

// Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.
func (o KafkaSpecZookeeperStoragePatchPtrOutput) DeleteClaim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperStoragePatch) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteClaim
	}).(pulumi.BoolPtrOutput)
}

// Storage identification number. Mandatory for storage volumes defined with a `jbod` storage type configuration.
func (o KafkaSpecZookeeperStoragePatchPtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperStoragePatch) *int {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.IntPtrOutput)
}

// Specifies whether this volume should be used for storing KRaft metadata. This property is optional. When set, the only currently supported value is `shared`. At most one volume can have this property set.
func (o KafkaSpecZookeeperStoragePatchPtrOutput) KraftMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperStoragePatch) *string {
		if v == nil {
			return nil
		}
		return v.KraftMetadata
	}).(pulumi.StringPtrOutput)
}

// As of Strimzi 0.46.0, the storage overrides for individual brokers are not supported anymore and this option is ignored.
func (o KafkaSpecZookeeperStoragePatchPtrOutput) Overrides() KafkaSpecZookeeperStorageOverridesPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperStoragePatch) []KafkaSpecZookeeperStorageOverridesPatch {
		if v == nil {
			return nil
		}
		return v.Overrides
	}).(KafkaSpecZookeeperStorageOverridesPatchArrayOutput)
}

// Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.
func (o KafkaSpecZookeeperStoragePatchPtrOutput) Selector() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperStoragePatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(pulumi.StringMapOutput)
}

// When `type=persistent-claim`, defines the size of the persistent volume claim, such as 100Gi. Mandatory when `type=persistent-claim`.
func (o KafkaSpecZookeeperStoragePatchPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperStoragePatch) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).
func (o KafkaSpecZookeeperStoragePatchPtrOutput) SizeLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperStoragePatch) *string {
		if v == nil {
			return nil
		}
		return v.SizeLimit
	}).(pulumi.StringPtrOutput)
}

// Storage type, must be either 'ephemeral' or 'persistent-claim'.
func (o KafkaSpecZookeeperStoragePatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperStoragePatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Template for ZooKeeper cluster resources. The template allows users to specify how the Kubernetes resources are generated.
type KafkaSpecZookeeperTemplate struct {
	ClientService         *KafkaSpecZookeeperTemplateClientService         `pulumi:"clientService"`
	JmxSecret             *KafkaSpecZookeeperTemplateJmxSecret             `pulumi:"jmxSecret"`
	NodesService          *KafkaSpecZookeeperTemplateNodesService          `pulumi:"nodesService"`
	PersistentVolumeClaim *KafkaSpecZookeeperTemplatePersistentVolumeClaim `pulumi:"persistentVolumeClaim"`
	Pod                   *KafkaSpecZookeeperTemplatePod                   `pulumi:"pod"`
	PodDisruptionBudget   *KafkaSpecZookeeperTemplatePodDisruptionBudget   `pulumi:"podDisruptionBudget"`
	PodSet                *KafkaSpecZookeeperTemplatePodSet                `pulumi:"podSet"`
	ServiceAccount        *KafkaSpecZookeeperTemplateServiceAccount        `pulumi:"serviceAccount"`
	Statefulset           *KafkaSpecZookeeperTemplateStatefulset           `pulumi:"statefulset"`
	ZookeeperContainer    *KafkaSpecZookeeperTemplateZookeeperContainer    `pulumi:"zookeeperContainer"`
}

// KafkaSpecZookeeperTemplateInput is an input type that accepts KafkaSpecZookeeperTemplateArgs and KafkaSpecZookeeperTemplateOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateInput` via:
//
//	KafkaSpecZookeeperTemplateArgs{...}
type KafkaSpecZookeeperTemplateInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateOutput() KafkaSpecZookeeperTemplateOutput
	ToKafkaSpecZookeeperTemplateOutputWithContext(context.Context) KafkaSpecZookeeperTemplateOutput
}

// Template for ZooKeeper cluster resources. The template allows users to specify how the Kubernetes resources are generated.
type KafkaSpecZookeeperTemplateArgs struct {
	ClientService         KafkaSpecZookeeperTemplateClientServicePtrInput         `pulumi:"clientService"`
	JmxSecret             KafkaSpecZookeeperTemplateJmxSecretPtrInput             `pulumi:"jmxSecret"`
	NodesService          KafkaSpecZookeeperTemplateNodesServicePtrInput          `pulumi:"nodesService"`
	PersistentVolumeClaim KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrInput `pulumi:"persistentVolumeClaim"`
	Pod                   KafkaSpecZookeeperTemplatePodPtrInput                   `pulumi:"pod"`
	PodDisruptionBudget   KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrInput   `pulumi:"podDisruptionBudget"`
	PodSet                KafkaSpecZookeeperTemplatePodSetPtrInput                `pulumi:"podSet"`
	ServiceAccount        KafkaSpecZookeeperTemplateServiceAccountPtrInput        `pulumi:"serviceAccount"`
	Statefulset           KafkaSpecZookeeperTemplateStatefulsetPtrInput           `pulumi:"statefulset"`
	ZookeeperContainer    KafkaSpecZookeeperTemplateZookeeperContainerPtrInput    `pulumi:"zookeeperContainer"`
}

func (KafkaSpecZookeeperTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplate)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateArgs) ToKafkaSpecZookeeperTemplateOutput() KafkaSpecZookeeperTemplateOutput {
	return i.ToKafkaSpecZookeeperTemplateOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateArgs) ToKafkaSpecZookeeperTemplateOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateOutput)
}

func (i KafkaSpecZookeeperTemplateArgs) ToKafkaSpecZookeeperTemplatePtrOutput() KafkaSpecZookeeperTemplatePtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateArgs) ToKafkaSpecZookeeperTemplatePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateOutput).ToKafkaSpecZookeeperTemplatePtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePtrInput is an input type that accepts KafkaSpecZookeeperTemplateArgs, KafkaSpecZookeeperTemplatePtr and KafkaSpecZookeeperTemplatePtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePtrInput` via:
//
//	        KafkaSpecZookeeperTemplateArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePtrOutput() KafkaSpecZookeeperTemplatePtrOutput
	ToKafkaSpecZookeeperTemplatePtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePtrOutput
}

type kafkaSpecZookeeperTemplatePtrType KafkaSpecZookeeperTemplateArgs

func KafkaSpecZookeeperTemplatePtr(v *KafkaSpecZookeeperTemplateArgs) KafkaSpecZookeeperTemplatePtrInput {
	return (*kafkaSpecZookeeperTemplatePtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplate)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePtrType) ToKafkaSpecZookeeperTemplatePtrOutput() KafkaSpecZookeeperTemplatePtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePtrType) ToKafkaSpecZookeeperTemplatePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePtrOutput)
}

// Template for ZooKeeper cluster resources. The template allows users to specify how the Kubernetes resources are generated.
type KafkaSpecZookeeperTemplateOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplate)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateOutput) ToKafkaSpecZookeeperTemplateOutput() KafkaSpecZookeeperTemplateOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateOutput) ToKafkaSpecZookeeperTemplateOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateOutput) ToKafkaSpecZookeeperTemplatePtrOutput() KafkaSpecZookeeperTemplatePtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateOutput) ToKafkaSpecZookeeperTemplatePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplate) *KafkaSpecZookeeperTemplate {
		return &v
	}).(KafkaSpecZookeeperTemplatePtrOutput)
}

func (o KafkaSpecZookeeperTemplateOutput) ClientService() KafkaSpecZookeeperTemplateClientServicePtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplate) *KafkaSpecZookeeperTemplateClientService { return v.ClientService }).(KafkaSpecZookeeperTemplateClientServicePtrOutput)
}

func (o KafkaSpecZookeeperTemplateOutput) JmxSecret() KafkaSpecZookeeperTemplateJmxSecretPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplate) *KafkaSpecZookeeperTemplateJmxSecret { return v.JmxSecret }).(KafkaSpecZookeeperTemplateJmxSecretPtrOutput)
}

func (o KafkaSpecZookeeperTemplateOutput) NodesService() KafkaSpecZookeeperTemplateNodesServicePtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplate) *KafkaSpecZookeeperTemplateNodesService { return v.NodesService }).(KafkaSpecZookeeperTemplateNodesServicePtrOutput)
}

func (o KafkaSpecZookeeperTemplateOutput) PersistentVolumeClaim() KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplate) *KafkaSpecZookeeperTemplatePersistentVolumeClaim {
		return v.PersistentVolumeClaim
	}).(KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput)
}

func (o KafkaSpecZookeeperTemplateOutput) Pod() KafkaSpecZookeeperTemplatePodPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplate) *KafkaSpecZookeeperTemplatePod { return v.Pod }).(KafkaSpecZookeeperTemplatePodPtrOutput)
}

func (o KafkaSpecZookeeperTemplateOutput) PodDisruptionBudget() KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplate) *KafkaSpecZookeeperTemplatePodDisruptionBudget {
		return v.PodDisruptionBudget
	}).(KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput)
}

func (o KafkaSpecZookeeperTemplateOutput) PodSet() KafkaSpecZookeeperTemplatePodSetPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplate) *KafkaSpecZookeeperTemplatePodSet { return v.PodSet }).(KafkaSpecZookeeperTemplatePodSetPtrOutput)
}

func (o KafkaSpecZookeeperTemplateOutput) ServiceAccount() KafkaSpecZookeeperTemplateServiceAccountPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplate) *KafkaSpecZookeeperTemplateServiceAccount { return v.ServiceAccount }).(KafkaSpecZookeeperTemplateServiceAccountPtrOutput)
}

func (o KafkaSpecZookeeperTemplateOutput) Statefulset() KafkaSpecZookeeperTemplateStatefulsetPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplate) *KafkaSpecZookeeperTemplateStatefulset { return v.Statefulset }).(KafkaSpecZookeeperTemplateStatefulsetPtrOutput)
}

func (o KafkaSpecZookeeperTemplateOutput) ZookeeperContainer() KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplate) *KafkaSpecZookeeperTemplateZookeeperContainer {
		return v.ZookeeperContainer
	}).(KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput)
}

type KafkaSpecZookeeperTemplatePtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplate)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePtrOutput) ToKafkaSpecZookeeperTemplatePtrOutput() KafkaSpecZookeeperTemplatePtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePtrOutput) ToKafkaSpecZookeeperTemplatePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePtrOutput) Elem() KafkaSpecZookeeperTemplateOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplate) KafkaSpecZookeeperTemplate {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplate
		return ret
	}).(KafkaSpecZookeeperTemplateOutput)
}

func (o KafkaSpecZookeeperTemplatePtrOutput) ClientService() KafkaSpecZookeeperTemplateClientServicePtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplate) *KafkaSpecZookeeperTemplateClientService {
		if v == nil {
			return nil
		}
		return v.ClientService
	}).(KafkaSpecZookeeperTemplateClientServicePtrOutput)
}

func (o KafkaSpecZookeeperTemplatePtrOutput) JmxSecret() KafkaSpecZookeeperTemplateJmxSecretPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplate) *KafkaSpecZookeeperTemplateJmxSecret {
		if v == nil {
			return nil
		}
		return v.JmxSecret
	}).(KafkaSpecZookeeperTemplateJmxSecretPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePtrOutput) NodesService() KafkaSpecZookeeperTemplateNodesServicePtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplate) *KafkaSpecZookeeperTemplateNodesService {
		if v == nil {
			return nil
		}
		return v.NodesService
	}).(KafkaSpecZookeeperTemplateNodesServicePtrOutput)
}

func (o KafkaSpecZookeeperTemplatePtrOutput) PersistentVolumeClaim() KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplate) *KafkaSpecZookeeperTemplatePersistentVolumeClaim {
		if v == nil {
			return nil
		}
		return v.PersistentVolumeClaim
	}).(KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePtrOutput) Pod() KafkaSpecZookeeperTemplatePodPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplate) *KafkaSpecZookeeperTemplatePod {
		if v == nil {
			return nil
		}
		return v.Pod
	}).(KafkaSpecZookeeperTemplatePodPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePtrOutput) PodDisruptionBudget() KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplate) *KafkaSpecZookeeperTemplatePodDisruptionBudget {
		if v == nil {
			return nil
		}
		return v.PodDisruptionBudget
	}).(KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePtrOutput) PodSet() KafkaSpecZookeeperTemplatePodSetPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplate) *KafkaSpecZookeeperTemplatePodSet {
		if v == nil {
			return nil
		}
		return v.PodSet
	}).(KafkaSpecZookeeperTemplatePodSetPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePtrOutput) ServiceAccount() KafkaSpecZookeeperTemplateServiceAccountPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplate) *KafkaSpecZookeeperTemplateServiceAccount {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(KafkaSpecZookeeperTemplateServiceAccountPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePtrOutput) Statefulset() KafkaSpecZookeeperTemplateStatefulsetPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplate) *KafkaSpecZookeeperTemplateStatefulset {
		if v == nil {
			return nil
		}
		return v.Statefulset
	}).(KafkaSpecZookeeperTemplateStatefulsetPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePtrOutput) ZookeeperContainer() KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplate) *KafkaSpecZookeeperTemplateZookeeperContainer {
		if v == nil {
			return nil
		}
		return v.ZookeeperContainer
	}).(KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput)
}

// Template for ZooKeeper client `Service`.
type KafkaSpecZookeeperTemplateClientService struct {
	// Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
	IpFamilies []string `pulumi:"ipFamilies"`
	// Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
	IpFamilyPolicy *string                                          `pulumi:"ipFamilyPolicy"`
	Metadata       *KafkaSpecZookeeperTemplateClientServiceMetadata `pulumi:"metadata"`
}

// KafkaSpecZookeeperTemplateClientServiceInput is an input type that accepts KafkaSpecZookeeperTemplateClientServiceArgs and KafkaSpecZookeeperTemplateClientServiceOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateClientServiceInput` via:
//
//	KafkaSpecZookeeperTemplateClientServiceArgs{...}
type KafkaSpecZookeeperTemplateClientServiceInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateClientServiceOutput() KafkaSpecZookeeperTemplateClientServiceOutput
	ToKafkaSpecZookeeperTemplateClientServiceOutputWithContext(context.Context) KafkaSpecZookeeperTemplateClientServiceOutput
}

// Template for ZooKeeper client `Service`.
type KafkaSpecZookeeperTemplateClientServiceArgs struct {
	// Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
	IpFamilies pulumi.StringArrayInput `pulumi:"ipFamilies"`
	// Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
	IpFamilyPolicy pulumi.StringPtrInput                                   `pulumi:"ipFamilyPolicy"`
	Metadata       KafkaSpecZookeeperTemplateClientServiceMetadataPtrInput `pulumi:"metadata"`
}

func (KafkaSpecZookeeperTemplateClientServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateClientService)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateClientServiceArgs) ToKafkaSpecZookeeperTemplateClientServiceOutput() KafkaSpecZookeeperTemplateClientServiceOutput {
	return i.ToKafkaSpecZookeeperTemplateClientServiceOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateClientServiceArgs) ToKafkaSpecZookeeperTemplateClientServiceOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateClientServiceOutput)
}

func (i KafkaSpecZookeeperTemplateClientServiceArgs) ToKafkaSpecZookeeperTemplateClientServicePtrOutput() KafkaSpecZookeeperTemplateClientServicePtrOutput {
	return i.ToKafkaSpecZookeeperTemplateClientServicePtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateClientServiceArgs) ToKafkaSpecZookeeperTemplateClientServicePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateClientServiceOutput).ToKafkaSpecZookeeperTemplateClientServicePtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateClientServicePtrInput is an input type that accepts KafkaSpecZookeeperTemplateClientServiceArgs, KafkaSpecZookeeperTemplateClientServicePtr and KafkaSpecZookeeperTemplateClientServicePtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateClientServicePtrInput` via:
//
//	        KafkaSpecZookeeperTemplateClientServiceArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateClientServicePtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateClientServicePtrOutput() KafkaSpecZookeeperTemplateClientServicePtrOutput
	ToKafkaSpecZookeeperTemplateClientServicePtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateClientServicePtrOutput
}

type kafkaSpecZookeeperTemplateClientServicePtrType KafkaSpecZookeeperTemplateClientServiceArgs

func KafkaSpecZookeeperTemplateClientServicePtr(v *KafkaSpecZookeeperTemplateClientServiceArgs) KafkaSpecZookeeperTemplateClientServicePtrInput {
	return (*kafkaSpecZookeeperTemplateClientServicePtrType)(v)
}

func (*kafkaSpecZookeeperTemplateClientServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateClientService)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateClientServicePtrType) ToKafkaSpecZookeeperTemplateClientServicePtrOutput() KafkaSpecZookeeperTemplateClientServicePtrOutput {
	return i.ToKafkaSpecZookeeperTemplateClientServicePtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateClientServicePtrType) ToKafkaSpecZookeeperTemplateClientServicePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateClientServicePtrOutput)
}

// Template for ZooKeeper client `Service`.
type KafkaSpecZookeeperTemplateClientServiceOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateClientServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateClientService)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateClientServiceOutput) ToKafkaSpecZookeeperTemplateClientServiceOutput() KafkaSpecZookeeperTemplateClientServiceOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateClientServiceOutput) ToKafkaSpecZookeeperTemplateClientServiceOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServiceOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateClientServiceOutput) ToKafkaSpecZookeeperTemplateClientServicePtrOutput() KafkaSpecZookeeperTemplateClientServicePtrOutput {
	return o.ToKafkaSpecZookeeperTemplateClientServicePtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateClientServiceOutput) ToKafkaSpecZookeeperTemplateClientServicePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateClientService) *KafkaSpecZookeeperTemplateClientService {
		return &v
	}).(KafkaSpecZookeeperTemplateClientServicePtrOutput)
}

// Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
func (o KafkaSpecZookeeperTemplateClientServiceOutput) IpFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateClientService) []string { return v.IpFamilies }).(pulumi.StringArrayOutput)
}

// Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
func (o KafkaSpecZookeeperTemplateClientServiceOutput) IpFamilyPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateClientService) *string { return v.IpFamilyPolicy }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateClientServiceOutput) Metadata() KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateClientService) *KafkaSpecZookeeperTemplateClientServiceMetadata {
		return v.Metadata
	}).(KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput)
}

type KafkaSpecZookeeperTemplateClientServicePtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateClientServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateClientService)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateClientServicePtrOutput) ToKafkaSpecZookeeperTemplateClientServicePtrOutput() KafkaSpecZookeeperTemplateClientServicePtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateClientServicePtrOutput) ToKafkaSpecZookeeperTemplateClientServicePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServicePtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateClientServicePtrOutput) Elem() KafkaSpecZookeeperTemplateClientServiceOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateClientService) KafkaSpecZookeeperTemplateClientService {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateClientService
		return ret
	}).(KafkaSpecZookeeperTemplateClientServiceOutput)
}

// Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
func (o KafkaSpecZookeeperTemplateClientServicePtrOutput) IpFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateClientService) []string {
		if v == nil {
			return nil
		}
		return v.IpFamilies
	}).(pulumi.StringArrayOutput)
}

// Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
func (o KafkaSpecZookeeperTemplateClientServicePtrOutput) IpFamilyPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateClientService) *string {
		if v == nil {
			return nil
		}
		return v.IpFamilyPolicy
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateClientServicePtrOutput) Metadata() KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateClientService) *KafkaSpecZookeeperTemplateClientServiceMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateClientServiceMetadata struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaSpecZookeeperTemplateClientServiceMetadataInput is an input type that accepts KafkaSpecZookeeperTemplateClientServiceMetadataArgs and KafkaSpecZookeeperTemplateClientServiceMetadataOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateClientServiceMetadataInput` via:
//
//	KafkaSpecZookeeperTemplateClientServiceMetadataArgs{...}
type KafkaSpecZookeeperTemplateClientServiceMetadataInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateClientServiceMetadataOutput() KafkaSpecZookeeperTemplateClientServiceMetadataOutput
	ToKafkaSpecZookeeperTemplateClientServiceMetadataOutputWithContext(context.Context) KafkaSpecZookeeperTemplateClientServiceMetadataOutput
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateClientServiceMetadataArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaSpecZookeeperTemplateClientServiceMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateClientServiceMetadata)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateClientServiceMetadataArgs) ToKafkaSpecZookeeperTemplateClientServiceMetadataOutput() KafkaSpecZookeeperTemplateClientServiceMetadataOutput {
	return i.ToKafkaSpecZookeeperTemplateClientServiceMetadataOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateClientServiceMetadataArgs) ToKafkaSpecZookeeperTemplateClientServiceMetadataOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServiceMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateClientServiceMetadataOutput)
}

func (i KafkaSpecZookeeperTemplateClientServiceMetadataArgs) ToKafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput() KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateClientServiceMetadataPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateClientServiceMetadataArgs) ToKafkaSpecZookeeperTemplateClientServiceMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateClientServiceMetadataOutput).ToKafkaSpecZookeeperTemplateClientServiceMetadataPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateClientServiceMetadataPtrInput is an input type that accepts KafkaSpecZookeeperTemplateClientServiceMetadataArgs, KafkaSpecZookeeperTemplateClientServiceMetadataPtr and KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateClientServiceMetadataPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateClientServiceMetadataArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateClientServiceMetadataPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput() KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput
	ToKafkaSpecZookeeperTemplateClientServiceMetadataPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput
}

type kafkaSpecZookeeperTemplateClientServiceMetadataPtrType KafkaSpecZookeeperTemplateClientServiceMetadataArgs

func KafkaSpecZookeeperTemplateClientServiceMetadataPtr(v *KafkaSpecZookeeperTemplateClientServiceMetadataArgs) KafkaSpecZookeeperTemplateClientServiceMetadataPtrInput {
	return (*kafkaSpecZookeeperTemplateClientServiceMetadataPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateClientServiceMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateClientServiceMetadata)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateClientServiceMetadataPtrType) ToKafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput() KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateClientServiceMetadataPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateClientServiceMetadataPtrType) ToKafkaSpecZookeeperTemplateClientServiceMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateClientServiceMetadataOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateClientServiceMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateClientServiceMetadata)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateClientServiceMetadataOutput) ToKafkaSpecZookeeperTemplateClientServiceMetadataOutput() KafkaSpecZookeeperTemplateClientServiceMetadataOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateClientServiceMetadataOutput) ToKafkaSpecZookeeperTemplateClientServiceMetadataOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServiceMetadataOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateClientServiceMetadataOutput) ToKafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput() KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateClientServiceMetadataPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateClientServiceMetadataOutput) ToKafkaSpecZookeeperTemplateClientServiceMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateClientServiceMetadata) *KafkaSpecZookeeperTemplateClientServiceMetadata {
		return &v
	}).(KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateClientServiceMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateClientServiceMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateClientServiceMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateClientServiceMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateClientServiceMetadata)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput) ToKafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput() KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput) ToKafkaSpecZookeeperTemplateClientServiceMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput) Elem() KafkaSpecZookeeperTemplateClientServiceMetadataOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateClientServiceMetadata) KafkaSpecZookeeperTemplateClientServiceMetadata {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateClientServiceMetadata
		return ret
	}).(KafkaSpecZookeeperTemplateClientServiceMetadataOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateClientServiceMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateClientServiceMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateClientServiceMetadataPatch struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaSpecZookeeperTemplateClientServiceMetadataPatchInput is an input type that accepts KafkaSpecZookeeperTemplateClientServiceMetadataPatchArgs and KafkaSpecZookeeperTemplateClientServiceMetadataPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateClientServiceMetadataPatchInput` via:
//
//	KafkaSpecZookeeperTemplateClientServiceMetadataPatchArgs{...}
type KafkaSpecZookeeperTemplateClientServiceMetadataPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateClientServiceMetadataPatchOutput() KafkaSpecZookeeperTemplateClientServiceMetadataPatchOutput
	ToKafkaSpecZookeeperTemplateClientServiceMetadataPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplateClientServiceMetadataPatchOutput
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateClientServiceMetadataPatchArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaSpecZookeeperTemplateClientServiceMetadataPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateClientServiceMetadataPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateClientServiceMetadataPatchArgs) ToKafkaSpecZookeeperTemplateClientServiceMetadataPatchOutput() KafkaSpecZookeeperTemplateClientServiceMetadataPatchOutput {
	return i.ToKafkaSpecZookeeperTemplateClientServiceMetadataPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateClientServiceMetadataPatchArgs) ToKafkaSpecZookeeperTemplateClientServiceMetadataPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServiceMetadataPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateClientServiceMetadataPatchOutput)
}

func (i KafkaSpecZookeeperTemplateClientServiceMetadataPatchArgs) ToKafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateClientServiceMetadataPatchArgs) ToKafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateClientServiceMetadataPatchOutput).ToKafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplateClientServiceMetadataPatchArgs, KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtr and KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateClientServiceMetadataPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput
	ToKafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput
}

type kafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrType KafkaSpecZookeeperTemplateClientServiceMetadataPatchArgs

func KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtr(v *KafkaSpecZookeeperTemplateClientServiceMetadataPatchArgs) KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrInput {
	return (*kafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateClientServiceMetadataPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrType) ToKafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrType) ToKafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateClientServiceMetadataPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateClientServiceMetadataPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateClientServiceMetadataPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateClientServiceMetadataPatchOutput) ToKafkaSpecZookeeperTemplateClientServiceMetadataPatchOutput() KafkaSpecZookeeperTemplateClientServiceMetadataPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateClientServiceMetadataPatchOutput) ToKafkaSpecZookeeperTemplateClientServiceMetadataPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServiceMetadataPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateClientServiceMetadataPatchOutput) ToKafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateClientServiceMetadataPatchOutput) ToKafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateClientServiceMetadataPatch) *KafkaSpecZookeeperTemplateClientServiceMetadataPatch {
		return &v
	}).(KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateClientServiceMetadataPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateClientServiceMetadataPatch) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateClientServiceMetadataPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateClientServiceMetadataPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateClientServiceMetadataPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput) ToKafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput) ToKafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput) Elem() KafkaSpecZookeeperTemplateClientServiceMetadataPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateClientServiceMetadataPatch) KafkaSpecZookeeperTemplateClientServiceMetadataPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateClientServiceMetadataPatch
		return ret
	}).(KafkaSpecZookeeperTemplateClientServiceMetadataPatchOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateClientServiceMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateClientServiceMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Template for ZooKeeper client `Service`.
type KafkaSpecZookeeperTemplateClientServicePatch struct {
	// Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
	IpFamilies []string `pulumi:"ipFamilies"`
	// Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
	IpFamilyPolicy *string                                               `pulumi:"ipFamilyPolicy"`
	Metadata       *KafkaSpecZookeeperTemplateClientServiceMetadataPatch `pulumi:"metadata"`
}

// KafkaSpecZookeeperTemplateClientServicePatchInput is an input type that accepts KafkaSpecZookeeperTemplateClientServicePatchArgs and KafkaSpecZookeeperTemplateClientServicePatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateClientServicePatchInput` via:
//
//	KafkaSpecZookeeperTemplateClientServicePatchArgs{...}
type KafkaSpecZookeeperTemplateClientServicePatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateClientServicePatchOutput() KafkaSpecZookeeperTemplateClientServicePatchOutput
	ToKafkaSpecZookeeperTemplateClientServicePatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplateClientServicePatchOutput
}

// Template for ZooKeeper client `Service`.
type KafkaSpecZookeeperTemplateClientServicePatchArgs struct {
	// Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
	IpFamilies pulumi.StringArrayInput `pulumi:"ipFamilies"`
	// Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
	IpFamilyPolicy pulumi.StringPtrInput                                        `pulumi:"ipFamilyPolicy"`
	Metadata       KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrInput `pulumi:"metadata"`
}

func (KafkaSpecZookeeperTemplateClientServicePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateClientServicePatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateClientServicePatchArgs) ToKafkaSpecZookeeperTemplateClientServicePatchOutput() KafkaSpecZookeeperTemplateClientServicePatchOutput {
	return i.ToKafkaSpecZookeeperTemplateClientServicePatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateClientServicePatchArgs) ToKafkaSpecZookeeperTemplateClientServicePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServicePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateClientServicePatchOutput)
}

func (i KafkaSpecZookeeperTemplateClientServicePatchArgs) ToKafkaSpecZookeeperTemplateClientServicePatchPtrOutput() KafkaSpecZookeeperTemplateClientServicePatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateClientServicePatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateClientServicePatchArgs) ToKafkaSpecZookeeperTemplateClientServicePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServicePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateClientServicePatchOutput).ToKafkaSpecZookeeperTemplateClientServicePatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateClientServicePatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplateClientServicePatchArgs, KafkaSpecZookeeperTemplateClientServicePatchPtr and KafkaSpecZookeeperTemplateClientServicePatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateClientServicePatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateClientServicePatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateClientServicePatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateClientServicePatchPtrOutput() KafkaSpecZookeeperTemplateClientServicePatchPtrOutput
	ToKafkaSpecZookeeperTemplateClientServicePatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateClientServicePatchPtrOutput
}

type kafkaSpecZookeeperTemplateClientServicePatchPtrType KafkaSpecZookeeperTemplateClientServicePatchArgs

func KafkaSpecZookeeperTemplateClientServicePatchPtr(v *KafkaSpecZookeeperTemplateClientServicePatchArgs) KafkaSpecZookeeperTemplateClientServicePatchPtrInput {
	return (*kafkaSpecZookeeperTemplateClientServicePatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateClientServicePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateClientServicePatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateClientServicePatchPtrType) ToKafkaSpecZookeeperTemplateClientServicePatchPtrOutput() KafkaSpecZookeeperTemplateClientServicePatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateClientServicePatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateClientServicePatchPtrType) ToKafkaSpecZookeeperTemplateClientServicePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServicePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateClientServicePatchPtrOutput)
}

// Template for ZooKeeper client `Service`.
type KafkaSpecZookeeperTemplateClientServicePatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateClientServicePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateClientServicePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateClientServicePatchOutput) ToKafkaSpecZookeeperTemplateClientServicePatchOutput() KafkaSpecZookeeperTemplateClientServicePatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateClientServicePatchOutput) ToKafkaSpecZookeeperTemplateClientServicePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServicePatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateClientServicePatchOutput) ToKafkaSpecZookeeperTemplateClientServicePatchPtrOutput() KafkaSpecZookeeperTemplateClientServicePatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateClientServicePatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateClientServicePatchOutput) ToKafkaSpecZookeeperTemplateClientServicePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServicePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateClientServicePatch) *KafkaSpecZookeeperTemplateClientServicePatch {
		return &v
	}).(KafkaSpecZookeeperTemplateClientServicePatchPtrOutput)
}

// Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
func (o KafkaSpecZookeeperTemplateClientServicePatchOutput) IpFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateClientServicePatch) []string { return v.IpFamilies }).(pulumi.StringArrayOutput)
}

// Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
func (o KafkaSpecZookeeperTemplateClientServicePatchOutput) IpFamilyPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateClientServicePatch) *string { return v.IpFamilyPolicy }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateClientServicePatchOutput) Metadata() KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateClientServicePatch) *KafkaSpecZookeeperTemplateClientServiceMetadataPatch {
		return v.Metadata
	}).(KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput)
}

type KafkaSpecZookeeperTemplateClientServicePatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateClientServicePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateClientServicePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateClientServicePatchPtrOutput) ToKafkaSpecZookeeperTemplateClientServicePatchPtrOutput() KafkaSpecZookeeperTemplateClientServicePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateClientServicePatchPtrOutput) ToKafkaSpecZookeeperTemplateClientServicePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateClientServicePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateClientServicePatchPtrOutput) Elem() KafkaSpecZookeeperTemplateClientServicePatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateClientServicePatch) KafkaSpecZookeeperTemplateClientServicePatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateClientServicePatch
		return ret
	}).(KafkaSpecZookeeperTemplateClientServicePatchOutput)
}

// Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
func (o KafkaSpecZookeeperTemplateClientServicePatchPtrOutput) IpFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateClientServicePatch) []string {
		if v == nil {
			return nil
		}
		return v.IpFamilies
	}).(pulumi.StringArrayOutput)
}

// Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
func (o KafkaSpecZookeeperTemplateClientServicePatchPtrOutput) IpFamilyPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateClientServicePatch) *string {
		if v == nil {
			return nil
		}
		return v.IpFamilyPolicy
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateClientServicePatchPtrOutput) Metadata() KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateClientServicePatch) *KafkaSpecZookeeperTemplateClientServiceMetadataPatch {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput)
}

// Template for Secret of the Zookeeper Cluster JMX authentication.
type KafkaSpecZookeeperTemplateJmxSecret struct {
	Metadata *KafkaSpecZookeeperTemplateJmxSecretMetadata `pulumi:"metadata"`
}

// KafkaSpecZookeeperTemplateJmxSecretInput is an input type that accepts KafkaSpecZookeeperTemplateJmxSecretArgs and KafkaSpecZookeeperTemplateJmxSecretOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateJmxSecretInput` via:
//
//	KafkaSpecZookeeperTemplateJmxSecretArgs{...}
type KafkaSpecZookeeperTemplateJmxSecretInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateJmxSecretOutput() KafkaSpecZookeeperTemplateJmxSecretOutput
	ToKafkaSpecZookeeperTemplateJmxSecretOutputWithContext(context.Context) KafkaSpecZookeeperTemplateJmxSecretOutput
}

// Template for Secret of the Zookeeper Cluster JMX authentication.
type KafkaSpecZookeeperTemplateJmxSecretArgs struct {
	Metadata KafkaSpecZookeeperTemplateJmxSecretMetadataPtrInput `pulumi:"metadata"`
}

func (KafkaSpecZookeeperTemplateJmxSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateJmxSecret)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateJmxSecretArgs) ToKafkaSpecZookeeperTemplateJmxSecretOutput() KafkaSpecZookeeperTemplateJmxSecretOutput {
	return i.ToKafkaSpecZookeeperTemplateJmxSecretOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateJmxSecretArgs) ToKafkaSpecZookeeperTemplateJmxSecretOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateJmxSecretOutput)
}

func (i KafkaSpecZookeeperTemplateJmxSecretArgs) ToKafkaSpecZookeeperTemplateJmxSecretPtrOutput() KafkaSpecZookeeperTemplateJmxSecretPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateJmxSecretPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateJmxSecretArgs) ToKafkaSpecZookeeperTemplateJmxSecretPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateJmxSecretOutput).ToKafkaSpecZookeeperTemplateJmxSecretPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateJmxSecretPtrInput is an input type that accepts KafkaSpecZookeeperTemplateJmxSecretArgs, KafkaSpecZookeeperTemplateJmxSecretPtr and KafkaSpecZookeeperTemplateJmxSecretPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateJmxSecretPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateJmxSecretArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateJmxSecretPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateJmxSecretPtrOutput() KafkaSpecZookeeperTemplateJmxSecretPtrOutput
	ToKafkaSpecZookeeperTemplateJmxSecretPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateJmxSecretPtrOutput
}

type kafkaSpecZookeeperTemplateJmxSecretPtrType KafkaSpecZookeeperTemplateJmxSecretArgs

func KafkaSpecZookeeperTemplateJmxSecretPtr(v *KafkaSpecZookeeperTemplateJmxSecretArgs) KafkaSpecZookeeperTemplateJmxSecretPtrInput {
	return (*kafkaSpecZookeeperTemplateJmxSecretPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateJmxSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateJmxSecret)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateJmxSecretPtrType) ToKafkaSpecZookeeperTemplateJmxSecretPtrOutput() KafkaSpecZookeeperTemplateJmxSecretPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateJmxSecretPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateJmxSecretPtrType) ToKafkaSpecZookeeperTemplateJmxSecretPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateJmxSecretPtrOutput)
}

// Template for Secret of the Zookeeper Cluster JMX authentication.
type KafkaSpecZookeeperTemplateJmxSecretOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateJmxSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateJmxSecret)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateJmxSecretOutput) ToKafkaSpecZookeeperTemplateJmxSecretOutput() KafkaSpecZookeeperTemplateJmxSecretOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateJmxSecretOutput) ToKafkaSpecZookeeperTemplateJmxSecretOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateJmxSecretOutput) ToKafkaSpecZookeeperTemplateJmxSecretPtrOutput() KafkaSpecZookeeperTemplateJmxSecretPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateJmxSecretPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateJmxSecretOutput) ToKafkaSpecZookeeperTemplateJmxSecretPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateJmxSecret) *KafkaSpecZookeeperTemplateJmxSecret {
		return &v
	}).(KafkaSpecZookeeperTemplateJmxSecretPtrOutput)
}

func (o KafkaSpecZookeeperTemplateJmxSecretOutput) Metadata() KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateJmxSecret) *KafkaSpecZookeeperTemplateJmxSecretMetadata {
		return v.Metadata
	}).(KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput)
}

type KafkaSpecZookeeperTemplateJmxSecretPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateJmxSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateJmxSecret)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateJmxSecretPtrOutput) ToKafkaSpecZookeeperTemplateJmxSecretPtrOutput() KafkaSpecZookeeperTemplateJmxSecretPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateJmxSecretPtrOutput) ToKafkaSpecZookeeperTemplateJmxSecretPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateJmxSecretPtrOutput) Elem() KafkaSpecZookeeperTemplateJmxSecretOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateJmxSecret) KafkaSpecZookeeperTemplateJmxSecret {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateJmxSecret
		return ret
	}).(KafkaSpecZookeeperTemplateJmxSecretOutput)
}

func (o KafkaSpecZookeeperTemplateJmxSecretPtrOutput) Metadata() KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateJmxSecret) *KafkaSpecZookeeperTemplateJmxSecretMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateJmxSecretMetadata struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaSpecZookeeperTemplateJmxSecretMetadataInput is an input type that accepts KafkaSpecZookeeperTemplateJmxSecretMetadataArgs and KafkaSpecZookeeperTemplateJmxSecretMetadataOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateJmxSecretMetadataInput` via:
//
//	KafkaSpecZookeeperTemplateJmxSecretMetadataArgs{...}
type KafkaSpecZookeeperTemplateJmxSecretMetadataInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateJmxSecretMetadataOutput() KafkaSpecZookeeperTemplateJmxSecretMetadataOutput
	ToKafkaSpecZookeeperTemplateJmxSecretMetadataOutputWithContext(context.Context) KafkaSpecZookeeperTemplateJmxSecretMetadataOutput
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateJmxSecretMetadataArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaSpecZookeeperTemplateJmxSecretMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateJmxSecretMetadata)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateJmxSecretMetadataArgs) ToKafkaSpecZookeeperTemplateJmxSecretMetadataOutput() KafkaSpecZookeeperTemplateJmxSecretMetadataOutput {
	return i.ToKafkaSpecZookeeperTemplateJmxSecretMetadataOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateJmxSecretMetadataArgs) ToKafkaSpecZookeeperTemplateJmxSecretMetadataOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateJmxSecretMetadataOutput)
}

func (i KafkaSpecZookeeperTemplateJmxSecretMetadataArgs) ToKafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput() KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateJmxSecretMetadataArgs) ToKafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateJmxSecretMetadataOutput).ToKafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateJmxSecretMetadataPtrInput is an input type that accepts KafkaSpecZookeeperTemplateJmxSecretMetadataArgs, KafkaSpecZookeeperTemplateJmxSecretMetadataPtr and KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateJmxSecretMetadataPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateJmxSecretMetadataArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateJmxSecretMetadataPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput() KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput
	ToKafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput
}

type kafkaSpecZookeeperTemplateJmxSecretMetadataPtrType KafkaSpecZookeeperTemplateJmxSecretMetadataArgs

func KafkaSpecZookeeperTemplateJmxSecretMetadataPtr(v *KafkaSpecZookeeperTemplateJmxSecretMetadataArgs) KafkaSpecZookeeperTemplateJmxSecretMetadataPtrInput {
	return (*kafkaSpecZookeeperTemplateJmxSecretMetadataPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateJmxSecretMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateJmxSecretMetadata)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateJmxSecretMetadataPtrType) ToKafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput() KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateJmxSecretMetadataPtrType) ToKafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateJmxSecretMetadataOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateJmxSecretMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateJmxSecretMetadata)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateJmxSecretMetadataOutput) ToKafkaSpecZookeeperTemplateJmxSecretMetadataOutput() KafkaSpecZookeeperTemplateJmxSecretMetadataOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateJmxSecretMetadataOutput) ToKafkaSpecZookeeperTemplateJmxSecretMetadataOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretMetadataOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateJmxSecretMetadataOutput) ToKafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput() KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateJmxSecretMetadataOutput) ToKafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateJmxSecretMetadata) *KafkaSpecZookeeperTemplateJmxSecretMetadata {
		return &v
	}).(KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateJmxSecretMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateJmxSecretMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateJmxSecretMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateJmxSecretMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateJmxSecretMetadata)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput) ToKafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput() KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput) ToKafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput) Elem() KafkaSpecZookeeperTemplateJmxSecretMetadataOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateJmxSecretMetadata) KafkaSpecZookeeperTemplateJmxSecretMetadata {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateJmxSecretMetadata
		return ret
	}).(KafkaSpecZookeeperTemplateJmxSecretMetadataOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateJmxSecretMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateJmxSecretMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateJmxSecretMetadataPatch struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaSpecZookeeperTemplateJmxSecretMetadataPatchInput is an input type that accepts KafkaSpecZookeeperTemplateJmxSecretMetadataPatchArgs and KafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateJmxSecretMetadataPatchInput` via:
//
//	KafkaSpecZookeeperTemplateJmxSecretMetadataPatchArgs{...}
type KafkaSpecZookeeperTemplateJmxSecretMetadataPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutput() KafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutput
	ToKafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutput
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateJmxSecretMetadataPatchArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaSpecZookeeperTemplateJmxSecretMetadataPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateJmxSecretMetadataPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateJmxSecretMetadataPatchArgs) ToKafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutput() KafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutput {
	return i.ToKafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateJmxSecretMetadataPatchArgs) ToKafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutput)
}

func (i KafkaSpecZookeeperTemplateJmxSecretMetadataPatchArgs) ToKafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateJmxSecretMetadataPatchArgs) ToKafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutput).ToKafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplateJmxSecretMetadataPatchArgs, KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtr and KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateJmxSecretMetadataPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput
	ToKafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput
}

type kafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrType KafkaSpecZookeeperTemplateJmxSecretMetadataPatchArgs

func KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtr(v *KafkaSpecZookeeperTemplateJmxSecretMetadataPatchArgs) KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrInput {
	return (*kafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateJmxSecretMetadataPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrType) ToKafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrType) ToKafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateJmxSecretMetadataPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutput) ToKafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutput() KafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutput) ToKafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutput) ToKafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutput) ToKafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateJmxSecretMetadataPatch) *KafkaSpecZookeeperTemplateJmxSecretMetadataPatch {
		return &v
	}).(KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateJmxSecretMetadataPatch) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateJmxSecretMetadataPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateJmxSecretMetadataPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput) ToKafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput) ToKafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput) Elem() KafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateJmxSecretMetadataPatch) KafkaSpecZookeeperTemplateJmxSecretMetadataPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateJmxSecretMetadataPatch
		return ret
	}).(KafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateJmxSecretMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateJmxSecretMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Template for Secret of the Zookeeper Cluster JMX authentication.
type KafkaSpecZookeeperTemplateJmxSecretPatch struct {
	Metadata *KafkaSpecZookeeperTemplateJmxSecretMetadataPatch `pulumi:"metadata"`
}

// KafkaSpecZookeeperTemplateJmxSecretPatchInput is an input type that accepts KafkaSpecZookeeperTemplateJmxSecretPatchArgs and KafkaSpecZookeeperTemplateJmxSecretPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateJmxSecretPatchInput` via:
//
//	KafkaSpecZookeeperTemplateJmxSecretPatchArgs{...}
type KafkaSpecZookeeperTemplateJmxSecretPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateJmxSecretPatchOutput() KafkaSpecZookeeperTemplateJmxSecretPatchOutput
	ToKafkaSpecZookeeperTemplateJmxSecretPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplateJmxSecretPatchOutput
}

// Template for Secret of the Zookeeper Cluster JMX authentication.
type KafkaSpecZookeeperTemplateJmxSecretPatchArgs struct {
	Metadata KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrInput `pulumi:"metadata"`
}

func (KafkaSpecZookeeperTemplateJmxSecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateJmxSecretPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateJmxSecretPatchArgs) ToKafkaSpecZookeeperTemplateJmxSecretPatchOutput() KafkaSpecZookeeperTemplateJmxSecretPatchOutput {
	return i.ToKafkaSpecZookeeperTemplateJmxSecretPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateJmxSecretPatchArgs) ToKafkaSpecZookeeperTemplateJmxSecretPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateJmxSecretPatchOutput)
}

func (i KafkaSpecZookeeperTemplateJmxSecretPatchArgs) ToKafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput() KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateJmxSecretPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateJmxSecretPatchArgs) ToKafkaSpecZookeeperTemplateJmxSecretPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateJmxSecretPatchOutput).ToKafkaSpecZookeeperTemplateJmxSecretPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateJmxSecretPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplateJmxSecretPatchArgs, KafkaSpecZookeeperTemplateJmxSecretPatchPtr and KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateJmxSecretPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateJmxSecretPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateJmxSecretPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput() KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput
	ToKafkaSpecZookeeperTemplateJmxSecretPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput
}

type kafkaSpecZookeeperTemplateJmxSecretPatchPtrType KafkaSpecZookeeperTemplateJmxSecretPatchArgs

func KafkaSpecZookeeperTemplateJmxSecretPatchPtr(v *KafkaSpecZookeeperTemplateJmxSecretPatchArgs) KafkaSpecZookeeperTemplateJmxSecretPatchPtrInput {
	return (*kafkaSpecZookeeperTemplateJmxSecretPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateJmxSecretPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateJmxSecretPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateJmxSecretPatchPtrType) ToKafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput() KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateJmxSecretPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateJmxSecretPatchPtrType) ToKafkaSpecZookeeperTemplateJmxSecretPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput)
}

// Template for Secret of the Zookeeper Cluster JMX authentication.
type KafkaSpecZookeeperTemplateJmxSecretPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateJmxSecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateJmxSecretPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateJmxSecretPatchOutput) ToKafkaSpecZookeeperTemplateJmxSecretPatchOutput() KafkaSpecZookeeperTemplateJmxSecretPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateJmxSecretPatchOutput) ToKafkaSpecZookeeperTemplateJmxSecretPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateJmxSecretPatchOutput) ToKafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput() KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateJmxSecretPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateJmxSecretPatchOutput) ToKafkaSpecZookeeperTemplateJmxSecretPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateJmxSecretPatch) *KafkaSpecZookeeperTemplateJmxSecretPatch {
		return &v
	}).(KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplateJmxSecretPatchOutput) Metadata() KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateJmxSecretPatch) *KafkaSpecZookeeperTemplateJmxSecretMetadataPatch {
		return v.Metadata
	}).(KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput)
}

type KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateJmxSecretPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput) ToKafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput() KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput) ToKafkaSpecZookeeperTemplateJmxSecretPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput) Elem() KafkaSpecZookeeperTemplateJmxSecretPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateJmxSecretPatch) KafkaSpecZookeeperTemplateJmxSecretPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateJmxSecretPatch
		return ret
	}).(KafkaSpecZookeeperTemplateJmxSecretPatchOutput)
}

func (o KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput) Metadata() KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateJmxSecretPatch) *KafkaSpecZookeeperTemplateJmxSecretMetadataPatch {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput)
}

// Template for ZooKeeper nodes `Service`.
type KafkaSpecZookeeperTemplateNodesService struct {
	// Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
	IpFamilies []string `pulumi:"ipFamilies"`
	// Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
	IpFamilyPolicy *string                                         `pulumi:"ipFamilyPolicy"`
	Metadata       *KafkaSpecZookeeperTemplateNodesServiceMetadata `pulumi:"metadata"`
}

// KafkaSpecZookeeperTemplateNodesServiceInput is an input type that accepts KafkaSpecZookeeperTemplateNodesServiceArgs and KafkaSpecZookeeperTemplateNodesServiceOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateNodesServiceInput` via:
//
//	KafkaSpecZookeeperTemplateNodesServiceArgs{...}
type KafkaSpecZookeeperTemplateNodesServiceInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateNodesServiceOutput() KafkaSpecZookeeperTemplateNodesServiceOutput
	ToKafkaSpecZookeeperTemplateNodesServiceOutputWithContext(context.Context) KafkaSpecZookeeperTemplateNodesServiceOutput
}

// Template for ZooKeeper nodes `Service`.
type KafkaSpecZookeeperTemplateNodesServiceArgs struct {
	// Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
	IpFamilies pulumi.StringArrayInput `pulumi:"ipFamilies"`
	// Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
	IpFamilyPolicy pulumi.StringPtrInput                                  `pulumi:"ipFamilyPolicy"`
	Metadata       KafkaSpecZookeeperTemplateNodesServiceMetadataPtrInput `pulumi:"metadata"`
}

func (KafkaSpecZookeeperTemplateNodesServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateNodesService)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateNodesServiceArgs) ToKafkaSpecZookeeperTemplateNodesServiceOutput() KafkaSpecZookeeperTemplateNodesServiceOutput {
	return i.ToKafkaSpecZookeeperTemplateNodesServiceOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateNodesServiceArgs) ToKafkaSpecZookeeperTemplateNodesServiceOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateNodesServiceOutput)
}

func (i KafkaSpecZookeeperTemplateNodesServiceArgs) ToKafkaSpecZookeeperTemplateNodesServicePtrOutput() KafkaSpecZookeeperTemplateNodesServicePtrOutput {
	return i.ToKafkaSpecZookeeperTemplateNodesServicePtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateNodesServiceArgs) ToKafkaSpecZookeeperTemplateNodesServicePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateNodesServiceOutput).ToKafkaSpecZookeeperTemplateNodesServicePtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateNodesServicePtrInput is an input type that accepts KafkaSpecZookeeperTemplateNodesServiceArgs, KafkaSpecZookeeperTemplateNodesServicePtr and KafkaSpecZookeeperTemplateNodesServicePtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateNodesServicePtrInput` via:
//
//	        KafkaSpecZookeeperTemplateNodesServiceArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateNodesServicePtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateNodesServicePtrOutput() KafkaSpecZookeeperTemplateNodesServicePtrOutput
	ToKafkaSpecZookeeperTemplateNodesServicePtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateNodesServicePtrOutput
}

type kafkaSpecZookeeperTemplateNodesServicePtrType KafkaSpecZookeeperTemplateNodesServiceArgs

func KafkaSpecZookeeperTemplateNodesServicePtr(v *KafkaSpecZookeeperTemplateNodesServiceArgs) KafkaSpecZookeeperTemplateNodesServicePtrInput {
	return (*kafkaSpecZookeeperTemplateNodesServicePtrType)(v)
}

func (*kafkaSpecZookeeperTemplateNodesServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateNodesService)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateNodesServicePtrType) ToKafkaSpecZookeeperTemplateNodesServicePtrOutput() KafkaSpecZookeeperTemplateNodesServicePtrOutput {
	return i.ToKafkaSpecZookeeperTemplateNodesServicePtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateNodesServicePtrType) ToKafkaSpecZookeeperTemplateNodesServicePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateNodesServicePtrOutput)
}

// Template for ZooKeeper nodes `Service`.
type KafkaSpecZookeeperTemplateNodesServiceOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateNodesServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateNodesService)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateNodesServiceOutput) ToKafkaSpecZookeeperTemplateNodesServiceOutput() KafkaSpecZookeeperTemplateNodesServiceOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateNodesServiceOutput) ToKafkaSpecZookeeperTemplateNodesServiceOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServiceOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateNodesServiceOutput) ToKafkaSpecZookeeperTemplateNodesServicePtrOutput() KafkaSpecZookeeperTemplateNodesServicePtrOutput {
	return o.ToKafkaSpecZookeeperTemplateNodesServicePtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateNodesServiceOutput) ToKafkaSpecZookeeperTemplateNodesServicePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateNodesService) *KafkaSpecZookeeperTemplateNodesService {
		return &v
	}).(KafkaSpecZookeeperTemplateNodesServicePtrOutput)
}

// Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
func (o KafkaSpecZookeeperTemplateNodesServiceOutput) IpFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateNodesService) []string { return v.IpFamilies }).(pulumi.StringArrayOutput)
}

// Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
func (o KafkaSpecZookeeperTemplateNodesServiceOutput) IpFamilyPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateNodesService) *string { return v.IpFamilyPolicy }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateNodesServiceOutput) Metadata() KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateNodesService) *KafkaSpecZookeeperTemplateNodesServiceMetadata {
		return v.Metadata
	}).(KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput)
}

type KafkaSpecZookeeperTemplateNodesServicePtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateNodesServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateNodesService)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateNodesServicePtrOutput) ToKafkaSpecZookeeperTemplateNodesServicePtrOutput() KafkaSpecZookeeperTemplateNodesServicePtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateNodesServicePtrOutput) ToKafkaSpecZookeeperTemplateNodesServicePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServicePtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateNodesServicePtrOutput) Elem() KafkaSpecZookeeperTemplateNodesServiceOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateNodesService) KafkaSpecZookeeperTemplateNodesService {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateNodesService
		return ret
	}).(KafkaSpecZookeeperTemplateNodesServiceOutput)
}

// Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
func (o KafkaSpecZookeeperTemplateNodesServicePtrOutput) IpFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateNodesService) []string {
		if v == nil {
			return nil
		}
		return v.IpFamilies
	}).(pulumi.StringArrayOutput)
}

// Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
func (o KafkaSpecZookeeperTemplateNodesServicePtrOutput) IpFamilyPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateNodesService) *string {
		if v == nil {
			return nil
		}
		return v.IpFamilyPolicy
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateNodesServicePtrOutput) Metadata() KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateNodesService) *KafkaSpecZookeeperTemplateNodesServiceMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateNodesServiceMetadata struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaSpecZookeeperTemplateNodesServiceMetadataInput is an input type that accepts KafkaSpecZookeeperTemplateNodesServiceMetadataArgs and KafkaSpecZookeeperTemplateNodesServiceMetadataOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateNodesServiceMetadataInput` via:
//
//	KafkaSpecZookeeperTemplateNodesServiceMetadataArgs{...}
type KafkaSpecZookeeperTemplateNodesServiceMetadataInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateNodesServiceMetadataOutput() KafkaSpecZookeeperTemplateNodesServiceMetadataOutput
	ToKafkaSpecZookeeperTemplateNodesServiceMetadataOutputWithContext(context.Context) KafkaSpecZookeeperTemplateNodesServiceMetadataOutput
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateNodesServiceMetadataArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaSpecZookeeperTemplateNodesServiceMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateNodesServiceMetadata)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateNodesServiceMetadataArgs) ToKafkaSpecZookeeperTemplateNodesServiceMetadataOutput() KafkaSpecZookeeperTemplateNodesServiceMetadataOutput {
	return i.ToKafkaSpecZookeeperTemplateNodesServiceMetadataOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateNodesServiceMetadataArgs) ToKafkaSpecZookeeperTemplateNodesServiceMetadataOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServiceMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateNodesServiceMetadataOutput)
}

func (i KafkaSpecZookeeperTemplateNodesServiceMetadataArgs) ToKafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput() KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateNodesServiceMetadataArgs) ToKafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateNodesServiceMetadataOutput).ToKafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateNodesServiceMetadataPtrInput is an input type that accepts KafkaSpecZookeeperTemplateNodesServiceMetadataArgs, KafkaSpecZookeeperTemplateNodesServiceMetadataPtr and KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateNodesServiceMetadataPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateNodesServiceMetadataArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateNodesServiceMetadataPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput() KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput
	ToKafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput
}

type kafkaSpecZookeeperTemplateNodesServiceMetadataPtrType KafkaSpecZookeeperTemplateNodesServiceMetadataArgs

func KafkaSpecZookeeperTemplateNodesServiceMetadataPtr(v *KafkaSpecZookeeperTemplateNodesServiceMetadataArgs) KafkaSpecZookeeperTemplateNodesServiceMetadataPtrInput {
	return (*kafkaSpecZookeeperTemplateNodesServiceMetadataPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateNodesServiceMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateNodesServiceMetadata)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateNodesServiceMetadataPtrType) ToKafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput() KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateNodesServiceMetadataPtrType) ToKafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateNodesServiceMetadataOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateNodesServiceMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateNodesServiceMetadata)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateNodesServiceMetadataOutput) ToKafkaSpecZookeeperTemplateNodesServiceMetadataOutput() KafkaSpecZookeeperTemplateNodesServiceMetadataOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateNodesServiceMetadataOutput) ToKafkaSpecZookeeperTemplateNodesServiceMetadataOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServiceMetadataOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateNodesServiceMetadataOutput) ToKafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput() KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateNodesServiceMetadataOutput) ToKafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateNodesServiceMetadata) *KafkaSpecZookeeperTemplateNodesServiceMetadata {
		return &v
	}).(KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateNodesServiceMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateNodesServiceMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateNodesServiceMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateNodesServiceMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateNodesServiceMetadata)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput) ToKafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput() KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput) ToKafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput) Elem() KafkaSpecZookeeperTemplateNodesServiceMetadataOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateNodesServiceMetadata) KafkaSpecZookeeperTemplateNodesServiceMetadata {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateNodesServiceMetadata
		return ret
	}).(KafkaSpecZookeeperTemplateNodesServiceMetadataOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateNodesServiceMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateNodesServiceMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateNodesServiceMetadataPatch struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaSpecZookeeperTemplateNodesServiceMetadataPatchInput is an input type that accepts KafkaSpecZookeeperTemplateNodesServiceMetadataPatchArgs and KafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateNodesServiceMetadataPatchInput` via:
//
//	KafkaSpecZookeeperTemplateNodesServiceMetadataPatchArgs{...}
type KafkaSpecZookeeperTemplateNodesServiceMetadataPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutput() KafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutput
	ToKafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutput
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateNodesServiceMetadataPatchArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaSpecZookeeperTemplateNodesServiceMetadataPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateNodesServiceMetadataPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateNodesServiceMetadataPatchArgs) ToKafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutput() KafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutput {
	return i.ToKafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateNodesServiceMetadataPatchArgs) ToKafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutput)
}

func (i KafkaSpecZookeeperTemplateNodesServiceMetadataPatchArgs) ToKafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateNodesServiceMetadataPatchArgs) ToKafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutput).ToKafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplateNodesServiceMetadataPatchArgs, KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtr and KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateNodesServiceMetadataPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput
	ToKafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput
}

type kafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrType KafkaSpecZookeeperTemplateNodesServiceMetadataPatchArgs

func KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtr(v *KafkaSpecZookeeperTemplateNodesServiceMetadataPatchArgs) KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrInput {
	return (*kafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateNodesServiceMetadataPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrType) ToKafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrType) ToKafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateNodesServiceMetadataPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutput) ToKafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutput() KafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutput) ToKafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutput) ToKafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutput) ToKafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateNodesServiceMetadataPatch) *KafkaSpecZookeeperTemplateNodesServiceMetadataPatch {
		return &v
	}).(KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateNodesServiceMetadataPatch) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateNodesServiceMetadataPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateNodesServiceMetadataPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput) ToKafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput) ToKafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput) Elem() KafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateNodesServiceMetadataPatch) KafkaSpecZookeeperTemplateNodesServiceMetadataPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateNodesServiceMetadataPatch
		return ret
	}).(KafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateNodesServiceMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateNodesServiceMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Template for ZooKeeper nodes `Service`.
type KafkaSpecZookeeperTemplateNodesServicePatch struct {
	// Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
	IpFamilies []string `pulumi:"ipFamilies"`
	// Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
	IpFamilyPolicy *string                                              `pulumi:"ipFamilyPolicy"`
	Metadata       *KafkaSpecZookeeperTemplateNodesServiceMetadataPatch `pulumi:"metadata"`
}

// KafkaSpecZookeeperTemplateNodesServicePatchInput is an input type that accepts KafkaSpecZookeeperTemplateNodesServicePatchArgs and KafkaSpecZookeeperTemplateNodesServicePatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateNodesServicePatchInput` via:
//
//	KafkaSpecZookeeperTemplateNodesServicePatchArgs{...}
type KafkaSpecZookeeperTemplateNodesServicePatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateNodesServicePatchOutput() KafkaSpecZookeeperTemplateNodesServicePatchOutput
	ToKafkaSpecZookeeperTemplateNodesServicePatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplateNodesServicePatchOutput
}

// Template for ZooKeeper nodes `Service`.
type KafkaSpecZookeeperTemplateNodesServicePatchArgs struct {
	// Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
	IpFamilies pulumi.StringArrayInput `pulumi:"ipFamilies"`
	// Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
	IpFamilyPolicy pulumi.StringPtrInput                                       `pulumi:"ipFamilyPolicy"`
	Metadata       KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrInput `pulumi:"metadata"`
}

func (KafkaSpecZookeeperTemplateNodesServicePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateNodesServicePatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateNodesServicePatchArgs) ToKafkaSpecZookeeperTemplateNodesServicePatchOutput() KafkaSpecZookeeperTemplateNodesServicePatchOutput {
	return i.ToKafkaSpecZookeeperTemplateNodesServicePatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateNodesServicePatchArgs) ToKafkaSpecZookeeperTemplateNodesServicePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServicePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateNodesServicePatchOutput)
}

func (i KafkaSpecZookeeperTemplateNodesServicePatchArgs) ToKafkaSpecZookeeperTemplateNodesServicePatchPtrOutput() KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateNodesServicePatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateNodesServicePatchArgs) ToKafkaSpecZookeeperTemplateNodesServicePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateNodesServicePatchOutput).ToKafkaSpecZookeeperTemplateNodesServicePatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateNodesServicePatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplateNodesServicePatchArgs, KafkaSpecZookeeperTemplateNodesServicePatchPtr and KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateNodesServicePatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateNodesServicePatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateNodesServicePatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateNodesServicePatchPtrOutput() KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput
	ToKafkaSpecZookeeperTemplateNodesServicePatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput
}

type kafkaSpecZookeeperTemplateNodesServicePatchPtrType KafkaSpecZookeeperTemplateNodesServicePatchArgs

func KafkaSpecZookeeperTemplateNodesServicePatchPtr(v *KafkaSpecZookeeperTemplateNodesServicePatchArgs) KafkaSpecZookeeperTemplateNodesServicePatchPtrInput {
	return (*kafkaSpecZookeeperTemplateNodesServicePatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateNodesServicePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateNodesServicePatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateNodesServicePatchPtrType) ToKafkaSpecZookeeperTemplateNodesServicePatchPtrOutput() KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateNodesServicePatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateNodesServicePatchPtrType) ToKafkaSpecZookeeperTemplateNodesServicePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput)
}

// Template for ZooKeeper nodes `Service`.
type KafkaSpecZookeeperTemplateNodesServicePatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateNodesServicePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateNodesServicePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateNodesServicePatchOutput) ToKafkaSpecZookeeperTemplateNodesServicePatchOutput() KafkaSpecZookeeperTemplateNodesServicePatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateNodesServicePatchOutput) ToKafkaSpecZookeeperTemplateNodesServicePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServicePatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateNodesServicePatchOutput) ToKafkaSpecZookeeperTemplateNodesServicePatchPtrOutput() KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateNodesServicePatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateNodesServicePatchOutput) ToKafkaSpecZookeeperTemplateNodesServicePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateNodesServicePatch) *KafkaSpecZookeeperTemplateNodesServicePatch {
		return &v
	}).(KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput)
}

// Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
func (o KafkaSpecZookeeperTemplateNodesServicePatchOutput) IpFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateNodesServicePatch) []string { return v.IpFamilies }).(pulumi.StringArrayOutput)
}

// Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
func (o KafkaSpecZookeeperTemplateNodesServicePatchOutput) IpFamilyPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateNodesServicePatch) *string { return v.IpFamilyPolicy }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateNodesServicePatchOutput) Metadata() KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateNodesServicePatch) *KafkaSpecZookeeperTemplateNodesServiceMetadataPatch {
		return v.Metadata
	}).(KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput)
}

type KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateNodesServicePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput) ToKafkaSpecZookeeperTemplateNodesServicePatchPtrOutput() KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput) ToKafkaSpecZookeeperTemplateNodesServicePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput) Elem() KafkaSpecZookeeperTemplateNodesServicePatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateNodesServicePatch) KafkaSpecZookeeperTemplateNodesServicePatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateNodesServicePatch
		return ret
	}).(KafkaSpecZookeeperTemplateNodesServicePatchOutput)
}

// Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6`. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting.
func (o KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput) IpFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateNodesServicePatch) []string {
		if v == nil {
			return nil
		}
		return v.IpFamilies
	}).(pulumi.StringArrayOutput)
}

// Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type.
func (o KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput) IpFamilyPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateNodesServicePatch) *string {
		if v == nil {
			return nil
		}
		return v.IpFamilyPolicy
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput) Metadata() KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateNodesServicePatch) *KafkaSpecZookeeperTemplateNodesServiceMetadataPatch {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput)
}

// Template for ZooKeeper cluster resources. The template allows users to specify how the Kubernetes resources are generated.
type KafkaSpecZookeeperTemplatePatch struct {
	ClientService         *KafkaSpecZookeeperTemplateClientServicePatch         `pulumi:"clientService"`
	JmxSecret             *KafkaSpecZookeeperTemplateJmxSecretPatch             `pulumi:"jmxSecret"`
	NodesService          *KafkaSpecZookeeperTemplateNodesServicePatch          `pulumi:"nodesService"`
	PersistentVolumeClaim *KafkaSpecZookeeperTemplatePersistentVolumeClaimPatch `pulumi:"persistentVolumeClaim"`
	Pod                   *KafkaSpecZookeeperTemplatePodPatch                   `pulumi:"pod"`
	PodDisruptionBudget   *KafkaSpecZookeeperTemplatePodDisruptionBudgetPatch   `pulumi:"podDisruptionBudget"`
	PodSet                *KafkaSpecZookeeperTemplatePodSetPatch                `pulumi:"podSet"`
	ServiceAccount        *KafkaSpecZookeeperTemplateServiceAccountPatch        `pulumi:"serviceAccount"`
	Statefulset           *KafkaSpecZookeeperTemplateStatefulsetPatch           `pulumi:"statefulset"`
	ZookeeperContainer    *KafkaSpecZookeeperTemplateZookeeperContainerPatch    `pulumi:"zookeeperContainer"`
}

// KafkaSpecZookeeperTemplatePatchInput is an input type that accepts KafkaSpecZookeeperTemplatePatchArgs and KafkaSpecZookeeperTemplatePatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePatchInput` via:
//
//	KafkaSpecZookeeperTemplatePatchArgs{...}
type KafkaSpecZookeeperTemplatePatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePatchOutput() KafkaSpecZookeeperTemplatePatchOutput
	ToKafkaSpecZookeeperTemplatePatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePatchOutput
}

// Template for ZooKeeper cluster resources. The template allows users to specify how the Kubernetes resources are generated.
type KafkaSpecZookeeperTemplatePatchArgs struct {
	ClientService         KafkaSpecZookeeperTemplateClientServicePatchPtrInput         `pulumi:"clientService"`
	JmxSecret             KafkaSpecZookeeperTemplateJmxSecretPatchPtrInput             `pulumi:"jmxSecret"`
	NodesService          KafkaSpecZookeeperTemplateNodesServicePatchPtrInput          `pulumi:"nodesService"`
	PersistentVolumeClaim KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrInput `pulumi:"persistentVolumeClaim"`
	Pod                   KafkaSpecZookeeperTemplatePodPatchPtrInput                   `pulumi:"pod"`
	PodDisruptionBudget   KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrInput   `pulumi:"podDisruptionBudget"`
	PodSet                KafkaSpecZookeeperTemplatePodSetPatchPtrInput                `pulumi:"podSet"`
	ServiceAccount        KafkaSpecZookeeperTemplateServiceAccountPatchPtrInput        `pulumi:"serviceAccount"`
	Statefulset           KafkaSpecZookeeperTemplateStatefulsetPatchPtrInput           `pulumi:"statefulset"`
	ZookeeperContainer    KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrInput    `pulumi:"zookeeperContainer"`
}

func (KafkaSpecZookeeperTemplatePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePatchArgs) ToKafkaSpecZookeeperTemplatePatchOutput() KafkaSpecZookeeperTemplatePatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePatchArgs) ToKafkaSpecZookeeperTemplatePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePatchOutput)
}

func (i KafkaSpecZookeeperTemplatePatchArgs) ToKafkaSpecZookeeperTemplatePatchPtrOutput() KafkaSpecZookeeperTemplatePatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePatchArgs) ToKafkaSpecZookeeperTemplatePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePatchOutput).ToKafkaSpecZookeeperTemplatePatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePatchArgs, KafkaSpecZookeeperTemplatePatchPtr and KafkaSpecZookeeperTemplatePatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePatchPtrOutput() KafkaSpecZookeeperTemplatePatchPtrOutput
	ToKafkaSpecZookeeperTemplatePatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePatchPtrOutput
}

type kafkaSpecZookeeperTemplatePatchPtrType KafkaSpecZookeeperTemplatePatchArgs

func KafkaSpecZookeeperTemplatePatchPtr(v *KafkaSpecZookeeperTemplatePatchArgs) KafkaSpecZookeeperTemplatePatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePatchPtrType) ToKafkaSpecZookeeperTemplatePatchPtrOutput() KafkaSpecZookeeperTemplatePatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePatchPtrType) ToKafkaSpecZookeeperTemplatePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePatchPtrOutput)
}

// Template for ZooKeeper cluster resources. The template allows users to specify how the Kubernetes resources are generated.
type KafkaSpecZookeeperTemplatePatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePatchOutput) ToKafkaSpecZookeeperTemplatePatchOutput() KafkaSpecZookeeperTemplatePatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePatchOutput) ToKafkaSpecZookeeperTemplatePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePatchOutput) ToKafkaSpecZookeeperTemplatePatchPtrOutput() KafkaSpecZookeeperTemplatePatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePatchOutput) ToKafkaSpecZookeeperTemplatePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePatch) *KafkaSpecZookeeperTemplatePatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePatchOutput) ClientService() KafkaSpecZookeeperTemplateClientServicePatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePatch) *KafkaSpecZookeeperTemplateClientServicePatch {
		return v.ClientService
	}).(KafkaSpecZookeeperTemplateClientServicePatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePatchOutput) JmxSecret() KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePatch) *KafkaSpecZookeeperTemplateJmxSecretPatch { return v.JmxSecret }).(KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePatchOutput) NodesService() KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePatch) *KafkaSpecZookeeperTemplateNodesServicePatch {
		return v.NodesService
	}).(KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePatchOutput) PersistentVolumeClaim() KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePatch) *KafkaSpecZookeeperTemplatePersistentVolumeClaimPatch {
		return v.PersistentVolumeClaim
	}).(KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePatchOutput) Pod() KafkaSpecZookeeperTemplatePodPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePatch) *KafkaSpecZookeeperTemplatePodPatch { return v.Pod }).(KafkaSpecZookeeperTemplatePodPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePatchOutput) PodDisruptionBudget() KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePatch) *KafkaSpecZookeeperTemplatePodDisruptionBudgetPatch {
		return v.PodDisruptionBudget
	}).(KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePatchOutput) PodSet() KafkaSpecZookeeperTemplatePodSetPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePatch) *KafkaSpecZookeeperTemplatePodSetPatch { return v.PodSet }).(KafkaSpecZookeeperTemplatePodSetPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePatchOutput) ServiceAccount() KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePatch) *KafkaSpecZookeeperTemplateServiceAccountPatch {
		return v.ServiceAccount
	}).(KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePatchOutput) Statefulset() KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePatch) *KafkaSpecZookeeperTemplateStatefulsetPatch {
		return v.Statefulset
	}).(KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePatchOutput) ZookeeperContainer() KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePatch) *KafkaSpecZookeeperTemplateZookeeperContainerPatch {
		return v.ZookeeperContainer
	}).(KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePatchPtrOutput) ToKafkaSpecZookeeperTemplatePatchPtrOutput() KafkaSpecZookeeperTemplatePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePatchPtrOutput) ToKafkaSpecZookeeperTemplatePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePatch) KafkaSpecZookeeperTemplatePatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePatch
		return ret
	}).(KafkaSpecZookeeperTemplatePatchOutput)
}

func (o KafkaSpecZookeeperTemplatePatchPtrOutput) ClientService() KafkaSpecZookeeperTemplateClientServicePatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePatch) *KafkaSpecZookeeperTemplateClientServicePatch {
		if v == nil {
			return nil
		}
		return v.ClientService
	}).(KafkaSpecZookeeperTemplateClientServicePatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePatchPtrOutput) JmxSecret() KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePatch) *KafkaSpecZookeeperTemplateJmxSecretPatch {
		if v == nil {
			return nil
		}
		return v.JmxSecret
	}).(KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePatchPtrOutput) NodesService() KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePatch) *KafkaSpecZookeeperTemplateNodesServicePatch {
		if v == nil {
			return nil
		}
		return v.NodesService
	}).(KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePatchPtrOutput) PersistentVolumeClaim() KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePatch) *KafkaSpecZookeeperTemplatePersistentVolumeClaimPatch {
		if v == nil {
			return nil
		}
		return v.PersistentVolumeClaim
	}).(KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePatchPtrOutput) Pod() KafkaSpecZookeeperTemplatePodPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePatch) *KafkaSpecZookeeperTemplatePodPatch {
		if v == nil {
			return nil
		}
		return v.Pod
	}).(KafkaSpecZookeeperTemplatePodPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePatchPtrOutput) PodDisruptionBudget() KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePatch) *KafkaSpecZookeeperTemplatePodDisruptionBudgetPatch {
		if v == nil {
			return nil
		}
		return v.PodDisruptionBudget
	}).(KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePatchPtrOutput) PodSet() KafkaSpecZookeeperTemplatePodSetPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePatch) *KafkaSpecZookeeperTemplatePodSetPatch {
		if v == nil {
			return nil
		}
		return v.PodSet
	}).(KafkaSpecZookeeperTemplatePodSetPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePatchPtrOutput) ServiceAccount() KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePatch) *KafkaSpecZookeeperTemplateServiceAccountPatch {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePatchPtrOutput) Statefulset() KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePatch) *KafkaSpecZookeeperTemplateStatefulsetPatch {
		if v == nil {
			return nil
		}
		return v.Statefulset
	}).(KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePatchPtrOutput) ZookeeperContainer() KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePatch) *KafkaSpecZookeeperTemplateZookeeperContainerPatch {
		if v == nil {
			return nil
		}
		return v.ZookeeperContainer
	}).(KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput)
}

// Template for all ZooKeeper `PersistentVolumeClaims`.
type KafkaSpecZookeeperTemplatePersistentVolumeClaim struct {
	Metadata *KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadata `pulumi:"metadata"`
}

// KafkaSpecZookeeperTemplatePersistentVolumeClaimInput is an input type that accepts KafkaSpecZookeeperTemplatePersistentVolumeClaimArgs and KafkaSpecZookeeperTemplatePersistentVolumeClaimOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePersistentVolumeClaimInput` via:
//
//	KafkaSpecZookeeperTemplatePersistentVolumeClaimArgs{...}
type KafkaSpecZookeeperTemplatePersistentVolumeClaimInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePersistentVolumeClaimOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimOutput
	ToKafkaSpecZookeeperTemplatePersistentVolumeClaimOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimOutput
}

// Template for all ZooKeeper `PersistentVolumeClaims`.
type KafkaSpecZookeeperTemplatePersistentVolumeClaimArgs struct {
	Metadata KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrInput `pulumi:"metadata"`
}

func (KafkaSpecZookeeperTemplatePersistentVolumeClaimArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePersistentVolumeClaim)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePersistentVolumeClaimArgs) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimOutput {
	return i.ToKafkaSpecZookeeperTemplatePersistentVolumeClaimOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePersistentVolumeClaimArgs) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePersistentVolumeClaimOutput)
}

func (i KafkaSpecZookeeperTemplatePersistentVolumeClaimArgs) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePersistentVolumeClaimArgs) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePersistentVolumeClaimOutput).ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePersistentVolumeClaimArgs, KafkaSpecZookeeperTemplatePersistentVolumeClaimPtr and KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePersistentVolumeClaimArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput
	ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput
}

type kafkaSpecZookeeperTemplatePersistentVolumeClaimPtrType KafkaSpecZookeeperTemplatePersistentVolumeClaimArgs

func KafkaSpecZookeeperTemplatePersistentVolumeClaimPtr(v *KafkaSpecZookeeperTemplatePersistentVolumeClaimArgs) KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrInput {
	return (*kafkaSpecZookeeperTemplatePersistentVolumeClaimPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePersistentVolumeClaimPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePersistentVolumeClaim)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePersistentVolumeClaimPtrType) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePersistentVolumeClaimPtrType) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput)
}

// Template for all ZooKeeper `PersistentVolumeClaims`.
type KafkaSpecZookeeperTemplatePersistentVolumeClaimOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePersistentVolumeClaimOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePersistentVolumeClaim)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePersistentVolumeClaim) *KafkaSpecZookeeperTemplatePersistentVolumeClaim {
		return &v
	}).(KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimOutput) Metadata() KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePersistentVolumeClaim) *KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadata {
		return v.Metadata
	}).(KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput)
}

type KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePersistentVolumeClaim)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput) Elem() KafkaSpecZookeeperTemplatePersistentVolumeClaimOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePersistentVolumeClaim) KafkaSpecZookeeperTemplatePersistentVolumeClaim {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePersistentVolumeClaim
		return ret
	}).(KafkaSpecZookeeperTemplatePersistentVolumeClaimOutput)
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput) Metadata() KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePersistentVolumeClaim) *KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadata struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataInput is an input type that accepts KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataArgs and KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataInput` via:
//
//	KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataArgs{...}
type KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutput
	ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutput
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadata)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataArgs) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutput {
	return i.ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataArgs) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutput)
}

func (i KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataArgs) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataArgs) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutput).ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataArgs, KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtr and KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput
	ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput
}

type kafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrType KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataArgs

func KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtr(v *KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataArgs) KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrInput {
	return (*kafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadata)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrType) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrType) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadata)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadata) *KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadata {
		return &v
	}).(KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadata) map[string]string {
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadata)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput) Elem() KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadata) KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadata {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadata
		return ret
	}).(KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatch struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchArgs and KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchArgs{...}
type KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutput
	ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutput
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchArgs) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchArgs) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchArgs) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchArgs) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutput).ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchArgs, KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtr and KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrType KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchArgs

func KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtr(v *KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchArgs) KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrType) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrType) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatch) *KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatch) map[string]string {
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatch) map[string]string {
		return v.Labels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatch) KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Template for all ZooKeeper `PersistentVolumeClaims`.
type KafkaSpecZookeeperTemplatePersistentVolumeClaimPatch struct {
	Metadata *KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatch `pulumi:"metadata"`
}

// KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchArgs and KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchArgs{...}
type KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutput
	ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutput
}

// Template for all ZooKeeper `PersistentVolumeClaims`.
type KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchArgs struct {
	Metadata KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrInput `pulumi:"metadata"`
}

func (KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePersistentVolumeClaimPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchArgs) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchArgs) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchArgs) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchArgs) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutput).ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchArgs, KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtr and KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrType KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchArgs

func KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtr(v *KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchArgs) KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePersistentVolumeClaimPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrType) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrType) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput)
}

// Template for all ZooKeeper `PersistentVolumeClaims`.
type KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePersistentVolumeClaimPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePersistentVolumeClaimPatch) *KafkaSpecZookeeperTemplatePersistentVolumeClaimPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutput) Metadata() KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePersistentVolumeClaimPatch) *KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatch {
		return v.Metadata
	}).(KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePersistentVolumeClaimPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput() KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput) ToKafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePersistentVolumeClaimPatch) KafkaSpecZookeeperTemplatePersistentVolumeClaimPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePersistentVolumeClaimPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput) Metadata() KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePersistentVolumeClaimPatch) *KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatch {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput)
}

// Template for ZooKeeper `Pods`.
type KafkaSpecZookeeperTemplatePod struct {
	Affinity  *KafkaSpecZookeeperTemplatePodAffinity  `pulumi:"affinity"`
	DnsConfig *KafkaSpecZookeeperTemplatePodDnsConfig `pulumi:"dnsConfig"`
	// The pod's DNSPolicy. Defaults to `ClusterFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default` or `None`.
	DnsPolicy *string `pulumi:"dnsPolicy"`
	// Indicates whether information about services should be injected into Pod's environment variables.
	EnableServiceLinks *bool `pulumi:"enableServiceLinks"`
	// The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
	HostAliases []KafkaSpecZookeeperTemplatePodHostAliases `pulumi:"hostAliases"`
	// List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
	ImagePullSecrets []KafkaSpecZookeeperTemplatePodImagePullSecrets `pulumi:"imagePullSecrets"`
	Metadata         *KafkaSpecZookeeperTemplatePodMetadata          `pulumi:"metadata"`
	// The name of the priority class used to assign priority to the pods.
	PriorityClassName *string `pulumi:"priorityClassName"`
	// The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
	SchedulerName   *string                                       `pulumi:"schedulerName"`
	SecurityContext *KafkaSpecZookeeperTemplatePodSecurityContext `pulumi:"securityContext"`
	// The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
	TerminationGracePeriodSeconds *int `pulumi:"terminationGracePeriodSeconds"`
	// Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.
	TmpDirSizeLimit *string `pulumi:"tmpDirSizeLimit"`
	// The pod's tolerations.
	Tolerations []KafkaSpecZookeeperTemplatePodTolerations `pulumi:"tolerations"`
	// The pod's topology spread constraints.
	TopologySpreadConstraints []KafkaSpecZookeeperTemplatePodTopologySpreadConstraints `pulumi:"topologySpreadConstraints"`
	// Additional volumes that can be mounted to the pod.
	Volumes []KafkaSpecZookeeperTemplatePodVolumes `pulumi:"volumes"`
}

// KafkaSpecZookeeperTemplatePodInput is an input type that accepts KafkaSpecZookeeperTemplatePodArgs and KafkaSpecZookeeperTemplatePodOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodInput` via:
//
//	KafkaSpecZookeeperTemplatePodArgs{...}
type KafkaSpecZookeeperTemplatePodInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodOutput() KafkaSpecZookeeperTemplatePodOutput
	ToKafkaSpecZookeeperTemplatePodOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodOutput
}

// Template for ZooKeeper `Pods`.
type KafkaSpecZookeeperTemplatePodArgs struct {
	Affinity  KafkaSpecZookeeperTemplatePodAffinityPtrInput  `pulumi:"affinity"`
	DnsConfig KafkaSpecZookeeperTemplatePodDnsConfigPtrInput `pulumi:"dnsConfig"`
	// The pod's DNSPolicy. Defaults to `ClusterFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default` or `None`.
	DnsPolicy pulumi.StringPtrInput `pulumi:"dnsPolicy"`
	// Indicates whether information about services should be injected into Pod's environment variables.
	EnableServiceLinks pulumi.BoolPtrInput `pulumi:"enableServiceLinks"`
	// The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
	HostAliases KafkaSpecZookeeperTemplatePodHostAliasesArrayInput `pulumi:"hostAliases"`
	// List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
	ImagePullSecrets KafkaSpecZookeeperTemplatePodImagePullSecretsArrayInput `pulumi:"imagePullSecrets"`
	Metadata         KafkaSpecZookeeperTemplatePodMetadataPtrInput           `pulumi:"metadata"`
	// The name of the priority class used to assign priority to the pods.
	PriorityClassName pulumi.StringPtrInput `pulumi:"priorityClassName"`
	// The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
	SchedulerName   pulumi.StringPtrInput                                `pulumi:"schedulerName"`
	SecurityContext KafkaSpecZookeeperTemplatePodSecurityContextPtrInput `pulumi:"securityContext"`
	// The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
	TerminationGracePeriodSeconds pulumi.IntPtrInput `pulumi:"terminationGracePeriodSeconds"`
	// Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.
	TmpDirSizeLimit pulumi.StringPtrInput `pulumi:"tmpDirSizeLimit"`
	// The pod's tolerations.
	Tolerations KafkaSpecZookeeperTemplatePodTolerationsArrayInput `pulumi:"tolerations"`
	// The pod's topology spread constraints.
	TopologySpreadConstraints KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayInput `pulumi:"topologySpreadConstraints"`
	// Additional volumes that can be mounted to the pod.
	Volumes KafkaSpecZookeeperTemplatePodVolumesArrayInput `pulumi:"volumes"`
}

func (KafkaSpecZookeeperTemplatePodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePod)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodArgs) ToKafkaSpecZookeeperTemplatePodOutput() KafkaSpecZookeeperTemplatePodOutput {
	return i.ToKafkaSpecZookeeperTemplatePodOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodArgs) ToKafkaSpecZookeeperTemplatePodOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodOutput)
}

func (i KafkaSpecZookeeperTemplatePodArgs) ToKafkaSpecZookeeperTemplatePodPtrOutput() KafkaSpecZookeeperTemplatePodPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodArgs) ToKafkaSpecZookeeperTemplatePodPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodOutput).ToKafkaSpecZookeeperTemplatePodPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodArgs, KafkaSpecZookeeperTemplatePodPtr and KafkaSpecZookeeperTemplatePodPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodPtrOutput() KafkaSpecZookeeperTemplatePodPtrOutput
	ToKafkaSpecZookeeperTemplatePodPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodPtrOutput
}

type kafkaSpecZookeeperTemplatePodPtrType KafkaSpecZookeeperTemplatePodArgs

func KafkaSpecZookeeperTemplatePodPtr(v *KafkaSpecZookeeperTemplatePodArgs) KafkaSpecZookeeperTemplatePodPtrInput {
	return (*kafkaSpecZookeeperTemplatePodPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePod)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodPtrType) ToKafkaSpecZookeeperTemplatePodPtrOutput() KafkaSpecZookeeperTemplatePodPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodPtrType) ToKafkaSpecZookeeperTemplatePodPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodPtrOutput)
}

// Template for ZooKeeper `Pods`.
type KafkaSpecZookeeperTemplatePodOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePod)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodOutput) ToKafkaSpecZookeeperTemplatePodOutput() KafkaSpecZookeeperTemplatePodOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodOutput) ToKafkaSpecZookeeperTemplatePodOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodOutput) ToKafkaSpecZookeeperTemplatePodPtrOutput() KafkaSpecZookeeperTemplatePodPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodOutput) ToKafkaSpecZookeeperTemplatePodPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePod) *KafkaSpecZookeeperTemplatePod {
		return &v
	}).(KafkaSpecZookeeperTemplatePodPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodOutput) Affinity() KafkaSpecZookeeperTemplatePodAffinityPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePod) *KafkaSpecZookeeperTemplatePodAffinity { return v.Affinity }).(KafkaSpecZookeeperTemplatePodAffinityPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodOutput) DnsConfig() KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePod) *KafkaSpecZookeeperTemplatePodDnsConfig { return v.DnsConfig }).(KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput)
}

// The pod's DNSPolicy. Defaults to `ClusterFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default` or `None`.
func (o KafkaSpecZookeeperTemplatePodOutput) DnsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePod) *string { return v.DnsPolicy }).(pulumi.StringPtrOutput)
}

// Indicates whether information about services should be injected into Pod's environment variables.
func (o KafkaSpecZookeeperTemplatePodOutput) EnableServiceLinks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePod) *bool { return v.EnableServiceLinks }).(pulumi.BoolPtrOutput)
}

// The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
func (o KafkaSpecZookeeperTemplatePodOutput) HostAliases() KafkaSpecZookeeperTemplatePodHostAliasesArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePod) []KafkaSpecZookeeperTemplatePodHostAliases { return v.HostAliases }).(KafkaSpecZookeeperTemplatePodHostAliasesArrayOutput)
}

// List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
func (o KafkaSpecZookeeperTemplatePodOutput) ImagePullSecrets() KafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePod) []KafkaSpecZookeeperTemplatePodImagePullSecrets {
		return v.ImagePullSecrets
	}).(KafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodOutput) Metadata() KafkaSpecZookeeperTemplatePodMetadataPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePod) *KafkaSpecZookeeperTemplatePodMetadata { return v.Metadata }).(KafkaSpecZookeeperTemplatePodMetadataPtrOutput)
}

// The name of the priority class used to assign priority to the pods.
func (o KafkaSpecZookeeperTemplatePodOutput) PriorityClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePod) *string { return v.PriorityClassName }).(pulumi.StringPtrOutput)
}

// The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
func (o KafkaSpecZookeeperTemplatePodOutput) SchedulerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePod) *string { return v.SchedulerName }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodOutput) SecurityContext() KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePod) *KafkaSpecZookeeperTemplatePodSecurityContext {
		return v.SecurityContext
	}).(KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput)
}

// The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
func (o KafkaSpecZookeeperTemplatePodOutput) TerminationGracePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePod) *int { return v.TerminationGracePeriodSeconds }).(pulumi.IntPtrOutput)
}

// Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.
func (o KafkaSpecZookeeperTemplatePodOutput) TmpDirSizeLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePod) *string { return v.TmpDirSizeLimit }).(pulumi.StringPtrOutput)
}

// The pod's tolerations.
func (o KafkaSpecZookeeperTemplatePodOutput) Tolerations() KafkaSpecZookeeperTemplatePodTolerationsArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePod) []KafkaSpecZookeeperTemplatePodTolerations { return v.Tolerations }).(KafkaSpecZookeeperTemplatePodTolerationsArrayOutput)
}

// The pod's topology spread constraints.
func (o KafkaSpecZookeeperTemplatePodOutput) TopologySpreadConstraints() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePod) []KafkaSpecZookeeperTemplatePodTopologySpreadConstraints {
		return v.TopologySpreadConstraints
	}).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutput)
}

// Additional volumes that can be mounted to the pod.
func (o KafkaSpecZookeeperTemplatePodOutput) Volumes() KafkaSpecZookeeperTemplatePodVolumesArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePod) []KafkaSpecZookeeperTemplatePodVolumes { return v.Volumes }).(KafkaSpecZookeeperTemplatePodVolumesArrayOutput)
}

type KafkaSpecZookeeperTemplatePodPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePod)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodPtrOutput) ToKafkaSpecZookeeperTemplatePodPtrOutput() KafkaSpecZookeeperTemplatePodPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodPtrOutput) ToKafkaSpecZookeeperTemplatePodPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodPtrOutput) Elem() KafkaSpecZookeeperTemplatePodOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePod) KafkaSpecZookeeperTemplatePod {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePod
		return ret
	}).(KafkaSpecZookeeperTemplatePodOutput)
}

func (o KafkaSpecZookeeperTemplatePodPtrOutput) Affinity() KafkaSpecZookeeperTemplatePodAffinityPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePod) *KafkaSpecZookeeperTemplatePodAffinity {
		if v == nil {
			return nil
		}
		return v.Affinity
	}).(KafkaSpecZookeeperTemplatePodAffinityPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodPtrOutput) DnsConfig() KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePod) *KafkaSpecZookeeperTemplatePodDnsConfig {
		if v == nil {
			return nil
		}
		return v.DnsConfig
	}).(KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput)
}

// The pod's DNSPolicy. Defaults to `ClusterFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default` or `None`.
func (o KafkaSpecZookeeperTemplatePodPtrOutput) DnsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePod) *string {
		if v == nil {
			return nil
		}
		return v.DnsPolicy
	}).(pulumi.StringPtrOutput)
}

// Indicates whether information about services should be injected into Pod's environment variables.
func (o KafkaSpecZookeeperTemplatePodPtrOutput) EnableServiceLinks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePod) *bool {
		if v == nil {
			return nil
		}
		return v.EnableServiceLinks
	}).(pulumi.BoolPtrOutput)
}

// The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
func (o KafkaSpecZookeeperTemplatePodPtrOutput) HostAliases() KafkaSpecZookeeperTemplatePodHostAliasesArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePod) []KafkaSpecZookeeperTemplatePodHostAliases {
		if v == nil {
			return nil
		}
		return v.HostAliases
	}).(KafkaSpecZookeeperTemplatePodHostAliasesArrayOutput)
}

// List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
func (o KafkaSpecZookeeperTemplatePodPtrOutput) ImagePullSecrets() KafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePod) []KafkaSpecZookeeperTemplatePodImagePullSecrets {
		if v == nil {
			return nil
		}
		return v.ImagePullSecrets
	}).(KafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodPtrOutput) Metadata() KafkaSpecZookeeperTemplatePodMetadataPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePod) *KafkaSpecZookeeperTemplatePodMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaSpecZookeeperTemplatePodMetadataPtrOutput)
}

// The name of the priority class used to assign priority to the pods.
func (o KafkaSpecZookeeperTemplatePodPtrOutput) PriorityClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePod) *string {
		if v == nil {
			return nil
		}
		return v.PriorityClassName
	}).(pulumi.StringPtrOutput)
}

// The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
func (o KafkaSpecZookeeperTemplatePodPtrOutput) SchedulerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePod) *string {
		if v == nil {
			return nil
		}
		return v.SchedulerName
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodPtrOutput) SecurityContext() KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePod) *KafkaSpecZookeeperTemplatePodSecurityContext {
		if v == nil {
			return nil
		}
		return v.SecurityContext
	}).(KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput)
}

// The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
func (o KafkaSpecZookeeperTemplatePodPtrOutput) TerminationGracePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePod) *int {
		if v == nil {
			return nil
		}
		return v.TerminationGracePeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.
func (o KafkaSpecZookeeperTemplatePodPtrOutput) TmpDirSizeLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePod) *string {
		if v == nil {
			return nil
		}
		return v.TmpDirSizeLimit
	}).(pulumi.StringPtrOutput)
}

// The pod's tolerations.
func (o KafkaSpecZookeeperTemplatePodPtrOutput) Tolerations() KafkaSpecZookeeperTemplatePodTolerationsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePod) []KafkaSpecZookeeperTemplatePodTolerations {
		if v == nil {
			return nil
		}
		return v.Tolerations
	}).(KafkaSpecZookeeperTemplatePodTolerationsArrayOutput)
}

// The pod's topology spread constraints.
func (o KafkaSpecZookeeperTemplatePodPtrOutput) TopologySpreadConstraints() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePod) []KafkaSpecZookeeperTemplatePodTopologySpreadConstraints {
		if v == nil {
			return nil
		}
		return v.TopologySpreadConstraints
	}).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutput)
}

// Additional volumes that can be mounted to the pod.
func (o KafkaSpecZookeeperTemplatePodPtrOutput) Volumes() KafkaSpecZookeeperTemplatePodVolumesArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePod) []KafkaSpecZookeeperTemplatePodVolumes {
		if v == nil {
			return nil
		}
		return v.Volumes
	}).(KafkaSpecZookeeperTemplatePodVolumesArrayOutput)
}

// The pod's affinity rules.
type KafkaSpecZookeeperTemplatePodAffinity struct {
	NodeAffinity    *KafkaSpecZookeeperTemplatePodAffinityNodeAffinity    `pulumi:"nodeAffinity"`
	PodAffinity     *KafkaSpecZookeeperTemplatePodAffinityPodAffinity     `pulumi:"podAffinity"`
	PodAntiAffinity *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinity `pulumi:"podAntiAffinity"`
}

// KafkaSpecZookeeperTemplatePodAffinityInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityArgs and KafkaSpecZookeeperTemplatePodAffinityOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityOutput() KafkaSpecZookeeperTemplatePodAffinityOutput
	ToKafkaSpecZookeeperTemplatePodAffinityOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityOutput
}

// The pod's affinity rules.
type KafkaSpecZookeeperTemplatePodAffinityArgs struct {
	NodeAffinity    KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrInput    `pulumi:"nodeAffinity"`
	PodAffinity     KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrInput     `pulumi:"podAffinity"`
	PodAntiAffinity KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrInput `pulumi:"podAntiAffinity"`
}

func (KafkaSpecZookeeperTemplatePodAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinity)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityArgs) ToKafkaSpecZookeeperTemplatePodAffinityOutput() KafkaSpecZookeeperTemplatePodAffinityOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityArgs) ToKafkaSpecZookeeperTemplatePodAffinityOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityArgs) ToKafkaSpecZookeeperTemplatePodAffinityPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityArgs) ToKafkaSpecZookeeperTemplatePodAffinityPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityOutput).ToKafkaSpecZookeeperTemplatePodAffinityPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityArgs, KafkaSpecZookeeperTemplatePodAffinityPtr and KafkaSpecZookeeperTemplatePodAffinityPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPtrType KafkaSpecZookeeperTemplatePodAffinityArgs

func KafkaSpecZookeeperTemplatePodAffinityPtr(v *KafkaSpecZookeeperTemplatePodAffinityArgs) KafkaSpecZookeeperTemplatePodAffinityPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinity)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPtrOutput)
}

// The pod's affinity rules.
type KafkaSpecZookeeperTemplatePodAffinityOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinity)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityOutput) ToKafkaSpecZookeeperTemplatePodAffinityOutput() KafkaSpecZookeeperTemplatePodAffinityOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityOutput) ToKafkaSpecZookeeperTemplatePodAffinityOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityOutput) ToKafkaSpecZookeeperTemplatePodAffinityPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityOutput) ToKafkaSpecZookeeperTemplatePodAffinityPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinity) *KafkaSpecZookeeperTemplatePodAffinity {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityOutput) NodeAffinity() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinity) *KafkaSpecZookeeperTemplatePodAffinityNodeAffinity {
		return v.NodeAffinity
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityOutput) PodAffinity() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinity) *KafkaSpecZookeeperTemplatePodAffinityPodAffinity {
		return v.PodAffinity
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityOutput) PodAntiAffinity() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinity) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinity {
		return v.PodAntiAffinity
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinity)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinity) KafkaSpecZookeeperTemplatePodAffinity {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinity
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPtrOutput) NodeAffinity() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinity) *KafkaSpecZookeeperTemplatePodAffinityNodeAffinity {
		if v == nil {
			return nil
		}
		return v.NodeAffinity
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPtrOutput) PodAffinity() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinity) *KafkaSpecZookeeperTemplatePodAffinityPodAffinity {
		if v == nil {
			return nil
		}
		return v.PodAffinity
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPtrOutput) PodAntiAffinity() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinity) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinity {
		if v == nil {
			return nil
		}
		return v.PodAntiAffinity
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinity struct {
	PreferredDuringSchedulingIgnoredDuringExecution []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	RequiredDuringSchedulingIgnoredDuringExecution  *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution   `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityArgs and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityArgs struct {
	PreferredDuringSchedulingIgnoredDuringExecution KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	RequiredDuringSchedulingIgnoredDuringExecution  KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput    `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinity)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutput).ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityArgs, KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtr and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityNodeAffinityArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrType KafkaSpecZookeeperTemplatePodAffinityNodeAffinityArgs

func KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtr(v *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityArgs) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityNodeAffinity)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrType) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrType) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinity)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityNodeAffinity) *KafkaSpecZookeeperTemplatePodAffinityNodeAffinity {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinity) []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinity) *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityNodeAffinity)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityNodeAffinity) KafkaSpecZookeeperTemplatePodAffinityNodeAffinity {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityNodeAffinity
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityNodeAffinity) []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityNodeAffinity) *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatch struct {
	PreferredDuringSchedulingIgnoredDuringExecution []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	RequiredDuringSchedulingIgnoredDuringExecution  *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch   `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchArgs and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchArgs struct {
	PreferredDuringSchedulingIgnoredDuringExecution KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	RequiredDuringSchedulingIgnoredDuringExecution  KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrInput    `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutput).ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchArgs, KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtr and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrType KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchArgs

func KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtr(v *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchArgs) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatch) *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutput) PreferredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatch) []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutput) RequiredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatch) *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatch) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatch) []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatch) *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	Preference *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference `pulumi:"preference"`
	Weight     *int                                                                                                        `pulumi:"weight"`
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	Preference KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrInput `pulumi:"preference"`
	Weight     pulumi.IntPtrInput                                                                                                 `pulumi:"weight"`
}

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Preference() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution) *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
		return v.Preference
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution) *int {
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch struct {
	Preference *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch `pulumi:"preference"`
	Weight     *int                                                                                                             `pulumi:"weight"`
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs struct {
	Preference KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrInput `pulumi:"preference"`
	Weight     pulumi.IntPtrInput                                                                                                      `pulumi:"weight"`
}

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray{ KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) Preference() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch) *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch {
		return v.Preference
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch) *int {
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference struct {
	MatchExpressions []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions `pulumi:"matchExpressions"`
	MatchFields      []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields      `pulumi:"matchFields"`
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs struct {
	MatchExpressions KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	MatchFields      KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput      `pulumi:"matchFields"`
}

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput).ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs, KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtr and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrType KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs

func KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtr(v *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrType) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrType) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) MatchFields() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
		return v.MatchFields
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput) MatchFields() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
		if v == nil {
			return nil
		}
		return v.MatchFields
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray{ KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArgs and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArray and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArray{ KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArray []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchInput

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray{ KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArgs and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArray and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArray{ KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArray []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchInput

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch struct {
	MatchExpressions []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch `pulumi:"matchExpressions"`
	MatchFields      []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch      `pulumi:"matchFields"`
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs struct {
	MatchExpressions KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	MatchFields      KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayInput      `pulumi:"matchFields"`
}

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput).ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs, KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtr and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrType KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs

func KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtr(v *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch) *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch) []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch {
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput) MatchFields() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch) []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch {
		return v.MatchFields
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch) []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput) MatchFields() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatch) []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatch {
		if v == nil {
			return nil
		}
		return v.MatchFields
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	NodeSelectorTerms []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms `pulumi:"nodeSelectorTerms"`
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	NodeSelectorTerms KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput `pulumi:"nodeSelectorTerms"`
}

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput).ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs, KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtr and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs

func KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtr(v *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) NodeSelectorTerms() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		return v.NodeSelectorTerms
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) NodeSelectorTerms() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		if v == nil {
			return nil
		}
		return v.NodeSelectorTerms
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms struct {
	MatchExpressions []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions `pulumi:"matchExpressions"`
	MatchFields      []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields      `pulumi:"matchFields"`
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs struct {
	MatchExpressions KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	MatchFields      KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput      `pulumi:"matchFields"`
}

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray{ KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms) []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) MatchFields() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms) []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
		return v.MatchFields
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray{ KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArgs and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArray and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArray{ KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArray []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchInput

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray{ KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArgs and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArray and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArray{ KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArray []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchInput

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch struct {
	MatchExpressions []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch `pulumi:"matchExpressions"`
	MatchFields      []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch      `pulumi:"matchFields"`
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArgs and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArgs struct {
	MatchExpressions KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	MatchFields      KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayInput      `pulumi:"matchFields"`
}

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArray and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArray{ KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArray []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchInput

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch) []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatch {
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput) MatchFields() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch) []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatch {
		return v.MatchFields
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch struct {
	NodeSelectorTerms []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch `pulumi:"nodeSelectorTerms"`
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs struct {
	NodeSelectorTerms KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayInput `pulumi:"nodeSelectorTerms"`
}

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput).ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs, KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtr and KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrType KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs

func KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtr(v *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) NodeSelectorTerms() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch {
		return v.NodeSelectorTerms
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput) NodeSelectorTerms() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) []KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatch {
		if v == nil {
			return nil
		}
		return v.NodeSelectorTerms
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput)
}

// The pod's affinity rules.
type KafkaSpecZookeeperTemplatePodAffinityPatch struct {
	NodeAffinity    *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatch    `pulumi:"nodeAffinity"`
	PodAffinity     *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatch     `pulumi:"podAffinity"`
	PodAntiAffinity *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatch `pulumi:"podAntiAffinity"`
}

// KafkaSpecZookeeperTemplatePodAffinityPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPatchOutput
}

// The pod's affinity rules.
type KafkaSpecZookeeperTemplatePodAffinityPatchArgs struct {
	NodeAffinity    KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrInput    `pulumi:"nodeAffinity"`
	PodAffinity     KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrInput     `pulumi:"podAffinity"`
	PodAntiAffinity KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrInput `pulumi:"podAntiAffinity"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPatchOutput).ToKafkaSpecZookeeperTemplatePodAffinityPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPatchArgs, KafkaSpecZookeeperTemplatePodAffinityPatchPtr and KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPatchPtrType KafkaSpecZookeeperTemplatePodAffinityPatchArgs

func KafkaSpecZookeeperTemplatePodAffinityPatchPtr(v *KafkaSpecZookeeperTemplatePodAffinityPatchArgs) KafkaSpecZookeeperTemplatePodAffinityPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput)
}

// The pod's affinity rules.
type KafkaSpecZookeeperTemplatePodAffinityPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPatch) *KafkaSpecZookeeperTemplatePodAffinityPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPatchOutput) NodeAffinity() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPatch) *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatch {
		return v.NodeAffinity
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPatchOutput) PodAffinity() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatch {
		return v.PodAffinity
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPatchOutput) PodAntiAffinity() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatch {
		return v.PodAntiAffinity
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPatch) KafkaSpecZookeeperTemplatePodAffinityPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput) NodeAffinity() KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPatch) *KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatch {
		if v == nil {
			return nil
		}
		return v.NodeAffinity
	}).(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput) PodAffinity() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatch {
		if v == nil {
			return nil
		}
		return v.PodAffinity
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput) PodAntiAffinity() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatch {
		if v == nil {
			return nil
		}
		return v.PodAntiAffinity
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinity struct {
	PreferredDuringSchedulingIgnoredDuringExecution []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	RequiredDuringSchedulingIgnoredDuringExecution  []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution  `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityArgs struct {
	PreferredDuringSchedulingIgnoredDuringExecution KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	RequiredDuringSchedulingIgnoredDuringExecution  KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput  `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinity)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityArgs, KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtr and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAffinityArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrType KafkaSpecZookeeperTemplatePodAffinityPodAffinityArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityArgs) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinity)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinity)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAffinity) *KafkaSpecZookeeperTemplatePodAffinityPodAffinity {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinity) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinity) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinity)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAffinityOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinity) KafkaSpecZookeeperTemplatePodAffinityPodAffinity {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAffinity
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinity) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinity) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatch struct {
	PreferredDuringSchedulingIgnoredDuringExecution []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	RequiredDuringSchedulingIgnoredDuringExecution  []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch  `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchArgs struct {
	PreferredDuringSchedulingIgnoredDuringExecution KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	RequiredDuringSchedulingIgnoredDuringExecution  KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayInput  `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchArgs, KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtr and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrType KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchArgs) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutput) PreferredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutput) RequiredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatch) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	PodAffinityTerm *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `pulumi:"podAffinityTerm"`
	Weight          *int                                                                                                            `pulumi:"weight"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	PodAffinityTerm KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput `pulumi:"podAffinityTerm"`
	Weight          pulumi.IntPtrInput                                                                                                     `pulumi:"weight"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) PodAffinityTerm() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		return v.PodAffinityTerm
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution) *int {
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch struct {
	PodAffinityTerm *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch `pulumi:"podAffinityTerm"`
	Weight          *int                                                                                                                 `pulumi:"weight"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs struct {
	PodAffinityTerm KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput `pulumi:"podAffinityTerm"`
	Weight          pulumi.IntPtrInput                                                                                                          `pulumi:"weight"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray{ KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) PodAffinityTerm() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch {
		return v.PodAffinityTerm
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch) *int {
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	LabelSelector     *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector     `pulumi:"labelSelector"`
	MatchLabelKeys    []string                                                                                                                         `pulumi:"matchLabelKeys"`
	MismatchLabelKeys []string                                                                                                                         `pulumi:"mismatchLabelKeys"`
	NamespaceSelector *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector `pulumi:"namespaceSelector"`
	Namespaces        []string                                                                                                                         `pulumi:"namespaces"`
	TopologyKey       *string                                                                                                                          `pulumi:"topologyKey"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs struct {
	LabelSelector     KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput     `pulumi:"labelSelector"`
	MatchLabelKeys    pulumi.StringArrayInput                                                                                                                 `pulumi:"matchLabelKeys"`
	MismatchLabelKeys pulumi.StringArrayInput                                                                                                                 `pulumi:"mismatchLabelKeys"`
	NamespaceSelector KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput `pulumi:"namespaceSelector"`
	Namespaces        pulumi.StringArrayInput                                                                                                                 `pulumi:"namespaces"`
	TopologyKey       pulumi.StringPtrInput                                                                                                                   `pulumi:"topologyKey"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs, KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtr and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrType KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) LabelSelector() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return v.LabelSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) NamespaceSelector() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
		return v.NamespaceSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *string {
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) LabelSelector() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		if v == nil {
			return nil
		}
		return v.LabelSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		if v == nil {
			return nil
		}
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		if v == nil {
			return nil
		}
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) NamespaceSelector() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
		if v == nil {
			return nil
		}
		return v.NamespaceSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		if v == nil {
			return nil
		}
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *string {
		if v == nil {
			return nil
		}
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	MatchExpressions []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                                                                                                                             `pulumi:"matchLabels"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs struct {
	MatchExpressions KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                                                                                                                                 `pulumi:"matchLabels"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs, KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{ KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray{ KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch struct {
	MatchExpressions []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                                                                                                                                  `pulumi:"matchLabels"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs struct {
	MatchExpressions KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                                                                                                                                      `pulumi:"matchLabels"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs, KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtr and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrType KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector struct {
	MatchExpressions []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                                                                                                                                 `pulumi:"matchLabels"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs struct {
	MatchExpressions KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                                                                                                                                     `pulumi:"matchLabels"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs, KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtr and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray{ KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray{ KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch struct {
	MatchExpressions []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                                                                                                                                      `pulumi:"matchLabels"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs struct {
	MatchExpressions KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                                                                                                                                          `pulumi:"matchLabels"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs, KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtr and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrType KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch struct {
	LabelSelector     *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch     `pulumi:"labelSelector"`
	MatchLabelKeys    []string                                                                                                                              `pulumi:"matchLabelKeys"`
	MismatchLabelKeys []string                                                                                                                              `pulumi:"mismatchLabelKeys"`
	NamespaceSelector *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch `pulumi:"namespaceSelector"`
	Namespaces        []string                                                                                                                              `pulumi:"namespaces"`
	TopologyKey       *string                                                                                                                               `pulumi:"topologyKey"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs struct {
	LabelSelector     KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput     `pulumi:"labelSelector"`
	MatchLabelKeys    pulumi.StringArrayInput                                                                                                                      `pulumi:"matchLabelKeys"`
	MismatchLabelKeys pulumi.StringArrayInput                                                                                                                      `pulumi:"mismatchLabelKeys"`
	NamespaceSelector KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput `pulumi:"namespaceSelector"`
	Namespaces        pulumi.StringArrayInput                                                                                                                      `pulumi:"namespaces"`
	TopologyKey       pulumi.StringPtrInput                                                                                                                        `pulumi:"topologyKey"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs, KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtr and KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrType KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) LabelSelector() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch {
		return v.LabelSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) NamespaceSelector() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch {
		return v.NamespaceSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *string {
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) LabelSelector() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch {
		if v == nil {
			return nil
		}
		return v.LabelSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		if v == nil {
			return nil
		}
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		if v == nil {
			return nil
		}
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) NamespaceSelector() KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch {
		if v == nil {
			return nil
		}
		return v.NamespaceSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		if v == nil {
			return nil
		}
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *string {
		if v == nil {
			return nil
		}
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	LabelSelector     *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector     `pulumi:"labelSelector"`
	MatchLabelKeys    []string                                                                                                         `pulumi:"matchLabelKeys"`
	MismatchLabelKeys []string                                                                                                         `pulumi:"mismatchLabelKeys"`
	NamespaceSelector *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector `pulumi:"namespaceSelector"`
	Namespaces        []string                                                                                                         `pulumi:"namespaces"`
	TopologyKey       *string                                                                                                          `pulumi:"topologyKey"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	LabelSelector     KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput     `pulumi:"labelSelector"`
	MatchLabelKeys    pulumi.StringArrayInput                                                                                                 `pulumi:"matchLabelKeys"`
	MismatchLabelKeys pulumi.StringArrayInput                                                                                                 `pulumi:"mismatchLabelKeys"`
	NamespaceSelector KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput `pulumi:"namespaceSelector"`
	Namespaces        pulumi.StringArrayInput                                                                                                 `pulumi:"namespaces"`
	TopologyKey       pulumi.StringPtrInput                                                                                                   `pulumi:"topologyKey"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray and KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{ KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) LabelSelector() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return v.LabelSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) NamespaceSelector() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
		return v.NamespaceSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) *string {
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	MatchExpressions []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                                                                                                             `pulumi:"matchLabels"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs struct {
	MatchExpressions KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                                                                                                                 `pulumi:"matchLabels"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs, KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr and KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray and KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{ KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray and KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray{ KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch struct {
	MatchExpressions []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                                                                                                                  `pulumi:"matchLabels"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs struct {
	MatchExpressions KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                                                                                                                      `pulumi:"matchLabels"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs, KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtr and KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrType KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector struct {
	MatchExpressions []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                                                                                                                 `pulumi:"matchLabels"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs struct {
	MatchExpressions KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                                                                                                                     `pulumi:"matchLabels"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs, KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtr and KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray and KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray{ KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray and KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray{ KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch struct {
	MatchExpressions []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                                                                                                                      `pulumi:"matchLabels"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs struct {
	MatchExpressions KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                                                                                                                          `pulumi:"matchLabels"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs, KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtr and KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrType KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch struct {
	LabelSelector     *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch     `pulumi:"labelSelector"`
	MatchLabelKeys    []string                                                                                                              `pulumi:"matchLabelKeys"`
	MismatchLabelKeys []string                                                                                                              `pulumi:"mismatchLabelKeys"`
	NamespaceSelector *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch `pulumi:"namespaceSelector"`
	Namespaces        []string                                                                                                              `pulumi:"namespaces"`
	TopologyKey       *string                                                                                                               `pulumi:"topologyKey"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs struct {
	LabelSelector     KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput     `pulumi:"labelSelector"`
	MatchLabelKeys    pulumi.StringArrayInput                                                                                                      `pulumi:"matchLabelKeys"`
	MismatchLabelKeys pulumi.StringArrayInput                                                                                                      `pulumi:"mismatchLabelKeys"`
	NamespaceSelector KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput `pulumi:"namespaceSelector"`
	Namespaces        pulumi.StringArrayInput                                                                                                      `pulumi:"namespaces"`
	TopologyKey       pulumi.StringPtrInput                                                                                                        `pulumi:"topologyKey"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray and KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray{ KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray []KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) LabelSelector() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch {
		return v.LabelSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) []string {
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) []string {
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) NamespaceSelector() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch {
		return v.NamespaceSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) *string {
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinity struct {
	PreferredDuringSchedulingIgnoredDuringExecution []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	RequiredDuringSchedulingIgnoredDuringExecution  []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution  `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityArgs struct {
	PreferredDuringSchedulingIgnoredDuringExecution KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	RequiredDuringSchedulingIgnoredDuringExecution  KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput  `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinity)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityArgs, KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtr and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrType KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityArgs) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinity)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinity)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinity) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinity {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinity) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinity) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinity)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinity) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinity {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinity
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinity) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinity) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatch struct {
	PreferredDuringSchedulingIgnoredDuringExecution []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	RequiredDuringSchedulingIgnoredDuringExecution  []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch  `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchArgs struct {
	PreferredDuringSchedulingIgnoredDuringExecution KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	RequiredDuringSchedulingIgnoredDuringExecution  KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayInput  `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchArgs, KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtr and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrType KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchArgs) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutput) PreferredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutput) RequiredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatch) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	PodAffinityTerm *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `pulumi:"podAffinityTerm"`
	Weight          *int                                                                                                                `pulumi:"weight"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	PodAffinityTerm KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput `pulumi:"podAffinityTerm"`
	Weight          pulumi.IntPtrInput                                                                                                         `pulumi:"weight"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) PodAffinityTerm() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		return v.PodAffinityTerm
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution) *int {
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch struct {
	PodAffinityTerm *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch `pulumi:"podAffinityTerm"`
	Weight          *int                                                                                                                     `pulumi:"weight"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs struct {
	PodAffinityTerm KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput `pulumi:"podAffinityTerm"`
	Weight          pulumi.IntPtrInput                                                                                                              `pulumi:"weight"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray{ KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) PodAffinityTerm() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch {
		return v.PodAffinityTerm
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch) *int {
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	LabelSelector     *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector     `pulumi:"labelSelector"`
	MatchLabelKeys    []string                                                                                                                             `pulumi:"matchLabelKeys"`
	MismatchLabelKeys []string                                                                                                                             `pulumi:"mismatchLabelKeys"`
	NamespaceSelector *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector `pulumi:"namespaceSelector"`
	Namespaces        []string                                                                                                                             `pulumi:"namespaces"`
	TopologyKey       *string                                                                                                                              `pulumi:"topologyKey"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs struct {
	LabelSelector     KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput     `pulumi:"labelSelector"`
	MatchLabelKeys    pulumi.StringArrayInput                                                                                                                     `pulumi:"matchLabelKeys"`
	MismatchLabelKeys pulumi.StringArrayInput                                                                                                                     `pulumi:"mismatchLabelKeys"`
	NamespaceSelector KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput `pulumi:"namespaceSelector"`
	Namespaces        pulumi.StringArrayInput                                                                                                                     `pulumi:"namespaces"`
	TopologyKey       pulumi.StringPtrInput                                                                                                                       `pulumi:"topologyKey"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs, KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtr and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrType KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) LabelSelector() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return v.LabelSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) NamespaceSelector() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
		return v.NamespaceSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *string {
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) LabelSelector() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		if v == nil {
			return nil
		}
		return v.LabelSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		if v == nil {
			return nil
		}
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		if v == nil {
			return nil
		}
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) NamespaceSelector() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
		if v == nil {
			return nil
		}
		return v.NamespaceSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		if v == nil {
			return nil
		}
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *string {
		if v == nil {
			return nil
		}
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	MatchExpressions []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                                                                                                                                 `pulumi:"matchLabels"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs struct {
	MatchExpressions KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                                                                                                                                     `pulumi:"matchLabels"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs, KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{ KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray{ KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch struct {
	MatchExpressions []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                                                                                                                                      `pulumi:"matchLabels"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs struct {
	MatchExpressions KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                                                                                                                                          `pulumi:"matchLabels"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs, KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtr and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrType KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector struct {
	MatchExpressions []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                                                                                                                                     `pulumi:"matchLabels"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs struct {
	MatchExpressions KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                                                                                                                                         `pulumi:"matchLabels"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs, KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtr and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray{ KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray{ KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch struct {
	MatchExpressions []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                                                                                                                                          `pulumi:"matchLabels"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs struct {
	MatchExpressions KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                                                                                                                                              `pulumi:"matchLabels"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs, KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtr and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrType KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch struct {
	LabelSelector     *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch     `pulumi:"labelSelector"`
	MatchLabelKeys    []string                                                                                                                                  `pulumi:"matchLabelKeys"`
	MismatchLabelKeys []string                                                                                                                                  `pulumi:"mismatchLabelKeys"`
	NamespaceSelector *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch `pulumi:"namespaceSelector"`
	Namespaces        []string                                                                                                                                  `pulumi:"namespaces"`
	TopologyKey       *string                                                                                                                                   `pulumi:"topologyKey"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs struct {
	LabelSelector     KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput     `pulumi:"labelSelector"`
	MatchLabelKeys    pulumi.StringArrayInput                                                                                                                          `pulumi:"matchLabelKeys"`
	MismatchLabelKeys pulumi.StringArrayInput                                                                                                                          `pulumi:"mismatchLabelKeys"`
	NamespaceSelector KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput `pulumi:"namespaceSelector"`
	Namespaces        pulumi.StringArrayInput                                                                                                                          `pulumi:"namespaces"`
	TopologyKey       pulumi.StringPtrInput                                                                                                                            `pulumi:"topologyKey"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs, KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtr and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrType KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) LabelSelector() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch {
		return v.LabelSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) NamespaceSelector() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch {
		return v.NamespaceSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *string {
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) LabelSelector() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatch {
		if v == nil {
			return nil
		}
		return v.LabelSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		if v == nil {
			return nil
		}
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		if v == nil {
			return nil
		}
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) NamespaceSelector() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatch {
		if v == nil {
			return nil
		}
		return v.NamespaceSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) []string {
		if v == nil {
			return nil
		}
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatch) *string {
		if v == nil {
			return nil
		}
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	LabelSelector     *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector     `pulumi:"labelSelector"`
	MatchLabelKeys    []string                                                                                                             `pulumi:"matchLabelKeys"`
	MismatchLabelKeys []string                                                                                                             `pulumi:"mismatchLabelKeys"`
	NamespaceSelector *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector `pulumi:"namespaceSelector"`
	Namespaces        []string                                                                                                             `pulumi:"namespaces"`
	TopologyKey       *string                                                                                                              `pulumi:"topologyKey"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	LabelSelector     KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput     `pulumi:"labelSelector"`
	MatchLabelKeys    pulumi.StringArrayInput                                                                                                     `pulumi:"matchLabelKeys"`
	MismatchLabelKeys pulumi.StringArrayInput                                                                                                     `pulumi:"mismatchLabelKeys"`
	NamespaceSelector KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput `pulumi:"namespaceSelector"`
	Namespaces        pulumi.StringArrayInput                                                                                                     `pulumi:"namespaces"`
	TopologyKey       pulumi.StringPtrInput                                                                                                       `pulumi:"topologyKey"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{ KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) LabelSelector() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return v.LabelSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) NamespaceSelector() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
		return v.NamespaceSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) *string {
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	MatchExpressions []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                                                                                                                 `pulumi:"matchLabels"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs struct {
	MatchExpressions KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                                                                                                                     `pulumi:"matchLabels"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs, KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{ KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray{ KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch struct {
	MatchExpressions []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                                                                                                                      `pulumi:"matchLabels"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs struct {
	MatchExpressions KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                                                                                                                          `pulumi:"matchLabels"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs, KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtr and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrType KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector struct {
	MatchExpressions []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                                                                                                                     `pulumi:"matchLabels"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs struct {
	MatchExpressions KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                                                                                                                         `pulumi:"matchLabels"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs, KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtr and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray{ KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray{ KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch struct {
	MatchExpressions []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                                                                                                                          `pulumi:"matchLabels"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs struct {
	MatchExpressions KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                                                                                                                              `pulumi:"matchLabels"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput).ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs, KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtr and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrType KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs

func KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtr(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrType) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch struct {
	LabelSelector     *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch     `pulumi:"labelSelector"`
	MatchLabelKeys    []string                                                                                                                  `pulumi:"matchLabelKeys"`
	MismatchLabelKeys []string                                                                                                                  `pulumi:"mismatchLabelKeys"`
	NamespaceSelector *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch `pulumi:"namespaceSelector"`
	Namespaces        []string                                                                                                                  `pulumi:"namespaces"`
	TopologyKey       *string                                                                                                                   `pulumi:"topologyKey"`
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs{...}
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs struct {
	LabelSelector     KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput     `pulumi:"labelSelector"`
	MatchLabelKeys    pulumi.StringArrayInput                                                                                                          `pulumi:"matchLabelKeys"`
	MismatchLabelKeys pulumi.StringArrayInput                                                                                                          `pulumi:"mismatchLabelKeys"`
	NamespaceSelector KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput `pulumi:"namespaceSelector"`
	Namespaces        pulumi.StringArrayInput                                                                                                          `pulumi:"namespaces"`
	TopologyKey       pulumi.StringPtrInput                                                                                                            `pulumi:"topologyKey"`
}

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

// KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray and KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray{ KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray []KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) LabelSelector() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatch {
		return v.LabelSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) []string {
		return v.MatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) MismatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) []string {
		return v.MismatchLabelKeys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) NamespaceSelector() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) *KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatch {
		return v.NamespaceSelector
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch) *string {
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput() KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput)
}

// Template for ZooKeeper `PodDisruptionBudget`.
type KafkaSpecZookeeperTemplatePodDisruptionBudget struct {
	// Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.
	MaxUnavailable *int                                                   `pulumi:"maxUnavailable"`
	Metadata       *KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadata `pulumi:"metadata"`
}

// KafkaSpecZookeeperTemplatePodDisruptionBudgetInput is an input type that accepts KafkaSpecZookeeperTemplatePodDisruptionBudgetArgs and KafkaSpecZookeeperTemplatePodDisruptionBudgetOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodDisruptionBudgetInput` via:
//
//	KafkaSpecZookeeperTemplatePodDisruptionBudgetArgs{...}
type KafkaSpecZookeeperTemplatePodDisruptionBudgetInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodDisruptionBudgetOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetOutput
	ToKafkaSpecZookeeperTemplatePodDisruptionBudgetOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetOutput
}

// Template for ZooKeeper `PodDisruptionBudget`.
type KafkaSpecZookeeperTemplatePodDisruptionBudgetArgs struct {
	// Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.
	MaxUnavailable pulumi.IntPtrInput                                            `pulumi:"maxUnavailable"`
	Metadata       KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrInput `pulumi:"metadata"`
}

func (KafkaSpecZookeeperTemplatePodDisruptionBudgetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDisruptionBudget)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodDisruptionBudgetArgs) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetOutput {
	return i.ToKafkaSpecZookeeperTemplatePodDisruptionBudgetOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodDisruptionBudgetArgs) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodDisruptionBudgetOutput)
}

func (i KafkaSpecZookeeperTemplatePodDisruptionBudgetArgs) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodDisruptionBudgetArgs) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodDisruptionBudgetOutput).ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodDisruptionBudgetArgs, KafkaSpecZookeeperTemplatePodDisruptionBudgetPtr and KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodDisruptionBudgetArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput
	ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput
}

type kafkaSpecZookeeperTemplatePodDisruptionBudgetPtrType KafkaSpecZookeeperTemplatePodDisruptionBudgetArgs

func KafkaSpecZookeeperTemplatePodDisruptionBudgetPtr(v *KafkaSpecZookeeperTemplatePodDisruptionBudgetArgs) KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrInput {
	return (*kafkaSpecZookeeperTemplatePodDisruptionBudgetPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodDisruptionBudgetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodDisruptionBudget)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodDisruptionBudgetPtrType) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodDisruptionBudgetPtrType) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput)
}

// Template for ZooKeeper `PodDisruptionBudget`.
type KafkaSpecZookeeperTemplatePodDisruptionBudgetOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodDisruptionBudgetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDisruptionBudget)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodDisruptionBudget) *KafkaSpecZookeeperTemplatePodDisruptionBudget {
		return &v
	}).(KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput)
}

// Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.
func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodDisruptionBudget) *int { return v.MaxUnavailable }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetOutput) Metadata() KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodDisruptionBudget) *KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadata {
		return v.Metadata
	}).(KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput)
}

type KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodDisruptionBudget)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput) Elem() KafkaSpecZookeeperTemplatePodDisruptionBudgetOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodDisruptionBudget) KafkaSpecZookeeperTemplatePodDisruptionBudget {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodDisruptionBudget
		return ret
	}).(KafkaSpecZookeeperTemplatePodDisruptionBudgetOutput)
}

// Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.
func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodDisruptionBudget) *int {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput) Metadata() KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodDisruptionBudget) *KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput)
}

// Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
type KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadata struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataInput is an input type that accepts KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataArgs and KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataInput` via:
//
//	KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataArgs{...}
type KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutput
	ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutput
}

// Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
type KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadata)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataArgs) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutput {
	return i.ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataArgs) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutput)
}

func (i KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataArgs) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataArgs) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutput).ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataArgs, KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtr and KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput
	ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput
}

type kafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrType KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataArgs

func KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtr(v *KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataArgs) KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrInput {
	return (*kafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadata)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrType) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrType) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput)
}

// Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
type KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadata)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadata) *KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadata {
		return &v
	}).(KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadata)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput) Elem() KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadata) KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadata {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadata
		return ret
	}).(KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
type KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatch struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchArgs and KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchArgs{...}
type KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutput
	ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutput
}

// Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
type KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchArgs) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchArgs) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchArgs) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchArgs) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutput).ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchArgs, KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtr and KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrType KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchArgs

func KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtr(v *KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchArgs) KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrType) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrType) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput)
}

// Metadata to apply to the `PodDisruptionBudgetTemplate` resource.
type KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatch) *KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatch) map[string]string {
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatch) KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Template for ZooKeeper `PodDisruptionBudget`.
type KafkaSpecZookeeperTemplatePodDisruptionBudgetPatch struct {
	// Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.
	MaxUnavailable *int                                                        `pulumi:"maxUnavailable"`
	Metadata       *KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatch `pulumi:"metadata"`
}

// KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchArgs and KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchArgs{...}
type KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutput
	ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutput
}

// Template for ZooKeeper `PodDisruptionBudget`.
type KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchArgs struct {
	// Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.
	MaxUnavailable pulumi.IntPtrInput                                                 `pulumi:"maxUnavailable"`
	Metadata       KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrInput `pulumi:"metadata"`
}

func (KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDisruptionBudgetPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchArgs) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchArgs) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchArgs) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchArgs) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutput).ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchArgs, KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtr and KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrType KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchArgs

func KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtr(v *KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchArgs) KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodDisruptionBudgetPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrType) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrType) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput)
}

// Template for ZooKeeper `PodDisruptionBudget`.
type KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDisruptionBudgetPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodDisruptionBudgetPatch) *KafkaSpecZookeeperTemplatePodDisruptionBudgetPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput)
}

// Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.
func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodDisruptionBudgetPatch) *int { return v.MaxUnavailable }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutput) Metadata() KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodDisruptionBudgetPatch) *KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatch {
		return v.Metadata
	}).(KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodDisruptionBudgetPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput() KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodDisruptionBudgetPatch) KafkaSpecZookeeperTemplatePodDisruptionBudgetPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodDisruptionBudgetPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutput)
}

// Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.
func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodDisruptionBudgetPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput) Metadata() KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodDisruptionBudgetPatch) *KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatch {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput)
}

// The pod's DNSConfig. If specified, it will be merged to the generated DNS configuration based on the DNSPolicy.
type KafkaSpecZookeeperTemplatePodDnsConfig struct {
	Nameservers []string                                        `pulumi:"nameservers"`
	Options     []KafkaSpecZookeeperTemplatePodDnsConfigOptions `pulumi:"options"`
	Searches    []string                                        `pulumi:"searches"`
}

// KafkaSpecZookeeperTemplatePodDnsConfigInput is an input type that accepts KafkaSpecZookeeperTemplatePodDnsConfigArgs and KafkaSpecZookeeperTemplatePodDnsConfigOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodDnsConfigInput` via:
//
//	KafkaSpecZookeeperTemplatePodDnsConfigArgs{...}
type KafkaSpecZookeeperTemplatePodDnsConfigInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodDnsConfigOutput() KafkaSpecZookeeperTemplatePodDnsConfigOutput
	ToKafkaSpecZookeeperTemplatePodDnsConfigOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodDnsConfigOutput
}

// The pod's DNSConfig. If specified, it will be merged to the generated DNS configuration based on the DNSPolicy.
type KafkaSpecZookeeperTemplatePodDnsConfigArgs struct {
	Nameservers pulumi.StringArrayInput                                 `pulumi:"nameservers"`
	Options     KafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayInput `pulumi:"options"`
	Searches    pulumi.StringArrayInput                                 `pulumi:"searches"`
}

func (KafkaSpecZookeeperTemplatePodDnsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDnsConfig)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodDnsConfigArgs) ToKafkaSpecZookeeperTemplatePodDnsConfigOutput() KafkaSpecZookeeperTemplatePodDnsConfigOutput {
	return i.ToKafkaSpecZookeeperTemplatePodDnsConfigOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodDnsConfigArgs) ToKafkaSpecZookeeperTemplatePodDnsConfigOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDnsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodDnsConfigOutput)
}

func (i KafkaSpecZookeeperTemplatePodDnsConfigArgs) ToKafkaSpecZookeeperTemplatePodDnsConfigPtrOutput() KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodDnsConfigPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodDnsConfigArgs) ToKafkaSpecZookeeperTemplatePodDnsConfigPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodDnsConfigOutput).ToKafkaSpecZookeeperTemplatePodDnsConfigPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodDnsConfigPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodDnsConfigArgs, KafkaSpecZookeeperTemplatePodDnsConfigPtr and KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodDnsConfigPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodDnsConfigArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodDnsConfigPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodDnsConfigPtrOutput() KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput
	ToKafkaSpecZookeeperTemplatePodDnsConfigPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput
}

type kafkaSpecZookeeperTemplatePodDnsConfigPtrType KafkaSpecZookeeperTemplatePodDnsConfigArgs

func KafkaSpecZookeeperTemplatePodDnsConfigPtr(v *KafkaSpecZookeeperTemplatePodDnsConfigArgs) KafkaSpecZookeeperTemplatePodDnsConfigPtrInput {
	return (*kafkaSpecZookeeperTemplatePodDnsConfigPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodDnsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodDnsConfig)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodDnsConfigPtrType) ToKafkaSpecZookeeperTemplatePodDnsConfigPtrOutput() KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodDnsConfigPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodDnsConfigPtrType) ToKafkaSpecZookeeperTemplatePodDnsConfigPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput)
}

// The pod's DNSConfig. If specified, it will be merged to the generated DNS configuration based on the DNSPolicy.
type KafkaSpecZookeeperTemplatePodDnsConfigOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodDnsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDnsConfig)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigOutput) ToKafkaSpecZookeeperTemplatePodDnsConfigOutput() KafkaSpecZookeeperTemplatePodDnsConfigOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigOutput) ToKafkaSpecZookeeperTemplatePodDnsConfigOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDnsConfigOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigOutput) ToKafkaSpecZookeeperTemplatePodDnsConfigPtrOutput() KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodDnsConfigPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigOutput) ToKafkaSpecZookeeperTemplatePodDnsConfigPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodDnsConfig) *KafkaSpecZookeeperTemplatePodDnsConfig {
		return &v
	}).(KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigOutput) Nameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodDnsConfig) []string { return v.Nameservers }).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigOutput) Options() KafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodDnsConfig) []KafkaSpecZookeeperTemplatePodDnsConfigOptions {
		return v.Options
	}).(KafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigOutput) Searches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodDnsConfig) []string { return v.Searches }).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodDnsConfig)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput) ToKafkaSpecZookeeperTemplatePodDnsConfigPtrOutput() KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput) ToKafkaSpecZookeeperTemplatePodDnsConfigPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput) Elem() KafkaSpecZookeeperTemplatePodDnsConfigOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodDnsConfig) KafkaSpecZookeeperTemplatePodDnsConfig {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodDnsConfig
		return ret
	}).(KafkaSpecZookeeperTemplatePodDnsConfigOutput)
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput) Nameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodDnsConfig) []string {
		if v == nil {
			return nil
		}
		return v.Nameservers
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput) Options() KafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodDnsConfig) []KafkaSpecZookeeperTemplatePodDnsConfigOptions {
		if v == nil {
			return nil
		}
		return v.Options
	}).(KafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput) Searches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodDnsConfig) []string {
		if v == nil {
			return nil
		}
		return v.Searches
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodDnsConfigOptions struct {
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// KafkaSpecZookeeperTemplatePodDnsConfigOptionsInput is an input type that accepts KafkaSpecZookeeperTemplatePodDnsConfigOptionsArgs and KafkaSpecZookeeperTemplatePodDnsConfigOptionsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodDnsConfigOptionsInput` via:
//
//	KafkaSpecZookeeperTemplatePodDnsConfigOptionsArgs{...}
type KafkaSpecZookeeperTemplatePodDnsConfigOptionsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsOutput() KafkaSpecZookeeperTemplatePodDnsConfigOptionsOutput
	ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodDnsConfigOptionsOutput
}

type KafkaSpecZookeeperTemplatePodDnsConfigOptionsArgs struct {
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (KafkaSpecZookeeperTemplatePodDnsConfigOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDnsConfigOptions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodDnsConfigOptionsArgs) ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsOutput() KafkaSpecZookeeperTemplatePodDnsConfigOptionsOutput {
	return i.ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodDnsConfigOptionsArgs) ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDnsConfigOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodDnsConfigOptionsOutput)
}

// KafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodDnsConfigOptionsArray and KafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodDnsConfigOptionsArray{ KafkaSpecZookeeperTemplatePodDnsConfigOptionsArgs{...} }
type KafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutput() KafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutput
	ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutput
}

type KafkaSpecZookeeperTemplatePodDnsConfigOptionsArray []KafkaSpecZookeeperTemplatePodDnsConfigOptionsInput

func (KafkaSpecZookeeperTemplatePodDnsConfigOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodDnsConfigOptions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodDnsConfigOptionsArray) ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutput() KafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodDnsConfigOptionsArray) ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodDnsConfigOptionsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodDnsConfigOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDnsConfigOptions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigOptionsOutput) ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsOutput() KafkaSpecZookeeperTemplatePodDnsConfigOptionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigOptionsOutput) ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDnsConfigOptionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigOptionsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodDnsConfigOptions) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigOptionsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodDnsConfigOptions) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodDnsConfigOptions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutput) ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutput() KafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutput) ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodDnsConfigOptionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodDnsConfigOptions {
		return vs[0].([]KafkaSpecZookeeperTemplatePodDnsConfigOptions)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodDnsConfigOptionsOutput)
}

type KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatch struct {
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArgs and KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArgs{...}
type KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutput() KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutput
	ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutput
}

type KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArgs struct {
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArgs) ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutput() KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArgs) ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutput)
}

// KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArray and KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArray{ KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArray []KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchInput

func (KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArray) ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArray) ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutput) ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutput() KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutput) ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutput)
}

// The pod's DNSConfig. If specified, it will be merged to the generated DNS configuration based on the DNSPolicy.
type KafkaSpecZookeeperTemplatePodDnsConfigPatch struct {
	Nameservers []string                                             `pulumi:"nameservers"`
	Options     []KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatch `pulumi:"options"`
	Searches    []string                                             `pulumi:"searches"`
}

// KafkaSpecZookeeperTemplatePodDnsConfigPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodDnsConfigPatchArgs and KafkaSpecZookeeperTemplatePodDnsConfigPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodDnsConfigPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodDnsConfigPatchArgs{...}
type KafkaSpecZookeeperTemplatePodDnsConfigPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodDnsConfigPatchOutput() KafkaSpecZookeeperTemplatePodDnsConfigPatchOutput
	ToKafkaSpecZookeeperTemplatePodDnsConfigPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodDnsConfigPatchOutput
}

// The pod's DNSConfig. If specified, it will be merged to the generated DNS configuration based on the DNSPolicy.
type KafkaSpecZookeeperTemplatePodDnsConfigPatchArgs struct {
	Nameservers pulumi.StringArrayInput                                      `pulumi:"nameservers"`
	Options     KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayInput `pulumi:"options"`
	Searches    pulumi.StringArrayInput                                      `pulumi:"searches"`
}

func (KafkaSpecZookeeperTemplatePodDnsConfigPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDnsConfigPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodDnsConfigPatchArgs) ToKafkaSpecZookeeperTemplatePodDnsConfigPatchOutput() KafkaSpecZookeeperTemplatePodDnsConfigPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodDnsConfigPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodDnsConfigPatchArgs) ToKafkaSpecZookeeperTemplatePodDnsConfigPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDnsConfigPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodDnsConfigPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodDnsConfigPatchArgs) ToKafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput() KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodDnsConfigPatchArgs) ToKafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodDnsConfigPatchOutput).ToKafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodDnsConfigPatchArgs, KafkaSpecZookeeperTemplatePodDnsConfigPatchPtr and KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodDnsConfigPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput() KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodDnsConfigPatchPtrType KafkaSpecZookeeperTemplatePodDnsConfigPatchArgs

func KafkaSpecZookeeperTemplatePodDnsConfigPatchPtr(v *KafkaSpecZookeeperTemplatePodDnsConfigPatchArgs) KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodDnsConfigPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodDnsConfigPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodDnsConfigPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodDnsConfigPatchPtrType) ToKafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput() KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodDnsConfigPatchPtrType) ToKafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput)
}

// The pod's DNSConfig. If specified, it will be merged to the generated DNS configuration based on the DNSPolicy.
type KafkaSpecZookeeperTemplatePodDnsConfigPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodDnsConfigPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDnsConfigPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigPatchOutput) ToKafkaSpecZookeeperTemplatePodDnsConfigPatchOutput() KafkaSpecZookeeperTemplatePodDnsConfigPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigPatchOutput) ToKafkaSpecZookeeperTemplatePodDnsConfigPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDnsConfigPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigPatchOutput) ToKafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput() KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigPatchOutput) ToKafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodDnsConfigPatch) *KafkaSpecZookeeperTemplatePodDnsConfigPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigPatchOutput) Nameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodDnsConfigPatch) []string { return v.Nameservers }).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigPatchOutput) Options() KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodDnsConfigPatch) []KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatch {
		return v.Options
	}).(KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigPatchOutput) Searches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodDnsConfigPatch) []string { return v.Searches }).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodDnsConfigPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput() KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodDnsConfigPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodDnsConfigPatch) KafkaSpecZookeeperTemplatePodDnsConfigPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodDnsConfigPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodDnsConfigPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput) Nameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodDnsConfigPatch) []string {
		if v == nil {
			return nil
		}
		return v.Nameservers
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput) Options() KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodDnsConfigPatch) []KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatch {
		if v == nil {
			return nil
		}
		return v.Options
	}).(KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput) Searches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodDnsConfigPatch) []string {
		if v == nil {
			return nil
		}
		return v.Searches
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodHostAliases struct {
	Hostnames []string `pulumi:"hostnames"`
	Ip        *string  `pulumi:"ip"`
}

// KafkaSpecZookeeperTemplatePodHostAliasesInput is an input type that accepts KafkaSpecZookeeperTemplatePodHostAliasesArgs and KafkaSpecZookeeperTemplatePodHostAliasesOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodHostAliasesInput` via:
//
//	KafkaSpecZookeeperTemplatePodHostAliasesArgs{...}
type KafkaSpecZookeeperTemplatePodHostAliasesInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodHostAliasesOutput() KafkaSpecZookeeperTemplatePodHostAliasesOutput
	ToKafkaSpecZookeeperTemplatePodHostAliasesOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodHostAliasesOutput
}

type KafkaSpecZookeeperTemplatePodHostAliasesArgs struct {
	Hostnames pulumi.StringArrayInput `pulumi:"hostnames"`
	Ip        pulumi.StringPtrInput   `pulumi:"ip"`
}

func (KafkaSpecZookeeperTemplatePodHostAliasesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodHostAliases)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodHostAliasesArgs) ToKafkaSpecZookeeperTemplatePodHostAliasesOutput() KafkaSpecZookeeperTemplatePodHostAliasesOutput {
	return i.ToKafkaSpecZookeeperTemplatePodHostAliasesOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodHostAliasesArgs) ToKafkaSpecZookeeperTemplatePodHostAliasesOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodHostAliasesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodHostAliasesOutput)
}

// KafkaSpecZookeeperTemplatePodHostAliasesArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodHostAliasesArray and KafkaSpecZookeeperTemplatePodHostAliasesArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodHostAliasesArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodHostAliasesArray{ KafkaSpecZookeeperTemplatePodHostAliasesArgs{...} }
type KafkaSpecZookeeperTemplatePodHostAliasesArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodHostAliasesArrayOutput() KafkaSpecZookeeperTemplatePodHostAliasesArrayOutput
	ToKafkaSpecZookeeperTemplatePodHostAliasesArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodHostAliasesArrayOutput
}

type KafkaSpecZookeeperTemplatePodHostAliasesArray []KafkaSpecZookeeperTemplatePodHostAliasesInput

func (KafkaSpecZookeeperTemplatePodHostAliasesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodHostAliases)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodHostAliasesArray) ToKafkaSpecZookeeperTemplatePodHostAliasesArrayOutput() KafkaSpecZookeeperTemplatePodHostAliasesArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodHostAliasesArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodHostAliasesArray) ToKafkaSpecZookeeperTemplatePodHostAliasesArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodHostAliasesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodHostAliasesArrayOutput)
}

type KafkaSpecZookeeperTemplatePodHostAliasesOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodHostAliasesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodHostAliases)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodHostAliasesOutput) ToKafkaSpecZookeeperTemplatePodHostAliasesOutput() KafkaSpecZookeeperTemplatePodHostAliasesOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodHostAliasesOutput) ToKafkaSpecZookeeperTemplatePodHostAliasesOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodHostAliasesOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodHostAliasesOutput) Hostnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodHostAliases) []string { return v.Hostnames }).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodHostAliasesOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodHostAliases) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodHostAliasesArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodHostAliasesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodHostAliases)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodHostAliasesArrayOutput) ToKafkaSpecZookeeperTemplatePodHostAliasesArrayOutput() KafkaSpecZookeeperTemplatePodHostAliasesArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodHostAliasesArrayOutput) ToKafkaSpecZookeeperTemplatePodHostAliasesArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodHostAliasesArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodHostAliasesArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodHostAliasesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodHostAliases {
		return vs[0].([]KafkaSpecZookeeperTemplatePodHostAliases)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodHostAliasesOutput)
}

type KafkaSpecZookeeperTemplatePodHostAliasesPatch struct {
	Hostnames []string `pulumi:"hostnames"`
	Ip        *string  `pulumi:"ip"`
}

// KafkaSpecZookeeperTemplatePodHostAliasesPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodHostAliasesPatchArgs and KafkaSpecZookeeperTemplatePodHostAliasesPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodHostAliasesPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodHostAliasesPatchArgs{...}
type KafkaSpecZookeeperTemplatePodHostAliasesPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodHostAliasesPatchOutput() KafkaSpecZookeeperTemplatePodHostAliasesPatchOutput
	ToKafkaSpecZookeeperTemplatePodHostAliasesPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodHostAliasesPatchOutput
}

type KafkaSpecZookeeperTemplatePodHostAliasesPatchArgs struct {
	Hostnames pulumi.StringArrayInput `pulumi:"hostnames"`
	Ip        pulumi.StringPtrInput   `pulumi:"ip"`
}

func (KafkaSpecZookeeperTemplatePodHostAliasesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodHostAliasesPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodHostAliasesPatchArgs) ToKafkaSpecZookeeperTemplatePodHostAliasesPatchOutput() KafkaSpecZookeeperTemplatePodHostAliasesPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodHostAliasesPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodHostAliasesPatchArgs) ToKafkaSpecZookeeperTemplatePodHostAliasesPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodHostAliasesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodHostAliasesPatchOutput)
}

// KafkaSpecZookeeperTemplatePodHostAliasesPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodHostAliasesPatchArray and KafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodHostAliasesPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodHostAliasesPatchArray{ KafkaSpecZookeeperTemplatePodHostAliasesPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodHostAliasesPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutput() KafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodHostAliasesPatchArray []KafkaSpecZookeeperTemplatePodHostAliasesPatchInput

func (KafkaSpecZookeeperTemplatePodHostAliasesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodHostAliasesPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodHostAliasesPatchArray) ToKafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutput() KafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodHostAliasesPatchArray) ToKafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodHostAliasesPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodHostAliasesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodHostAliasesPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodHostAliasesPatchOutput) ToKafkaSpecZookeeperTemplatePodHostAliasesPatchOutput() KafkaSpecZookeeperTemplatePodHostAliasesPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodHostAliasesPatchOutput) ToKafkaSpecZookeeperTemplatePodHostAliasesPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodHostAliasesPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodHostAliasesPatchOutput) Hostnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodHostAliasesPatch) []string { return v.Hostnames }).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodHostAliasesPatchOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodHostAliasesPatch) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodHostAliasesPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutput() KafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodHostAliasesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodHostAliasesPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodHostAliasesPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodHostAliasesPatchOutput)
}

type KafkaSpecZookeeperTemplatePodImagePullSecrets struct {
	Name *string `pulumi:"name"`
}

// KafkaSpecZookeeperTemplatePodImagePullSecretsInput is an input type that accepts KafkaSpecZookeeperTemplatePodImagePullSecretsArgs and KafkaSpecZookeeperTemplatePodImagePullSecretsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodImagePullSecretsInput` via:
//
//	KafkaSpecZookeeperTemplatePodImagePullSecretsArgs{...}
type KafkaSpecZookeeperTemplatePodImagePullSecretsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodImagePullSecretsOutput() KafkaSpecZookeeperTemplatePodImagePullSecretsOutput
	ToKafkaSpecZookeeperTemplatePodImagePullSecretsOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodImagePullSecretsOutput
}

type KafkaSpecZookeeperTemplatePodImagePullSecretsArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (KafkaSpecZookeeperTemplatePodImagePullSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodImagePullSecrets)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodImagePullSecretsArgs) ToKafkaSpecZookeeperTemplatePodImagePullSecretsOutput() KafkaSpecZookeeperTemplatePodImagePullSecretsOutput {
	return i.ToKafkaSpecZookeeperTemplatePodImagePullSecretsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodImagePullSecretsArgs) ToKafkaSpecZookeeperTemplatePodImagePullSecretsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodImagePullSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodImagePullSecretsOutput)
}

// KafkaSpecZookeeperTemplatePodImagePullSecretsArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodImagePullSecretsArray and KafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodImagePullSecretsArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodImagePullSecretsArray{ KafkaSpecZookeeperTemplatePodImagePullSecretsArgs{...} }
type KafkaSpecZookeeperTemplatePodImagePullSecretsArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutput() KafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutput
	ToKafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutput
}

type KafkaSpecZookeeperTemplatePodImagePullSecretsArray []KafkaSpecZookeeperTemplatePodImagePullSecretsInput

func (KafkaSpecZookeeperTemplatePodImagePullSecretsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodImagePullSecrets)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodImagePullSecretsArray) ToKafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutput() KafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodImagePullSecretsArray) ToKafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodImagePullSecretsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodImagePullSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodImagePullSecrets)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodImagePullSecretsOutput) ToKafkaSpecZookeeperTemplatePodImagePullSecretsOutput() KafkaSpecZookeeperTemplatePodImagePullSecretsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodImagePullSecretsOutput) ToKafkaSpecZookeeperTemplatePodImagePullSecretsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodImagePullSecretsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodImagePullSecretsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodImagePullSecrets) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodImagePullSecrets)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutput) ToKafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutput() KafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutput) ToKafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodImagePullSecretsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodImagePullSecrets {
		return vs[0].([]KafkaSpecZookeeperTemplatePodImagePullSecrets)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodImagePullSecretsOutput)
}

type KafkaSpecZookeeperTemplatePodImagePullSecretsPatch struct {
	Name *string `pulumi:"name"`
}

// KafkaSpecZookeeperTemplatePodImagePullSecretsPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArgs and KafkaSpecZookeeperTemplatePodImagePullSecretsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodImagePullSecretsPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArgs{...}
type KafkaSpecZookeeperTemplatePodImagePullSecretsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodImagePullSecretsPatchOutput() KafkaSpecZookeeperTemplatePodImagePullSecretsPatchOutput
	ToKafkaSpecZookeeperTemplatePodImagePullSecretsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodImagePullSecretsPatchOutput
}

type KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodImagePullSecretsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArgs) ToKafkaSpecZookeeperTemplatePodImagePullSecretsPatchOutput() KafkaSpecZookeeperTemplatePodImagePullSecretsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodImagePullSecretsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArgs) ToKafkaSpecZookeeperTemplatePodImagePullSecretsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodImagePullSecretsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodImagePullSecretsPatchOutput)
}

// KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArray and KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArray{ KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutput() KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArray []KafkaSpecZookeeperTemplatePodImagePullSecretsPatchInput

func (KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodImagePullSecretsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArray) ToKafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutput() KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArray) ToKafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodImagePullSecretsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodImagePullSecretsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodImagePullSecretsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodImagePullSecretsPatchOutput) ToKafkaSpecZookeeperTemplatePodImagePullSecretsPatchOutput() KafkaSpecZookeeperTemplatePodImagePullSecretsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodImagePullSecretsPatchOutput) ToKafkaSpecZookeeperTemplatePodImagePullSecretsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodImagePullSecretsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodImagePullSecretsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodImagePullSecretsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodImagePullSecretsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutput() KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodImagePullSecretsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodImagePullSecretsPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodImagePullSecretsPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodImagePullSecretsPatchOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplatePodMetadata struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaSpecZookeeperTemplatePodMetadataInput is an input type that accepts KafkaSpecZookeeperTemplatePodMetadataArgs and KafkaSpecZookeeperTemplatePodMetadataOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodMetadataInput` via:
//
//	KafkaSpecZookeeperTemplatePodMetadataArgs{...}
type KafkaSpecZookeeperTemplatePodMetadataInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodMetadataOutput() KafkaSpecZookeeperTemplatePodMetadataOutput
	ToKafkaSpecZookeeperTemplatePodMetadataOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodMetadataOutput
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplatePodMetadataArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaSpecZookeeperTemplatePodMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodMetadata)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodMetadataArgs) ToKafkaSpecZookeeperTemplatePodMetadataOutput() KafkaSpecZookeeperTemplatePodMetadataOutput {
	return i.ToKafkaSpecZookeeperTemplatePodMetadataOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodMetadataArgs) ToKafkaSpecZookeeperTemplatePodMetadataOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodMetadataOutput)
}

func (i KafkaSpecZookeeperTemplatePodMetadataArgs) ToKafkaSpecZookeeperTemplatePodMetadataPtrOutput() KafkaSpecZookeeperTemplatePodMetadataPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodMetadataPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodMetadataArgs) ToKafkaSpecZookeeperTemplatePodMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodMetadataOutput).ToKafkaSpecZookeeperTemplatePodMetadataPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodMetadataPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodMetadataArgs, KafkaSpecZookeeperTemplatePodMetadataPtr and KafkaSpecZookeeperTemplatePodMetadataPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodMetadataPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodMetadataArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodMetadataPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodMetadataPtrOutput() KafkaSpecZookeeperTemplatePodMetadataPtrOutput
	ToKafkaSpecZookeeperTemplatePodMetadataPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodMetadataPtrOutput
}

type kafkaSpecZookeeperTemplatePodMetadataPtrType KafkaSpecZookeeperTemplatePodMetadataArgs

func KafkaSpecZookeeperTemplatePodMetadataPtr(v *KafkaSpecZookeeperTemplatePodMetadataArgs) KafkaSpecZookeeperTemplatePodMetadataPtrInput {
	return (*kafkaSpecZookeeperTemplatePodMetadataPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodMetadata)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodMetadataPtrType) ToKafkaSpecZookeeperTemplatePodMetadataPtrOutput() KafkaSpecZookeeperTemplatePodMetadataPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodMetadataPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodMetadataPtrType) ToKafkaSpecZookeeperTemplatePodMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodMetadataPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplatePodMetadataOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodMetadata)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodMetadataOutput) ToKafkaSpecZookeeperTemplatePodMetadataOutput() KafkaSpecZookeeperTemplatePodMetadataOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodMetadataOutput) ToKafkaSpecZookeeperTemplatePodMetadataOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodMetadataOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodMetadataOutput) ToKafkaSpecZookeeperTemplatePodMetadataPtrOutput() KafkaSpecZookeeperTemplatePodMetadataPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodMetadataPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodMetadataOutput) ToKafkaSpecZookeeperTemplatePodMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodMetadata) *KafkaSpecZookeeperTemplatePodMetadata {
		return &v
	}).(KafkaSpecZookeeperTemplatePodMetadataPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodMetadataPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodMetadata)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodMetadataPtrOutput) ToKafkaSpecZookeeperTemplatePodMetadataPtrOutput() KafkaSpecZookeeperTemplatePodMetadataPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodMetadataPtrOutput) ToKafkaSpecZookeeperTemplatePodMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodMetadataPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodMetadataPtrOutput) Elem() KafkaSpecZookeeperTemplatePodMetadataOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodMetadata) KafkaSpecZookeeperTemplatePodMetadata {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodMetadata
		return ret
	}).(KafkaSpecZookeeperTemplatePodMetadataOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplatePodMetadataPatch struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaSpecZookeeperTemplatePodMetadataPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodMetadataPatchArgs and KafkaSpecZookeeperTemplatePodMetadataPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodMetadataPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodMetadataPatchArgs{...}
type KafkaSpecZookeeperTemplatePodMetadataPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodMetadataPatchOutput() KafkaSpecZookeeperTemplatePodMetadataPatchOutput
	ToKafkaSpecZookeeperTemplatePodMetadataPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodMetadataPatchOutput
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplatePodMetadataPatchArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaSpecZookeeperTemplatePodMetadataPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodMetadataPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodMetadataPatchArgs) ToKafkaSpecZookeeperTemplatePodMetadataPatchOutput() KafkaSpecZookeeperTemplatePodMetadataPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodMetadataPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodMetadataPatchArgs) ToKafkaSpecZookeeperTemplatePodMetadataPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodMetadataPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodMetadataPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodMetadataPatchArgs) ToKafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput() KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodMetadataPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodMetadataPatchArgs) ToKafkaSpecZookeeperTemplatePodMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodMetadataPatchOutput).ToKafkaSpecZookeeperTemplatePodMetadataPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodMetadataPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodMetadataPatchArgs, KafkaSpecZookeeperTemplatePodMetadataPatchPtr and KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodMetadataPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodMetadataPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodMetadataPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput() KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodMetadataPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodMetadataPatchPtrType KafkaSpecZookeeperTemplatePodMetadataPatchArgs

func KafkaSpecZookeeperTemplatePodMetadataPatchPtr(v *KafkaSpecZookeeperTemplatePodMetadataPatchArgs) KafkaSpecZookeeperTemplatePodMetadataPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodMetadataPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodMetadataPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodMetadataPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodMetadataPatchPtrType) ToKafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput() KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodMetadataPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodMetadataPatchPtrType) ToKafkaSpecZookeeperTemplatePodMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplatePodMetadataPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodMetadataPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodMetadataPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodMetadataPatchOutput) ToKafkaSpecZookeeperTemplatePodMetadataPatchOutput() KafkaSpecZookeeperTemplatePodMetadataPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodMetadataPatchOutput) ToKafkaSpecZookeeperTemplatePodMetadataPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodMetadataPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodMetadataPatchOutput) ToKafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput() KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodMetadataPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodMetadataPatchOutput) ToKafkaSpecZookeeperTemplatePodMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodMetadataPatch) *KafkaSpecZookeeperTemplatePodMetadataPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodMetadataPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodMetadataPatch) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodMetadataPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodMetadataPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodMetadataPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput() KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodMetadataPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodMetadataPatch) KafkaSpecZookeeperTemplatePodMetadataPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodMetadataPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodMetadataPatchOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Template for ZooKeeper `Pods`.
type KafkaSpecZookeeperTemplatePodPatch struct {
	Affinity  *KafkaSpecZookeeperTemplatePodAffinityPatch  `pulumi:"affinity"`
	DnsConfig *KafkaSpecZookeeperTemplatePodDnsConfigPatch `pulumi:"dnsConfig"`
	// The pod's DNSPolicy. Defaults to `ClusterFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default` or `None`.
	DnsPolicy *string `pulumi:"dnsPolicy"`
	// Indicates whether information about services should be injected into Pod's environment variables.
	EnableServiceLinks *bool `pulumi:"enableServiceLinks"`
	// The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
	HostAliases []KafkaSpecZookeeperTemplatePodHostAliasesPatch `pulumi:"hostAliases"`
	// List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
	ImagePullSecrets []KafkaSpecZookeeperTemplatePodImagePullSecretsPatch `pulumi:"imagePullSecrets"`
	Metadata         *KafkaSpecZookeeperTemplatePodMetadataPatch          `pulumi:"metadata"`
	// The name of the priority class used to assign priority to the pods.
	PriorityClassName *string `pulumi:"priorityClassName"`
	// The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
	SchedulerName   *string                                            `pulumi:"schedulerName"`
	SecurityContext *KafkaSpecZookeeperTemplatePodSecurityContextPatch `pulumi:"securityContext"`
	// The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
	TerminationGracePeriodSeconds *int `pulumi:"terminationGracePeriodSeconds"`
	// Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.
	TmpDirSizeLimit *string `pulumi:"tmpDirSizeLimit"`
	// The pod's tolerations.
	Tolerations []KafkaSpecZookeeperTemplatePodTolerationsPatch `pulumi:"tolerations"`
	// The pod's topology spread constraints.
	TopologySpreadConstraints []KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatch `pulumi:"topologySpreadConstraints"`
	// Additional volumes that can be mounted to the pod.
	Volumes []KafkaSpecZookeeperTemplatePodVolumesPatch `pulumi:"volumes"`
}

// KafkaSpecZookeeperTemplatePodPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodPatchArgs and KafkaSpecZookeeperTemplatePodPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodPatchArgs{...}
type KafkaSpecZookeeperTemplatePodPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodPatchOutput() KafkaSpecZookeeperTemplatePodPatchOutput
	ToKafkaSpecZookeeperTemplatePodPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodPatchOutput
}

// Template for ZooKeeper `Pods`.
type KafkaSpecZookeeperTemplatePodPatchArgs struct {
	Affinity  KafkaSpecZookeeperTemplatePodAffinityPatchPtrInput  `pulumi:"affinity"`
	DnsConfig KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrInput `pulumi:"dnsConfig"`
	// The pod's DNSPolicy. Defaults to `ClusterFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default` or `None`.
	DnsPolicy pulumi.StringPtrInput `pulumi:"dnsPolicy"`
	// Indicates whether information about services should be injected into Pod's environment variables.
	EnableServiceLinks pulumi.BoolPtrInput `pulumi:"enableServiceLinks"`
	// The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
	HostAliases KafkaSpecZookeeperTemplatePodHostAliasesPatchArrayInput `pulumi:"hostAliases"`
	// List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
	ImagePullSecrets KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayInput `pulumi:"imagePullSecrets"`
	Metadata         KafkaSpecZookeeperTemplatePodMetadataPatchPtrInput           `pulumi:"metadata"`
	// The name of the priority class used to assign priority to the pods.
	PriorityClassName pulumi.StringPtrInput `pulumi:"priorityClassName"`
	// The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
	SchedulerName   pulumi.StringPtrInput                                     `pulumi:"schedulerName"`
	SecurityContext KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrInput `pulumi:"securityContext"`
	// The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
	TerminationGracePeriodSeconds pulumi.IntPtrInput `pulumi:"terminationGracePeriodSeconds"`
	// Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.
	TmpDirSizeLimit pulumi.StringPtrInput `pulumi:"tmpDirSizeLimit"`
	// The pod's tolerations.
	Tolerations KafkaSpecZookeeperTemplatePodTolerationsPatchArrayInput `pulumi:"tolerations"`
	// The pod's topology spread constraints.
	TopologySpreadConstraints KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayInput `pulumi:"topologySpreadConstraints"`
	// Additional volumes that can be mounted to the pod.
	Volumes KafkaSpecZookeeperTemplatePodVolumesPatchArrayInput `pulumi:"volumes"`
}

func (KafkaSpecZookeeperTemplatePodPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodPatchArgs) ToKafkaSpecZookeeperTemplatePodPatchOutput() KafkaSpecZookeeperTemplatePodPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodPatchArgs) ToKafkaSpecZookeeperTemplatePodPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodPatchArgs) ToKafkaSpecZookeeperTemplatePodPatchPtrOutput() KafkaSpecZookeeperTemplatePodPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodPatchArgs) ToKafkaSpecZookeeperTemplatePodPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodPatchOutput).ToKafkaSpecZookeeperTemplatePodPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodPatchArgs, KafkaSpecZookeeperTemplatePodPatchPtr and KafkaSpecZookeeperTemplatePodPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodPatchPtrOutput() KafkaSpecZookeeperTemplatePodPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodPatchPtrType KafkaSpecZookeeperTemplatePodPatchArgs

func KafkaSpecZookeeperTemplatePodPatchPtr(v *KafkaSpecZookeeperTemplatePodPatchArgs) KafkaSpecZookeeperTemplatePodPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodPatchPtrType) ToKafkaSpecZookeeperTemplatePodPatchPtrOutput() KafkaSpecZookeeperTemplatePodPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodPatchPtrType) ToKafkaSpecZookeeperTemplatePodPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodPatchPtrOutput)
}

// Template for ZooKeeper `Pods`.
type KafkaSpecZookeeperTemplatePodPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodPatchOutput) ToKafkaSpecZookeeperTemplatePodPatchOutput() KafkaSpecZookeeperTemplatePodPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodPatchOutput) ToKafkaSpecZookeeperTemplatePodPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodPatchOutput) ToKafkaSpecZookeeperTemplatePodPatchPtrOutput() KafkaSpecZookeeperTemplatePodPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodPatchOutput) ToKafkaSpecZookeeperTemplatePodPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodPatch) *KafkaSpecZookeeperTemplatePodPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodPatchOutput) Affinity() KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodPatch) *KafkaSpecZookeeperTemplatePodAffinityPatch {
		return v.Affinity
	}).(KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodPatchOutput) DnsConfig() KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodPatch) *KafkaSpecZookeeperTemplatePodDnsConfigPatch {
		return v.DnsConfig
	}).(KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput)
}

// The pod's DNSPolicy. Defaults to `ClusterFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default` or `None`.
func (o KafkaSpecZookeeperTemplatePodPatchOutput) DnsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodPatch) *string { return v.DnsPolicy }).(pulumi.StringPtrOutput)
}

// Indicates whether information about services should be injected into Pod's environment variables.
func (o KafkaSpecZookeeperTemplatePodPatchOutput) EnableServiceLinks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodPatch) *bool { return v.EnableServiceLinks }).(pulumi.BoolPtrOutput)
}

// The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
func (o KafkaSpecZookeeperTemplatePodPatchOutput) HostAliases() KafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodPatch) []KafkaSpecZookeeperTemplatePodHostAliasesPatch {
		return v.HostAliases
	}).(KafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutput)
}

// List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
func (o KafkaSpecZookeeperTemplatePodPatchOutput) ImagePullSecrets() KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodPatch) []KafkaSpecZookeeperTemplatePodImagePullSecretsPatch {
		return v.ImagePullSecrets
	}).(KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodPatchOutput) Metadata() KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodPatch) *KafkaSpecZookeeperTemplatePodMetadataPatch {
		return v.Metadata
	}).(KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput)
}

// The name of the priority class used to assign priority to the pods.
func (o KafkaSpecZookeeperTemplatePodPatchOutput) PriorityClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodPatch) *string { return v.PriorityClassName }).(pulumi.StringPtrOutput)
}

// The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
func (o KafkaSpecZookeeperTemplatePodPatchOutput) SchedulerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodPatch) *string { return v.SchedulerName }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodPatchOutput) SecurityContext() KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodPatch) *KafkaSpecZookeeperTemplatePodSecurityContextPatch {
		return v.SecurityContext
	}).(KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput)
}

// The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
func (o KafkaSpecZookeeperTemplatePodPatchOutput) TerminationGracePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodPatch) *int { return v.TerminationGracePeriodSeconds }).(pulumi.IntPtrOutput)
}

// Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.
func (o KafkaSpecZookeeperTemplatePodPatchOutput) TmpDirSizeLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodPatch) *string { return v.TmpDirSizeLimit }).(pulumi.StringPtrOutput)
}

// The pod's tolerations.
func (o KafkaSpecZookeeperTemplatePodPatchOutput) Tolerations() KafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodPatch) []KafkaSpecZookeeperTemplatePodTolerationsPatch {
		return v.Tolerations
	}).(KafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutput)
}

// The pod's topology spread constraints.
func (o KafkaSpecZookeeperTemplatePodPatchOutput) TopologySpreadConstraints() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodPatch) []KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatch {
		return v.TopologySpreadConstraints
	}).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutput)
}

// Additional volumes that can be mounted to the pod.
func (o KafkaSpecZookeeperTemplatePodPatchOutput) Volumes() KafkaSpecZookeeperTemplatePodVolumesPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodPatch) []KafkaSpecZookeeperTemplatePodVolumesPatch {
		return v.Volumes
	}).(KafkaSpecZookeeperTemplatePodVolumesPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodPatchPtrOutput() KafkaSpecZookeeperTemplatePodPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodPatch) KafkaSpecZookeeperTemplatePodPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodPatchPtrOutput) Affinity() KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodPatch) *KafkaSpecZookeeperTemplatePodAffinityPatch {
		if v == nil {
			return nil
		}
		return v.Affinity
	}).(KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodPatchPtrOutput) DnsConfig() KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodPatch) *KafkaSpecZookeeperTemplatePodDnsConfigPatch {
		if v == nil {
			return nil
		}
		return v.DnsConfig
	}).(KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput)
}

// The pod's DNSPolicy. Defaults to `ClusterFirst`. Valid values are `ClusterFirstWithHostNet`, `ClusterFirst`, `Default` or `None`.
func (o KafkaSpecZookeeperTemplatePodPatchPtrOutput) DnsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodPatch) *string {
		if v == nil {
			return nil
		}
		return v.DnsPolicy
	}).(pulumi.StringPtrOutput)
}

// Indicates whether information about services should be injected into Pod's environment variables.
func (o KafkaSpecZookeeperTemplatePodPatchPtrOutput) EnableServiceLinks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodPatch) *bool {
		if v == nil {
			return nil
		}
		return v.EnableServiceLinks
	}).(pulumi.BoolPtrOutput)
}

// The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
func (o KafkaSpecZookeeperTemplatePodPatchPtrOutput) HostAliases() KafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodPatch) []KafkaSpecZookeeperTemplatePodHostAliasesPatch {
		if v == nil {
			return nil
		}
		return v.HostAliases
	}).(KafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutput)
}

// List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.
func (o KafkaSpecZookeeperTemplatePodPatchPtrOutput) ImagePullSecrets() KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodPatch) []KafkaSpecZookeeperTemplatePodImagePullSecretsPatch {
		if v == nil {
			return nil
		}
		return v.ImagePullSecrets
	}).(KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodPatchPtrOutput) Metadata() KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodPatch) *KafkaSpecZookeeperTemplatePodMetadataPatch {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput)
}

// The name of the priority class used to assign priority to the pods.
func (o KafkaSpecZookeeperTemplatePodPatchPtrOutput) PriorityClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodPatch) *string {
		if v == nil {
			return nil
		}
		return v.PriorityClassName
	}).(pulumi.StringPtrOutput)
}

// The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.
func (o KafkaSpecZookeeperTemplatePodPatchPtrOutput) SchedulerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodPatch) *string {
		if v == nil {
			return nil
		}
		return v.SchedulerName
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodPatchPtrOutput) SecurityContext() KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodPatch) *KafkaSpecZookeeperTemplatePodSecurityContextPatch {
		if v == nil {
			return nil
		}
		return v.SecurityContext
	}).(KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput)
}

// The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.
func (o KafkaSpecZookeeperTemplatePodPatchPtrOutput) TerminationGracePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodPatch) *int {
		if v == nil {
			return nil
		}
		return v.TerminationGracePeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Defines the total amount of pod memory allocated for the temporary `EmptyDir` volume `/tmp`. Specify the allocation in memory units, for example, `100Mi` for 100 mebibytes. Default value is `5Mi`. The `/tmp` volume is backed by pod memory, not disk storage, so avoid setting a high value as it consumes pod memory resources.
func (o KafkaSpecZookeeperTemplatePodPatchPtrOutput) TmpDirSizeLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodPatch) *string {
		if v == nil {
			return nil
		}
		return v.TmpDirSizeLimit
	}).(pulumi.StringPtrOutput)
}

// The pod's tolerations.
func (o KafkaSpecZookeeperTemplatePodPatchPtrOutput) Tolerations() KafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodPatch) []KafkaSpecZookeeperTemplatePodTolerationsPatch {
		if v == nil {
			return nil
		}
		return v.Tolerations
	}).(KafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutput)
}

// The pod's topology spread constraints.
func (o KafkaSpecZookeeperTemplatePodPatchPtrOutput) TopologySpreadConstraints() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodPatch) []KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatch {
		if v == nil {
			return nil
		}
		return v.TopologySpreadConstraints
	}).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutput)
}

// Additional volumes that can be mounted to the pod.
func (o KafkaSpecZookeeperTemplatePodPatchPtrOutput) Volumes() KafkaSpecZookeeperTemplatePodVolumesPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodPatch) []KafkaSpecZookeeperTemplatePodVolumesPatch {
		if v == nil {
			return nil
		}
		return v.Volumes
	}).(KafkaSpecZookeeperTemplatePodVolumesPatchArrayOutput)
}

// Configures pod-level security attributes and common container settings.
type KafkaSpecZookeeperTemplatePodSecurityContext struct {
	AppArmorProfile          *KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfile `pulumi:"appArmorProfile"`
	FsGroup                  *int                                                         `pulumi:"fsGroup"`
	FsGroupChangePolicy      *string                                                      `pulumi:"fsGroupChangePolicy"`
	RunAsGroup               *int                                                         `pulumi:"runAsGroup"`
	RunAsNonRoot             *bool                                                        `pulumi:"runAsNonRoot"`
	RunAsUser                *int                                                         `pulumi:"runAsUser"`
	SeLinuxChangePolicy      *string                                                      `pulumi:"seLinuxChangePolicy"`
	SeLinuxOptions           *KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptions  `pulumi:"seLinuxOptions"`
	SeccompProfile           *KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfile  `pulumi:"seccompProfile"`
	SupplementalGroups       []int                                                        `pulumi:"supplementalGroups"`
	SupplementalGroupsPolicy *string                                                      `pulumi:"supplementalGroupsPolicy"`
	Sysctls                  []KafkaSpecZookeeperTemplatePodSecurityContextSysctls        `pulumi:"sysctls"`
	WindowsOptions           *KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptions  `pulumi:"windowsOptions"`
}

// KafkaSpecZookeeperTemplatePodSecurityContextInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextArgs and KafkaSpecZookeeperTemplatePodSecurityContextOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextInput` via:
//
//	KafkaSpecZookeeperTemplatePodSecurityContextArgs{...}
type KafkaSpecZookeeperTemplatePodSecurityContextInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextOutput() KafkaSpecZookeeperTemplatePodSecurityContextOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextOutput
}

// Configures pod-level security attributes and common container settings.
type KafkaSpecZookeeperTemplatePodSecurityContextArgs struct {
	AppArmorProfile          KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrInput `pulumi:"appArmorProfile"`
	FsGroup                  pulumi.IntPtrInput                                                  `pulumi:"fsGroup"`
	FsGroupChangePolicy      pulumi.StringPtrInput                                               `pulumi:"fsGroupChangePolicy"`
	RunAsGroup               pulumi.IntPtrInput                                                  `pulumi:"runAsGroup"`
	RunAsNonRoot             pulumi.BoolPtrInput                                                 `pulumi:"runAsNonRoot"`
	RunAsUser                pulumi.IntPtrInput                                                  `pulumi:"runAsUser"`
	SeLinuxChangePolicy      pulumi.StringPtrInput                                               `pulumi:"seLinuxChangePolicy"`
	SeLinuxOptions           KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrInput  `pulumi:"seLinuxOptions"`
	SeccompProfile           KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrInput  `pulumi:"seccompProfile"`
	SupplementalGroups       pulumi.IntArrayInput                                                `pulumi:"supplementalGroups"`
	SupplementalGroupsPolicy pulumi.StringPtrInput                                               `pulumi:"supplementalGroupsPolicy"`
	Sysctls                  KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayInput       `pulumi:"sysctls"`
	WindowsOptions           KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrInput  `pulumi:"windowsOptions"`
}

func (KafkaSpecZookeeperTemplatePodSecurityContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContext)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextOutput() KafkaSpecZookeeperTemplatePodSecurityContextOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextOutput)
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextOutput).ToKafkaSpecZookeeperTemplatePodSecurityContextPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodSecurityContextPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextArgs, KafkaSpecZookeeperTemplatePodSecurityContextPtr and KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodSecurityContextArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodSecurityContextPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput
}

type kafkaSpecZookeeperTemplatePodSecurityContextPtrType KafkaSpecZookeeperTemplatePodSecurityContextArgs

func KafkaSpecZookeeperTemplatePodSecurityContextPtr(v *KafkaSpecZookeeperTemplatePodSecurityContextArgs) KafkaSpecZookeeperTemplatePodSecurityContextPtrInput {
	return (*kafkaSpecZookeeperTemplatePodSecurityContextPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodSecurityContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSecurityContext)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodSecurityContextPtrType) ToKafkaSpecZookeeperTemplatePodSecurityContextPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodSecurityContextPtrType) ToKafkaSpecZookeeperTemplatePodSecurityContextPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput)
}

// Configures pod-level security attributes and common container settings.
type KafkaSpecZookeeperTemplatePodSecurityContextOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContext)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextOutput() KafkaSpecZookeeperTemplatePodSecurityContextOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodSecurityContextPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodSecurityContext) *KafkaSpecZookeeperTemplatePodSecurityContext {
		return &v
	}).(KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextOutput) AppArmorProfile() KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContext) *KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfile {
		return v.AppArmorProfile
	}).(KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextOutput) FsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContext) *int { return v.FsGroup }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextOutput) FsGroupChangePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContext) *string { return v.FsGroupChangePolicy }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContext) *int { return v.RunAsGroup }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContext) *bool { return v.RunAsNonRoot }).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContext) *int { return v.RunAsUser }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextOutput) SeLinuxChangePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContext) *string { return v.SeLinuxChangePolicy }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextOutput) SeLinuxOptions() KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContext) *KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptions {
		return v.SeLinuxOptions
	}).(KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextOutput) SeccompProfile() KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContext) *KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfile {
		return v.SeccompProfile
	}).(KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextOutput) SupplementalGroups() pulumi.IntArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContext) []int { return v.SupplementalGroups }).(pulumi.IntArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextOutput) SupplementalGroupsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContext) *string { return v.SupplementalGroupsPolicy }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextOutput) Sysctls() KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContext) []KafkaSpecZookeeperTemplatePodSecurityContextSysctls {
		return v.Sysctls
	}).(KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextOutput) WindowsOptions() KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContext) *KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptions {
		return v.WindowsOptions
	}).(KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSecurityContext)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput) Elem() KafkaSpecZookeeperTemplatePodSecurityContextOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContext) KafkaSpecZookeeperTemplatePodSecurityContext {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodSecurityContext
		return ret
	}).(KafkaSpecZookeeperTemplatePodSecurityContextOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput) AppArmorProfile() KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContext) *KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfile {
		if v == nil {
			return nil
		}
		return v.AppArmorProfile
	}).(KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput) FsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContext) *int {
		if v == nil {
			return nil
		}
		return v.FsGroup
	}).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput) FsGroupChangePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContext) *string {
		if v == nil {
			return nil
		}
		return v.FsGroupChangePolicy
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContext) *int {
		if v == nil {
			return nil
		}
		return v.RunAsGroup
	}).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.RunAsNonRoot
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContext) *int {
		if v == nil {
			return nil
		}
		return v.RunAsUser
	}).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput) SeLinuxChangePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContext) *string {
		if v == nil {
			return nil
		}
		return v.SeLinuxChangePolicy
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput) SeLinuxOptions() KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContext) *KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptions {
		if v == nil {
			return nil
		}
		return v.SeLinuxOptions
	}).(KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput) SeccompProfile() KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContext) *KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfile {
		if v == nil {
			return nil
		}
		return v.SeccompProfile
	}).(KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput) SupplementalGroups() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContext) []int {
		if v == nil {
			return nil
		}
		return v.SupplementalGroups
	}).(pulumi.IntArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput) SupplementalGroupsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContext) *string {
		if v == nil {
			return nil
		}
		return v.SupplementalGroupsPolicy
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput) Sysctls() KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContext) []KafkaSpecZookeeperTemplatePodSecurityContextSysctls {
		if v == nil {
			return nil
		}
		return v.Sysctls
	}).(KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput) WindowsOptions() KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContext) *KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptions {
		if v == nil {
			return nil
		}
		return v.WindowsOptions
	}).(KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfile struct {
	LocalhostProfile *string `pulumi:"localhostProfile"`
	Type             *string `pulumi:"type"`
}

// KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileArgs and KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileInput` via:
//
//	KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileArgs{...}
type KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutput() KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutput
}

type KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileArgs struct {
	LocalhostProfile pulumi.StringPtrInput `pulumi:"localhostProfile"`
	Type             pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfile)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutput() KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutput)
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutput).ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileArgs, KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtr and KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput
}

type kafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrType KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileArgs

func KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtr(v *KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileArgs) KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrInput {
	return (*kafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfile)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrType) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrType) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfile)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutput() KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfile) *KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfile {
		return &v
	}).(KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfile) *string { return v.LocalhostProfile }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfile) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfile)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput) Elem() KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfile) KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfile {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfile
		return ret
	}).(KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfile) *string {
		if v == nil {
			return nil
		}
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfile) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatch struct {
	LocalhostProfile *string `pulumi:"localhostProfile"`
	Type             *string `pulumi:"type"`
}

// KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchArgs and KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchArgs{...}
type KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutput() KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutput
}

type KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchArgs struct {
	LocalhostProfile pulumi.StringPtrInput `pulumi:"localhostProfile"`
	Type             pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutput() KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutput).ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchArgs, KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtr and KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrType KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchArgs

func KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtr(v *KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchArgs) KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrType) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrType) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutput() KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatch) *KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatch) *string {
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatch) KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatch) *string {
		if v == nil {
			return nil
		}
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Configures pod-level security attributes and common container settings.
type KafkaSpecZookeeperTemplatePodSecurityContextPatch struct {
	AppArmorProfile          *KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatch `pulumi:"appArmorProfile"`
	FsGroup                  *int                                                              `pulumi:"fsGroup"`
	FsGroupChangePolicy      *string                                                           `pulumi:"fsGroupChangePolicy"`
	RunAsGroup               *int                                                              `pulumi:"runAsGroup"`
	RunAsNonRoot             *bool                                                             `pulumi:"runAsNonRoot"`
	RunAsUser                *int                                                              `pulumi:"runAsUser"`
	SeLinuxChangePolicy      *string                                                           `pulumi:"seLinuxChangePolicy"`
	SeLinuxOptions           *KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatch  `pulumi:"seLinuxOptions"`
	SeccompProfile           *KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatch  `pulumi:"seccompProfile"`
	SupplementalGroups       []int                                                             `pulumi:"supplementalGroups"`
	SupplementalGroupsPolicy *string                                                           `pulumi:"supplementalGroupsPolicy"`
	Sysctls                  []KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatch        `pulumi:"sysctls"`
	WindowsOptions           *KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatch  `pulumi:"windowsOptions"`
}

// KafkaSpecZookeeperTemplatePodSecurityContextPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextPatchArgs and KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodSecurityContextPatchArgs{...}
type KafkaSpecZookeeperTemplatePodSecurityContextPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextPatchOutput() KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput
}

// Configures pod-level security attributes and common container settings.
type KafkaSpecZookeeperTemplatePodSecurityContextPatchArgs struct {
	AppArmorProfile          KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrInput `pulumi:"appArmorProfile"`
	FsGroup                  pulumi.IntPtrInput                                                       `pulumi:"fsGroup"`
	FsGroupChangePolicy      pulumi.StringPtrInput                                                    `pulumi:"fsGroupChangePolicy"`
	RunAsGroup               pulumi.IntPtrInput                                                       `pulumi:"runAsGroup"`
	RunAsNonRoot             pulumi.BoolPtrInput                                                      `pulumi:"runAsNonRoot"`
	RunAsUser                pulumi.IntPtrInput                                                       `pulumi:"runAsUser"`
	SeLinuxChangePolicy      pulumi.StringPtrInput                                                    `pulumi:"seLinuxChangePolicy"`
	SeLinuxOptions           KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrInput  `pulumi:"seLinuxOptions"`
	SeccompProfile           KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrInput  `pulumi:"seccompProfile"`
	SupplementalGroups       pulumi.IntArrayInput                                                     `pulumi:"supplementalGroups"`
	SupplementalGroupsPolicy pulumi.StringPtrInput                                                    `pulumi:"supplementalGroupsPolicy"`
	Sysctls                  KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayInput       `pulumi:"sysctls"`
	WindowsOptions           KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrInput  `pulumi:"windowsOptions"`
}

func (KafkaSpecZookeeperTemplatePodSecurityContextPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextPatchArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextPatchOutput() KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextPatchArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextPatchArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextPatchArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput).ToKafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextPatchArgs, KafkaSpecZookeeperTemplatePodSecurityContextPatchPtr and KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodSecurityContextPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodSecurityContextPatchPtrType KafkaSpecZookeeperTemplatePodSecurityContextPatchArgs

func KafkaSpecZookeeperTemplatePodSecurityContextPatchPtr(v *KafkaSpecZookeeperTemplatePodSecurityContextPatchArgs) KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodSecurityContextPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodSecurityContextPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSecurityContextPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodSecurityContextPatchPtrType) ToKafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodSecurityContextPatchPtrType) ToKafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput)
}

// Configures pod-level security attributes and common container settings.
type KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextPatchOutput() KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodSecurityContextPatch) *KafkaSpecZookeeperTemplatePodSecurityContextPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput) AppArmorProfile() KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextPatch) *KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatch {
		return v.AppArmorProfile
	}).(KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput) FsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextPatch) *int { return v.FsGroup }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput) FsGroupChangePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextPatch) *string { return v.FsGroupChangePolicy }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextPatch) *int { return v.RunAsGroup }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextPatch) *bool { return v.RunAsNonRoot }).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextPatch) *int { return v.RunAsUser }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput) SeLinuxChangePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextPatch) *string { return v.SeLinuxChangePolicy }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput) SeLinuxOptions() KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextPatch) *KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatch {
		return v.SeLinuxOptions
	}).(KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput) SeccompProfile() KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextPatch) *KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatch {
		return v.SeccompProfile
	}).(KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput) SupplementalGroups() pulumi.IntArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextPatch) []int { return v.SupplementalGroups }).(pulumi.IntArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput) SupplementalGroupsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextPatch) *string { return v.SupplementalGroupsPolicy }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput) Sysctls() KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextPatch) []KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatch {
		return v.Sysctls
	}).(KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput) WindowsOptions() KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextPatch) *KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatch {
		return v.WindowsOptions
	}).(KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSecurityContextPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextPatch) KafkaSpecZookeeperTemplatePodSecurityContextPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodSecurityContextPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput) AppArmorProfile() KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextPatch) *KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatch {
		if v == nil {
			return nil
		}
		return v.AppArmorProfile
	}).(KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput) FsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextPatch) *int {
		if v == nil {
			return nil
		}
		return v.FsGroup
	}).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput) FsGroupChangePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextPatch) *string {
		if v == nil {
			return nil
		}
		return v.FsGroupChangePolicy
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextPatch) *int {
		if v == nil {
			return nil
		}
		return v.RunAsGroup
	}).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextPatch) *bool {
		if v == nil {
			return nil
		}
		return v.RunAsNonRoot
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextPatch) *int {
		if v == nil {
			return nil
		}
		return v.RunAsUser
	}).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput) SeLinuxChangePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextPatch) *string {
		if v == nil {
			return nil
		}
		return v.SeLinuxChangePolicy
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput) SeLinuxOptions() KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextPatch) *KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatch {
		if v == nil {
			return nil
		}
		return v.SeLinuxOptions
	}).(KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput) SeccompProfile() KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextPatch) *KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatch {
		if v == nil {
			return nil
		}
		return v.SeccompProfile
	}).(KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput) SupplementalGroups() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextPatch) []int {
		if v == nil {
			return nil
		}
		return v.SupplementalGroups
	}).(pulumi.IntArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput) SupplementalGroupsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextPatch) *string {
		if v == nil {
			return nil
		}
		return v.SupplementalGroupsPolicy
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput) Sysctls() KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextPatch) []KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatch {
		if v == nil {
			return nil
		}
		return v.Sysctls
	}).(KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput) WindowsOptions() KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextPatch) *KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatch {
		if v == nil {
			return nil
		}
		return v.WindowsOptions
	}).(KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptions struct {
	Level *string `pulumi:"level"`
	Role  *string `pulumi:"role"`
	Type  *string `pulumi:"type"`
	User  *string `pulumi:"user"`
}

// KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsArgs and KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsInput` via:
//
//	KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsArgs{...}
type KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput
}

type KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsArgs struct {
	Level pulumi.StringPtrInput `pulumi:"level"`
	Role  pulumi.StringPtrInput `pulumi:"role"`
	Type  pulumi.StringPtrInput `pulumi:"type"`
	User  pulumi.StringPtrInput `pulumi:"user"`
}

func (KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput)
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput).ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsArgs, KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtr and KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput
}

type kafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrType KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsArgs

func KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtr(v *KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsArgs) KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrInput {
	return (*kafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrType) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrType) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptions) *KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptions {
		return &v
	}).(KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptions) *string { return v.Level }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptions) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptions) *string { return v.User }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput) Elem() KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptions) KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptions {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptions
		return ret
	}).(KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatch struct {
	Level *string `pulumi:"level"`
	Role  *string `pulumi:"role"`
	Type  *string `pulumi:"type"`
	User  *string `pulumi:"user"`
}

// KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchArgs and KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchArgs{...}
type KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput
}

type KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchArgs struct {
	Level pulumi.StringPtrInput `pulumi:"level"`
	Role  pulumi.StringPtrInput `pulumi:"role"`
	Type  pulumi.StringPtrInput `pulumi:"type"`
	User  pulumi.StringPtrInput `pulumi:"user"`
}

func (KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput).ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchArgs, KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtr and KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrType KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchArgs

func KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtr(v *KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchArgs) KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrType) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrType) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatch) *KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatch) *string { return v.Level }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatch) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatch) *string { return v.User }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatch) KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatch) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfile struct {
	LocalhostProfile *string `pulumi:"localhostProfile"`
	Type             *string `pulumi:"type"`
}

// KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileArgs and KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileInput` via:
//
//	KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileArgs{...}
type KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutput
}

type KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileArgs struct {
	LocalhostProfile pulumi.StringPtrInput `pulumi:"localhostProfile"`
	Type             pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfile)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutput)
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutput).ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileArgs, KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtr and KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput
}

type kafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrType KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileArgs

func KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtr(v *KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileArgs) KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrInput {
	return (*kafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfile)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrType) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrType) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfile)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfile) *KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfile {
		return &v
	}).(KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfile) *string { return v.LocalhostProfile }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfile) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfile)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput) Elem() KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfile) KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfile {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfile
		return ret
	}).(KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfile) *string {
		if v == nil {
			return nil
		}
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfile) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatch struct {
	LocalhostProfile *string `pulumi:"localhostProfile"`
	Type             *string `pulumi:"type"`
}

// KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchArgs and KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchArgs{...}
type KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutput
}

type KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchArgs struct {
	LocalhostProfile pulumi.StringPtrInput `pulumi:"localhostProfile"`
	Type             pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutput).ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchArgs, KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtr and KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrType KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchArgs

func KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtr(v *KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchArgs) KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrType) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrType) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatch) *KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatch) *string {
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatch) KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatch) *string {
		if v == nil {
			return nil
		}
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextSysctls struct {
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// KafkaSpecZookeeperTemplatePodSecurityContextSysctlsInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArgs and KafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextSysctlsInput` via:
//
//	KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArgs{...}
type KafkaSpecZookeeperTemplatePodSecurityContextSysctlsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutput() KafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutput
}

type KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArgs struct {
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSysctls)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutput() KafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutput)
}

// KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArray and KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArray{ KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArgs{...} }
type KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutput() KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutput
}

type KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArray []KafkaSpecZookeeperTemplatePodSecurityContextSysctlsInput

func (KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodSecurityContextSysctls)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArray) ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutput() KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArray) ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSysctls)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutput() KafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextSysctls) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextSysctls) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodSecurityContextSysctls)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutput() KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodSecurityContextSysctls {
		return vs[0].([]KafkaSpecZookeeperTemplatePodSecurityContextSysctls)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatch struct {
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArgs and KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArgs{...}
type KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutput() KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutput
}

type KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArgs struct {
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutput() KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutput)
}

// KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArray and KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArray{ KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutput() KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArray []KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchInput

func (KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArray) ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutput() KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArray) ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutput() KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutput() KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptions struct {
	GmsaCredentialSpec     *string `pulumi:"gmsaCredentialSpec"`
	GmsaCredentialSpecName *string `pulumi:"gmsaCredentialSpecName"`
	HostProcess            *bool   `pulumi:"hostProcess"`
	RunAsUserName          *string `pulumi:"runAsUserName"`
}

// KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsArgs and KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsInput` via:
//
//	KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsArgs{...}
type KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput() KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput
}

type KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsArgs struct {
	GmsaCredentialSpec     pulumi.StringPtrInput `pulumi:"gmsaCredentialSpec"`
	GmsaCredentialSpecName pulumi.StringPtrInput `pulumi:"gmsaCredentialSpecName"`
	HostProcess            pulumi.BoolPtrInput   `pulumi:"hostProcess"`
	RunAsUserName          pulumi.StringPtrInput `pulumi:"runAsUserName"`
}

func (KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput() KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput)
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput).ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsArgs, KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtr and KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput
}

type kafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrType KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsArgs

func KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtr(v *KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsArgs) KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrInput {
	return (*kafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptions)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrType) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrType) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput() KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptions) *KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptions {
		return &v
	}).(KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput) GmsaCredentialSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptions) *string {
		return v.GmsaCredentialSpec
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput) GmsaCredentialSpecName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptions) *string {
		return v.GmsaCredentialSpecName
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput) HostProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptions) *bool { return v.HostProcess }).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput) RunAsUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptions) *string { return v.RunAsUserName }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput) Elem() KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptions) KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptions {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptions
		return ret
	}).(KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput) GmsaCredentialSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.GmsaCredentialSpec
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput) GmsaCredentialSpecName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.GmsaCredentialSpecName
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput) HostProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptions) *bool {
		if v == nil {
			return nil
		}
		return v.HostProcess
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput) RunAsUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.RunAsUserName
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatch struct {
	GmsaCredentialSpec     *string `pulumi:"gmsaCredentialSpec"`
	GmsaCredentialSpecName *string `pulumi:"gmsaCredentialSpecName"`
	HostProcess            *bool   `pulumi:"hostProcess"`
	RunAsUserName          *string `pulumi:"runAsUserName"`
}

// KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchArgs and KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchArgs{...}
type KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput() KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput
}

type KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchArgs struct {
	GmsaCredentialSpec     pulumi.StringPtrInput `pulumi:"gmsaCredentialSpec"`
	GmsaCredentialSpecName pulumi.StringPtrInput `pulumi:"gmsaCredentialSpecName"`
	HostProcess            pulumi.BoolPtrInput   `pulumi:"hostProcess"`
	RunAsUserName          pulumi.StringPtrInput `pulumi:"runAsUserName"`
}

func (KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput() KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchArgs) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput).ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchArgs, KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtr and KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrType KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchArgs

func KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtr(v *KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchArgs) KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrType) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrType) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput() KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatch) *KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput) GmsaCredentialSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatch) *string {
		return v.GmsaCredentialSpec
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput) GmsaCredentialSpecName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatch) *string {
		return v.GmsaCredentialSpecName
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput) HostProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatch) *bool { return v.HostProcess }).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput) RunAsUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatch) *string {
		return v.RunAsUserName
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput() KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatch) KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput) GmsaCredentialSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatch) *string {
		if v == nil {
			return nil
		}
		return v.GmsaCredentialSpec
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput) GmsaCredentialSpecName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatch) *string {
		if v == nil {
			return nil
		}
		return v.GmsaCredentialSpecName
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput) HostProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatch) *bool {
		if v == nil {
			return nil
		}
		return v.HostProcess
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput) RunAsUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatch) *string {
		if v == nil {
			return nil
		}
		return v.RunAsUserName
	}).(pulumi.StringPtrOutput)
}

// Template for ZooKeeper `StrimziPodSet` resource.
type KafkaSpecZookeeperTemplatePodSet struct {
	Metadata *KafkaSpecZookeeperTemplatePodSetMetadata `pulumi:"metadata"`
}

// KafkaSpecZookeeperTemplatePodSetInput is an input type that accepts KafkaSpecZookeeperTemplatePodSetArgs and KafkaSpecZookeeperTemplatePodSetOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSetInput` via:
//
//	KafkaSpecZookeeperTemplatePodSetArgs{...}
type KafkaSpecZookeeperTemplatePodSetInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSetOutput() KafkaSpecZookeeperTemplatePodSetOutput
	ToKafkaSpecZookeeperTemplatePodSetOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSetOutput
}

// Template for ZooKeeper `StrimziPodSet` resource.
type KafkaSpecZookeeperTemplatePodSetArgs struct {
	Metadata KafkaSpecZookeeperTemplatePodSetMetadataPtrInput `pulumi:"metadata"`
}

func (KafkaSpecZookeeperTemplatePodSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSet)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodSetArgs) ToKafkaSpecZookeeperTemplatePodSetOutput() KafkaSpecZookeeperTemplatePodSetOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSetOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSetArgs) ToKafkaSpecZookeeperTemplatePodSetOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSetOutput)
}

func (i KafkaSpecZookeeperTemplatePodSetArgs) ToKafkaSpecZookeeperTemplatePodSetPtrOutput() KafkaSpecZookeeperTemplatePodSetPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSetPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSetArgs) ToKafkaSpecZookeeperTemplatePodSetPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSetOutput).ToKafkaSpecZookeeperTemplatePodSetPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodSetPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodSetArgs, KafkaSpecZookeeperTemplatePodSetPtr and KafkaSpecZookeeperTemplatePodSetPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSetPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodSetArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodSetPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSetPtrOutput() KafkaSpecZookeeperTemplatePodSetPtrOutput
	ToKafkaSpecZookeeperTemplatePodSetPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSetPtrOutput
}

type kafkaSpecZookeeperTemplatePodSetPtrType KafkaSpecZookeeperTemplatePodSetArgs

func KafkaSpecZookeeperTemplatePodSetPtr(v *KafkaSpecZookeeperTemplatePodSetArgs) KafkaSpecZookeeperTemplatePodSetPtrInput {
	return (*kafkaSpecZookeeperTemplatePodSetPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSet)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodSetPtrType) ToKafkaSpecZookeeperTemplatePodSetPtrOutput() KafkaSpecZookeeperTemplatePodSetPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSetPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodSetPtrType) ToKafkaSpecZookeeperTemplatePodSetPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSetPtrOutput)
}

// Template for ZooKeeper `StrimziPodSet` resource.
type KafkaSpecZookeeperTemplatePodSetOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSet)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSetOutput) ToKafkaSpecZookeeperTemplatePodSetOutput() KafkaSpecZookeeperTemplatePodSetOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSetOutput) ToKafkaSpecZookeeperTemplatePodSetOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSetOutput) ToKafkaSpecZookeeperTemplatePodSetPtrOutput() KafkaSpecZookeeperTemplatePodSetPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodSetPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodSetOutput) ToKafkaSpecZookeeperTemplatePodSetPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodSet) *KafkaSpecZookeeperTemplatePodSet {
		return &v
	}).(KafkaSpecZookeeperTemplatePodSetPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSetOutput) Metadata() KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSet) *KafkaSpecZookeeperTemplatePodSetMetadata { return v.Metadata }).(KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSetPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSet)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSetPtrOutput) ToKafkaSpecZookeeperTemplatePodSetPtrOutput() KafkaSpecZookeeperTemplatePodSetPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSetPtrOutput) ToKafkaSpecZookeeperTemplatePodSetPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSetPtrOutput) Elem() KafkaSpecZookeeperTemplatePodSetOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSet) KafkaSpecZookeeperTemplatePodSet {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodSet
		return ret
	}).(KafkaSpecZookeeperTemplatePodSetOutput)
}

func (o KafkaSpecZookeeperTemplatePodSetPtrOutput) Metadata() KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSet) *KafkaSpecZookeeperTemplatePodSetMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplatePodSetMetadata struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaSpecZookeeperTemplatePodSetMetadataInput is an input type that accepts KafkaSpecZookeeperTemplatePodSetMetadataArgs and KafkaSpecZookeeperTemplatePodSetMetadataOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSetMetadataInput` via:
//
//	KafkaSpecZookeeperTemplatePodSetMetadataArgs{...}
type KafkaSpecZookeeperTemplatePodSetMetadataInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSetMetadataOutput() KafkaSpecZookeeperTemplatePodSetMetadataOutput
	ToKafkaSpecZookeeperTemplatePodSetMetadataOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSetMetadataOutput
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplatePodSetMetadataArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaSpecZookeeperTemplatePodSetMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSetMetadata)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodSetMetadataArgs) ToKafkaSpecZookeeperTemplatePodSetMetadataOutput() KafkaSpecZookeeperTemplatePodSetMetadataOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSetMetadataOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSetMetadataArgs) ToKafkaSpecZookeeperTemplatePodSetMetadataOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSetMetadataOutput)
}

func (i KafkaSpecZookeeperTemplatePodSetMetadataArgs) ToKafkaSpecZookeeperTemplatePodSetMetadataPtrOutput() KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSetMetadataPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSetMetadataArgs) ToKafkaSpecZookeeperTemplatePodSetMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSetMetadataOutput).ToKafkaSpecZookeeperTemplatePodSetMetadataPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodSetMetadataPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodSetMetadataArgs, KafkaSpecZookeeperTemplatePodSetMetadataPtr and KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSetMetadataPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodSetMetadataArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodSetMetadataPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSetMetadataPtrOutput() KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput
	ToKafkaSpecZookeeperTemplatePodSetMetadataPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput
}

type kafkaSpecZookeeperTemplatePodSetMetadataPtrType KafkaSpecZookeeperTemplatePodSetMetadataArgs

func KafkaSpecZookeeperTemplatePodSetMetadataPtr(v *KafkaSpecZookeeperTemplatePodSetMetadataArgs) KafkaSpecZookeeperTemplatePodSetMetadataPtrInput {
	return (*kafkaSpecZookeeperTemplatePodSetMetadataPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodSetMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSetMetadata)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodSetMetadataPtrType) ToKafkaSpecZookeeperTemplatePodSetMetadataPtrOutput() KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSetMetadataPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodSetMetadataPtrType) ToKafkaSpecZookeeperTemplatePodSetMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplatePodSetMetadataOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSetMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSetMetadata)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSetMetadataOutput) ToKafkaSpecZookeeperTemplatePodSetMetadataOutput() KafkaSpecZookeeperTemplatePodSetMetadataOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSetMetadataOutput) ToKafkaSpecZookeeperTemplatePodSetMetadataOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetMetadataOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSetMetadataOutput) ToKafkaSpecZookeeperTemplatePodSetMetadataPtrOutput() KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodSetMetadataPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodSetMetadataOutput) ToKafkaSpecZookeeperTemplatePodSetMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodSetMetadata) *KafkaSpecZookeeperTemplatePodSetMetadata {
		return &v
	}).(KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodSetMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSetMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodSetMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSetMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSetMetadata)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput) ToKafkaSpecZookeeperTemplatePodSetMetadataPtrOutput() KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput) ToKafkaSpecZookeeperTemplatePodSetMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput) Elem() KafkaSpecZookeeperTemplatePodSetMetadataOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSetMetadata) KafkaSpecZookeeperTemplatePodSetMetadata {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodSetMetadata
		return ret
	}).(KafkaSpecZookeeperTemplatePodSetMetadataOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSetMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSetMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplatePodSetMetadataPatch struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaSpecZookeeperTemplatePodSetMetadataPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodSetMetadataPatchArgs and KafkaSpecZookeeperTemplatePodSetMetadataPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSetMetadataPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodSetMetadataPatchArgs{...}
type KafkaSpecZookeeperTemplatePodSetMetadataPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSetMetadataPatchOutput() KafkaSpecZookeeperTemplatePodSetMetadataPatchOutput
	ToKafkaSpecZookeeperTemplatePodSetMetadataPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSetMetadataPatchOutput
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplatePodSetMetadataPatchArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaSpecZookeeperTemplatePodSetMetadataPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSetMetadataPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodSetMetadataPatchArgs) ToKafkaSpecZookeeperTemplatePodSetMetadataPatchOutput() KafkaSpecZookeeperTemplatePodSetMetadataPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSetMetadataPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSetMetadataPatchArgs) ToKafkaSpecZookeeperTemplatePodSetMetadataPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetMetadataPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSetMetadataPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodSetMetadataPatchArgs) ToKafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput() KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSetMetadataPatchArgs) ToKafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSetMetadataPatchOutput).ToKafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodSetMetadataPatchArgs, KafkaSpecZookeeperTemplatePodSetMetadataPatchPtr and KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodSetMetadataPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput() KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodSetMetadataPatchPtrType KafkaSpecZookeeperTemplatePodSetMetadataPatchArgs

func KafkaSpecZookeeperTemplatePodSetMetadataPatchPtr(v *KafkaSpecZookeeperTemplatePodSetMetadataPatchArgs) KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodSetMetadataPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodSetMetadataPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSetMetadataPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodSetMetadataPatchPtrType) ToKafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput() KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodSetMetadataPatchPtrType) ToKafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplatePodSetMetadataPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSetMetadataPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSetMetadataPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSetMetadataPatchOutput) ToKafkaSpecZookeeperTemplatePodSetMetadataPatchOutput() KafkaSpecZookeeperTemplatePodSetMetadataPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSetMetadataPatchOutput) ToKafkaSpecZookeeperTemplatePodSetMetadataPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetMetadataPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSetMetadataPatchOutput) ToKafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput() KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodSetMetadataPatchOutput) ToKafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodSetMetadataPatch) *KafkaSpecZookeeperTemplatePodSetMetadataPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodSetMetadataPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSetMetadataPatch) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodSetMetadataPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSetMetadataPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSetMetadataPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput() KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodSetMetadataPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSetMetadataPatch) KafkaSpecZookeeperTemplatePodSetMetadataPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodSetMetadataPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodSetMetadataPatchOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSetMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSetMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Template for ZooKeeper `StrimziPodSet` resource.
type KafkaSpecZookeeperTemplatePodSetPatch struct {
	Metadata *KafkaSpecZookeeperTemplatePodSetMetadataPatch `pulumi:"metadata"`
}

// KafkaSpecZookeeperTemplatePodSetPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodSetPatchArgs and KafkaSpecZookeeperTemplatePodSetPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSetPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodSetPatchArgs{...}
type KafkaSpecZookeeperTemplatePodSetPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSetPatchOutput() KafkaSpecZookeeperTemplatePodSetPatchOutput
	ToKafkaSpecZookeeperTemplatePodSetPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSetPatchOutput
}

// Template for ZooKeeper `StrimziPodSet` resource.
type KafkaSpecZookeeperTemplatePodSetPatchArgs struct {
	Metadata KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrInput `pulumi:"metadata"`
}

func (KafkaSpecZookeeperTemplatePodSetPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSetPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodSetPatchArgs) ToKafkaSpecZookeeperTemplatePodSetPatchOutput() KafkaSpecZookeeperTemplatePodSetPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSetPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSetPatchArgs) ToKafkaSpecZookeeperTemplatePodSetPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSetPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodSetPatchArgs) ToKafkaSpecZookeeperTemplatePodSetPatchPtrOutput() KafkaSpecZookeeperTemplatePodSetPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSetPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodSetPatchArgs) ToKafkaSpecZookeeperTemplatePodSetPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSetPatchOutput).ToKafkaSpecZookeeperTemplatePodSetPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodSetPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodSetPatchArgs, KafkaSpecZookeeperTemplatePodSetPatchPtr and KafkaSpecZookeeperTemplatePodSetPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodSetPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodSetPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodSetPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodSetPatchPtrOutput() KafkaSpecZookeeperTemplatePodSetPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodSetPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodSetPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodSetPatchPtrType KafkaSpecZookeeperTemplatePodSetPatchArgs

func KafkaSpecZookeeperTemplatePodSetPatchPtr(v *KafkaSpecZookeeperTemplatePodSetPatchArgs) KafkaSpecZookeeperTemplatePodSetPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodSetPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodSetPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSetPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodSetPatchPtrType) ToKafkaSpecZookeeperTemplatePodSetPatchPtrOutput() KafkaSpecZookeeperTemplatePodSetPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodSetPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodSetPatchPtrType) ToKafkaSpecZookeeperTemplatePodSetPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodSetPatchPtrOutput)
}

// Template for ZooKeeper `StrimziPodSet` resource.
type KafkaSpecZookeeperTemplatePodSetPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSetPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSetPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSetPatchOutput) ToKafkaSpecZookeeperTemplatePodSetPatchOutput() KafkaSpecZookeeperTemplatePodSetPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSetPatchOutput) ToKafkaSpecZookeeperTemplatePodSetPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSetPatchOutput) ToKafkaSpecZookeeperTemplatePodSetPatchPtrOutput() KafkaSpecZookeeperTemplatePodSetPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodSetPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodSetPatchOutput) ToKafkaSpecZookeeperTemplatePodSetPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodSetPatch) *KafkaSpecZookeeperTemplatePodSetPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodSetPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodSetPatchOutput) Metadata() KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodSetPatch) *KafkaSpecZookeeperTemplatePodSetMetadataPatch {
		return v.Metadata
	}).(KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodSetPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodSetPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodSetPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodSetPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodSetPatchPtrOutput() KafkaSpecZookeeperTemplatePodSetPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSetPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodSetPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodSetPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodSetPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodSetPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSetPatch) KafkaSpecZookeeperTemplatePodSetPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodSetPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodSetPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodSetPatchPtrOutput) Metadata() KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodSetPatch) *KafkaSpecZookeeperTemplatePodSetMetadataPatch {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodTolerations struct {
	Effect            *string `pulumi:"effect"`
	Key               *string `pulumi:"key"`
	Operator          *string `pulumi:"operator"`
	TolerationSeconds *int    `pulumi:"tolerationSeconds"`
	Value             *string `pulumi:"value"`
}

// KafkaSpecZookeeperTemplatePodTolerationsInput is an input type that accepts KafkaSpecZookeeperTemplatePodTolerationsArgs and KafkaSpecZookeeperTemplatePodTolerationsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodTolerationsInput` via:
//
//	KafkaSpecZookeeperTemplatePodTolerationsArgs{...}
type KafkaSpecZookeeperTemplatePodTolerationsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodTolerationsOutput() KafkaSpecZookeeperTemplatePodTolerationsOutput
	ToKafkaSpecZookeeperTemplatePodTolerationsOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodTolerationsOutput
}

type KafkaSpecZookeeperTemplatePodTolerationsArgs struct {
	Effect            pulumi.StringPtrInput `pulumi:"effect"`
	Key               pulumi.StringPtrInput `pulumi:"key"`
	Operator          pulumi.StringPtrInput `pulumi:"operator"`
	TolerationSeconds pulumi.IntPtrInput    `pulumi:"tolerationSeconds"`
	Value             pulumi.StringPtrInput `pulumi:"value"`
}

func (KafkaSpecZookeeperTemplatePodTolerationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTolerations)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodTolerationsArgs) ToKafkaSpecZookeeperTemplatePodTolerationsOutput() KafkaSpecZookeeperTemplatePodTolerationsOutput {
	return i.ToKafkaSpecZookeeperTemplatePodTolerationsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodTolerationsArgs) ToKafkaSpecZookeeperTemplatePodTolerationsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTolerationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodTolerationsOutput)
}

// KafkaSpecZookeeperTemplatePodTolerationsArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodTolerationsArray and KafkaSpecZookeeperTemplatePodTolerationsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodTolerationsArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodTolerationsArray{ KafkaSpecZookeeperTemplatePodTolerationsArgs{...} }
type KafkaSpecZookeeperTemplatePodTolerationsArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodTolerationsArrayOutput() KafkaSpecZookeeperTemplatePodTolerationsArrayOutput
	ToKafkaSpecZookeeperTemplatePodTolerationsArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodTolerationsArrayOutput
}

type KafkaSpecZookeeperTemplatePodTolerationsArray []KafkaSpecZookeeperTemplatePodTolerationsInput

func (KafkaSpecZookeeperTemplatePodTolerationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodTolerations)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodTolerationsArray) ToKafkaSpecZookeeperTemplatePodTolerationsArrayOutput() KafkaSpecZookeeperTemplatePodTolerationsArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodTolerationsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodTolerationsArray) ToKafkaSpecZookeeperTemplatePodTolerationsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTolerationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodTolerationsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodTolerationsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodTolerationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTolerations)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodTolerationsOutput) ToKafkaSpecZookeeperTemplatePodTolerationsOutput() KafkaSpecZookeeperTemplatePodTolerationsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTolerationsOutput) ToKafkaSpecZookeeperTemplatePodTolerationsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTolerationsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTolerationsOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTolerations) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTolerationsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTolerations) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTolerationsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTolerations) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTolerationsOutput) TolerationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTolerations) *int { return v.TolerationSeconds }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTolerationsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTolerations) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodTolerationsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodTolerationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodTolerations)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodTolerationsArrayOutput) ToKafkaSpecZookeeperTemplatePodTolerationsArrayOutput() KafkaSpecZookeeperTemplatePodTolerationsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTolerationsArrayOutput) ToKafkaSpecZookeeperTemplatePodTolerationsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTolerationsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTolerationsArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodTolerationsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodTolerations {
		return vs[0].([]KafkaSpecZookeeperTemplatePodTolerations)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodTolerationsOutput)
}

type KafkaSpecZookeeperTemplatePodTolerationsPatch struct {
	Effect            *string `pulumi:"effect"`
	Key               *string `pulumi:"key"`
	Operator          *string `pulumi:"operator"`
	TolerationSeconds *int    `pulumi:"tolerationSeconds"`
	Value             *string `pulumi:"value"`
}

// KafkaSpecZookeeperTemplatePodTolerationsPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodTolerationsPatchArgs and KafkaSpecZookeeperTemplatePodTolerationsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodTolerationsPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodTolerationsPatchArgs{...}
type KafkaSpecZookeeperTemplatePodTolerationsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodTolerationsPatchOutput() KafkaSpecZookeeperTemplatePodTolerationsPatchOutput
	ToKafkaSpecZookeeperTemplatePodTolerationsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodTolerationsPatchOutput
}

type KafkaSpecZookeeperTemplatePodTolerationsPatchArgs struct {
	Effect            pulumi.StringPtrInput `pulumi:"effect"`
	Key               pulumi.StringPtrInput `pulumi:"key"`
	Operator          pulumi.StringPtrInput `pulumi:"operator"`
	TolerationSeconds pulumi.IntPtrInput    `pulumi:"tolerationSeconds"`
	Value             pulumi.StringPtrInput `pulumi:"value"`
}

func (KafkaSpecZookeeperTemplatePodTolerationsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTolerationsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodTolerationsPatchArgs) ToKafkaSpecZookeeperTemplatePodTolerationsPatchOutput() KafkaSpecZookeeperTemplatePodTolerationsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodTolerationsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodTolerationsPatchArgs) ToKafkaSpecZookeeperTemplatePodTolerationsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTolerationsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodTolerationsPatchOutput)
}

// KafkaSpecZookeeperTemplatePodTolerationsPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodTolerationsPatchArray and KafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodTolerationsPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodTolerationsPatchArray{ KafkaSpecZookeeperTemplatePodTolerationsPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodTolerationsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutput() KafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodTolerationsPatchArray []KafkaSpecZookeeperTemplatePodTolerationsPatchInput

func (KafkaSpecZookeeperTemplatePodTolerationsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodTolerationsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodTolerationsPatchArray) ToKafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutput() KafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodTolerationsPatchArray) ToKafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodTolerationsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodTolerationsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTolerationsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodTolerationsPatchOutput) ToKafkaSpecZookeeperTemplatePodTolerationsPatchOutput() KafkaSpecZookeeperTemplatePodTolerationsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTolerationsPatchOutput) ToKafkaSpecZookeeperTemplatePodTolerationsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTolerationsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTolerationsPatchOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTolerationsPatch) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTolerationsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTolerationsPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTolerationsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTolerationsPatch) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTolerationsPatchOutput) TolerationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTolerationsPatch) *int { return v.TolerationSeconds }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTolerationsPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTolerationsPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodTolerationsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutput() KafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodTolerationsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodTolerationsPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodTolerationsPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodTolerationsPatchOutput)
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraints struct {
	LabelSelector      *KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelector `pulumi:"labelSelector"`
	MatchLabelKeys     []string                                                             `pulumi:"matchLabelKeys"`
	MaxSkew            *int                                                                 `pulumi:"maxSkew"`
	MinDomains         *int                                                                 `pulumi:"minDomains"`
	NodeAffinityPolicy *string                                                              `pulumi:"nodeAffinityPolicy"`
	NodeTaintsPolicy   *string                                                              `pulumi:"nodeTaintsPolicy"`
	TopologyKey        *string                                                              `pulumi:"topologyKey"`
	WhenUnsatisfiable  *string                                                              `pulumi:"whenUnsatisfiable"`
}

// KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsInput is an input type that accepts KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArgs and KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsInput` via:
//
//	KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArgs{...}
type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput
	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArgs struct {
	LabelSelector      KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrInput `pulumi:"labelSelector"`
	MatchLabelKeys     pulumi.StringArrayInput                                                     `pulumi:"matchLabelKeys"`
	MaxSkew            pulumi.IntPtrInput                                                          `pulumi:"maxSkew"`
	MinDomains         pulumi.IntPtrInput                                                          `pulumi:"minDomains"`
	NodeAffinityPolicy pulumi.StringPtrInput                                                       `pulumi:"nodeAffinityPolicy"`
	NodeTaintsPolicy   pulumi.StringPtrInput                                                       `pulumi:"nodeTaintsPolicy"`
	TopologyKey        pulumi.StringPtrInput                                                       `pulumi:"topologyKey"`
	WhenUnsatisfiable  pulumi.StringPtrInput                                                       `pulumi:"whenUnsatisfiable"`
}

func (KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraints)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArgs) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput {
	return i.ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArgs) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput)
}

// KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArray and KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArray{ KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArgs{...} }
type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutput
	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutput
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArray []KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsInput

func (KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodTopologySpreadConstraints)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArray) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArray) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraints)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput) LabelSelector() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraints) *KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelector {
		return v.LabelSelector
	}).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraints) []string { return v.MatchLabelKeys }).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput) MaxSkew() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraints) *int { return v.MaxSkew }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput) MinDomains() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraints) *int { return v.MinDomains }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput) NodeAffinityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraints) *string { return v.NodeAffinityPolicy }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput) NodeTaintsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraints) *string { return v.NodeTaintsPolicy }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraints) *string { return v.TopologyKey }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput) WhenUnsatisfiable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraints) *string { return v.WhenUnsatisfiable }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodTopologySpreadConstraints)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodTopologySpreadConstraints {
		return vs[0].([]KafkaSpecZookeeperTemplatePodTopologySpreadConstraints)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput)
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelector struct {
	MatchExpressions []KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                                                                     `pulumi:"matchLabels"`
}

// KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorInput is an input type that accepts KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorArgs and KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorInput` via:
//
//	KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorArgs{...}
type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutput
	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutput
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorArgs struct {
	MatchExpressions KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                                                                         `pulumi:"matchLabels"`
}

func (KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelector)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorArgs) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutput {
	return i.ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorArgs) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutput)
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorArgs) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorArgs) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutput).ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorArgs, KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtr and KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput
	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput
}

type kafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrType KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorArgs

func KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtr(v *KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorArgs) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrInput {
	return (*kafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelector)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrType) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrType) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput)
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelector)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelector) *KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelector {
		return &v
	}).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelector) []KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelector)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput) Elem() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelector) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelector {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelector
		return ret
	}).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelector) []KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsInput is an input type that accepts KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs and KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsInput` via:
//
//	KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs{...}
type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput
	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput {
	return i.ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput)
}

// KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArray and KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArray{ KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs{...} }
type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput
	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArray []KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsInput

func (KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArray) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArray) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions {
		return vs[0].([]KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput)
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArgs and KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArgs{...}
type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput
	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArgs) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArgs) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput)
}

// KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArray and KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArray{ KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArray []KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchInput

func (KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArray) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArray) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput)
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatch struct {
	MatchExpressions []KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                                                                          `pulumi:"matchLabels"`
}

// KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs and KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs{...}
type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput
	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs struct {
	MatchExpressions KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                                                                              `pulumi:"matchLabels"`
}

func (KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput).ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs, KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtr and KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrType KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs

func KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtr(v *KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrType) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrType) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatch) *KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatch) []KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatch) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatch) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput) MatchExpressions() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatch) []KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatch struct {
	LabelSelector      *KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatch `pulumi:"labelSelector"`
	MatchLabelKeys     []string                                                                  `pulumi:"matchLabelKeys"`
	MaxSkew            *int                                                                      `pulumi:"maxSkew"`
	MinDomains         *int                                                                      `pulumi:"minDomains"`
	NodeAffinityPolicy *string                                                                   `pulumi:"nodeAffinityPolicy"`
	NodeTaintsPolicy   *string                                                                   `pulumi:"nodeTaintsPolicy"`
	TopologyKey        *string                                                                   `pulumi:"topologyKey"`
	WhenUnsatisfiable  *string                                                                   `pulumi:"whenUnsatisfiable"`
}

// KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArgs and KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArgs{...}
type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput
	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArgs struct {
	LabelSelector      KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrInput `pulumi:"labelSelector"`
	MatchLabelKeys     pulumi.StringArrayInput                                                          `pulumi:"matchLabelKeys"`
	MaxSkew            pulumi.IntPtrInput                                                               `pulumi:"maxSkew"`
	MinDomains         pulumi.IntPtrInput                                                               `pulumi:"minDomains"`
	NodeAffinityPolicy pulumi.StringPtrInput                                                            `pulumi:"nodeAffinityPolicy"`
	NodeTaintsPolicy   pulumi.StringPtrInput                                                            `pulumi:"nodeTaintsPolicy"`
	TopologyKey        pulumi.StringPtrInput                                                            `pulumi:"topologyKey"`
	WhenUnsatisfiable  pulumi.StringPtrInput                                                            `pulumi:"whenUnsatisfiable"`
}

func (KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArgs) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArgs) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput)
}

// KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArray and KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArray{ KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArray []KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchInput

func (KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArray) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArray) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput) LabelSelector() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatch) *KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatch {
		return v.LabelSelector
	}).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatch) []string { return v.MatchLabelKeys }).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput) MaxSkew() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatch) *int { return v.MaxSkew }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput) MinDomains() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatch) *int { return v.MinDomains }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput) NodeAffinityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatch) *string {
		return v.NodeAffinityPolicy
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput) NodeTaintsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatch) *string { return v.NodeTaintsPolicy }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatch) *string { return v.TopologyKey }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput) WhenUnsatisfiable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatch) *string {
		return v.WhenUnsatisfiable
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutput() KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput)
}

type KafkaSpecZookeeperTemplatePodVolumes struct {
	ConfigMap *KafkaSpecZookeeperTemplatePodVolumesConfigMap `pulumi:"configMap"`
	Csi       *KafkaSpecZookeeperTemplatePodVolumesCsi       `pulumi:"csi"`
	EmptyDir  *KafkaSpecZookeeperTemplatePodVolumesEmptyDir  `pulumi:"emptyDir"`
	Image     *KafkaSpecZookeeperTemplatePodVolumesImage     `pulumi:"image"`
	// Name to use for the volume. Required.
	Name                  *string                                                    `pulumi:"name"`
	PersistentVolumeClaim *KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaim `pulumi:"persistentVolumeClaim"`
	Secret                *KafkaSpecZookeeperTemplatePodVolumesSecret                `pulumi:"secret"`
}

// KafkaSpecZookeeperTemplatePodVolumesInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesArgs and KafkaSpecZookeeperTemplatePodVolumesOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesArgs{...}
type KafkaSpecZookeeperTemplatePodVolumesInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesOutput() KafkaSpecZookeeperTemplatePodVolumesOutput
	ToKafkaSpecZookeeperTemplatePodVolumesOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesOutput
}

type KafkaSpecZookeeperTemplatePodVolumesArgs struct {
	ConfigMap KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrInput `pulumi:"configMap"`
	Csi       KafkaSpecZookeeperTemplatePodVolumesCsiPtrInput       `pulumi:"csi"`
	EmptyDir  KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrInput  `pulumi:"emptyDir"`
	Image     KafkaSpecZookeeperTemplatePodVolumesImagePtrInput     `pulumi:"image"`
	// Name to use for the volume. Required.
	Name                  pulumi.StringPtrInput                                             `pulumi:"name"`
	PersistentVolumeClaim KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrInput `pulumi:"persistentVolumeClaim"`
	Secret                KafkaSpecZookeeperTemplatePodVolumesSecretPtrInput                `pulumi:"secret"`
}

func (KafkaSpecZookeeperTemplatePodVolumesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumes)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesArgs) ToKafkaSpecZookeeperTemplatePodVolumesOutput() KafkaSpecZookeeperTemplatePodVolumesOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesArgs) ToKafkaSpecZookeeperTemplatePodVolumesOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesOutput)
}

// KafkaSpecZookeeperTemplatePodVolumesArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesArray and KafkaSpecZookeeperTemplatePodVolumesArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesArray{ KafkaSpecZookeeperTemplatePodVolumesArgs{...} }
type KafkaSpecZookeeperTemplatePodVolumesArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesArrayOutput() KafkaSpecZookeeperTemplatePodVolumesArrayOutput
	ToKafkaSpecZookeeperTemplatePodVolumesArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesArrayOutput
}

type KafkaSpecZookeeperTemplatePodVolumesArray []KafkaSpecZookeeperTemplatePodVolumesInput

func (KafkaSpecZookeeperTemplatePodVolumesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodVolumes)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesArray) ToKafkaSpecZookeeperTemplatePodVolumesArrayOutput() KafkaSpecZookeeperTemplatePodVolumesArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesArray) ToKafkaSpecZookeeperTemplatePodVolumesArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesArrayOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumes)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesOutput) ToKafkaSpecZookeeperTemplatePodVolumesOutput() KafkaSpecZookeeperTemplatePodVolumesOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesOutput) ToKafkaSpecZookeeperTemplatePodVolumesOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesOutput) ConfigMap() KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumes) *KafkaSpecZookeeperTemplatePodVolumesConfigMap {
		return v.ConfigMap
	}).(KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesOutput) Csi() KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumes) *KafkaSpecZookeeperTemplatePodVolumesCsi { return v.Csi }).(KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesOutput) EmptyDir() KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumes) *KafkaSpecZookeeperTemplatePodVolumesEmptyDir {
		return v.EmptyDir
	}).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesOutput) Image() KafkaSpecZookeeperTemplatePodVolumesImagePtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumes) *KafkaSpecZookeeperTemplatePodVolumesImage {
		return v.Image
	}).(KafkaSpecZookeeperTemplatePodVolumesImagePtrOutput)
}

// Name to use for the volume. Required.
func (o KafkaSpecZookeeperTemplatePodVolumesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumes) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesOutput) PersistentVolumeClaim() KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumes) *KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaim {
		return v.PersistentVolumeClaim
	}).(KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesOutput) Secret() KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumes) *KafkaSpecZookeeperTemplatePodVolumesSecret {
		return v.Secret
	}).(KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodVolumes)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesArrayOutput) ToKafkaSpecZookeeperTemplatePodVolumesArrayOutput() KafkaSpecZookeeperTemplatePodVolumesArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesArrayOutput) ToKafkaSpecZookeeperTemplatePodVolumesArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodVolumesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodVolumes {
		return vs[0].([]KafkaSpecZookeeperTemplatePodVolumes)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodVolumesOutput)
}

// `ConfigMap` to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesConfigMap struct {
	DefaultMode *int                                                 `pulumi:"defaultMode"`
	Items       []KafkaSpecZookeeperTemplatePodVolumesConfigMapItems `pulumi:"items"`
	Name        *string                                              `pulumi:"name"`
	Optional    *bool                                                `pulumi:"optional"`
}

// KafkaSpecZookeeperTemplatePodVolumesConfigMapInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesConfigMap and KafkaSpecZookeeperTemplatePodVolumesConfigMapOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesConfigMapInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesConfigMap{ "key": KafkaSpecZookeeperTemplatePodVolumesConfigArgs{...} }
type KafkaSpecZookeeperTemplatePodVolumesConfigMapInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesConfigMapOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapOutput
	ToKafkaSpecZookeeperTemplatePodVolumesConfigMapOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapOutput
}

// `ConfigMap` to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesConfigMapArgs struct {
	DefaultMode pulumi.IntPtrInput                                           `pulumi:"defaultMode"`
	Items       KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayInput `pulumi:"items"`
	Name        pulumi.StringPtrInput                                        `pulumi:"name"`
	Optional    pulumi.BoolPtrInput                                          `pulumi:"optional"`
}

func (KafkaSpecZookeeperTemplatePodVolumesConfigMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesConfigMap)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesConfigMapArgs) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesConfigMapOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesConfigMapArgs) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesConfigMapOutput)
}

func (i KafkaSpecZookeeperTemplatePodVolumesConfigMapArgs) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesConfigMapArgs) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesConfigMapOutput).ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesConfigMapArgs, KafkaSpecZookeeperTemplatePodVolumesConfigMapPtr and KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodVolumesConfigMapArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput
	ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput
}

type kafkaSpecZookeeperTemplatePodVolumesConfigMapPtrType KafkaSpecZookeeperTemplatePodVolumesConfigMapArgs

func KafkaSpecZookeeperTemplatePodVolumesConfigMapPtr(v *KafkaSpecZookeeperTemplatePodVolumesConfigMapArgs) KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrInput {
	return (*kafkaSpecZookeeperTemplatePodVolumesConfigMapPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodVolumesConfigMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesConfigMap)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodVolumesConfigMapPtrType) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodVolumesConfigMapPtrType) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput)
}

// `ConfigMap` to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesConfigMapOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesConfigMap)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapOutput) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapOutput) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapOutput) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapOutput) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodVolumesConfigMap) *KafkaSpecZookeeperTemplatePodVolumesConfigMap {
		return &v
	}).(KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesConfigMap) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapOutput) Items() KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesConfigMap) []KafkaSpecZookeeperTemplatePodVolumesConfigMapItems {
		return v.Items
	}).(KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesConfigMap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesConfigMap) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesConfigMap)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput) Elem() KafkaSpecZookeeperTemplatePodVolumesConfigMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesConfigMap) KafkaSpecZookeeperTemplatePodVolumesConfigMap {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodVolumesConfigMap
		return ret
	}).(KafkaSpecZookeeperTemplatePodVolumesConfigMapOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesConfigMap) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput) Items() KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesConfigMap) []KafkaSpecZookeeperTemplatePodVolumesConfigMapItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesConfigMap) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesConfigMap) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesConfigMapItems struct {
	Key  *string `pulumi:"key"`
	Mode *int    `pulumi:"mode"`
	Path *string `pulumi:"path"`
}

// KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArgs and KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArgs{...}
type KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutput
	ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutput
}

type KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArgs struct {
	Key  pulumi.StringPtrInput `pulumi:"key"`
	Mode pulumi.IntPtrInput    `pulumi:"mode"`
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesConfigMapItems)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArgs) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArgs) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutput)
}

// KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArray and KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArray{ KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArgs{...} }
type KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutput
	ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutput
}

type KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArray []KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsInput

func (KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodVolumesConfigMapItems)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArray) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArray) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesConfigMapItems)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutput) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutput) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesConfigMapItems) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesConfigMapItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesConfigMapItems) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodVolumesConfigMapItems)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutput) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutput) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodVolumesConfigMapItems {
		return vs[0].([]KafkaSpecZookeeperTemplatePodVolumesConfigMapItems)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatch struct {
	Key  *string `pulumi:"key"`
	Mode *int    `pulumi:"mode"`
	Path *string `pulumi:"path"`
}

// KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArgs and KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArgs{...}
type KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutput
	ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutput
}

type KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArgs struct {
	Key  pulumi.StringPtrInput `pulumi:"key"`
	Mode pulumi.IntPtrInput    `pulumi:"mode"`
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutput)
}

// KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArray and KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArray{ KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArray []KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchInput

func (KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArray) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArray) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatch) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutput)
}

// `ConfigMap` to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesConfigMapPatch struct {
	DefaultMode *int                                                      `pulumi:"defaultMode"`
	Items       []KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatch `pulumi:"items"`
	Name        *string                                                   `pulumi:"name"`
	Optional    *bool                                                     `pulumi:"optional"`
}

// KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchArgs and KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchArgs{...}
type KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput
	ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput
}

// `ConfigMap` to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchArgs struct {
	DefaultMode pulumi.IntPtrInput                                                `pulumi:"defaultMode"`
	Items       KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayInput `pulumi:"items"`
	Name        pulumi.StringPtrInput                                             `pulumi:"name"`
	Optional    pulumi.BoolPtrInput                                               `pulumi:"optional"`
}

func (KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesConfigMapPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput).ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchArgs, KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtr and KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrType KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchArgs

func KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtr(v *KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchArgs) KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesConfigMapPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrType) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrType) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput)
}

// `ConfigMap` to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesConfigMapPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodVolumesConfigMapPatch) *KafkaSpecZookeeperTemplatePodVolumesConfigMapPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesConfigMapPatch) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput) Items() KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesConfigMapPatch) []KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatch {
		return v.Items
	}).(KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesConfigMapPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesConfigMapPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesConfigMapPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesConfigMapPatch) KafkaSpecZookeeperTemplatePodVolumesConfigMapPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodVolumesConfigMapPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesConfigMapPatch) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput) Items() KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesConfigMapPatch) []KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatch {
		if v == nil {
			return nil
		}
		return v.Items
	}).(KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesConfigMapPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesConfigMapPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// `CSIVolumeSource` object to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesCsi struct {
	Driver               *string                                                      `pulumi:"driver"`
	FsType               *string                                                      `pulumi:"fsType"`
	NodePublishSecretRef *KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRef `pulumi:"nodePublishSecretRef"`
	ReadOnly             *bool                                                        `pulumi:"readOnly"`
	VolumeAttributes     map[string]string                                            `pulumi:"volumeAttributes"`
}

// KafkaSpecZookeeperTemplatePodVolumesCsiInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesCsiArgs and KafkaSpecZookeeperTemplatePodVolumesCsiOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesCsiInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesCsiArgs{...}
type KafkaSpecZookeeperTemplatePodVolumesCsiInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesCsiOutput() KafkaSpecZookeeperTemplatePodVolumesCsiOutput
	ToKafkaSpecZookeeperTemplatePodVolumesCsiOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiOutput
}

// `CSIVolumeSource` object to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesCsiArgs struct {
	Driver               pulumi.StringPtrInput                                               `pulumi:"driver"`
	FsType               pulumi.StringPtrInput                                               `pulumi:"fsType"`
	NodePublishSecretRef KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrInput `pulumi:"nodePublishSecretRef"`
	ReadOnly             pulumi.BoolPtrInput                                                 `pulumi:"readOnly"`
	VolumeAttributes     pulumi.StringMapInput                                               `pulumi:"volumeAttributes"`
}

func (KafkaSpecZookeeperTemplatePodVolumesCsiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesCsi)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesCsiArgs) ToKafkaSpecZookeeperTemplatePodVolumesCsiOutput() KafkaSpecZookeeperTemplatePodVolumesCsiOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesCsiOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesCsiArgs) ToKafkaSpecZookeeperTemplatePodVolumesCsiOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesCsiOutput)
}

func (i KafkaSpecZookeeperTemplatePodVolumesCsiArgs) ToKafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput() KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesCsiPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesCsiArgs) ToKafkaSpecZookeeperTemplatePodVolumesCsiPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesCsiOutput).ToKafkaSpecZookeeperTemplatePodVolumesCsiPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodVolumesCsiPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesCsiArgs, KafkaSpecZookeeperTemplatePodVolumesCsiPtr and KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesCsiPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodVolumesCsiArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodVolumesCsiPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput() KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput
	ToKafkaSpecZookeeperTemplatePodVolumesCsiPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput
}

type kafkaSpecZookeeperTemplatePodVolumesCsiPtrType KafkaSpecZookeeperTemplatePodVolumesCsiArgs

func KafkaSpecZookeeperTemplatePodVolumesCsiPtr(v *KafkaSpecZookeeperTemplatePodVolumesCsiArgs) KafkaSpecZookeeperTemplatePodVolumesCsiPtrInput {
	return (*kafkaSpecZookeeperTemplatePodVolumesCsiPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodVolumesCsiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesCsi)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodVolumesCsiPtrType) ToKafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput() KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesCsiPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodVolumesCsiPtrType) ToKafkaSpecZookeeperTemplatePodVolumesCsiPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput)
}

// `CSIVolumeSource` object to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesCsiOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesCsiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesCsi)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiOutput() KafkaSpecZookeeperTemplatePodVolumesCsiOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput() KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodVolumesCsiPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodVolumesCsi) *KafkaSpecZookeeperTemplatePodVolumesCsi {
		return &v
	}).(KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesCsi) *string { return v.Driver }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesCsi) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiOutput) NodePublishSecretRef() KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesCsi) *KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRef {
		return v.NodePublishSecretRef
	}).(KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesCsi) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiOutput) VolumeAttributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesCsi) map[string]string { return v.VolumeAttributes }).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesCsi)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput() KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput) Elem() KafkaSpecZookeeperTemplatePodVolumesCsiOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesCsi) KafkaSpecZookeeperTemplatePodVolumesCsi {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodVolumesCsi
		return ret
	}).(KafkaSpecZookeeperTemplatePodVolumesCsiOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesCsi) *string {
		if v == nil {
			return nil
		}
		return v.Driver
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesCsi) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput) NodePublishSecretRef() KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesCsi) *KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRef {
		if v == nil {
			return nil
		}
		return v.NodePublishSecretRef
	}).(KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesCsi) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput) VolumeAttributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesCsi) map[string]string {
		if v == nil {
			return nil
		}
		return v.VolumeAttributes
	}).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRef struct {
	Name *string `pulumi:"name"`
}

// KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefArgs and KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefArgs{...}
type KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutput() KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutput
	ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutput
}

type KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRef)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefArgs) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutput() KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefArgs) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutput)
}

func (i KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefArgs) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput() KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefArgs) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutput).ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefArgs, KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtr and KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput() KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput
	ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput
}

type kafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrType KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefArgs

func KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtr(v *KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefArgs) KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrInput {
	return (*kafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRef)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrType) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput() KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrType) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRef)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutput() KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput() KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRef) *KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRef {
		return &v
	}).(KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRef)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput() KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput) Elem() KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRef) KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRef {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRef
		return ret
	}).(KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatch struct {
	Name *string `pulumi:"name"`
}

// KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchArgs and KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchArgs{...}
type KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutput() KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutput
	ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutput
}

type KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutput() KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutput).ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchArgs, KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtr and KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrType KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchArgs

func KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtr(v *KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchArgs) KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrType) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrType) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutput() KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatch) *KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatch) KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// `CSIVolumeSource` object to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesCsiPatch struct {
	Driver               *string                                                           `pulumi:"driver"`
	FsType               *string                                                           `pulumi:"fsType"`
	NodePublishSecretRef *KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatch `pulumi:"nodePublishSecretRef"`
	ReadOnly             *bool                                                             `pulumi:"readOnly"`
	VolumeAttributes     map[string]string                                                 `pulumi:"volumeAttributes"`
}

// KafkaSpecZookeeperTemplatePodVolumesCsiPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesCsiPatchArgs and KafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesCsiPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesCsiPatchArgs{...}
type KafkaSpecZookeeperTemplatePodVolumesCsiPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput() KafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput
	ToKafkaSpecZookeeperTemplatePodVolumesCsiPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput
}

// `CSIVolumeSource` object to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesCsiPatchArgs struct {
	Driver               pulumi.StringPtrInput                                                    `pulumi:"driver"`
	FsType               pulumi.StringPtrInput                                                    `pulumi:"fsType"`
	NodePublishSecretRef KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrInput `pulumi:"nodePublishSecretRef"`
	ReadOnly             pulumi.BoolPtrInput                                                      `pulumi:"readOnly"`
	VolumeAttributes     pulumi.StringMapInput                                                    `pulumi:"volumeAttributes"`
}

func (KafkaSpecZookeeperTemplatePodVolumesCsiPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesCsiPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesCsiPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput() KafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesCsiPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesCsiPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesCsiPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodVolumesCsiPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesCsiPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput).ToKafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesCsiPatchArgs, KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtr and KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodVolumesCsiPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrType KafkaSpecZookeeperTemplatePodVolumesCsiPatchArgs

func KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtr(v *KafkaSpecZookeeperTemplatePodVolumesCsiPatchArgs) KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesCsiPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrType) ToKafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrType) ToKafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput)
}

// `CSIVolumeSource` object to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesCsiPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput() KafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodVolumesCsiPatch) *KafkaSpecZookeeperTemplatePodVolumesCsiPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesCsiPatch) *string { return v.Driver }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesCsiPatch) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput) NodePublishSecretRef() KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesCsiPatch) *KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatch {
		return v.NodePublishSecretRef
	}).(KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesCsiPatch) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput) VolumeAttributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesCsiPatch) map[string]string { return v.VolumeAttributes }).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesCsiPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesCsiPatch) KafkaSpecZookeeperTemplatePodVolumesCsiPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodVolumesCsiPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesCsiPatch) *string {
		if v == nil {
			return nil
		}
		return v.Driver
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesCsiPatch) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput) NodePublishSecretRef() KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesCsiPatch) *KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.NodePublishSecretRef
	}).(KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesCsiPatch) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput) VolumeAttributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesCsiPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.VolumeAttributes
	}).(pulumi.StringMapOutput)
}

// `EmptyDir` to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesEmptyDir struct {
	Medium    *string                                                `pulumi:"medium"`
	SizeLimit *KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimit `pulumi:"sizeLimit"`
}

// KafkaSpecZookeeperTemplatePodVolumesEmptyDirInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesEmptyDirArgs and KafkaSpecZookeeperTemplatePodVolumesEmptyDirOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesEmptyDirInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesEmptyDirArgs{...}
type KafkaSpecZookeeperTemplatePodVolumesEmptyDirInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirOutput
	ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirOutput
}

// `EmptyDir` to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesEmptyDirArgs struct {
	Medium    pulumi.StringPtrInput                                         `pulumi:"medium"`
	SizeLimit KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrInput `pulumi:"sizeLimit"`
}

func (KafkaSpecZookeeperTemplatePodVolumesEmptyDirArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesEmptyDir)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesEmptyDirArgs) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesEmptyDirArgs) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirOutput)
}

func (i KafkaSpecZookeeperTemplatePodVolumesEmptyDirArgs) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesEmptyDirArgs) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirOutput).ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesEmptyDirArgs, KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtr and KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodVolumesEmptyDirArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput
	ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput
}

type kafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrType KafkaSpecZookeeperTemplatePodVolumesEmptyDirArgs

func KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtr(v *KafkaSpecZookeeperTemplatePodVolumesEmptyDirArgs) KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrInput {
	return (*kafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesEmptyDir)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrType) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrType) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput)
}

// `EmptyDir` to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesEmptyDirOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesEmptyDirOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesEmptyDir)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodVolumesEmptyDir) *KafkaSpecZookeeperTemplatePodVolumesEmptyDir {
		return &v
	}).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesEmptyDir) *string { return v.Medium }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirOutput) SizeLimit() KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesEmptyDir) *KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimit {
		return v.SizeLimit
	}).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesEmptyDir)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput) Elem() KafkaSpecZookeeperTemplatePodVolumesEmptyDirOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesEmptyDir) KafkaSpecZookeeperTemplatePodVolumesEmptyDir {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodVolumesEmptyDir
		return ret
	}).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesEmptyDir) *string {
		if v == nil {
			return nil
		}
		return v.Medium
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput) SizeLimit() KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesEmptyDir) *KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimit {
		if v == nil {
			return nil
		}
		return v.SizeLimit
	}).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput)
}

// `EmptyDir` to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatch struct {
	Medium    *string                                                     `pulumi:"medium"`
	SizeLimit *KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatch `pulumi:"sizeLimit"`
}

// KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchArgs and KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchArgs{...}
type KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutput
	ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutput
}

// `EmptyDir` to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchArgs struct {
	Medium    pulumi.StringPtrInput                                              `pulumi:"medium"`
	SizeLimit KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrInput `pulumi:"sizeLimit"`
}

func (KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutput).ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchArgs, KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtr and KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrType KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchArgs

func KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtr(v *KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchArgs) KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrType) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrType) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput)
}

// `EmptyDir` to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatch) *KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatch) *string { return v.Medium }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutput) SizeLimit() KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatch) *KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatch {
		return v.SizeLimit
	}).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatch) KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatch) *string {
		if v == nil {
			return nil
		}
		return v.Medium
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput) SizeLimit() KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatch) *KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatch {
		if v == nil {
			return nil
		}
		return v.SizeLimit
	}).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimit struct {
	Amount *string `pulumi:"amount"`
	Format *string `pulumi:"format"`
}

// KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitArgs and KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitArgs{...}
type KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutput
	ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutput
}

type KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitArgs struct {
	Amount pulumi.StringPtrInput `pulumi:"amount"`
	Format pulumi.StringPtrInput `pulumi:"format"`
}

func (KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimit)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitArgs) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitArgs) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutput)
}

func (i KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitArgs) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitArgs) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutput).ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitArgs, KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtr and KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput
	ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput
}

type kafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrType KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitArgs

func KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtr(v *KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitArgs) KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrInput {
	return (*kafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimit)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrType) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrType) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimit)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimit) *KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimit {
		return &v
	}).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutput) Amount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimit) *string { return v.Amount }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimit) *string { return v.Format }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimit)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput) Elem() KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimit) KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimit {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimit
		return ret
	}).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput) Amount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimit) *string {
		if v == nil {
			return nil
		}
		return v.Amount
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimit) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatch struct {
	Amount *string `pulumi:"amount"`
	Format *string `pulumi:"format"`
}

// KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchArgs and KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchArgs{...}
type KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutput
	ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutput
}

type KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchArgs struct {
	Amount pulumi.StringPtrInput `pulumi:"amount"`
	Format pulumi.StringPtrInput `pulumi:"format"`
}

func (KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutput).ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchArgs, KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtr and KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrType KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchArgs

func KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtr(v *KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchArgs) KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrType) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrType) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatch) *KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutput) Amount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatch) *string { return v.Amount }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatch) *string { return v.Format }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatch) KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput) Amount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatch) *string {
		if v == nil {
			return nil
		}
		return v.Amount
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatch) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

// `ImageVolumeSource` object to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesImage struct {
	PullPolicy *string `pulumi:"pullPolicy"`
	Reference  *string `pulumi:"reference"`
}

// KafkaSpecZookeeperTemplatePodVolumesImageInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesImageArgs and KafkaSpecZookeeperTemplatePodVolumesImageOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesImageInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesImageArgs{...}
type KafkaSpecZookeeperTemplatePodVolumesImageInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesImageOutput() KafkaSpecZookeeperTemplatePodVolumesImageOutput
	ToKafkaSpecZookeeperTemplatePodVolumesImageOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesImageOutput
}

// `ImageVolumeSource` object to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesImageArgs struct {
	PullPolicy pulumi.StringPtrInput `pulumi:"pullPolicy"`
	Reference  pulumi.StringPtrInput `pulumi:"reference"`
}

func (KafkaSpecZookeeperTemplatePodVolumesImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesImage)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesImageArgs) ToKafkaSpecZookeeperTemplatePodVolumesImageOutput() KafkaSpecZookeeperTemplatePodVolumesImageOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesImageOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesImageArgs) ToKafkaSpecZookeeperTemplatePodVolumesImageOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesImageOutput)
}

func (i KafkaSpecZookeeperTemplatePodVolumesImageArgs) ToKafkaSpecZookeeperTemplatePodVolumesImagePtrOutput() KafkaSpecZookeeperTemplatePodVolumesImagePtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesImagePtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesImageArgs) ToKafkaSpecZookeeperTemplatePodVolumesImagePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesImageOutput).ToKafkaSpecZookeeperTemplatePodVolumesImagePtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodVolumesImagePtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesImageArgs, KafkaSpecZookeeperTemplatePodVolumesImagePtr and KafkaSpecZookeeperTemplatePodVolumesImagePtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesImagePtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodVolumesImageArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodVolumesImagePtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesImagePtrOutput() KafkaSpecZookeeperTemplatePodVolumesImagePtrOutput
	ToKafkaSpecZookeeperTemplatePodVolumesImagePtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesImagePtrOutput
}

type kafkaSpecZookeeperTemplatePodVolumesImagePtrType KafkaSpecZookeeperTemplatePodVolumesImageArgs

func KafkaSpecZookeeperTemplatePodVolumesImagePtr(v *KafkaSpecZookeeperTemplatePodVolumesImageArgs) KafkaSpecZookeeperTemplatePodVolumesImagePtrInput {
	return (*kafkaSpecZookeeperTemplatePodVolumesImagePtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodVolumesImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesImage)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodVolumesImagePtrType) ToKafkaSpecZookeeperTemplatePodVolumesImagePtrOutput() KafkaSpecZookeeperTemplatePodVolumesImagePtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesImagePtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodVolumesImagePtrType) ToKafkaSpecZookeeperTemplatePodVolumesImagePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesImagePtrOutput)
}

// `ImageVolumeSource` object to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesImageOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesImage)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesImageOutput) ToKafkaSpecZookeeperTemplatePodVolumesImageOutput() KafkaSpecZookeeperTemplatePodVolumesImageOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesImageOutput) ToKafkaSpecZookeeperTemplatePodVolumesImageOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesImageOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesImageOutput) ToKafkaSpecZookeeperTemplatePodVolumesImagePtrOutput() KafkaSpecZookeeperTemplatePodVolumesImagePtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodVolumesImagePtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodVolumesImageOutput) ToKafkaSpecZookeeperTemplatePodVolumesImagePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodVolumesImage) *KafkaSpecZookeeperTemplatePodVolumesImage {
		return &v
	}).(KafkaSpecZookeeperTemplatePodVolumesImagePtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesImageOutput) PullPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesImage) *string { return v.PullPolicy }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesImageOutput) Reference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesImage) *string { return v.Reference }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesImagePtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesImage)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesImagePtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesImagePtrOutput() KafkaSpecZookeeperTemplatePodVolumesImagePtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesImagePtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesImagePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesImagePtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesImagePtrOutput) Elem() KafkaSpecZookeeperTemplatePodVolumesImageOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesImage) KafkaSpecZookeeperTemplatePodVolumesImage {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodVolumesImage
		return ret
	}).(KafkaSpecZookeeperTemplatePodVolumesImageOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesImagePtrOutput) PullPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesImage) *string {
		if v == nil {
			return nil
		}
		return v.PullPolicy
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesImagePtrOutput) Reference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesImage) *string {
		if v == nil {
			return nil
		}
		return v.Reference
	}).(pulumi.StringPtrOutput)
}

// `ImageVolumeSource` object to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesImagePatch struct {
	PullPolicy *string `pulumi:"pullPolicy"`
	Reference  *string `pulumi:"reference"`
}

// KafkaSpecZookeeperTemplatePodVolumesImagePatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesImagePatchArgs and KafkaSpecZookeeperTemplatePodVolumesImagePatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesImagePatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesImagePatchArgs{...}
type KafkaSpecZookeeperTemplatePodVolumesImagePatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesImagePatchOutput() KafkaSpecZookeeperTemplatePodVolumesImagePatchOutput
	ToKafkaSpecZookeeperTemplatePodVolumesImagePatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesImagePatchOutput
}

// `ImageVolumeSource` object to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesImagePatchArgs struct {
	PullPolicy pulumi.StringPtrInput `pulumi:"pullPolicy"`
	Reference  pulumi.StringPtrInput `pulumi:"reference"`
}

func (KafkaSpecZookeeperTemplatePodVolumesImagePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesImagePatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesImagePatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesImagePatchOutput() KafkaSpecZookeeperTemplatePodVolumesImagePatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesImagePatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesImagePatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesImagePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesImagePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesImagePatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodVolumesImagePatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesImagePatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesImagePatchOutput).ToKafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesImagePatchArgs, KafkaSpecZookeeperTemplatePodVolumesImagePatchPtr and KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodVolumesImagePatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodVolumesImagePatchPtrType KafkaSpecZookeeperTemplatePodVolumesImagePatchArgs

func KafkaSpecZookeeperTemplatePodVolumesImagePatchPtr(v *KafkaSpecZookeeperTemplatePodVolumesImagePatchArgs) KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodVolumesImagePatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodVolumesImagePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesImagePatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodVolumesImagePatchPtrType) ToKafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodVolumesImagePatchPtrType) ToKafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput)
}

// `ImageVolumeSource` object to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesImagePatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesImagePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesImagePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesImagePatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesImagePatchOutput() KafkaSpecZookeeperTemplatePodVolumesImagePatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesImagePatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesImagePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesImagePatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesImagePatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodVolumesImagePatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodVolumesImagePatch) *KafkaSpecZookeeperTemplatePodVolumesImagePatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesImagePatchOutput) PullPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesImagePatch) *string { return v.PullPolicy }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesImagePatchOutput) Reference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesImagePatch) *string { return v.Reference }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesImagePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodVolumesImagePatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesImagePatch) KafkaSpecZookeeperTemplatePodVolumesImagePatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodVolumesImagePatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodVolumesImagePatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput) PullPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesImagePatch) *string {
		if v == nil {
			return nil
		}
		return v.PullPolicy
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput) Reference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesImagePatch) *string {
		if v == nil {
			return nil
		}
		return v.Reference
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesPatch struct {
	ConfigMap *KafkaSpecZookeeperTemplatePodVolumesConfigMapPatch `pulumi:"configMap"`
	Csi       *KafkaSpecZookeeperTemplatePodVolumesCsiPatch       `pulumi:"csi"`
	EmptyDir  *KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatch  `pulumi:"emptyDir"`
	Image     *KafkaSpecZookeeperTemplatePodVolumesImagePatch     `pulumi:"image"`
	// Name to use for the volume. Required.
	Name                  *string                                                         `pulumi:"name"`
	PersistentVolumeClaim *KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatch `pulumi:"persistentVolumeClaim"`
	Secret                *KafkaSpecZookeeperTemplatePodVolumesSecretPatch                `pulumi:"secret"`
}

// KafkaSpecZookeeperTemplatePodVolumesPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesPatchArgs and KafkaSpecZookeeperTemplatePodVolumesPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesPatchArgs{...}
type KafkaSpecZookeeperTemplatePodVolumesPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesPatchOutput() KafkaSpecZookeeperTemplatePodVolumesPatchOutput
	ToKafkaSpecZookeeperTemplatePodVolumesPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesPatchOutput
}

type KafkaSpecZookeeperTemplatePodVolumesPatchArgs struct {
	ConfigMap KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrInput `pulumi:"configMap"`
	Csi       KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrInput       `pulumi:"csi"`
	EmptyDir  KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrInput  `pulumi:"emptyDir"`
	Image     KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrInput     `pulumi:"image"`
	// Name to use for the volume. Required.
	Name                  pulumi.StringPtrInput                                                  `pulumi:"name"`
	PersistentVolumeClaim KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrInput `pulumi:"persistentVolumeClaim"`
	Secret                KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrInput                `pulumi:"secret"`
}

func (KafkaSpecZookeeperTemplatePodVolumesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesPatchOutput() KafkaSpecZookeeperTemplatePodVolumesPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesPatchOutput)
}

// KafkaSpecZookeeperTemplatePodVolumesPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesPatchArray and KafkaSpecZookeeperTemplatePodVolumesPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesPatchArray{ KafkaSpecZookeeperTemplatePodVolumesPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodVolumesPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesPatchArrayOutput() KafkaSpecZookeeperTemplatePodVolumesPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodVolumesPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodVolumesPatchArray []KafkaSpecZookeeperTemplatePodVolumesPatchInput

func (KafkaSpecZookeeperTemplatePodVolumesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodVolumesPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesPatchArray) ToKafkaSpecZookeeperTemplatePodVolumesPatchArrayOutput() KafkaSpecZookeeperTemplatePodVolumesPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesPatchArray) ToKafkaSpecZookeeperTemplatePodVolumesPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesPatchOutput() KafkaSpecZookeeperTemplatePodVolumesPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesPatchOutput) ConfigMap() KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesPatch) *KafkaSpecZookeeperTemplatePodVolumesConfigMapPatch {
		return v.ConfigMap
	}).(KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesPatchOutput) Csi() KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesPatch) *KafkaSpecZookeeperTemplatePodVolumesCsiPatch {
		return v.Csi
	}).(KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesPatchOutput) EmptyDir() KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesPatch) *KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatch {
		return v.EmptyDir
	}).(KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesPatchOutput) Image() KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesPatch) *KafkaSpecZookeeperTemplatePodVolumesImagePatch {
		return v.Image
	}).(KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput)
}

// Name to use for the volume. Required.
func (o KafkaSpecZookeeperTemplatePodVolumesPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesPatchOutput) PersistentVolumeClaim() KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesPatch) *KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatch {
		return v.PersistentVolumeClaim
	}).(KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesPatchOutput) Secret() KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesPatch) *KafkaSpecZookeeperTemplatePodVolumesSecretPatch {
		return v.Secret
	}).(KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodVolumesPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodVolumesPatchArrayOutput() KafkaSpecZookeeperTemplatePodVolumesPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodVolumesPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodVolumesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodVolumesPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodVolumesPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodVolumesPatchOutput)
}

// `PersistentVolumeClaim` object to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaim struct {
	ClaimName *string `pulumi:"claimName"`
	ReadOnly  *bool   `pulumi:"readOnly"`
}

// KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimArgs and KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimArgs{...}
type KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutput() KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutput
	ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutput
}

// `PersistentVolumeClaim` object to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimArgs struct {
	ClaimName pulumi.StringPtrInput `pulumi:"claimName"`
	ReadOnly  pulumi.BoolPtrInput   `pulumi:"readOnly"`
}

func (KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimArgs) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutput() KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimArgs) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutput)
}

func (i KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimArgs) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput() KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimArgs) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutput).ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimArgs, KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtr and KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput() KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput
	ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput
}

type kafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrType KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimArgs

func KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtr(v *KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimArgs) KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrInput {
	return (*kafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrType) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput() KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrType) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput)
}

// `PersistentVolumeClaim` object to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutput) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutput() KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutput) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutput) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput() KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutput) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaim) *KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaim {
		return &v
	}).(KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutput) ClaimName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaim) *string { return v.ClaimName }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaim) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput() KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput) Elem() KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaim) KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaim {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaim
		return ret
	}).(KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput) ClaimName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaim) *string {
		if v == nil {
			return nil
		}
		return v.ClaimName
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaim) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// `PersistentVolumeClaim` object to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatch struct {
	ClaimName *string `pulumi:"claimName"`
	ReadOnly  *bool   `pulumi:"readOnly"`
}

// KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchArgs and KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchArgs{...}
type KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutput() KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutput
	ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutput
}

// `PersistentVolumeClaim` object to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchArgs struct {
	ClaimName pulumi.StringPtrInput `pulumi:"claimName"`
	ReadOnly  pulumi.BoolPtrInput   `pulumi:"readOnly"`
}

func (KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutput() KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutput).ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchArgs, KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtr and KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrType KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchArgs

func KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtr(v *KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchArgs) KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrType) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrType) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput)
}

// `PersistentVolumeClaim` object to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutput() KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatch) *KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutput) ClaimName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatch) *string { return v.ClaimName }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatch) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatch) KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput) ClaimName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatch) *string {
		if v == nil {
			return nil
		}
		return v.ClaimName
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatch) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// `Secret` to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesSecret struct {
	DefaultMode *int                                              `pulumi:"defaultMode"`
	Items       []KafkaSpecZookeeperTemplatePodVolumesSecretItems `pulumi:"items"`
	Optional    *bool                                             `pulumi:"optional"`
	SecretName  *string                                           `pulumi:"secretName"`
}

// KafkaSpecZookeeperTemplatePodVolumesSecretInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesSecretArgs and KafkaSpecZookeeperTemplatePodVolumesSecretOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesSecretInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesSecretArgs{...}
type KafkaSpecZookeeperTemplatePodVolumesSecretInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesSecretOutput() KafkaSpecZookeeperTemplatePodVolumesSecretOutput
	ToKafkaSpecZookeeperTemplatePodVolumesSecretOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretOutput
}

// `Secret` to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesSecretArgs struct {
	DefaultMode pulumi.IntPtrInput                                        `pulumi:"defaultMode"`
	Items       KafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayInput `pulumi:"items"`
	Optional    pulumi.BoolPtrInput                                       `pulumi:"optional"`
	SecretName  pulumi.StringPtrInput                                     `pulumi:"secretName"`
}

func (KafkaSpecZookeeperTemplatePodVolumesSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesSecret)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesSecretArgs) ToKafkaSpecZookeeperTemplatePodVolumesSecretOutput() KafkaSpecZookeeperTemplatePodVolumesSecretOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesSecretOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesSecretArgs) ToKafkaSpecZookeeperTemplatePodVolumesSecretOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesSecretOutput)
}

func (i KafkaSpecZookeeperTemplatePodVolumesSecretArgs) ToKafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput() KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesSecretPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesSecretArgs) ToKafkaSpecZookeeperTemplatePodVolumesSecretPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesSecretOutput).ToKafkaSpecZookeeperTemplatePodVolumesSecretPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodVolumesSecretPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesSecretArgs, KafkaSpecZookeeperTemplatePodVolumesSecretPtr and KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesSecretPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodVolumesSecretArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodVolumesSecretPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput() KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput
	ToKafkaSpecZookeeperTemplatePodVolumesSecretPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput
}

type kafkaSpecZookeeperTemplatePodVolumesSecretPtrType KafkaSpecZookeeperTemplatePodVolumesSecretArgs

func KafkaSpecZookeeperTemplatePodVolumesSecretPtr(v *KafkaSpecZookeeperTemplatePodVolumesSecretArgs) KafkaSpecZookeeperTemplatePodVolumesSecretPtrInput {
	return (*kafkaSpecZookeeperTemplatePodVolumesSecretPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodVolumesSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesSecret)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodVolumesSecretPtrType) ToKafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput() KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesSecretPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodVolumesSecretPtrType) ToKafkaSpecZookeeperTemplatePodVolumesSecretPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput)
}

// `Secret` to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesSecretOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesSecret)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretOutput) ToKafkaSpecZookeeperTemplatePodVolumesSecretOutput() KafkaSpecZookeeperTemplatePodVolumesSecretOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretOutput) ToKafkaSpecZookeeperTemplatePodVolumesSecretOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretOutput) ToKafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput() KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodVolumesSecretPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretOutput) ToKafkaSpecZookeeperTemplatePodVolumesSecretPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodVolumesSecret) *KafkaSpecZookeeperTemplatePodVolumesSecret {
		return &v
	}).(KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesSecret) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretOutput) Items() KafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesSecret) []KafkaSpecZookeeperTemplatePodVolumesSecretItems {
		return v.Items
	}).(KafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesSecret) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesSecret) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesSecret)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput() KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesSecretPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput) Elem() KafkaSpecZookeeperTemplatePodVolumesSecretOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesSecret) KafkaSpecZookeeperTemplatePodVolumesSecret {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodVolumesSecret
		return ret
	}).(KafkaSpecZookeeperTemplatePodVolumesSecretOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesSecret) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput) Items() KafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesSecret) []KafkaSpecZookeeperTemplatePodVolumesSecretItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(KafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesSecret) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesSecret) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesSecretItems struct {
	Key  *string `pulumi:"key"`
	Mode *int    `pulumi:"mode"`
	Path *string `pulumi:"path"`
}

// KafkaSpecZookeeperTemplatePodVolumesSecretItemsInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesSecretItemsArgs and KafkaSpecZookeeperTemplatePodVolumesSecretItemsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesSecretItemsInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesSecretItemsArgs{...}
type KafkaSpecZookeeperTemplatePodVolumesSecretItemsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsOutput() KafkaSpecZookeeperTemplatePodVolumesSecretItemsOutput
	ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretItemsOutput
}

type KafkaSpecZookeeperTemplatePodVolumesSecretItemsArgs struct {
	Key  pulumi.StringPtrInput `pulumi:"key"`
	Mode pulumi.IntPtrInput    `pulumi:"mode"`
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (KafkaSpecZookeeperTemplatePodVolumesSecretItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesSecretItems)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesSecretItemsArgs) ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsOutput() KafkaSpecZookeeperTemplatePodVolumesSecretItemsOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesSecretItemsArgs) ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesSecretItemsOutput)
}

// KafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesSecretItemsArray and KafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesSecretItemsArray{ KafkaSpecZookeeperTemplatePodVolumesSecretItemsArgs{...} }
type KafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutput() KafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutput
	ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutput
}

type KafkaSpecZookeeperTemplatePodVolumesSecretItemsArray []KafkaSpecZookeeperTemplatePodVolumesSecretItemsInput

func (KafkaSpecZookeeperTemplatePodVolumesSecretItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodVolumesSecretItems)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesSecretItemsArray) ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutput() KafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesSecretItemsArray) ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesSecretItemsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesSecretItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesSecretItems)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretItemsOutput) ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsOutput() KafkaSpecZookeeperTemplatePodVolumesSecretItemsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretItemsOutput) ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretItemsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretItemsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesSecretItems) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesSecretItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretItemsOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesSecretItems) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodVolumesSecretItems)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutput) ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutput() KafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutput) ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodVolumesSecretItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodVolumesSecretItems {
		return vs[0].([]KafkaSpecZookeeperTemplatePodVolumesSecretItems)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodVolumesSecretItemsOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatch struct {
	Key  *string `pulumi:"key"`
	Mode *int    `pulumi:"mode"`
	Path *string `pulumi:"path"`
}

// KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArgs and KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArgs{...}
type KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutput() KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutput
	ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutput
}

type KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArgs struct {
	Key  pulumi.StringPtrInput `pulumi:"key"`
	Mode pulumi.IntPtrInput    `pulumi:"mode"`
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutput() KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutput)
}

// KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArray and KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArray{ KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArgs{...} }
type KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutput() KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutput
	ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutput
}

type KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArray []KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchInput

func (KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArray) ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutput() KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArray) ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutput() KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatch) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutput() KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutput) ToKafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatch {
		return vs[0].([]KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutput)
}

// `Secret` to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesSecretPatch struct {
	DefaultMode *int                                                   `pulumi:"defaultMode"`
	Items       []KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatch `pulumi:"items"`
	Optional    *bool                                                  `pulumi:"optional"`
	SecretName  *string                                                `pulumi:"secretName"`
}

// KafkaSpecZookeeperTemplatePodVolumesSecretPatchInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesSecretPatchArgs and KafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesSecretPatchInput` via:
//
//	KafkaSpecZookeeperTemplatePodVolumesSecretPatchArgs{...}
type KafkaSpecZookeeperTemplatePodVolumesSecretPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput() KafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput
	ToKafkaSpecZookeeperTemplatePodVolumesSecretPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput
}

// `Secret` to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesSecretPatchArgs struct {
	DefaultMode pulumi.IntPtrInput                                             `pulumi:"defaultMode"`
	Items       KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayInput `pulumi:"items"`
	Optional    pulumi.BoolPtrInput                                            `pulumi:"optional"`
	SecretName  pulumi.StringPtrInput                                          `pulumi:"secretName"`
}

func (KafkaSpecZookeeperTemplatePodVolumesSecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesSecretPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplatePodVolumesSecretPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput() KafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesSecretPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesSecretPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesSecretPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput)
}

func (i KafkaSpecZookeeperTemplatePodVolumesSecretPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplatePodVolumesSecretPatchArgs) ToKafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput).ToKafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplatePodVolumesSecretPatchArgs, KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtr and KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplatePodVolumesSecretPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput
	ToKafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput
}

type kafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrType KafkaSpecZookeeperTemplatePodVolumesSecretPatchArgs

func KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtr(v *KafkaSpecZookeeperTemplatePodVolumesSecretPatchArgs) KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrInput {
	return (*kafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesSecretPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrType) ToKafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrType) ToKafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput)
}

// `Secret` to use to populate the volume.
type KafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesSecretPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput() KafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesSecretPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput) ToKafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplatePodVolumesSecretPatch) *KafkaSpecZookeeperTemplatePodVolumesSecretPatch {
		return &v
	}).(KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesSecretPatch) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput) Items() KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesSecretPatch) []KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatch {
		return v.Items
	}).(KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesSecretPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplatePodVolumesSecretPatch) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplatePodVolumesSecretPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput() KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput) ToKafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput) Elem() KafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesSecretPatch) KafkaSpecZookeeperTemplatePodVolumesSecretPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplatePodVolumesSecretPatch
		return ret
	}).(KafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesSecretPatch) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput) Items() KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesSecretPatch) []KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatch {
		if v == nil {
			return nil
		}
		return v.Items
	}).(KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesSecretPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplatePodVolumesSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// Template for the ZooKeeper service account.
type KafkaSpecZookeeperTemplateServiceAccount struct {
	Metadata *KafkaSpecZookeeperTemplateServiceAccountMetadata `pulumi:"metadata"`
}

// KafkaSpecZookeeperTemplateServiceAccountInput is an input type that accepts KafkaSpecZookeeperTemplateServiceAccountArgs and KafkaSpecZookeeperTemplateServiceAccountOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateServiceAccountInput` via:
//
//	KafkaSpecZookeeperTemplateServiceAccountArgs{...}
type KafkaSpecZookeeperTemplateServiceAccountInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateServiceAccountOutput() KafkaSpecZookeeperTemplateServiceAccountOutput
	ToKafkaSpecZookeeperTemplateServiceAccountOutputWithContext(context.Context) KafkaSpecZookeeperTemplateServiceAccountOutput
}

// Template for the ZooKeeper service account.
type KafkaSpecZookeeperTemplateServiceAccountArgs struct {
	Metadata KafkaSpecZookeeperTemplateServiceAccountMetadataPtrInput `pulumi:"metadata"`
}

func (KafkaSpecZookeeperTemplateServiceAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateServiceAccount)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateServiceAccountArgs) ToKafkaSpecZookeeperTemplateServiceAccountOutput() KafkaSpecZookeeperTemplateServiceAccountOutput {
	return i.ToKafkaSpecZookeeperTemplateServiceAccountOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateServiceAccountArgs) ToKafkaSpecZookeeperTemplateServiceAccountOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateServiceAccountOutput)
}

func (i KafkaSpecZookeeperTemplateServiceAccountArgs) ToKafkaSpecZookeeperTemplateServiceAccountPtrOutput() KafkaSpecZookeeperTemplateServiceAccountPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateServiceAccountPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateServiceAccountArgs) ToKafkaSpecZookeeperTemplateServiceAccountPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateServiceAccountOutput).ToKafkaSpecZookeeperTemplateServiceAccountPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateServiceAccountPtrInput is an input type that accepts KafkaSpecZookeeperTemplateServiceAccountArgs, KafkaSpecZookeeperTemplateServiceAccountPtr and KafkaSpecZookeeperTemplateServiceAccountPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateServiceAccountPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateServiceAccountArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateServiceAccountPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateServiceAccountPtrOutput() KafkaSpecZookeeperTemplateServiceAccountPtrOutput
	ToKafkaSpecZookeeperTemplateServiceAccountPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateServiceAccountPtrOutput
}

type kafkaSpecZookeeperTemplateServiceAccountPtrType KafkaSpecZookeeperTemplateServiceAccountArgs

func KafkaSpecZookeeperTemplateServiceAccountPtr(v *KafkaSpecZookeeperTemplateServiceAccountArgs) KafkaSpecZookeeperTemplateServiceAccountPtrInput {
	return (*kafkaSpecZookeeperTemplateServiceAccountPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateServiceAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateServiceAccount)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateServiceAccountPtrType) ToKafkaSpecZookeeperTemplateServiceAccountPtrOutput() KafkaSpecZookeeperTemplateServiceAccountPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateServiceAccountPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateServiceAccountPtrType) ToKafkaSpecZookeeperTemplateServiceAccountPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateServiceAccountPtrOutput)
}

// Template for the ZooKeeper service account.
type KafkaSpecZookeeperTemplateServiceAccountOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateServiceAccount)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateServiceAccountOutput) ToKafkaSpecZookeeperTemplateServiceAccountOutput() KafkaSpecZookeeperTemplateServiceAccountOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateServiceAccountOutput) ToKafkaSpecZookeeperTemplateServiceAccountOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateServiceAccountOutput) ToKafkaSpecZookeeperTemplateServiceAccountPtrOutput() KafkaSpecZookeeperTemplateServiceAccountPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateServiceAccountPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateServiceAccountOutput) ToKafkaSpecZookeeperTemplateServiceAccountPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateServiceAccount) *KafkaSpecZookeeperTemplateServiceAccount {
		return &v
	}).(KafkaSpecZookeeperTemplateServiceAccountPtrOutput)
}

func (o KafkaSpecZookeeperTemplateServiceAccountOutput) Metadata() KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateServiceAccount) *KafkaSpecZookeeperTemplateServiceAccountMetadata {
		return v.Metadata
	}).(KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput)
}

type KafkaSpecZookeeperTemplateServiceAccountPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateServiceAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateServiceAccount)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateServiceAccountPtrOutput) ToKafkaSpecZookeeperTemplateServiceAccountPtrOutput() KafkaSpecZookeeperTemplateServiceAccountPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateServiceAccountPtrOutput) ToKafkaSpecZookeeperTemplateServiceAccountPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateServiceAccountPtrOutput) Elem() KafkaSpecZookeeperTemplateServiceAccountOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateServiceAccount) KafkaSpecZookeeperTemplateServiceAccount {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateServiceAccount
		return ret
	}).(KafkaSpecZookeeperTemplateServiceAccountOutput)
}

func (o KafkaSpecZookeeperTemplateServiceAccountPtrOutput) Metadata() KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateServiceAccount) *KafkaSpecZookeeperTemplateServiceAccountMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateServiceAccountMetadata struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaSpecZookeeperTemplateServiceAccountMetadataInput is an input type that accepts KafkaSpecZookeeperTemplateServiceAccountMetadataArgs and KafkaSpecZookeeperTemplateServiceAccountMetadataOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateServiceAccountMetadataInput` via:
//
//	KafkaSpecZookeeperTemplateServiceAccountMetadataArgs{...}
type KafkaSpecZookeeperTemplateServiceAccountMetadataInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateServiceAccountMetadataOutput() KafkaSpecZookeeperTemplateServiceAccountMetadataOutput
	ToKafkaSpecZookeeperTemplateServiceAccountMetadataOutputWithContext(context.Context) KafkaSpecZookeeperTemplateServiceAccountMetadataOutput
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateServiceAccountMetadataArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaSpecZookeeperTemplateServiceAccountMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateServiceAccountMetadata)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateServiceAccountMetadataArgs) ToKafkaSpecZookeeperTemplateServiceAccountMetadataOutput() KafkaSpecZookeeperTemplateServiceAccountMetadataOutput {
	return i.ToKafkaSpecZookeeperTemplateServiceAccountMetadataOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateServiceAccountMetadataArgs) ToKafkaSpecZookeeperTemplateServiceAccountMetadataOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateServiceAccountMetadataOutput)
}

func (i KafkaSpecZookeeperTemplateServiceAccountMetadataArgs) ToKafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput() KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateServiceAccountMetadataArgs) ToKafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateServiceAccountMetadataOutput).ToKafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateServiceAccountMetadataPtrInput is an input type that accepts KafkaSpecZookeeperTemplateServiceAccountMetadataArgs, KafkaSpecZookeeperTemplateServiceAccountMetadataPtr and KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateServiceAccountMetadataPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateServiceAccountMetadataArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateServiceAccountMetadataPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput() KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput
	ToKafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput
}

type kafkaSpecZookeeperTemplateServiceAccountMetadataPtrType KafkaSpecZookeeperTemplateServiceAccountMetadataArgs

func KafkaSpecZookeeperTemplateServiceAccountMetadataPtr(v *KafkaSpecZookeeperTemplateServiceAccountMetadataArgs) KafkaSpecZookeeperTemplateServiceAccountMetadataPtrInput {
	return (*kafkaSpecZookeeperTemplateServiceAccountMetadataPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateServiceAccountMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateServiceAccountMetadata)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateServiceAccountMetadataPtrType) ToKafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput() KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateServiceAccountMetadataPtrType) ToKafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateServiceAccountMetadataOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateServiceAccountMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateServiceAccountMetadata)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateServiceAccountMetadataOutput) ToKafkaSpecZookeeperTemplateServiceAccountMetadataOutput() KafkaSpecZookeeperTemplateServiceAccountMetadataOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateServiceAccountMetadataOutput) ToKafkaSpecZookeeperTemplateServiceAccountMetadataOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountMetadataOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateServiceAccountMetadataOutput) ToKafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput() KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateServiceAccountMetadataOutput) ToKafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateServiceAccountMetadata) *KafkaSpecZookeeperTemplateServiceAccountMetadata {
		return &v
	}).(KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateServiceAccountMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateServiceAccountMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateServiceAccountMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateServiceAccountMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateServiceAccountMetadata)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput) ToKafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput() KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput) ToKafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput) Elem() KafkaSpecZookeeperTemplateServiceAccountMetadataOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateServiceAccountMetadata) KafkaSpecZookeeperTemplateServiceAccountMetadata {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateServiceAccountMetadata
		return ret
	}).(KafkaSpecZookeeperTemplateServiceAccountMetadataOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateServiceAccountMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateServiceAccountMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateServiceAccountMetadataPatch struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaSpecZookeeperTemplateServiceAccountMetadataPatchInput is an input type that accepts KafkaSpecZookeeperTemplateServiceAccountMetadataPatchArgs and KafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateServiceAccountMetadataPatchInput` via:
//
//	KafkaSpecZookeeperTemplateServiceAccountMetadataPatchArgs{...}
type KafkaSpecZookeeperTemplateServiceAccountMetadataPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutput() KafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutput
	ToKafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutput
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateServiceAccountMetadataPatchArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaSpecZookeeperTemplateServiceAccountMetadataPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateServiceAccountMetadataPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateServiceAccountMetadataPatchArgs) ToKafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutput() KafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutput {
	return i.ToKafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateServiceAccountMetadataPatchArgs) ToKafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutput)
}

func (i KafkaSpecZookeeperTemplateServiceAccountMetadataPatchArgs) ToKafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateServiceAccountMetadataPatchArgs) ToKafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutput).ToKafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplateServiceAccountMetadataPatchArgs, KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtr and KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateServiceAccountMetadataPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput
	ToKafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput
}

type kafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrType KafkaSpecZookeeperTemplateServiceAccountMetadataPatchArgs

func KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtr(v *KafkaSpecZookeeperTemplateServiceAccountMetadataPatchArgs) KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrInput {
	return (*kafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateServiceAccountMetadataPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrType) ToKafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrType) ToKafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateServiceAccountMetadataPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutput) ToKafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutput() KafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutput) ToKafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutput) ToKafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutput) ToKafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateServiceAccountMetadataPatch) *KafkaSpecZookeeperTemplateServiceAccountMetadataPatch {
		return &v
	}).(KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateServiceAccountMetadataPatch) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateServiceAccountMetadataPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateServiceAccountMetadataPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput) ToKafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput) ToKafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput) Elem() KafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateServiceAccountMetadataPatch) KafkaSpecZookeeperTemplateServiceAccountMetadataPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateServiceAccountMetadataPatch
		return ret
	}).(KafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateServiceAccountMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateServiceAccountMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Template for the ZooKeeper service account.
type KafkaSpecZookeeperTemplateServiceAccountPatch struct {
	Metadata *KafkaSpecZookeeperTemplateServiceAccountMetadataPatch `pulumi:"metadata"`
}

// KafkaSpecZookeeperTemplateServiceAccountPatchInput is an input type that accepts KafkaSpecZookeeperTemplateServiceAccountPatchArgs and KafkaSpecZookeeperTemplateServiceAccountPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateServiceAccountPatchInput` via:
//
//	KafkaSpecZookeeperTemplateServiceAccountPatchArgs{...}
type KafkaSpecZookeeperTemplateServiceAccountPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateServiceAccountPatchOutput() KafkaSpecZookeeperTemplateServiceAccountPatchOutput
	ToKafkaSpecZookeeperTemplateServiceAccountPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplateServiceAccountPatchOutput
}

// Template for the ZooKeeper service account.
type KafkaSpecZookeeperTemplateServiceAccountPatchArgs struct {
	Metadata KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrInput `pulumi:"metadata"`
}

func (KafkaSpecZookeeperTemplateServiceAccountPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateServiceAccountPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateServiceAccountPatchArgs) ToKafkaSpecZookeeperTemplateServiceAccountPatchOutput() KafkaSpecZookeeperTemplateServiceAccountPatchOutput {
	return i.ToKafkaSpecZookeeperTemplateServiceAccountPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateServiceAccountPatchArgs) ToKafkaSpecZookeeperTemplateServiceAccountPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateServiceAccountPatchOutput)
}

func (i KafkaSpecZookeeperTemplateServiceAccountPatchArgs) ToKafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput() KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateServiceAccountPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateServiceAccountPatchArgs) ToKafkaSpecZookeeperTemplateServiceAccountPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateServiceAccountPatchOutput).ToKafkaSpecZookeeperTemplateServiceAccountPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateServiceAccountPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplateServiceAccountPatchArgs, KafkaSpecZookeeperTemplateServiceAccountPatchPtr and KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateServiceAccountPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateServiceAccountPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateServiceAccountPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput() KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput
	ToKafkaSpecZookeeperTemplateServiceAccountPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput
}

type kafkaSpecZookeeperTemplateServiceAccountPatchPtrType KafkaSpecZookeeperTemplateServiceAccountPatchArgs

func KafkaSpecZookeeperTemplateServiceAccountPatchPtr(v *KafkaSpecZookeeperTemplateServiceAccountPatchArgs) KafkaSpecZookeeperTemplateServiceAccountPatchPtrInput {
	return (*kafkaSpecZookeeperTemplateServiceAccountPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateServiceAccountPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateServiceAccountPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateServiceAccountPatchPtrType) ToKafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput() KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateServiceAccountPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateServiceAccountPatchPtrType) ToKafkaSpecZookeeperTemplateServiceAccountPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput)
}

// Template for the ZooKeeper service account.
type KafkaSpecZookeeperTemplateServiceAccountPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateServiceAccountPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateServiceAccountPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateServiceAccountPatchOutput) ToKafkaSpecZookeeperTemplateServiceAccountPatchOutput() KafkaSpecZookeeperTemplateServiceAccountPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateServiceAccountPatchOutput) ToKafkaSpecZookeeperTemplateServiceAccountPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateServiceAccountPatchOutput) ToKafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput() KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateServiceAccountPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateServiceAccountPatchOutput) ToKafkaSpecZookeeperTemplateServiceAccountPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateServiceAccountPatch) *KafkaSpecZookeeperTemplateServiceAccountPatch {
		return &v
	}).(KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplateServiceAccountPatchOutput) Metadata() KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateServiceAccountPatch) *KafkaSpecZookeeperTemplateServiceAccountMetadataPatch {
		return v.Metadata
	}).(KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput)
}

type KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateServiceAccountPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput) ToKafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput() KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput) ToKafkaSpecZookeeperTemplateServiceAccountPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput) Elem() KafkaSpecZookeeperTemplateServiceAccountPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateServiceAccountPatch) KafkaSpecZookeeperTemplateServiceAccountPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateServiceAccountPatch
		return ret
	}).(KafkaSpecZookeeperTemplateServiceAccountPatchOutput)
}

func (o KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput) Metadata() KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateServiceAccountPatch) *KafkaSpecZookeeperTemplateServiceAccountMetadataPatch {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput)
}

// Template for ZooKeeper `StatefulSet`.
type KafkaSpecZookeeperTemplateStatefulset struct {
	Metadata *KafkaSpecZookeeperTemplateStatefulsetMetadata `pulumi:"metadata"`
	// PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.
	PodManagementPolicy *string `pulumi:"podManagementPolicy"`
}

// KafkaSpecZookeeperTemplateStatefulsetInput is an input type that accepts KafkaSpecZookeeperTemplateStatefulsetArgs and KafkaSpecZookeeperTemplateStatefulsetOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateStatefulsetInput` via:
//
//	KafkaSpecZookeeperTemplateStatefulsetArgs{...}
type KafkaSpecZookeeperTemplateStatefulsetInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateStatefulsetOutput() KafkaSpecZookeeperTemplateStatefulsetOutput
	ToKafkaSpecZookeeperTemplateStatefulsetOutputWithContext(context.Context) KafkaSpecZookeeperTemplateStatefulsetOutput
}

// Template for ZooKeeper `StatefulSet`.
type KafkaSpecZookeeperTemplateStatefulsetArgs struct {
	Metadata KafkaSpecZookeeperTemplateStatefulsetMetadataPtrInput `pulumi:"metadata"`
	// PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.
	PodManagementPolicy pulumi.StringPtrInput `pulumi:"podManagementPolicy"`
}

func (KafkaSpecZookeeperTemplateStatefulsetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateStatefulset)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateStatefulsetArgs) ToKafkaSpecZookeeperTemplateStatefulsetOutput() KafkaSpecZookeeperTemplateStatefulsetOutput {
	return i.ToKafkaSpecZookeeperTemplateStatefulsetOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateStatefulsetArgs) ToKafkaSpecZookeeperTemplateStatefulsetOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateStatefulsetOutput)
}

func (i KafkaSpecZookeeperTemplateStatefulsetArgs) ToKafkaSpecZookeeperTemplateStatefulsetPtrOutput() KafkaSpecZookeeperTemplateStatefulsetPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateStatefulsetPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateStatefulsetArgs) ToKafkaSpecZookeeperTemplateStatefulsetPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateStatefulsetOutput).ToKafkaSpecZookeeperTemplateStatefulsetPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateStatefulsetPtrInput is an input type that accepts KafkaSpecZookeeperTemplateStatefulsetArgs, KafkaSpecZookeeperTemplateStatefulsetPtr and KafkaSpecZookeeperTemplateStatefulsetPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateStatefulsetPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateStatefulsetArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateStatefulsetPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateStatefulsetPtrOutput() KafkaSpecZookeeperTemplateStatefulsetPtrOutput
	ToKafkaSpecZookeeperTemplateStatefulsetPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateStatefulsetPtrOutput
}

type kafkaSpecZookeeperTemplateStatefulsetPtrType KafkaSpecZookeeperTemplateStatefulsetArgs

func KafkaSpecZookeeperTemplateStatefulsetPtr(v *KafkaSpecZookeeperTemplateStatefulsetArgs) KafkaSpecZookeeperTemplateStatefulsetPtrInput {
	return (*kafkaSpecZookeeperTemplateStatefulsetPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateStatefulsetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateStatefulset)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateStatefulsetPtrType) ToKafkaSpecZookeeperTemplateStatefulsetPtrOutput() KafkaSpecZookeeperTemplateStatefulsetPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateStatefulsetPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateStatefulsetPtrType) ToKafkaSpecZookeeperTemplateStatefulsetPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateStatefulsetPtrOutput)
}

// Template for ZooKeeper `StatefulSet`.
type KafkaSpecZookeeperTemplateStatefulsetOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateStatefulsetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateStatefulset)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateStatefulsetOutput) ToKafkaSpecZookeeperTemplateStatefulsetOutput() KafkaSpecZookeeperTemplateStatefulsetOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateStatefulsetOutput) ToKafkaSpecZookeeperTemplateStatefulsetOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateStatefulsetOutput) ToKafkaSpecZookeeperTemplateStatefulsetPtrOutput() KafkaSpecZookeeperTemplateStatefulsetPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateStatefulsetPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateStatefulsetOutput) ToKafkaSpecZookeeperTemplateStatefulsetPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateStatefulset) *KafkaSpecZookeeperTemplateStatefulset {
		return &v
	}).(KafkaSpecZookeeperTemplateStatefulsetPtrOutput)
}

func (o KafkaSpecZookeeperTemplateStatefulsetOutput) Metadata() KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateStatefulset) *KafkaSpecZookeeperTemplateStatefulsetMetadata {
		return v.Metadata
	}).(KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput)
}

// PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.
func (o KafkaSpecZookeeperTemplateStatefulsetOutput) PodManagementPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateStatefulset) *string { return v.PodManagementPolicy }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplateStatefulsetPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateStatefulsetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateStatefulset)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateStatefulsetPtrOutput) ToKafkaSpecZookeeperTemplateStatefulsetPtrOutput() KafkaSpecZookeeperTemplateStatefulsetPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateStatefulsetPtrOutput) ToKafkaSpecZookeeperTemplateStatefulsetPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateStatefulsetPtrOutput) Elem() KafkaSpecZookeeperTemplateStatefulsetOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateStatefulset) KafkaSpecZookeeperTemplateStatefulset {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateStatefulset
		return ret
	}).(KafkaSpecZookeeperTemplateStatefulsetOutput)
}

func (o KafkaSpecZookeeperTemplateStatefulsetPtrOutput) Metadata() KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateStatefulset) *KafkaSpecZookeeperTemplateStatefulsetMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput)
}

// PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.
func (o KafkaSpecZookeeperTemplateStatefulsetPtrOutput) PodManagementPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateStatefulset) *string {
		if v == nil {
			return nil
		}
		return v.PodManagementPolicy
	}).(pulumi.StringPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateStatefulsetMetadata struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaSpecZookeeperTemplateStatefulsetMetadataInput is an input type that accepts KafkaSpecZookeeperTemplateStatefulsetMetadataArgs and KafkaSpecZookeeperTemplateStatefulsetMetadataOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateStatefulsetMetadataInput` via:
//
//	KafkaSpecZookeeperTemplateStatefulsetMetadataArgs{...}
type KafkaSpecZookeeperTemplateStatefulsetMetadataInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateStatefulsetMetadataOutput() KafkaSpecZookeeperTemplateStatefulsetMetadataOutput
	ToKafkaSpecZookeeperTemplateStatefulsetMetadataOutputWithContext(context.Context) KafkaSpecZookeeperTemplateStatefulsetMetadataOutput
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateStatefulsetMetadataArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaSpecZookeeperTemplateStatefulsetMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateStatefulsetMetadata)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateStatefulsetMetadataArgs) ToKafkaSpecZookeeperTemplateStatefulsetMetadataOutput() KafkaSpecZookeeperTemplateStatefulsetMetadataOutput {
	return i.ToKafkaSpecZookeeperTemplateStatefulsetMetadataOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateStatefulsetMetadataArgs) ToKafkaSpecZookeeperTemplateStatefulsetMetadataOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateStatefulsetMetadataOutput)
}

func (i KafkaSpecZookeeperTemplateStatefulsetMetadataArgs) ToKafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput() KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateStatefulsetMetadataArgs) ToKafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateStatefulsetMetadataOutput).ToKafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateStatefulsetMetadataPtrInput is an input type that accepts KafkaSpecZookeeperTemplateStatefulsetMetadataArgs, KafkaSpecZookeeperTemplateStatefulsetMetadataPtr and KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateStatefulsetMetadataPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateStatefulsetMetadataArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateStatefulsetMetadataPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput() KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput
	ToKafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput
}

type kafkaSpecZookeeperTemplateStatefulsetMetadataPtrType KafkaSpecZookeeperTemplateStatefulsetMetadataArgs

func KafkaSpecZookeeperTemplateStatefulsetMetadataPtr(v *KafkaSpecZookeeperTemplateStatefulsetMetadataArgs) KafkaSpecZookeeperTemplateStatefulsetMetadataPtrInput {
	return (*kafkaSpecZookeeperTemplateStatefulsetMetadataPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateStatefulsetMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateStatefulsetMetadata)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateStatefulsetMetadataPtrType) ToKafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput() KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateStatefulsetMetadataPtrType) ToKafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateStatefulsetMetadataOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateStatefulsetMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateStatefulsetMetadata)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateStatefulsetMetadataOutput) ToKafkaSpecZookeeperTemplateStatefulsetMetadataOutput() KafkaSpecZookeeperTemplateStatefulsetMetadataOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateStatefulsetMetadataOutput) ToKafkaSpecZookeeperTemplateStatefulsetMetadataOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetMetadataOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateStatefulsetMetadataOutput) ToKafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput() KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateStatefulsetMetadataOutput) ToKafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateStatefulsetMetadata) *KafkaSpecZookeeperTemplateStatefulsetMetadata {
		return &v
	}).(KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateStatefulsetMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateStatefulsetMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateStatefulsetMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateStatefulsetMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateStatefulsetMetadata)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput) ToKafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput() KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput) ToKafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput) Elem() KafkaSpecZookeeperTemplateStatefulsetMetadataOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateStatefulsetMetadata) KafkaSpecZookeeperTemplateStatefulsetMetadata {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateStatefulsetMetadata
		return ret
	}).(KafkaSpecZookeeperTemplateStatefulsetMetadataOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateStatefulsetMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateStatefulsetMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateStatefulsetMetadataPatch struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaSpecZookeeperTemplateStatefulsetMetadataPatchInput is an input type that accepts KafkaSpecZookeeperTemplateStatefulsetMetadataPatchArgs and KafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateStatefulsetMetadataPatchInput` via:
//
//	KafkaSpecZookeeperTemplateStatefulsetMetadataPatchArgs{...}
type KafkaSpecZookeeperTemplateStatefulsetMetadataPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutput() KafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutput
	ToKafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutput
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateStatefulsetMetadataPatchArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaSpecZookeeperTemplateStatefulsetMetadataPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateStatefulsetMetadataPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateStatefulsetMetadataPatchArgs) ToKafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutput() KafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutput {
	return i.ToKafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateStatefulsetMetadataPatchArgs) ToKafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutput)
}

func (i KafkaSpecZookeeperTemplateStatefulsetMetadataPatchArgs) ToKafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateStatefulsetMetadataPatchArgs) ToKafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutput).ToKafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplateStatefulsetMetadataPatchArgs, KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtr and KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateStatefulsetMetadataPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput
	ToKafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput
}

type kafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrType KafkaSpecZookeeperTemplateStatefulsetMetadataPatchArgs

func KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtr(v *KafkaSpecZookeeperTemplateStatefulsetMetadataPatchArgs) KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrInput {
	return (*kafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateStatefulsetMetadataPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrType) ToKafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrType) ToKafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput)
}

// Metadata applied to the resource.
type KafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateStatefulsetMetadataPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutput) ToKafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutput() KafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutput) ToKafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutput) ToKafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutput) ToKafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateStatefulsetMetadataPatch) *KafkaSpecZookeeperTemplateStatefulsetMetadataPatch {
		return &v
	}).(KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateStatefulsetMetadataPatch) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateStatefulsetMetadataPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateStatefulsetMetadataPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput) ToKafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput() KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput) ToKafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput) Elem() KafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateStatefulsetMetadataPatch) KafkaSpecZookeeperTemplateStatefulsetMetadataPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateStatefulsetMetadataPatch
		return ret
	}).(KafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateStatefulsetMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateStatefulsetMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Template for ZooKeeper `StatefulSet`.
type KafkaSpecZookeeperTemplateStatefulsetPatch struct {
	Metadata *KafkaSpecZookeeperTemplateStatefulsetMetadataPatch `pulumi:"metadata"`
	// PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.
	PodManagementPolicy *string `pulumi:"podManagementPolicy"`
}

// KafkaSpecZookeeperTemplateStatefulsetPatchInput is an input type that accepts KafkaSpecZookeeperTemplateStatefulsetPatchArgs and KafkaSpecZookeeperTemplateStatefulsetPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateStatefulsetPatchInput` via:
//
//	KafkaSpecZookeeperTemplateStatefulsetPatchArgs{...}
type KafkaSpecZookeeperTemplateStatefulsetPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateStatefulsetPatchOutput() KafkaSpecZookeeperTemplateStatefulsetPatchOutput
	ToKafkaSpecZookeeperTemplateStatefulsetPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplateStatefulsetPatchOutput
}

// Template for ZooKeeper `StatefulSet`.
type KafkaSpecZookeeperTemplateStatefulsetPatchArgs struct {
	Metadata KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrInput `pulumi:"metadata"`
	// PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.
	PodManagementPolicy pulumi.StringPtrInput `pulumi:"podManagementPolicy"`
}

func (KafkaSpecZookeeperTemplateStatefulsetPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateStatefulsetPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateStatefulsetPatchArgs) ToKafkaSpecZookeeperTemplateStatefulsetPatchOutput() KafkaSpecZookeeperTemplateStatefulsetPatchOutput {
	return i.ToKafkaSpecZookeeperTemplateStatefulsetPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateStatefulsetPatchArgs) ToKafkaSpecZookeeperTemplateStatefulsetPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateStatefulsetPatchOutput)
}

func (i KafkaSpecZookeeperTemplateStatefulsetPatchArgs) ToKafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput() KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateStatefulsetPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateStatefulsetPatchArgs) ToKafkaSpecZookeeperTemplateStatefulsetPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateStatefulsetPatchOutput).ToKafkaSpecZookeeperTemplateStatefulsetPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateStatefulsetPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplateStatefulsetPatchArgs, KafkaSpecZookeeperTemplateStatefulsetPatchPtr and KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateStatefulsetPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateStatefulsetPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateStatefulsetPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput() KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput
	ToKafkaSpecZookeeperTemplateStatefulsetPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput
}

type kafkaSpecZookeeperTemplateStatefulsetPatchPtrType KafkaSpecZookeeperTemplateStatefulsetPatchArgs

func KafkaSpecZookeeperTemplateStatefulsetPatchPtr(v *KafkaSpecZookeeperTemplateStatefulsetPatchArgs) KafkaSpecZookeeperTemplateStatefulsetPatchPtrInput {
	return (*kafkaSpecZookeeperTemplateStatefulsetPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateStatefulsetPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateStatefulsetPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateStatefulsetPatchPtrType) ToKafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput() KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateStatefulsetPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateStatefulsetPatchPtrType) ToKafkaSpecZookeeperTemplateStatefulsetPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput)
}

// Template for ZooKeeper `StatefulSet`.
type KafkaSpecZookeeperTemplateStatefulsetPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateStatefulsetPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateStatefulsetPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateStatefulsetPatchOutput) ToKafkaSpecZookeeperTemplateStatefulsetPatchOutput() KafkaSpecZookeeperTemplateStatefulsetPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateStatefulsetPatchOutput) ToKafkaSpecZookeeperTemplateStatefulsetPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateStatefulsetPatchOutput) ToKafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput() KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateStatefulsetPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateStatefulsetPatchOutput) ToKafkaSpecZookeeperTemplateStatefulsetPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateStatefulsetPatch) *KafkaSpecZookeeperTemplateStatefulsetPatch {
		return &v
	}).(KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplateStatefulsetPatchOutput) Metadata() KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateStatefulsetPatch) *KafkaSpecZookeeperTemplateStatefulsetMetadataPatch {
		return v.Metadata
	}).(KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput)
}

// PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.
func (o KafkaSpecZookeeperTemplateStatefulsetPatchOutput) PodManagementPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateStatefulsetPatch) *string { return v.PodManagementPolicy }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateStatefulsetPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput) ToKafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput() KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput) ToKafkaSpecZookeeperTemplateStatefulsetPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput) Elem() KafkaSpecZookeeperTemplateStatefulsetPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateStatefulsetPatch) KafkaSpecZookeeperTemplateStatefulsetPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateStatefulsetPatch
		return ret
	}).(KafkaSpecZookeeperTemplateStatefulsetPatchOutput)
}

func (o KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput) Metadata() KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateStatefulsetPatch) *KafkaSpecZookeeperTemplateStatefulsetMetadataPatch {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput)
}

// PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.
func (o KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput) PodManagementPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateStatefulsetPatch) *string {
		if v == nil {
			return nil
		}
		return v.PodManagementPolicy
	}).(pulumi.StringPtrOutput)
}

// Template for the ZooKeeper container.
type KafkaSpecZookeeperTemplateZookeeperContainer struct {
	// Environment variables which should be applied to the container.
	Env             []KafkaSpecZookeeperTemplateZookeeperContainerEnv            `pulumi:"env"`
	SecurityContext *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext `pulumi:"securityContext"`
	// Additional volume mounts which should be applied to the container.
	VolumeMounts []KafkaSpecZookeeperTemplateZookeeperContainerVolumeMounts `pulumi:"volumeMounts"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerArgs and KafkaSpecZookeeperTemplateZookeeperContainerOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerOutput() KafkaSpecZookeeperTemplateZookeeperContainerOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerOutput
}

// Template for the ZooKeeper container.
type KafkaSpecZookeeperTemplateZookeeperContainerArgs struct {
	// Environment variables which should be applied to the container.
	Env             KafkaSpecZookeeperTemplateZookeeperContainerEnvArrayInput           `pulumi:"env"`
	SecurityContext KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrInput `pulumi:"securityContext"`
	// Additional volume mounts which should be applied to the container.
	VolumeMounts KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayInput `pulumi:"volumeMounts"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainer)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerOutput() KafkaSpecZookeeperTemplateZookeeperContainerOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerOutput)
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerOutput).ToKafkaSpecZookeeperTemplateZookeeperContainerPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateZookeeperContainerPtrInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerArgs, KafkaSpecZookeeperTemplateZookeeperContainerPtr and KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateZookeeperContainerArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateZookeeperContainerPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput
}

type kafkaSpecZookeeperTemplateZookeeperContainerPtrType KafkaSpecZookeeperTemplateZookeeperContainerArgs

func KafkaSpecZookeeperTemplateZookeeperContainerPtr(v *KafkaSpecZookeeperTemplateZookeeperContainerArgs) KafkaSpecZookeeperTemplateZookeeperContainerPtrInput {
	return (*kafkaSpecZookeeperTemplateZookeeperContainerPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateZookeeperContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainer)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput)
}

// Template for the ZooKeeper container.
type KafkaSpecZookeeperTemplateZookeeperContainerOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainer)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerOutput() KafkaSpecZookeeperTemplateZookeeperContainerOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateZookeeperContainerPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateZookeeperContainer) *KafkaSpecZookeeperTemplateZookeeperContainer {
		return &v
	}).(KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput)
}

// Environment variables which should be applied to the container.
func (o KafkaSpecZookeeperTemplateZookeeperContainerOutput) Env() KafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainer) []KafkaSpecZookeeperTemplateZookeeperContainerEnv {
		return v.Env
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerOutput) SecurityContext() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainer) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext {
		return v.SecurityContext
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput)
}

// Additional volume mounts which should be applied to the container.
func (o KafkaSpecZookeeperTemplateZookeeperContainerOutput) VolumeMounts() KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainer) []KafkaSpecZookeeperTemplateZookeeperContainerVolumeMounts {
		return v.VolumeMounts
	}).(KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainer)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput) Elem() KafkaSpecZookeeperTemplateZookeeperContainerOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainer) KafkaSpecZookeeperTemplateZookeeperContainer {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateZookeeperContainer
		return ret
	}).(KafkaSpecZookeeperTemplateZookeeperContainerOutput)
}

// Environment variables which should be applied to the container.
func (o KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput) Env() KafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainer) []KafkaSpecZookeeperTemplateZookeeperContainerEnv {
		if v == nil {
			return nil
		}
		return v.Env
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput) SecurityContext() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainer) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext {
		if v == nil {
			return nil
		}
		return v.SecurityContext
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput)
}

// Additional volume mounts which should be applied to the container.
func (o KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput) VolumeMounts() KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainer) []KafkaSpecZookeeperTemplateZookeeperContainerVolumeMounts {
		if v == nil {
			return nil
		}
		return v.VolumeMounts
	}).(KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerEnv struct {
	// The environment variable key.
	Name *string `pulumi:"name"`
	// The environment variable value.
	Value     *string                                                   `pulumi:"value"`
	ValueFrom *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFrom `pulumi:"valueFrom"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerEnvInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerEnvArgs and KafkaSpecZookeeperTemplateZookeeperContainerEnvOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerEnvInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerEnvArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerEnvInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvOutput
}

type KafkaSpecZookeeperTemplateZookeeperContainerEnvArgs struct {
	// The environment variable key.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The environment variable value.
	Value     pulumi.StringPtrInput                                            `pulumi:"value"`
	ValueFrom KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrInput `pulumi:"valueFrom"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnv)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerEnvOutput)
}

// KafkaSpecZookeeperTemplateZookeeperContainerEnvArrayInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerEnvArray and KafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerEnvArrayInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerEnvArray{ KafkaSpecZookeeperTemplateZookeeperContainerEnvArgs{...} }
type KafkaSpecZookeeperTemplateZookeeperContainerEnvArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutput
}

type KafkaSpecZookeeperTemplateZookeeperContainerEnvArray []KafkaSpecZookeeperTemplateZookeeperContainerEnvInput

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplateZookeeperContainerEnv)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvArray) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvArray) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerEnvOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnv)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvOutput {
	return o
}

// The environment variable key.
func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerEnv) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The environment variable value.
func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvOutput) ValueFrom() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerEnv) *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFrom {
		return v.ValueFrom
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplateZookeeperContainerEnv)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplateZookeeperContainerEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplateZookeeperContainerEnv {
		return vs[0].([]KafkaSpecZookeeperTemplateZookeeperContainerEnv)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerEnvPatch struct {
	// The environment variable key.
	Name *string `pulumi:"name"`
	// The environment variable value.
	Value     *string                                                        `pulumi:"value"`
	ValueFrom *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatch `pulumi:"valueFrom"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArgs and KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutput
}

type KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArgs struct {
	// The environment variable key.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The environment variable value.
	Value     pulumi.StringPtrInput                                                 `pulumi:"value"`
	ValueFrom KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrInput `pulumi:"valueFrom"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutput)
}

// KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArray and KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArray{ KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArgs{...} }
type KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutput
}

type KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArray []KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchInput

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplateZookeeperContainerEnvPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArray) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArray) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutput {
	return o
}

// The environment variable key.
func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerEnvPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The environment variable value.
func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerEnvPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutput) ValueFrom() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerEnvPatch) *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatch {
		return v.ValueFrom
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplateZookeeperContainerEnvPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplateZookeeperContainerEnvPatch {
		return vs[0].([]KafkaSpecZookeeperTemplateZookeeperContainerEnvPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutput)
}

// Reference to the secret or config map property to which the environment variable is set.
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFrom struct {
	ConfigMapKeyRef *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRef `pulumi:"configMapKeyRef"`
	SecretKeyRef    *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRef    `pulumi:"secretKeyRef"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromArgs and KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutput
}

// Reference to the secret or config map property to which the environment variable is set.
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromArgs struct {
	ConfigMapKeyRef KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrInput `pulumi:"configMapKeyRef"`
	SecretKeyRef    KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrInput    `pulumi:"secretKeyRef"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFrom)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutput)
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutput).ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromArgs, KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtr and KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput
}

type kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrType KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromArgs

func KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtr(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromArgs) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrInput {
	return (*kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFrom)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput)
}

// Reference to the secret or config map property to which the environment variable is set.
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFrom)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFrom) *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFrom {
		return &v
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutput) ConfigMapKeyRef() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFrom) *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRef {
		return v.ConfigMapKeyRef
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutput) SecretKeyRef() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFrom) *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRef {
		return v.SecretKeyRef
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFrom)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput) Elem() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFrom) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFrom {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFrom
		return ret
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput) ConfigMapKeyRef() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFrom) *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRef {
		if v == nil {
			return nil
		}
		return v.ConfigMapKeyRef
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput) SecretKeyRef() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFrom) *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRef {
		if v == nil {
			return nil
		}
		return v.SecretKeyRef
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput)
}

// Reference to a key in a config map.
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRef struct {
	Key      *string `pulumi:"key"`
	Name     *string `pulumi:"name"`
	Optional *bool   `pulumi:"optional"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefArgs and KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput
}

// Reference to a key in a config map.
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefArgs struct {
	Key      pulumi.StringPtrInput `pulumi:"key"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Optional pulumi.BoolPtrInput   `pulumi:"optional"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput)
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput).ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefArgs, KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtr and KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput
}

type kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrType KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefArgs

func KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtr(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefArgs) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrInput {
	return (*kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput)
}

// Reference to a key in a config map.
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRef) *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRef {
		return &v
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRef) *bool {
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput) Elem() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRef) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRef {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRef
		return ret
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Reference to a key in a config map.
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatch struct {
	Key      *string `pulumi:"key"`
	Name     *string `pulumi:"name"`
	Optional *bool   `pulumi:"optional"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchArgs and KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput
}

// Reference to a key in a config map.
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchArgs struct {
	Key      pulumi.StringPtrInput `pulumi:"key"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Optional pulumi.BoolPtrInput   `pulumi:"optional"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput)
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput).ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchArgs, KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtr and KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput
}

type kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrType KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchArgs

func KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtr(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchArgs) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrInput {
	return (*kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput)
}

// Reference to a key in a config map.
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatch) *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatch {
		return &v
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatch) *bool {
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput) Elem() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatch) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatch
		return ret
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Reference to the secret or config map property to which the environment variable is set.
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatch struct {
	ConfigMapKeyRef *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatch `pulumi:"configMapKeyRef"`
	SecretKeyRef    *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatch    `pulumi:"secretKeyRef"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchArgs and KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutput
}

// Reference to the secret or config map property to which the environment variable is set.
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchArgs struct {
	ConfigMapKeyRef KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrInput `pulumi:"configMapKeyRef"`
	SecretKeyRef    KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrInput    `pulumi:"secretKeyRef"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutput)
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutput).ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchArgs, KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtr and KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput
}

type kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrType KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchArgs

func KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtr(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchArgs) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrInput {
	return (*kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput)
}

// Reference to the secret or config map property to which the environment variable is set.
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatch) *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatch {
		return &v
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutput) ConfigMapKeyRef() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatch) *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatch {
		return v.ConfigMapKeyRef
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutput) SecretKeyRef() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatch) *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatch {
		return v.SecretKeyRef
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput) Elem() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatch) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatch
		return ret
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput) ConfigMapKeyRef() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatch) *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatch {
		if v == nil {
			return nil
		}
		return v.ConfigMapKeyRef
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput) SecretKeyRef() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatch) *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretKeyRef
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput)
}

// Reference to a key in a secret.
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRef struct {
	Key      *string `pulumi:"key"`
	Name     *string `pulumi:"name"`
	Optional *bool   `pulumi:"optional"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefArgs and KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput
}

// Reference to a key in a secret.
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefArgs struct {
	Key      pulumi.StringPtrInput `pulumi:"key"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Optional pulumi.BoolPtrInput   `pulumi:"optional"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput)
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput).ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefArgs, KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtr and KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput
}

type kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrType KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefArgs

func KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtr(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefArgs) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrInput {
	return (*kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput)
}

// Reference to a key in a secret.
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRef) *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRef {
		return &v
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput) Elem() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRef) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRef {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRef
		return ret
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Reference to a key in a secret.
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatch struct {
	Key      *string `pulumi:"key"`
	Name     *string `pulumi:"name"`
	Optional *bool   `pulumi:"optional"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchArgs and KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput
}

// Reference to a key in a secret.
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchArgs struct {
	Key      pulumi.StringPtrInput `pulumi:"key"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Optional pulumi.BoolPtrInput   `pulumi:"optional"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput)
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput).ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchArgs, KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtr and KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput
}

type kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrType KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchArgs

func KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtr(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchArgs) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrInput {
	return (*kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput)
}

// Reference to a key in a secret.
type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatch) *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatch {
		return &v
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatch) *bool {
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput) Elem() KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatch) KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatch
		return ret
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Template for the ZooKeeper container.
type KafkaSpecZookeeperTemplateZookeeperContainerPatch struct {
	// Environment variables which should be applied to the container.
	Env             []KafkaSpecZookeeperTemplateZookeeperContainerEnvPatch            `pulumi:"env"`
	SecurityContext *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch `pulumi:"securityContext"`
	// Additional volume mounts which should be applied to the container.
	VolumeMounts []KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatch `pulumi:"volumeMounts"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerPatchInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerPatchArgs and KafkaSpecZookeeperTemplateZookeeperContainerPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerPatchInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerPatchArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerPatchOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerPatchOutput
}

// Template for the ZooKeeper container.
type KafkaSpecZookeeperTemplateZookeeperContainerPatchArgs struct {
	// Environment variables which should be applied to the container.
	Env             KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayInput           `pulumi:"env"`
	SecurityContext KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrInput `pulumi:"securityContext"`
	// Additional volume mounts which should be applied to the container.
	VolumeMounts KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayInput `pulumi:"volumeMounts"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerPatchOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerPatchOutput)
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerPatchOutput).ToKafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerPatchArgs, KafkaSpecZookeeperTemplateZookeeperContainerPatchPtr and KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateZookeeperContainerPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput
}

type kafkaSpecZookeeperTemplateZookeeperContainerPatchPtrType KafkaSpecZookeeperTemplateZookeeperContainerPatchArgs

func KafkaSpecZookeeperTemplateZookeeperContainerPatchPtr(v *KafkaSpecZookeeperTemplateZookeeperContainerPatchArgs) KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrInput {
	return (*kafkaSpecZookeeperTemplateZookeeperContainerPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateZookeeperContainerPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerPatchPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerPatchPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput)
}

// Template for the ZooKeeper container.
type KafkaSpecZookeeperTemplateZookeeperContainerPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateZookeeperContainerPatch) *KafkaSpecZookeeperTemplateZookeeperContainerPatch {
		return &v
	}).(KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput)
}

// Environment variables which should be applied to the container.
func (o KafkaSpecZookeeperTemplateZookeeperContainerPatchOutput) Env() KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerPatch) []KafkaSpecZookeeperTemplateZookeeperContainerEnvPatch {
		return v.Env
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerPatchOutput) SecurityContext() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerPatch) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch {
		return v.SecurityContext
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput)
}

// Additional volume mounts which should be applied to the container.
func (o KafkaSpecZookeeperTemplateZookeeperContainerPatchOutput) VolumeMounts() KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerPatch) []KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatch {
		return v.VolumeMounts
	}).(KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput) Elem() KafkaSpecZookeeperTemplateZookeeperContainerPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerPatch) KafkaSpecZookeeperTemplateZookeeperContainerPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateZookeeperContainerPatch
		return ret
	}).(KafkaSpecZookeeperTemplateZookeeperContainerPatchOutput)
}

// Environment variables which should be applied to the container.
func (o KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput) Env() KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerPatch) []KafkaSpecZookeeperTemplateZookeeperContainerEnvPatch {
		if v == nil {
			return nil
		}
		return v.Env
	}).(KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput) SecurityContext() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerPatch) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch {
		if v == nil {
			return nil
		}
		return v.SecurityContext
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput)
}

// Additional volume mounts which should be applied to the container.
func (o KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput) VolumeMounts() KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerPatch) []KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatch {
		if v == nil {
			return nil
		}
		return v.VolumeMounts
	}).(KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutput)
}

// Security context for the container.
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext struct {
	AllowPrivilegeEscalation *bool                                                                       `pulumi:"allowPrivilegeEscalation"`
	AppArmorProfile          *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfile `pulumi:"appArmorProfile"`
	Capabilities             *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilities    `pulumi:"capabilities"`
	Privileged               *bool                                                                       `pulumi:"privileged"`
	ProcMount                *string                                                                     `pulumi:"procMount"`
	ReadOnlyRootFilesystem   *bool                                                                       `pulumi:"readOnlyRootFilesystem"`
	RunAsGroup               *int                                                                        `pulumi:"runAsGroup"`
	RunAsNonRoot             *bool                                                                       `pulumi:"runAsNonRoot"`
	RunAsUser                *int                                                                        `pulumi:"runAsUser"`
	SeLinuxOptions           *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptions  `pulumi:"seLinuxOptions"`
	SeccompProfile           *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfile  `pulumi:"seccompProfile"`
	WindowsOptions           *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptions  `pulumi:"windowsOptions"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextArgs and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput
}

// Security context for the container.
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextArgs struct {
	AllowPrivilegeEscalation pulumi.BoolPtrInput                                                                `pulumi:"allowPrivilegeEscalation"`
	AppArmorProfile          KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrInput `pulumi:"appArmorProfile"`
	Capabilities             KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrInput    `pulumi:"capabilities"`
	Privileged               pulumi.BoolPtrInput                                                                `pulumi:"privileged"`
	ProcMount                pulumi.StringPtrInput                                                              `pulumi:"procMount"`
	ReadOnlyRootFilesystem   pulumi.BoolPtrInput                                                                `pulumi:"readOnlyRootFilesystem"`
	RunAsGroup               pulumi.IntPtrInput                                                                 `pulumi:"runAsGroup"`
	RunAsNonRoot             pulumi.BoolPtrInput                                                                `pulumi:"runAsNonRoot"`
	RunAsUser                pulumi.IntPtrInput                                                                 `pulumi:"runAsUser"`
	SeLinuxOptions           KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrInput  `pulumi:"seLinuxOptions"`
	SeccompProfile           KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrInput  `pulumi:"seccompProfile"`
	WindowsOptions           KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrInput  `pulumi:"windowsOptions"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput)
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput).ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextArgs, KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtr and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput
}

type kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrType KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextArgs

func KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtr(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextArgs) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrInput {
	return (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput)
}

// Security context for the container.
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext {
		return &v
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput) AllowPrivilegeEscalation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *bool {
		return v.AllowPrivilegeEscalation
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput) AppArmorProfile() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfile {
		return v.AppArmorProfile
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput) Capabilities() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilities {
		return v.Capabilities
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput) Privileged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *bool { return v.Privileged }).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput) ProcMount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *string { return v.ProcMount }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput) ReadOnlyRootFilesystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *bool {
		return v.ReadOnlyRootFilesystem
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *int { return v.RunAsGroup }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *bool { return v.RunAsNonRoot }).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *int { return v.RunAsUser }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput) SeLinuxOptions() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptions {
		return v.SeLinuxOptions
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput) SeccompProfile() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfile {
		return v.SeccompProfile
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput) WindowsOptions() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptions {
		return v.WindowsOptions
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput) Elem() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext
		return ret
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput) AllowPrivilegeEscalation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.AllowPrivilegeEscalation
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput) AppArmorProfile() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfile {
		if v == nil {
			return nil
		}
		return v.AppArmorProfile
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput) Capabilities() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilities {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput) Privileged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.Privileged
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput) ProcMount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *string {
		if v == nil {
			return nil
		}
		return v.ProcMount
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput) ReadOnlyRootFilesystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnlyRootFilesystem
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *int {
		if v == nil {
			return nil
		}
		return v.RunAsGroup
	}).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.RunAsNonRoot
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *int {
		if v == nil {
			return nil
		}
		return v.RunAsUser
	}).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput) SeLinuxOptions() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptions {
		if v == nil {
			return nil
		}
		return v.SeLinuxOptions
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput) SeccompProfile() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfile {
		if v == nil {
			return nil
		}
		return v.SeccompProfile
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput) WindowsOptions() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContext) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptions {
		if v == nil {
			return nil
		}
		return v.WindowsOptions
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfile struct {
	LocalhostProfile *string `pulumi:"localhostProfile"`
	Type             *string `pulumi:"type"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileArgs and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutput
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileArgs struct {
	LocalhostProfile pulumi.StringPtrInput `pulumi:"localhostProfile"`
	Type             pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfile)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutput)
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutput).ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileArgs, KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtr and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrInput` via:
//
//	        KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput
}

type kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrType KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileArgs

func KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtr(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileArgs) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrInput {
	return (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrType)(v)
}

func (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfile)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfile)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput {
	return o.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfile) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfile {
		return &v
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfile) *string {
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfile) *string {
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfile)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput) Elem() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfile) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfile {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfile
		return ret
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfile) *string {
		if v == nil {
			return nil
		}
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfile) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatch struct {
	LocalhostProfile *string `pulumi:"localhostProfile"`
	Type             *string `pulumi:"type"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchArgs and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutput
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchArgs struct {
	LocalhostProfile pulumi.StringPtrInput `pulumi:"localhostProfile"`
	Type             pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutput)
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutput).ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchArgs, KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtr and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput
}

type kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrType KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchArgs

func KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtr(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchArgs) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrInput {
	return (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatch) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatch {
		return &v
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatch) *string {
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatch) *string {
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput) Elem() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatch) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatch
		return ret
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatch) *string {
		if v == nil {
			return nil
		}
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilities struct {
	Add  []string `pulumi:"add"`
	Drop []string `pulumi:"drop"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesArgs and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutput
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesArgs struct {
	Add  pulumi.StringArrayInput `pulumi:"add"`
	Drop pulumi.StringArrayInput `pulumi:"drop"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilities)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutput)
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutput).ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesArgs, KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtr and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput
}

type kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrType KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesArgs

func KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtr(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesArgs) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrInput {
	return (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilities)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilities)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilities) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilities {
		return &v
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutput) Add() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilities) []string { return v.Add }).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutput) Drop() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilities) []string {
		return v.Drop
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilities)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput) Elem() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilities) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilities {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilities
		return ret
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput) Add() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilities) []string {
		if v == nil {
			return nil
		}
		return v.Add
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput) Drop() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilities) []string {
		if v == nil {
			return nil
		}
		return v.Drop
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatch struct {
	Add  []string `pulumi:"add"`
	Drop []string `pulumi:"drop"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchArgs and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutput
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchArgs struct {
	Add  pulumi.StringArrayInput `pulumi:"add"`
	Drop pulumi.StringArrayInput `pulumi:"drop"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutput)
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutput).ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchArgs, KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtr and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput
}

type kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrType KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchArgs

func KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtr(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchArgs) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrInput {
	return (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatch) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatch {
		return &v
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutput) Add() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatch) []string {
		return v.Add
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutput) Drop() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatch) []string {
		return v.Drop
	}).(pulumi.StringArrayOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput) Elem() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatch) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatch
		return ret
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput) Add() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatch) []string {
		if v == nil {
			return nil
		}
		return v.Add
	}).(pulumi.StringArrayOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput) Drop() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatch) []string {
		if v == nil {
			return nil
		}
		return v.Drop
	}).(pulumi.StringArrayOutput)
}

// Security context for the container.
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch struct {
	AllowPrivilegeEscalation *bool                                                                            `pulumi:"allowPrivilegeEscalation"`
	AppArmorProfile          *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatch `pulumi:"appArmorProfile"`
	Capabilities             *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatch    `pulumi:"capabilities"`
	Privileged               *bool                                                                            `pulumi:"privileged"`
	ProcMount                *string                                                                          `pulumi:"procMount"`
	ReadOnlyRootFilesystem   *bool                                                                            `pulumi:"readOnlyRootFilesystem"`
	RunAsGroup               *int                                                                             `pulumi:"runAsGroup"`
	RunAsNonRoot             *bool                                                                            `pulumi:"runAsNonRoot"`
	RunAsUser                *int                                                                             `pulumi:"runAsUser"`
	SeLinuxOptions           *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatch  `pulumi:"seLinuxOptions"`
	SeccompProfile           *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatch  `pulumi:"seccompProfile"`
	WindowsOptions           *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatch  `pulumi:"windowsOptions"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchArgs and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput
}

// Security context for the container.
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchArgs struct {
	AllowPrivilegeEscalation pulumi.BoolPtrInput                                                                     `pulumi:"allowPrivilegeEscalation"`
	AppArmorProfile          KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrInput `pulumi:"appArmorProfile"`
	Capabilities             KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrInput    `pulumi:"capabilities"`
	Privileged               pulumi.BoolPtrInput                                                                     `pulumi:"privileged"`
	ProcMount                pulumi.StringPtrInput                                                                   `pulumi:"procMount"`
	ReadOnlyRootFilesystem   pulumi.BoolPtrInput                                                                     `pulumi:"readOnlyRootFilesystem"`
	RunAsGroup               pulumi.IntPtrInput                                                                      `pulumi:"runAsGroup"`
	RunAsNonRoot             pulumi.BoolPtrInput                                                                     `pulumi:"runAsNonRoot"`
	RunAsUser                pulumi.IntPtrInput                                                                      `pulumi:"runAsUser"`
	SeLinuxOptions           KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrInput  `pulumi:"seLinuxOptions"`
	SeccompProfile           KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrInput  `pulumi:"seccompProfile"`
	WindowsOptions           KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrInput  `pulumi:"windowsOptions"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput)
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput).ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchArgs, KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtr and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput
}

type kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrType KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchArgs

func KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtr(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchArgs) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrInput {
	return (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput)
}

// Security context for the container.
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch {
		return &v
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput) AllowPrivilegeEscalation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *bool {
		return v.AllowPrivilegeEscalation
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput) AppArmorProfile() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatch {
		return v.AppArmorProfile
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput) Capabilities() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatch {
		return v.Capabilities
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput) Privileged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *bool { return v.Privileged }).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput) ProcMount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *string { return v.ProcMount }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput) ReadOnlyRootFilesystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *bool {
		return v.ReadOnlyRootFilesystem
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *int { return v.RunAsGroup }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *bool { return v.RunAsNonRoot }).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *int { return v.RunAsUser }).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput) SeLinuxOptions() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatch {
		return v.SeLinuxOptions
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput) SeccompProfile() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatch {
		return v.SeccompProfile
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput) WindowsOptions() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatch {
		return v.WindowsOptions
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput) Elem() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch
		return ret
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput) AllowPrivilegeEscalation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *bool {
		if v == nil {
			return nil
		}
		return v.AllowPrivilegeEscalation
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput) AppArmorProfile() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatch {
		if v == nil {
			return nil
		}
		return v.AppArmorProfile
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput) Capabilities() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatch {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput) Privileged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Privileged
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput) ProcMount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *string {
		if v == nil {
			return nil
		}
		return v.ProcMount
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput) ReadOnlyRootFilesystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnlyRootFilesystem
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *int {
		if v == nil {
			return nil
		}
		return v.RunAsGroup
	}).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *bool {
		if v == nil {
			return nil
		}
		return v.RunAsNonRoot
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *int {
		if v == nil {
			return nil
		}
		return v.RunAsUser
	}).(pulumi.IntPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput) SeLinuxOptions() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatch {
		if v == nil {
			return nil
		}
		return v.SeLinuxOptions
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput) SeccompProfile() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatch {
		if v == nil {
			return nil
		}
		return v.SeccompProfile
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput) WindowsOptions() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatch) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatch {
		if v == nil {
			return nil
		}
		return v.WindowsOptions
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptions struct {
	Level *string `pulumi:"level"`
	Role  *string `pulumi:"role"`
	Type  *string `pulumi:"type"`
	User  *string `pulumi:"user"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsArgs and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsArgs struct {
	Level pulumi.StringPtrInput `pulumi:"level"`
	Role  pulumi.StringPtrInput `pulumi:"role"`
	Type  pulumi.StringPtrInput `pulumi:"type"`
	User  pulumi.StringPtrInput `pulumi:"user"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput)
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput).ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsArgs, KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtr and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput
}

type kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrType KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsArgs

func KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtr(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsArgs) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrInput {
	return (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptions) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptions {
		return &v
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptions) *string {
		return v.Level
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptions) *string {
		return v.Role
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptions) *string {
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptions) *string {
		return v.User
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput) Elem() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptions) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptions {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptions
		return ret
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatch struct {
	Level *string `pulumi:"level"`
	Role  *string `pulumi:"role"`
	Type  *string `pulumi:"type"`
	User  *string `pulumi:"user"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchArgs and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchArgs struct {
	Level pulumi.StringPtrInput `pulumi:"level"`
	Role  pulumi.StringPtrInput `pulumi:"role"`
	Type  pulumi.StringPtrInput `pulumi:"type"`
	User  pulumi.StringPtrInput `pulumi:"user"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput)
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput).ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchArgs, KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtr and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput
}

type kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrType KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchArgs

func KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtr(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchArgs) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrInput {
	return (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatch) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatch {
		return &v
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatch) *string {
		return v.Level
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatch) *string {
		return v.Role
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatch) *string {
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatch) *string {
		return v.User
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput) Elem() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatch) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatch
		return ret
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatch) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfile struct {
	LocalhostProfile *string `pulumi:"localhostProfile"`
	Type             *string `pulumi:"type"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileArgs and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutput
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileArgs struct {
	LocalhostProfile pulumi.StringPtrInput `pulumi:"localhostProfile"`
	Type             pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfile)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutput)
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutput).ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileArgs, KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtr and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrInput` via:
//
//	        KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput
}

type kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrType KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileArgs

func KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtr(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileArgs) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrInput {
	return (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrType)(v)
}

func (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfile)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfile)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput {
	return o.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfile) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfile {
		return &v
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfile) *string {
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfile) *string {
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfile)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput) Elem() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfile) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfile {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfile
		return ret
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfile) *string {
		if v == nil {
			return nil
		}
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfile) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatch struct {
	LocalhostProfile *string `pulumi:"localhostProfile"`
	Type             *string `pulumi:"type"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchArgs and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutput
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchArgs struct {
	LocalhostProfile pulumi.StringPtrInput `pulumi:"localhostProfile"`
	Type             pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutput)
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutput).ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchArgs, KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtr and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput
}

type kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrType KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchArgs

func KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtr(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchArgs) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrInput {
	return (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatch) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatch {
		return &v
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatch) *string {
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatch) *string {
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput) Elem() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatch) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatch
		return ret
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatch) *string {
		if v == nil {
			return nil
		}
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptions struct {
	GmsaCredentialSpec     *string `pulumi:"gmsaCredentialSpec"`
	GmsaCredentialSpecName *string `pulumi:"gmsaCredentialSpecName"`
	HostProcess            *bool   `pulumi:"hostProcess"`
	RunAsUserName          *string `pulumi:"runAsUserName"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsArgs and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsArgs struct {
	GmsaCredentialSpec     pulumi.StringPtrInput `pulumi:"gmsaCredentialSpec"`
	GmsaCredentialSpecName pulumi.StringPtrInput `pulumi:"gmsaCredentialSpecName"`
	HostProcess            pulumi.BoolPtrInput   `pulumi:"hostProcess"`
	RunAsUserName          pulumi.StringPtrInput `pulumi:"runAsUserName"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptions)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput)
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput).ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsArgs, KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtr and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput
}

type kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrType KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsArgs

func KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtr(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsArgs) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrInput {
	return (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptions)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptions) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptions {
		return &v
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput) GmsaCredentialSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptions) *string {
		return v.GmsaCredentialSpec
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput) GmsaCredentialSpecName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptions) *string {
		return v.GmsaCredentialSpecName
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput) HostProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptions) *bool {
		return v.HostProcess
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput) RunAsUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptions) *string {
		return v.RunAsUserName
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptions)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput) Elem() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptions) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptions {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptions
		return ret
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput) GmsaCredentialSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.GmsaCredentialSpec
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput) GmsaCredentialSpecName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.GmsaCredentialSpecName
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput) HostProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptions) *bool {
		if v == nil {
			return nil
		}
		return v.HostProcess
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput) RunAsUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.RunAsUserName
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatch struct {
	GmsaCredentialSpec     *string `pulumi:"gmsaCredentialSpec"`
	GmsaCredentialSpecName *string `pulumi:"gmsaCredentialSpecName"`
	HostProcess            *bool   `pulumi:"hostProcess"`
	RunAsUserName          *string `pulumi:"runAsUserName"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchArgs and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchArgs struct {
	GmsaCredentialSpec     pulumi.StringPtrInput `pulumi:"gmsaCredentialSpec"`
	GmsaCredentialSpecName pulumi.StringPtrInput `pulumi:"gmsaCredentialSpecName"`
	HostProcess            pulumi.BoolPtrInput   `pulumi:"hostProcess"`
	RunAsUserName          pulumi.StringPtrInput `pulumi:"runAsUserName"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput)
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput).ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutputWithContext(ctx)
}

// KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchArgs, KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtr and KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrInput` via:
//
//	        KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput
}

type kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrType KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchArgs

func KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtr(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchArgs) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrInput {
	return (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrType)(v)
}

func (*kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatch)(nil)).Elem()
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrType) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput {
	return o.ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutputWithContext(context.Background())
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatch) *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatch {
		return &v
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput) GmsaCredentialSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatch) *string {
		return v.GmsaCredentialSpec
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput) GmsaCredentialSpecName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatch) *string {
		return v.GmsaCredentialSpecName
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput) HostProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatch) *bool {
		return v.HostProcess
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput) RunAsUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatch) *string {
		return v.RunAsUserName
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput) Elem() KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatch) KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatch {
		if v != nil {
			return *v
		}
		var ret KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatch
		return ret
	}).(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput) GmsaCredentialSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatch) *string {
		if v == nil {
			return nil
		}
		return v.GmsaCredentialSpec
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput) GmsaCredentialSpecName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatch) *string {
		if v == nil {
			return nil
		}
		return v.GmsaCredentialSpecName
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput) HostProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatch) *bool {
		if v == nil {
			return nil
		}
		return v.HostProcess
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput) RunAsUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatch) *string {
		if v == nil {
			return nil
		}
		return v.RunAsUserName
	}).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerVolumeMounts struct {
	MountPath         *string `pulumi:"mountPath"`
	MountPropagation  *string `pulumi:"mountPropagation"`
	Name              *string `pulumi:"name"`
	ReadOnly          *bool   `pulumi:"readOnly"`
	RecursiveReadOnly *string `pulumi:"recursiveReadOnly"`
	SubPath           *string `pulumi:"subPath"`
	SubPathExpr       *string `pulumi:"subPathExpr"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArgs and KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput() KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput
}

type KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArgs struct {
	MountPath         pulumi.StringPtrInput `pulumi:"mountPath"`
	MountPropagation  pulumi.StringPtrInput `pulumi:"mountPropagation"`
	Name              pulumi.StringPtrInput `pulumi:"name"`
	ReadOnly          pulumi.BoolPtrInput   `pulumi:"readOnly"`
	RecursiveReadOnly pulumi.StringPtrInput `pulumi:"recursiveReadOnly"`
	SubPath           pulumi.StringPtrInput `pulumi:"subPath"`
	SubPathExpr       pulumi.StringPtrInput `pulumi:"subPathExpr"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerVolumeMounts)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput() KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput)
}

// KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArray and KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArray{ KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArgs{...} }
type KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutput() KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutput
}

type KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArray []KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsInput

func (KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplateZookeeperContainerVolumeMounts)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArray) ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutput() KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArray) ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerVolumeMounts)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput() KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerVolumeMounts) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput) MountPropagation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerVolumeMounts) *string { return v.MountPropagation }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerVolumeMounts) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerVolumeMounts) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput) RecursiveReadOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerVolumeMounts) *string { return v.RecursiveReadOnly }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput) SubPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerVolumeMounts) *string { return v.SubPath }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput) SubPathExpr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerVolumeMounts) *string { return v.SubPathExpr }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplateZookeeperContainerVolumeMounts)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutput() KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplateZookeeperContainerVolumeMounts {
		return vs[0].([]KafkaSpecZookeeperTemplateZookeeperContainerVolumeMounts)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatch struct {
	MountPath         *string `pulumi:"mountPath"`
	MountPropagation  *string `pulumi:"mountPropagation"`
	Name              *string `pulumi:"name"`
	ReadOnly          *bool   `pulumi:"readOnly"`
	RecursiveReadOnly *string `pulumi:"recursiveReadOnly"`
	SubPath           *string `pulumi:"subPath"`
	SubPathExpr       *string `pulumi:"subPathExpr"`
}

// KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArgs and KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArgs{...}
type KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput
}

type KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArgs struct {
	MountPath         pulumi.StringPtrInput `pulumi:"mountPath"`
	MountPropagation  pulumi.StringPtrInput `pulumi:"mountPropagation"`
	Name              pulumi.StringPtrInput `pulumi:"name"`
	ReadOnly          pulumi.BoolPtrInput   `pulumi:"readOnly"`
	RecursiveReadOnly pulumi.StringPtrInput `pulumi:"recursiveReadOnly"`
	SubPath           pulumi.StringPtrInput `pulumi:"subPath"`
	SubPathExpr       pulumi.StringPtrInput `pulumi:"subPathExpr"`
}

func (KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArgs) ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput)
}

// KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayInput is an input type that accepts KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArray and KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayInput` via:
//
//	KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArray{ KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArgs{...} }
type KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayInput interface {
	pulumi.Input

	ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutput() KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutput
	ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutputWithContext(context.Context) KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutput
}

type KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArray []KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchInput

func (KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatch)(nil)).Elem()
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArray) ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutput() KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutput {
	return i.ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArray) ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput() KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatch) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput) MountPropagation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatch) *string {
		return v.MountPropagation
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatch) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput) RecursiveReadOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatch) *string {
		return v.RecursiveReadOnly
	}).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput) SubPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatch) *string { return v.SubPath }).(pulumi.StringPtrOutput)
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput) SubPathExpr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatch) *string { return v.SubPathExpr }).(pulumi.StringPtrOutput)
}

type KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatch)(nil)).Elem()
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutput() KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutput) ToKafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutputWithContext(ctx context.Context) KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutput {
	return o
}

func (o KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutput) Index(i pulumi.IntInput) KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatch {
		return vs[0].([]KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatch)[vs[1].(int)]
	}).(KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput)
}

// The status of the Kafka cluster.
type KafkaStatus struct {
	AutoRebalance *KafkaStatusAutoRebalance `pulumi:"autoRebalance"`
	// Kafka cluster Id.
	ClusterId *string `pulumi:"clusterId"`
	// List of status conditions.
	Conditions []KafkaStatusConditions `pulumi:"conditions"`
	// Defines where cluster metadata are stored. Since Kafka KRaft has been fully adopted, the only applicable value is `KRaft`.
	KafkaMetadataState *string `pulumi:"kafkaMetadataState"`
	// The KRaft metadata.version currently used by the Kafka cluster.
	KafkaMetadataVersion *string `pulumi:"kafkaMetadataVersion"`
	// List of the KafkaNodePools used by this Kafka cluster.
	KafkaNodePools []KafkaStatusKafkaNodePools `pulumi:"kafkaNodePools"`
	// The version of Kafka currently deployed in the cluster.
	KafkaVersion *string `pulumi:"kafkaVersion"`
	// Addresses of the internal and external listeners.
	Listeners []KafkaStatusListeners `pulumi:"listeners"`
	// The generation of the CRD that was last reconciled by the operator.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// The version of the Strimzi Cluster Operator which performed the last successful reconciliation.
	OperatorLastSuccessfulVersion *string `pulumi:"operatorLastSuccessfulVersion"`
	// Registered node IDs used by this Kafka cluster. This field is used for internal purposes only and will be removed in the future.
	RegisteredNodeIds []int `pulumi:"registeredNodeIds"`
}

// KafkaStatusInput is an input type that accepts KafkaStatusArgs and KafkaStatusOutput values.
// You can construct a concrete instance of `KafkaStatusInput` via:
//
//	KafkaStatusArgs{...}
type KafkaStatusInput interface {
	pulumi.Input

	ToKafkaStatusOutput() KafkaStatusOutput
	ToKafkaStatusOutputWithContext(context.Context) KafkaStatusOutput
}

// The status of the Kafka cluster.
type KafkaStatusArgs struct {
	AutoRebalance KafkaStatusAutoRebalancePtrInput `pulumi:"autoRebalance"`
	// Kafka cluster Id.
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// List of status conditions.
	Conditions KafkaStatusConditionsArrayInput `pulumi:"conditions"`
	// Defines where cluster metadata are stored. Since Kafka KRaft has been fully adopted, the only applicable value is `KRaft`.
	KafkaMetadataState pulumi.StringPtrInput `pulumi:"kafkaMetadataState"`
	// The KRaft metadata.version currently used by the Kafka cluster.
	KafkaMetadataVersion pulumi.StringPtrInput `pulumi:"kafkaMetadataVersion"`
	// List of the KafkaNodePools used by this Kafka cluster.
	KafkaNodePools KafkaStatusKafkaNodePoolsArrayInput `pulumi:"kafkaNodePools"`
	// The version of Kafka currently deployed in the cluster.
	KafkaVersion pulumi.StringPtrInput `pulumi:"kafkaVersion"`
	// Addresses of the internal and external listeners.
	Listeners KafkaStatusListenersArrayInput `pulumi:"listeners"`
	// The generation of the CRD that was last reconciled by the operator.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// The version of the Strimzi Cluster Operator which performed the last successful reconciliation.
	OperatorLastSuccessfulVersion pulumi.StringPtrInput `pulumi:"operatorLastSuccessfulVersion"`
	// Registered node IDs used by this Kafka cluster. This field is used for internal purposes only and will be removed in the future.
	RegisteredNodeIds pulumi.IntArrayInput `pulumi:"registeredNodeIds"`
}

func (KafkaStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatus)(nil)).Elem()
}

func (i KafkaStatusArgs) ToKafkaStatusOutput() KafkaStatusOutput {
	return i.ToKafkaStatusOutputWithContext(context.Background())
}

func (i KafkaStatusArgs) ToKafkaStatusOutputWithContext(ctx context.Context) KafkaStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusOutput)
}

func (i KafkaStatusArgs) ToKafkaStatusPtrOutput() KafkaStatusPtrOutput {
	return i.ToKafkaStatusPtrOutputWithContext(context.Background())
}

func (i KafkaStatusArgs) ToKafkaStatusPtrOutputWithContext(ctx context.Context) KafkaStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusOutput).ToKafkaStatusPtrOutputWithContext(ctx)
}

// KafkaStatusPtrInput is an input type that accepts KafkaStatusArgs, KafkaStatusPtr and KafkaStatusPtrOutput values.
// You can construct a concrete instance of `KafkaStatusPtrInput` via:
//
//	        KafkaStatusArgs{...}
//
//	or:
//
//	        nil
type KafkaStatusPtrInput interface {
	pulumi.Input

	ToKafkaStatusPtrOutput() KafkaStatusPtrOutput
	ToKafkaStatusPtrOutputWithContext(context.Context) KafkaStatusPtrOutput
}

type kafkaStatusPtrType KafkaStatusArgs

func KafkaStatusPtr(v *KafkaStatusArgs) KafkaStatusPtrInput {
	return (*kafkaStatusPtrType)(v)
}

func (*kafkaStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaStatus)(nil)).Elem()
}

func (i *kafkaStatusPtrType) ToKafkaStatusPtrOutput() KafkaStatusPtrOutput {
	return i.ToKafkaStatusPtrOutputWithContext(context.Background())
}

func (i *kafkaStatusPtrType) ToKafkaStatusPtrOutputWithContext(ctx context.Context) KafkaStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusPtrOutput)
}

// The status of the Kafka cluster.
type KafkaStatusOutput struct{ *pulumi.OutputState }

func (KafkaStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatus)(nil)).Elem()
}

func (o KafkaStatusOutput) ToKafkaStatusOutput() KafkaStatusOutput {
	return o
}

func (o KafkaStatusOutput) ToKafkaStatusOutputWithContext(ctx context.Context) KafkaStatusOutput {
	return o
}

func (o KafkaStatusOutput) ToKafkaStatusPtrOutput() KafkaStatusPtrOutput {
	return o.ToKafkaStatusPtrOutputWithContext(context.Background())
}

func (o KafkaStatusOutput) ToKafkaStatusPtrOutputWithContext(ctx context.Context) KafkaStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaStatus) *KafkaStatus {
		return &v
	}).(KafkaStatusPtrOutput)
}

func (o KafkaStatusOutput) AutoRebalance() KafkaStatusAutoRebalancePtrOutput {
	return o.ApplyT(func(v KafkaStatus) *KafkaStatusAutoRebalance { return v.AutoRebalance }).(KafkaStatusAutoRebalancePtrOutput)
}

// Kafka cluster Id.
func (o KafkaStatusOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatus) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// List of status conditions.
func (o KafkaStatusOutput) Conditions() KafkaStatusConditionsArrayOutput {
	return o.ApplyT(func(v KafkaStatus) []KafkaStatusConditions { return v.Conditions }).(KafkaStatusConditionsArrayOutput)
}

// Defines where cluster metadata are stored. Since Kafka KRaft has been fully adopted, the only applicable value is `KRaft`.
func (o KafkaStatusOutput) KafkaMetadataState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatus) *string { return v.KafkaMetadataState }).(pulumi.StringPtrOutput)
}

// The KRaft metadata.version currently used by the Kafka cluster.
func (o KafkaStatusOutput) KafkaMetadataVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatus) *string { return v.KafkaMetadataVersion }).(pulumi.StringPtrOutput)
}

// List of the KafkaNodePools used by this Kafka cluster.
func (o KafkaStatusOutput) KafkaNodePools() KafkaStatusKafkaNodePoolsArrayOutput {
	return o.ApplyT(func(v KafkaStatus) []KafkaStatusKafkaNodePools { return v.KafkaNodePools }).(KafkaStatusKafkaNodePoolsArrayOutput)
}

// The version of Kafka currently deployed in the cluster.
func (o KafkaStatusOutput) KafkaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatus) *string { return v.KafkaVersion }).(pulumi.StringPtrOutput)
}

// Addresses of the internal and external listeners.
func (o KafkaStatusOutput) Listeners() KafkaStatusListenersArrayOutput {
	return o.ApplyT(func(v KafkaStatus) []KafkaStatusListeners { return v.Listeners }).(KafkaStatusListenersArrayOutput)
}

// The generation of the CRD that was last reconciled by the operator.
func (o KafkaStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// The version of the Strimzi Cluster Operator which performed the last successful reconciliation.
func (o KafkaStatusOutput) OperatorLastSuccessfulVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatus) *string { return v.OperatorLastSuccessfulVersion }).(pulumi.StringPtrOutput)
}

// Registered node IDs used by this Kafka cluster. This field is used for internal purposes only and will be removed in the future.
func (o KafkaStatusOutput) RegisteredNodeIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v KafkaStatus) []int { return v.RegisteredNodeIds }).(pulumi.IntArrayOutput)
}

type KafkaStatusPtrOutput struct{ *pulumi.OutputState }

func (KafkaStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaStatus)(nil)).Elem()
}

func (o KafkaStatusPtrOutput) ToKafkaStatusPtrOutput() KafkaStatusPtrOutput {
	return o
}

func (o KafkaStatusPtrOutput) ToKafkaStatusPtrOutputWithContext(ctx context.Context) KafkaStatusPtrOutput {
	return o
}

func (o KafkaStatusPtrOutput) Elem() KafkaStatusOutput {
	return o.ApplyT(func(v *KafkaStatus) KafkaStatus {
		if v != nil {
			return *v
		}
		var ret KafkaStatus
		return ret
	}).(KafkaStatusOutput)
}

func (o KafkaStatusPtrOutput) AutoRebalance() KafkaStatusAutoRebalancePtrOutput {
	return o.ApplyT(func(v *KafkaStatus) *KafkaStatusAutoRebalance {
		if v == nil {
			return nil
		}
		return v.AutoRebalance
	}).(KafkaStatusAutoRebalancePtrOutput)
}

// Kafka cluster Id.
func (o KafkaStatusPtrOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaStatus) *string {
		if v == nil {
			return nil
		}
		return v.ClusterId
	}).(pulumi.StringPtrOutput)
}

// List of status conditions.
func (o KafkaStatusPtrOutput) Conditions() KafkaStatusConditionsArrayOutput {
	return o.ApplyT(func(v *KafkaStatus) []KafkaStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(KafkaStatusConditionsArrayOutput)
}

// Defines where cluster metadata are stored. Since Kafka KRaft has been fully adopted, the only applicable value is `KRaft`.
func (o KafkaStatusPtrOutput) KafkaMetadataState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaStatus) *string {
		if v == nil {
			return nil
		}
		return v.KafkaMetadataState
	}).(pulumi.StringPtrOutput)
}

// The KRaft metadata.version currently used by the Kafka cluster.
func (o KafkaStatusPtrOutput) KafkaMetadataVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaStatus) *string {
		if v == nil {
			return nil
		}
		return v.KafkaMetadataVersion
	}).(pulumi.StringPtrOutput)
}

// List of the KafkaNodePools used by this Kafka cluster.
func (o KafkaStatusPtrOutput) KafkaNodePools() KafkaStatusKafkaNodePoolsArrayOutput {
	return o.ApplyT(func(v *KafkaStatus) []KafkaStatusKafkaNodePools {
		if v == nil {
			return nil
		}
		return v.KafkaNodePools
	}).(KafkaStatusKafkaNodePoolsArrayOutput)
}

// The version of Kafka currently deployed in the cluster.
func (o KafkaStatusPtrOutput) KafkaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaStatus) *string {
		if v == nil {
			return nil
		}
		return v.KafkaVersion
	}).(pulumi.StringPtrOutput)
}

// Addresses of the internal and external listeners.
func (o KafkaStatusPtrOutput) Listeners() KafkaStatusListenersArrayOutput {
	return o.ApplyT(func(v *KafkaStatus) []KafkaStatusListeners {
		if v == nil {
			return nil
		}
		return v.Listeners
	}).(KafkaStatusListenersArrayOutput)
}

// The generation of the CRD that was last reconciled by the operator.
func (o KafkaStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// The version of the Strimzi Cluster Operator which performed the last successful reconciliation.
func (o KafkaStatusPtrOutput) OperatorLastSuccessfulVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaStatus) *string {
		if v == nil {
			return nil
		}
		return v.OperatorLastSuccessfulVersion
	}).(pulumi.StringPtrOutput)
}

// Registered node IDs used by this Kafka cluster. This field is used for internal purposes only and will be removed in the future.
func (o KafkaStatusPtrOutput) RegisteredNodeIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *KafkaStatus) []int {
		if v == nil {
			return nil
		}
		return v.RegisteredNodeIds
	}).(pulumi.IntArrayOutput)
}

// The status of an auto-rebalancing triggered by a cluster scaling request.
type KafkaStatusAutoRebalance struct {
	// The timestamp of the latest auto-rebalancing state update.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// List of modes where an auto-rebalancing operation is either running or queued.
	// Each mode entry (`add-brokers` or `remove-brokers`) includes one of the following:
	//
	// * Broker IDs for a current auto-rebalance.
	// * Broker IDs for a queued auto-rebalance (if a previous rebalance is still in progress).
	Modes []KafkaStatusAutoRebalanceModes `pulumi:"modes"`
	// The current state of an auto-rebalancing operation. Possible values are:
	//
	// * `Idle` as the initial state when an auto-rebalancing is requested or as final state when it completes or fails.
	// * `RebalanceOnScaleDown` if an auto-rebalance related to a scale-down operation is running.
	// * `RebalanceOnScaleUp` if an auto-rebalance related to a scale-up operation is running.
	State *string `pulumi:"state"`
}

// KafkaStatusAutoRebalanceInput is an input type that accepts KafkaStatusAutoRebalanceArgs and KafkaStatusAutoRebalanceOutput values.
// You can construct a concrete instance of `KafkaStatusAutoRebalanceInput` via:
//
//	KafkaStatusAutoRebalanceArgs{...}
type KafkaStatusAutoRebalanceInput interface {
	pulumi.Input

	ToKafkaStatusAutoRebalanceOutput() KafkaStatusAutoRebalanceOutput
	ToKafkaStatusAutoRebalanceOutputWithContext(context.Context) KafkaStatusAutoRebalanceOutput
}

// The status of an auto-rebalancing triggered by a cluster scaling request.
type KafkaStatusAutoRebalanceArgs struct {
	// The timestamp of the latest auto-rebalancing state update.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// List of modes where an auto-rebalancing operation is either running or queued.
	// Each mode entry (`add-brokers` or `remove-brokers`) includes one of the following:
	//
	// * Broker IDs for a current auto-rebalance.
	// * Broker IDs for a queued auto-rebalance (if a previous rebalance is still in progress).
	Modes KafkaStatusAutoRebalanceModesArrayInput `pulumi:"modes"`
	// The current state of an auto-rebalancing operation. Possible values are:
	//
	// * `Idle` as the initial state when an auto-rebalancing is requested or as final state when it completes or fails.
	// * `RebalanceOnScaleDown` if an auto-rebalance related to a scale-down operation is running.
	// * `RebalanceOnScaleUp` if an auto-rebalance related to a scale-up operation is running.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (KafkaStatusAutoRebalanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusAutoRebalance)(nil)).Elem()
}

func (i KafkaStatusAutoRebalanceArgs) ToKafkaStatusAutoRebalanceOutput() KafkaStatusAutoRebalanceOutput {
	return i.ToKafkaStatusAutoRebalanceOutputWithContext(context.Background())
}

func (i KafkaStatusAutoRebalanceArgs) ToKafkaStatusAutoRebalanceOutputWithContext(ctx context.Context) KafkaStatusAutoRebalanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusAutoRebalanceOutput)
}

func (i KafkaStatusAutoRebalanceArgs) ToKafkaStatusAutoRebalancePtrOutput() KafkaStatusAutoRebalancePtrOutput {
	return i.ToKafkaStatusAutoRebalancePtrOutputWithContext(context.Background())
}

func (i KafkaStatusAutoRebalanceArgs) ToKafkaStatusAutoRebalancePtrOutputWithContext(ctx context.Context) KafkaStatusAutoRebalancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusAutoRebalanceOutput).ToKafkaStatusAutoRebalancePtrOutputWithContext(ctx)
}

// KafkaStatusAutoRebalancePtrInput is an input type that accepts KafkaStatusAutoRebalanceArgs, KafkaStatusAutoRebalancePtr and KafkaStatusAutoRebalancePtrOutput values.
// You can construct a concrete instance of `KafkaStatusAutoRebalancePtrInput` via:
//
//	        KafkaStatusAutoRebalanceArgs{...}
//
//	or:
//
//	        nil
type KafkaStatusAutoRebalancePtrInput interface {
	pulumi.Input

	ToKafkaStatusAutoRebalancePtrOutput() KafkaStatusAutoRebalancePtrOutput
	ToKafkaStatusAutoRebalancePtrOutputWithContext(context.Context) KafkaStatusAutoRebalancePtrOutput
}

type kafkaStatusAutoRebalancePtrType KafkaStatusAutoRebalanceArgs

func KafkaStatusAutoRebalancePtr(v *KafkaStatusAutoRebalanceArgs) KafkaStatusAutoRebalancePtrInput {
	return (*kafkaStatusAutoRebalancePtrType)(v)
}

func (*kafkaStatusAutoRebalancePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaStatusAutoRebalance)(nil)).Elem()
}

func (i *kafkaStatusAutoRebalancePtrType) ToKafkaStatusAutoRebalancePtrOutput() KafkaStatusAutoRebalancePtrOutput {
	return i.ToKafkaStatusAutoRebalancePtrOutputWithContext(context.Background())
}

func (i *kafkaStatusAutoRebalancePtrType) ToKafkaStatusAutoRebalancePtrOutputWithContext(ctx context.Context) KafkaStatusAutoRebalancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusAutoRebalancePtrOutput)
}

// The status of an auto-rebalancing triggered by a cluster scaling request.
type KafkaStatusAutoRebalanceOutput struct{ *pulumi.OutputState }

func (KafkaStatusAutoRebalanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusAutoRebalance)(nil)).Elem()
}

func (o KafkaStatusAutoRebalanceOutput) ToKafkaStatusAutoRebalanceOutput() KafkaStatusAutoRebalanceOutput {
	return o
}

func (o KafkaStatusAutoRebalanceOutput) ToKafkaStatusAutoRebalanceOutputWithContext(ctx context.Context) KafkaStatusAutoRebalanceOutput {
	return o
}

func (o KafkaStatusAutoRebalanceOutput) ToKafkaStatusAutoRebalancePtrOutput() KafkaStatusAutoRebalancePtrOutput {
	return o.ToKafkaStatusAutoRebalancePtrOutputWithContext(context.Background())
}

func (o KafkaStatusAutoRebalanceOutput) ToKafkaStatusAutoRebalancePtrOutputWithContext(ctx context.Context) KafkaStatusAutoRebalancePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaStatusAutoRebalance) *KafkaStatusAutoRebalance {
		return &v
	}).(KafkaStatusAutoRebalancePtrOutput)
}

// The timestamp of the latest auto-rebalancing state update.
func (o KafkaStatusAutoRebalanceOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusAutoRebalance) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// List of modes where an auto-rebalancing operation is either running or queued.
// Each mode entry (`add-brokers` or `remove-brokers`) includes one of the following:
//
// * Broker IDs for a current auto-rebalance.
// * Broker IDs for a queued auto-rebalance (if a previous rebalance is still in progress).
func (o KafkaStatusAutoRebalanceOutput) Modes() KafkaStatusAutoRebalanceModesArrayOutput {
	return o.ApplyT(func(v KafkaStatusAutoRebalance) []KafkaStatusAutoRebalanceModes { return v.Modes }).(KafkaStatusAutoRebalanceModesArrayOutput)
}

// The current state of an auto-rebalancing operation. Possible values are:
//
// * `Idle` as the initial state when an auto-rebalancing is requested or as final state when it completes or fails.
// * `RebalanceOnScaleDown` if an auto-rebalance related to a scale-down operation is running.
// * `RebalanceOnScaleUp` if an auto-rebalance related to a scale-up operation is running.
func (o KafkaStatusAutoRebalanceOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusAutoRebalance) *string { return v.State }).(pulumi.StringPtrOutput)
}

type KafkaStatusAutoRebalancePtrOutput struct{ *pulumi.OutputState }

func (KafkaStatusAutoRebalancePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaStatusAutoRebalance)(nil)).Elem()
}

func (o KafkaStatusAutoRebalancePtrOutput) ToKafkaStatusAutoRebalancePtrOutput() KafkaStatusAutoRebalancePtrOutput {
	return o
}

func (o KafkaStatusAutoRebalancePtrOutput) ToKafkaStatusAutoRebalancePtrOutputWithContext(ctx context.Context) KafkaStatusAutoRebalancePtrOutput {
	return o
}

func (o KafkaStatusAutoRebalancePtrOutput) Elem() KafkaStatusAutoRebalanceOutput {
	return o.ApplyT(func(v *KafkaStatusAutoRebalance) KafkaStatusAutoRebalance {
		if v != nil {
			return *v
		}
		var ret KafkaStatusAutoRebalance
		return ret
	}).(KafkaStatusAutoRebalanceOutput)
}

// The timestamp of the latest auto-rebalancing state update.
func (o KafkaStatusAutoRebalancePtrOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaStatusAutoRebalance) *string {
		if v == nil {
			return nil
		}
		return v.LastTransitionTime
	}).(pulumi.StringPtrOutput)
}

// List of modes where an auto-rebalancing operation is either running or queued.
// Each mode entry (`add-brokers` or `remove-brokers`) includes one of the following:
//
// * Broker IDs for a current auto-rebalance.
// * Broker IDs for a queued auto-rebalance (if a previous rebalance is still in progress).
func (o KafkaStatusAutoRebalancePtrOutput) Modes() KafkaStatusAutoRebalanceModesArrayOutput {
	return o.ApplyT(func(v *KafkaStatusAutoRebalance) []KafkaStatusAutoRebalanceModes {
		if v == nil {
			return nil
		}
		return v.Modes
	}).(KafkaStatusAutoRebalanceModesArrayOutput)
}

// The current state of an auto-rebalancing operation. Possible values are:
//
// * `Idle` as the initial state when an auto-rebalancing is requested or as final state when it completes or fails.
// * `RebalanceOnScaleDown` if an auto-rebalance related to a scale-down operation is running.
// * `RebalanceOnScaleUp` if an auto-rebalance related to a scale-up operation is running.
func (o KafkaStatusAutoRebalancePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaStatusAutoRebalance) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

type KafkaStatusAutoRebalanceModes struct {
	// List of broker IDs involved in an auto-rebalancing operation related to the current mode.
	// The list contains one of the following:
	//
	// * Broker IDs for a current auto-rebalance.
	// * Broker IDs for a queued auto-rebalance (if a previous auto-rebalance is still in progress).
	Brokers []int `pulumi:"brokers"`
	// Mode for which there is an auto-rebalancing operation in progress or queued, when brokers are added or removed. The possible modes are `add-brokers` and `remove-brokers`.
	Mode *string `pulumi:"mode"`
}

// KafkaStatusAutoRebalanceModesInput is an input type that accepts KafkaStatusAutoRebalanceModesArgs and KafkaStatusAutoRebalanceModesOutput values.
// You can construct a concrete instance of `KafkaStatusAutoRebalanceModesInput` via:
//
//	KafkaStatusAutoRebalanceModesArgs{...}
type KafkaStatusAutoRebalanceModesInput interface {
	pulumi.Input

	ToKafkaStatusAutoRebalanceModesOutput() KafkaStatusAutoRebalanceModesOutput
	ToKafkaStatusAutoRebalanceModesOutputWithContext(context.Context) KafkaStatusAutoRebalanceModesOutput
}

type KafkaStatusAutoRebalanceModesArgs struct {
	// List of broker IDs involved in an auto-rebalancing operation related to the current mode.
	// The list contains one of the following:
	//
	// * Broker IDs for a current auto-rebalance.
	// * Broker IDs for a queued auto-rebalance (if a previous auto-rebalance is still in progress).
	Brokers pulumi.IntArrayInput `pulumi:"brokers"`
	// Mode for which there is an auto-rebalancing operation in progress or queued, when brokers are added or removed. The possible modes are `add-brokers` and `remove-brokers`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (KafkaStatusAutoRebalanceModesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusAutoRebalanceModes)(nil)).Elem()
}

func (i KafkaStatusAutoRebalanceModesArgs) ToKafkaStatusAutoRebalanceModesOutput() KafkaStatusAutoRebalanceModesOutput {
	return i.ToKafkaStatusAutoRebalanceModesOutputWithContext(context.Background())
}

func (i KafkaStatusAutoRebalanceModesArgs) ToKafkaStatusAutoRebalanceModesOutputWithContext(ctx context.Context) KafkaStatusAutoRebalanceModesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusAutoRebalanceModesOutput)
}

// KafkaStatusAutoRebalanceModesArrayInput is an input type that accepts KafkaStatusAutoRebalanceModesArray and KafkaStatusAutoRebalanceModesArrayOutput values.
// You can construct a concrete instance of `KafkaStatusAutoRebalanceModesArrayInput` via:
//
//	KafkaStatusAutoRebalanceModesArray{ KafkaStatusAutoRebalanceModesArgs{...} }
type KafkaStatusAutoRebalanceModesArrayInput interface {
	pulumi.Input

	ToKafkaStatusAutoRebalanceModesArrayOutput() KafkaStatusAutoRebalanceModesArrayOutput
	ToKafkaStatusAutoRebalanceModesArrayOutputWithContext(context.Context) KafkaStatusAutoRebalanceModesArrayOutput
}

type KafkaStatusAutoRebalanceModesArray []KafkaStatusAutoRebalanceModesInput

func (KafkaStatusAutoRebalanceModesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaStatusAutoRebalanceModes)(nil)).Elem()
}

func (i KafkaStatusAutoRebalanceModesArray) ToKafkaStatusAutoRebalanceModesArrayOutput() KafkaStatusAutoRebalanceModesArrayOutput {
	return i.ToKafkaStatusAutoRebalanceModesArrayOutputWithContext(context.Background())
}

func (i KafkaStatusAutoRebalanceModesArray) ToKafkaStatusAutoRebalanceModesArrayOutputWithContext(ctx context.Context) KafkaStatusAutoRebalanceModesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusAutoRebalanceModesArrayOutput)
}

type KafkaStatusAutoRebalanceModesOutput struct{ *pulumi.OutputState }

func (KafkaStatusAutoRebalanceModesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusAutoRebalanceModes)(nil)).Elem()
}

func (o KafkaStatusAutoRebalanceModesOutput) ToKafkaStatusAutoRebalanceModesOutput() KafkaStatusAutoRebalanceModesOutput {
	return o
}

func (o KafkaStatusAutoRebalanceModesOutput) ToKafkaStatusAutoRebalanceModesOutputWithContext(ctx context.Context) KafkaStatusAutoRebalanceModesOutput {
	return o
}

// List of broker IDs involved in an auto-rebalancing operation related to the current mode.
// The list contains one of the following:
//
// * Broker IDs for a current auto-rebalance.
// * Broker IDs for a queued auto-rebalance (if a previous auto-rebalance is still in progress).
func (o KafkaStatusAutoRebalanceModesOutput) Brokers() pulumi.IntArrayOutput {
	return o.ApplyT(func(v KafkaStatusAutoRebalanceModes) []int { return v.Brokers }).(pulumi.IntArrayOutput)
}

// Mode for which there is an auto-rebalancing operation in progress or queued, when brokers are added or removed. The possible modes are `add-brokers` and `remove-brokers`.
func (o KafkaStatusAutoRebalanceModesOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusAutoRebalanceModes) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type KafkaStatusAutoRebalanceModesArrayOutput struct{ *pulumi.OutputState }

func (KafkaStatusAutoRebalanceModesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaStatusAutoRebalanceModes)(nil)).Elem()
}

func (o KafkaStatusAutoRebalanceModesArrayOutput) ToKafkaStatusAutoRebalanceModesArrayOutput() KafkaStatusAutoRebalanceModesArrayOutput {
	return o
}

func (o KafkaStatusAutoRebalanceModesArrayOutput) ToKafkaStatusAutoRebalanceModesArrayOutputWithContext(ctx context.Context) KafkaStatusAutoRebalanceModesArrayOutput {
	return o
}

func (o KafkaStatusAutoRebalanceModesArrayOutput) Index(i pulumi.IntInput) KafkaStatusAutoRebalanceModesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaStatusAutoRebalanceModes {
		return vs[0].([]KafkaStatusAutoRebalanceModes)[vs[1].(int)]
	}).(KafkaStatusAutoRebalanceModesOutput)
}

type KafkaStatusAutoRebalanceModesPatch struct {
	// List of broker IDs involved in an auto-rebalancing operation related to the current mode.
	// The list contains one of the following:
	//
	// * Broker IDs for a current auto-rebalance.
	// * Broker IDs for a queued auto-rebalance (if a previous auto-rebalance is still in progress).
	Brokers []int `pulumi:"brokers"`
	// Mode for which there is an auto-rebalancing operation in progress or queued, when brokers are added or removed. The possible modes are `add-brokers` and `remove-brokers`.
	Mode *string `pulumi:"mode"`
}

// KafkaStatusAutoRebalanceModesPatchInput is an input type that accepts KafkaStatusAutoRebalanceModesPatchArgs and KafkaStatusAutoRebalanceModesPatchOutput values.
// You can construct a concrete instance of `KafkaStatusAutoRebalanceModesPatchInput` via:
//
//	KafkaStatusAutoRebalanceModesPatchArgs{...}
type KafkaStatusAutoRebalanceModesPatchInput interface {
	pulumi.Input

	ToKafkaStatusAutoRebalanceModesPatchOutput() KafkaStatusAutoRebalanceModesPatchOutput
	ToKafkaStatusAutoRebalanceModesPatchOutputWithContext(context.Context) KafkaStatusAutoRebalanceModesPatchOutput
}

type KafkaStatusAutoRebalanceModesPatchArgs struct {
	// List of broker IDs involved in an auto-rebalancing operation related to the current mode.
	// The list contains one of the following:
	//
	// * Broker IDs for a current auto-rebalance.
	// * Broker IDs for a queued auto-rebalance (if a previous auto-rebalance is still in progress).
	Brokers pulumi.IntArrayInput `pulumi:"brokers"`
	// Mode for which there is an auto-rebalancing operation in progress or queued, when brokers are added or removed. The possible modes are `add-brokers` and `remove-brokers`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (KafkaStatusAutoRebalanceModesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusAutoRebalanceModesPatch)(nil)).Elem()
}

func (i KafkaStatusAutoRebalanceModesPatchArgs) ToKafkaStatusAutoRebalanceModesPatchOutput() KafkaStatusAutoRebalanceModesPatchOutput {
	return i.ToKafkaStatusAutoRebalanceModesPatchOutputWithContext(context.Background())
}

func (i KafkaStatusAutoRebalanceModesPatchArgs) ToKafkaStatusAutoRebalanceModesPatchOutputWithContext(ctx context.Context) KafkaStatusAutoRebalanceModesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusAutoRebalanceModesPatchOutput)
}

// KafkaStatusAutoRebalanceModesPatchArrayInput is an input type that accepts KafkaStatusAutoRebalanceModesPatchArray and KafkaStatusAutoRebalanceModesPatchArrayOutput values.
// You can construct a concrete instance of `KafkaStatusAutoRebalanceModesPatchArrayInput` via:
//
//	KafkaStatusAutoRebalanceModesPatchArray{ KafkaStatusAutoRebalanceModesPatchArgs{...} }
type KafkaStatusAutoRebalanceModesPatchArrayInput interface {
	pulumi.Input

	ToKafkaStatusAutoRebalanceModesPatchArrayOutput() KafkaStatusAutoRebalanceModesPatchArrayOutput
	ToKafkaStatusAutoRebalanceModesPatchArrayOutputWithContext(context.Context) KafkaStatusAutoRebalanceModesPatchArrayOutput
}

type KafkaStatusAutoRebalanceModesPatchArray []KafkaStatusAutoRebalanceModesPatchInput

func (KafkaStatusAutoRebalanceModesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaStatusAutoRebalanceModesPatch)(nil)).Elem()
}

func (i KafkaStatusAutoRebalanceModesPatchArray) ToKafkaStatusAutoRebalanceModesPatchArrayOutput() KafkaStatusAutoRebalanceModesPatchArrayOutput {
	return i.ToKafkaStatusAutoRebalanceModesPatchArrayOutputWithContext(context.Background())
}

func (i KafkaStatusAutoRebalanceModesPatchArray) ToKafkaStatusAutoRebalanceModesPatchArrayOutputWithContext(ctx context.Context) KafkaStatusAutoRebalanceModesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusAutoRebalanceModesPatchArrayOutput)
}

type KafkaStatusAutoRebalanceModesPatchOutput struct{ *pulumi.OutputState }

func (KafkaStatusAutoRebalanceModesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusAutoRebalanceModesPatch)(nil)).Elem()
}

func (o KafkaStatusAutoRebalanceModesPatchOutput) ToKafkaStatusAutoRebalanceModesPatchOutput() KafkaStatusAutoRebalanceModesPatchOutput {
	return o
}

func (o KafkaStatusAutoRebalanceModesPatchOutput) ToKafkaStatusAutoRebalanceModesPatchOutputWithContext(ctx context.Context) KafkaStatusAutoRebalanceModesPatchOutput {
	return o
}

// List of broker IDs involved in an auto-rebalancing operation related to the current mode.
// The list contains one of the following:
//
// * Broker IDs for a current auto-rebalance.
// * Broker IDs for a queued auto-rebalance (if a previous auto-rebalance is still in progress).
func (o KafkaStatusAutoRebalanceModesPatchOutput) Brokers() pulumi.IntArrayOutput {
	return o.ApplyT(func(v KafkaStatusAutoRebalanceModesPatch) []int { return v.Brokers }).(pulumi.IntArrayOutput)
}

// Mode for which there is an auto-rebalancing operation in progress or queued, when brokers are added or removed. The possible modes are `add-brokers` and `remove-brokers`.
func (o KafkaStatusAutoRebalanceModesPatchOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusAutoRebalanceModesPatch) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type KafkaStatusAutoRebalanceModesPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaStatusAutoRebalanceModesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaStatusAutoRebalanceModesPatch)(nil)).Elem()
}

func (o KafkaStatusAutoRebalanceModesPatchArrayOutput) ToKafkaStatusAutoRebalanceModesPatchArrayOutput() KafkaStatusAutoRebalanceModesPatchArrayOutput {
	return o
}

func (o KafkaStatusAutoRebalanceModesPatchArrayOutput) ToKafkaStatusAutoRebalanceModesPatchArrayOutputWithContext(ctx context.Context) KafkaStatusAutoRebalanceModesPatchArrayOutput {
	return o
}

func (o KafkaStatusAutoRebalanceModesPatchArrayOutput) Index(i pulumi.IntInput) KafkaStatusAutoRebalanceModesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaStatusAutoRebalanceModesPatch {
		return vs[0].([]KafkaStatusAutoRebalanceModesPatch)[vs[1].(int)]
	}).(KafkaStatusAutoRebalanceModesPatchOutput)
}

// The status of an auto-rebalancing triggered by a cluster scaling request.
type KafkaStatusAutoRebalancePatch struct {
	// The timestamp of the latest auto-rebalancing state update.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// List of modes where an auto-rebalancing operation is either running or queued.
	// Each mode entry (`add-brokers` or `remove-brokers`) includes one of the following:
	//
	// * Broker IDs for a current auto-rebalance.
	// * Broker IDs for a queued auto-rebalance (if a previous rebalance is still in progress).
	Modes []KafkaStatusAutoRebalanceModesPatch `pulumi:"modes"`
	// The current state of an auto-rebalancing operation. Possible values are:
	//
	// * `Idle` as the initial state when an auto-rebalancing is requested or as final state when it completes or fails.
	// * `RebalanceOnScaleDown` if an auto-rebalance related to a scale-down operation is running.
	// * `RebalanceOnScaleUp` if an auto-rebalance related to a scale-up operation is running.
	State *string `pulumi:"state"`
}

// KafkaStatusAutoRebalancePatchInput is an input type that accepts KafkaStatusAutoRebalancePatchArgs and KafkaStatusAutoRebalancePatchOutput values.
// You can construct a concrete instance of `KafkaStatusAutoRebalancePatchInput` via:
//
//	KafkaStatusAutoRebalancePatchArgs{...}
type KafkaStatusAutoRebalancePatchInput interface {
	pulumi.Input

	ToKafkaStatusAutoRebalancePatchOutput() KafkaStatusAutoRebalancePatchOutput
	ToKafkaStatusAutoRebalancePatchOutputWithContext(context.Context) KafkaStatusAutoRebalancePatchOutput
}

// The status of an auto-rebalancing triggered by a cluster scaling request.
type KafkaStatusAutoRebalancePatchArgs struct {
	// The timestamp of the latest auto-rebalancing state update.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// List of modes where an auto-rebalancing operation is either running or queued.
	// Each mode entry (`add-brokers` or `remove-brokers`) includes one of the following:
	//
	// * Broker IDs for a current auto-rebalance.
	// * Broker IDs for a queued auto-rebalance (if a previous rebalance is still in progress).
	Modes KafkaStatusAutoRebalanceModesPatchArrayInput `pulumi:"modes"`
	// The current state of an auto-rebalancing operation. Possible values are:
	//
	// * `Idle` as the initial state when an auto-rebalancing is requested or as final state when it completes or fails.
	// * `RebalanceOnScaleDown` if an auto-rebalance related to a scale-down operation is running.
	// * `RebalanceOnScaleUp` if an auto-rebalance related to a scale-up operation is running.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (KafkaStatusAutoRebalancePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusAutoRebalancePatch)(nil)).Elem()
}

func (i KafkaStatusAutoRebalancePatchArgs) ToKafkaStatusAutoRebalancePatchOutput() KafkaStatusAutoRebalancePatchOutput {
	return i.ToKafkaStatusAutoRebalancePatchOutputWithContext(context.Background())
}

func (i KafkaStatusAutoRebalancePatchArgs) ToKafkaStatusAutoRebalancePatchOutputWithContext(ctx context.Context) KafkaStatusAutoRebalancePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusAutoRebalancePatchOutput)
}

func (i KafkaStatusAutoRebalancePatchArgs) ToKafkaStatusAutoRebalancePatchPtrOutput() KafkaStatusAutoRebalancePatchPtrOutput {
	return i.ToKafkaStatusAutoRebalancePatchPtrOutputWithContext(context.Background())
}

func (i KafkaStatusAutoRebalancePatchArgs) ToKafkaStatusAutoRebalancePatchPtrOutputWithContext(ctx context.Context) KafkaStatusAutoRebalancePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusAutoRebalancePatchOutput).ToKafkaStatusAutoRebalancePatchPtrOutputWithContext(ctx)
}

// KafkaStatusAutoRebalancePatchPtrInput is an input type that accepts KafkaStatusAutoRebalancePatchArgs, KafkaStatusAutoRebalancePatchPtr and KafkaStatusAutoRebalancePatchPtrOutput values.
// You can construct a concrete instance of `KafkaStatusAutoRebalancePatchPtrInput` via:
//
//	        KafkaStatusAutoRebalancePatchArgs{...}
//
//	or:
//
//	        nil
type KafkaStatusAutoRebalancePatchPtrInput interface {
	pulumi.Input

	ToKafkaStatusAutoRebalancePatchPtrOutput() KafkaStatusAutoRebalancePatchPtrOutput
	ToKafkaStatusAutoRebalancePatchPtrOutputWithContext(context.Context) KafkaStatusAutoRebalancePatchPtrOutput
}

type kafkaStatusAutoRebalancePatchPtrType KafkaStatusAutoRebalancePatchArgs

func KafkaStatusAutoRebalancePatchPtr(v *KafkaStatusAutoRebalancePatchArgs) KafkaStatusAutoRebalancePatchPtrInput {
	return (*kafkaStatusAutoRebalancePatchPtrType)(v)
}

func (*kafkaStatusAutoRebalancePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaStatusAutoRebalancePatch)(nil)).Elem()
}

func (i *kafkaStatusAutoRebalancePatchPtrType) ToKafkaStatusAutoRebalancePatchPtrOutput() KafkaStatusAutoRebalancePatchPtrOutput {
	return i.ToKafkaStatusAutoRebalancePatchPtrOutputWithContext(context.Background())
}

func (i *kafkaStatusAutoRebalancePatchPtrType) ToKafkaStatusAutoRebalancePatchPtrOutputWithContext(ctx context.Context) KafkaStatusAutoRebalancePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusAutoRebalancePatchPtrOutput)
}

// The status of an auto-rebalancing triggered by a cluster scaling request.
type KafkaStatusAutoRebalancePatchOutput struct{ *pulumi.OutputState }

func (KafkaStatusAutoRebalancePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusAutoRebalancePatch)(nil)).Elem()
}

func (o KafkaStatusAutoRebalancePatchOutput) ToKafkaStatusAutoRebalancePatchOutput() KafkaStatusAutoRebalancePatchOutput {
	return o
}

func (o KafkaStatusAutoRebalancePatchOutput) ToKafkaStatusAutoRebalancePatchOutputWithContext(ctx context.Context) KafkaStatusAutoRebalancePatchOutput {
	return o
}

func (o KafkaStatusAutoRebalancePatchOutput) ToKafkaStatusAutoRebalancePatchPtrOutput() KafkaStatusAutoRebalancePatchPtrOutput {
	return o.ToKafkaStatusAutoRebalancePatchPtrOutputWithContext(context.Background())
}

func (o KafkaStatusAutoRebalancePatchOutput) ToKafkaStatusAutoRebalancePatchPtrOutputWithContext(ctx context.Context) KafkaStatusAutoRebalancePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaStatusAutoRebalancePatch) *KafkaStatusAutoRebalancePatch {
		return &v
	}).(KafkaStatusAutoRebalancePatchPtrOutput)
}

// The timestamp of the latest auto-rebalancing state update.
func (o KafkaStatusAutoRebalancePatchOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusAutoRebalancePatch) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// List of modes where an auto-rebalancing operation is either running or queued.
// Each mode entry (`add-brokers` or `remove-brokers`) includes one of the following:
//
// * Broker IDs for a current auto-rebalance.
// * Broker IDs for a queued auto-rebalance (if a previous rebalance is still in progress).
func (o KafkaStatusAutoRebalancePatchOutput) Modes() KafkaStatusAutoRebalanceModesPatchArrayOutput {
	return o.ApplyT(func(v KafkaStatusAutoRebalancePatch) []KafkaStatusAutoRebalanceModesPatch { return v.Modes }).(KafkaStatusAutoRebalanceModesPatchArrayOutput)
}

// The current state of an auto-rebalancing operation. Possible values are:
//
// * `Idle` as the initial state when an auto-rebalancing is requested or as final state when it completes or fails.
// * `RebalanceOnScaleDown` if an auto-rebalance related to a scale-down operation is running.
// * `RebalanceOnScaleUp` if an auto-rebalance related to a scale-up operation is running.
func (o KafkaStatusAutoRebalancePatchOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusAutoRebalancePatch) *string { return v.State }).(pulumi.StringPtrOutput)
}

type KafkaStatusAutoRebalancePatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaStatusAutoRebalancePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaStatusAutoRebalancePatch)(nil)).Elem()
}

func (o KafkaStatusAutoRebalancePatchPtrOutput) ToKafkaStatusAutoRebalancePatchPtrOutput() KafkaStatusAutoRebalancePatchPtrOutput {
	return o
}

func (o KafkaStatusAutoRebalancePatchPtrOutput) ToKafkaStatusAutoRebalancePatchPtrOutputWithContext(ctx context.Context) KafkaStatusAutoRebalancePatchPtrOutput {
	return o
}

func (o KafkaStatusAutoRebalancePatchPtrOutput) Elem() KafkaStatusAutoRebalancePatchOutput {
	return o.ApplyT(func(v *KafkaStatusAutoRebalancePatch) KafkaStatusAutoRebalancePatch {
		if v != nil {
			return *v
		}
		var ret KafkaStatusAutoRebalancePatch
		return ret
	}).(KafkaStatusAutoRebalancePatchOutput)
}

// The timestamp of the latest auto-rebalancing state update.
func (o KafkaStatusAutoRebalancePatchPtrOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaStatusAutoRebalancePatch) *string {
		if v == nil {
			return nil
		}
		return v.LastTransitionTime
	}).(pulumi.StringPtrOutput)
}

// List of modes where an auto-rebalancing operation is either running or queued.
// Each mode entry (`add-brokers` or `remove-brokers`) includes one of the following:
//
// * Broker IDs for a current auto-rebalance.
// * Broker IDs for a queued auto-rebalance (if a previous rebalance is still in progress).
func (o KafkaStatusAutoRebalancePatchPtrOutput) Modes() KafkaStatusAutoRebalanceModesPatchArrayOutput {
	return o.ApplyT(func(v *KafkaStatusAutoRebalancePatch) []KafkaStatusAutoRebalanceModesPatch {
		if v == nil {
			return nil
		}
		return v.Modes
	}).(KafkaStatusAutoRebalanceModesPatchArrayOutput)
}

// The current state of an auto-rebalancing operation. Possible values are:
//
// * `Idle` as the initial state when an auto-rebalancing is requested or as final state when it completes or fails.
// * `RebalanceOnScaleDown` if an auto-rebalance related to a scale-down operation is running.
// * `RebalanceOnScaleUp` if an auto-rebalance related to a scale-up operation is running.
func (o KafkaStatusAutoRebalancePatchPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaStatusAutoRebalancePatch) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

type KafkaStatusConditions struct {
	// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about the condition's last transition.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition (a single word in CamelCase).
	Reason *string `pulumi:"reason"`
	// The status of the condition, either True, False or Unknown.
	Status *string `pulumi:"status"`
	// The unique identifier of a condition, used to distinguish between other conditions in the resource.
	Type *string `pulumi:"type"`
}

// KafkaStatusConditionsInput is an input type that accepts KafkaStatusConditionsArgs and KafkaStatusConditionsOutput values.
// You can construct a concrete instance of `KafkaStatusConditionsInput` via:
//
//	KafkaStatusConditionsArgs{...}
type KafkaStatusConditionsInput interface {
	pulumi.Input

	ToKafkaStatusConditionsOutput() KafkaStatusConditionsOutput
	ToKafkaStatusConditionsOutputWithContext(context.Context) KafkaStatusConditionsOutput
}

type KafkaStatusConditionsArgs struct {
	// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about the condition's last transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition (a single word in CamelCase).
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// The status of the condition, either True, False or Unknown.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The unique identifier of a condition, used to distinguish between other conditions in the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusConditions)(nil)).Elem()
}

func (i KafkaStatusConditionsArgs) ToKafkaStatusConditionsOutput() KafkaStatusConditionsOutput {
	return i.ToKafkaStatusConditionsOutputWithContext(context.Background())
}

func (i KafkaStatusConditionsArgs) ToKafkaStatusConditionsOutputWithContext(ctx context.Context) KafkaStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusConditionsOutput)
}

// KafkaStatusConditionsArrayInput is an input type that accepts KafkaStatusConditionsArray and KafkaStatusConditionsArrayOutput values.
// You can construct a concrete instance of `KafkaStatusConditionsArrayInput` via:
//
//	KafkaStatusConditionsArray{ KafkaStatusConditionsArgs{...} }
type KafkaStatusConditionsArrayInput interface {
	pulumi.Input

	ToKafkaStatusConditionsArrayOutput() KafkaStatusConditionsArrayOutput
	ToKafkaStatusConditionsArrayOutputWithContext(context.Context) KafkaStatusConditionsArrayOutput
}

type KafkaStatusConditionsArray []KafkaStatusConditionsInput

func (KafkaStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaStatusConditions)(nil)).Elem()
}

func (i KafkaStatusConditionsArray) ToKafkaStatusConditionsArrayOutput() KafkaStatusConditionsArrayOutput {
	return i.ToKafkaStatusConditionsArrayOutputWithContext(context.Background())
}

func (i KafkaStatusConditionsArray) ToKafkaStatusConditionsArrayOutputWithContext(ctx context.Context) KafkaStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusConditionsArrayOutput)
}

type KafkaStatusConditionsOutput struct{ *pulumi.OutputState }

func (KafkaStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusConditions)(nil)).Elem()
}

func (o KafkaStatusConditionsOutput) ToKafkaStatusConditionsOutput() KafkaStatusConditionsOutput {
	return o
}

func (o KafkaStatusConditionsOutput) ToKafkaStatusConditionsOutputWithContext(ctx context.Context) KafkaStatusConditionsOutput {
	return o
}

// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
func (o KafkaStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// Human-readable message indicating details about the condition's last transition.
func (o KafkaStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition (a single word in CamelCase).
func (o KafkaStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// The status of the condition, either True, False or Unknown.
func (o KafkaStatusConditionsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusConditions) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The unique identifier of a condition, used to distinguish between other conditions in the resource.
func (o KafkaStatusConditionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusConditions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (KafkaStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaStatusConditions)(nil)).Elem()
}

func (o KafkaStatusConditionsArrayOutput) ToKafkaStatusConditionsArrayOutput() KafkaStatusConditionsArrayOutput {
	return o
}

func (o KafkaStatusConditionsArrayOutput) ToKafkaStatusConditionsArrayOutputWithContext(ctx context.Context) KafkaStatusConditionsArrayOutput {
	return o
}

func (o KafkaStatusConditionsArrayOutput) Index(i pulumi.IntInput) KafkaStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaStatusConditions {
		return vs[0].([]KafkaStatusConditions)[vs[1].(int)]
	}).(KafkaStatusConditionsOutput)
}

type KafkaStatusConditionsPatch struct {
	// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about the condition's last transition.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition (a single word in CamelCase).
	Reason *string `pulumi:"reason"`
	// The status of the condition, either True, False or Unknown.
	Status *string `pulumi:"status"`
	// The unique identifier of a condition, used to distinguish between other conditions in the resource.
	Type *string `pulumi:"type"`
}

// KafkaStatusConditionsPatchInput is an input type that accepts KafkaStatusConditionsPatchArgs and KafkaStatusConditionsPatchOutput values.
// You can construct a concrete instance of `KafkaStatusConditionsPatchInput` via:
//
//	KafkaStatusConditionsPatchArgs{...}
type KafkaStatusConditionsPatchInput interface {
	pulumi.Input

	ToKafkaStatusConditionsPatchOutput() KafkaStatusConditionsPatchOutput
	ToKafkaStatusConditionsPatchOutputWithContext(context.Context) KafkaStatusConditionsPatchOutput
}

type KafkaStatusConditionsPatchArgs struct {
	// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about the condition's last transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition (a single word in CamelCase).
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// The status of the condition, either True, False or Unknown.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The unique identifier of a condition, used to distinguish between other conditions in the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaStatusConditionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusConditionsPatch)(nil)).Elem()
}

func (i KafkaStatusConditionsPatchArgs) ToKafkaStatusConditionsPatchOutput() KafkaStatusConditionsPatchOutput {
	return i.ToKafkaStatusConditionsPatchOutputWithContext(context.Background())
}

func (i KafkaStatusConditionsPatchArgs) ToKafkaStatusConditionsPatchOutputWithContext(ctx context.Context) KafkaStatusConditionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusConditionsPatchOutput)
}

// KafkaStatusConditionsPatchArrayInput is an input type that accepts KafkaStatusConditionsPatchArray and KafkaStatusConditionsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaStatusConditionsPatchArrayInput` via:
//
//	KafkaStatusConditionsPatchArray{ KafkaStatusConditionsPatchArgs{...} }
type KafkaStatusConditionsPatchArrayInput interface {
	pulumi.Input

	ToKafkaStatusConditionsPatchArrayOutput() KafkaStatusConditionsPatchArrayOutput
	ToKafkaStatusConditionsPatchArrayOutputWithContext(context.Context) KafkaStatusConditionsPatchArrayOutput
}

type KafkaStatusConditionsPatchArray []KafkaStatusConditionsPatchInput

func (KafkaStatusConditionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaStatusConditionsPatch)(nil)).Elem()
}

func (i KafkaStatusConditionsPatchArray) ToKafkaStatusConditionsPatchArrayOutput() KafkaStatusConditionsPatchArrayOutput {
	return i.ToKafkaStatusConditionsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaStatusConditionsPatchArray) ToKafkaStatusConditionsPatchArrayOutputWithContext(ctx context.Context) KafkaStatusConditionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusConditionsPatchArrayOutput)
}

type KafkaStatusConditionsPatchOutput struct{ *pulumi.OutputState }

func (KafkaStatusConditionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusConditionsPatch)(nil)).Elem()
}

func (o KafkaStatusConditionsPatchOutput) ToKafkaStatusConditionsPatchOutput() KafkaStatusConditionsPatchOutput {
	return o
}

func (o KafkaStatusConditionsPatchOutput) ToKafkaStatusConditionsPatchOutputWithContext(ctx context.Context) KafkaStatusConditionsPatchOutput {
	return o
}

// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
func (o KafkaStatusConditionsPatchOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusConditionsPatch) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// Human-readable message indicating details about the condition's last transition.
func (o KafkaStatusConditionsPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusConditionsPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition (a single word in CamelCase).
func (o KafkaStatusConditionsPatchOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusConditionsPatch) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// The status of the condition, either True, False or Unknown.
func (o KafkaStatusConditionsPatchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusConditionsPatch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The unique identifier of a condition, used to distinguish between other conditions in the resource.
func (o KafkaStatusConditionsPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusConditionsPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaStatusConditionsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaStatusConditionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaStatusConditionsPatch)(nil)).Elem()
}

func (o KafkaStatusConditionsPatchArrayOutput) ToKafkaStatusConditionsPatchArrayOutput() KafkaStatusConditionsPatchArrayOutput {
	return o
}

func (o KafkaStatusConditionsPatchArrayOutput) ToKafkaStatusConditionsPatchArrayOutputWithContext(ctx context.Context) KafkaStatusConditionsPatchArrayOutput {
	return o
}

func (o KafkaStatusConditionsPatchArrayOutput) Index(i pulumi.IntInput) KafkaStatusConditionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaStatusConditionsPatch {
		return vs[0].([]KafkaStatusConditionsPatch)[vs[1].(int)]
	}).(KafkaStatusConditionsPatchOutput)
}

type KafkaStatusKafkaNodePools struct {
	// The name of the KafkaNodePool used by this Kafka resource.
	Name *string `pulumi:"name"`
}

// KafkaStatusKafkaNodePoolsInput is an input type that accepts KafkaStatusKafkaNodePoolsArgs and KafkaStatusKafkaNodePoolsOutput values.
// You can construct a concrete instance of `KafkaStatusKafkaNodePoolsInput` via:
//
//	KafkaStatusKafkaNodePoolsArgs{...}
type KafkaStatusKafkaNodePoolsInput interface {
	pulumi.Input

	ToKafkaStatusKafkaNodePoolsOutput() KafkaStatusKafkaNodePoolsOutput
	ToKafkaStatusKafkaNodePoolsOutputWithContext(context.Context) KafkaStatusKafkaNodePoolsOutput
}

type KafkaStatusKafkaNodePoolsArgs struct {
	// The name of the KafkaNodePool used by this Kafka resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (KafkaStatusKafkaNodePoolsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusKafkaNodePools)(nil)).Elem()
}

func (i KafkaStatusKafkaNodePoolsArgs) ToKafkaStatusKafkaNodePoolsOutput() KafkaStatusKafkaNodePoolsOutput {
	return i.ToKafkaStatusKafkaNodePoolsOutputWithContext(context.Background())
}

func (i KafkaStatusKafkaNodePoolsArgs) ToKafkaStatusKafkaNodePoolsOutputWithContext(ctx context.Context) KafkaStatusKafkaNodePoolsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusKafkaNodePoolsOutput)
}

// KafkaStatusKafkaNodePoolsArrayInput is an input type that accepts KafkaStatusKafkaNodePoolsArray and KafkaStatusKafkaNodePoolsArrayOutput values.
// You can construct a concrete instance of `KafkaStatusKafkaNodePoolsArrayInput` via:
//
//	KafkaStatusKafkaNodePoolsArray{ KafkaStatusKafkaNodePoolsArgs{...} }
type KafkaStatusKafkaNodePoolsArrayInput interface {
	pulumi.Input

	ToKafkaStatusKafkaNodePoolsArrayOutput() KafkaStatusKafkaNodePoolsArrayOutput
	ToKafkaStatusKafkaNodePoolsArrayOutputWithContext(context.Context) KafkaStatusKafkaNodePoolsArrayOutput
}

type KafkaStatusKafkaNodePoolsArray []KafkaStatusKafkaNodePoolsInput

func (KafkaStatusKafkaNodePoolsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaStatusKafkaNodePools)(nil)).Elem()
}

func (i KafkaStatusKafkaNodePoolsArray) ToKafkaStatusKafkaNodePoolsArrayOutput() KafkaStatusKafkaNodePoolsArrayOutput {
	return i.ToKafkaStatusKafkaNodePoolsArrayOutputWithContext(context.Background())
}

func (i KafkaStatusKafkaNodePoolsArray) ToKafkaStatusKafkaNodePoolsArrayOutputWithContext(ctx context.Context) KafkaStatusKafkaNodePoolsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusKafkaNodePoolsArrayOutput)
}

type KafkaStatusKafkaNodePoolsOutput struct{ *pulumi.OutputState }

func (KafkaStatusKafkaNodePoolsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusKafkaNodePools)(nil)).Elem()
}

func (o KafkaStatusKafkaNodePoolsOutput) ToKafkaStatusKafkaNodePoolsOutput() KafkaStatusKafkaNodePoolsOutput {
	return o
}

func (o KafkaStatusKafkaNodePoolsOutput) ToKafkaStatusKafkaNodePoolsOutputWithContext(ctx context.Context) KafkaStatusKafkaNodePoolsOutput {
	return o
}

// The name of the KafkaNodePool used by this Kafka resource.
func (o KafkaStatusKafkaNodePoolsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusKafkaNodePools) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type KafkaStatusKafkaNodePoolsArrayOutput struct{ *pulumi.OutputState }

func (KafkaStatusKafkaNodePoolsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaStatusKafkaNodePools)(nil)).Elem()
}

func (o KafkaStatusKafkaNodePoolsArrayOutput) ToKafkaStatusKafkaNodePoolsArrayOutput() KafkaStatusKafkaNodePoolsArrayOutput {
	return o
}

func (o KafkaStatusKafkaNodePoolsArrayOutput) ToKafkaStatusKafkaNodePoolsArrayOutputWithContext(ctx context.Context) KafkaStatusKafkaNodePoolsArrayOutput {
	return o
}

func (o KafkaStatusKafkaNodePoolsArrayOutput) Index(i pulumi.IntInput) KafkaStatusKafkaNodePoolsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaStatusKafkaNodePools {
		return vs[0].([]KafkaStatusKafkaNodePools)[vs[1].(int)]
	}).(KafkaStatusKafkaNodePoolsOutput)
}

type KafkaStatusKafkaNodePoolsPatch struct {
	// The name of the KafkaNodePool used by this Kafka resource.
	Name *string `pulumi:"name"`
}

// KafkaStatusKafkaNodePoolsPatchInput is an input type that accepts KafkaStatusKafkaNodePoolsPatchArgs and KafkaStatusKafkaNodePoolsPatchOutput values.
// You can construct a concrete instance of `KafkaStatusKafkaNodePoolsPatchInput` via:
//
//	KafkaStatusKafkaNodePoolsPatchArgs{...}
type KafkaStatusKafkaNodePoolsPatchInput interface {
	pulumi.Input

	ToKafkaStatusKafkaNodePoolsPatchOutput() KafkaStatusKafkaNodePoolsPatchOutput
	ToKafkaStatusKafkaNodePoolsPatchOutputWithContext(context.Context) KafkaStatusKafkaNodePoolsPatchOutput
}

type KafkaStatusKafkaNodePoolsPatchArgs struct {
	// The name of the KafkaNodePool used by this Kafka resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (KafkaStatusKafkaNodePoolsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusKafkaNodePoolsPatch)(nil)).Elem()
}

func (i KafkaStatusKafkaNodePoolsPatchArgs) ToKafkaStatusKafkaNodePoolsPatchOutput() KafkaStatusKafkaNodePoolsPatchOutput {
	return i.ToKafkaStatusKafkaNodePoolsPatchOutputWithContext(context.Background())
}

func (i KafkaStatusKafkaNodePoolsPatchArgs) ToKafkaStatusKafkaNodePoolsPatchOutputWithContext(ctx context.Context) KafkaStatusKafkaNodePoolsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusKafkaNodePoolsPatchOutput)
}

// KafkaStatusKafkaNodePoolsPatchArrayInput is an input type that accepts KafkaStatusKafkaNodePoolsPatchArray and KafkaStatusKafkaNodePoolsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaStatusKafkaNodePoolsPatchArrayInput` via:
//
//	KafkaStatusKafkaNodePoolsPatchArray{ KafkaStatusKafkaNodePoolsPatchArgs{...} }
type KafkaStatusKafkaNodePoolsPatchArrayInput interface {
	pulumi.Input

	ToKafkaStatusKafkaNodePoolsPatchArrayOutput() KafkaStatusKafkaNodePoolsPatchArrayOutput
	ToKafkaStatusKafkaNodePoolsPatchArrayOutputWithContext(context.Context) KafkaStatusKafkaNodePoolsPatchArrayOutput
}

type KafkaStatusKafkaNodePoolsPatchArray []KafkaStatusKafkaNodePoolsPatchInput

func (KafkaStatusKafkaNodePoolsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaStatusKafkaNodePoolsPatch)(nil)).Elem()
}

func (i KafkaStatusKafkaNodePoolsPatchArray) ToKafkaStatusKafkaNodePoolsPatchArrayOutput() KafkaStatusKafkaNodePoolsPatchArrayOutput {
	return i.ToKafkaStatusKafkaNodePoolsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaStatusKafkaNodePoolsPatchArray) ToKafkaStatusKafkaNodePoolsPatchArrayOutputWithContext(ctx context.Context) KafkaStatusKafkaNodePoolsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusKafkaNodePoolsPatchArrayOutput)
}

type KafkaStatusKafkaNodePoolsPatchOutput struct{ *pulumi.OutputState }

func (KafkaStatusKafkaNodePoolsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusKafkaNodePoolsPatch)(nil)).Elem()
}

func (o KafkaStatusKafkaNodePoolsPatchOutput) ToKafkaStatusKafkaNodePoolsPatchOutput() KafkaStatusKafkaNodePoolsPatchOutput {
	return o
}

func (o KafkaStatusKafkaNodePoolsPatchOutput) ToKafkaStatusKafkaNodePoolsPatchOutputWithContext(ctx context.Context) KafkaStatusKafkaNodePoolsPatchOutput {
	return o
}

// The name of the KafkaNodePool used by this Kafka resource.
func (o KafkaStatusKafkaNodePoolsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusKafkaNodePoolsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type KafkaStatusKafkaNodePoolsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaStatusKafkaNodePoolsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaStatusKafkaNodePoolsPatch)(nil)).Elem()
}

func (o KafkaStatusKafkaNodePoolsPatchArrayOutput) ToKafkaStatusKafkaNodePoolsPatchArrayOutput() KafkaStatusKafkaNodePoolsPatchArrayOutput {
	return o
}

func (o KafkaStatusKafkaNodePoolsPatchArrayOutput) ToKafkaStatusKafkaNodePoolsPatchArrayOutputWithContext(ctx context.Context) KafkaStatusKafkaNodePoolsPatchArrayOutput {
	return o
}

func (o KafkaStatusKafkaNodePoolsPatchArrayOutput) Index(i pulumi.IntInput) KafkaStatusKafkaNodePoolsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaStatusKafkaNodePoolsPatch {
		return vs[0].([]KafkaStatusKafkaNodePoolsPatch)[vs[1].(int)]
	}).(KafkaStatusKafkaNodePoolsPatchOutput)
}

type KafkaStatusListeners struct {
	// A list of the addresses for this listener.
	Addresses []KafkaStatusListenersAddresses `pulumi:"addresses"`
	// A comma-separated list of `host:port` pairs for connecting to the Kafka cluster using this listener.
	BootstrapServers *string `pulumi:"bootstrapServers"`
	// A list of TLS certificates which can be used to verify the identity of the server when connecting to the given listener. Set only for `tls` and `external` listeners.
	Certificates []string `pulumi:"certificates"`
	// The name of the listener.
	Name *string `pulumi:"name"`
	// The name of the listener.
	Type *string `pulumi:"type"`
}

// KafkaStatusListenersInput is an input type that accepts KafkaStatusListenersArgs and KafkaStatusListenersOutput values.
// You can construct a concrete instance of `KafkaStatusListenersInput` via:
//
//	KafkaStatusListenersArgs{...}
type KafkaStatusListenersInput interface {
	pulumi.Input

	ToKafkaStatusListenersOutput() KafkaStatusListenersOutput
	ToKafkaStatusListenersOutputWithContext(context.Context) KafkaStatusListenersOutput
}

type KafkaStatusListenersArgs struct {
	// A list of the addresses for this listener.
	Addresses KafkaStatusListenersAddressesArrayInput `pulumi:"addresses"`
	// A comma-separated list of `host:port` pairs for connecting to the Kafka cluster using this listener.
	BootstrapServers pulumi.StringPtrInput `pulumi:"bootstrapServers"`
	// A list of TLS certificates which can be used to verify the identity of the server when connecting to the given listener. Set only for `tls` and `external` listeners.
	Certificates pulumi.StringArrayInput `pulumi:"certificates"`
	// The name of the listener.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The name of the listener.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaStatusListenersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusListeners)(nil)).Elem()
}

func (i KafkaStatusListenersArgs) ToKafkaStatusListenersOutput() KafkaStatusListenersOutput {
	return i.ToKafkaStatusListenersOutputWithContext(context.Background())
}

func (i KafkaStatusListenersArgs) ToKafkaStatusListenersOutputWithContext(ctx context.Context) KafkaStatusListenersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusListenersOutput)
}

// KafkaStatusListenersArrayInput is an input type that accepts KafkaStatusListenersArray and KafkaStatusListenersArrayOutput values.
// You can construct a concrete instance of `KafkaStatusListenersArrayInput` via:
//
//	KafkaStatusListenersArray{ KafkaStatusListenersArgs{...} }
type KafkaStatusListenersArrayInput interface {
	pulumi.Input

	ToKafkaStatusListenersArrayOutput() KafkaStatusListenersArrayOutput
	ToKafkaStatusListenersArrayOutputWithContext(context.Context) KafkaStatusListenersArrayOutput
}

type KafkaStatusListenersArray []KafkaStatusListenersInput

func (KafkaStatusListenersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaStatusListeners)(nil)).Elem()
}

func (i KafkaStatusListenersArray) ToKafkaStatusListenersArrayOutput() KafkaStatusListenersArrayOutput {
	return i.ToKafkaStatusListenersArrayOutputWithContext(context.Background())
}

func (i KafkaStatusListenersArray) ToKafkaStatusListenersArrayOutputWithContext(ctx context.Context) KafkaStatusListenersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusListenersArrayOutput)
}

type KafkaStatusListenersOutput struct{ *pulumi.OutputState }

func (KafkaStatusListenersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusListeners)(nil)).Elem()
}

func (o KafkaStatusListenersOutput) ToKafkaStatusListenersOutput() KafkaStatusListenersOutput {
	return o
}

func (o KafkaStatusListenersOutput) ToKafkaStatusListenersOutputWithContext(ctx context.Context) KafkaStatusListenersOutput {
	return o
}

// A list of the addresses for this listener.
func (o KafkaStatusListenersOutput) Addresses() KafkaStatusListenersAddressesArrayOutput {
	return o.ApplyT(func(v KafkaStatusListeners) []KafkaStatusListenersAddresses { return v.Addresses }).(KafkaStatusListenersAddressesArrayOutput)
}

// A comma-separated list of `host:port` pairs for connecting to the Kafka cluster using this listener.
func (o KafkaStatusListenersOutput) BootstrapServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusListeners) *string { return v.BootstrapServers }).(pulumi.StringPtrOutput)
}

// A list of TLS certificates which can be used to verify the identity of the server when connecting to the given listener. Set only for `tls` and `external` listeners.
func (o KafkaStatusListenersOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaStatusListeners) []string { return v.Certificates }).(pulumi.StringArrayOutput)
}

// The name of the listener.
func (o KafkaStatusListenersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusListeners) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The name of the listener.
func (o KafkaStatusListenersOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusListeners) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaStatusListenersArrayOutput struct{ *pulumi.OutputState }

func (KafkaStatusListenersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaStatusListeners)(nil)).Elem()
}

func (o KafkaStatusListenersArrayOutput) ToKafkaStatusListenersArrayOutput() KafkaStatusListenersArrayOutput {
	return o
}

func (o KafkaStatusListenersArrayOutput) ToKafkaStatusListenersArrayOutputWithContext(ctx context.Context) KafkaStatusListenersArrayOutput {
	return o
}

func (o KafkaStatusListenersArrayOutput) Index(i pulumi.IntInput) KafkaStatusListenersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaStatusListeners {
		return vs[0].([]KafkaStatusListeners)[vs[1].(int)]
	}).(KafkaStatusListenersOutput)
}

type KafkaStatusListenersAddresses struct {
	// The DNS name or IP address of the Kafka bootstrap service.
	Host *string `pulumi:"host"`
	// The port of the Kafka bootstrap service.
	Port *int `pulumi:"port"`
}

// KafkaStatusListenersAddressesInput is an input type that accepts KafkaStatusListenersAddressesArgs and KafkaStatusListenersAddressesOutput values.
// You can construct a concrete instance of `KafkaStatusListenersAddressesInput` via:
//
//	KafkaStatusListenersAddressesArgs{...}
type KafkaStatusListenersAddressesInput interface {
	pulumi.Input

	ToKafkaStatusListenersAddressesOutput() KafkaStatusListenersAddressesOutput
	ToKafkaStatusListenersAddressesOutputWithContext(context.Context) KafkaStatusListenersAddressesOutput
}

type KafkaStatusListenersAddressesArgs struct {
	// The DNS name or IP address of the Kafka bootstrap service.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The port of the Kafka bootstrap service.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (KafkaStatusListenersAddressesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusListenersAddresses)(nil)).Elem()
}

func (i KafkaStatusListenersAddressesArgs) ToKafkaStatusListenersAddressesOutput() KafkaStatusListenersAddressesOutput {
	return i.ToKafkaStatusListenersAddressesOutputWithContext(context.Background())
}

func (i KafkaStatusListenersAddressesArgs) ToKafkaStatusListenersAddressesOutputWithContext(ctx context.Context) KafkaStatusListenersAddressesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusListenersAddressesOutput)
}

// KafkaStatusListenersAddressesArrayInput is an input type that accepts KafkaStatusListenersAddressesArray and KafkaStatusListenersAddressesArrayOutput values.
// You can construct a concrete instance of `KafkaStatusListenersAddressesArrayInput` via:
//
//	KafkaStatusListenersAddressesArray{ KafkaStatusListenersAddressesArgs{...} }
type KafkaStatusListenersAddressesArrayInput interface {
	pulumi.Input

	ToKafkaStatusListenersAddressesArrayOutput() KafkaStatusListenersAddressesArrayOutput
	ToKafkaStatusListenersAddressesArrayOutputWithContext(context.Context) KafkaStatusListenersAddressesArrayOutput
}

type KafkaStatusListenersAddressesArray []KafkaStatusListenersAddressesInput

func (KafkaStatusListenersAddressesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaStatusListenersAddresses)(nil)).Elem()
}

func (i KafkaStatusListenersAddressesArray) ToKafkaStatusListenersAddressesArrayOutput() KafkaStatusListenersAddressesArrayOutput {
	return i.ToKafkaStatusListenersAddressesArrayOutputWithContext(context.Background())
}

func (i KafkaStatusListenersAddressesArray) ToKafkaStatusListenersAddressesArrayOutputWithContext(ctx context.Context) KafkaStatusListenersAddressesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusListenersAddressesArrayOutput)
}

type KafkaStatusListenersAddressesOutput struct{ *pulumi.OutputState }

func (KafkaStatusListenersAddressesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusListenersAddresses)(nil)).Elem()
}

func (o KafkaStatusListenersAddressesOutput) ToKafkaStatusListenersAddressesOutput() KafkaStatusListenersAddressesOutput {
	return o
}

func (o KafkaStatusListenersAddressesOutput) ToKafkaStatusListenersAddressesOutputWithContext(ctx context.Context) KafkaStatusListenersAddressesOutput {
	return o
}

// The DNS name or IP address of the Kafka bootstrap service.
func (o KafkaStatusListenersAddressesOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusListenersAddresses) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The port of the Kafka bootstrap service.
func (o KafkaStatusListenersAddressesOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaStatusListenersAddresses) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type KafkaStatusListenersAddressesArrayOutput struct{ *pulumi.OutputState }

func (KafkaStatusListenersAddressesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaStatusListenersAddresses)(nil)).Elem()
}

func (o KafkaStatusListenersAddressesArrayOutput) ToKafkaStatusListenersAddressesArrayOutput() KafkaStatusListenersAddressesArrayOutput {
	return o
}

func (o KafkaStatusListenersAddressesArrayOutput) ToKafkaStatusListenersAddressesArrayOutputWithContext(ctx context.Context) KafkaStatusListenersAddressesArrayOutput {
	return o
}

func (o KafkaStatusListenersAddressesArrayOutput) Index(i pulumi.IntInput) KafkaStatusListenersAddressesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaStatusListenersAddresses {
		return vs[0].([]KafkaStatusListenersAddresses)[vs[1].(int)]
	}).(KafkaStatusListenersAddressesOutput)
}

type KafkaStatusListenersAddressesPatch struct {
	// The DNS name or IP address of the Kafka bootstrap service.
	Host *string `pulumi:"host"`
	// The port of the Kafka bootstrap service.
	Port *int `pulumi:"port"`
}

// KafkaStatusListenersAddressesPatchInput is an input type that accepts KafkaStatusListenersAddressesPatchArgs and KafkaStatusListenersAddressesPatchOutput values.
// You can construct a concrete instance of `KafkaStatusListenersAddressesPatchInput` via:
//
//	KafkaStatusListenersAddressesPatchArgs{...}
type KafkaStatusListenersAddressesPatchInput interface {
	pulumi.Input

	ToKafkaStatusListenersAddressesPatchOutput() KafkaStatusListenersAddressesPatchOutput
	ToKafkaStatusListenersAddressesPatchOutputWithContext(context.Context) KafkaStatusListenersAddressesPatchOutput
}

type KafkaStatusListenersAddressesPatchArgs struct {
	// The DNS name or IP address of the Kafka bootstrap service.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The port of the Kafka bootstrap service.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (KafkaStatusListenersAddressesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusListenersAddressesPatch)(nil)).Elem()
}

func (i KafkaStatusListenersAddressesPatchArgs) ToKafkaStatusListenersAddressesPatchOutput() KafkaStatusListenersAddressesPatchOutput {
	return i.ToKafkaStatusListenersAddressesPatchOutputWithContext(context.Background())
}

func (i KafkaStatusListenersAddressesPatchArgs) ToKafkaStatusListenersAddressesPatchOutputWithContext(ctx context.Context) KafkaStatusListenersAddressesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusListenersAddressesPatchOutput)
}

// KafkaStatusListenersAddressesPatchArrayInput is an input type that accepts KafkaStatusListenersAddressesPatchArray and KafkaStatusListenersAddressesPatchArrayOutput values.
// You can construct a concrete instance of `KafkaStatusListenersAddressesPatchArrayInput` via:
//
//	KafkaStatusListenersAddressesPatchArray{ KafkaStatusListenersAddressesPatchArgs{...} }
type KafkaStatusListenersAddressesPatchArrayInput interface {
	pulumi.Input

	ToKafkaStatusListenersAddressesPatchArrayOutput() KafkaStatusListenersAddressesPatchArrayOutput
	ToKafkaStatusListenersAddressesPatchArrayOutputWithContext(context.Context) KafkaStatusListenersAddressesPatchArrayOutput
}

type KafkaStatusListenersAddressesPatchArray []KafkaStatusListenersAddressesPatchInput

func (KafkaStatusListenersAddressesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaStatusListenersAddressesPatch)(nil)).Elem()
}

func (i KafkaStatusListenersAddressesPatchArray) ToKafkaStatusListenersAddressesPatchArrayOutput() KafkaStatusListenersAddressesPatchArrayOutput {
	return i.ToKafkaStatusListenersAddressesPatchArrayOutputWithContext(context.Background())
}

func (i KafkaStatusListenersAddressesPatchArray) ToKafkaStatusListenersAddressesPatchArrayOutputWithContext(ctx context.Context) KafkaStatusListenersAddressesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusListenersAddressesPatchArrayOutput)
}

type KafkaStatusListenersAddressesPatchOutput struct{ *pulumi.OutputState }

func (KafkaStatusListenersAddressesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusListenersAddressesPatch)(nil)).Elem()
}

func (o KafkaStatusListenersAddressesPatchOutput) ToKafkaStatusListenersAddressesPatchOutput() KafkaStatusListenersAddressesPatchOutput {
	return o
}

func (o KafkaStatusListenersAddressesPatchOutput) ToKafkaStatusListenersAddressesPatchOutputWithContext(ctx context.Context) KafkaStatusListenersAddressesPatchOutput {
	return o
}

// The DNS name or IP address of the Kafka bootstrap service.
func (o KafkaStatusListenersAddressesPatchOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusListenersAddressesPatch) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The port of the Kafka bootstrap service.
func (o KafkaStatusListenersAddressesPatchOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaStatusListenersAddressesPatch) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type KafkaStatusListenersAddressesPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaStatusListenersAddressesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaStatusListenersAddressesPatch)(nil)).Elem()
}

func (o KafkaStatusListenersAddressesPatchArrayOutput) ToKafkaStatusListenersAddressesPatchArrayOutput() KafkaStatusListenersAddressesPatchArrayOutput {
	return o
}

func (o KafkaStatusListenersAddressesPatchArrayOutput) ToKafkaStatusListenersAddressesPatchArrayOutputWithContext(ctx context.Context) KafkaStatusListenersAddressesPatchArrayOutput {
	return o
}

func (o KafkaStatusListenersAddressesPatchArrayOutput) Index(i pulumi.IntInput) KafkaStatusListenersAddressesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaStatusListenersAddressesPatch {
		return vs[0].([]KafkaStatusListenersAddressesPatch)[vs[1].(int)]
	}).(KafkaStatusListenersAddressesPatchOutput)
}

type KafkaStatusListenersPatch struct {
	// A list of the addresses for this listener.
	Addresses []KafkaStatusListenersAddressesPatch `pulumi:"addresses"`
	// A comma-separated list of `host:port` pairs for connecting to the Kafka cluster using this listener.
	BootstrapServers *string `pulumi:"bootstrapServers"`
	// A list of TLS certificates which can be used to verify the identity of the server when connecting to the given listener. Set only for `tls` and `external` listeners.
	Certificates []string `pulumi:"certificates"`
	// The name of the listener.
	Name *string `pulumi:"name"`
	// The name of the listener.
	Type *string `pulumi:"type"`
}

// KafkaStatusListenersPatchInput is an input type that accepts KafkaStatusListenersPatchArgs and KafkaStatusListenersPatchOutput values.
// You can construct a concrete instance of `KafkaStatusListenersPatchInput` via:
//
//	KafkaStatusListenersPatchArgs{...}
type KafkaStatusListenersPatchInput interface {
	pulumi.Input

	ToKafkaStatusListenersPatchOutput() KafkaStatusListenersPatchOutput
	ToKafkaStatusListenersPatchOutputWithContext(context.Context) KafkaStatusListenersPatchOutput
}

type KafkaStatusListenersPatchArgs struct {
	// A list of the addresses for this listener.
	Addresses KafkaStatusListenersAddressesPatchArrayInput `pulumi:"addresses"`
	// A comma-separated list of `host:port` pairs for connecting to the Kafka cluster using this listener.
	BootstrapServers pulumi.StringPtrInput `pulumi:"bootstrapServers"`
	// A list of TLS certificates which can be used to verify the identity of the server when connecting to the given listener. Set only for `tls` and `external` listeners.
	Certificates pulumi.StringArrayInput `pulumi:"certificates"`
	// The name of the listener.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The name of the listener.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaStatusListenersPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusListenersPatch)(nil)).Elem()
}

func (i KafkaStatusListenersPatchArgs) ToKafkaStatusListenersPatchOutput() KafkaStatusListenersPatchOutput {
	return i.ToKafkaStatusListenersPatchOutputWithContext(context.Background())
}

func (i KafkaStatusListenersPatchArgs) ToKafkaStatusListenersPatchOutputWithContext(ctx context.Context) KafkaStatusListenersPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusListenersPatchOutput)
}

// KafkaStatusListenersPatchArrayInput is an input type that accepts KafkaStatusListenersPatchArray and KafkaStatusListenersPatchArrayOutput values.
// You can construct a concrete instance of `KafkaStatusListenersPatchArrayInput` via:
//
//	KafkaStatusListenersPatchArray{ KafkaStatusListenersPatchArgs{...} }
type KafkaStatusListenersPatchArrayInput interface {
	pulumi.Input

	ToKafkaStatusListenersPatchArrayOutput() KafkaStatusListenersPatchArrayOutput
	ToKafkaStatusListenersPatchArrayOutputWithContext(context.Context) KafkaStatusListenersPatchArrayOutput
}

type KafkaStatusListenersPatchArray []KafkaStatusListenersPatchInput

func (KafkaStatusListenersPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaStatusListenersPatch)(nil)).Elem()
}

func (i KafkaStatusListenersPatchArray) ToKafkaStatusListenersPatchArrayOutput() KafkaStatusListenersPatchArrayOutput {
	return i.ToKafkaStatusListenersPatchArrayOutputWithContext(context.Background())
}

func (i KafkaStatusListenersPatchArray) ToKafkaStatusListenersPatchArrayOutputWithContext(ctx context.Context) KafkaStatusListenersPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusListenersPatchArrayOutput)
}

type KafkaStatusListenersPatchOutput struct{ *pulumi.OutputState }

func (KafkaStatusListenersPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusListenersPatch)(nil)).Elem()
}

func (o KafkaStatusListenersPatchOutput) ToKafkaStatusListenersPatchOutput() KafkaStatusListenersPatchOutput {
	return o
}

func (o KafkaStatusListenersPatchOutput) ToKafkaStatusListenersPatchOutputWithContext(ctx context.Context) KafkaStatusListenersPatchOutput {
	return o
}

// A list of the addresses for this listener.
func (o KafkaStatusListenersPatchOutput) Addresses() KafkaStatusListenersAddressesPatchArrayOutput {
	return o.ApplyT(func(v KafkaStatusListenersPatch) []KafkaStatusListenersAddressesPatch { return v.Addresses }).(KafkaStatusListenersAddressesPatchArrayOutput)
}

// A comma-separated list of `host:port` pairs for connecting to the Kafka cluster using this listener.
func (o KafkaStatusListenersPatchOutput) BootstrapServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusListenersPatch) *string { return v.BootstrapServers }).(pulumi.StringPtrOutput)
}

// A list of TLS certificates which can be used to verify the identity of the server when connecting to the given listener. Set only for `tls` and `external` listeners.
func (o KafkaStatusListenersPatchOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaStatusListenersPatch) []string { return v.Certificates }).(pulumi.StringArrayOutput)
}

// The name of the listener.
func (o KafkaStatusListenersPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusListenersPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The name of the listener.
func (o KafkaStatusListenersPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusListenersPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaStatusListenersPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaStatusListenersPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaStatusListenersPatch)(nil)).Elem()
}

func (o KafkaStatusListenersPatchArrayOutput) ToKafkaStatusListenersPatchArrayOutput() KafkaStatusListenersPatchArrayOutput {
	return o
}

func (o KafkaStatusListenersPatchArrayOutput) ToKafkaStatusListenersPatchArrayOutputWithContext(ctx context.Context) KafkaStatusListenersPatchArrayOutput {
	return o
}

func (o KafkaStatusListenersPatchArrayOutput) Index(i pulumi.IntInput) KafkaStatusListenersPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaStatusListenersPatch {
		return vs[0].([]KafkaStatusListenersPatch)[vs[1].(int)]
	}).(KafkaStatusListenersPatchOutput)
}

// The status of the Kafka cluster.
type KafkaStatusPatch struct {
	AutoRebalance *KafkaStatusAutoRebalancePatch `pulumi:"autoRebalance"`
	// Kafka cluster Id.
	ClusterId *string `pulumi:"clusterId"`
	// List of status conditions.
	Conditions []KafkaStatusConditionsPatch `pulumi:"conditions"`
	// Defines where cluster metadata are stored. Since Kafka KRaft has been fully adopted, the only applicable value is `KRaft`.
	KafkaMetadataState *string `pulumi:"kafkaMetadataState"`
	// The KRaft metadata.version currently used by the Kafka cluster.
	KafkaMetadataVersion *string `pulumi:"kafkaMetadataVersion"`
	// List of the KafkaNodePools used by this Kafka cluster.
	KafkaNodePools []KafkaStatusKafkaNodePoolsPatch `pulumi:"kafkaNodePools"`
	// The version of Kafka currently deployed in the cluster.
	KafkaVersion *string `pulumi:"kafkaVersion"`
	// Addresses of the internal and external listeners.
	Listeners []KafkaStatusListenersPatch `pulumi:"listeners"`
	// The generation of the CRD that was last reconciled by the operator.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// The version of the Strimzi Cluster Operator which performed the last successful reconciliation.
	OperatorLastSuccessfulVersion *string `pulumi:"operatorLastSuccessfulVersion"`
	// Registered node IDs used by this Kafka cluster. This field is used for internal purposes only and will be removed in the future.
	RegisteredNodeIds []int `pulumi:"registeredNodeIds"`
}

// KafkaStatusPatchInput is an input type that accepts KafkaStatusPatchArgs and KafkaStatusPatchOutput values.
// You can construct a concrete instance of `KafkaStatusPatchInput` via:
//
//	KafkaStatusPatchArgs{...}
type KafkaStatusPatchInput interface {
	pulumi.Input

	ToKafkaStatusPatchOutput() KafkaStatusPatchOutput
	ToKafkaStatusPatchOutputWithContext(context.Context) KafkaStatusPatchOutput
}

// The status of the Kafka cluster.
type KafkaStatusPatchArgs struct {
	AutoRebalance KafkaStatusAutoRebalancePatchPtrInput `pulumi:"autoRebalance"`
	// Kafka cluster Id.
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// List of status conditions.
	Conditions KafkaStatusConditionsPatchArrayInput `pulumi:"conditions"`
	// Defines where cluster metadata are stored. Since Kafka KRaft has been fully adopted, the only applicable value is `KRaft`.
	KafkaMetadataState pulumi.StringPtrInput `pulumi:"kafkaMetadataState"`
	// The KRaft metadata.version currently used by the Kafka cluster.
	KafkaMetadataVersion pulumi.StringPtrInput `pulumi:"kafkaMetadataVersion"`
	// List of the KafkaNodePools used by this Kafka cluster.
	KafkaNodePools KafkaStatusKafkaNodePoolsPatchArrayInput `pulumi:"kafkaNodePools"`
	// The version of Kafka currently deployed in the cluster.
	KafkaVersion pulumi.StringPtrInput `pulumi:"kafkaVersion"`
	// Addresses of the internal and external listeners.
	Listeners KafkaStatusListenersPatchArrayInput `pulumi:"listeners"`
	// The generation of the CRD that was last reconciled by the operator.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// The version of the Strimzi Cluster Operator which performed the last successful reconciliation.
	OperatorLastSuccessfulVersion pulumi.StringPtrInput `pulumi:"operatorLastSuccessfulVersion"`
	// Registered node IDs used by this Kafka cluster. This field is used for internal purposes only and will be removed in the future.
	RegisteredNodeIds pulumi.IntArrayInput `pulumi:"registeredNodeIds"`
}

func (KafkaStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusPatch)(nil)).Elem()
}

func (i KafkaStatusPatchArgs) ToKafkaStatusPatchOutput() KafkaStatusPatchOutput {
	return i.ToKafkaStatusPatchOutputWithContext(context.Background())
}

func (i KafkaStatusPatchArgs) ToKafkaStatusPatchOutputWithContext(ctx context.Context) KafkaStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusPatchOutput)
}

func (i KafkaStatusPatchArgs) ToKafkaStatusPatchPtrOutput() KafkaStatusPatchPtrOutput {
	return i.ToKafkaStatusPatchPtrOutputWithContext(context.Background())
}

func (i KafkaStatusPatchArgs) ToKafkaStatusPatchPtrOutputWithContext(ctx context.Context) KafkaStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusPatchOutput).ToKafkaStatusPatchPtrOutputWithContext(ctx)
}

// KafkaStatusPatchPtrInput is an input type that accepts KafkaStatusPatchArgs, KafkaStatusPatchPtr and KafkaStatusPatchPtrOutput values.
// You can construct a concrete instance of `KafkaStatusPatchPtrInput` via:
//
//	        KafkaStatusPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaStatusPatchPtrInput interface {
	pulumi.Input

	ToKafkaStatusPatchPtrOutput() KafkaStatusPatchPtrOutput
	ToKafkaStatusPatchPtrOutputWithContext(context.Context) KafkaStatusPatchPtrOutput
}

type kafkaStatusPatchPtrType KafkaStatusPatchArgs

func KafkaStatusPatchPtr(v *KafkaStatusPatchArgs) KafkaStatusPatchPtrInput {
	return (*kafkaStatusPatchPtrType)(v)
}

func (*kafkaStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaStatusPatch)(nil)).Elem()
}

func (i *kafkaStatusPatchPtrType) ToKafkaStatusPatchPtrOutput() KafkaStatusPatchPtrOutput {
	return i.ToKafkaStatusPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaStatusPatchPtrType) ToKafkaStatusPatchPtrOutputWithContext(ctx context.Context) KafkaStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaStatusPatchPtrOutput)
}

// The status of the Kafka cluster.
type KafkaStatusPatchOutput struct{ *pulumi.OutputState }

func (KafkaStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaStatusPatch)(nil)).Elem()
}

func (o KafkaStatusPatchOutput) ToKafkaStatusPatchOutput() KafkaStatusPatchOutput {
	return o
}

func (o KafkaStatusPatchOutput) ToKafkaStatusPatchOutputWithContext(ctx context.Context) KafkaStatusPatchOutput {
	return o
}

func (o KafkaStatusPatchOutput) ToKafkaStatusPatchPtrOutput() KafkaStatusPatchPtrOutput {
	return o.ToKafkaStatusPatchPtrOutputWithContext(context.Background())
}

func (o KafkaStatusPatchOutput) ToKafkaStatusPatchPtrOutputWithContext(ctx context.Context) KafkaStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaStatusPatch) *KafkaStatusPatch {
		return &v
	}).(KafkaStatusPatchPtrOutput)
}

func (o KafkaStatusPatchOutput) AutoRebalance() KafkaStatusAutoRebalancePatchPtrOutput {
	return o.ApplyT(func(v KafkaStatusPatch) *KafkaStatusAutoRebalancePatch { return v.AutoRebalance }).(KafkaStatusAutoRebalancePatchPtrOutput)
}

// Kafka cluster Id.
func (o KafkaStatusPatchOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusPatch) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// List of status conditions.
func (o KafkaStatusPatchOutput) Conditions() KafkaStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v KafkaStatusPatch) []KafkaStatusConditionsPatch { return v.Conditions }).(KafkaStatusConditionsPatchArrayOutput)
}

// Defines where cluster metadata are stored. Since Kafka KRaft has been fully adopted, the only applicable value is `KRaft`.
func (o KafkaStatusPatchOutput) KafkaMetadataState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusPatch) *string { return v.KafkaMetadataState }).(pulumi.StringPtrOutput)
}

// The KRaft metadata.version currently used by the Kafka cluster.
func (o KafkaStatusPatchOutput) KafkaMetadataVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusPatch) *string { return v.KafkaMetadataVersion }).(pulumi.StringPtrOutput)
}

// List of the KafkaNodePools used by this Kafka cluster.
func (o KafkaStatusPatchOutput) KafkaNodePools() KafkaStatusKafkaNodePoolsPatchArrayOutput {
	return o.ApplyT(func(v KafkaStatusPatch) []KafkaStatusKafkaNodePoolsPatch { return v.KafkaNodePools }).(KafkaStatusKafkaNodePoolsPatchArrayOutput)
}

// The version of Kafka currently deployed in the cluster.
func (o KafkaStatusPatchOutput) KafkaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusPatch) *string { return v.KafkaVersion }).(pulumi.StringPtrOutput)
}

// Addresses of the internal and external listeners.
func (o KafkaStatusPatchOutput) Listeners() KafkaStatusListenersPatchArrayOutput {
	return o.ApplyT(func(v KafkaStatusPatch) []KafkaStatusListenersPatch { return v.Listeners }).(KafkaStatusListenersPatchArrayOutput)
}

// The generation of the CRD that was last reconciled by the operator.
func (o KafkaStatusPatchOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaStatusPatch) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// The version of the Strimzi Cluster Operator which performed the last successful reconciliation.
func (o KafkaStatusPatchOutput) OperatorLastSuccessfulVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaStatusPatch) *string { return v.OperatorLastSuccessfulVersion }).(pulumi.StringPtrOutput)
}

// Registered node IDs used by this Kafka cluster. This field is used for internal purposes only and will be removed in the future.
func (o KafkaStatusPatchOutput) RegisteredNodeIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v KafkaStatusPatch) []int { return v.RegisteredNodeIds }).(pulumi.IntArrayOutput)
}

type KafkaStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaStatusPatch)(nil)).Elem()
}

func (o KafkaStatusPatchPtrOutput) ToKafkaStatusPatchPtrOutput() KafkaStatusPatchPtrOutput {
	return o
}

func (o KafkaStatusPatchPtrOutput) ToKafkaStatusPatchPtrOutputWithContext(ctx context.Context) KafkaStatusPatchPtrOutput {
	return o
}

func (o KafkaStatusPatchPtrOutput) Elem() KafkaStatusPatchOutput {
	return o.ApplyT(func(v *KafkaStatusPatch) KafkaStatusPatch {
		if v != nil {
			return *v
		}
		var ret KafkaStatusPatch
		return ret
	}).(KafkaStatusPatchOutput)
}

func (o KafkaStatusPatchPtrOutput) AutoRebalance() KafkaStatusAutoRebalancePatchPtrOutput {
	return o.ApplyT(func(v *KafkaStatusPatch) *KafkaStatusAutoRebalancePatch {
		if v == nil {
			return nil
		}
		return v.AutoRebalance
	}).(KafkaStatusAutoRebalancePatchPtrOutput)
}

// Kafka cluster Id.
func (o KafkaStatusPatchPtrOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.ClusterId
	}).(pulumi.StringPtrOutput)
}

// List of status conditions.
func (o KafkaStatusPatchPtrOutput) Conditions() KafkaStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaStatusPatch) []KafkaStatusConditionsPatch {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(KafkaStatusConditionsPatchArrayOutput)
}

// Defines where cluster metadata are stored. Since Kafka KRaft has been fully adopted, the only applicable value is `KRaft`.
func (o KafkaStatusPatchPtrOutput) KafkaMetadataState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.KafkaMetadataState
	}).(pulumi.StringPtrOutput)
}

// The KRaft metadata.version currently used by the Kafka cluster.
func (o KafkaStatusPatchPtrOutput) KafkaMetadataVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.KafkaMetadataVersion
	}).(pulumi.StringPtrOutput)
}

// List of the KafkaNodePools used by this Kafka cluster.
func (o KafkaStatusPatchPtrOutput) KafkaNodePools() KafkaStatusKafkaNodePoolsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaStatusPatch) []KafkaStatusKafkaNodePoolsPatch {
		if v == nil {
			return nil
		}
		return v.KafkaNodePools
	}).(KafkaStatusKafkaNodePoolsPatchArrayOutput)
}

// The version of Kafka currently deployed in the cluster.
func (o KafkaStatusPatchPtrOutput) KafkaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.KafkaVersion
	}).(pulumi.StringPtrOutput)
}

// Addresses of the internal and external listeners.
func (o KafkaStatusPatchPtrOutput) Listeners() KafkaStatusListenersPatchArrayOutput {
	return o.ApplyT(func(v *KafkaStatusPatch) []KafkaStatusListenersPatch {
		if v == nil {
			return nil
		}
		return v.Listeners
	}).(KafkaStatusListenersPatchArrayOutput)
}

// The generation of the CRD that was last reconciled by the operator.
func (o KafkaStatusPatchPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaStatusPatch) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// The version of the Strimzi Cluster Operator which performed the last successful reconciliation.
func (o KafkaStatusPatchPtrOutput) OperatorLastSuccessfulVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.OperatorLastSuccessfulVersion
	}).(pulumi.StringPtrOutput)
}

// Registered node IDs used by this Kafka cluster. This field is used for internal purposes only and will be removed in the future.
func (o KafkaStatusPatchPtrOutput) RegisteredNodeIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *KafkaStatusPatch) []int {
		if v == nil {
			return nil
		}
		return v.RegisteredNodeIds
	}).(pulumi.IntArrayOutput)
}

type KafkaTopicType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *KafkaTopicSpec    `pulumi:"spec"`
	Status   *KafkaTopicStatus  `pulumi:"status"`
}

// KafkaTopicTypeInput is an input type that accepts KafkaTopicTypeArgs and KafkaTopicTypeOutput values.
// You can construct a concrete instance of `KafkaTopicTypeInput` via:
//
//	KafkaTopicTypeArgs{...}
type KafkaTopicTypeInput interface {
	pulumi.Input

	ToKafkaTopicTypeOutput() KafkaTopicTypeOutput
	ToKafkaTopicTypeOutputWithContext(context.Context) KafkaTopicTypeOutput
}

type KafkaTopicTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec     KafkaTopicSpecPtrInput    `pulumi:"spec"`
	Status   KafkaTopicStatusPtrInput  `pulumi:"status"`
}

func (KafkaTopicTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicType)(nil)).Elem()
}

func (i KafkaTopicTypeArgs) ToKafkaTopicTypeOutput() KafkaTopicTypeOutput {
	return i.ToKafkaTopicTypeOutputWithContext(context.Background())
}

func (i KafkaTopicTypeArgs) ToKafkaTopicTypeOutputWithContext(ctx context.Context) KafkaTopicTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicTypeOutput)
}

// KafkaTopicTypeArrayInput is an input type that accepts KafkaTopicTypeArray and KafkaTopicTypeArrayOutput values.
// You can construct a concrete instance of `KafkaTopicTypeArrayInput` via:
//
//	KafkaTopicTypeArray{ KafkaTopicTypeArgs{...} }
type KafkaTopicTypeArrayInput interface {
	pulumi.Input

	ToKafkaTopicTypeArrayOutput() KafkaTopicTypeArrayOutput
	ToKafkaTopicTypeArrayOutputWithContext(context.Context) KafkaTopicTypeArrayOutput
}

type KafkaTopicTypeArray []KafkaTopicTypeInput

func (KafkaTopicTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaTopicType)(nil)).Elem()
}

func (i KafkaTopicTypeArray) ToKafkaTopicTypeArrayOutput() KafkaTopicTypeArrayOutput {
	return i.ToKafkaTopicTypeArrayOutputWithContext(context.Background())
}

func (i KafkaTopicTypeArray) ToKafkaTopicTypeArrayOutputWithContext(ctx context.Context) KafkaTopicTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicTypeArrayOutput)
}

type KafkaTopicTypeOutput struct{ *pulumi.OutputState }

func (KafkaTopicTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicType)(nil)).Elem()
}

func (o KafkaTopicTypeOutput) ToKafkaTopicTypeOutput() KafkaTopicTypeOutput {
	return o
}

func (o KafkaTopicTypeOutput) ToKafkaTopicTypeOutputWithContext(ctx context.Context) KafkaTopicTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o KafkaTopicTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o KafkaTopicTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o KafkaTopicTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v KafkaTopicType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o KafkaTopicTypeOutput) Spec() KafkaTopicSpecPtrOutput {
	return o.ApplyT(func(v KafkaTopicType) *KafkaTopicSpec { return v.Spec }).(KafkaTopicSpecPtrOutput)
}

func (o KafkaTopicTypeOutput) Status() KafkaTopicStatusPtrOutput {
	return o.ApplyT(func(v KafkaTopicType) *KafkaTopicStatus { return v.Status }).(KafkaTopicStatusPtrOutput)
}

type KafkaTopicTypeArrayOutput struct{ *pulumi.OutputState }

func (KafkaTopicTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaTopicType)(nil)).Elem()
}

func (o KafkaTopicTypeArrayOutput) ToKafkaTopicTypeArrayOutput() KafkaTopicTypeArrayOutput {
	return o
}

func (o KafkaTopicTypeArrayOutput) ToKafkaTopicTypeArrayOutputWithContext(ctx context.Context) KafkaTopicTypeArrayOutput {
	return o
}

func (o KafkaTopicTypeArrayOutput) Index(i pulumi.IntInput) KafkaTopicTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaTopicType {
		return vs[0].([]KafkaTopicType)[vs[1].(int)]
	}).(KafkaTopicTypeOutput)
}

// KafkaTopicList is a list of KafkaTopic
type KafkaTopicListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of kafkatopics. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []KafkaTopicType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// KafkaTopicListTypeInput is an input type that accepts KafkaTopicListTypeArgs and KafkaTopicListTypeOutput values.
// You can construct a concrete instance of `KafkaTopicListTypeInput` via:
//
//	KafkaTopicListTypeArgs{...}
type KafkaTopicListTypeInput interface {
	pulumi.Input

	ToKafkaTopicListTypeOutput() KafkaTopicListTypeOutput
	ToKafkaTopicListTypeOutputWithContext(context.Context) KafkaTopicListTypeOutput
}

// KafkaTopicList is a list of KafkaTopic
type KafkaTopicListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of kafkatopics. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items KafkaTopicTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (KafkaTopicListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicListType)(nil)).Elem()
}

func (i KafkaTopicListTypeArgs) ToKafkaTopicListTypeOutput() KafkaTopicListTypeOutput {
	return i.ToKafkaTopicListTypeOutputWithContext(context.Background())
}

func (i KafkaTopicListTypeArgs) ToKafkaTopicListTypeOutputWithContext(ctx context.Context) KafkaTopicListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicListTypeOutput)
}

// KafkaTopicList is a list of KafkaTopic
type KafkaTopicListTypeOutput struct{ *pulumi.OutputState }

func (KafkaTopicListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicListType)(nil)).Elem()
}

func (o KafkaTopicListTypeOutput) ToKafkaTopicListTypeOutput() KafkaTopicListTypeOutput {
	return o
}

func (o KafkaTopicListTypeOutput) ToKafkaTopicListTypeOutputWithContext(ctx context.Context) KafkaTopicListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o KafkaTopicListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of kafkatopics. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o KafkaTopicListTypeOutput) Items() KafkaTopicTypeArrayOutput {
	return o.ApplyT(func(v KafkaTopicListType) []KafkaTopicType { return v.Items }).(KafkaTopicTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o KafkaTopicListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o KafkaTopicListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v KafkaTopicListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

type KafkaTopicPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *KafkaTopicSpecPatch    `pulumi:"spec"`
	Status   *KafkaTopicStatusPatch  `pulumi:"status"`
}

// KafkaTopicPatchTypeInput is an input type that accepts KafkaTopicPatchTypeArgs and KafkaTopicPatchTypeOutput values.
// You can construct a concrete instance of `KafkaTopicPatchTypeInput` via:
//
//	KafkaTopicPatchTypeArgs{...}
type KafkaTopicPatchTypeInput interface {
	pulumi.Input

	ToKafkaTopicPatchTypeOutput() KafkaTopicPatchTypeOutput
	ToKafkaTopicPatchTypeOutputWithContext(context.Context) KafkaTopicPatchTypeOutput
}

type KafkaTopicPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
	Spec     KafkaTopicSpecPatchPtrInput    `pulumi:"spec"`
	Status   KafkaTopicStatusPatchPtrInput  `pulumi:"status"`
}

func (KafkaTopicPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicPatchType)(nil)).Elem()
}

func (i KafkaTopicPatchTypeArgs) ToKafkaTopicPatchTypeOutput() KafkaTopicPatchTypeOutput {
	return i.ToKafkaTopicPatchTypeOutputWithContext(context.Background())
}

func (i KafkaTopicPatchTypeArgs) ToKafkaTopicPatchTypeOutputWithContext(ctx context.Context) KafkaTopicPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicPatchTypeOutput)
}

type KafkaTopicPatchTypeOutput struct{ *pulumi.OutputState }

func (KafkaTopicPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicPatchType)(nil)).Elem()
}

func (o KafkaTopicPatchTypeOutput) ToKafkaTopicPatchTypeOutput() KafkaTopicPatchTypeOutput {
	return o
}

func (o KafkaTopicPatchTypeOutput) ToKafkaTopicPatchTypeOutputWithContext(ctx context.Context) KafkaTopicPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o KafkaTopicPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o KafkaTopicPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o KafkaTopicPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v KafkaTopicPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o KafkaTopicPatchTypeOutput) Spec() KafkaTopicSpecPatchPtrOutput {
	return o.ApplyT(func(v KafkaTopicPatchType) *KafkaTopicSpecPatch { return v.Spec }).(KafkaTopicSpecPatchPtrOutput)
}

func (o KafkaTopicPatchTypeOutput) Status() KafkaTopicStatusPatchPtrOutput {
	return o.ApplyT(func(v KafkaTopicPatchType) *KafkaTopicStatusPatch { return v.Status }).(KafkaTopicStatusPatchPtrOutput)
}

// The specification of the topic.
type KafkaTopicSpec struct {
	// The topic configuration.
	Config map[string]interface{} `pulumi:"config"`
	// The number of partitions the topic should have. This cannot be decreased after topic creation. It can be increased after topic creation, but it is important to understand the consequences that has, especially for topics with semantic partitioning. When absent this will default to the broker configuration for `num.partitions`.
	Partitions *int `pulumi:"partitions"`
	// The number of replicas the topic should have. When absent this will default to the broker configuration for `default.replication.factor`.
	Replicas *int `pulumi:"replicas"`
	// The name of the topic. When absent this will default to the metadata.name of the topic. It is recommended to not set this unless the topic name is not a valid Kubernetes resource name.
	TopicName *string `pulumi:"topicName"`
}

// KafkaTopicSpecInput is an input type that accepts KafkaTopicSpecArgs and KafkaTopicSpecOutput values.
// You can construct a concrete instance of `KafkaTopicSpecInput` via:
//
//	KafkaTopicSpecArgs{...}
type KafkaTopicSpecInput interface {
	pulumi.Input

	ToKafkaTopicSpecOutput() KafkaTopicSpecOutput
	ToKafkaTopicSpecOutputWithContext(context.Context) KafkaTopicSpecOutput
}

// The specification of the topic.
type KafkaTopicSpecArgs struct {
	// The topic configuration.
	Config pulumi.MapInput `pulumi:"config"`
	// The number of partitions the topic should have. This cannot be decreased after topic creation. It can be increased after topic creation, but it is important to understand the consequences that has, especially for topics with semantic partitioning. When absent this will default to the broker configuration for `num.partitions`.
	Partitions pulumi.IntPtrInput `pulumi:"partitions"`
	// The number of replicas the topic should have. When absent this will default to the broker configuration for `default.replication.factor`.
	Replicas pulumi.IntPtrInput `pulumi:"replicas"`
	// The name of the topic. When absent this will default to the metadata.name of the topic. It is recommended to not set this unless the topic name is not a valid Kubernetes resource name.
	TopicName pulumi.StringPtrInput `pulumi:"topicName"`
}

func (KafkaTopicSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicSpec)(nil)).Elem()
}

func (i KafkaTopicSpecArgs) ToKafkaTopicSpecOutput() KafkaTopicSpecOutput {
	return i.ToKafkaTopicSpecOutputWithContext(context.Background())
}

func (i KafkaTopicSpecArgs) ToKafkaTopicSpecOutputWithContext(ctx context.Context) KafkaTopicSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicSpecOutput)
}

func (i KafkaTopicSpecArgs) ToKafkaTopicSpecPtrOutput() KafkaTopicSpecPtrOutput {
	return i.ToKafkaTopicSpecPtrOutputWithContext(context.Background())
}

func (i KafkaTopicSpecArgs) ToKafkaTopicSpecPtrOutputWithContext(ctx context.Context) KafkaTopicSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicSpecOutput).ToKafkaTopicSpecPtrOutputWithContext(ctx)
}

// KafkaTopicSpecPtrInput is an input type that accepts KafkaTopicSpecArgs, KafkaTopicSpecPtr and KafkaTopicSpecPtrOutput values.
// You can construct a concrete instance of `KafkaTopicSpecPtrInput` via:
//
//	        KafkaTopicSpecArgs{...}
//
//	or:
//
//	        nil
type KafkaTopicSpecPtrInput interface {
	pulumi.Input

	ToKafkaTopicSpecPtrOutput() KafkaTopicSpecPtrOutput
	ToKafkaTopicSpecPtrOutputWithContext(context.Context) KafkaTopicSpecPtrOutput
}

type kafkaTopicSpecPtrType KafkaTopicSpecArgs

func KafkaTopicSpecPtr(v *KafkaTopicSpecArgs) KafkaTopicSpecPtrInput {
	return (*kafkaTopicSpecPtrType)(v)
}

func (*kafkaTopicSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicSpec)(nil)).Elem()
}

func (i *kafkaTopicSpecPtrType) ToKafkaTopicSpecPtrOutput() KafkaTopicSpecPtrOutput {
	return i.ToKafkaTopicSpecPtrOutputWithContext(context.Background())
}

func (i *kafkaTopicSpecPtrType) ToKafkaTopicSpecPtrOutputWithContext(ctx context.Context) KafkaTopicSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicSpecPtrOutput)
}

// The specification of the topic.
type KafkaTopicSpecOutput struct{ *pulumi.OutputState }

func (KafkaTopicSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicSpec)(nil)).Elem()
}

func (o KafkaTopicSpecOutput) ToKafkaTopicSpecOutput() KafkaTopicSpecOutput {
	return o
}

func (o KafkaTopicSpecOutput) ToKafkaTopicSpecOutputWithContext(ctx context.Context) KafkaTopicSpecOutput {
	return o
}

func (o KafkaTopicSpecOutput) ToKafkaTopicSpecPtrOutput() KafkaTopicSpecPtrOutput {
	return o.ToKafkaTopicSpecPtrOutputWithContext(context.Background())
}

func (o KafkaTopicSpecOutput) ToKafkaTopicSpecPtrOutputWithContext(ctx context.Context) KafkaTopicSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaTopicSpec) *KafkaTopicSpec {
		return &v
	}).(KafkaTopicSpecPtrOutput)
}

// The topic configuration.
func (o KafkaTopicSpecOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v KafkaTopicSpec) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// The number of partitions the topic should have. This cannot be decreased after topic creation. It can be increased after topic creation, but it is important to understand the consequences that has, especially for topics with semantic partitioning. When absent this will default to the broker configuration for `num.partitions`.
func (o KafkaTopicSpecOutput) Partitions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaTopicSpec) *int { return v.Partitions }).(pulumi.IntPtrOutput)
}

// The number of replicas the topic should have. When absent this will default to the broker configuration for `default.replication.factor`.
func (o KafkaTopicSpecOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaTopicSpec) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

// The name of the topic. When absent this will default to the metadata.name of the topic. It is recommended to not set this unless the topic name is not a valid Kubernetes resource name.
func (o KafkaTopicSpecOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicSpec) *string { return v.TopicName }).(pulumi.StringPtrOutput)
}

type KafkaTopicSpecPtrOutput struct{ *pulumi.OutputState }

func (KafkaTopicSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicSpec)(nil)).Elem()
}

func (o KafkaTopicSpecPtrOutput) ToKafkaTopicSpecPtrOutput() KafkaTopicSpecPtrOutput {
	return o
}

func (o KafkaTopicSpecPtrOutput) ToKafkaTopicSpecPtrOutputWithContext(ctx context.Context) KafkaTopicSpecPtrOutput {
	return o
}

func (o KafkaTopicSpecPtrOutput) Elem() KafkaTopicSpecOutput {
	return o.ApplyT(func(v *KafkaTopicSpec) KafkaTopicSpec {
		if v != nil {
			return *v
		}
		var ret KafkaTopicSpec
		return ret
	}).(KafkaTopicSpecOutput)
}

// The topic configuration.
func (o KafkaTopicSpecPtrOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v *KafkaTopicSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.MapOutput)
}

// The number of partitions the topic should have. This cannot be decreased after topic creation. It can be increased after topic creation, but it is important to understand the consequences that has, especially for topics with semantic partitioning. When absent this will default to the broker configuration for `num.partitions`.
func (o KafkaTopicSpecPtrOutput) Partitions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaTopicSpec) *int {
		if v == nil {
			return nil
		}
		return v.Partitions
	}).(pulumi.IntPtrOutput)
}

// The number of replicas the topic should have. When absent this will default to the broker configuration for `default.replication.factor`.
func (o KafkaTopicSpecPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaTopicSpec) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

// The name of the topic. When absent this will default to the metadata.name of the topic. It is recommended to not set this unless the topic name is not a valid Kubernetes resource name.
func (o KafkaTopicSpecPtrOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicSpec) *string {
		if v == nil {
			return nil
		}
		return v.TopicName
	}).(pulumi.StringPtrOutput)
}

// The specification of the topic.
type KafkaTopicSpecPatch struct {
	// The topic configuration.
	Config map[string]interface{} `pulumi:"config"`
	// The number of partitions the topic should have. This cannot be decreased after topic creation. It can be increased after topic creation, but it is important to understand the consequences that has, especially for topics with semantic partitioning. When absent this will default to the broker configuration for `num.partitions`.
	Partitions *int `pulumi:"partitions"`
	// The number of replicas the topic should have. When absent this will default to the broker configuration for `default.replication.factor`.
	Replicas *int `pulumi:"replicas"`
	// The name of the topic. When absent this will default to the metadata.name of the topic. It is recommended to not set this unless the topic name is not a valid Kubernetes resource name.
	TopicName *string `pulumi:"topicName"`
}

// KafkaTopicSpecPatchInput is an input type that accepts KafkaTopicSpecPatchArgs and KafkaTopicSpecPatchOutput values.
// You can construct a concrete instance of `KafkaTopicSpecPatchInput` via:
//
//	KafkaTopicSpecPatchArgs{...}
type KafkaTopicSpecPatchInput interface {
	pulumi.Input

	ToKafkaTopicSpecPatchOutput() KafkaTopicSpecPatchOutput
	ToKafkaTopicSpecPatchOutputWithContext(context.Context) KafkaTopicSpecPatchOutput
}

// The specification of the topic.
type KafkaTopicSpecPatchArgs struct {
	// The topic configuration.
	Config pulumi.MapInput `pulumi:"config"`
	// The number of partitions the topic should have. This cannot be decreased after topic creation. It can be increased after topic creation, but it is important to understand the consequences that has, especially for topics with semantic partitioning. When absent this will default to the broker configuration for `num.partitions`.
	Partitions pulumi.IntPtrInput `pulumi:"partitions"`
	// The number of replicas the topic should have. When absent this will default to the broker configuration for `default.replication.factor`.
	Replicas pulumi.IntPtrInput `pulumi:"replicas"`
	// The name of the topic. When absent this will default to the metadata.name of the topic. It is recommended to not set this unless the topic name is not a valid Kubernetes resource name.
	TopicName pulumi.StringPtrInput `pulumi:"topicName"`
}

func (KafkaTopicSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicSpecPatch)(nil)).Elem()
}

func (i KafkaTopicSpecPatchArgs) ToKafkaTopicSpecPatchOutput() KafkaTopicSpecPatchOutput {
	return i.ToKafkaTopicSpecPatchOutputWithContext(context.Background())
}

func (i KafkaTopicSpecPatchArgs) ToKafkaTopicSpecPatchOutputWithContext(ctx context.Context) KafkaTopicSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicSpecPatchOutput)
}

func (i KafkaTopicSpecPatchArgs) ToKafkaTopicSpecPatchPtrOutput() KafkaTopicSpecPatchPtrOutput {
	return i.ToKafkaTopicSpecPatchPtrOutputWithContext(context.Background())
}

func (i KafkaTopicSpecPatchArgs) ToKafkaTopicSpecPatchPtrOutputWithContext(ctx context.Context) KafkaTopicSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicSpecPatchOutput).ToKafkaTopicSpecPatchPtrOutputWithContext(ctx)
}

// KafkaTopicSpecPatchPtrInput is an input type that accepts KafkaTopicSpecPatchArgs, KafkaTopicSpecPatchPtr and KafkaTopicSpecPatchPtrOutput values.
// You can construct a concrete instance of `KafkaTopicSpecPatchPtrInput` via:
//
//	        KafkaTopicSpecPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaTopicSpecPatchPtrInput interface {
	pulumi.Input

	ToKafkaTopicSpecPatchPtrOutput() KafkaTopicSpecPatchPtrOutput
	ToKafkaTopicSpecPatchPtrOutputWithContext(context.Context) KafkaTopicSpecPatchPtrOutput
}

type kafkaTopicSpecPatchPtrType KafkaTopicSpecPatchArgs

func KafkaTopicSpecPatchPtr(v *KafkaTopicSpecPatchArgs) KafkaTopicSpecPatchPtrInput {
	return (*kafkaTopicSpecPatchPtrType)(v)
}

func (*kafkaTopicSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicSpecPatch)(nil)).Elem()
}

func (i *kafkaTopicSpecPatchPtrType) ToKafkaTopicSpecPatchPtrOutput() KafkaTopicSpecPatchPtrOutput {
	return i.ToKafkaTopicSpecPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaTopicSpecPatchPtrType) ToKafkaTopicSpecPatchPtrOutputWithContext(ctx context.Context) KafkaTopicSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicSpecPatchPtrOutput)
}

// The specification of the topic.
type KafkaTopicSpecPatchOutput struct{ *pulumi.OutputState }

func (KafkaTopicSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicSpecPatch)(nil)).Elem()
}

func (o KafkaTopicSpecPatchOutput) ToKafkaTopicSpecPatchOutput() KafkaTopicSpecPatchOutput {
	return o
}

func (o KafkaTopicSpecPatchOutput) ToKafkaTopicSpecPatchOutputWithContext(ctx context.Context) KafkaTopicSpecPatchOutput {
	return o
}

func (o KafkaTopicSpecPatchOutput) ToKafkaTopicSpecPatchPtrOutput() KafkaTopicSpecPatchPtrOutput {
	return o.ToKafkaTopicSpecPatchPtrOutputWithContext(context.Background())
}

func (o KafkaTopicSpecPatchOutput) ToKafkaTopicSpecPatchPtrOutputWithContext(ctx context.Context) KafkaTopicSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaTopicSpecPatch) *KafkaTopicSpecPatch {
		return &v
	}).(KafkaTopicSpecPatchPtrOutput)
}

// The topic configuration.
func (o KafkaTopicSpecPatchOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v KafkaTopicSpecPatch) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// The number of partitions the topic should have. This cannot be decreased after topic creation. It can be increased after topic creation, but it is important to understand the consequences that has, especially for topics with semantic partitioning. When absent this will default to the broker configuration for `num.partitions`.
func (o KafkaTopicSpecPatchOutput) Partitions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaTopicSpecPatch) *int { return v.Partitions }).(pulumi.IntPtrOutput)
}

// The number of replicas the topic should have. When absent this will default to the broker configuration for `default.replication.factor`.
func (o KafkaTopicSpecPatchOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaTopicSpecPatch) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

// The name of the topic. When absent this will default to the metadata.name of the topic. It is recommended to not set this unless the topic name is not a valid Kubernetes resource name.
func (o KafkaTopicSpecPatchOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicSpecPatch) *string { return v.TopicName }).(pulumi.StringPtrOutput)
}

type KafkaTopicSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaTopicSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicSpecPatch)(nil)).Elem()
}

func (o KafkaTopicSpecPatchPtrOutput) ToKafkaTopicSpecPatchPtrOutput() KafkaTopicSpecPatchPtrOutput {
	return o
}

func (o KafkaTopicSpecPatchPtrOutput) ToKafkaTopicSpecPatchPtrOutputWithContext(ctx context.Context) KafkaTopicSpecPatchPtrOutput {
	return o
}

func (o KafkaTopicSpecPatchPtrOutput) Elem() KafkaTopicSpecPatchOutput {
	return o.ApplyT(func(v *KafkaTopicSpecPatch) KafkaTopicSpecPatch {
		if v != nil {
			return *v
		}
		var ret KafkaTopicSpecPatch
		return ret
	}).(KafkaTopicSpecPatchOutput)
}

// The topic configuration.
func (o KafkaTopicSpecPatchPtrOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v *KafkaTopicSpecPatch) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.MapOutput)
}

// The number of partitions the topic should have. This cannot be decreased after topic creation. It can be increased after topic creation, but it is important to understand the consequences that has, especially for topics with semantic partitioning. When absent this will default to the broker configuration for `num.partitions`.
func (o KafkaTopicSpecPatchPtrOutput) Partitions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaTopicSpecPatch) *int {
		if v == nil {
			return nil
		}
		return v.Partitions
	}).(pulumi.IntPtrOutput)
}

// The number of replicas the topic should have. When absent this will default to the broker configuration for `default.replication.factor`.
func (o KafkaTopicSpecPatchPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaTopicSpecPatch) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

// The name of the topic. When absent this will default to the metadata.name of the topic. It is recommended to not set this unless the topic name is not a valid Kubernetes resource name.
func (o KafkaTopicSpecPatchPtrOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.TopicName
	}).(pulumi.StringPtrOutput)
}

// The status of the topic.
type KafkaTopicStatus struct {
	// List of status conditions.
	Conditions []KafkaTopicStatusConditions `pulumi:"conditions"`
	// The generation of the CRD that was last reconciled by the operator.
	ObservedGeneration *int                            `pulumi:"observedGeneration"`
	ReplicasChange     *KafkaTopicStatusReplicasChange `pulumi:"replicasChange"`
	// The topic's id. For a KafkaTopic with the ready condition, this will change only if the topic gets deleted and recreated with the same name.
	TopicId *string `pulumi:"topicId"`
	// Topic name.
	TopicName *string `pulumi:"topicName"`
}

// KafkaTopicStatusInput is an input type that accepts KafkaTopicStatusArgs and KafkaTopicStatusOutput values.
// You can construct a concrete instance of `KafkaTopicStatusInput` via:
//
//	KafkaTopicStatusArgs{...}
type KafkaTopicStatusInput interface {
	pulumi.Input

	ToKafkaTopicStatusOutput() KafkaTopicStatusOutput
	ToKafkaTopicStatusOutputWithContext(context.Context) KafkaTopicStatusOutput
}

// The status of the topic.
type KafkaTopicStatusArgs struct {
	// List of status conditions.
	Conditions KafkaTopicStatusConditionsArrayInput `pulumi:"conditions"`
	// The generation of the CRD that was last reconciled by the operator.
	ObservedGeneration pulumi.IntPtrInput                     `pulumi:"observedGeneration"`
	ReplicasChange     KafkaTopicStatusReplicasChangePtrInput `pulumi:"replicasChange"`
	// The topic's id. For a KafkaTopic with the ready condition, this will change only if the topic gets deleted and recreated with the same name.
	TopicId pulumi.StringPtrInput `pulumi:"topicId"`
	// Topic name.
	TopicName pulumi.StringPtrInput `pulumi:"topicName"`
}

func (KafkaTopicStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicStatus)(nil)).Elem()
}

func (i KafkaTopicStatusArgs) ToKafkaTopicStatusOutput() KafkaTopicStatusOutput {
	return i.ToKafkaTopicStatusOutputWithContext(context.Background())
}

func (i KafkaTopicStatusArgs) ToKafkaTopicStatusOutputWithContext(ctx context.Context) KafkaTopicStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicStatusOutput)
}

func (i KafkaTopicStatusArgs) ToKafkaTopicStatusPtrOutput() KafkaTopicStatusPtrOutput {
	return i.ToKafkaTopicStatusPtrOutputWithContext(context.Background())
}

func (i KafkaTopicStatusArgs) ToKafkaTopicStatusPtrOutputWithContext(ctx context.Context) KafkaTopicStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicStatusOutput).ToKafkaTopicStatusPtrOutputWithContext(ctx)
}

// KafkaTopicStatusPtrInput is an input type that accepts KafkaTopicStatusArgs, KafkaTopicStatusPtr and KafkaTopicStatusPtrOutput values.
// You can construct a concrete instance of `KafkaTopicStatusPtrInput` via:
//
//	        KafkaTopicStatusArgs{...}
//
//	or:
//
//	        nil
type KafkaTopicStatusPtrInput interface {
	pulumi.Input

	ToKafkaTopicStatusPtrOutput() KafkaTopicStatusPtrOutput
	ToKafkaTopicStatusPtrOutputWithContext(context.Context) KafkaTopicStatusPtrOutput
}

type kafkaTopicStatusPtrType KafkaTopicStatusArgs

func KafkaTopicStatusPtr(v *KafkaTopicStatusArgs) KafkaTopicStatusPtrInput {
	return (*kafkaTopicStatusPtrType)(v)
}

func (*kafkaTopicStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicStatus)(nil)).Elem()
}

func (i *kafkaTopicStatusPtrType) ToKafkaTopicStatusPtrOutput() KafkaTopicStatusPtrOutput {
	return i.ToKafkaTopicStatusPtrOutputWithContext(context.Background())
}

func (i *kafkaTopicStatusPtrType) ToKafkaTopicStatusPtrOutputWithContext(ctx context.Context) KafkaTopicStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicStatusPtrOutput)
}

// The status of the topic.
type KafkaTopicStatusOutput struct{ *pulumi.OutputState }

func (KafkaTopicStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicStatus)(nil)).Elem()
}

func (o KafkaTopicStatusOutput) ToKafkaTopicStatusOutput() KafkaTopicStatusOutput {
	return o
}

func (o KafkaTopicStatusOutput) ToKafkaTopicStatusOutputWithContext(ctx context.Context) KafkaTopicStatusOutput {
	return o
}

func (o KafkaTopicStatusOutput) ToKafkaTopicStatusPtrOutput() KafkaTopicStatusPtrOutput {
	return o.ToKafkaTopicStatusPtrOutputWithContext(context.Background())
}

func (o KafkaTopicStatusOutput) ToKafkaTopicStatusPtrOutputWithContext(ctx context.Context) KafkaTopicStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaTopicStatus) *KafkaTopicStatus {
		return &v
	}).(KafkaTopicStatusPtrOutput)
}

// List of status conditions.
func (o KafkaTopicStatusOutput) Conditions() KafkaTopicStatusConditionsArrayOutput {
	return o.ApplyT(func(v KafkaTopicStatus) []KafkaTopicStatusConditions { return v.Conditions }).(KafkaTopicStatusConditionsArrayOutput)
}

// The generation of the CRD that was last reconciled by the operator.
func (o KafkaTopicStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

func (o KafkaTopicStatusOutput) ReplicasChange() KafkaTopicStatusReplicasChangePtrOutput {
	return o.ApplyT(func(v KafkaTopicStatus) *KafkaTopicStatusReplicasChange { return v.ReplicasChange }).(KafkaTopicStatusReplicasChangePtrOutput)
}

// The topic's id. For a KafkaTopic with the ready condition, this will change only if the topic gets deleted and recreated with the same name.
func (o KafkaTopicStatusOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatus) *string { return v.TopicId }).(pulumi.StringPtrOutput)
}

// Topic name.
func (o KafkaTopicStatusOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatus) *string { return v.TopicName }).(pulumi.StringPtrOutput)
}

type KafkaTopicStatusPtrOutput struct{ *pulumi.OutputState }

func (KafkaTopicStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicStatus)(nil)).Elem()
}

func (o KafkaTopicStatusPtrOutput) ToKafkaTopicStatusPtrOutput() KafkaTopicStatusPtrOutput {
	return o
}

func (o KafkaTopicStatusPtrOutput) ToKafkaTopicStatusPtrOutputWithContext(ctx context.Context) KafkaTopicStatusPtrOutput {
	return o
}

func (o KafkaTopicStatusPtrOutput) Elem() KafkaTopicStatusOutput {
	return o.ApplyT(func(v *KafkaTopicStatus) KafkaTopicStatus {
		if v != nil {
			return *v
		}
		var ret KafkaTopicStatus
		return ret
	}).(KafkaTopicStatusOutput)
}

// List of status conditions.
func (o KafkaTopicStatusPtrOutput) Conditions() KafkaTopicStatusConditionsArrayOutput {
	return o.ApplyT(func(v *KafkaTopicStatus) []KafkaTopicStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(KafkaTopicStatusConditionsArrayOutput)
}

// The generation of the CRD that was last reconciled by the operator.
func (o KafkaTopicStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaTopicStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

func (o KafkaTopicStatusPtrOutput) ReplicasChange() KafkaTopicStatusReplicasChangePtrOutput {
	return o.ApplyT(func(v *KafkaTopicStatus) *KafkaTopicStatusReplicasChange {
		if v == nil {
			return nil
		}
		return v.ReplicasChange
	}).(KafkaTopicStatusReplicasChangePtrOutput)
}

// The topic's id. For a KafkaTopic with the ready condition, this will change only if the topic gets deleted and recreated with the same name.
func (o KafkaTopicStatusPtrOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicStatus) *string {
		if v == nil {
			return nil
		}
		return v.TopicId
	}).(pulumi.StringPtrOutput)
}

// Topic name.
func (o KafkaTopicStatusPtrOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicStatus) *string {
		if v == nil {
			return nil
		}
		return v.TopicName
	}).(pulumi.StringPtrOutput)
}

type KafkaTopicStatusConditions struct {
	// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about the condition's last transition.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition (a single word in CamelCase).
	Reason *string `pulumi:"reason"`
	// The status of the condition, either True, False or Unknown.
	Status *string `pulumi:"status"`
	// The unique identifier of a condition, used to distinguish between other conditions in the resource.
	Type *string `pulumi:"type"`
}

// KafkaTopicStatusConditionsInput is an input type that accepts KafkaTopicStatusConditionsArgs and KafkaTopicStatusConditionsOutput values.
// You can construct a concrete instance of `KafkaTopicStatusConditionsInput` via:
//
//	KafkaTopicStatusConditionsArgs{...}
type KafkaTopicStatusConditionsInput interface {
	pulumi.Input

	ToKafkaTopicStatusConditionsOutput() KafkaTopicStatusConditionsOutput
	ToKafkaTopicStatusConditionsOutputWithContext(context.Context) KafkaTopicStatusConditionsOutput
}

type KafkaTopicStatusConditionsArgs struct {
	// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about the condition's last transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition (a single word in CamelCase).
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// The status of the condition, either True, False or Unknown.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The unique identifier of a condition, used to distinguish between other conditions in the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaTopicStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicStatusConditions)(nil)).Elem()
}

func (i KafkaTopicStatusConditionsArgs) ToKafkaTopicStatusConditionsOutput() KafkaTopicStatusConditionsOutput {
	return i.ToKafkaTopicStatusConditionsOutputWithContext(context.Background())
}

func (i KafkaTopicStatusConditionsArgs) ToKafkaTopicStatusConditionsOutputWithContext(ctx context.Context) KafkaTopicStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicStatusConditionsOutput)
}

// KafkaTopicStatusConditionsArrayInput is an input type that accepts KafkaTopicStatusConditionsArray and KafkaTopicStatusConditionsArrayOutput values.
// You can construct a concrete instance of `KafkaTopicStatusConditionsArrayInput` via:
//
//	KafkaTopicStatusConditionsArray{ KafkaTopicStatusConditionsArgs{...} }
type KafkaTopicStatusConditionsArrayInput interface {
	pulumi.Input

	ToKafkaTopicStatusConditionsArrayOutput() KafkaTopicStatusConditionsArrayOutput
	ToKafkaTopicStatusConditionsArrayOutputWithContext(context.Context) KafkaTopicStatusConditionsArrayOutput
}

type KafkaTopicStatusConditionsArray []KafkaTopicStatusConditionsInput

func (KafkaTopicStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaTopicStatusConditions)(nil)).Elem()
}

func (i KafkaTopicStatusConditionsArray) ToKafkaTopicStatusConditionsArrayOutput() KafkaTopicStatusConditionsArrayOutput {
	return i.ToKafkaTopicStatusConditionsArrayOutputWithContext(context.Background())
}

func (i KafkaTopicStatusConditionsArray) ToKafkaTopicStatusConditionsArrayOutputWithContext(ctx context.Context) KafkaTopicStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicStatusConditionsArrayOutput)
}

type KafkaTopicStatusConditionsOutput struct{ *pulumi.OutputState }

func (KafkaTopicStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicStatusConditions)(nil)).Elem()
}

func (o KafkaTopicStatusConditionsOutput) ToKafkaTopicStatusConditionsOutput() KafkaTopicStatusConditionsOutput {
	return o
}

func (o KafkaTopicStatusConditionsOutput) ToKafkaTopicStatusConditionsOutputWithContext(ctx context.Context) KafkaTopicStatusConditionsOutput {
	return o
}

// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
func (o KafkaTopicStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// Human-readable message indicating details about the condition's last transition.
func (o KafkaTopicStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition (a single word in CamelCase).
func (o KafkaTopicStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// The status of the condition, either True, False or Unknown.
func (o KafkaTopicStatusConditionsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatusConditions) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The unique identifier of a condition, used to distinguish between other conditions in the resource.
func (o KafkaTopicStatusConditionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatusConditions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaTopicStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (KafkaTopicStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaTopicStatusConditions)(nil)).Elem()
}

func (o KafkaTopicStatusConditionsArrayOutput) ToKafkaTopicStatusConditionsArrayOutput() KafkaTopicStatusConditionsArrayOutput {
	return o
}

func (o KafkaTopicStatusConditionsArrayOutput) ToKafkaTopicStatusConditionsArrayOutputWithContext(ctx context.Context) KafkaTopicStatusConditionsArrayOutput {
	return o
}

func (o KafkaTopicStatusConditionsArrayOutput) Index(i pulumi.IntInput) KafkaTopicStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaTopicStatusConditions {
		return vs[0].([]KafkaTopicStatusConditions)[vs[1].(int)]
	}).(KafkaTopicStatusConditionsOutput)
}

type KafkaTopicStatusConditionsPatch struct {
	// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about the condition's last transition.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition (a single word in CamelCase).
	Reason *string `pulumi:"reason"`
	// The status of the condition, either True, False or Unknown.
	Status *string `pulumi:"status"`
	// The unique identifier of a condition, used to distinguish between other conditions in the resource.
	Type *string `pulumi:"type"`
}

// KafkaTopicStatusConditionsPatchInput is an input type that accepts KafkaTopicStatusConditionsPatchArgs and KafkaTopicStatusConditionsPatchOutput values.
// You can construct a concrete instance of `KafkaTopicStatusConditionsPatchInput` via:
//
//	KafkaTopicStatusConditionsPatchArgs{...}
type KafkaTopicStatusConditionsPatchInput interface {
	pulumi.Input

	ToKafkaTopicStatusConditionsPatchOutput() KafkaTopicStatusConditionsPatchOutput
	ToKafkaTopicStatusConditionsPatchOutputWithContext(context.Context) KafkaTopicStatusConditionsPatchOutput
}

type KafkaTopicStatusConditionsPatchArgs struct {
	// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about the condition's last transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition (a single word in CamelCase).
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// The status of the condition, either True, False or Unknown.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The unique identifier of a condition, used to distinguish between other conditions in the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaTopicStatusConditionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicStatusConditionsPatch)(nil)).Elem()
}

func (i KafkaTopicStatusConditionsPatchArgs) ToKafkaTopicStatusConditionsPatchOutput() KafkaTopicStatusConditionsPatchOutput {
	return i.ToKafkaTopicStatusConditionsPatchOutputWithContext(context.Background())
}

func (i KafkaTopicStatusConditionsPatchArgs) ToKafkaTopicStatusConditionsPatchOutputWithContext(ctx context.Context) KafkaTopicStatusConditionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicStatusConditionsPatchOutput)
}

// KafkaTopicStatusConditionsPatchArrayInput is an input type that accepts KafkaTopicStatusConditionsPatchArray and KafkaTopicStatusConditionsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaTopicStatusConditionsPatchArrayInput` via:
//
//	KafkaTopicStatusConditionsPatchArray{ KafkaTopicStatusConditionsPatchArgs{...} }
type KafkaTopicStatusConditionsPatchArrayInput interface {
	pulumi.Input

	ToKafkaTopicStatusConditionsPatchArrayOutput() KafkaTopicStatusConditionsPatchArrayOutput
	ToKafkaTopicStatusConditionsPatchArrayOutputWithContext(context.Context) KafkaTopicStatusConditionsPatchArrayOutput
}

type KafkaTopicStatusConditionsPatchArray []KafkaTopicStatusConditionsPatchInput

func (KafkaTopicStatusConditionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaTopicStatusConditionsPatch)(nil)).Elem()
}

func (i KafkaTopicStatusConditionsPatchArray) ToKafkaTopicStatusConditionsPatchArrayOutput() KafkaTopicStatusConditionsPatchArrayOutput {
	return i.ToKafkaTopicStatusConditionsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaTopicStatusConditionsPatchArray) ToKafkaTopicStatusConditionsPatchArrayOutputWithContext(ctx context.Context) KafkaTopicStatusConditionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicStatusConditionsPatchArrayOutput)
}

type KafkaTopicStatusConditionsPatchOutput struct{ *pulumi.OutputState }

func (KafkaTopicStatusConditionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicStatusConditionsPatch)(nil)).Elem()
}

func (o KafkaTopicStatusConditionsPatchOutput) ToKafkaTopicStatusConditionsPatchOutput() KafkaTopicStatusConditionsPatchOutput {
	return o
}

func (o KafkaTopicStatusConditionsPatchOutput) ToKafkaTopicStatusConditionsPatchOutputWithContext(ctx context.Context) KafkaTopicStatusConditionsPatchOutput {
	return o
}

// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
func (o KafkaTopicStatusConditionsPatchOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatusConditionsPatch) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// Human-readable message indicating details about the condition's last transition.
func (o KafkaTopicStatusConditionsPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatusConditionsPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition (a single word in CamelCase).
func (o KafkaTopicStatusConditionsPatchOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatusConditionsPatch) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// The status of the condition, either True, False or Unknown.
func (o KafkaTopicStatusConditionsPatchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatusConditionsPatch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The unique identifier of a condition, used to distinguish between other conditions in the resource.
func (o KafkaTopicStatusConditionsPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatusConditionsPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaTopicStatusConditionsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaTopicStatusConditionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaTopicStatusConditionsPatch)(nil)).Elem()
}

func (o KafkaTopicStatusConditionsPatchArrayOutput) ToKafkaTopicStatusConditionsPatchArrayOutput() KafkaTopicStatusConditionsPatchArrayOutput {
	return o
}

func (o KafkaTopicStatusConditionsPatchArrayOutput) ToKafkaTopicStatusConditionsPatchArrayOutputWithContext(ctx context.Context) KafkaTopicStatusConditionsPatchArrayOutput {
	return o
}

func (o KafkaTopicStatusConditionsPatchArrayOutput) Index(i pulumi.IntInput) KafkaTopicStatusConditionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaTopicStatusConditionsPatch {
		return vs[0].([]KafkaTopicStatusConditionsPatch)[vs[1].(int)]
	}).(KafkaTopicStatusConditionsPatchOutput)
}

// The status of the topic.
type KafkaTopicStatusPatch struct {
	// List of status conditions.
	Conditions []KafkaTopicStatusConditionsPatch `pulumi:"conditions"`
	// The generation of the CRD that was last reconciled by the operator.
	ObservedGeneration *int                                 `pulumi:"observedGeneration"`
	ReplicasChange     *KafkaTopicStatusReplicasChangePatch `pulumi:"replicasChange"`
	// The topic's id. For a KafkaTopic with the ready condition, this will change only if the topic gets deleted and recreated with the same name.
	TopicId *string `pulumi:"topicId"`
	// Topic name.
	TopicName *string `pulumi:"topicName"`
}

// KafkaTopicStatusPatchInput is an input type that accepts KafkaTopicStatusPatchArgs and KafkaTopicStatusPatchOutput values.
// You can construct a concrete instance of `KafkaTopicStatusPatchInput` via:
//
//	KafkaTopicStatusPatchArgs{...}
type KafkaTopicStatusPatchInput interface {
	pulumi.Input

	ToKafkaTopicStatusPatchOutput() KafkaTopicStatusPatchOutput
	ToKafkaTopicStatusPatchOutputWithContext(context.Context) KafkaTopicStatusPatchOutput
}

// The status of the topic.
type KafkaTopicStatusPatchArgs struct {
	// List of status conditions.
	Conditions KafkaTopicStatusConditionsPatchArrayInput `pulumi:"conditions"`
	// The generation of the CRD that was last reconciled by the operator.
	ObservedGeneration pulumi.IntPtrInput                          `pulumi:"observedGeneration"`
	ReplicasChange     KafkaTopicStatusReplicasChangePatchPtrInput `pulumi:"replicasChange"`
	// The topic's id. For a KafkaTopic with the ready condition, this will change only if the topic gets deleted and recreated with the same name.
	TopicId pulumi.StringPtrInput `pulumi:"topicId"`
	// Topic name.
	TopicName pulumi.StringPtrInput `pulumi:"topicName"`
}

func (KafkaTopicStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicStatusPatch)(nil)).Elem()
}

func (i KafkaTopicStatusPatchArgs) ToKafkaTopicStatusPatchOutput() KafkaTopicStatusPatchOutput {
	return i.ToKafkaTopicStatusPatchOutputWithContext(context.Background())
}

func (i KafkaTopicStatusPatchArgs) ToKafkaTopicStatusPatchOutputWithContext(ctx context.Context) KafkaTopicStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicStatusPatchOutput)
}

func (i KafkaTopicStatusPatchArgs) ToKafkaTopicStatusPatchPtrOutput() KafkaTopicStatusPatchPtrOutput {
	return i.ToKafkaTopicStatusPatchPtrOutputWithContext(context.Background())
}

func (i KafkaTopicStatusPatchArgs) ToKafkaTopicStatusPatchPtrOutputWithContext(ctx context.Context) KafkaTopicStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicStatusPatchOutput).ToKafkaTopicStatusPatchPtrOutputWithContext(ctx)
}

// KafkaTopicStatusPatchPtrInput is an input type that accepts KafkaTopicStatusPatchArgs, KafkaTopicStatusPatchPtr and KafkaTopicStatusPatchPtrOutput values.
// You can construct a concrete instance of `KafkaTopicStatusPatchPtrInput` via:
//
//	        KafkaTopicStatusPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaTopicStatusPatchPtrInput interface {
	pulumi.Input

	ToKafkaTopicStatusPatchPtrOutput() KafkaTopicStatusPatchPtrOutput
	ToKafkaTopicStatusPatchPtrOutputWithContext(context.Context) KafkaTopicStatusPatchPtrOutput
}

type kafkaTopicStatusPatchPtrType KafkaTopicStatusPatchArgs

func KafkaTopicStatusPatchPtr(v *KafkaTopicStatusPatchArgs) KafkaTopicStatusPatchPtrInput {
	return (*kafkaTopicStatusPatchPtrType)(v)
}

func (*kafkaTopicStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicStatusPatch)(nil)).Elem()
}

func (i *kafkaTopicStatusPatchPtrType) ToKafkaTopicStatusPatchPtrOutput() KafkaTopicStatusPatchPtrOutput {
	return i.ToKafkaTopicStatusPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaTopicStatusPatchPtrType) ToKafkaTopicStatusPatchPtrOutputWithContext(ctx context.Context) KafkaTopicStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicStatusPatchPtrOutput)
}

// The status of the topic.
type KafkaTopicStatusPatchOutput struct{ *pulumi.OutputState }

func (KafkaTopicStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicStatusPatch)(nil)).Elem()
}

func (o KafkaTopicStatusPatchOutput) ToKafkaTopicStatusPatchOutput() KafkaTopicStatusPatchOutput {
	return o
}

func (o KafkaTopicStatusPatchOutput) ToKafkaTopicStatusPatchOutputWithContext(ctx context.Context) KafkaTopicStatusPatchOutput {
	return o
}

func (o KafkaTopicStatusPatchOutput) ToKafkaTopicStatusPatchPtrOutput() KafkaTopicStatusPatchPtrOutput {
	return o.ToKafkaTopicStatusPatchPtrOutputWithContext(context.Background())
}

func (o KafkaTopicStatusPatchOutput) ToKafkaTopicStatusPatchPtrOutputWithContext(ctx context.Context) KafkaTopicStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaTopicStatusPatch) *KafkaTopicStatusPatch {
		return &v
	}).(KafkaTopicStatusPatchPtrOutput)
}

// List of status conditions.
func (o KafkaTopicStatusPatchOutput) Conditions() KafkaTopicStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v KafkaTopicStatusPatch) []KafkaTopicStatusConditionsPatch { return v.Conditions }).(KafkaTopicStatusConditionsPatchArrayOutput)
}

// The generation of the CRD that was last reconciled by the operator.
func (o KafkaTopicStatusPatchOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatusPatch) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

func (o KafkaTopicStatusPatchOutput) ReplicasChange() KafkaTopicStatusReplicasChangePatchPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatusPatch) *KafkaTopicStatusReplicasChangePatch { return v.ReplicasChange }).(KafkaTopicStatusReplicasChangePatchPtrOutput)
}

// The topic's id. For a KafkaTopic with the ready condition, this will change only if the topic gets deleted and recreated with the same name.
func (o KafkaTopicStatusPatchOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatusPatch) *string { return v.TopicId }).(pulumi.StringPtrOutput)
}

// Topic name.
func (o KafkaTopicStatusPatchOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatusPatch) *string { return v.TopicName }).(pulumi.StringPtrOutput)
}

type KafkaTopicStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaTopicStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicStatusPatch)(nil)).Elem()
}

func (o KafkaTopicStatusPatchPtrOutput) ToKafkaTopicStatusPatchPtrOutput() KafkaTopicStatusPatchPtrOutput {
	return o
}

func (o KafkaTopicStatusPatchPtrOutput) ToKafkaTopicStatusPatchPtrOutputWithContext(ctx context.Context) KafkaTopicStatusPatchPtrOutput {
	return o
}

func (o KafkaTopicStatusPatchPtrOutput) Elem() KafkaTopicStatusPatchOutput {
	return o.ApplyT(func(v *KafkaTopicStatusPatch) KafkaTopicStatusPatch {
		if v != nil {
			return *v
		}
		var ret KafkaTopicStatusPatch
		return ret
	}).(KafkaTopicStatusPatchOutput)
}

// List of status conditions.
func (o KafkaTopicStatusPatchPtrOutput) Conditions() KafkaTopicStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaTopicStatusPatch) []KafkaTopicStatusConditionsPatch {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(KafkaTopicStatusConditionsPatchArrayOutput)
}

// The generation of the CRD that was last reconciled by the operator.
func (o KafkaTopicStatusPatchPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaTopicStatusPatch) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

func (o KafkaTopicStatusPatchPtrOutput) ReplicasChange() KafkaTopicStatusReplicasChangePatchPtrOutput {
	return o.ApplyT(func(v *KafkaTopicStatusPatch) *KafkaTopicStatusReplicasChangePatch {
		if v == nil {
			return nil
		}
		return v.ReplicasChange
	}).(KafkaTopicStatusReplicasChangePatchPtrOutput)
}

// The topic's id. For a KafkaTopic with the ready condition, this will change only if the topic gets deleted and recreated with the same name.
func (o KafkaTopicStatusPatchPtrOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.TopicId
	}).(pulumi.StringPtrOutput)
}

// Topic name.
func (o KafkaTopicStatusPatchPtrOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.TopicName
	}).(pulumi.StringPtrOutput)
}

// Replication factor change status.
type KafkaTopicStatusReplicasChange struct {
	// Message for the user related to the replicas change request. This may contain transient error messages that would disappear on periodic reconciliations.
	Message *string `pulumi:"message"`
	// The session identifier for replicas change requests pertaining to this KafkaTopic resource. This is used by the Topic Operator to track the status of `ongoing` replicas change operations.
	SessionId *string `pulumi:"sessionId"`
	// Current state of the replicas change operation. This can be `pending`, when the change has been requested, or `ongoing`, when the change has been successfully submitted to Cruise Control.
	State *string `pulumi:"state"`
	// The target replicas value requested by the user. This may be different from .spec.replicas when a change is ongoing.
	TargetReplicas *int `pulumi:"targetReplicas"`
}

// KafkaTopicStatusReplicasChangeInput is an input type that accepts KafkaTopicStatusReplicasChangeArgs and KafkaTopicStatusReplicasChangeOutput values.
// You can construct a concrete instance of `KafkaTopicStatusReplicasChangeInput` via:
//
//	KafkaTopicStatusReplicasChangeArgs{...}
type KafkaTopicStatusReplicasChangeInput interface {
	pulumi.Input

	ToKafkaTopicStatusReplicasChangeOutput() KafkaTopicStatusReplicasChangeOutput
	ToKafkaTopicStatusReplicasChangeOutputWithContext(context.Context) KafkaTopicStatusReplicasChangeOutput
}

// Replication factor change status.
type KafkaTopicStatusReplicasChangeArgs struct {
	// Message for the user related to the replicas change request. This may contain transient error messages that would disappear on periodic reconciliations.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The session identifier for replicas change requests pertaining to this KafkaTopic resource. This is used by the Topic Operator to track the status of `ongoing` replicas change operations.
	SessionId pulumi.StringPtrInput `pulumi:"sessionId"`
	// Current state of the replicas change operation. This can be `pending`, when the change has been requested, or `ongoing`, when the change has been successfully submitted to Cruise Control.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The target replicas value requested by the user. This may be different from .spec.replicas when a change is ongoing.
	TargetReplicas pulumi.IntPtrInput `pulumi:"targetReplicas"`
}

func (KafkaTopicStatusReplicasChangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicStatusReplicasChange)(nil)).Elem()
}

func (i KafkaTopicStatusReplicasChangeArgs) ToKafkaTopicStatusReplicasChangeOutput() KafkaTopicStatusReplicasChangeOutput {
	return i.ToKafkaTopicStatusReplicasChangeOutputWithContext(context.Background())
}

func (i KafkaTopicStatusReplicasChangeArgs) ToKafkaTopicStatusReplicasChangeOutputWithContext(ctx context.Context) KafkaTopicStatusReplicasChangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicStatusReplicasChangeOutput)
}

func (i KafkaTopicStatusReplicasChangeArgs) ToKafkaTopicStatusReplicasChangePtrOutput() KafkaTopicStatusReplicasChangePtrOutput {
	return i.ToKafkaTopicStatusReplicasChangePtrOutputWithContext(context.Background())
}

func (i KafkaTopicStatusReplicasChangeArgs) ToKafkaTopicStatusReplicasChangePtrOutputWithContext(ctx context.Context) KafkaTopicStatusReplicasChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicStatusReplicasChangeOutput).ToKafkaTopicStatusReplicasChangePtrOutputWithContext(ctx)
}

// KafkaTopicStatusReplicasChangePtrInput is an input type that accepts KafkaTopicStatusReplicasChangeArgs, KafkaTopicStatusReplicasChangePtr and KafkaTopicStatusReplicasChangePtrOutput values.
// You can construct a concrete instance of `KafkaTopicStatusReplicasChangePtrInput` via:
//
//	        KafkaTopicStatusReplicasChangeArgs{...}
//
//	or:
//
//	        nil
type KafkaTopicStatusReplicasChangePtrInput interface {
	pulumi.Input

	ToKafkaTopicStatusReplicasChangePtrOutput() KafkaTopicStatusReplicasChangePtrOutput
	ToKafkaTopicStatusReplicasChangePtrOutputWithContext(context.Context) KafkaTopicStatusReplicasChangePtrOutput
}

type kafkaTopicStatusReplicasChangePtrType KafkaTopicStatusReplicasChangeArgs

func KafkaTopicStatusReplicasChangePtr(v *KafkaTopicStatusReplicasChangeArgs) KafkaTopicStatusReplicasChangePtrInput {
	return (*kafkaTopicStatusReplicasChangePtrType)(v)
}

func (*kafkaTopicStatusReplicasChangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicStatusReplicasChange)(nil)).Elem()
}

func (i *kafkaTopicStatusReplicasChangePtrType) ToKafkaTopicStatusReplicasChangePtrOutput() KafkaTopicStatusReplicasChangePtrOutput {
	return i.ToKafkaTopicStatusReplicasChangePtrOutputWithContext(context.Background())
}

func (i *kafkaTopicStatusReplicasChangePtrType) ToKafkaTopicStatusReplicasChangePtrOutputWithContext(ctx context.Context) KafkaTopicStatusReplicasChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicStatusReplicasChangePtrOutput)
}

// Replication factor change status.
type KafkaTopicStatusReplicasChangeOutput struct{ *pulumi.OutputState }

func (KafkaTopicStatusReplicasChangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicStatusReplicasChange)(nil)).Elem()
}

func (o KafkaTopicStatusReplicasChangeOutput) ToKafkaTopicStatusReplicasChangeOutput() KafkaTopicStatusReplicasChangeOutput {
	return o
}

func (o KafkaTopicStatusReplicasChangeOutput) ToKafkaTopicStatusReplicasChangeOutputWithContext(ctx context.Context) KafkaTopicStatusReplicasChangeOutput {
	return o
}

func (o KafkaTopicStatusReplicasChangeOutput) ToKafkaTopicStatusReplicasChangePtrOutput() KafkaTopicStatusReplicasChangePtrOutput {
	return o.ToKafkaTopicStatusReplicasChangePtrOutputWithContext(context.Background())
}

func (o KafkaTopicStatusReplicasChangeOutput) ToKafkaTopicStatusReplicasChangePtrOutputWithContext(ctx context.Context) KafkaTopicStatusReplicasChangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaTopicStatusReplicasChange) *KafkaTopicStatusReplicasChange {
		return &v
	}).(KafkaTopicStatusReplicasChangePtrOutput)
}

// Message for the user related to the replicas change request. This may contain transient error messages that would disappear on periodic reconciliations.
func (o KafkaTopicStatusReplicasChangeOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatusReplicasChange) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The session identifier for replicas change requests pertaining to this KafkaTopic resource. This is used by the Topic Operator to track the status of `ongoing` replicas change operations.
func (o KafkaTopicStatusReplicasChangeOutput) SessionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatusReplicasChange) *string { return v.SessionId }).(pulumi.StringPtrOutput)
}

// Current state of the replicas change operation. This can be `pending`, when the change has been requested, or `ongoing`, when the change has been successfully submitted to Cruise Control.
func (o KafkaTopicStatusReplicasChangeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatusReplicasChange) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The target replicas value requested by the user. This may be different from .spec.replicas when a change is ongoing.
func (o KafkaTopicStatusReplicasChangeOutput) TargetReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatusReplicasChange) *int { return v.TargetReplicas }).(pulumi.IntPtrOutput)
}

type KafkaTopicStatusReplicasChangePtrOutput struct{ *pulumi.OutputState }

func (KafkaTopicStatusReplicasChangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicStatusReplicasChange)(nil)).Elem()
}

func (o KafkaTopicStatusReplicasChangePtrOutput) ToKafkaTopicStatusReplicasChangePtrOutput() KafkaTopicStatusReplicasChangePtrOutput {
	return o
}

func (o KafkaTopicStatusReplicasChangePtrOutput) ToKafkaTopicStatusReplicasChangePtrOutputWithContext(ctx context.Context) KafkaTopicStatusReplicasChangePtrOutput {
	return o
}

func (o KafkaTopicStatusReplicasChangePtrOutput) Elem() KafkaTopicStatusReplicasChangeOutput {
	return o.ApplyT(func(v *KafkaTopicStatusReplicasChange) KafkaTopicStatusReplicasChange {
		if v != nil {
			return *v
		}
		var ret KafkaTopicStatusReplicasChange
		return ret
	}).(KafkaTopicStatusReplicasChangeOutput)
}

// Message for the user related to the replicas change request. This may contain transient error messages that would disappear on periodic reconciliations.
func (o KafkaTopicStatusReplicasChangePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicStatusReplicasChange) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// The session identifier for replicas change requests pertaining to this KafkaTopic resource. This is used by the Topic Operator to track the status of `ongoing` replicas change operations.
func (o KafkaTopicStatusReplicasChangePtrOutput) SessionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicStatusReplicasChange) *string {
		if v == nil {
			return nil
		}
		return v.SessionId
	}).(pulumi.StringPtrOutput)
}

// Current state of the replicas change operation. This can be `pending`, when the change has been requested, or `ongoing`, when the change has been successfully submitted to Cruise Control.
func (o KafkaTopicStatusReplicasChangePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicStatusReplicasChange) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// The target replicas value requested by the user. This may be different from .spec.replicas when a change is ongoing.
func (o KafkaTopicStatusReplicasChangePtrOutput) TargetReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaTopicStatusReplicasChange) *int {
		if v == nil {
			return nil
		}
		return v.TargetReplicas
	}).(pulumi.IntPtrOutput)
}

// Replication factor change status.
type KafkaTopicStatusReplicasChangePatch struct {
	// Message for the user related to the replicas change request. This may contain transient error messages that would disappear on periodic reconciliations.
	Message *string `pulumi:"message"`
	// The session identifier for replicas change requests pertaining to this KafkaTopic resource. This is used by the Topic Operator to track the status of `ongoing` replicas change operations.
	SessionId *string `pulumi:"sessionId"`
	// Current state of the replicas change operation. This can be `pending`, when the change has been requested, or `ongoing`, when the change has been successfully submitted to Cruise Control.
	State *string `pulumi:"state"`
	// The target replicas value requested by the user. This may be different from .spec.replicas when a change is ongoing.
	TargetReplicas *int `pulumi:"targetReplicas"`
}

// KafkaTopicStatusReplicasChangePatchInput is an input type that accepts KafkaTopicStatusReplicasChangePatchArgs and KafkaTopicStatusReplicasChangePatchOutput values.
// You can construct a concrete instance of `KafkaTopicStatusReplicasChangePatchInput` via:
//
//	KafkaTopicStatusReplicasChangePatchArgs{...}
type KafkaTopicStatusReplicasChangePatchInput interface {
	pulumi.Input

	ToKafkaTopicStatusReplicasChangePatchOutput() KafkaTopicStatusReplicasChangePatchOutput
	ToKafkaTopicStatusReplicasChangePatchOutputWithContext(context.Context) KafkaTopicStatusReplicasChangePatchOutput
}

// Replication factor change status.
type KafkaTopicStatusReplicasChangePatchArgs struct {
	// Message for the user related to the replicas change request. This may contain transient error messages that would disappear on periodic reconciliations.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The session identifier for replicas change requests pertaining to this KafkaTopic resource. This is used by the Topic Operator to track the status of `ongoing` replicas change operations.
	SessionId pulumi.StringPtrInput `pulumi:"sessionId"`
	// Current state of the replicas change operation. This can be `pending`, when the change has been requested, or `ongoing`, when the change has been successfully submitted to Cruise Control.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The target replicas value requested by the user. This may be different from .spec.replicas when a change is ongoing.
	TargetReplicas pulumi.IntPtrInput `pulumi:"targetReplicas"`
}

func (KafkaTopicStatusReplicasChangePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicStatusReplicasChangePatch)(nil)).Elem()
}

func (i KafkaTopicStatusReplicasChangePatchArgs) ToKafkaTopicStatusReplicasChangePatchOutput() KafkaTopicStatusReplicasChangePatchOutput {
	return i.ToKafkaTopicStatusReplicasChangePatchOutputWithContext(context.Background())
}

func (i KafkaTopicStatusReplicasChangePatchArgs) ToKafkaTopicStatusReplicasChangePatchOutputWithContext(ctx context.Context) KafkaTopicStatusReplicasChangePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicStatusReplicasChangePatchOutput)
}

func (i KafkaTopicStatusReplicasChangePatchArgs) ToKafkaTopicStatusReplicasChangePatchPtrOutput() KafkaTopicStatusReplicasChangePatchPtrOutput {
	return i.ToKafkaTopicStatusReplicasChangePatchPtrOutputWithContext(context.Background())
}

func (i KafkaTopicStatusReplicasChangePatchArgs) ToKafkaTopicStatusReplicasChangePatchPtrOutputWithContext(ctx context.Context) KafkaTopicStatusReplicasChangePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicStatusReplicasChangePatchOutput).ToKafkaTopicStatusReplicasChangePatchPtrOutputWithContext(ctx)
}

// KafkaTopicStatusReplicasChangePatchPtrInput is an input type that accepts KafkaTopicStatusReplicasChangePatchArgs, KafkaTopicStatusReplicasChangePatchPtr and KafkaTopicStatusReplicasChangePatchPtrOutput values.
// You can construct a concrete instance of `KafkaTopicStatusReplicasChangePatchPtrInput` via:
//
//	        KafkaTopicStatusReplicasChangePatchArgs{...}
//
//	or:
//
//	        nil
type KafkaTopicStatusReplicasChangePatchPtrInput interface {
	pulumi.Input

	ToKafkaTopicStatusReplicasChangePatchPtrOutput() KafkaTopicStatusReplicasChangePatchPtrOutput
	ToKafkaTopicStatusReplicasChangePatchPtrOutputWithContext(context.Context) KafkaTopicStatusReplicasChangePatchPtrOutput
}

type kafkaTopicStatusReplicasChangePatchPtrType KafkaTopicStatusReplicasChangePatchArgs

func KafkaTopicStatusReplicasChangePatchPtr(v *KafkaTopicStatusReplicasChangePatchArgs) KafkaTopicStatusReplicasChangePatchPtrInput {
	return (*kafkaTopicStatusReplicasChangePatchPtrType)(v)
}

func (*kafkaTopicStatusReplicasChangePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicStatusReplicasChangePatch)(nil)).Elem()
}

func (i *kafkaTopicStatusReplicasChangePatchPtrType) ToKafkaTopicStatusReplicasChangePatchPtrOutput() KafkaTopicStatusReplicasChangePatchPtrOutput {
	return i.ToKafkaTopicStatusReplicasChangePatchPtrOutputWithContext(context.Background())
}

func (i *kafkaTopicStatusReplicasChangePatchPtrType) ToKafkaTopicStatusReplicasChangePatchPtrOutputWithContext(ctx context.Context) KafkaTopicStatusReplicasChangePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicStatusReplicasChangePatchPtrOutput)
}

// Replication factor change status.
type KafkaTopicStatusReplicasChangePatchOutput struct{ *pulumi.OutputState }

func (KafkaTopicStatusReplicasChangePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicStatusReplicasChangePatch)(nil)).Elem()
}

func (o KafkaTopicStatusReplicasChangePatchOutput) ToKafkaTopicStatusReplicasChangePatchOutput() KafkaTopicStatusReplicasChangePatchOutput {
	return o
}

func (o KafkaTopicStatusReplicasChangePatchOutput) ToKafkaTopicStatusReplicasChangePatchOutputWithContext(ctx context.Context) KafkaTopicStatusReplicasChangePatchOutput {
	return o
}

func (o KafkaTopicStatusReplicasChangePatchOutput) ToKafkaTopicStatusReplicasChangePatchPtrOutput() KafkaTopicStatusReplicasChangePatchPtrOutput {
	return o.ToKafkaTopicStatusReplicasChangePatchPtrOutputWithContext(context.Background())
}

func (o KafkaTopicStatusReplicasChangePatchOutput) ToKafkaTopicStatusReplicasChangePatchPtrOutputWithContext(ctx context.Context) KafkaTopicStatusReplicasChangePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaTopicStatusReplicasChangePatch) *KafkaTopicStatusReplicasChangePatch {
		return &v
	}).(KafkaTopicStatusReplicasChangePatchPtrOutput)
}

// Message for the user related to the replicas change request. This may contain transient error messages that would disappear on periodic reconciliations.
func (o KafkaTopicStatusReplicasChangePatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatusReplicasChangePatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The session identifier for replicas change requests pertaining to this KafkaTopic resource. This is used by the Topic Operator to track the status of `ongoing` replicas change operations.
func (o KafkaTopicStatusReplicasChangePatchOutput) SessionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatusReplicasChangePatch) *string { return v.SessionId }).(pulumi.StringPtrOutput)
}

// Current state of the replicas change operation. This can be `pending`, when the change has been requested, or `ongoing`, when the change has been successfully submitted to Cruise Control.
func (o KafkaTopicStatusReplicasChangePatchOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatusReplicasChangePatch) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The target replicas value requested by the user. This may be different from .spec.replicas when a change is ongoing.
func (o KafkaTopicStatusReplicasChangePatchOutput) TargetReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaTopicStatusReplicasChangePatch) *int { return v.TargetReplicas }).(pulumi.IntPtrOutput)
}

type KafkaTopicStatusReplicasChangePatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaTopicStatusReplicasChangePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicStatusReplicasChangePatch)(nil)).Elem()
}

func (o KafkaTopicStatusReplicasChangePatchPtrOutput) ToKafkaTopicStatusReplicasChangePatchPtrOutput() KafkaTopicStatusReplicasChangePatchPtrOutput {
	return o
}

func (o KafkaTopicStatusReplicasChangePatchPtrOutput) ToKafkaTopicStatusReplicasChangePatchPtrOutputWithContext(ctx context.Context) KafkaTopicStatusReplicasChangePatchPtrOutput {
	return o
}

func (o KafkaTopicStatusReplicasChangePatchPtrOutput) Elem() KafkaTopicStatusReplicasChangePatchOutput {
	return o.ApplyT(func(v *KafkaTopicStatusReplicasChangePatch) KafkaTopicStatusReplicasChangePatch {
		if v != nil {
			return *v
		}
		var ret KafkaTopicStatusReplicasChangePatch
		return ret
	}).(KafkaTopicStatusReplicasChangePatchOutput)
}

// Message for the user related to the replicas change request. This may contain transient error messages that would disappear on periodic reconciliations.
func (o KafkaTopicStatusReplicasChangePatchPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicStatusReplicasChangePatch) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// The session identifier for replicas change requests pertaining to this KafkaTopic resource. This is used by the Topic Operator to track the status of `ongoing` replicas change operations.
func (o KafkaTopicStatusReplicasChangePatchPtrOutput) SessionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicStatusReplicasChangePatch) *string {
		if v == nil {
			return nil
		}
		return v.SessionId
	}).(pulumi.StringPtrOutput)
}

// Current state of the replicas change operation. This can be `pending`, when the change has been requested, or `ongoing`, when the change has been successfully submitted to Cruise Control.
func (o KafkaTopicStatusReplicasChangePatchPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicStatusReplicasChangePatch) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// The target replicas value requested by the user. This may be different from .spec.replicas when a change is ongoing.
func (o KafkaTopicStatusReplicasChangePatchPtrOutput) TargetReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaTopicStatusReplicasChangePatch) *int {
		if v == nil {
			return nil
		}
		return v.TargetReplicas
	}).(pulumi.IntPtrOutput)
}

type KafkaUserType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *KafkaUserSpec     `pulumi:"spec"`
	Status   *KafkaUserStatus   `pulumi:"status"`
}

// KafkaUserTypeInput is an input type that accepts KafkaUserTypeArgs and KafkaUserTypeOutput values.
// You can construct a concrete instance of `KafkaUserTypeInput` via:
//
//	KafkaUserTypeArgs{...}
type KafkaUserTypeInput interface {
	pulumi.Input

	ToKafkaUserTypeOutput() KafkaUserTypeOutput
	ToKafkaUserTypeOutputWithContext(context.Context) KafkaUserTypeOutput
}

type KafkaUserTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec     KafkaUserSpecPtrInput     `pulumi:"spec"`
	Status   KafkaUserStatusPtrInput   `pulumi:"status"`
}

func (KafkaUserTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserType)(nil)).Elem()
}

func (i KafkaUserTypeArgs) ToKafkaUserTypeOutput() KafkaUserTypeOutput {
	return i.ToKafkaUserTypeOutputWithContext(context.Background())
}

func (i KafkaUserTypeArgs) ToKafkaUserTypeOutputWithContext(ctx context.Context) KafkaUserTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserTypeOutput)
}

// KafkaUserTypeArrayInput is an input type that accepts KafkaUserTypeArray and KafkaUserTypeArrayOutput values.
// You can construct a concrete instance of `KafkaUserTypeArrayInput` via:
//
//	KafkaUserTypeArray{ KafkaUserTypeArgs{...} }
type KafkaUserTypeArrayInput interface {
	pulumi.Input

	ToKafkaUserTypeArrayOutput() KafkaUserTypeArrayOutput
	ToKafkaUserTypeArrayOutputWithContext(context.Context) KafkaUserTypeArrayOutput
}

type KafkaUserTypeArray []KafkaUserTypeInput

func (KafkaUserTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaUserType)(nil)).Elem()
}

func (i KafkaUserTypeArray) ToKafkaUserTypeArrayOutput() KafkaUserTypeArrayOutput {
	return i.ToKafkaUserTypeArrayOutputWithContext(context.Background())
}

func (i KafkaUserTypeArray) ToKafkaUserTypeArrayOutputWithContext(ctx context.Context) KafkaUserTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserTypeArrayOutput)
}

type KafkaUserTypeOutput struct{ *pulumi.OutputState }

func (KafkaUserTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserType)(nil)).Elem()
}

func (o KafkaUserTypeOutput) ToKafkaUserTypeOutput() KafkaUserTypeOutput {
	return o
}

func (o KafkaUserTypeOutput) ToKafkaUserTypeOutputWithContext(ctx context.Context) KafkaUserTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o KafkaUserTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o KafkaUserTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o KafkaUserTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v KafkaUserType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o KafkaUserTypeOutput) Spec() KafkaUserSpecPtrOutput {
	return o.ApplyT(func(v KafkaUserType) *KafkaUserSpec { return v.Spec }).(KafkaUserSpecPtrOutput)
}

func (o KafkaUserTypeOutput) Status() KafkaUserStatusPtrOutput {
	return o.ApplyT(func(v KafkaUserType) *KafkaUserStatus { return v.Status }).(KafkaUserStatusPtrOutput)
}

type KafkaUserTypeArrayOutput struct{ *pulumi.OutputState }

func (KafkaUserTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaUserType)(nil)).Elem()
}

func (o KafkaUserTypeArrayOutput) ToKafkaUserTypeArrayOutput() KafkaUserTypeArrayOutput {
	return o
}

func (o KafkaUserTypeArrayOutput) ToKafkaUserTypeArrayOutputWithContext(ctx context.Context) KafkaUserTypeArrayOutput {
	return o
}

func (o KafkaUserTypeArrayOutput) Index(i pulumi.IntInput) KafkaUserTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaUserType {
		return vs[0].([]KafkaUserType)[vs[1].(int)]
	}).(KafkaUserTypeOutput)
}

// KafkaUserList is a list of KafkaUser
type KafkaUserListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of kafkausers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []KafkaUserType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// KafkaUserListTypeInput is an input type that accepts KafkaUserListTypeArgs and KafkaUserListTypeOutput values.
// You can construct a concrete instance of `KafkaUserListTypeInput` via:
//
//	KafkaUserListTypeArgs{...}
type KafkaUserListTypeInput interface {
	pulumi.Input

	ToKafkaUserListTypeOutput() KafkaUserListTypeOutput
	ToKafkaUserListTypeOutputWithContext(context.Context) KafkaUserListTypeOutput
}

// KafkaUserList is a list of KafkaUser
type KafkaUserListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of kafkausers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items KafkaUserTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (KafkaUserListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserListType)(nil)).Elem()
}

func (i KafkaUserListTypeArgs) ToKafkaUserListTypeOutput() KafkaUserListTypeOutput {
	return i.ToKafkaUserListTypeOutputWithContext(context.Background())
}

func (i KafkaUserListTypeArgs) ToKafkaUserListTypeOutputWithContext(ctx context.Context) KafkaUserListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserListTypeOutput)
}

// KafkaUserList is a list of KafkaUser
type KafkaUserListTypeOutput struct{ *pulumi.OutputState }

func (KafkaUserListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserListType)(nil)).Elem()
}

func (o KafkaUserListTypeOutput) ToKafkaUserListTypeOutput() KafkaUserListTypeOutput {
	return o
}

func (o KafkaUserListTypeOutput) ToKafkaUserListTypeOutputWithContext(ctx context.Context) KafkaUserListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o KafkaUserListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of kafkausers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o KafkaUserListTypeOutput) Items() KafkaUserTypeArrayOutput {
	return o.ApplyT(func(v KafkaUserListType) []KafkaUserType { return v.Items }).(KafkaUserTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o KafkaUserListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o KafkaUserListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v KafkaUserListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

type KafkaUserPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *KafkaUserSpecPatch     `pulumi:"spec"`
	Status   *KafkaUserStatusPatch   `pulumi:"status"`
}

// KafkaUserPatchTypeInput is an input type that accepts KafkaUserPatchTypeArgs and KafkaUserPatchTypeOutput values.
// You can construct a concrete instance of `KafkaUserPatchTypeInput` via:
//
//	KafkaUserPatchTypeArgs{...}
type KafkaUserPatchTypeInput interface {
	pulumi.Input

	ToKafkaUserPatchTypeOutput() KafkaUserPatchTypeOutput
	ToKafkaUserPatchTypeOutputWithContext(context.Context) KafkaUserPatchTypeOutput
}

type KafkaUserPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
	Spec     KafkaUserSpecPatchPtrInput     `pulumi:"spec"`
	Status   KafkaUserStatusPatchPtrInput   `pulumi:"status"`
}

func (KafkaUserPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserPatchType)(nil)).Elem()
}

func (i KafkaUserPatchTypeArgs) ToKafkaUserPatchTypeOutput() KafkaUserPatchTypeOutput {
	return i.ToKafkaUserPatchTypeOutputWithContext(context.Background())
}

func (i KafkaUserPatchTypeArgs) ToKafkaUserPatchTypeOutputWithContext(ctx context.Context) KafkaUserPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserPatchTypeOutput)
}

type KafkaUserPatchTypeOutput struct{ *pulumi.OutputState }

func (KafkaUserPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserPatchType)(nil)).Elem()
}

func (o KafkaUserPatchTypeOutput) ToKafkaUserPatchTypeOutput() KafkaUserPatchTypeOutput {
	return o
}

func (o KafkaUserPatchTypeOutput) ToKafkaUserPatchTypeOutputWithContext(ctx context.Context) KafkaUserPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o KafkaUserPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o KafkaUserPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o KafkaUserPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v KafkaUserPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o KafkaUserPatchTypeOutput) Spec() KafkaUserSpecPatchPtrOutput {
	return o.ApplyT(func(v KafkaUserPatchType) *KafkaUserSpecPatch { return v.Spec }).(KafkaUserSpecPatchPtrOutput)
}

func (o KafkaUserPatchTypeOutput) Status() KafkaUserStatusPatchPtrOutput {
	return o.ApplyT(func(v KafkaUserPatchType) *KafkaUserStatusPatch { return v.Status }).(KafkaUserStatusPatchPtrOutput)
}

// The specification of the user.
type KafkaUserSpec struct {
	Authentication *KafkaUserSpecAuthentication `pulumi:"authentication"`
	Authorization  *KafkaUserSpecAuthorization  `pulumi:"authorization"`
	Quotas         *KafkaUserSpecQuotas         `pulumi:"quotas"`
	Template       *KafkaUserSpecTemplate       `pulumi:"template"`
}

// KafkaUserSpecInput is an input type that accepts KafkaUserSpecArgs and KafkaUserSpecOutput values.
// You can construct a concrete instance of `KafkaUserSpecInput` via:
//
//	KafkaUserSpecArgs{...}
type KafkaUserSpecInput interface {
	pulumi.Input

	ToKafkaUserSpecOutput() KafkaUserSpecOutput
	ToKafkaUserSpecOutputWithContext(context.Context) KafkaUserSpecOutput
}

// The specification of the user.
type KafkaUserSpecArgs struct {
	Authentication KafkaUserSpecAuthenticationPtrInput `pulumi:"authentication"`
	Authorization  KafkaUserSpecAuthorizationPtrInput  `pulumi:"authorization"`
	Quotas         KafkaUserSpecQuotasPtrInput         `pulumi:"quotas"`
	Template       KafkaUserSpecTemplatePtrInput       `pulumi:"template"`
}

func (KafkaUserSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpec)(nil)).Elem()
}

func (i KafkaUserSpecArgs) ToKafkaUserSpecOutput() KafkaUserSpecOutput {
	return i.ToKafkaUserSpecOutputWithContext(context.Background())
}

func (i KafkaUserSpecArgs) ToKafkaUserSpecOutputWithContext(ctx context.Context) KafkaUserSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecOutput)
}

func (i KafkaUserSpecArgs) ToKafkaUserSpecPtrOutput() KafkaUserSpecPtrOutput {
	return i.ToKafkaUserSpecPtrOutputWithContext(context.Background())
}

func (i KafkaUserSpecArgs) ToKafkaUserSpecPtrOutputWithContext(ctx context.Context) KafkaUserSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecOutput).ToKafkaUserSpecPtrOutputWithContext(ctx)
}

// KafkaUserSpecPtrInput is an input type that accepts KafkaUserSpecArgs, KafkaUserSpecPtr and KafkaUserSpecPtrOutput values.
// You can construct a concrete instance of `KafkaUserSpecPtrInput` via:
//
//	        KafkaUserSpecArgs{...}
//
//	or:
//
//	        nil
type KafkaUserSpecPtrInput interface {
	pulumi.Input

	ToKafkaUserSpecPtrOutput() KafkaUserSpecPtrOutput
	ToKafkaUserSpecPtrOutputWithContext(context.Context) KafkaUserSpecPtrOutput
}

type kafkaUserSpecPtrType KafkaUserSpecArgs

func KafkaUserSpecPtr(v *KafkaUserSpecArgs) KafkaUserSpecPtrInput {
	return (*kafkaUserSpecPtrType)(v)
}

func (*kafkaUserSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpec)(nil)).Elem()
}

func (i *kafkaUserSpecPtrType) ToKafkaUserSpecPtrOutput() KafkaUserSpecPtrOutput {
	return i.ToKafkaUserSpecPtrOutputWithContext(context.Background())
}

func (i *kafkaUserSpecPtrType) ToKafkaUserSpecPtrOutputWithContext(ctx context.Context) KafkaUserSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecPtrOutput)
}

// The specification of the user.
type KafkaUserSpecOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpec)(nil)).Elem()
}

func (o KafkaUserSpecOutput) ToKafkaUserSpecOutput() KafkaUserSpecOutput {
	return o
}

func (o KafkaUserSpecOutput) ToKafkaUserSpecOutputWithContext(ctx context.Context) KafkaUserSpecOutput {
	return o
}

func (o KafkaUserSpecOutput) ToKafkaUserSpecPtrOutput() KafkaUserSpecPtrOutput {
	return o.ToKafkaUserSpecPtrOutputWithContext(context.Background())
}

func (o KafkaUserSpecOutput) ToKafkaUserSpecPtrOutputWithContext(ctx context.Context) KafkaUserSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserSpec) *KafkaUserSpec {
		return &v
	}).(KafkaUserSpecPtrOutput)
}

func (o KafkaUserSpecOutput) Authentication() KafkaUserSpecAuthenticationPtrOutput {
	return o.ApplyT(func(v KafkaUserSpec) *KafkaUserSpecAuthentication { return v.Authentication }).(KafkaUserSpecAuthenticationPtrOutput)
}

func (o KafkaUserSpecOutput) Authorization() KafkaUserSpecAuthorizationPtrOutput {
	return o.ApplyT(func(v KafkaUserSpec) *KafkaUserSpecAuthorization { return v.Authorization }).(KafkaUserSpecAuthorizationPtrOutput)
}

func (o KafkaUserSpecOutput) Quotas() KafkaUserSpecQuotasPtrOutput {
	return o.ApplyT(func(v KafkaUserSpec) *KafkaUserSpecQuotas { return v.Quotas }).(KafkaUserSpecQuotasPtrOutput)
}

func (o KafkaUserSpecOutput) Template() KafkaUserSpecTemplatePtrOutput {
	return o.ApplyT(func(v KafkaUserSpec) *KafkaUserSpecTemplate { return v.Template }).(KafkaUserSpecTemplatePtrOutput)
}

type KafkaUserSpecPtrOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpec)(nil)).Elem()
}

func (o KafkaUserSpecPtrOutput) ToKafkaUserSpecPtrOutput() KafkaUserSpecPtrOutput {
	return o
}

func (o KafkaUserSpecPtrOutput) ToKafkaUserSpecPtrOutputWithContext(ctx context.Context) KafkaUserSpecPtrOutput {
	return o
}

func (o KafkaUserSpecPtrOutput) Elem() KafkaUserSpecOutput {
	return o.ApplyT(func(v *KafkaUserSpec) KafkaUserSpec {
		if v != nil {
			return *v
		}
		var ret KafkaUserSpec
		return ret
	}).(KafkaUserSpecOutput)
}

func (o KafkaUserSpecPtrOutput) Authentication() KafkaUserSpecAuthenticationPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpec) *KafkaUserSpecAuthentication {
		if v == nil {
			return nil
		}
		return v.Authentication
	}).(KafkaUserSpecAuthenticationPtrOutput)
}

func (o KafkaUserSpecPtrOutput) Authorization() KafkaUserSpecAuthorizationPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpec) *KafkaUserSpecAuthorization {
		if v == nil {
			return nil
		}
		return v.Authorization
	}).(KafkaUserSpecAuthorizationPtrOutput)
}

func (o KafkaUserSpecPtrOutput) Quotas() KafkaUserSpecQuotasPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpec) *KafkaUserSpecQuotas {
		if v == nil {
			return nil
		}
		return v.Quotas
	}).(KafkaUserSpecQuotasPtrOutput)
}

func (o KafkaUserSpecPtrOutput) Template() KafkaUserSpecTemplatePtrOutput {
	return o.ApplyT(func(v *KafkaUserSpec) *KafkaUserSpecTemplate {
		if v == nil {
			return nil
		}
		return v.Template
	}).(KafkaUserSpecTemplatePtrOutput)
}

// Authentication mechanism enabled for this Kafka user. The supported authentication mechanisms are `scram-sha-512`, `tls`, and `tls-external`.
//
//   - `scram-sha-512` generates a secret with SASL SCRAM-SHA-512 credentials.
//   - `tls` generates a secret with user certificate for mutual TLS authentication.
//   - `tls-external` does not generate a user certificate.   But prepares the user for using mutual TLS authentication using a user certificate generated outside the User Operator.
//     ACLs and quotas set for this user are configured in the `CN=<username>` format.
//
// Authentication is optional. If authentication is not configured, no credentials are generated. ACLs and quotas set for the user are configured in the `<username>` format suitable for SASL authentication.
type KafkaUserSpecAuthentication struct {
	Password *KafkaUserSpecAuthenticationPassword `pulumi:"password"`
	// Authentication type.
	Type *string `pulumi:"type"`
}

// KafkaUserSpecAuthenticationInput is an input type that accepts KafkaUserSpecAuthenticationArgs and KafkaUserSpecAuthenticationOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthenticationInput` via:
//
//	KafkaUserSpecAuthenticationArgs{...}
type KafkaUserSpecAuthenticationInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthenticationOutput() KafkaUserSpecAuthenticationOutput
	ToKafkaUserSpecAuthenticationOutputWithContext(context.Context) KafkaUserSpecAuthenticationOutput
}

// Authentication mechanism enabled for this Kafka user. The supported authentication mechanisms are `scram-sha-512`, `tls`, and `tls-external`.
//
//   - `scram-sha-512` generates a secret with SASL SCRAM-SHA-512 credentials.
//   - `tls` generates a secret with user certificate for mutual TLS authentication.
//   - `tls-external` does not generate a user certificate.   But prepares the user for using mutual TLS authentication using a user certificate generated outside the User Operator.
//     ACLs and quotas set for this user are configured in the `CN=<username>` format.
//
// Authentication is optional. If authentication is not configured, no credentials are generated. ACLs and quotas set for the user are configured in the `<username>` format suitable for SASL authentication.
type KafkaUserSpecAuthenticationArgs struct {
	Password KafkaUserSpecAuthenticationPasswordPtrInput `pulumi:"password"`
	// Authentication type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaUserSpecAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthentication)(nil)).Elem()
}

func (i KafkaUserSpecAuthenticationArgs) ToKafkaUserSpecAuthenticationOutput() KafkaUserSpecAuthenticationOutput {
	return i.ToKafkaUserSpecAuthenticationOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthenticationArgs) ToKafkaUserSpecAuthenticationOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationOutput)
}

func (i KafkaUserSpecAuthenticationArgs) ToKafkaUserSpecAuthenticationPtrOutput() KafkaUserSpecAuthenticationPtrOutput {
	return i.ToKafkaUserSpecAuthenticationPtrOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthenticationArgs) ToKafkaUserSpecAuthenticationPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationOutput).ToKafkaUserSpecAuthenticationPtrOutputWithContext(ctx)
}

// KafkaUserSpecAuthenticationPtrInput is an input type that accepts KafkaUserSpecAuthenticationArgs, KafkaUserSpecAuthenticationPtr and KafkaUserSpecAuthenticationPtrOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthenticationPtrInput` via:
//
//	        KafkaUserSpecAuthenticationArgs{...}
//
//	or:
//
//	        nil
type KafkaUserSpecAuthenticationPtrInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthenticationPtrOutput() KafkaUserSpecAuthenticationPtrOutput
	ToKafkaUserSpecAuthenticationPtrOutputWithContext(context.Context) KafkaUserSpecAuthenticationPtrOutput
}

type kafkaUserSpecAuthenticationPtrType KafkaUserSpecAuthenticationArgs

func KafkaUserSpecAuthenticationPtr(v *KafkaUserSpecAuthenticationArgs) KafkaUserSpecAuthenticationPtrInput {
	return (*kafkaUserSpecAuthenticationPtrType)(v)
}

func (*kafkaUserSpecAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthentication)(nil)).Elem()
}

func (i *kafkaUserSpecAuthenticationPtrType) ToKafkaUserSpecAuthenticationPtrOutput() KafkaUserSpecAuthenticationPtrOutput {
	return i.ToKafkaUserSpecAuthenticationPtrOutputWithContext(context.Background())
}

func (i *kafkaUserSpecAuthenticationPtrType) ToKafkaUserSpecAuthenticationPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationPtrOutput)
}

// Authentication mechanism enabled for this Kafka user. The supported authentication mechanisms are `scram-sha-512`, `tls`, and `tls-external`.
//
//   - `scram-sha-512` generates a secret with SASL SCRAM-SHA-512 credentials.
//   - `tls` generates a secret with user certificate for mutual TLS authentication.
//   - `tls-external` does not generate a user certificate.   But prepares the user for using mutual TLS authentication using a user certificate generated outside the User Operator.
//     ACLs and quotas set for this user are configured in the `CN=<username>` format.
//
// Authentication is optional. If authentication is not configured, no credentials are generated. ACLs and quotas set for the user are configured in the `<username>` format suitable for SASL authentication.
type KafkaUserSpecAuthenticationOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthentication)(nil)).Elem()
}

func (o KafkaUserSpecAuthenticationOutput) ToKafkaUserSpecAuthenticationOutput() KafkaUserSpecAuthenticationOutput {
	return o
}

func (o KafkaUserSpecAuthenticationOutput) ToKafkaUserSpecAuthenticationOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationOutput {
	return o
}

func (o KafkaUserSpecAuthenticationOutput) ToKafkaUserSpecAuthenticationPtrOutput() KafkaUserSpecAuthenticationPtrOutput {
	return o.ToKafkaUserSpecAuthenticationPtrOutputWithContext(context.Background())
}

func (o KafkaUserSpecAuthenticationOutput) ToKafkaUserSpecAuthenticationPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserSpecAuthentication) *KafkaUserSpecAuthentication {
		return &v
	}).(KafkaUserSpecAuthenticationPtrOutput)
}

func (o KafkaUserSpecAuthenticationOutput) Password() KafkaUserSpecAuthenticationPasswordPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthentication) *KafkaUserSpecAuthenticationPassword { return v.Password }).(KafkaUserSpecAuthenticationPasswordPtrOutput)
}

// Authentication type.
func (o KafkaUserSpecAuthenticationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthentication) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaUserSpecAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthentication)(nil)).Elem()
}

func (o KafkaUserSpecAuthenticationPtrOutput) ToKafkaUserSpecAuthenticationPtrOutput() KafkaUserSpecAuthenticationPtrOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPtrOutput) ToKafkaUserSpecAuthenticationPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPtrOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPtrOutput) Elem() KafkaUserSpecAuthenticationOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthentication) KafkaUserSpecAuthentication {
		if v != nil {
			return *v
		}
		var ret KafkaUserSpecAuthentication
		return ret
	}).(KafkaUserSpecAuthenticationOutput)
}

func (o KafkaUserSpecAuthenticationPtrOutput) Password() KafkaUserSpecAuthenticationPasswordPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthentication) *KafkaUserSpecAuthenticationPassword {
		if v == nil {
			return nil
		}
		return v.Password
	}).(KafkaUserSpecAuthenticationPasswordPtrOutput)
}

// Authentication type.
func (o KafkaUserSpecAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Specify the password for the user. If not set, a new password is generated by the User Operator.
type KafkaUserSpecAuthenticationPassword struct {
	ValueFrom *KafkaUserSpecAuthenticationPasswordValueFrom `pulumi:"valueFrom"`
}

// KafkaUserSpecAuthenticationPasswordInput is an input type that accepts KafkaUserSpecAuthenticationPasswordArgs and KafkaUserSpecAuthenticationPasswordOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthenticationPasswordInput` via:
//
//	KafkaUserSpecAuthenticationPasswordArgs{...}
type KafkaUserSpecAuthenticationPasswordInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthenticationPasswordOutput() KafkaUserSpecAuthenticationPasswordOutput
	ToKafkaUserSpecAuthenticationPasswordOutputWithContext(context.Context) KafkaUserSpecAuthenticationPasswordOutput
}

// Specify the password for the user. If not set, a new password is generated by the User Operator.
type KafkaUserSpecAuthenticationPasswordArgs struct {
	ValueFrom KafkaUserSpecAuthenticationPasswordValueFromPtrInput `pulumi:"valueFrom"`
}

func (KafkaUserSpecAuthenticationPasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthenticationPassword)(nil)).Elem()
}

func (i KafkaUserSpecAuthenticationPasswordArgs) ToKafkaUserSpecAuthenticationPasswordOutput() KafkaUserSpecAuthenticationPasswordOutput {
	return i.ToKafkaUserSpecAuthenticationPasswordOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthenticationPasswordArgs) ToKafkaUserSpecAuthenticationPasswordOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationPasswordOutput)
}

func (i KafkaUserSpecAuthenticationPasswordArgs) ToKafkaUserSpecAuthenticationPasswordPtrOutput() KafkaUserSpecAuthenticationPasswordPtrOutput {
	return i.ToKafkaUserSpecAuthenticationPasswordPtrOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthenticationPasswordArgs) ToKafkaUserSpecAuthenticationPasswordPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationPasswordOutput).ToKafkaUserSpecAuthenticationPasswordPtrOutputWithContext(ctx)
}

// KafkaUserSpecAuthenticationPasswordPtrInput is an input type that accepts KafkaUserSpecAuthenticationPasswordArgs, KafkaUserSpecAuthenticationPasswordPtr and KafkaUserSpecAuthenticationPasswordPtrOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthenticationPasswordPtrInput` via:
//
//	        KafkaUserSpecAuthenticationPasswordArgs{...}
//
//	or:
//
//	        nil
type KafkaUserSpecAuthenticationPasswordPtrInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthenticationPasswordPtrOutput() KafkaUserSpecAuthenticationPasswordPtrOutput
	ToKafkaUserSpecAuthenticationPasswordPtrOutputWithContext(context.Context) KafkaUserSpecAuthenticationPasswordPtrOutput
}

type kafkaUserSpecAuthenticationPasswordPtrType KafkaUserSpecAuthenticationPasswordArgs

func KafkaUserSpecAuthenticationPasswordPtr(v *KafkaUserSpecAuthenticationPasswordArgs) KafkaUserSpecAuthenticationPasswordPtrInput {
	return (*kafkaUserSpecAuthenticationPasswordPtrType)(v)
}

func (*kafkaUserSpecAuthenticationPasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthenticationPassword)(nil)).Elem()
}

func (i *kafkaUserSpecAuthenticationPasswordPtrType) ToKafkaUserSpecAuthenticationPasswordPtrOutput() KafkaUserSpecAuthenticationPasswordPtrOutput {
	return i.ToKafkaUserSpecAuthenticationPasswordPtrOutputWithContext(context.Background())
}

func (i *kafkaUserSpecAuthenticationPasswordPtrType) ToKafkaUserSpecAuthenticationPasswordPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationPasswordPtrOutput)
}

// Specify the password for the user. If not set, a new password is generated by the User Operator.
type KafkaUserSpecAuthenticationPasswordOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthenticationPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthenticationPassword)(nil)).Elem()
}

func (o KafkaUserSpecAuthenticationPasswordOutput) ToKafkaUserSpecAuthenticationPasswordOutput() KafkaUserSpecAuthenticationPasswordOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordOutput) ToKafkaUserSpecAuthenticationPasswordOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordOutput) ToKafkaUserSpecAuthenticationPasswordPtrOutput() KafkaUserSpecAuthenticationPasswordPtrOutput {
	return o.ToKafkaUserSpecAuthenticationPasswordPtrOutputWithContext(context.Background())
}

func (o KafkaUserSpecAuthenticationPasswordOutput) ToKafkaUserSpecAuthenticationPasswordPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserSpecAuthenticationPassword) *KafkaUserSpecAuthenticationPassword {
		return &v
	}).(KafkaUserSpecAuthenticationPasswordPtrOutput)
}

func (o KafkaUserSpecAuthenticationPasswordOutput) ValueFrom() KafkaUserSpecAuthenticationPasswordValueFromPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthenticationPassword) *KafkaUserSpecAuthenticationPasswordValueFrom {
		return v.ValueFrom
	}).(KafkaUserSpecAuthenticationPasswordValueFromPtrOutput)
}

type KafkaUserSpecAuthenticationPasswordPtrOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthenticationPasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthenticationPassword)(nil)).Elem()
}

func (o KafkaUserSpecAuthenticationPasswordPtrOutput) ToKafkaUserSpecAuthenticationPasswordPtrOutput() KafkaUserSpecAuthenticationPasswordPtrOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordPtrOutput) ToKafkaUserSpecAuthenticationPasswordPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordPtrOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordPtrOutput) Elem() KafkaUserSpecAuthenticationPasswordOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthenticationPassword) KafkaUserSpecAuthenticationPassword {
		if v != nil {
			return *v
		}
		var ret KafkaUserSpecAuthenticationPassword
		return ret
	}).(KafkaUserSpecAuthenticationPasswordOutput)
}

func (o KafkaUserSpecAuthenticationPasswordPtrOutput) ValueFrom() KafkaUserSpecAuthenticationPasswordValueFromPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthenticationPassword) *KafkaUserSpecAuthenticationPasswordValueFrom {
		if v == nil {
			return nil
		}
		return v.ValueFrom
	}).(KafkaUserSpecAuthenticationPasswordValueFromPtrOutput)
}

// Specify the password for the user. If not set, a new password is generated by the User Operator.
type KafkaUserSpecAuthenticationPasswordPatch struct {
	ValueFrom *KafkaUserSpecAuthenticationPasswordValueFromPatch `pulumi:"valueFrom"`
}

// KafkaUserSpecAuthenticationPasswordPatchInput is an input type that accepts KafkaUserSpecAuthenticationPasswordPatchArgs and KafkaUserSpecAuthenticationPasswordPatchOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthenticationPasswordPatchInput` via:
//
//	KafkaUserSpecAuthenticationPasswordPatchArgs{...}
type KafkaUserSpecAuthenticationPasswordPatchInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthenticationPasswordPatchOutput() KafkaUserSpecAuthenticationPasswordPatchOutput
	ToKafkaUserSpecAuthenticationPasswordPatchOutputWithContext(context.Context) KafkaUserSpecAuthenticationPasswordPatchOutput
}

// Specify the password for the user. If not set, a new password is generated by the User Operator.
type KafkaUserSpecAuthenticationPasswordPatchArgs struct {
	ValueFrom KafkaUserSpecAuthenticationPasswordValueFromPatchPtrInput `pulumi:"valueFrom"`
}

func (KafkaUserSpecAuthenticationPasswordPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthenticationPasswordPatch)(nil)).Elem()
}

func (i KafkaUserSpecAuthenticationPasswordPatchArgs) ToKafkaUserSpecAuthenticationPasswordPatchOutput() KafkaUserSpecAuthenticationPasswordPatchOutput {
	return i.ToKafkaUserSpecAuthenticationPasswordPatchOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthenticationPasswordPatchArgs) ToKafkaUserSpecAuthenticationPasswordPatchOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationPasswordPatchOutput)
}

func (i KafkaUserSpecAuthenticationPasswordPatchArgs) ToKafkaUserSpecAuthenticationPasswordPatchPtrOutput() KafkaUserSpecAuthenticationPasswordPatchPtrOutput {
	return i.ToKafkaUserSpecAuthenticationPasswordPatchPtrOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthenticationPasswordPatchArgs) ToKafkaUserSpecAuthenticationPasswordPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationPasswordPatchOutput).ToKafkaUserSpecAuthenticationPasswordPatchPtrOutputWithContext(ctx)
}

// KafkaUserSpecAuthenticationPasswordPatchPtrInput is an input type that accepts KafkaUserSpecAuthenticationPasswordPatchArgs, KafkaUserSpecAuthenticationPasswordPatchPtr and KafkaUserSpecAuthenticationPasswordPatchPtrOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthenticationPasswordPatchPtrInput` via:
//
//	        KafkaUserSpecAuthenticationPasswordPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaUserSpecAuthenticationPasswordPatchPtrInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthenticationPasswordPatchPtrOutput() KafkaUserSpecAuthenticationPasswordPatchPtrOutput
	ToKafkaUserSpecAuthenticationPasswordPatchPtrOutputWithContext(context.Context) KafkaUserSpecAuthenticationPasswordPatchPtrOutput
}

type kafkaUserSpecAuthenticationPasswordPatchPtrType KafkaUserSpecAuthenticationPasswordPatchArgs

func KafkaUserSpecAuthenticationPasswordPatchPtr(v *KafkaUserSpecAuthenticationPasswordPatchArgs) KafkaUserSpecAuthenticationPasswordPatchPtrInput {
	return (*kafkaUserSpecAuthenticationPasswordPatchPtrType)(v)
}

func (*kafkaUserSpecAuthenticationPasswordPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthenticationPasswordPatch)(nil)).Elem()
}

func (i *kafkaUserSpecAuthenticationPasswordPatchPtrType) ToKafkaUserSpecAuthenticationPasswordPatchPtrOutput() KafkaUserSpecAuthenticationPasswordPatchPtrOutput {
	return i.ToKafkaUserSpecAuthenticationPasswordPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaUserSpecAuthenticationPasswordPatchPtrType) ToKafkaUserSpecAuthenticationPasswordPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationPasswordPatchPtrOutput)
}

// Specify the password for the user. If not set, a new password is generated by the User Operator.
type KafkaUserSpecAuthenticationPasswordPatchOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthenticationPasswordPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthenticationPasswordPatch)(nil)).Elem()
}

func (o KafkaUserSpecAuthenticationPasswordPatchOutput) ToKafkaUserSpecAuthenticationPasswordPatchOutput() KafkaUserSpecAuthenticationPasswordPatchOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordPatchOutput) ToKafkaUserSpecAuthenticationPasswordPatchOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordPatchOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordPatchOutput) ToKafkaUserSpecAuthenticationPasswordPatchPtrOutput() KafkaUserSpecAuthenticationPasswordPatchPtrOutput {
	return o.ToKafkaUserSpecAuthenticationPasswordPatchPtrOutputWithContext(context.Background())
}

func (o KafkaUserSpecAuthenticationPasswordPatchOutput) ToKafkaUserSpecAuthenticationPasswordPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserSpecAuthenticationPasswordPatch) *KafkaUserSpecAuthenticationPasswordPatch {
		return &v
	}).(KafkaUserSpecAuthenticationPasswordPatchPtrOutput)
}

func (o KafkaUserSpecAuthenticationPasswordPatchOutput) ValueFrom() KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthenticationPasswordPatch) *KafkaUserSpecAuthenticationPasswordValueFromPatch {
		return v.ValueFrom
	}).(KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput)
}

type KafkaUserSpecAuthenticationPasswordPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthenticationPasswordPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthenticationPasswordPatch)(nil)).Elem()
}

func (o KafkaUserSpecAuthenticationPasswordPatchPtrOutput) ToKafkaUserSpecAuthenticationPasswordPatchPtrOutput() KafkaUserSpecAuthenticationPasswordPatchPtrOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordPatchPtrOutput) ToKafkaUserSpecAuthenticationPasswordPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordPatchPtrOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordPatchPtrOutput) Elem() KafkaUserSpecAuthenticationPasswordPatchOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthenticationPasswordPatch) KafkaUserSpecAuthenticationPasswordPatch {
		if v != nil {
			return *v
		}
		var ret KafkaUserSpecAuthenticationPasswordPatch
		return ret
	}).(KafkaUserSpecAuthenticationPasswordPatchOutput)
}

func (o KafkaUserSpecAuthenticationPasswordPatchPtrOutput) ValueFrom() KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthenticationPasswordPatch) *KafkaUserSpecAuthenticationPasswordValueFromPatch {
		if v == nil {
			return nil
		}
		return v.ValueFrom
	}).(KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput)
}

// Secret from which the password should be read.
type KafkaUserSpecAuthenticationPasswordValueFrom struct {
	SecretKeyRef *KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRef `pulumi:"secretKeyRef"`
}

// KafkaUserSpecAuthenticationPasswordValueFromInput is an input type that accepts KafkaUserSpecAuthenticationPasswordValueFromArgs and KafkaUserSpecAuthenticationPasswordValueFromOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthenticationPasswordValueFromInput` via:
//
//	KafkaUserSpecAuthenticationPasswordValueFromArgs{...}
type KafkaUserSpecAuthenticationPasswordValueFromInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthenticationPasswordValueFromOutput() KafkaUserSpecAuthenticationPasswordValueFromOutput
	ToKafkaUserSpecAuthenticationPasswordValueFromOutputWithContext(context.Context) KafkaUserSpecAuthenticationPasswordValueFromOutput
}

// Secret from which the password should be read.
type KafkaUserSpecAuthenticationPasswordValueFromArgs struct {
	SecretKeyRef KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrInput `pulumi:"secretKeyRef"`
}

func (KafkaUserSpecAuthenticationPasswordValueFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthenticationPasswordValueFrom)(nil)).Elem()
}

func (i KafkaUserSpecAuthenticationPasswordValueFromArgs) ToKafkaUserSpecAuthenticationPasswordValueFromOutput() KafkaUserSpecAuthenticationPasswordValueFromOutput {
	return i.ToKafkaUserSpecAuthenticationPasswordValueFromOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthenticationPasswordValueFromArgs) ToKafkaUserSpecAuthenticationPasswordValueFromOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationPasswordValueFromOutput)
}

func (i KafkaUserSpecAuthenticationPasswordValueFromArgs) ToKafkaUserSpecAuthenticationPasswordValueFromPtrOutput() KafkaUserSpecAuthenticationPasswordValueFromPtrOutput {
	return i.ToKafkaUserSpecAuthenticationPasswordValueFromPtrOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthenticationPasswordValueFromArgs) ToKafkaUserSpecAuthenticationPasswordValueFromPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationPasswordValueFromOutput).ToKafkaUserSpecAuthenticationPasswordValueFromPtrOutputWithContext(ctx)
}

// KafkaUserSpecAuthenticationPasswordValueFromPtrInput is an input type that accepts KafkaUserSpecAuthenticationPasswordValueFromArgs, KafkaUserSpecAuthenticationPasswordValueFromPtr and KafkaUserSpecAuthenticationPasswordValueFromPtrOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthenticationPasswordValueFromPtrInput` via:
//
//	        KafkaUserSpecAuthenticationPasswordValueFromArgs{...}
//
//	or:
//
//	        nil
type KafkaUserSpecAuthenticationPasswordValueFromPtrInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthenticationPasswordValueFromPtrOutput() KafkaUserSpecAuthenticationPasswordValueFromPtrOutput
	ToKafkaUserSpecAuthenticationPasswordValueFromPtrOutputWithContext(context.Context) KafkaUserSpecAuthenticationPasswordValueFromPtrOutput
}

type kafkaUserSpecAuthenticationPasswordValueFromPtrType KafkaUserSpecAuthenticationPasswordValueFromArgs

func KafkaUserSpecAuthenticationPasswordValueFromPtr(v *KafkaUserSpecAuthenticationPasswordValueFromArgs) KafkaUserSpecAuthenticationPasswordValueFromPtrInput {
	return (*kafkaUserSpecAuthenticationPasswordValueFromPtrType)(v)
}

func (*kafkaUserSpecAuthenticationPasswordValueFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthenticationPasswordValueFrom)(nil)).Elem()
}

func (i *kafkaUserSpecAuthenticationPasswordValueFromPtrType) ToKafkaUserSpecAuthenticationPasswordValueFromPtrOutput() KafkaUserSpecAuthenticationPasswordValueFromPtrOutput {
	return i.ToKafkaUserSpecAuthenticationPasswordValueFromPtrOutputWithContext(context.Background())
}

func (i *kafkaUserSpecAuthenticationPasswordValueFromPtrType) ToKafkaUserSpecAuthenticationPasswordValueFromPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationPasswordValueFromPtrOutput)
}

// Secret from which the password should be read.
type KafkaUserSpecAuthenticationPasswordValueFromOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthenticationPasswordValueFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthenticationPasswordValueFrom)(nil)).Elem()
}

func (o KafkaUserSpecAuthenticationPasswordValueFromOutput) ToKafkaUserSpecAuthenticationPasswordValueFromOutput() KafkaUserSpecAuthenticationPasswordValueFromOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordValueFromOutput) ToKafkaUserSpecAuthenticationPasswordValueFromOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordValueFromOutput) ToKafkaUserSpecAuthenticationPasswordValueFromPtrOutput() KafkaUserSpecAuthenticationPasswordValueFromPtrOutput {
	return o.ToKafkaUserSpecAuthenticationPasswordValueFromPtrOutputWithContext(context.Background())
}

func (o KafkaUserSpecAuthenticationPasswordValueFromOutput) ToKafkaUserSpecAuthenticationPasswordValueFromPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserSpecAuthenticationPasswordValueFrom) *KafkaUserSpecAuthenticationPasswordValueFrom {
		return &v
	}).(KafkaUserSpecAuthenticationPasswordValueFromPtrOutput)
}

func (o KafkaUserSpecAuthenticationPasswordValueFromOutput) SecretKeyRef() KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthenticationPasswordValueFrom) *KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRef {
		return v.SecretKeyRef
	}).(KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput)
}

type KafkaUserSpecAuthenticationPasswordValueFromPtrOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthenticationPasswordValueFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthenticationPasswordValueFrom)(nil)).Elem()
}

func (o KafkaUserSpecAuthenticationPasswordValueFromPtrOutput) ToKafkaUserSpecAuthenticationPasswordValueFromPtrOutput() KafkaUserSpecAuthenticationPasswordValueFromPtrOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordValueFromPtrOutput) ToKafkaUserSpecAuthenticationPasswordValueFromPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromPtrOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordValueFromPtrOutput) Elem() KafkaUserSpecAuthenticationPasswordValueFromOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthenticationPasswordValueFrom) KafkaUserSpecAuthenticationPasswordValueFrom {
		if v != nil {
			return *v
		}
		var ret KafkaUserSpecAuthenticationPasswordValueFrom
		return ret
	}).(KafkaUserSpecAuthenticationPasswordValueFromOutput)
}

func (o KafkaUserSpecAuthenticationPasswordValueFromPtrOutput) SecretKeyRef() KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthenticationPasswordValueFrom) *KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRef {
		if v == nil {
			return nil
		}
		return v.SecretKeyRef
	}).(KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput)
}

// Secret from which the password should be read.
type KafkaUserSpecAuthenticationPasswordValueFromPatch struct {
	SecretKeyRef *KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatch `pulumi:"secretKeyRef"`
}

// KafkaUserSpecAuthenticationPasswordValueFromPatchInput is an input type that accepts KafkaUserSpecAuthenticationPasswordValueFromPatchArgs and KafkaUserSpecAuthenticationPasswordValueFromPatchOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthenticationPasswordValueFromPatchInput` via:
//
//	KafkaUserSpecAuthenticationPasswordValueFromPatchArgs{...}
type KafkaUserSpecAuthenticationPasswordValueFromPatchInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthenticationPasswordValueFromPatchOutput() KafkaUserSpecAuthenticationPasswordValueFromPatchOutput
	ToKafkaUserSpecAuthenticationPasswordValueFromPatchOutputWithContext(context.Context) KafkaUserSpecAuthenticationPasswordValueFromPatchOutput
}

// Secret from which the password should be read.
type KafkaUserSpecAuthenticationPasswordValueFromPatchArgs struct {
	SecretKeyRef KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrInput `pulumi:"secretKeyRef"`
}

func (KafkaUserSpecAuthenticationPasswordValueFromPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthenticationPasswordValueFromPatch)(nil)).Elem()
}

func (i KafkaUserSpecAuthenticationPasswordValueFromPatchArgs) ToKafkaUserSpecAuthenticationPasswordValueFromPatchOutput() KafkaUserSpecAuthenticationPasswordValueFromPatchOutput {
	return i.ToKafkaUserSpecAuthenticationPasswordValueFromPatchOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthenticationPasswordValueFromPatchArgs) ToKafkaUserSpecAuthenticationPasswordValueFromPatchOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationPasswordValueFromPatchOutput)
}

func (i KafkaUserSpecAuthenticationPasswordValueFromPatchArgs) ToKafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput() KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput {
	return i.ToKafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthenticationPasswordValueFromPatchArgs) ToKafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationPasswordValueFromPatchOutput).ToKafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutputWithContext(ctx)
}

// KafkaUserSpecAuthenticationPasswordValueFromPatchPtrInput is an input type that accepts KafkaUserSpecAuthenticationPasswordValueFromPatchArgs, KafkaUserSpecAuthenticationPasswordValueFromPatchPtr and KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthenticationPasswordValueFromPatchPtrInput` via:
//
//	        KafkaUserSpecAuthenticationPasswordValueFromPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaUserSpecAuthenticationPasswordValueFromPatchPtrInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput() KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput
	ToKafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutputWithContext(context.Context) KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput
}

type kafkaUserSpecAuthenticationPasswordValueFromPatchPtrType KafkaUserSpecAuthenticationPasswordValueFromPatchArgs

func KafkaUserSpecAuthenticationPasswordValueFromPatchPtr(v *KafkaUserSpecAuthenticationPasswordValueFromPatchArgs) KafkaUserSpecAuthenticationPasswordValueFromPatchPtrInput {
	return (*kafkaUserSpecAuthenticationPasswordValueFromPatchPtrType)(v)
}

func (*kafkaUserSpecAuthenticationPasswordValueFromPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthenticationPasswordValueFromPatch)(nil)).Elem()
}

func (i *kafkaUserSpecAuthenticationPasswordValueFromPatchPtrType) ToKafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput() KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput {
	return i.ToKafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaUserSpecAuthenticationPasswordValueFromPatchPtrType) ToKafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput)
}

// Secret from which the password should be read.
type KafkaUserSpecAuthenticationPasswordValueFromPatchOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthenticationPasswordValueFromPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthenticationPasswordValueFromPatch)(nil)).Elem()
}

func (o KafkaUserSpecAuthenticationPasswordValueFromPatchOutput) ToKafkaUserSpecAuthenticationPasswordValueFromPatchOutput() KafkaUserSpecAuthenticationPasswordValueFromPatchOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordValueFromPatchOutput) ToKafkaUserSpecAuthenticationPasswordValueFromPatchOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromPatchOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordValueFromPatchOutput) ToKafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput() KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput {
	return o.ToKafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutputWithContext(context.Background())
}

func (o KafkaUserSpecAuthenticationPasswordValueFromPatchOutput) ToKafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserSpecAuthenticationPasswordValueFromPatch) *KafkaUserSpecAuthenticationPasswordValueFromPatch {
		return &v
	}).(KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput)
}

func (o KafkaUserSpecAuthenticationPasswordValueFromPatchOutput) SecretKeyRef() KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthenticationPasswordValueFromPatch) *KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatch {
		return v.SecretKeyRef
	}).(KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput)
}

type KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthenticationPasswordValueFromPatch)(nil)).Elem()
}

func (o KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput) ToKafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput() KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput) ToKafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput) Elem() KafkaUserSpecAuthenticationPasswordValueFromPatchOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthenticationPasswordValueFromPatch) KafkaUserSpecAuthenticationPasswordValueFromPatch {
		if v != nil {
			return *v
		}
		var ret KafkaUserSpecAuthenticationPasswordValueFromPatch
		return ret
	}).(KafkaUserSpecAuthenticationPasswordValueFromPatchOutput)
}

func (o KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput) SecretKeyRef() KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthenticationPasswordValueFromPatch) *KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretKeyRef
	}).(KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput)
}

// Selects a key of a Secret in the resource's namespace.
type KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRef struct {
	Key      *string `pulumi:"key"`
	Name     *string `pulumi:"name"`
	Optional *bool   `pulumi:"optional"`
}

// KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefInput is an input type that accepts KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefArgs and KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefInput` via:
//
//	KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefArgs{...}
type KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput() KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput
	ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutputWithContext(context.Context) KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput
}

// Selects a key of a Secret in the resource's namespace.
type KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefArgs struct {
	Key      pulumi.StringPtrInput `pulumi:"key"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Optional pulumi.BoolPtrInput   `pulumi:"optional"`
}

func (KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRef)(nil)).Elem()
}

func (i KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefArgs) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput() KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput {
	return i.ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefArgs) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput)
}

func (i KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefArgs) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput() KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput {
	return i.ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefArgs) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput).ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutputWithContext(ctx)
}

// KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrInput is an input type that accepts KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefArgs, KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtr and KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrInput` via:
//
//	        KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefArgs{...}
//
//	or:
//
//	        nil
type KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput() KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput
	ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutputWithContext(context.Context) KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput
}

type kafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrType KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefArgs

func KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtr(v *KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefArgs) KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrInput {
	return (*kafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrType)(v)
}

func (*kafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRef)(nil)).Elem()
}

func (i *kafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrType) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput() KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput {
	return i.ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i *kafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrType) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput)
}

// Selects a key of a Secret in the resource's namespace.
type KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRef)(nil)).Elem()
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput() KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput() KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput {
	return o.ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRef) *KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRef {
		return &v
	}).(KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput)
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRef)(nil)).Elem()
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput() KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput) Elem() KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRef) KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRef {
		if v != nil {
			return *v
		}
		var ret KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRef
		return ret
	}).(KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput)
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Selects a key of a Secret in the resource's namespace.
type KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatch struct {
	Key      *string `pulumi:"key"`
	Name     *string `pulumi:"name"`
	Optional *bool   `pulumi:"optional"`
}

// KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchInput is an input type that accepts KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchArgs and KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchInput` via:
//
//	KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchArgs{...}
type KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput() KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput
	ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutputWithContext(context.Context) KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput
}

// Selects a key of a Secret in the resource's namespace.
type KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchArgs struct {
	Key      pulumi.StringPtrInput `pulumi:"key"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Optional pulumi.BoolPtrInput   `pulumi:"optional"`
}

func (KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatch)(nil)).Elem()
}

func (i KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchArgs) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput() KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput {
	return i.ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchArgs) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput)
}

func (i KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchArgs) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput() KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput {
	return i.ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchArgs) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput).ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutputWithContext(ctx)
}

// KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrInput is an input type that accepts KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchArgs, KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtr and KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrInput` via:
//
//	        KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput() KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput
	ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutputWithContext(context.Context) KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput
}

type kafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrType KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchArgs

func KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtr(v *KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchArgs) KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrInput {
	return (*kafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrType)(v)
}

func (*kafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatch)(nil)).Elem()
}

func (i *kafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrType) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput() KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput {
	return i.ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrType) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput)
}

// Selects a key of a Secret in the resource's namespace.
type KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatch)(nil)).Elem()
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput() KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput() KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput {
	return o.ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutputWithContext(context.Background())
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatch) *KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatch {
		return &v
	}).(KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput)
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatch)(nil)).Elem()
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput() KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput) ToKafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput) Elem() KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatch) KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatch {
		if v != nil {
			return *v
		}
		var ret KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatch
		return ret
	}).(KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput)
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Authentication mechanism enabled for this Kafka user. The supported authentication mechanisms are `scram-sha-512`, `tls`, and `tls-external`.
//
//   - `scram-sha-512` generates a secret with SASL SCRAM-SHA-512 credentials.
//   - `tls` generates a secret with user certificate for mutual TLS authentication.
//   - `tls-external` does not generate a user certificate.   But prepares the user for using mutual TLS authentication using a user certificate generated outside the User Operator.
//     ACLs and quotas set for this user are configured in the `CN=<username>` format.
//
// Authentication is optional. If authentication is not configured, no credentials are generated. ACLs and quotas set for the user are configured in the `<username>` format suitable for SASL authentication.
type KafkaUserSpecAuthenticationPatch struct {
	Password *KafkaUserSpecAuthenticationPasswordPatch `pulumi:"password"`
	// Authentication type.
	Type *string `pulumi:"type"`
}

// KafkaUserSpecAuthenticationPatchInput is an input type that accepts KafkaUserSpecAuthenticationPatchArgs and KafkaUserSpecAuthenticationPatchOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthenticationPatchInput` via:
//
//	KafkaUserSpecAuthenticationPatchArgs{...}
type KafkaUserSpecAuthenticationPatchInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthenticationPatchOutput() KafkaUserSpecAuthenticationPatchOutput
	ToKafkaUserSpecAuthenticationPatchOutputWithContext(context.Context) KafkaUserSpecAuthenticationPatchOutput
}

// Authentication mechanism enabled for this Kafka user. The supported authentication mechanisms are `scram-sha-512`, `tls`, and `tls-external`.
//
//   - `scram-sha-512` generates a secret with SASL SCRAM-SHA-512 credentials.
//   - `tls` generates a secret with user certificate for mutual TLS authentication.
//   - `tls-external` does not generate a user certificate.   But prepares the user for using mutual TLS authentication using a user certificate generated outside the User Operator.
//     ACLs and quotas set for this user are configured in the `CN=<username>` format.
//
// Authentication is optional. If authentication is not configured, no credentials are generated. ACLs and quotas set for the user are configured in the `<username>` format suitable for SASL authentication.
type KafkaUserSpecAuthenticationPatchArgs struct {
	Password KafkaUserSpecAuthenticationPasswordPatchPtrInput `pulumi:"password"`
	// Authentication type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaUserSpecAuthenticationPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthenticationPatch)(nil)).Elem()
}

func (i KafkaUserSpecAuthenticationPatchArgs) ToKafkaUserSpecAuthenticationPatchOutput() KafkaUserSpecAuthenticationPatchOutput {
	return i.ToKafkaUserSpecAuthenticationPatchOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthenticationPatchArgs) ToKafkaUserSpecAuthenticationPatchOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationPatchOutput)
}

func (i KafkaUserSpecAuthenticationPatchArgs) ToKafkaUserSpecAuthenticationPatchPtrOutput() KafkaUserSpecAuthenticationPatchPtrOutput {
	return i.ToKafkaUserSpecAuthenticationPatchPtrOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthenticationPatchArgs) ToKafkaUserSpecAuthenticationPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationPatchOutput).ToKafkaUserSpecAuthenticationPatchPtrOutputWithContext(ctx)
}

// KafkaUserSpecAuthenticationPatchPtrInput is an input type that accepts KafkaUserSpecAuthenticationPatchArgs, KafkaUserSpecAuthenticationPatchPtr and KafkaUserSpecAuthenticationPatchPtrOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthenticationPatchPtrInput` via:
//
//	        KafkaUserSpecAuthenticationPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaUserSpecAuthenticationPatchPtrInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthenticationPatchPtrOutput() KafkaUserSpecAuthenticationPatchPtrOutput
	ToKafkaUserSpecAuthenticationPatchPtrOutputWithContext(context.Context) KafkaUserSpecAuthenticationPatchPtrOutput
}

type kafkaUserSpecAuthenticationPatchPtrType KafkaUserSpecAuthenticationPatchArgs

func KafkaUserSpecAuthenticationPatchPtr(v *KafkaUserSpecAuthenticationPatchArgs) KafkaUserSpecAuthenticationPatchPtrInput {
	return (*kafkaUserSpecAuthenticationPatchPtrType)(v)
}

func (*kafkaUserSpecAuthenticationPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthenticationPatch)(nil)).Elem()
}

func (i *kafkaUserSpecAuthenticationPatchPtrType) ToKafkaUserSpecAuthenticationPatchPtrOutput() KafkaUserSpecAuthenticationPatchPtrOutput {
	return i.ToKafkaUserSpecAuthenticationPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaUserSpecAuthenticationPatchPtrType) ToKafkaUserSpecAuthenticationPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthenticationPatchPtrOutput)
}

// Authentication mechanism enabled for this Kafka user. The supported authentication mechanisms are `scram-sha-512`, `tls`, and `tls-external`.
//
//   - `scram-sha-512` generates a secret with SASL SCRAM-SHA-512 credentials.
//   - `tls` generates a secret with user certificate for mutual TLS authentication.
//   - `tls-external` does not generate a user certificate.   But prepares the user for using mutual TLS authentication using a user certificate generated outside the User Operator.
//     ACLs and quotas set for this user are configured in the `CN=<username>` format.
//
// Authentication is optional. If authentication is not configured, no credentials are generated. ACLs and quotas set for the user are configured in the `<username>` format suitable for SASL authentication.
type KafkaUserSpecAuthenticationPatchOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthenticationPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthenticationPatch)(nil)).Elem()
}

func (o KafkaUserSpecAuthenticationPatchOutput) ToKafkaUserSpecAuthenticationPatchOutput() KafkaUserSpecAuthenticationPatchOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPatchOutput) ToKafkaUserSpecAuthenticationPatchOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPatchOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPatchOutput) ToKafkaUserSpecAuthenticationPatchPtrOutput() KafkaUserSpecAuthenticationPatchPtrOutput {
	return o.ToKafkaUserSpecAuthenticationPatchPtrOutputWithContext(context.Background())
}

func (o KafkaUserSpecAuthenticationPatchOutput) ToKafkaUserSpecAuthenticationPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserSpecAuthenticationPatch) *KafkaUserSpecAuthenticationPatch {
		return &v
	}).(KafkaUserSpecAuthenticationPatchPtrOutput)
}

func (o KafkaUserSpecAuthenticationPatchOutput) Password() KafkaUserSpecAuthenticationPasswordPatchPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthenticationPatch) *KafkaUserSpecAuthenticationPasswordPatch { return v.Password }).(KafkaUserSpecAuthenticationPasswordPatchPtrOutput)
}

// Authentication type.
func (o KafkaUserSpecAuthenticationPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthenticationPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaUserSpecAuthenticationPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthenticationPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthenticationPatch)(nil)).Elem()
}

func (o KafkaUserSpecAuthenticationPatchPtrOutput) ToKafkaUserSpecAuthenticationPatchPtrOutput() KafkaUserSpecAuthenticationPatchPtrOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPatchPtrOutput) ToKafkaUserSpecAuthenticationPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthenticationPatchPtrOutput {
	return o
}

func (o KafkaUserSpecAuthenticationPatchPtrOutput) Elem() KafkaUserSpecAuthenticationPatchOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthenticationPatch) KafkaUserSpecAuthenticationPatch {
		if v != nil {
			return *v
		}
		var ret KafkaUserSpecAuthenticationPatch
		return ret
	}).(KafkaUserSpecAuthenticationPatchOutput)
}

func (o KafkaUserSpecAuthenticationPatchPtrOutput) Password() KafkaUserSpecAuthenticationPasswordPatchPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthenticationPatch) *KafkaUserSpecAuthenticationPasswordPatch {
		if v == nil {
			return nil
		}
		return v.Password
	}).(KafkaUserSpecAuthenticationPasswordPatchPtrOutput)
}

// Authentication type.
func (o KafkaUserSpecAuthenticationPatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthenticationPatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Authorization rules for this Kafka user.
type KafkaUserSpecAuthorization struct {
	// List of ACL rules which should be applied to this user.
	Acls []KafkaUserSpecAuthorizationAcls `pulumi:"acls"`
	// Authorization type. Currently the only supported type is `simple`. `simple` authorization type uses the Kafka Admin API for managing the ACL rules.
	Type *string `pulumi:"type"`
}

// KafkaUserSpecAuthorizationInput is an input type that accepts KafkaUserSpecAuthorizationArgs and KafkaUserSpecAuthorizationOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthorizationInput` via:
//
//	KafkaUserSpecAuthorizationArgs{...}
type KafkaUserSpecAuthorizationInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthorizationOutput() KafkaUserSpecAuthorizationOutput
	ToKafkaUserSpecAuthorizationOutputWithContext(context.Context) KafkaUserSpecAuthorizationOutput
}

// Authorization rules for this Kafka user.
type KafkaUserSpecAuthorizationArgs struct {
	// List of ACL rules which should be applied to this user.
	Acls KafkaUserSpecAuthorizationAclsArrayInput `pulumi:"acls"`
	// Authorization type. Currently the only supported type is `simple`. `simple` authorization type uses the Kafka Admin API for managing the ACL rules.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaUserSpecAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthorization)(nil)).Elem()
}

func (i KafkaUserSpecAuthorizationArgs) ToKafkaUserSpecAuthorizationOutput() KafkaUserSpecAuthorizationOutput {
	return i.ToKafkaUserSpecAuthorizationOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthorizationArgs) ToKafkaUserSpecAuthorizationOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthorizationOutput)
}

func (i KafkaUserSpecAuthorizationArgs) ToKafkaUserSpecAuthorizationPtrOutput() KafkaUserSpecAuthorizationPtrOutput {
	return i.ToKafkaUserSpecAuthorizationPtrOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthorizationArgs) ToKafkaUserSpecAuthorizationPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthorizationOutput).ToKafkaUserSpecAuthorizationPtrOutputWithContext(ctx)
}

// KafkaUserSpecAuthorizationPtrInput is an input type that accepts KafkaUserSpecAuthorizationArgs, KafkaUserSpecAuthorizationPtr and KafkaUserSpecAuthorizationPtrOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthorizationPtrInput` via:
//
//	        KafkaUserSpecAuthorizationArgs{...}
//
//	or:
//
//	        nil
type KafkaUserSpecAuthorizationPtrInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthorizationPtrOutput() KafkaUserSpecAuthorizationPtrOutput
	ToKafkaUserSpecAuthorizationPtrOutputWithContext(context.Context) KafkaUserSpecAuthorizationPtrOutput
}

type kafkaUserSpecAuthorizationPtrType KafkaUserSpecAuthorizationArgs

func KafkaUserSpecAuthorizationPtr(v *KafkaUserSpecAuthorizationArgs) KafkaUserSpecAuthorizationPtrInput {
	return (*kafkaUserSpecAuthorizationPtrType)(v)
}

func (*kafkaUserSpecAuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthorization)(nil)).Elem()
}

func (i *kafkaUserSpecAuthorizationPtrType) ToKafkaUserSpecAuthorizationPtrOutput() KafkaUserSpecAuthorizationPtrOutput {
	return i.ToKafkaUserSpecAuthorizationPtrOutputWithContext(context.Background())
}

func (i *kafkaUserSpecAuthorizationPtrType) ToKafkaUserSpecAuthorizationPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthorizationPtrOutput)
}

// Authorization rules for this Kafka user.
type KafkaUserSpecAuthorizationOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthorization)(nil)).Elem()
}

func (o KafkaUserSpecAuthorizationOutput) ToKafkaUserSpecAuthorizationOutput() KafkaUserSpecAuthorizationOutput {
	return o
}

func (o KafkaUserSpecAuthorizationOutput) ToKafkaUserSpecAuthorizationOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationOutput {
	return o
}

func (o KafkaUserSpecAuthorizationOutput) ToKafkaUserSpecAuthorizationPtrOutput() KafkaUserSpecAuthorizationPtrOutput {
	return o.ToKafkaUserSpecAuthorizationPtrOutputWithContext(context.Background())
}

func (o KafkaUserSpecAuthorizationOutput) ToKafkaUserSpecAuthorizationPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserSpecAuthorization) *KafkaUserSpecAuthorization {
		return &v
	}).(KafkaUserSpecAuthorizationPtrOutput)
}

// List of ACL rules which should be applied to this user.
func (o KafkaUserSpecAuthorizationOutput) Acls() KafkaUserSpecAuthorizationAclsArrayOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthorization) []KafkaUserSpecAuthorizationAcls { return v.Acls }).(KafkaUserSpecAuthorizationAclsArrayOutput)
}

// Authorization type. Currently the only supported type is `simple`. `simple` authorization type uses the Kafka Admin API for managing the ACL rules.
func (o KafkaUserSpecAuthorizationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthorization) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaUserSpecAuthorizationPtrOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthorization)(nil)).Elem()
}

func (o KafkaUserSpecAuthorizationPtrOutput) ToKafkaUserSpecAuthorizationPtrOutput() KafkaUserSpecAuthorizationPtrOutput {
	return o
}

func (o KafkaUserSpecAuthorizationPtrOutput) ToKafkaUserSpecAuthorizationPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationPtrOutput {
	return o
}

func (o KafkaUserSpecAuthorizationPtrOutput) Elem() KafkaUserSpecAuthorizationOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthorization) KafkaUserSpecAuthorization {
		if v != nil {
			return *v
		}
		var ret KafkaUserSpecAuthorization
		return ret
	}).(KafkaUserSpecAuthorizationOutput)
}

// List of ACL rules which should be applied to this user.
func (o KafkaUserSpecAuthorizationPtrOutput) Acls() KafkaUserSpecAuthorizationAclsArrayOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthorization) []KafkaUserSpecAuthorizationAcls {
		if v == nil {
			return nil
		}
		return v.Acls
	}).(KafkaUserSpecAuthorizationAclsArrayOutput)
}

// Authorization type. Currently the only supported type is `simple`. `simple` authorization type uses the Kafka Admin API for managing the ACL rules.
func (o KafkaUserSpecAuthorizationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthorization) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type KafkaUserSpecAuthorizationAcls struct {
	// The host from which the action described in the ACL rule is allowed or denied. If not set, it defaults to `*`, allowing or denying the action from any host.
	Host *string `pulumi:"host"`
	// Operation which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.
	Operation *string `pulumi:"operation"`
	// List of operations which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.
	Operations []string                                `pulumi:"operations"`
	Resource   *KafkaUserSpecAuthorizationAclsResource `pulumi:"resource"`
	// The type of the rule. Currently the only supported type is `allow`. ACL rules with type `allow` are used to allow user to execute the specified operations. Default value is `allow`.
	Type *string `pulumi:"type"`
}

// KafkaUserSpecAuthorizationAclsInput is an input type that accepts KafkaUserSpecAuthorizationAclsArgs and KafkaUserSpecAuthorizationAclsOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthorizationAclsInput` via:
//
//	KafkaUserSpecAuthorizationAclsArgs{...}
type KafkaUserSpecAuthorizationAclsInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthorizationAclsOutput() KafkaUserSpecAuthorizationAclsOutput
	ToKafkaUserSpecAuthorizationAclsOutputWithContext(context.Context) KafkaUserSpecAuthorizationAclsOutput
}

type KafkaUserSpecAuthorizationAclsArgs struct {
	// The host from which the action described in the ACL rule is allowed or denied. If not set, it defaults to `*`, allowing or denying the action from any host.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Operation which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.
	Operation pulumi.StringPtrInput `pulumi:"operation"`
	// List of operations which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.
	Operations pulumi.StringArrayInput                        `pulumi:"operations"`
	Resource   KafkaUserSpecAuthorizationAclsResourcePtrInput `pulumi:"resource"`
	// The type of the rule. Currently the only supported type is `allow`. ACL rules with type `allow` are used to allow user to execute the specified operations. Default value is `allow`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaUserSpecAuthorizationAclsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthorizationAcls)(nil)).Elem()
}

func (i KafkaUserSpecAuthorizationAclsArgs) ToKafkaUserSpecAuthorizationAclsOutput() KafkaUserSpecAuthorizationAclsOutput {
	return i.ToKafkaUserSpecAuthorizationAclsOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthorizationAclsArgs) ToKafkaUserSpecAuthorizationAclsOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationAclsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthorizationAclsOutput)
}

// KafkaUserSpecAuthorizationAclsArrayInput is an input type that accepts KafkaUserSpecAuthorizationAclsArray and KafkaUserSpecAuthorizationAclsArrayOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthorizationAclsArrayInput` via:
//
//	KafkaUserSpecAuthorizationAclsArray{ KafkaUserSpecAuthorizationAclsArgs{...} }
type KafkaUserSpecAuthorizationAclsArrayInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthorizationAclsArrayOutput() KafkaUserSpecAuthorizationAclsArrayOutput
	ToKafkaUserSpecAuthorizationAclsArrayOutputWithContext(context.Context) KafkaUserSpecAuthorizationAclsArrayOutput
}

type KafkaUserSpecAuthorizationAclsArray []KafkaUserSpecAuthorizationAclsInput

func (KafkaUserSpecAuthorizationAclsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaUserSpecAuthorizationAcls)(nil)).Elem()
}

func (i KafkaUserSpecAuthorizationAclsArray) ToKafkaUserSpecAuthorizationAclsArrayOutput() KafkaUserSpecAuthorizationAclsArrayOutput {
	return i.ToKafkaUserSpecAuthorizationAclsArrayOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthorizationAclsArray) ToKafkaUserSpecAuthorizationAclsArrayOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationAclsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthorizationAclsArrayOutput)
}

type KafkaUserSpecAuthorizationAclsOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthorizationAclsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthorizationAcls)(nil)).Elem()
}

func (o KafkaUserSpecAuthorizationAclsOutput) ToKafkaUserSpecAuthorizationAclsOutput() KafkaUserSpecAuthorizationAclsOutput {
	return o
}

func (o KafkaUserSpecAuthorizationAclsOutput) ToKafkaUserSpecAuthorizationAclsOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationAclsOutput {
	return o
}

// The host from which the action described in the ACL rule is allowed or denied. If not set, it defaults to `*`, allowing or denying the action from any host.
func (o KafkaUserSpecAuthorizationAclsOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthorizationAcls) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Operation which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.
func (o KafkaUserSpecAuthorizationAclsOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthorizationAcls) *string { return v.Operation }).(pulumi.StringPtrOutput)
}

// List of operations which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.
func (o KafkaUserSpecAuthorizationAclsOutput) Operations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthorizationAcls) []string { return v.Operations }).(pulumi.StringArrayOutput)
}

func (o KafkaUserSpecAuthorizationAclsOutput) Resource() KafkaUserSpecAuthorizationAclsResourcePtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthorizationAcls) *KafkaUserSpecAuthorizationAclsResource { return v.Resource }).(KafkaUserSpecAuthorizationAclsResourcePtrOutput)
}

// The type of the rule. Currently the only supported type is `allow`. ACL rules with type `allow` are used to allow user to execute the specified operations. Default value is `allow`.
func (o KafkaUserSpecAuthorizationAclsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthorizationAcls) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaUserSpecAuthorizationAclsArrayOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthorizationAclsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaUserSpecAuthorizationAcls)(nil)).Elem()
}

func (o KafkaUserSpecAuthorizationAclsArrayOutput) ToKafkaUserSpecAuthorizationAclsArrayOutput() KafkaUserSpecAuthorizationAclsArrayOutput {
	return o
}

func (o KafkaUserSpecAuthorizationAclsArrayOutput) ToKafkaUserSpecAuthorizationAclsArrayOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationAclsArrayOutput {
	return o
}

func (o KafkaUserSpecAuthorizationAclsArrayOutput) Index(i pulumi.IntInput) KafkaUserSpecAuthorizationAclsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaUserSpecAuthorizationAcls {
		return vs[0].([]KafkaUserSpecAuthorizationAcls)[vs[1].(int)]
	}).(KafkaUserSpecAuthorizationAclsOutput)
}

type KafkaUserSpecAuthorizationAclsPatch struct {
	// The host from which the action described in the ACL rule is allowed or denied. If not set, it defaults to `*`, allowing or denying the action from any host.
	Host *string `pulumi:"host"`
	// Operation which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.
	Operation *string `pulumi:"operation"`
	// List of operations which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.
	Operations []string                                     `pulumi:"operations"`
	Resource   *KafkaUserSpecAuthorizationAclsResourcePatch `pulumi:"resource"`
	// The type of the rule. Currently the only supported type is `allow`. ACL rules with type `allow` are used to allow user to execute the specified operations. Default value is `allow`.
	Type *string `pulumi:"type"`
}

// KafkaUserSpecAuthorizationAclsPatchInput is an input type that accepts KafkaUserSpecAuthorizationAclsPatchArgs and KafkaUserSpecAuthorizationAclsPatchOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthorizationAclsPatchInput` via:
//
//	KafkaUserSpecAuthorizationAclsPatchArgs{...}
type KafkaUserSpecAuthorizationAclsPatchInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthorizationAclsPatchOutput() KafkaUserSpecAuthorizationAclsPatchOutput
	ToKafkaUserSpecAuthorizationAclsPatchOutputWithContext(context.Context) KafkaUserSpecAuthorizationAclsPatchOutput
}

type KafkaUserSpecAuthorizationAclsPatchArgs struct {
	// The host from which the action described in the ACL rule is allowed or denied. If not set, it defaults to `*`, allowing or denying the action from any host.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Operation which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.
	Operation pulumi.StringPtrInput `pulumi:"operation"`
	// List of operations which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.
	Operations pulumi.StringArrayInput                             `pulumi:"operations"`
	Resource   KafkaUserSpecAuthorizationAclsResourcePatchPtrInput `pulumi:"resource"`
	// The type of the rule. Currently the only supported type is `allow`. ACL rules with type `allow` are used to allow user to execute the specified operations. Default value is `allow`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaUserSpecAuthorizationAclsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthorizationAclsPatch)(nil)).Elem()
}

func (i KafkaUserSpecAuthorizationAclsPatchArgs) ToKafkaUserSpecAuthorizationAclsPatchOutput() KafkaUserSpecAuthorizationAclsPatchOutput {
	return i.ToKafkaUserSpecAuthorizationAclsPatchOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthorizationAclsPatchArgs) ToKafkaUserSpecAuthorizationAclsPatchOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationAclsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthorizationAclsPatchOutput)
}

// KafkaUserSpecAuthorizationAclsPatchArrayInput is an input type that accepts KafkaUserSpecAuthorizationAclsPatchArray and KafkaUserSpecAuthorizationAclsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthorizationAclsPatchArrayInput` via:
//
//	KafkaUserSpecAuthorizationAclsPatchArray{ KafkaUserSpecAuthorizationAclsPatchArgs{...} }
type KafkaUserSpecAuthorizationAclsPatchArrayInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthorizationAclsPatchArrayOutput() KafkaUserSpecAuthorizationAclsPatchArrayOutput
	ToKafkaUserSpecAuthorizationAclsPatchArrayOutputWithContext(context.Context) KafkaUserSpecAuthorizationAclsPatchArrayOutput
}

type KafkaUserSpecAuthorizationAclsPatchArray []KafkaUserSpecAuthorizationAclsPatchInput

func (KafkaUserSpecAuthorizationAclsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaUserSpecAuthorizationAclsPatch)(nil)).Elem()
}

func (i KafkaUserSpecAuthorizationAclsPatchArray) ToKafkaUserSpecAuthorizationAclsPatchArrayOutput() KafkaUserSpecAuthorizationAclsPatchArrayOutput {
	return i.ToKafkaUserSpecAuthorizationAclsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthorizationAclsPatchArray) ToKafkaUserSpecAuthorizationAclsPatchArrayOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationAclsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthorizationAclsPatchArrayOutput)
}

type KafkaUserSpecAuthorizationAclsPatchOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthorizationAclsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthorizationAclsPatch)(nil)).Elem()
}

func (o KafkaUserSpecAuthorizationAclsPatchOutput) ToKafkaUserSpecAuthorizationAclsPatchOutput() KafkaUserSpecAuthorizationAclsPatchOutput {
	return o
}

func (o KafkaUserSpecAuthorizationAclsPatchOutput) ToKafkaUserSpecAuthorizationAclsPatchOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationAclsPatchOutput {
	return o
}

// The host from which the action described in the ACL rule is allowed or denied. If not set, it defaults to `*`, allowing or denying the action from any host.
func (o KafkaUserSpecAuthorizationAclsPatchOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthorizationAclsPatch) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Operation which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.
func (o KafkaUserSpecAuthorizationAclsPatchOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthorizationAclsPatch) *string { return v.Operation }).(pulumi.StringPtrOutput)
}

// List of operations which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.
func (o KafkaUserSpecAuthorizationAclsPatchOutput) Operations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthorizationAclsPatch) []string { return v.Operations }).(pulumi.StringArrayOutput)
}

func (o KafkaUserSpecAuthorizationAclsPatchOutput) Resource() KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthorizationAclsPatch) *KafkaUserSpecAuthorizationAclsResourcePatch {
		return v.Resource
	}).(KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput)
}

// The type of the rule. Currently the only supported type is `allow`. ACL rules with type `allow` are used to allow user to execute the specified operations. Default value is `allow`.
func (o KafkaUserSpecAuthorizationAclsPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthorizationAclsPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaUserSpecAuthorizationAclsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthorizationAclsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaUserSpecAuthorizationAclsPatch)(nil)).Elem()
}

func (o KafkaUserSpecAuthorizationAclsPatchArrayOutput) ToKafkaUserSpecAuthorizationAclsPatchArrayOutput() KafkaUserSpecAuthorizationAclsPatchArrayOutput {
	return o
}

func (o KafkaUserSpecAuthorizationAclsPatchArrayOutput) ToKafkaUserSpecAuthorizationAclsPatchArrayOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationAclsPatchArrayOutput {
	return o
}

func (o KafkaUserSpecAuthorizationAclsPatchArrayOutput) Index(i pulumi.IntInput) KafkaUserSpecAuthorizationAclsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaUserSpecAuthorizationAclsPatch {
		return vs[0].([]KafkaUserSpecAuthorizationAclsPatch)[vs[1].(int)]
	}).(KafkaUserSpecAuthorizationAclsPatchOutput)
}

// Indicates the resource for which given ACL rule applies.
type KafkaUserSpecAuthorizationAclsResource struct {
	// Name of resource for which given ACL rule applies. Can be combined with `patternType` field to use prefix pattern.
	Name *string `pulumi:"name"`
	// Describes the pattern used in the resource field. The supported types are `literal` and `prefix`. With `literal` pattern type, the resource field will be used as a definition of a full name. With `prefix` pattern type, the resource name will be used only as a prefix. Default value is `literal`.
	PatternType *string `pulumi:"patternType"`
	// Resource type. The available resource types are `topic`, `group`, `cluster`, and `transactionalId`.
	Type *string `pulumi:"type"`
}

// KafkaUserSpecAuthorizationAclsResourceInput is an input type that accepts KafkaUserSpecAuthorizationAclsResourceArgs and KafkaUserSpecAuthorizationAclsResourceOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthorizationAclsResourceInput` via:
//
//	KafkaUserSpecAuthorizationAclsResourceArgs{...}
type KafkaUserSpecAuthorizationAclsResourceInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthorizationAclsResourceOutput() KafkaUserSpecAuthorizationAclsResourceOutput
	ToKafkaUserSpecAuthorizationAclsResourceOutputWithContext(context.Context) KafkaUserSpecAuthorizationAclsResourceOutput
}

// Indicates the resource for which given ACL rule applies.
type KafkaUserSpecAuthorizationAclsResourceArgs struct {
	// Name of resource for which given ACL rule applies. Can be combined with `patternType` field to use prefix pattern.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Describes the pattern used in the resource field. The supported types are `literal` and `prefix`. With `literal` pattern type, the resource field will be used as a definition of a full name. With `prefix` pattern type, the resource name will be used only as a prefix. Default value is `literal`.
	PatternType pulumi.StringPtrInput `pulumi:"patternType"`
	// Resource type. The available resource types are `topic`, `group`, `cluster`, and `transactionalId`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaUserSpecAuthorizationAclsResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthorizationAclsResource)(nil)).Elem()
}

func (i KafkaUserSpecAuthorizationAclsResourceArgs) ToKafkaUserSpecAuthorizationAclsResourceOutput() KafkaUserSpecAuthorizationAclsResourceOutput {
	return i.ToKafkaUserSpecAuthorizationAclsResourceOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthorizationAclsResourceArgs) ToKafkaUserSpecAuthorizationAclsResourceOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationAclsResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthorizationAclsResourceOutput)
}

func (i KafkaUserSpecAuthorizationAclsResourceArgs) ToKafkaUserSpecAuthorizationAclsResourcePtrOutput() KafkaUserSpecAuthorizationAclsResourcePtrOutput {
	return i.ToKafkaUserSpecAuthorizationAclsResourcePtrOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthorizationAclsResourceArgs) ToKafkaUserSpecAuthorizationAclsResourcePtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationAclsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthorizationAclsResourceOutput).ToKafkaUserSpecAuthorizationAclsResourcePtrOutputWithContext(ctx)
}

// KafkaUserSpecAuthorizationAclsResourcePtrInput is an input type that accepts KafkaUserSpecAuthorizationAclsResourceArgs, KafkaUserSpecAuthorizationAclsResourcePtr and KafkaUserSpecAuthorizationAclsResourcePtrOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthorizationAclsResourcePtrInput` via:
//
//	        KafkaUserSpecAuthorizationAclsResourceArgs{...}
//
//	or:
//
//	        nil
type KafkaUserSpecAuthorizationAclsResourcePtrInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthorizationAclsResourcePtrOutput() KafkaUserSpecAuthorizationAclsResourcePtrOutput
	ToKafkaUserSpecAuthorizationAclsResourcePtrOutputWithContext(context.Context) KafkaUserSpecAuthorizationAclsResourcePtrOutput
}

type kafkaUserSpecAuthorizationAclsResourcePtrType KafkaUserSpecAuthorizationAclsResourceArgs

func KafkaUserSpecAuthorizationAclsResourcePtr(v *KafkaUserSpecAuthorizationAclsResourceArgs) KafkaUserSpecAuthorizationAclsResourcePtrInput {
	return (*kafkaUserSpecAuthorizationAclsResourcePtrType)(v)
}

func (*kafkaUserSpecAuthorizationAclsResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthorizationAclsResource)(nil)).Elem()
}

func (i *kafkaUserSpecAuthorizationAclsResourcePtrType) ToKafkaUserSpecAuthorizationAclsResourcePtrOutput() KafkaUserSpecAuthorizationAclsResourcePtrOutput {
	return i.ToKafkaUserSpecAuthorizationAclsResourcePtrOutputWithContext(context.Background())
}

func (i *kafkaUserSpecAuthorizationAclsResourcePtrType) ToKafkaUserSpecAuthorizationAclsResourcePtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationAclsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthorizationAclsResourcePtrOutput)
}

// Indicates the resource for which given ACL rule applies.
type KafkaUserSpecAuthorizationAclsResourceOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthorizationAclsResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthorizationAclsResource)(nil)).Elem()
}

func (o KafkaUserSpecAuthorizationAclsResourceOutput) ToKafkaUserSpecAuthorizationAclsResourceOutput() KafkaUserSpecAuthorizationAclsResourceOutput {
	return o
}

func (o KafkaUserSpecAuthorizationAclsResourceOutput) ToKafkaUserSpecAuthorizationAclsResourceOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationAclsResourceOutput {
	return o
}

func (o KafkaUserSpecAuthorizationAclsResourceOutput) ToKafkaUserSpecAuthorizationAclsResourcePtrOutput() KafkaUserSpecAuthorizationAclsResourcePtrOutput {
	return o.ToKafkaUserSpecAuthorizationAclsResourcePtrOutputWithContext(context.Background())
}

func (o KafkaUserSpecAuthorizationAclsResourceOutput) ToKafkaUserSpecAuthorizationAclsResourcePtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationAclsResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserSpecAuthorizationAclsResource) *KafkaUserSpecAuthorizationAclsResource {
		return &v
	}).(KafkaUserSpecAuthorizationAclsResourcePtrOutput)
}

// Name of resource for which given ACL rule applies. Can be combined with `patternType` field to use prefix pattern.
func (o KafkaUserSpecAuthorizationAclsResourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthorizationAclsResource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Describes the pattern used in the resource field. The supported types are `literal` and `prefix`. With `literal` pattern type, the resource field will be used as a definition of a full name. With `prefix` pattern type, the resource name will be used only as a prefix. Default value is `literal`.
func (o KafkaUserSpecAuthorizationAclsResourceOutput) PatternType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthorizationAclsResource) *string { return v.PatternType }).(pulumi.StringPtrOutput)
}

// Resource type. The available resource types are `topic`, `group`, `cluster`, and `transactionalId`.
func (o KafkaUserSpecAuthorizationAclsResourceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthorizationAclsResource) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaUserSpecAuthorizationAclsResourcePtrOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthorizationAclsResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthorizationAclsResource)(nil)).Elem()
}

func (o KafkaUserSpecAuthorizationAclsResourcePtrOutput) ToKafkaUserSpecAuthorizationAclsResourcePtrOutput() KafkaUserSpecAuthorizationAclsResourcePtrOutput {
	return o
}

func (o KafkaUserSpecAuthorizationAclsResourcePtrOutput) ToKafkaUserSpecAuthorizationAclsResourcePtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationAclsResourcePtrOutput {
	return o
}

func (o KafkaUserSpecAuthorizationAclsResourcePtrOutput) Elem() KafkaUserSpecAuthorizationAclsResourceOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthorizationAclsResource) KafkaUserSpecAuthorizationAclsResource {
		if v != nil {
			return *v
		}
		var ret KafkaUserSpecAuthorizationAclsResource
		return ret
	}).(KafkaUserSpecAuthorizationAclsResourceOutput)
}

// Name of resource for which given ACL rule applies. Can be combined with `patternType` field to use prefix pattern.
func (o KafkaUserSpecAuthorizationAclsResourcePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthorizationAclsResource) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Describes the pattern used in the resource field. The supported types are `literal` and `prefix`. With `literal` pattern type, the resource field will be used as a definition of a full name. With `prefix` pattern type, the resource name will be used only as a prefix. Default value is `literal`.
func (o KafkaUserSpecAuthorizationAclsResourcePtrOutput) PatternType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthorizationAclsResource) *string {
		if v == nil {
			return nil
		}
		return v.PatternType
	}).(pulumi.StringPtrOutput)
}

// Resource type. The available resource types are `topic`, `group`, `cluster`, and `transactionalId`.
func (o KafkaUserSpecAuthorizationAclsResourcePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthorizationAclsResource) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Indicates the resource for which given ACL rule applies.
type KafkaUserSpecAuthorizationAclsResourcePatch struct {
	// Name of resource for which given ACL rule applies. Can be combined with `patternType` field to use prefix pattern.
	Name *string `pulumi:"name"`
	// Describes the pattern used in the resource field. The supported types are `literal` and `prefix`. With `literal` pattern type, the resource field will be used as a definition of a full name. With `prefix` pattern type, the resource name will be used only as a prefix. Default value is `literal`.
	PatternType *string `pulumi:"patternType"`
	// Resource type. The available resource types are `topic`, `group`, `cluster`, and `transactionalId`.
	Type *string `pulumi:"type"`
}

// KafkaUserSpecAuthorizationAclsResourcePatchInput is an input type that accepts KafkaUserSpecAuthorizationAclsResourcePatchArgs and KafkaUserSpecAuthorizationAclsResourcePatchOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthorizationAclsResourcePatchInput` via:
//
//	KafkaUserSpecAuthorizationAclsResourcePatchArgs{...}
type KafkaUserSpecAuthorizationAclsResourcePatchInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthorizationAclsResourcePatchOutput() KafkaUserSpecAuthorizationAclsResourcePatchOutput
	ToKafkaUserSpecAuthorizationAclsResourcePatchOutputWithContext(context.Context) KafkaUserSpecAuthorizationAclsResourcePatchOutput
}

// Indicates the resource for which given ACL rule applies.
type KafkaUserSpecAuthorizationAclsResourcePatchArgs struct {
	// Name of resource for which given ACL rule applies. Can be combined with `patternType` field to use prefix pattern.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Describes the pattern used in the resource field. The supported types are `literal` and `prefix`. With `literal` pattern type, the resource field will be used as a definition of a full name. With `prefix` pattern type, the resource name will be used only as a prefix. Default value is `literal`.
	PatternType pulumi.StringPtrInput `pulumi:"patternType"`
	// Resource type. The available resource types are `topic`, `group`, `cluster`, and `transactionalId`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaUserSpecAuthorizationAclsResourcePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthorizationAclsResourcePatch)(nil)).Elem()
}

func (i KafkaUserSpecAuthorizationAclsResourcePatchArgs) ToKafkaUserSpecAuthorizationAclsResourcePatchOutput() KafkaUserSpecAuthorizationAclsResourcePatchOutput {
	return i.ToKafkaUserSpecAuthorizationAclsResourcePatchOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthorizationAclsResourcePatchArgs) ToKafkaUserSpecAuthorizationAclsResourcePatchOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationAclsResourcePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthorizationAclsResourcePatchOutput)
}

func (i KafkaUserSpecAuthorizationAclsResourcePatchArgs) ToKafkaUserSpecAuthorizationAclsResourcePatchPtrOutput() KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput {
	return i.ToKafkaUserSpecAuthorizationAclsResourcePatchPtrOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthorizationAclsResourcePatchArgs) ToKafkaUserSpecAuthorizationAclsResourcePatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthorizationAclsResourcePatchOutput).ToKafkaUserSpecAuthorizationAclsResourcePatchPtrOutputWithContext(ctx)
}

// KafkaUserSpecAuthorizationAclsResourcePatchPtrInput is an input type that accepts KafkaUserSpecAuthorizationAclsResourcePatchArgs, KafkaUserSpecAuthorizationAclsResourcePatchPtr and KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthorizationAclsResourcePatchPtrInput` via:
//
//	        KafkaUserSpecAuthorizationAclsResourcePatchArgs{...}
//
//	or:
//
//	        nil
type KafkaUserSpecAuthorizationAclsResourcePatchPtrInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthorizationAclsResourcePatchPtrOutput() KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput
	ToKafkaUserSpecAuthorizationAclsResourcePatchPtrOutputWithContext(context.Context) KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput
}

type kafkaUserSpecAuthorizationAclsResourcePatchPtrType KafkaUserSpecAuthorizationAclsResourcePatchArgs

func KafkaUserSpecAuthorizationAclsResourcePatchPtr(v *KafkaUserSpecAuthorizationAclsResourcePatchArgs) KafkaUserSpecAuthorizationAclsResourcePatchPtrInput {
	return (*kafkaUserSpecAuthorizationAclsResourcePatchPtrType)(v)
}

func (*kafkaUserSpecAuthorizationAclsResourcePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthorizationAclsResourcePatch)(nil)).Elem()
}

func (i *kafkaUserSpecAuthorizationAclsResourcePatchPtrType) ToKafkaUserSpecAuthorizationAclsResourcePatchPtrOutput() KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput {
	return i.ToKafkaUserSpecAuthorizationAclsResourcePatchPtrOutputWithContext(context.Background())
}

func (i *kafkaUserSpecAuthorizationAclsResourcePatchPtrType) ToKafkaUserSpecAuthorizationAclsResourcePatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput)
}

// Indicates the resource for which given ACL rule applies.
type KafkaUserSpecAuthorizationAclsResourcePatchOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthorizationAclsResourcePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthorizationAclsResourcePatch)(nil)).Elem()
}

func (o KafkaUserSpecAuthorizationAclsResourcePatchOutput) ToKafkaUserSpecAuthorizationAclsResourcePatchOutput() KafkaUserSpecAuthorizationAclsResourcePatchOutput {
	return o
}

func (o KafkaUserSpecAuthorizationAclsResourcePatchOutput) ToKafkaUserSpecAuthorizationAclsResourcePatchOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationAclsResourcePatchOutput {
	return o
}

func (o KafkaUserSpecAuthorizationAclsResourcePatchOutput) ToKafkaUserSpecAuthorizationAclsResourcePatchPtrOutput() KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput {
	return o.ToKafkaUserSpecAuthorizationAclsResourcePatchPtrOutputWithContext(context.Background())
}

func (o KafkaUserSpecAuthorizationAclsResourcePatchOutput) ToKafkaUserSpecAuthorizationAclsResourcePatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserSpecAuthorizationAclsResourcePatch) *KafkaUserSpecAuthorizationAclsResourcePatch {
		return &v
	}).(KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput)
}

// Name of resource for which given ACL rule applies. Can be combined with `patternType` field to use prefix pattern.
func (o KafkaUserSpecAuthorizationAclsResourcePatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthorizationAclsResourcePatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Describes the pattern used in the resource field. The supported types are `literal` and `prefix`. With `literal` pattern type, the resource field will be used as a definition of a full name. With `prefix` pattern type, the resource name will be used only as a prefix. Default value is `literal`.
func (o KafkaUserSpecAuthorizationAclsResourcePatchOutput) PatternType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthorizationAclsResourcePatch) *string { return v.PatternType }).(pulumi.StringPtrOutput)
}

// Resource type. The available resource types are `topic`, `group`, `cluster`, and `transactionalId`.
func (o KafkaUserSpecAuthorizationAclsResourcePatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthorizationAclsResourcePatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthorizationAclsResourcePatch)(nil)).Elem()
}

func (o KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput) ToKafkaUserSpecAuthorizationAclsResourcePatchPtrOutput() KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput {
	return o
}

func (o KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput) ToKafkaUserSpecAuthorizationAclsResourcePatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput {
	return o
}

func (o KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput) Elem() KafkaUserSpecAuthorizationAclsResourcePatchOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthorizationAclsResourcePatch) KafkaUserSpecAuthorizationAclsResourcePatch {
		if v != nil {
			return *v
		}
		var ret KafkaUserSpecAuthorizationAclsResourcePatch
		return ret
	}).(KafkaUserSpecAuthorizationAclsResourcePatchOutput)
}

// Name of resource for which given ACL rule applies. Can be combined with `patternType` field to use prefix pattern.
func (o KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthorizationAclsResourcePatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Describes the pattern used in the resource field. The supported types are `literal` and `prefix`. With `literal` pattern type, the resource field will be used as a definition of a full name. With `prefix` pattern type, the resource name will be used only as a prefix. Default value is `literal`.
func (o KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput) PatternType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthorizationAclsResourcePatch) *string {
		if v == nil {
			return nil
		}
		return v.PatternType
	}).(pulumi.StringPtrOutput)
}

// Resource type. The available resource types are `topic`, `group`, `cluster`, and `transactionalId`.
func (o KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthorizationAclsResourcePatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Authorization rules for this Kafka user.
type KafkaUserSpecAuthorizationPatch struct {
	// List of ACL rules which should be applied to this user.
	Acls []KafkaUserSpecAuthorizationAclsPatch `pulumi:"acls"`
	// Authorization type. Currently the only supported type is `simple`. `simple` authorization type uses the Kafka Admin API for managing the ACL rules.
	Type *string `pulumi:"type"`
}

// KafkaUserSpecAuthorizationPatchInput is an input type that accepts KafkaUserSpecAuthorizationPatchArgs and KafkaUserSpecAuthorizationPatchOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthorizationPatchInput` via:
//
//	KafkaUserSpecAuthorizationPatchArgs{...}
type KafkaUserSpecAuthorizationPatchInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthorizationPatchOutput() KafkaUserSpecAuthorizationPatchOutput
	ToKafkaUserSpecAuthorizationPatchOutputWithContext(context.Context) KafkaUserSpecAuthorizationPatchOutput
}

// Authorization rules for this Kafka user.
type KafkaUserSpecAuthorizationPatchArgs struct {
	// List of ACL rules which should be applied to this user.
	Acls KafkaUserSpecAuthorizationAclsPatchArrayInput `pulumi:"acls"`
	// Authorization type. Currently the only supported type is `simple`. `simple` authorization type uses the Kafka Admin API for managing the ACL rules.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaUserSpecAuthorizationPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthorizationPatch)(nil)).Elem()
}

func (i KafkaUserSpecAuthorizationPatchArgs) ToKafkaUserSpecAuthorizationPatchOutput() KafkaUserSpecAuthorizationPatchOutput {
	return i.ToKafkaUserSpecAuthorizationPatchOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthorizationPatchArgs) ToKafkaUserSpecAuthorizationPatchOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthorizationPatchOutput)
}

func (i KafkaUserSpecAuthorizationPatchArgs) ToKafkaUserSpecAuthorizationPatchPtrOutput() KafkaUserSpecAuthorizationPatchPtrOutput {
	return i.ToKafkaUserSpecAuthorizationPatchPtrOutputWithContext(context.Background())
}

func (i KafkaUserSpecAuthorizationPatchArgs) ToKafkaUserSpecAuthorizationPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthorizationPatchOutput).ToKafkaUserSpecAuthorizationPatchPtrOutputWithContext(ctx)
}

// KafkaUserSpecAuthorizationPatchPtrInput is an input type that accepts KafkaUserSpecAuthorizationPatchArgs, KafkaUserSpecAuthorizationPatchPtr and KafkaUserSpecAuthorizationPatchPtrOutput values.
// You can construct a concrete instance of `KafkaUserSpecAuthorizationPatchPtrInput` via:
//
//	        KafkaUserSpecAuthorizationPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaUserSpecAuthorizationPatchPtrInput interface {
	pulumi.Input

	ToKafkaUserSpecAuthorizationPatchPtrOutput() KafkaUserSpecAuthorizationPatchPtrOutput
	ToKafkaUserSpecAuthorizationPatchPtrOutputWithContext(context.Context) KafkaUserSpecAuthorizationPatchPtrOutput
}

type kafkaUserSpecAuthorizationPatchPtrType KafkaUserSpecAuthorizationPatchArgs

func KafkaUserSpecAuthorizationPatchPtr(v *KafkaUserSpecAuthorizationPatchArgs) KafkaUserSpecAuthorizationPatchPtrInput {
	return (*kafkaUserSpecAuthorizationPatchPtrType)(v)
}

func (*kafkaUserSpecAuthorizationPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthorizationPatch)(nil)).Elem()
}

func (i *kafkaUserSpecAuthorizationPatchPtrType) ToKafkaUserSpecAuthorizationPatchPtrOutput() KafkaUserSpecAuthorizationPatchPtrOutput {
	return i.ToKafkaUserSpecAuthorizationPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaUserSpecAuthorizationPatchPtrType) ToKafkaUserSpecAuthorizationPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecAuthorizationPatchPtrOutput)
}

// Authorization rules for this Kafka user.
type KafkaUserSpecAuthorizationPatchOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthorizationPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecAuthorizationPatch)(nil)).Elem()
}

func (o KafkaUserSpecAuthorizationPatchOutput) ToKafkaUserSpecAuthorizationPatchOutput() KafkaUserSpecAuthorizationPatchOutput {
	return o
}

func (o KafkaUserSpecAuthorizationPatchOutput) ToKafkaUserSpecAuthorizationPatchOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationPatchOutput {
	return o
}

func (o KafkaUserSpecAuthorizationPatchOutput) ToKafkaUserSpecAuthorizationPatchPtrOutput() KafkaUserSpecAuthorizationPatchPtrOutput {
	return o.ToKafkaUserSpecAuthorizationPatchPtrOutputWithContext(context.Background())
}

func (o KafkaUserSpecAuthorizationPatchOutput) ToKafkaUserSpecAuthorizationPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserSpecAuthorizationPatch) *KafkaUserSpecAuthorizationPatch {
		return &v
	}).(KafkaUserSpecAuthorizationPatchPtrOutput)
}

// List of ACL rules which should be applied to this user.
func (o KafkaUserSpecAuthorizationPatchOutput) Acls() KafkaUserSpecAuthorizationAclsPatchArrayOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthorizationPatch) []KafkaUserSpecAuthorizationAclsPatch { return v.Acls }).(KafkaUserSpecAuthorizationAclsPatchArrayOutput)
}

// Authorization type. Currently the only supported type is `simple`. `simple` authorization type uses the Kafka Admin API for managing the ACL rules.
func (o KafkaUserSpecAuthorizationPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecAuthorizationPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaUserSpecAuthorizationPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecAuthorizationPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecAuthorizationPatch)(nil)).Elem()
}

func (o KafkaUserSpecAuthorizationPatchPtrOutput) ToKafkaUserSpecAuthorizationPatchPtrOutput() KafkaUserSpecAuthorizationPatchPtrOutput {
	return o
}

func (o KafkaUserSpecAuthorizationPatchPtrOutput) ToKafkaUserSpecAuthorizationPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecAuthorizationPatchPtrOutput {
	return o
}

func (o KafkaUserSpecAuthorizationPatchPtrOutput) Elem() KafkaUserSpecAuthorizationPatchOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthorizationPatch) KafkaUserSpecAuthorizationPatch {
		if v != nil {
			return *v
		}
		var ret KafkaUserSpecAuthorizationPatch
		return ret
	}).(KafkaUserSpecAuthorizationPatchOutput)
}

// List of ACL rules which should be applied to this user.
func (o KafkaUserSpecAuthorizationPatchPtrOutput) Acls() KafkaUserSpecAuthorizationAclsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthorizationPatch) []KafkaUserSpecAuthorizationAclsPatch {
		if v == nil {
			return nil
		}
		return v.Acls
	}).(KafkaUserSpecAuthorizationAclsPatchArrayOutput)
}

// Authorization type. Currently the only supported type is `simple`. `simple` authorization type uses the Kafka Admin API for managing the ACL rules.
func (o KafkaUserSpecAuthorizationPatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecAuthorizationPatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The specification of the user.
type KafkaUserSpecPatch struct {
	Authentication *KafkaUserSpecAuthenticationPatch `pulumi:"authentication"`
	Authorization  *KafkaUserSpecAuthorizationPatch  `pulumi:"authorization"`
	Quotas         *KafkaUserSpecQuotasPatch         `pulumi:"quotas"`
	Template       *KafkaUserSpecTemplatePatch       `pulumi:"template"`
}

// KafkaUserSpecPatchInput is an input type that accepts KafkaUserSpecPatchArgs and KafkaUserSpecPatchOutput values.
// You can construct a concrete instance of `KafkaUserSpecPatchInput` via:
//
//	KafkaUserSpecPatchArgs{...}
type KafkaUserSpecPatchInput interface {
	pulumi.Input

	ToKafkaUserSpecPatchOutput() KafkaUserSpecPatchOutput
	ToKafkaUserSpecPatchOutputWithContext(context.Context) KafkaUserSpecPatchOutput
}

// The specification of the user.
type KafkaUserSpecPatchArgs struct {
	Authentication KafkaUserSpecAuthenticationPatchPtrInput `pulumi:"authentication"`
	Authorization  KafkaUserSpecAuthorizationPatchPtrInput  `pulumi:"authorization"`
	Quotas         KafkaUserSpecQuotasPatchPtrInput         `pulumi:"quotas"`
	Template       KafkaUserSpecTemplatePatchPtrInput       `pulumi:"template"`
}

func (KafkaUserSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecPatch)(nil)).Elem()
}

func (i KafkaUserSpecPatchArgs) ToKafkaUserSpecPatchOutput() KafkaUserSpecPatchOutput {
	return i.ToKafkaUserSpecPatchOutputWithContext(context.Background())
}

func (i KafkaUserSpecPatchArgs) ToKafkaUserSpecPatchOutputWithContext(ctx context.Context) KafkaUserSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecPatchOutput)
}

func (i KafkaUserSpecPatchArgs) ToKafkaUserSpecPatchPtrOutput() KafkaUserSpecPatchPtrOutput {
	return i.ToKafkaUserSpecPatchPtrOutputWithContext(context.Background())
}

func (i KafkaUserSpecPatchArgs) ToKafkaUserSpecPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecPatchOutput).ToKafkaUserSpecPatchPtrOutputWithContext(ctx)
}

// KafkaUserSpecPatchPtrInput is an input type that accepts KafkaUserSpecPatchArgs, KafkaUserSpecPatchPtr and KafkaUserSpecPatchPtrOutput values.
// You can construct a concrete instance of `KafkaUserSpecPatchPtrInput` via:
//
//	        KafkaUserSpecPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaUserSpecPatchPtrInput interface {
	pulumi.Input

	ToKafkaUserSpecPatchPtrOutput() KafkaUserSpecPatchPtrOutput
	ToKafkaUserSpecPatchPtrOutputWithContext(context.Context) KafkaUserSpecPatchPtrOutput
}

type kafkaUserSpecPatchPtrType KafkaUserSpecPatchArgs

func KafkaUserSpecPatchPtr(v *KafkaUserSpecPatchArgs) KafkaUserSpecPatchPtrInput {
	return (*kafkaUserSpecPatchPtrType)(v)
}

func (*kafkaUserSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecPatch)(nil)).Elem()
}

func (i *kafkaUserSpecPatchPtrType) ToKafkaUserSpecPatchPtrOutput() KafkaUserSpecPatchPtrOutput {
	return i.ToKafkaUserSpecPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaUserSpecPatchPtrType) ToKafkaUserSpecPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecPatchPtrOutput)
}

// The specification of the user.
type KafkaUserSpecPatchOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecPatch)(nil)).Elem()
}

func (o KafkaUserSpecPatchOutput) ToKafkaUserSpecPatchOutput() KafkaUserSpecPatchOutput {
	return o
}

func (o KafkaUserSpecPatchOutput) ToKafkaUserSpecPatchOutputWithContext(ctx context.Context) KafkaUserSpecPatchOutput {
	return o
}

func (o KafkaUserSpecPatchOutput) ToKafkaUserSpecPatchPtrOutput() KafkaUserSpecPatchPtrOutput {
	return o.ToKafkaUserSpecPatchPtrOutputWithContext(context.Background())
}

func (o KafkaUserSpecPatchOutput) ToKafkaUserSpecPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserSpecPatch) *KafkaUserSpecPatch {
		return &v
	}).(KafkaUserSpecPatchPtrOutput)
}

func (o KafkaUserSpecPatchOutput) Authentication() KafkaUserSpecAuthenticationPatchPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecPatch) *KafkaUserSpecAuthenticationPatch { return v.Authentication }).(KafkaUserSpecAuthenticationPatchPtrOutput)
}

func (o KafkaUserSpecPatchOutput) Authorization() KafkaUserSpecAuthorizationPatchPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecPatch) *KafkaUserSpecAuthorizationPatch { return v.Authorization }).(KafkaUserSpecAuthorizationPatchPtrOutput)
}

func (o KafkaUserSpecPatchOutput) Quotas() KafkaUserSpecQuotasPatchPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecPatch) *KafkaUserSpecQuotasPatch { return v.Quotas }).(KafkaUserSpecQuotasPatchPtrOutput)
}

func (o KafkaUserSpecPatchOutput) Template() KafkaUserSpecTemplatePatchPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecPatch) *KafkaUserSpecTemplatePatch { return v.Template }).(KafkaUserSpecTemplatePatchPtrOutput)
}

type KafkaUserSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecPatch)(nil)).Elem()
}

func (o KafkaUserSpecPatchPtrOutput) ToKafkaUserSpecPatchPtrOutput() KafkaUserSpecPatchPtrOutput {
	return o
}

func (o KafkaUserSpecPatchPtrOutput) ToKafkaUserSpecPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecPatchPtrOutput {
	return o
}

func (o KafkaUserSpecPatchPtrOutput) Elem() KafkaUserSpecPatchOutput {
	return o.ApplyT(func(v *KafkaUserSpecPatch) KafkaUserSpecPatch {
		if v != nil {
			return *v
		}
		var ret KafkaUserSpecPatch
		return ret
	}).(KafkaUserSpecPatchOutput)
}

func (o KafkaUserSpecPatchPtrOutput) Authentication() KafkaUserSpecAuthenticationPatchPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecPatch) *KafkaUserSpecAuthenticationPatch {
		if v == nil {
			return nil
		}
		return v.Authentication
	}).(KafkaUserSpecAuthenticationPatchPtrOutput)
}

func (o KafkaUserSpecPatchPtrOutput) Authorization() KafkaUserSpecAuthorizationPatchPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecPatch) *KafkaUserSpecAuthorizationPatch {
		if v == nil {
			return nil
		}
		return v.Authorization
	}).(KafkaUserSpecAuthorizationPatchPtrOutput)
}

func (o KafkaUserSpecPatchPtrOutput) Quotas() KafkaUserSpecQuotasPatchPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecPatch) *KafkaUserSpecQuotasPatch {
		if v == nil {
			return nil
		}
		return v.Quotas
	}).(KafkaUserSpecQuotasPatchPtrOutput)
}

func (o KafkaUserSpecPatchPtrOutput) Template() KafkaUserSpecTemplatePatchPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecPatch) *KafkaUserSpecTemplatePatch {
		if v == nil {
			return nil
		}
		return v.Template
	}).(KafkaUserSpecTemplatePatchPtrOutput)
}

// Quotas on requests to control the broker resources used by clients. Network bandwidth and request rate quotas can be enforced.Kafka documentation for Kafka User quotas can be found at http://kafka.apache.org/documentation/#design_quotas.
type KafkaUserSpecQuotas struct {
	// A quota on the maximum bytes per-second that each client group can fetch from a broker before the clients in the group are throttled. Defined on a per-broker basis.
	ConsumerByteRate *int `pulumi:"consumerByteRate"`
	// A quota on the rate at which mutations are accepted for the create topics request, the create partitions request and the delete topics request. The rate is accumulated by the number of partitions created or deleted.
	ControllerMutationRate *float64 `pulumi:"controllerMutationRate"`
	// A quota on the maximum bytes per-second that each client group can publish to a broker before the clients in the group are throttled. Defined on a per-broker basis.
	ProducerByteRate *int `pulumi:"producerByteRate"`
	// A quota on the maximum CPU utilization of each client group as a percentage of network and I/O threads.
	RequestPercentage *int `pulumi:"requestPercentage"`
}

// KafkaUserSpecQuotasInput is an input type that accepts KafkaUserSpecQuotasArgs and KafkaUserSpecQuotasOutput values.
// You can construct a concrete instance of `KafkaUserSpecQuotasInput` via:
//
//	KafkaUserSpecQuotasArgs{...}
type KafkaUserSpecQuotasInput interface {
	pulumi.Input

	ToKafkaUserSpecQuotasOutput() KafkaUserSpecQuotasOutput
	ToKafkaUserSpecQuotasOutputWithContext(context.Context) KafkaUserSpecQuotasOutput
}

// Quotas on requests to control the broker resources used by clients. Network bandwidth and request rate quotas can be enforced.Kafka documentation for Kafka User quotas can be found at http://kafka.apache.org/documentation/#design_quotas.
type KafkaUserSpecQuotasArgs struct {
	// A quota on the maximum bytes per-second that each client group can fetch from a broker before the clients in the group are throttled. Defined on a per-broker basis.
	ConsumerByteRate pulumi.IntPtrInput `pulumi:"consumerByteRate"`
	// A quota on the rate at which mutations are accepted for the create topics request, the create partitions request and the delete topics request. The rate is accumulated by the number of partitions created or deleted.
	ControllerMutationRate pulumi.Float64PtrInput `pulumi:"controllerMutationRate"`
	// A quota on the maximum bytes per-second that each client group can publish to a broker before the clients in the group are throttled. Defined on a per-broker basis.
	ProducerByteRate pulumi.IntPtrInput `pulumi:"producerByteRate"`
	// A quota on the maximum CPU utilization of each client group as a percentage of network and I/O threads.
	RequestPercentage pulumi.IntPtrInput `pulumi:"requestPercentage"`
}

func (KafkaUserSpecQuotasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecQuotas)(nil)).Elem()
}

func (i KafkaUserSpecQuotasArgs) ToKafkaUserSpecQuotasOutput() KafkaUserSpecQuotasOutput {
	return i.ToKafkaUserSpecQuotasOutputWithContext(context.Background())
}

func (i KafkaUserSpecQuotasArgs) ToKafkaUserSpecQuotasOutputWithContext(ctx context.Context) KafkaUserSpecQuotasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecQuotasOutput)
}

func (i KafkaUserSpecQuotasArgs) ToKafkaUserSpecQuotasPtrOutput() KafkaUserSpecQuotasPtrOutput {
	return i.ToKafkaUserSpecQuotasPtrOutputWithContext(context.Background())
}

func (i KafkaUserSpecQuotasArgs) ToKafkaUserSpecQuotasPtrOutputWithContext(ctx context.Context) KafkaUserSpecQuotasPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecQuotasOutput).ToKafkaUserSpecQuotasPtrOutputWithContext(ctx)
}

// KafkaUserSpecQuotasPtrInput is an input type that accepts KafkaUserSpecQuotasArgs, KafkaUserSpecQuotasPtr and KafkaUserSpecQuotasPtrOutput values.
// You can construct a concrete instance of `KafkaUserSpecQuotasPtrInput` via:
//
//	        KafkaUserSpecQuotasArgs{...}
//
//	or:
//
//	        nil
type KafkaUserSpecQuotasPtrInput interface {
	pulumi.Input

	ToKafkaUserSpecQuotasPtrOutput() KafkaUserSpecQuotasPtrOutput
	ToKafkaUserSpecQuotasPtrOutputWithContext(context.Context) KafkaUserSpecQuotasPtrOutput
}

type kafkaUserSpecQuotasPtrType KafkaUserSpecQuotasArgs

func KafkaUserSpecQuotasPtr(v *KafkaUserSpecQuotasArgs) KafkaUserSpecQuotasPtrInput {
	return (*kafkaUserSpecQuotasPtrType)(v)
}

func (*kafkaUserSpecQuotasPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecQuotas)(nil)).Elem()
}

func (i *kafkaUserSpecQuotasPtrType) ToKafkaUserSpecQuotasPtrOutput() KafkaUserSpecQuotasPtrOutput {
	return i.ToKafkaUserSpecQuotasPtrOutputWithContext(context.Background())
}

func (i *kafkaUserSpecQuotasPtrType) ToKafkaUserSpecQuotasPtrOutputWithContext(ctx context.Context) KafkaUserSpecQuotasPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecQuotasPtrOutput)
}

// Quotas on requests to control the broker resources used by clients. Network bandwidth and request rate quotas can be enforced.Kafka documentation for Kafka User quotas can be found at http://kafka.apache.org/documentation/#design_quotas.
type KafkaUserSpecQuotasOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecQuotasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecQuotas)(nil)).Elem()
}

func (o KafkaUserSpecQuotasOutput) ToKafkaUserSpecQuotasOutput() KafkaUserSpecQuotasOutput {
	return o
}

func (o KafkaUserSpecQuotasOutput) ToKafkaUserSpecQuotasOutputWithContext(ctx context.Context) KafkaUserSpecQuotasOutput {
	return o
}

func (o KafkaUserSpecQuotasOutput) ToKafkaUserSpecQuotasPtrOutput() KafkaUserSpecQuotasPtrOutput {
	return o.ToKafkaUserSpecQuotasPtrOutputWithContext(context.Background())
}

func (o KafkaUserSpecQuotasOutput) ToKafkaUserSpecQuotasPtrOutputWithContext(ctx context.Context) KafkaUserSpecQuotasPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserSpecQuotas) *KafkaUserSpecQuotas {
		return &v
	}).(KafkaUserSpecQuotasPtrOutput)
}

// A quota on the maximum bytes per-second that each client group can fetch from a broker before the clients in the group are throttled. Defined on a per-broker basis.
func (o KafkaUserSpecQuotasOutput) ConsumerByteRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecQuotas) *int { return v.ConsumerByteRate }).(pulumi.IntPtrOutput)
}

// A quota on the rate at which mutations are accepted for the create topics request, the create partitions request and the delete topics request. The rate is accumulated by the number of partitions created or deleted.
func (o KafkaUserSpecQuotasOutput) ControllerMutationRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v KafkaUserSpecQuotas) *float64 { return v.ControllerMutationRate }).(pulumi.Float64PtrOutput)
}

// A quota on the maximum bytes per-second that each client group can publish to a broker before the clients in the group are throttled. Defined on a per-broker basis.
func (o KafkaUserSpecQuotasOutput) ProducerByteRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecQuotas) *int { return v.ProducerByteRate }).(pulumi.IntPtrOutput)
}

// A quota on the maximum CPU utilization of each client group as a percentage of network and I/O threads.
func (o KafkaUserSpecQuotasOutput) RequestPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecQuotas) *int { return v.RequestPercentage }).(pulumi.IntPtrOutput)
}

type KafkaUserSpecQuotasPtrOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecQuotasPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecQuotas)(nil)).Elem()
}

func (o KafkaUserSpecQuotasPtrOutput) ToKafkaUserSpecQuotasPtrOutput() KafkaUserSpecQuotasPtrOutput {
	return o
}

func (o KafkaUserSpecQuotasPtrOutput) ToKafkaUserSpecQuotasPtrOutputWithContext(ctx context.Context) KafkaUserSpecQuotasPtrOutput {
	return o
}

func (o KafkaUserSpecQuotasPtrOutput) Elem() KafkaUserSpecQuotasOutput {
	return o.ApplyT(func(v *KafkaUserSpecQuotas) KafkaUserSpecQuotas {
		if v != nil {
			return *v
		}
		var ret KafkaUserSpecQuotas
		return ret
	}).(KafkaUserSpecQuotasOutput)
}

// A quota on the maximum bytes per-second that each client group can fetch from a broker before the clients in the group are throttled. Defined on a per-broker basis.
func (o KafkaUserSpecQuotasPtrOutput) ConsumerByteRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecQuotas) *int {
		if v == nil {
			return nil
		}
		return v.ConsumerByteRate
	}).(pulumi.IntPtrOutput)
}

// A quota on the rate at which mutations are accepted for the create topics request, the create partitions request and the delete topics request. The rate is accumulated by the number of partitions created or deleted.
func (o KafkaUserSpecQuotasPtrOutput) ControllerMutationRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecQuotas) *float64 {
		if v == nil {
			return nil
		}
		return v.ControllerMutationRate
	}).(pulumi.Float64PtrOutput)
}

// A quota on the maximum bytes per-second that each client group can publish to a broker before the clients in the group are throttled. Defined on a per-broker basis.
func (o KafkaUserSpecQuotasPtrOutput) ProducerByteRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecQuotas) *int {
		if v == nil {
			return nil
		}
		return v.ProducerByteRate
	}).(pulumi.IntPtrOutput)
}

// A quota on the maximum CPU utilization of each client group as a percentage of network and I/O threads.
func (o KafkaUserSpecQuotasPtrOutput) RequestPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecQuotas) *int {
		if v == nil {
			return nil
		}
		return v.RequestPercentage
	}).(pulumi.IntPtrOutput)
}

// Quotas on requests to control the broker resources used by clients. Network bandwidth and request rate quotas can be enforced.Kafka documentation for Kafka User quotas can be found at http://kafka.apache.org/documentation/#design_quotas.
type KafkaUserSpecQuotasPatch struct {
	// A quota on the maximum bytes per-second that each client group can fetch from a broker before the clients in the group are throttled. Defined on a per-broker basis.
	ConsumerByteRate *int `pulumi:"consumerByteRate"`
	// A quota on the rate at which mutations are accepted for the create topics request, the create partitions request and the delete topics request. The rate is accumulated by the number of partitions created or deleted.
	ControllerMutationRate *float64 `pulumi:"controllerMutationRate"`
	// A quota on the maximum bytes per-second that each client group can publish to a broker before the clients in the group are throttled. Defined on a per-broker basis.
	ProducerByteRate *int `pulumi:"producerByteRate"`
	// A quota on the maximum CPU utilization of each client group as a percentage of network and I/O threads.
	RequestPercentage *int `pulumi:"requestPercentage"`
}

// KafkaUserSpecQuotasPatchInput is an input type that accepts KafkaUserSpecQuotasPatchArgs and KafkaUserSpecQuotasPatchOutput values.
// You can construct a concrete instance of `KafkaUserSpecQuotasPatchInput` via:
//
//	KafkaUserSpecQuotasPatchArgs{...}
type KafkaUserSpecQuotasPatchInput interface {
	pulumi.Input

	ToKafkaUserSpecQuotasPatchOutput() KafkaUserSpecQuotasPatchOutput
	ToKafkaUserSpecQuotasPatchOutputWithContext(context.Context) KafkaUserSpecQuotasPatchOutput
}

// Quotas on requests to control the broker resources used by clients. Network bandwidth and request rate quotas can be enforced.Kafka documentation for Kafka User quotas can be found at http://kafka.apache.org/documentation/#design_quotas.
type KafkaUserSpecQuotasPatchArgs struct {
	// A quota on the maximum bytes per-second that each client group can fetch from a broker before the clients in the group are throttled. Defined on a per-broker basis.
	ConsumerByteRate pulumi.IntPtrInput `pulumi:"consumerByteRate"`
	// A quota on the rate at which mutations are accepted for the create topics request, the create partitions request and the delete topics request. The rate is accumulated by the number of partitions created or deleted.
	ControllerMutationRate pulumi.Float64PtrInput `pulumi:"controllerMutationRate"`
	// A quota on the maximum bytes per-second that each client group can publish to a broker before the clients in the group are throttled. Defined on a per-broker basis.
	ProducerByteRate pulumi.IntPtrInput `pulumi:"producerByteRate"`
	// A quota on the maximum CPU utilization of each client group as a percentage of network and I/O threads.
	RequestPercentage pulumi.IntPtrInput `pulumi:"requestPercentage"`
}

func (KafkaUserSpecQuotasPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecQuotasPatch)(nil)).Elem()
}

func (i KafkaUserSpecQuotasPatchArgs) ToKafkaUserSpecQuotasPatchOutput() KafkaUserSpecQuotasPatchOutput {
	return i.ToKafkaUserSpecQuotasPatchOutputWithContext(context.Background())
}

func (i KafkaUserSpecQuotasPatchArgs) ToKafkaUserSpecQuotasPatchOutputWithContext(ctx context.Context) KafkaUserSpecQuotasPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecQuotasPatchOutput)
}

func (i KafkaUserSpecQuotasPatchArgs) ToKafkaUserSpecQuotasPatchPtrOutput() KafkaUserSpecQuotasPatchPtrOutput {
	return i.ToKafkaUserSpecQuotasPatchPtrOutputWithContext(context.Background())
}

func (i KafkaUserSpecQuotasPatchArgs) ToKafkaUserSpecQuotasPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecQuotasPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecQuotasPatchOutput).ToKafkaUserSpecQuotasPatchPtrOutputWithContext(ctx)
}

// KafkaUserSpecQuotasPatchPtrInput is an input type that accepts KafkaUserSpecQuotasPatchArgs, KafkaUserSpecQuotasPatchPtr and KafkaUserSpecQuotasPatchPtrOutput values.
// You can construct a concrete instance of `KafkaUserSpecQuotasPatchPtrInput` via:
//
//	        KafkaUserSpecQuotasPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaUserSpecQuotasPatchPtrInput interface {
	pulumi.Input

	ToKafkaUserSpecQuotasPatchPtrOutput() KafkaUserSpecQuotasPatchPtrOutput
	ToKafkaUserSpecQuotasPatchPtrOutputWithContext(context.Context) KafkaUserSpecQuotasPatchPtrOutput
}

type kafkaUserSpecQuotasPatchPtrType KafkaUserSpecQuotasPatchArgs

func KafkaUserSpecQuotasPatchPtr(v *KafkaUserSpecQuotasPatchArgs) KafkaUserSpecQuotasPatchPtrInput {
	return (*kafkaUserSpecQuotasPatchPtrType)(v)
}

func (*kafkaUserSpecQuotasPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecQuotasPatch)(nil)).Elem()
}

func (i *kafkaUserSpecQuotasPatchPtrType) ToKafkaUserSpecQuotasPatchPtrOutput() KafkaUserSpecQuotasPatchPtrOutput {
	return i.ToKafkaUserSpecQuotasPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaUserSpecQuotasPatchPtrType) ToKafkaUserSpecQuotasPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecQuotasPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecQuotasPatchPtrOutput)
}

// Quotas on requests to control the broker resources used by clients. Network bandwidth and request rate quotas can be enforced.Kafka documentation for Kafka User quotas can be found at http://kafka.apache.org/documentation/#design_quotas.
type KafkaUserSpecQuotasPatchOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecQuotasPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecQuotasPatch)(nil)).Elem()
}

func (o KafkaUserSpecQuotasPatchOutput) ToKafkaUserSpecQuotasPatchOutput() KafkaUserSpecQuotasPatchOutput {
	return o
}

func (o KafkaUserSpecQuotasPatchOutput) ToKafkaUserSpecQuotasPatchOutputWithContext(ctx context.Context) KafkaUserSpecQuotasPatchOutput {
	return o
}

func (o KafkaUserSpecQuotasPatchOutput) ToKafkaUserSpecQuotasPatchPtrOutput() KafkaUserSpecQuotasPatchPtrOutput {
	return o.ToKafkaUserSpecQuotasPatchPtrOutputWithContext(context.Background())
}

func (o KafkaUserSpecQuotasPatchOutput) ToKafkaUserSpecQuotasPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecQuotasPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserSpecQuotasPatch) *KafkaUserSpecQuotasPatch {
		return &v
	}).(KafkaUserSpecQuotasPatchPtrOutput)
}

// A quota on the maximum bytes per-second that each client group can fetch from a broker before the clients in the group are throttled. Defined on a per-broker basis.
func (o KafkaUserSpecQuotasPatchOutput) ConsumerByteRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecQuotasPatch) *int { return v.ConsumerByteRate }).(pulumi.IntPtrOutput)
}

// A quota on the rate at which mutations are accepted for the create topics request, the create partitions request and the delete topics request. The rate is accumulated by the number of partitions created or deleted.
func (o KafkaUserSpecQuotasPatchOutput) ControllerMutationRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v KafkaUserSpecQuotasPatch) *float64 { return v.ControllerMutationRate }).(pulumi.Float64PtrOutput)
}

// A quota on the maximum bytes per-second that each client group can publish to a broker before the clients in the group are throttled. Defined on a per-broker basis.
func (o KafkaUserSpecQuotasPatchOutput) ProducerByteRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecQuotasPatch) *int { return v.ProducerByteRate }).(pulumi.IntPtrOutput)
}

// A quota on the maximum CPU utilization of each client group as a percentage of network and I/O threads.
func (o KafkaUserSpecQuotasPatchOutput) RequestPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecQuotasPatch) *int { return v.RequestPercentage }).(pulumi.IntPtrOutput)
}

type KafkaUserSpecQuotasPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecQuotasPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecQuotasPatch)(nil)).Elem()
}

func (o KafkaUserSpecQuotasPatchPtrOutput) ToKafkaUserSpecQuotasPatchPtrOutput() KafkaUserSpecQuotasPatchPtrOutput {
	return o
}

func (o KafkaUserSpecQuotasPatchPtrOutput) ToKafkaUserSpecQuotasPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecQuotasPatchPtrOutput {
	return o
}

func (o KafkaUserSpecQuotasPatchPtrOutput) Elem() KafkaUserSpecQuotasPatchOutput {
	return o.ApplyT(func(v *KafkaUserSpecQuotasPatch) KafkaUserSpecQuotasPatch {
		if v != nil {
			return *v
		}
		var ret KafkaUserSpecQuotasPatch
		return ret
	}).(KafkaUserSpecQuotasPatchOutput)
}

// A quota on the maximum bytes per-second that each client group can fetch from a broker before the clients in the group are throttled. Defined on a per-broker basis.
func (o KafkaUserSpecQuotasPatchPtrOutput) ConsumerByteRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecQuotasPatch) *int {
		if v == nil {
			return nil
		}
		return v.ConsumerByteRate
	}).(pulumi.IntPtrOutput)
}

// A quota on the rate at which mutations are accepted for the create topics request, the create partitions request and the delete topics request. The rate is accumulated by the number of partitions created or deleted.
func (o KafkaUserSpecQuotasPatchPtrOutput) ControllerMutationRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecQuotasPatch) *float64 {
		if v == nil {
			return nil
		}
		return v.ControllerMutationRate
	}).(pulumi.Float64PtrOutput)
}

// A quota on the maximum bytes per-second that each client group can publish to a broker before the clients in the group are throttled. Defined on a per-broker basis.
func (o KafkaUserSpecQuotasPatchPtrOutput) ProducerByteRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecQuotasPatch) *int {
		if v == nil {
			return nil
		}
		return v.ProducerByteRate
	}).(pulumi.IntPtrOutput)
}

// A quota on the maximum CPU utilization of each client group as a percentage of network and I/O threads.
func (o KafkaUserSpecQuotasPatchPtrOutput) RequestPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecQuotasPatch) *int {
		if v == nil {
			return nil
		}
		return v.RequestPercentage
	}).(pulumi.IntPtrOutput)
}

// Template to specify how Kafka User `Secrets` are generated.
type KafkaUserSpecTemplate struct {
	Secret *KafkaUserSpecTemplateSecret `pulumi:"secret"`
}

// KafkaUserSpecTemplateInput is an input type that accepts KafkaUserSpecTemplateArgs and KafkaUserSpecTemplateOutput values.
// You can construct a concrete instance of `KafkaUserSpecTemplateInput` via:
//
//	KafkaUserSpecTemplateArgs{...}
type KafkaUserSpecTemplateInput interface {
	pulumi.Input

	ToKafkaUserSpecTemplateOutput() KafkaUserSpecTemplateOutput
	ToKafkaUserSpecTemplateOutputWithContext(context.Context) KafkaUserSpecTemplateOutput
}

// Template to specify how Kafka User `Secrets` are generated.
type KafkaUserSpecTemplateArgs struct {
	Secret KafkaUserSpecTemplateSecretPtrInput `pulumi:"secret"`
}

func (KafkaUserSpecTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecTemplate)(nil)).Elem()
}

func (i KafkaUserSpecTemplateArgs) ToKafkaUserSpecTemplateOutput() KafkaUserSpecTemplateOutput {
	return i.ToKafkaUserSpecTemplateOutputWithContext(context.Background())
}

func (i KafkaUserSpecTemplateArgs) ToKafkaUserSpecTemplateOutputWithContext(ctx context.Context) KafkaUserSpecTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecTemplateOutput)
}

func (i KafkaUserSpecTemplateArgs) ToKafkaUserSpecTemplatePtrOutput() KafkaUserSpecTemplatePtrOutput {
	return i.ToKafkaUserSpecTemplatePtrOutputWithContext(context.Background())
}

func (i KafkaUserSpecTemplateArgs) ToKafkaUserSpecTemplatePtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecTemplateOutput).ToKafkaUserSpecTemplatePtrOutputWithContext(ctx)
}

// KafkaUserSpecTemplatePtrInput is an input type that accepts KafkaUserSpecTemplateArgs, KafkaUserSpecTemplatePtr and KafkaUserSpecTemplatePtrOutput values.
// You can construct a concrete instance of `KafkaUserSpecTemplatePtrInput` via:
//
//	        KafkaUserSpecTemplateArgs{...}
//
//	or:
//
//	        nil
type KafkaUserSpecTemplatePtrInput interface {
	pulumi.Input

	ToKafkaUserSpecTemplatePtrOutput() KafkaUserSpecTemplatePtrOutput
	ToKafkaUserSpecTemplatePtrOutputWithContext(context.Context) KafkaUserSpecTemplatePtrOutput
}

type kafkaUserSpecTemplatePtrType KafkaUserSpecTemplateArgs

func KafkaUserSpecTemplatePtr(v *KafkaUserSpecTemplateArgs) KafkaUserSpecTemplatePtrInput {
	return (*kafkaUserSpecTemplatePtrType)(v)
}

func (*kafkaUserSpecTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecTemplate)(nil)).Elem()
}

func (i *kafkaUserSpecTemplatePtrType) ToKafkaUserSpecTemplatePtrOutput() KafkaUserSpecTemplatePtrOutput {
	return i.ToKafkaUserSpecTemplatePtrOutputWithContext(context.Background())
}

func (i *kafkaUserSpecTemplatePtrType) ToKafkaUserSpecTemplatePtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecTemplatePtrOutput)
}

// Template to specify how Kafka User `Secrets` are generated.
type KafkaUserSpecTemplateOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecTemplate)(nil)).Elem()
}

func (o KafkaUserSpecTemplateOutput) ToKafkaUserSpecTemplateOutput() KafkaUserSpecTemplateOutput {
	return o
}

func (o KafkaUserSpecTemplateOutput) ToKafkaUserSpecTemplateOutputWithContext(ctx context.Context) KafkaUserSpecTemplateOutput {
	return o
}

func (o KafkaUserSpecTemplateOutput) ToKafkaUserSpecTemplatePtrOutput() KafkaUserSpecTemplatePtrOutput {
	return o.ToKafkaUserSpecTemplatePtrOutputWithContext(context.Background())
}

func (o KafkaUserSpecTemplateOutput) ToKafkaUserSpecTemplatePtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserSpecTemplate) *KafkaUserSpecTemplate {
		return &v
	}).(KafkaUserSpecTemplatePtrOutput)
}

func (o KafkaUserSpecTemplateOutput) Secret() KafkaUserSpecTemplateSecretPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecTemplate) *KafkaUserSpecTemplateSecret { return v.Secret }).(KafkaUserSpecTemplateSecretPtrOutput)
}

type KafkaUserSpecTemplatePtrOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecTemplate)(nil)).Elem()
}

func (o KafkaUserSpecTemplatePtrOutput) ToKafkaUserSpecTemplatePtrOutput() KafkaUserSpecTemplatePtrOutput {
	return o
}

func (o KafkaUserSpecTemplatePtrOutput) ToKafkaUserSpecTemplatePtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplatePtrOutput {
	return o
}

func (o KafkaUserSpecTemplatePtrOutput) Elem() KafkaUserSpecTemplateOutput {
	return o.ApplyT(func(v *KafkaUserSpecTemplate) KafkaUserSpecTemplate {
		if v != nil {
			return *v
		}
		var ret KafkaUserSpecTemplate
		return ret
	}).(KafkaUserSpecTemplateOutput)
}

func (o KafkaUserSpecTemplatePtrOutput) Secret() KafkaUserSpecTemplateSecretPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecTemplate) *KafkaUserSpecTemplateSecret {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(KafkaUserSpecTemplateSecretPtrOutput)
}

// Template to specify how Kafka User `Secrets` are generated.
type KafkaUserSpecTemplatePatch struct {
	Secret *KafkaUserSpecTemplateSecretPatch `pulumi:"secret"`
}

// KafkaUserSpecTemplatePatchInput is an input type that accepts KafkaUserSpecTemplatePatchArgs and KafkaUserSpecTemplatePatchOutput values.
// You can construct a concrete instance of `KafkaUserSpecTemplatePatchInput` via:
//
//	KafkaUserSpecTemplatePatchArgs{...}
type KafkaUserSpecTemplatePatchInput interface {
	pulumi.Input

	ToKafkaUserSpecTemplatePatchOutput() KafkaUserSpecTemplatePatchOutput
	ToKafkaUserSpecTemplatePatchOutputWithContext(context.Context) KafkaUserSpecTemplatePatchOutput
}

// Template to specify how Kafka User `Secrets` are generated.
type KafkaUserSpecTemplatePatchArgs struct {
	Secret KafkaUserSpecTemplateSecretPatchPtrInput `pulumi:"secret"`
}

func (KafkaUserSpecTemplatePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecTemplatePatch)(nil)).Elem()
}

func (i KafkaUserSpecTemplatePatchArgs) ToKafkaUserSpecTemplatePatchOutput() KafkaUserSpecTemplatePatchOutput {
	return i.ToKafkaUserSpecTemplatePatchOutputWithContext(context.Background())
}

func (i KafkaUserSpecTemplatePatchArgs) ToKafkaUserSpecTemplatePatchOutputWithContext(ctx context.Context) KafkaUserSpecTemplatePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecTemplatePatchOutput)
}

func (i KafkaUserSpecTemplatePatchArgs) ToKafkaUserSpecTemplatePatchPtrOutput() KafkaUserSpecTemplatePatchPtrOutput {
	return i.ToKafkaUserSpecTemplatePatchPtrOutputWithContext(context.Background())
}

func (i KafkaUserSpecTemplatePatchArgs) ToKafkaUserSpecTemplatePatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecTemplatePatchOutput).ToKafkaUserSpecTemplatePatchPtrOutputWithContext(ctx)
}

// KafkaUserSpecTemplatePatchPtrInput is an input type that accepts KafkaUserSpecTemplatePatchArgs, KafkaUserSpecTemplatePatchPtr and KafkaUserSpecTemplatePatchPtrOutput values.
// You can construct a concrete instance of `KafkaUserSpecTemplatePatchPtrInput` via:
//
//	        KafkaUserSpecTemplatePatchArgs{...}
//
//	or:
//
//	        nil
type KafkaUserSpecTemplatePatchPtrInput interface {
	pulumi.Input

	ToKafkaUserSpecTemplatePatchPtrOutput() KafkaUserSpecTemplatePatchPtrOutput
	ToKafkaUserSpecTemplatePatchPtrOutputWithContext(context.Context) KafkaUserSpecTemplatePatchPtrOutput
}

type kafkaUserSpecTemplatePatchPtrType KafkaUserSpecTemplatePatchArgs

func KafkaUserSpecTemplatePatchPtr(v *KafkaUserSpecTemplatePatchArgs) KafkaUserSpecTemplatePatchPtrInput {
	return (*kafkaUserSpecTemplatePatchPtrType)(v)
}

func (*kafkaUserSpecTemplatePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecTemplatePatch)(nil)).Elem()
}

func (i *kafkaUserSpecTemplatePatchPtrType) ToKafkaUserSpecTemplatePatchPtrOutput() KafkaUserSpecTemplatePatchPtrOutput {
	return i.ToKafkaUserSpecTemplatePatchPtrOutputWithContext(context.Background())
}

func (i *kafkaUserSpecTemplatePatchPtrType) ToKafkaUserSpecTemplatePatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecTemplatePatchPtrOutput)
}

// Template to specify how Kafka User `Secrets` are generated.
type KafkaUserSpecTemplatePatchOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecTemplatePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecTemplatePatch)(nil)).Elem()
}

func (o KafkaUserSpecTemplatePatchOutput) ToKafkaUserSpecTemplatePatchOutput() KafkaUserSpecTemplatePatchOutput {
	return o
}

func (o KafkaUserSpecTemplatePatchOutput) ToKafkaUserSpecTemplatePatchOutputWithContext(ctx context.Context) KafkaUserSpecTemplatePatchOutput {
	return o
}

func (o KafkaUserSpecTemplatePatchOutput) ToKafkaUserSpecTemplatePatchPtrOutput() KafkaUserSpecTemplatePatchPtrOutput {
	return o.ToKafkaUserSpecTemplatePatchPtrOutputWithContext(context.Background())
}

func (o KafkaUserSpecTemplatePatchOutput) ToKafkaUserSpecTemplatePatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplatePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserSpecTemplatePatch) *KafkaUserSpecTemplatePatch {
		return &v
	}).(KafkaUserSpecTemplatePatchPtrOutput)
}

func (o KafkaUserSpecTemplatePatchOutput) Secret() KafkaUserSpecTemplateSecretPatchPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecTemplatePatch) *KafkaUserSpecTemplateSecretPatch { return v.Secret }).(KafkaUserSpecTemplateSecretPatchPtrOutput)
}

type KafkaUserSpecTemplatePatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecTemplatePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecTemplatePatch)(nil)).Elem()
}

func (o KafkaUserSpecTemplatePatchPtrOutput) ToKafkaUserSpecTemplatePatchPtrOutput() KafkaUserSpecTemplatePatchPtrOutput {
	return o
}

func (o KafkaUserSpecTemplatePatchPtrOutput) ToKafkaUserSpecTemplatePatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplatePatchPtrOutput {
	return o
}

func (o KafkaUserSpecTemplatePatchPtrOutput) Elem() KafkaUserSpecTemplatePatchOutput {
	return o.ApplyT(func(v *KafkaUserSpecTemplatePatch) KafkaUserSpecTemplatePatch {
		if v != nil {
			return *v
		}
		var ret KafkaUserSpecTemplatePatch
		return ret
	}).(KafkaUserSpecTemplatePatchOutput)
}

func (o KafkaUserSpecTemplatePatchPtrOutput) Secret() KafkaUserSpecTemplateSecretPatchPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecTemplatePatch) *KafkaUserSpecTemplateSecretPatch {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(KafkaUserSpecTemplateSecretPatchPtrOutput)
}

// Template for KafkaUser resources. The template allows users to specify how the `Secret` with password or TLS certificates is generated.
type KafkaUserSpecTemplateSecret struct {
	Metadata *KafkaUserSpecTemplateSecretMetadata `pulumi:"metadata"`
}

// KafkaUserSpecTemplateSecretInput is an input type that accepts KafkaUserSpecTemplateSecretArgs and KafkaUserSpecTemplateSecretOutput values.
// You can construct a concrete instance of `KafkaUserSpecTemplateSecretInput` via:
//
//	KafkaUserSpecTemplateSecretArgs{...}
type KafkaUserSpecTemplateSecretInput interface {
	pulumi.Input

	ToKafkaUserSpecTemplateSecretOutput() KafkaUserSpecTemplateSecretOutput
	ToKafkaUserSpecTemplateSecretOutputWithContext(context.Context) KafkaUserSpecTemplateSecretOutput
}

// Template for KafkaUser resources. The template allows users to specify how the `Secret` with password or TLS certificates is generated.
type KafkaUserSpecTemplateSecretArgs struct {
	Metadata KafkaUserSpecTemplateSecretMetadataPtrInput `pulumi:"metadata"`
}

func (KafkaUserSpecTemplateSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecTemplateSecret)(nil)).Elem()
}

func (i KafkaUserSpecTemplateSecretArgs) ToKafkaUserSpecTemplateSecretOutput() KafkaUserSpecTemplateSecretOutput {
	return i.ToKafkaUserSpecTemplateSecretOutputWithContext(context.Background())
}

func (i KafkaUserSpecTemplateSecretArgs) ToKafkaUserSpecTemplateSecretOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecTemplateSecretOutput)
}

func (i KafkaUserSpecTemplateSecretArgs) ToKafkaUserSpecTemplateSecretPtrOutput() KafkaUserSpecTemplateSecretPtrOutput {
	return i.ToKafkaUserSpecTemplateSecretPtrOutputWithContext(context.Background())
}

func (i KafkaUserSpecTemplateSecretArgs) ToKafkaUserSpecTemplateSecretPtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecTemplateSecretOutput).ToKafkaUserSpecTemplateSecretPtrOutputWithContext(ctx)
}

// KafkaUserSpecTemplateSecretPtrInput is an input type that accepts KafkaUserSpecTemplateSecretArgs, KafkaUserSpecTemplateSecretPtr and KafkaUserSpecTemplateSecretPtrOutput values.
// You can construct a concrete instance of `KafkaUserSpecTemplateSecretPtrInput` via:
//
//	        KafkaUserSpecTemplateSecretArgs{...}
//
//	or:
//
//	        nil
type KafkaUserSpecTemplateSecretPtrInput interface {
	pulumi.Input

	ToKafkaUserSpecTemplateSecretPtrOutput() KafkaUserSpecTemplateSecretPtrOutput
	ToKafkaUserSpecTemplateSecretPtrOutputWithContext(context.Context) KafkaUserSpecTemplateSecretPtrOutput
}

type kafkaUserSpecTemplateSecretPtrType KafkaUserSpecTemplateSecretArgs

func KafkaUserSpecTemplateSecretPtr(v *KafkaUserSpecTemplateSecretArgs) KafkaUserSpecTemplateSecretPtrInput {
	return (*kafkaUserSpecTemplateSecretPtrType)(v)
}

func (*kafkaUserSpecTemplateSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecTemplateSecret)(nil)).Elem()
}

func (i *kafkaUserSpecTemplateSecretPtrType) ToKafkaUserSpecTemplateSecretPtrOutput() KafkaUserSpecTemplateSecretPtrOutput {
	return i.ToKafkaUserSpecTemplateSecretPtrOutputWithContext(context.Background())
}

func (i *kafkaUserSpecTemplateSecretPtrType) ToKafkaUserSpecTemplateSecretPtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecTemplateSecretPtrOutput)
}

// Template for KafkaUser resources. The template allows users to specify how the `Secret` with password or TLS certificates is generated.
type KafkaUserSpecTemplateSecretOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecTemplateSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecTemplateSecret)(nil)).Elem()
}

func (o KafkaUserSpecTemplateSecretOutput) ToKafkaUserSpecTemplateSecretOutput() KafkaUserSpecTemplateSecretOutput {
	return o
}

func (o KafkaUserSpecTemplateSecretOutput) ToKafkaUserSpecTemplateSecretOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretOutput {
	return o
}

func (o KafkaUserSpecTemplateSecretOutput) ToKafkaUserSpecTemplateSecretPtrOutput() KafkaUserSpecTemplateSecretPtrOutput {
	return o.ToKafkaUserSpecTemplateSecretPtrOutputWithContext(context.Background())
}

func (o KafkaUserSpecTemplateSecretOutput) ToKafkaUserSpecTemplateSecretPtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserSpecTemplateSecret) *KafkaUserSpecTemplateSecret {
		return &v
	}).(KafkaUserSpecTemplateSecretPtrOutput)
}

func (o KafkaUserSpecTemplateSecretOutput) Metadata() KafkaUserSpecTemplateSecretMetadataPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecTemplateSecret) *KafkaUserSpecTemplateSecretMetadata { return v.Metadata }).(KafkaUserSpecTemplateSecretMetadataPtrOutput)
}

type KafkaUserSpecTemplateSecretPtrOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecTemplateSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecTemplateSecret)(nil)).Elem()
}

func (o KafkaUserSpecTemplateSecretPtrOutput) ToKafkaUserSpecTemplateSecretPtrOutput() KafkaUserSpecTemplateSecretPtrOutput {
	return o
}

func (o KafkaUserSpecTemplateSecretPtrOutput) ToKafkaUserSpecTemplateSecretPtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretPtrOutput {
	return o
}

func (o KafkaUserSpecTemplateSecretPtrOutput) Elem() KafkaUserSpecTemplateSecretOutput {
	return o.ApplyT(func(v *KafkaUserSpecTemplateSecret) KafkaUserSpecTemplateSecret {
		if v != nil {
			return *v
		}
		var ret KafkaUserSpecTemplateSecret
		return ret
	}).(KafkaUserSpecTemplateSecretOutput)
}

func (o KafkaUserSpecTemplateSecretPtrOutput) Metadata() KafkaUserSpecTemplateSecretMetadataPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecTemplateSecret) *KafkaUserSpecTemplateSecretMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaUserSpecTemplateSecretMetadataPtrOutput)
}

// Metadata applied to the resource.
type KafkaUserSpecTemplateSecretMetadata struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaUserSpecTemplateSecretMetadataInput is an input type that accepts KafkaUserSpecTemplateSecretMetadataArgs and KafkaUserSpecTemplateSecretMetadataOutput values.
// You can construct a concrete instance of `KafkaUserSpecTemplateSecretMetadataInput` via:
//
//	KafkaUserSpecTemplateSecretMetadataArgs{...}
type KafkaUserSpecTemplateSecretMetadataInput interface {
	pulumi.Input

	ToKafkaUserSpecTemplateSecretMetadataOutput() KafkaUserSpecTemplateSecretMetadataOutput
	ToKafkaUserSpecTemplateSecretMetadataOutputWithContext(context.Context) KafkaUserSpecTemplateSecretMetadataOutput
}

// Metadata applied to the resource.
type KafkaUserSpecTemplateSecretMetadataArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaUserSpecTemplateSecretMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecTemplateSecretMetadata)(nil)).Elem()
}

func (i KafkaUserSpecTemplateSecretMetadataArgs) ToKafkaUserSpecTemplateSecretMetadataOutput() KafkaUserSpecTemplateSecretMetadataOutput {
	return i.ToKafkaUserSpecTemplateSecretMetadataOutputWithContext(context.Background())
}

func (i KafkaUserSpecTemplateSecretMetadataArgs) ToKafkaUserSpecTemplateSecretMetadataOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecTemplateSecretMetadataOutput)
}

func (i KafkaUserSpecTemplateSecretMetadataArgs) ToKafkaUserSpecTemplateSecretMetadataPtrOutput() KafkaUserSpecTemplateSecretMetadataPtrOutput {
	return i.ToKafkaUserSpecTemplateSecretMetadataPtrOutputWithContext(context.Background())
}

func (i KafkaUserSpecTemplateSecretMetadataArgs) ToKafkaUserSpecTemplateSecretMetadataPtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecTemplateSecretMetadataOutput).ToKafkaUserSpecTemplateSecretMetadataPtrOutputWithContext(ctx)
}

// KafkaUserSpecTemplateSecretMetadataPtrInput is an input type that accepts KafkaUserSpecTemplateSecretMetadataArgs, KafkaUserSpecTemplateSecretMetadataPtr and KafkaUserSpecTemplateSecretMetadataPtrOutput values.
// You can construct a concrete instance of `KafkaUserSpecTemplateSecretMetadataPtrInput` via:
//
//	        KafkaUserSpecTemplateSecretMetadataArgs{...}
//
//	or:
//
//	        nil
type KafkaUserSpecTemplateSecretMetadataPtrInput interface {
	pulumi.Input

	ToKafkaUserSpecTemplateSecretMetadataPtrOutput() KafkaUserSpecTemplateSecretMetadataPtrOutput
	ToKafkaUserSpecTemplateSecretMetadataPtrOutputWithContext(context.Context) KafkaUserSpecTemplateSecretMetadataPtrOutput
}

type kafkaUserSpecTemplateSecretMetadataPtrType KafkaUserSpecTemplateSecretMetadataArgs

func KafkaUserSpecTemplateSecretMetadataPtr(v *KafkaUserSpecTemplateSecretMetadataArgs) KafkaUserSpecTemplateSecretMetadataPtrInput {
	return (*kafkaUserSpecTemplateSecretMetadataPtrType)(v)
}

func (*kafkaUserSpecTemplateSecretMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecTemplateSecretMetadata)(nil)).Elem()
}

func (i *kafkaUserSpecTemplateSecretMetadataPtrType) ToKafkaUserSpecTemplateSecretMetadataPtrOutput() KafkaUserSpecTemplateSecretMetadataPtrOutput {
	return i.ToKafkaUserSpecTemplateSecretMetadataPtrOutputWithContext(context.Background())
}

func (i *kafkaUserSpecTemplateSecretMetadataPtrType) ToKafkaUserSpecTemplateSecretMetadataPtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecTemplateSecretMetadataPtrOutput)
}

// Metadata applied to the resource.
type KafkaUserSpecTemplateSecretMetadataOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecTemplateSecretMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecTemplateSecretMetadata)(nil)).Elem()
}

func (o KafkaUserSpecTemplateSecretMetadataOutput) ToKafkaUserSpecTemplateSecretMetadataOutput() KafkaUserSpecTemplateSecretMetadataOutput {
	return o
}

func (o KafkaUserSpecTemplateSecretMetadataOutput) ToKafkaUserSpecTemplateSecretMetadataOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretMetadataOutput {
	return o
}

func (o KafkaUserSpecTemplateSecretMetadataOutput) ToKafkaUserSpecTemplateSecretMetadataPtrOutput() KafkaUserSpecTemplateSecretMetadataPtrOutput {
	return o.ToKafkaUserSpecTemplateSecretMetadataPtrOutputWithContext(context.Background())
}

func (o KafkaUserSpecTemplateSecretMetadataOutput) ToKafkaUserSpecTemplateSecretMetadataPtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserSpecTemplateSecretMetadata) *KafkaUserSpecTemplateSecretMetadata {
		return &v
	}).(KafkaUserSpecTemplateSecretMetadataPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaUserSpecTemplateSecretMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaUserSpecTemplateSecretMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaUserSpecTemplateSecretMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaUserSpecTemplateSecretMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type KafkaUserSpecTemplateSecretMetadataPtrOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecTemplateSecretMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecTemplateSecretMetadata)(nil)).Elem()
}

func (o KafkaUserSpecTemplateSecretMetadataPtrOutput) ToKafkaUserSpecTemplateSecretMetadataPtrOutput() KafkaUserSpecTemplateSecretMetadataPtrOutput {
	return o
}

func (o KafkaUserSpecTemplateSecretMetadataPtrOutput) ToKafkaUserSpecTemplateSecretMetadataPtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretMetadataPtrOutput {
	return o
}

func (o KafkaUserSpecTemplateSecretMetadataPtrOutput) Elem() KafkaUserSpecTemplateSecretMetadataOutput {
	return o.ApplyT(func(v *KafkaUserSpecTemplateSecretMetadata) KafkaUserSpecTemplateSecretMetadata {
		if v != nil {
			return *v
		}
		var ret KafkaUserSpecTemplateSecretMetadata
		return ret
	}).(KafkaUserSpecTemplateSecretMetadataOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaUserSpecTemplateSecretMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaUserSpecTemplateSecretMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaUserSpecTemplateSecretMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaUserSpecTemplateSecretMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Metadata applied to the resource.
type KafkaUserSpecTemplateSecretMetadataPatch struct {
	// Annotations added to the Kubernetes resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels map[string]string `pulumi:"labels"`
}

// KafkaUserSpecTemplateSecretMetadataPatchInput is an input type that accepts KafkaUserSpecTemplateSecretMetadataPatchArgs and KafkaUserSpecTemplateSecretMetadataPatchOutput values.
// You can construct a concrete instance of `KafkaUserSpecTemplateSecretMetadataPatchInput` via:
//
//	KafkaUserSpecTemplateSecretMetadataPatchArgs{...}
type KafkaUserSpecTemplateSecretMetadataPatchInput interface {
	pulumi.Input

	ToKafkaUserSpecTemplateSecretMetadataPatchOutput() KafkaUserSpecTemplateSecretMetadataPatchOutput
	ToKafkaUserSpecTemplateSecretMetadataPatchOutputWithContext(context.Context) KafkaUserSpecTemplateSecretMetadataPatchOutput
}

// Metadata applied to the resource.
type KafkaUserSpecTemplateSecretMetadataPatchArgs struct {
	// Annotations added to the Kubernetes resource.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels added to the Kubernetes resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (KafkaUserSpecTemplateSecretMetadataPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecTemplateSecretMetadataPatch)(nil)).Elem()
}

func (i KafkaUserSpecTemplateSecretMetadataPatchArgs) ToKafkaUserSpecTemplateSecretMetadataPatchOutput() KafkaUserSpecTemplateSecretMetadataPatchOutput {
	return i.ToKafkaUserSpecTemplateSecretMetadataPatchOutputWithContext(context.Background())
}

func (i KafkaUserSpecTemplateSecretMetadataPatchArgs) ToKafkaUserSpecTemplateSecretMetadataPatchOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretMetadataPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecTemplateSecretMetadataPatchOutput)
}

func (i KafkaUserSpecTemplateSecretMetadataPatchArgs) ToKafkaUserSpecTemplateSecretMetadataPatchPtrOutput() KafkaUserSpecTemplateSecretMetadataPatchPtrOutput {
	return i.ToKafkaUserSpecTemplateSecretMetadataPatchPtrOutputWithContext(context.Background())
}

func (i KafkaUserSpecTemplateSecretMetadataPatchArgs) ToKafkaUserSpecTemplateSecretMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecTemplateSecretMetadataPatchOutput).ToKafkaUserSpecTemplateSecretMetadataPatchPtrOutputWithContext(ctx)
}

// KafkaUserSpecTemplateSecretMetadataPatchPtrInput is an input type that accepts KafkaUserSpecTemplateSecretMetadataPatchArgs, KafkaUserSpecTemplateSecretMetadataPatchPtr and KafkaUserSpecTemplateSecretMetadataPatchPtrOutput values.
// You can construct a concrete instance of `KafkaUserSpecTemplateSecretMetadataPatchPtrInput` via:
//
//	        KafkaUserSpecTemplateSecretMetadataPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaUserSpecTemplateSecretMetadataPatchPtrInput interface {
	pulumi.Input

	ToKafkaUserSpecTemplateSecretMetadataPatchPtrOutput() KafkaUserSpecTemplateSecretMetadataPatchPtrOutput
	ToKafkaUserSpecTemplateSecretMetadataPatchPtrOutputWithContext(context.Context) KafkaUserSpecTemplateSecretMetadataPatchPtrOutput
}

type kafkaUserSpecTemplateSecretMetadataPatchPtrType KafkaUserSpecTemplateSecretMetadataPatchArgs

func KafkaUserSpecTemplateSecretMetadataPatchPtr(v *KafkaUserSpecTemplateSecretMetadataPatchArgs) KafkaUserSpecTemplateSecretMetadataPatchPtrInput {
	return (*kafkaUserSpecTemplateSecretMetadataPatchPtrType)(v)
}

func (*kafkaUserSpecTemplateSecretMetadataPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecTemplateSecretMetadataPatch)(nil)).Elem()
}

func (i *kafkaUserSpecTemplateSecretMetadataPatchPtrType) ToKafkaUserSpecTemplateSecretMetadataPatchPtrOutput() KafkaUserSpecTemplateSecretMetadataPatchPtrOutput {
	return i.ToKafkaUserSpecTemplateSecretMetadataPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaUserSpecTemplateSecretMetadataPatchPtrType) ToKafkaUserSpecTemplateSecretMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecTemplateSecretMetadataPatchPtrOutput)
}

// Metadata applied to the resource.
type KafkaUserSpecTemplateSecretMetadataPatchOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecTemplateSecretMetadataPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecTemplateSecretMetadataPatch)(nil)).Elem()
}

func (o KafkaUserSpecTemplateSecretMetadataPatchOutput) ToKafkaUserSpecTemplateSecretMetadataPatchOutput() KafkaUserSpecTemplateSecretMetadataPatchOutput {
	return o
}

func (o KafkaUserSpecTemplateSecretMetadataPatchOutput) ToKafkaUserSpecTemplateSecretMetadataPatchOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretMetadataPatchOutput {
	return o
}

func (o KafkaUserSpecTemplateSecretMetadataPatchOutput) ToKafkaUserSpecTemplateSecretMetadataPatchPtrOutput() KafkaUserSpecTemplateSecretMetadataPatchPtrOutput {
	return o.ToKafkaUserSpecTemplateSecretMetadataPatchPtrOutputWithContext(context.Background())
}

func (o KafkaUserSpecTemplateSecretMetadataPatchOutput) ToKafkaUserSpecTemplateSecretMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretMetadataPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserSpecTemplateSecretMetadataPatch) *KafkaUserSpecTemplateSecretMetadataPatch {
		return &v
	}).(KafkaUserSpecTemplateSecretMetadataPatchPtrOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaUserSpecTemplateSecretMetadataPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaUserSpecTemplateSecretMetadataPatch) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaUserSpecTemplateSecretMetadataPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KafkaUserSpecTemplateSecretMetadataPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type KafkaUserSpecTemplateSecretMetadataPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecTemplateSecretMetadataPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecTemplateSecretMetadataPatch)(nil)).Elem()
}

func (o KafkaUserSpecTemplateSecretMetadataPatchPtrOutput) ToKafkaUserSpecTemplateSecretMetadataPatchPtrOutput() KafkaUserSpecTemplateSecretMetadataPatchPtrOutput {
	return o
}

func (o KafkaUserSpecTemplateSecretMetadataPatchPtrOutput) ToKafkaUserSpecTemplateSecretMetadataPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretMetadataPatchPtrOutput {
	return o
}

func (o KafkaUserSpecTemplateSecretMetadataPatchPtrOutput) Elem() KafkaUserSpecTemplateSecretMetadataPatchOutput {
	return o.ApplyT(func(v *KafkaUserSpecTemplateSecretMetadataPatch) KafkaUserSpecTemplateSecretMetadataPatch {
		if v != nil {
			return *v
		}
		var ret KafkaUserSpecTemplateSecretMetadataPatch
		return ret
	}).(KafkaUserSpecTemplateSecretMetadataPatchOutput)
}

// Annotations added to the Kubernetes resource.
func (o KafkaUserSpecTemplateSecretMetadataPatchPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaUserSpecTemplateSecretMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels added to the Kubernetes resource.
func (o KafkaUserSpecTemplateSecretMetadataPatchPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaUserSpecTemplateSecretMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Template for KafkaUser resources. The template allows users to specify how the `Secret` with password or TLS certificates is generated.
type KafkaUserSpecTemplateSecretPatch struct {
	Metadata *KafkaUserSpecTemplateSecretMetadataPatch `pulumi:"metadata"`
}

// KafkaUserSpecTemplateSecretPatchInput is an input type that accepts KafkaUserSpecTemplateSecretPatchArgs and KafkaUserSpecTemplateSecretPatchOutput values.
// You can construct a concrete instance of `KafkaUserSpecTemplateSecretPatchInput` via:
//
//	KafkaUserSpecTemplateSecretPatchArgs{...}
type KafkaUserSpecTemplateSecretPatchInput interface {
	pulumi.Input

	ToKafkaUserSpecTemplateSecretPatchOutput() KafkaUserSpecTemplateSecretPatchOutput
	ToKafkaUserSpecTemplateSecretPatchOutputWithContext(context.Context) KafkaUserSpecTemplateSecretPatchOutput
}

// Template for KafkaUser resources. The template allows users to specify how the `Secret` with password or TLS certificates is generated.
type KafkaUserSpecTemplateSecretPatchArgs struct {
	Metadata KafkaUserSpecTemplateSecretMetadataPatchPtrInput `pulumi:"metadata"`
}

func (KafkaUserSpecTemplateSecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecTemplateSecretPatch)(nil)).Elem()
}

func (i KafkaUserSpecTemplateSecretPatchArgs) ToKafkaUserSpecTemplateSecretPatchOutput() KafkaUserSpecTemplateSecretPatchOutput {
	return i.ToKafkaUserSpecTemplateSecretPatchOutputWithContext(context.Background())
}

func (i KafkaUserSpecTemplateSecretPatchArgs) ToKafkaUserSpecTemplateSecretPatchOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecTemplateSecretPatchOutput)
}

func (i KafkaUserSpecTemplateSecretPatchArgs) ToKafkaUserSpecTemplateSecretPatchPtrOutput() KafkaUserSpecTemplateSecretPatchPtrOutput {
	return i.ToKafkaUserSpecTemplateSecretPatchPtrOutputWithContext(context.Background())
}

func (i KafkaUserSpecTemplateSecretPatchArgs) ToKafkaUserSpecTemplateSecretPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecTemplateSecretPatchOutput).ToKafkaUserSpecTemplateSecretPatchPtrOutputWithContext(ctx)
}

// KafkaUserSpecTemplateSecretPatchPtrInput is an input type that accepts KafkaUserSpecTemplateSecretPatchArgs, KafkaUserSpecTemplateSecretPatchPtr and KafkaUserSpecTemplateSecretPatchPtrOutput values.
// You can construct a concrete instance of `KafkaUserSpecTemplateSecretPatchPtrInput` via:
//
//	        KafkaUserSpecTemplateSecretPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaUserSpecTemplateSecretPatchPtrInput interface {
	pulumi.Input

	ToKafkaUserSpecTemplateSecretPatchPtrOutput() KafkaUserSpecTemplateSecretPatchPtrOutput
	ToKafkaUserSpecTemplateSecretPatchPtrOutputWithContext(context.Context) KafkaUserSpecTemplateSecretPatchPtrOutput
}

type kafkaUserSpecTemplateSecretPatchPtrType KafkaUserSpecTemplateSecretPatchArgs

func KafkaUserSpecTemplateSecretPatchPtr(v *KafkaUserSpecTemplateSecretPatchArgs) KafkaUserSpecTemplateSecretPatchPtrInput {
	return (*kafkaUserSpecTemplateSecretPatchPtrType)(v)
}

func (*kafkaUserSpecTemplateSecretPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecTemplateSecretPatch)(nil)).Elem()
}

func (i *kafkaUserSpecTemplateSecretPatchPtrType) ToKafkaUserSpecTemplateSecretPatchPtrOutput() KafkaUserSpecTemplateSecretPatchPtrOutput {
	return i.ToKafkaUserSpecTemplateSecretPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaUserSpecTemplateSecretPatchPtrType) ToKafkaUserSpecTemplateSecretPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserSpecTemplateSecretPatchPtrOutput)
}

// Template for KafkaUser resources. The template allows users to specify how the `Secret` with password or TLS certificates is generated.
type KafkaUserSpecTemplateSecretPatchOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecTemplateSecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserSpecTemplateSecretPatch)(nil)).Elem()
}

func (o KafkaUserSpecTemplateSecretPatchOutput) ToKafkaUserSpecTemplateSecretPatchOutput() KafkaUserSpecTemplateSecretPatchOutput {
	return o
}

func (o KafkaUserSpecTemplateSecretPatchOutput) ToKafkaUserSpecTemplateSecretPatchOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretPatchOutput {
	return o
}

func (o KafkaUserSpecTemplateSecretPatchOutput) ToKafkaUserSpecTemplateSecretPatchPtrOutput() KafkaUserSpecTemplateSecretPatchPtrOutput {
	return o.ToKafkaUserSpecTemplateSecretPatchPtrOutputWithContext(context.Background())
}

func (o KafkaUserSpecTemplateSecretPatchOutput) ToKafkaUserSpecTemplateSecretPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserSpecTemplateSecretPatch) *KafkaUserSpecTemplateSecretPatch {
		return &v
	}).(KafkaUserSpecTemplateSecretPatchPtrOutput)
}

func (o KafkaUserSpecTemplateSecretPatchOutput) Metadata() KafkaUserSpecTemplateSecretMetadataPatchPtrOutput {
	return o.ApplyT(func(v KafkaUserSpecTemplateSecretPatch) *KafkaUserSpecTemplateSecretMetadataPatch { return v.Metadata }).(KafkaUserSpecTemplateSecretMetadataPatchPtrOutput)
}

type KafkaUserSpecTemplateSecretPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaUserSpecTemplateSecretPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserSpecTemplateSecretPatch)(nil)).Elem()
}

func (o KafkaUserSpecTemplateSecretPatchPtrOutput) ToKafkaUserSpecTemplateSecretPatchPtrOutput() KafkaUserSpecTemplateSecretPatchPtrOutput {
	return o
}

func (o KafkaUserSpecTemplateSecretPatchPtrOutput) ToKafkaUserSpecTemplateSecretPatchPtrOutputWithContext(ctx context.Context) KafkaUserSpecTemplateSecretPatchPtrOutput {
	return o
}

func (o KafkaUserSpecTemplateSecretPatchPtrOutput) Elem() KafkaUserSpecTemplateSecretPatchOutput {
	return o.ApplyT(func(v *KafkaUserSpecTemplateSecretPatch) KafkaUserSpecTemplateSecretPatch {
		if v != nil {
			return *v
		}
		var ret KafkaUserSpecTemplateSecretPatch
		return ret
	}).(KafkaUserSpecTemplateSecretPatchOutput)
}

func (o KafkaUserSpecTemplateSecretPatchPtrOutput) Metadata() KafkaUserSpecTemplateSecretMetadataPatchPtrOutput {
	return o.ApplyT(func(v *KafkaUserSpecTemplateSecretPatch) *KafkaUserSpecTemplateSecretMetadataPatch {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(KafkaUserSpecTemplateSecretMetadataPatchPtrOutput)
}

// The status of the Kafka User.
type KafkaUserStatus struct {
	// List of status conditions.
	Conditions []KafkaUserStatusConditions `pulumi:"conditions"`
	// The generation of the CRD that was last reconciled by the operator.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// The name of `Secret` where the credentials are stored.
	Secret *string `pulumi:"secret"`
	// Username.
	Username *string `pulumi:"username"`
}

// KafkaUserStatusInput is an input type that accepts KafkaUserStatusArgs and KafkaUserStatusOutput values.
// You can construct a concrete instance of `KafkaUserStatusInput` via:
//
//	KafkaUserStatusArgs{...}
type KafkaUserStatusInput interface {
	pulumi.Input

	ToKafkaUserStatusOutput() KafkaUserStatusOutput
	ToKafkaUserStatusOutputWithContext(context.Context) KafkaUserStatusOutput
}

// The status of the Kafka User.
type KafkaUserStatusArgs struct {
	// List of status conditions.
	Conditions KafkaUserStatusConditionsArrayInput `pulumi:"conditions"`
	// The generation of the CRD that was last reconciled by the operator.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// The name of `Secret` where the credentials are stored.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
	// Username.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (KafkaUserStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserStatus)(nil)).Elem()
}

func (i KafkaUserStatusArgs) ToKafkaUserStatusOutput() KafkaUserStatusOutput {
	return i.ToKafkaUserStatusOutputWithContext(context.Background())
}

func (i KafkaUserStatusArgs) ToKafkaUserStatusOutputWithContext(ctx context.Context) KafkaUserStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserStatusOutput)
}

func (i KafkaUserStatusArgs) ToKafkaUserStatusPtrOutput() KafkaUserStatusPtrOutput {
	return i.ToKafkaUserStatusPtrOutputWithContext(context.Background())
}

func (i KafkaUserStatusArgs) ToKafkaUserStatusPtrOutputWithContext(ctx context.Context) KafkaUserStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserStatusOutput).ToKafkaUserStatusPtrOutputWithContext(ctx)
}

// KafkaUserStatusPtrInput is an input type that accepts KafkaUserStatusArgs, KafkaUserStatusPtr and KafkaUserStatusPtrOutput values.
// You can construct a concrete instance of `KafkaUserStatusPtrInput` via:
//
//	        KafkaUserStatusArgs{...}
//
//	or:
//
//	        nil
type KafkaUserStatusPtrInput interface {
	pulumi.Input

	ToKafkaUserStatusPtrOutput() KafkaUserStatusPtrOutput
	ToKafkaUserStatusPtrOutputWithContext(context.Context) KafkaUserStatusPtrOutput
}

type kafkaUserStatusPtrType KafkaUserStatusArgs

func KafkaUserStatusPtr(v *KafkaUserStatusArgs) KafkaUserStatusPtrInput {
	return (*kafkaUserStatusPtrType)(v)
}

func (*kafkaUserStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserStatus)(nil)).Elem()
}

func (i *kafkaUserStatusPtrType) ToKafkaUserStatusPtrOutput() KafkaUserStatusPtrOutput {
	return i.ToKafkaUserStatusPtrOutputWithContext(context.Background())
}

func (i *kafkaUserStatusPtrType) ToKafkaUserStatusPtrOutputWithContext(ctx context.Context) KafkaUserStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserStatusPtrOutput)
}

// The status of the Kafka User.
type KafkaUserStatusOutput struct{ *pulumi.OutputState }

func (KafkaUserStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserStatus)(nil)).Elem()
}

func (o KafkaUserStatusOutput) ToKafkaUserStatusOutput() KafkaUserStatusOutput {
	return o
}

func (o KafkaUserStatusOutput) ToKafkaUserStatusOutputWithContext(ctx context.Context) KafkaUserStatusOutput {
	return o
}

func (o KafkaUserStatusOutput) ToKafkaUserStatusPtrOutput() KafkaUserStatusPtrOutput {
	return o.ToKafkaUserStatusPtrOutputWithContext(context.Background())
}

func (o KafkaUserStatusOutput) ToKafkaUserStatusPtrOutputWithContext(ctx context.Context) KafkaUserStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserStatus) *KafkaUserStatus {
		return &v
	}).(KafkaUserStatusPtrOutput)
}

// List of status conditions.
func (o KafkaUserStatusOutput) Conditions() KafkaUserStatusConditionsArrayOutput {
	return o.ApplyT(func(v KafkaUserStatus) []KafkaUserStatusConditions { return v.Conditions }).(KafkaUserStatusConditionsArrayOutput)
}

// The generation of the CRD that was last reconciled by the operator.
func (o KafkaUserStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaUserStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// The name of `Secret` where the credentials are stored.
func (o KafkaUserStatusOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserStatus) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

// Username.
func (o KafkaUserStatusOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserStatus) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type KafkaUserStatusPtrOutput struct{ *pulumi.OutputState }

func (KafkaUserStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserStatus)(nil)).Elem()
}

func (o KafkaUserStatusPtrOutput) ToKafkaUserStatusPtrOutput() KafkaUserStatusPtrOutput {
	return o
}

func (o KafkaUserStatusPtrOutput) ToKafkaUserStatusPtrOutputWithContext(ctx context.Context) KafkaUserStatusPtrOutput {
	return o
}

func (o KafkaUserStatusPtrOutput) Elem() KafkaUserStatusOutput {
	return o.ApplyT(func(v *KafkaUserStatus) KafkaUserStatus {
		if v != nil {
			return *v
		}
		var ret KafkaUserStatus
		return ret
	}).(KafkaUserStatusOutput)
}

// List of status conditions.
func (o KafkaUserStatusPtrOutput) Conditions() KafkaUserStatusConditionsArrayOutput {
	return o.ApplyT(func(v *KafkaUserStatus) []KafkaUserStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(KafkaUserStatusConditionsArrayOutput)
}

// The generation of the CRD that was last reconciled by the operator.
func (o KafkaUserStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaUserStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// The name of `Secret` where the credentials are stored.
func (o KafkaUserStatusPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaUserStatus) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

// Username.
func (o KafkaUserStatusPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaUserStatus) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type KafkaUserStatusConditions struct {
	// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about the condition's last transition.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition (a single word in CamelCase).
	Reason *string `pulumi:"reason"`
	// The status of the condition, either True, False or Unknown.
	Status *string `pulumi:"status"`
	// The unique identifier of a condition, used to distinguish between other conditions in the resource.
	Type *string `pulumi:"type"`
}

// KafkaUserStatusConditionsInput is an input type that accepts KafkaUserStatusConditionsArgs and KafkaUserStatusConditionsOutput values.
// You can construct a concrete instance of `KafkaUserStatusConditionsInput` via:
//
//	KafkaUserStatusConditionsArgs{...}
type KafkaUserStatusConditionsInput interface {
	pulumi.Input

	ToKafkaUserStatusConditionsOutput() KafkaUserStatusConditionsOutput
	ToKafkaUserStatusConditionsOutputWithContext(context.Context) KafkaUserStatusConditionsOutput
}

type KafkaUserStatusConditionsArgs struct {
	// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about the condition's last transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition (a single word in CamelCase).
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// The status of the condition, either True, False or Unknown.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The unique identifier of a condition, used to distinguish between other conditions in the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaUserStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserStatusConditions)(nil)).Elem()
}

func (i KafkaUserStatusConditionsArgs) ToKafkaUserStatusConditionsOutput() KafkaUserStatusConditionsOutput {
	return i.ToKafkaUserStatusConditionsOutputWithContext(context.Background())
}

func (i KafkaUserStatusConditionsArgs) ToKafkaUserStatusConditionsOutputWithContext(ctx context.Context) KafkaUserStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserStatusConditionsOutput)
}

// KafkaUserStatusConditionsArrayInput is an input type that accepts KafkaUserStatusConditionsArray and KafkaUserStatusConditionsArrayOutput values.
// You can construct a concrete instance of `KafkaUserStatusConditionsArrayInput` via:
//
//	KafkaUserStatusConditionsArray{ KafkaUserStatusConditionsArgs{...} }
type KafkaUserStatusConditionsArrayInput interface {
	pulumi.Input

	ToKafkaUserStatusConditionsArrayOutput() KafkaUserStatusConditionsArrayOutput
	ToKafkaUserStatusConditionsArrayOutputWithContext(context.Context) KafkaUserStatusConditionsArrayOutput
}

type KafkaUserStatusConditionsArray []KafkaUserStatusConditionsInput

func (KafkaUserStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaUserStatusConditions)(nil)).Elem()
}

func (i KafkaUserStatusConditionsArray) ToKafkaUserStatusConditionsArrayOutput() KafkaUserStatusConditionsArrayOutput {
	return i.ToKafkaUserStatusConditionsArrayOutputWithContext(context.Background())
}

func (i KafkaUserStatusConditionsArray) ToKafkaUserStatusConditionsArrayOutputWithContext(ctx context.Context) KafkaUserStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserStatusConditionsArrayOutput)
}

type KafkaUserStatusConditionsOutput struct{ *pulumi.OutputState }

func (KafkaUserStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserStatusConditions)(nil)).Elem()
}

func (o KafkaUserStatusConditionsOutput) ToKafkaUserStatusConditionsOutput() KafkaUserStatusConditionsOutput {
	return o
}

func (o KafkaUserStatusConditionsOutput) ToKafkaUserStatusConditionsOutputWithContext(ctx context.Context) KafkaUserStatusConditionsOutput {
	return o
}

// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
func (o KafkaUserStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// Human-readable message indicating details about the condition's last transition.
func (o KafkaUserStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition (a single word in CamelCase).
func (o KafkaUserStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// The status of the condition, either True, False or Unknown.
func (o KafkaUserStatusConditionsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserStatusConditions) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The unique identifier of a condition, used to distinguish between other conditions in the resource.
func (o KafkaUserStatusConditionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserStatusConditions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaUserStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (KafkaUserStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaUserStatusConditions)(nil)).Elem()
}

func (o KafkaUserStatusConditionsArrayOutput) ToKafkaUserStatusConditionsArrayOutput() KafkaUserStatusConditionsArrayOutput {
	return o
}

func (o KafkaUserStatusConditionsArrayOutput) ToKafkaUserStatusConditionsArrayOutputWithContext(ctx context.Context) KafkaUserStatusConditionsArrayOutput {
	return o
}

func (o KafkaUserStatusConditionsArrayOutput) Index(i pulumi.IntInput) KafkaUserStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaUserStatusConditions {
		return vs[0].([]KafkaUserStatusConditions)[vs[1].(int)]
	}).(KafkaUserStatusConditionsOutput)
}

type KafkaUserStatusConditionsPatch struct {
	// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about the condition's last transition.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition (a single word in CamelCase).
	Reason *string `pulumi:"reason"`
	// The status of the condition, either True, False or Unknown.
	Status *string `pulumi:"status"`
	// The unique identifier of a condition, used to distinguish between other conditions in the resource.
	Type *string `pulumi:"type"`
}

// KafkaUserStatusConditionsPatchInput is an input type that accepts KafkaUserStatusConditionsPatchArgs and KafkaUserStatusConditionsPatchOutput values.
// You can construct a concrete instance of `KafkaUserStatusConditionsPatchInput` via:
//
//	KafkaUserStatusConditionsPatchArgs{...}
type KafkaUserStatusConditionsPatchInput interface {
	pulumi.Input

	ToKafkaUserStatusConditionsPatchOutput() KafkaUserStatusConditionsPatchOutput
	ToKafkaUserStatusConditionsPatchOutputWithContext(context.Context) KafkaUserStatusConditionsPatchOutput
}

type KafkaUserStatusConditionsPatchArgs struct {
	// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about the condition's last transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition (a single word in CamelCase).
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// The status of the condition, either True, False or Unknown.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The unique identifier of a condition, used to distinguish between other conditions in the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KafkaUserStatusConditionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserStatusConditionsPatch)(nil)).Elem()
}

func (i KafkaUserStatusConditionsPatchArgs) ToKafkaUserStatusConditionsPatchOutput() KafkaUserStatusConditionsPatchOutput {
	return i.ToKafkaUserStatusConditionsPatchOutputWithContext(context.Background())
}

func (i KafkaUserStatusConditionsPatchArgs) ToKafkaUserStatusConditionsPatchOutputWithContext(ctx context.Context) KafkaUserStatusConditionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserStatusConditionsPatchOutput)
}

// KafkaUserStatusConditionsPatchArrayInput is an input type that accepts KafkaUserStatusConditionsPatchArray and KafkaUserStatusConditionsPatchArrayOutput values.
// You can construct a concrete instance of `KafkaUserStatusConditionsPatchArrayInput` via:
//
//	KafkaUserStatusConditionsPatchArray{ KafkaUserStatusConditionsPatchArgs{...} }
type KafkaUserStatusConditionsPatchArrayInput interface {
	pulumi.Input

	ToKafkaUserStatusConditionsPatchArrayOutput() KafkaUserStatusConditionsPatchArrayOutput
	ToKafkaUserStatusConditionsPatchArrayOutputWithContext(context.Context) KafkaUserStatusConditionsPatchArrayOutput
}

type KafkaUserStatusConditionsPatchArray []KafkaUserStatusConditionsPatchInput

func (KafkaUserStatusConditionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaUserStatusConditionsPatch)(nil)).Elem()
}

func (i KafkaUserStatusConditionsPatchArray) ToKafkaUserStatusConditionsPatchArrayOutput() KafkaUserStatusConditionsPatchArrayOutput {
	return i.ToKafkaUserStatusConditionsPatchArrayOutputWithContext(context.Background())
}

func (i KafkaUserStatusConditionsPatchArray) ToKafkaUserStatusConditionsPatchArrayOutputWithContext(ctx context.Context) KafkaUserStatusConditionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserStatusConditionsPatchArrayOutput)
}

type KafkaUserStatusConditionsPatchOutput struct{ *pulumi.OutputState }

func (KafkaUserStatusConditionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserStatusConditionsPatch)(nil)).Elem()
}

func (o KafkaUserStatusConditionsPatchOutput) ToKafkaUserStatusConditionsPatchOutput() KafkaUserStatusConditionsPatchOutput {
	return o
}

func (o KafkaUserStatusConditionsPatchOutput) ToKafkaUserStatusConditionsPatchOutputWithContext(ctx context.Context) KafkaUserStatusConditionsPatchOutput {
	return o
}

// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
func (o KafkaUserStatusConditionsPatchOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserStatusConditionsPatch) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// Human-readable message indicating details about the condition's last transition.
func (o KafkaUserStatusConditionsPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserStatusConditionsPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition (a single word in CamelCase).
func (o KafkaUserStatusConditionsPatchOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserStatusConditionsPatch) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// The status of the condition, either True, False or Unknown.
func (o KafkaUserStatusConditionsPatchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserStatusConditionsPatch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The unique identifier of a condition, used to distinguish between other conditions in the resource.
func (o KafkaUserStatusConditionsPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserStatusConditionsPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KafkaUserStatusConditionsPatchArrayOutput struct{ *pulumi.OutputState }

func (KafkaUserStatusConditionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaUserStatusConditionsPatch)(nil)).Elem()
}

func (o KafkaUserStatusConditionsPatchArrayOutput) ToKafkaUserStatusConditionsPatchArrayOutput() KafkaUserStatusConditionsPatchArrayOutput {
	return o
}

func (o KafkaUserStatusConditionsPatchArrayOutput) ToKafkaUserStatusConditionsPatchArrayOutputWithContext(ctx context.Context) KafkaUserStatusConditionsPatchArrayOutput {
	return o
}

func (o KafkaUserStatusConditionsPatchArrayOutput) Index(i pulumi.IntInput) KafkaUserStatusConditionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaUserStatusConditionsPatch {
		return vs[0].([]KafkaUserStatusConditionsPatch)[vs[1].(int)]
	}).(KafkaUserStatusConditionsPatchOutput)
}

// The status of the Kafka User.
type KafkaUserStatusPatch struct {
	// List of status conditions.
	Conditions []KafkaUserStatusConditionsPatch `pulumi:"conditions"`
	// The generation of the CRD that was last reconciled by the operator.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// The name of `Secret` where the credentials are stored.
	Secret *string `pulumi:"secret"`
	// Username.
	Username *string `pulumi:"username"`
}

// KafkaUserStatusPatchInput is an input type that accepts KafkaUserStatusPatchArgs and KafkaUserStatusPatchOutput values.
// You can construct a concrete instance of `KafkaUserStatusPatchInput` via:
//
//	KafkaUserStatusPatchArgs{...}
type KafkaUserStatusPatchInput interface {
	pulumi.Input

	ToKafkaUserStatusPatchOutput() KafkaUserStatusPatchOutput
	ToKafkaUserStatusPatchOutputWithContext(context.Context) KafkaUserStatusPatchOutput
}

// The status of the Kafka User.
type KafkaUserStatusPatchArgs struct {
	// List of status conditions.
	Conditions KafkaUserStatusConditionsPatchArrayInput `pulumi:"conditions"`
	// The generation of the CRD that was last reconciled by the operator.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// The name of `Secret` where the credentials are stored.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
	// Username.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (KafkaUserStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserStatusPatch)(nil)).Elem()
}

func (i KafkaUserStatusPatchArgs) ToKafkaUserStatusPatchOutput() KafkaUserStatusPatchOutput {
	return i.ToKafkaUserStatusPatchOutputWithContext(context.Background())
}

func (i KafkaUserStatusPatchArgs) ToKafkaUserStatusPatchOutputWithContext(ctx context.Context) KafkaUserStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserStatusPatchOutput)
}

func (i KafkaUserStatusPatchArgs) ToKafkaUserStatusPatchPtrOutput() KafkaUserStatusPatchPtrOutput {
	return i.ToKafkaUserStatusPatchPtrOutputWithContext(context.Background())
}

func (i KafkaUserStatusPatchArgs) ToKafkaUserStatusPatchPtrOutputWithContext(ctx context.Context) KafkaUserStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserStatusPatchOutput).ToKafkaUserStatusPatchPtrOutputWithContext(ctx)
}

// KafkaUserStatusPatchPtrInput is an input type that accepts KafkaUserStatusPatchArgs, KafkaUserStatusPatchPtr and KafkaUserStatusPatchPtrOutput values.
// You can construct a concrete instance of `KafkaUserStatusPatchPtrInput` via:
//
//	        KafkaUserStatusPatchArgs{...}
//
//	or:
//
//	        nil
type KafkaUserStatusPatchPtrInput interface {
	pulumi.Input

	ToKafkaUserStatusPatchPtrOutput() KafkaUserStatusPatchPtrOutput
	ToKafkaUserStatusPatchPtrOutputWithContext(context.Context) KafkaUserStatusPatchPtrOutput
}

type kafkaUserStatusPatchPtrType KafkaUserStatusPatchArgs

func KafkaUserStatusPatchPtr(v *KafkaUserStatusPatchArgs) KafkaUserStatusPatchPtrInput {
	return (*kafkaUserStatusPatchPtrType)(v)
}

func (*kafkaUserStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserStatusPatch)(nil)).Elem()
}

func (i *kafkaUserStatusPatchPtrType) ToKafkaUserStatusPatchPtrOutput() KafkaUserStatusPatchPtrOutput {
	return i.ToKafkaUserStatusPatchPtrOutputWithContext(context.Background())
}

func (i *kafkaUserStatusPatchPtrType) ToKafkaUserStatusPatchPtrOutputWithContext(ctx context.Context) KafkaUserStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaUserStatusPatchPtrOutput)
}

// The status of the Kafka User.
type KafkaUserStatusPatchOutput struct{ *pulumi.OutputState }

func (KafkaUserStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaUserStatusPatch)(nil)).Elem()
}

func (o KafkaUserStatusPatchOutput) ToKafkaUserStatusPatchOutput() KafkaUserStatusPatchOutput {
	return o
}

func (o KafkaUserStatusPatchOutput) ToKafkaUserStatusPatchOutputWithContext(ctx context.Context) KafkaUserStatusPatchOutput {
	return o
}

func (o KafkaUserStatusPatchOutput) ToKafkaUserStatusPatchPtrOutput() KafkaUserStatusPatchPtrOutput {
	return o.ToKafkaUserStatusPatchPtrOutputWithContext(context.Background())
}

func (o KafkaUserStatusPatchOutput) ToKafkaUserStatusPatchPtrOutputWithContext(ctx context.Context) KafkaUserStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaUserStatusPatch) *KafkaUserStatusPatch {
		return &v
	}).(KafkaUserStatusPatchPtrOutput)
}

// List of status conditions.
func (o KafkaUserStatusPatchOutput) Conditions() KafkaUserStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v KafkaUserStatusPatch) []KafkaUserStatusConditionsPatch { return v.Conditions }).(KafkaUserStatusConditionsPatchArrayOutput)
}

// The generation of the CRD that was last reconciled by the operator.
func (o KafkaUserStatusPatchOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaUserStatusPatch) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// The name of `Secret` where the credentials are stored.
func (o KafkaUserStatusPatchOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserStatusPatch) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

// Username.
func (o KafkaUserStatusPatchOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaUserStatusPatch) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type KafkaUserStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (KafkaUserStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaUserStatusPatch)(nil)).Elem()
}

func (o KafkaUserStatusPatchPtrOutput) ToKafkaUserStatusPatchPtrOutput() KafkaUserStatusPatchPtrOutput {
	return o
}

func (o KafkaUserStatusPatchPtrOutput) ToKafkaUserStatusPatchPtrOutputWithContext(ctx context.Context) KafkaUserStatusPatchPtrOutput {
	return o
}

func (o KafkaUserStatusPatchPtrOutput) Elem() KafkaUserStatusPatchOutput {
	return o.ApplyT(func(v *KafkaUserStatusPatch) KafkaUserStatusPatch {
		if v != nil {
			return *v
		}
		var ret KafkaUserStatusPatch
		return ret
	}).(KafkaUserStatusPatchOutput)
}

// List of status conditions.
func (o KafkaUserStatusPatchPtrOutput) Conditions() KafkaUserStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v *KafkaUserStatusPatch) []KafkaUserStatusConditionsPatch {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(KafkaUserStatusConditionsPatchArrayOutput)
}

// The generation of the CRD that was last reconciled by the operator.
func (o KafkaUserStatusPatchPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaUserStatusPatch) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// The name of `Secret` where the credentials are stored.
func (o KafkaUserStatusPatchPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaUserStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

// Username.
func (o KafkaUserStatusPatchPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaUserStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodSetPatchInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodSetPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodSetPatchPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodSetPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodTolerationsInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodTolerationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodTolerationsArrayInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodTolerationsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodTolerationsPatchInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodTolerationsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodTolerationsPatchArrayInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodTolerationsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraintsInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesArrayInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesConfigMapInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesConfigMapPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesConfigMapItemsInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesConfigMapPatchInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesConfigMapPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesConfigMapPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesCsiInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesCsiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesCsiPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesCsiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesCsiPatchInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesCsiPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesCsiPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesEmptyDirInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesEmptyDirArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesEmptyDirArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesImageInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesImagePtrInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesImagePatchInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesImagePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesImagePatchPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesImagePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesPatchInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesPatchArrayInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesSecretInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesSecretPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesSecretItemsInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesSecretItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesSecretItemsArrayInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesSecretItemsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesSecretPatchInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplatePodVolumesSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplateServiceAccountInput)(nil)).Elem(), KafkaSpecKafkaTemplateServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplateServiceAccountPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplateServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplateServiceAccountMetadataInput)(nil)).Elem(), KafkaSpecKafkaTemplateServiceAccountMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplateServiceAccountMetadataPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplateServiceAccountMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplateServiceAccountMetadataPatchInput)(nil)).Elem(), KafkaSpecKafkaTemplateServiceAccountMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplateServiceAccountMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplateServiceAccountPatchInput)(nil)).Elem(), KafkaSpecKafkaTemplateServiceAccountPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplateServiceAccountPatchPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplateServiceAccountPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplateStatefulsetInput)(nil)).Elem(), KafkaSpecKafkaTemplateStatefulsetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplateStatefulsetPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplateStatefulsetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplateStatefulsetMetadataInput)(nil)).Elem(), KafkaSpecKafkaTemplateStatefulsetMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplateStatefulsetMetadataPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplateStatefulsetMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplateStatefulsetMetadataPatchInput)(nil)).Elem(), KafkaSpecKafkaTemplateStatefulsetMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplateStatefulsetMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplateStatefulsetPatchInput)(nil)).Elem(), KafkaSpecKafkaTemplateStatefulsetPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTemplateStatefulsetPatchPtrInput)(nil)).Elem(), KafkaSpecKafkaTemplateStatefulsetPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTieredStorageInput)(nil)).Elem(), KafkaSpecKafkaTieredStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTieredStoragePtrInput)(nil)).Elem(), KafkaSpecKafkaTieredStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTieredStoragePatchInput)(nil)).Elem(), KafkaSpecKafkaTieredStoragePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTieredStoragePatchPtrInput)(nil)).Elem(), KafkaSpecKafkaTieredStoragePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTieredStorageRemoteStorageManagerInput)(nil)).Elem(), KafkaSpecKafkaTieredStorageRemoteStorageManagerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrInput)(nil)).Elem(), KafkaSpecKafkaTieredStorageRemoteStorageManagerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchInput)(nil)).Elem(), KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrInput)(nil)).Elem(), KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecPatchInput)(nil)).Elem(), KafkaSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecPatchPtrInput)(nil)).Elem(), KafkaSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperInput)(nil)).Elem(), KafkaSpecZookeeperArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperPtrInput)(nil)).Elem(), KafkaSpecZookeeperArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperJmxOptionsInput)(nil)).Elem(), KafkaSpecZookeeperJmxOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperJmxOptionsPtrInput)(nil)).Elem(), KafkaSpecZookeeperJmxOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperJmxOptionsAuthenticationInput)(nil)).Elem(), KafkaSpecZookeeperJmxOptionsAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperJmxOptionsAuthenticationPtrInput)(nil)).Elem(), KafkaSpecZookeeperJmxOptionsAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperJmxOptionsAuthenticationPatchInput)(nil)).Elem(), KafkaSpecZookeeperJmxOptionsAuthenticationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperJmxOptionsAuthenticationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperJmxOptionsPatchInput)(nil)).Elem(), KafkaSpecZookeeperJmxOptionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperJmxOptionsPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperJmxOptionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperJvmOptionsInput)(nil)).Elem(), KafkaSpecZookeeperJvmOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperJvmOptionsPtrInput)(nil)).Elem(), KafkaSpecZookeeperJvmOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesInput)(nil)).Elem(), KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayInput)(nil)).Elem(), KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchInput)(nil)).Elem(), KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperJvmOptionsPatchInput)(nil)).Elem(), KafkaSpecZookeeperJvmOptionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperJvmOptionsPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperJvmOptionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperLivenessProbeInput)(nil)).Elem(), KafkaSpecZookeeperLivenessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperLivenessProbePtrInput)(nil)).Elem(), KafkaSpecZookeeperLivenessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperLivenessProbePatchInput)(nil)).Elem(), KafkaSpecZookeeperLivenessProbePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperLivenessProbePatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperLivenessProbePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperLoggingInput)(nil)).Elem(), KafkaSpecZookeeperLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperLoggingPtrInput)(nil)).Elem(), KafkaSpecZookeeperLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperLoggingPatchInput)(nil)).Elem(), KafkaSpecZookeeperLoggingPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperLoggingPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperLoggingPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperLoggingValueFromInput)(nil)).Elem(), KafkaSpecZookeeperLoggingValueFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperLoggingValueFromPtrInput)(nil)).Elem(), KafkaSpecZookeeperLoggingValueFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefInput)(nil)).Elem(), KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrInput)(nil)).Elem(), KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchInput)(nil)).Elem(), KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperLoggingValueFromPatchInput)(nil)).Elem(), KafkaSpecZookeeperLoggingValueFromPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperLoggingValueFromPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperLoggingValueFromPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigInput)(nil)).Elem(), KafkaSpecZookeeperMetricsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigPtrInput)(nil)).Elem(), KafkaSpecZookeeperMetricsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigPatchInput)(nil)).Elem(), KafkaSpecZookeeperMetricsConfigPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperMetricsConfigPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValueFromInput)(nil)).Elem(), KafkaSpecZookeeperMetricsConfigValueFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValueFromPtrInput)(nil)).Elem(), KafkaSpecZookeeperMetricsConfigValueFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefInput)(nil)).Elem(), KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrInput)(nil)).Elem(), KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchInput)(nil)).Elem(), KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValueFromPatchInput)(nil)).Elem(), KafkaSpecZookeeperMetricsConfigValueFromPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValueFromPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperMetricsConfigValueFromPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValuesInput)(nil)).Elem(), KafkaSpecZookeeperMetricsConfigValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValuesPtrInput)(nil)).Elem(), KafkaSpecZookeeperMetricsConfigValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValuesPatchInput)(nil)).Elem(), KafkaSpecZookeeperMetricsConfigValuesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperMetricsConfigValuesPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperMetricsConfigValuesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperPatchInput)(nil)).Elem(), KafkaSpecZookeeperPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperReadinessProbeInput)(nil)).Elem(), KafkaSpecZookeeperReadinessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperReadinessProbePtrInput)(nil)).Elem(), KafkaSpecZookeeperReadinessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperReadinessProbePatchInput)(nil)).Elem(), KafkaSpecZookeeperReadinessProbePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperReadinessProbePatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperReadinessProbePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperResourcesInput)(nil)).Elem(), KafkaSpecZookeeperResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperResourcesPtrInput)(nil)).Elem(), KafkaSpecZookeeperResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperResourcesClaimsInput)(nil)).Elem(), KafkaSpecZookeeperResourcesClaimsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperResourcesClaimsArrayInput)(nil)).Elem(), KafkaSpecZookeeperResourcesClaimsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperResourcesClaimsPatchInput)(nil)).Elem(), KafkaSpecZookeeperResourcesClaimsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperResourcesClaimsPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperResourcesClaimsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperResourcesPatchInput)(nil)).Elem(), KafkaSpecZookeeperResourcesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperResourcesPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperResourcesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperStorageInput)(nil)).Elem(), KafkaSpecZookeeperStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperStoragePtrInput)(nil)).Elem(), KafkaSpecZookeeperStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperStorageOverridesInput)(nil)).Elem(), KafkaSpecZookeeperStorageOverridesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperStorageOverridesArrayInput)(nil)).Elem(), KafkaSpecZookeeperStorageOverridesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperStorageOverridesPatchInput)(nil)).Elem(), KafkaSpecZookeeperStorageOverridesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperStorageOverridesPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperStorageOverridesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperStoragePatchInput)(nil)).Elem(), KafkaSpecZookeeperStoragePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperStoragePatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperStoragePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateInput)(nil)).Elem(), KafkaSpecZookeeperTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateClientServiceInput)(nil)).Elem(), KafkaSpecZookeeperTemplateClientServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateClientServicePtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateClientServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateClientServiceMetadataInput)(nil)).Elem(), KafkaSpecZookeeperTemplateClientServiceMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateClientServiceMetadataPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateClientServiceMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateClientServiceMetadataPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplateClientServiceMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateClientServiceMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateClientServicePatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplateClientServicePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateClientServicePatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateClientServicePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateJmxSecretInput)(nil)).Elem(), KafkaSpecZookeeperTemplateJmxSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateJmxSecretPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateJmxSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateJmxSecretMetadataInput)(nil)).Elem(), KafkaSpecZookeeperTemplateJmxSecretMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateJmxSecretMetadataPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateJmxSecretMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateJmxSecretMetadataPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplateJmxSecretMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateJmxSecretMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateJmxSecretPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplateJmxSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateJmxSecretPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateJmxSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateNodesServiceInput)(nil)).Elem(), KafkaSpecZookeeperTemplateNodesServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateNodesServicePtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateNodesServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateNodesServiceMetadataInput)(nil)).Elem(), KafkaSpecZookeeperTemplateNodesServiceMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateNodesServiceMetadataPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateNodesServiceMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateNodesServiceMetadataPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplateNodesServiceMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateNodesServiceMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateNodesServicePatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplateNodesServicePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateNodesServicePatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateNodesServicePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePersistentVolumeClaimInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePersistentVolumeClaimArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePersistentVolumeClaimArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDisruptionBudgetInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodDisruptionBudgetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodDisruptionBudgetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDnsConfigInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDnsConfigPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDnsConfigOptionsInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodDnsConfigOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodDnsConfigOptionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDnsConfigPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodDnsConfigPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodDnsConfigPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodHostAliasesInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodHostAliasesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodHostAliasesArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodHostAliasesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodHostAliasesPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodHostAliasesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodHostAliasesPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodHostAliasesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodImagePullSecretsInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodImagePullSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodImagePullSecretsArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodImagePullSecretsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodImagePullSecretsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodMetadataInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodMetadataPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodMetadataPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodMetadataPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSysctlsInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSetInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSetPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSetMetadataInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSetMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSetMetadataPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSetMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSetMetadataPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSetMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSetMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSetPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSetPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodSetPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodSetPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTolerationsInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodTolerationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTolerationsArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodTolerationsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTolerationsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodTolerationsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTolerationsPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodTolerationsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesConfigMapInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesCsiInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesCsiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesCsiPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesCsiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesCsiPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesCsiPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesCsiPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesEmptyDirInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesEmptyDirArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesEmptyDirArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesImageInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesImagePtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesImagePatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesImagePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesImagePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesSecretInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesSecretPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesSecretItemsInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesSecretItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesSecretItemsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesSecretPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplatePodVolumesSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateServiceAccountInput)(nil)).Elem(), KafkaSpecZookeeperTemplateServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateServiceAccountPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateServiceAccountMetadataInput)(nil)).Elem(), KafkaSpecZookeeperTemplateServiceAccountMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateServiceAccountMetadataPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateServiceAccountMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateServiceAccountMetadataPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplateServiceAccountMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateServiceAccountMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateServiceAccountPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplateServiceAccountPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateServiceAccountPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateServiceAccountPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateStatefulsetInput)(nil)).Elem(), KafkaSpecZookeeperTemplateStatefulsetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateStatefulsetPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateStatefulsetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateStatefulsetMetadataInput)(nil)).Elem(), KafkaSpecZookeeperTemplateStatefulsetMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateStatefulsetMetadataPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateStatefulsetMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateStatefulsetMetadataPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplateStatefulsetMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateStatefulsetMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateStatefulsetPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplateStatefulsetPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateStatefulsetPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateStatefulsetPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerEnvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayInput)(nil)).Elem(), KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusInput)(nil)).Elem(), KafkaStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusPtrInput)(nil)).Elem(), KafkaStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusAutoRebalanceInput)(nil)).Elem(), KafkaStatusAutoRebalanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusAutoRebalancePtrInput)(nil)).Elem(), KafkaStatusAutoRebalanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusAutoRebalanceModesInput)(nil)).Elem(), KafkaStatusAutoRebalanceModesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusAutoRebalanceModesArrayInput)(nil)).Elem(), KafkaStatusAutoRebalanceModesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusAutoRebalanceModesPatchInput)(nil)).Elem(), KafkaStatusAutoRebalanceModesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusAutoRebalanceModesPatchArrayInput)(nil)).Elem(), KafkaStatusAutoRebalanceModesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusAutoRebalancePatchInput)(nil)).Elem(), KafkaStatusAutoRebalancePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusAutoRebalancePatchPtrInput)(nil)).Elem(), KafkaStatusAutoRebalancePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusConditionsInput)(nil)).Elem(), KafkaStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusConditionsArrayInput)(nil)).Elem(), KafkaStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusConditionsPatchInput)(nil)).Elem(), KafkaStatusConditionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusConditionsPatchArrayInput)(nil)).Elem(), KafkaStatusConditionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusKafkaNodePoolsInput)(nil)).Elem(), KafkaStatusKafkaNodePoolsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusKafkaNodePoolsArrayInput)(nil)).Elem(), KafkaStatusKafkaNodePoolsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusKafkaNodePoolsPatchInput)(nil)).Elem(), KafkaStatusKafkaNodePoolsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusKafkaNodePoolsPatchArrayInput)(nil)).Elem(), KafkaStatusKafkaNodePoolsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusListenersInput)(nil)).Elem(), KafkaStatusListenersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusListenersArrayInput)(nil)).Elem(), KafkaStatusListenersArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusListenersAddressesInput)(nil)).Elem(), KafkaStatusListenersAddressesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusListenersAddressesArrayInput)(nil)).Elem(), KafkaStatusListenersAddressesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusListenersAddressesPatchInput)(nil)).Elem(), KafkaStatusListenersAddressesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusListenersAddressesPatchArrayInput)(nil)).Elem(), KafkaStatusListenersAddressesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusListenersPatchInput)(nil)).Elem(), KafkaStatusListenersPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusListenersPatchArrayInput)(nil)).Elem(), KafkaStatusListenersPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusPatchInput)(nil)).Elem(), KafkaStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaStatusPatchPtrInput)(nil)).Elem(), KafkaStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicTypeInput)(nil)).Elem(), KafkaTopicTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicTypeArrayInput)(nil)).Elem(), KafkaTopicTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicListTypeInput)(nil)).Elem(), KafkaTopicListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicPatchTypeInput)(nil)).Elem(), KafkaTopicPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicSpecInput)(nil)).Elem(), KafkaTopicSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicSpecPtrInput)(nil)).Elem(), KafkaTopicSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicSpecPatchInput)(nil)).Elem(), KafkaTopicSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicSpecPatchPtrInput)(nil)).Elem(), KafkaTopicSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicStatusInput)(nil)).Elem(), KafkaTopicStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicStatusPtrInput)(nil)).Elem(), KafkaTopicStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicStatusConditionsInput)(nil)).Elem(), KafkaTopicStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicStatusConditionsArrayInput)(nil)).Elem(), KafkaTopicStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicStatusConditionsPatchInput)(nil)).Elem(), KafkaTopicStatusConditionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicStatusConditionsPatchArrayInput)(nil)).Elem(), KafkaTopicStatusConditionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicStatusPatchInput)(nil)).Elem(), KafkaTopicStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicStatusPatchPtrInput)(nil)).Elem(), KafkaTopicStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicStatusReplicasChangeInput)(nil)).Elem(), KafkaTopicStatusReplicasChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicStatusReplicasChangePtrInput)(nil)).Elem(), KafkaTopicStatusReplicasChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicStatusReplicasChangePatchInput)(nil)).Elem(), KafkaTopicStatusReplicasChangePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicStatusReplicasChangePatchPtrInput)(nil)).Elem(), KafkaTopicStatusReplicasChangePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserTypeInput)(nil)).Elem(), KafkaUserTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserTypeArrayInput)(nil)).Elem(), KafkaUserTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserListTypeInput)(nil)).Elem(), KafkaUserListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserPatchTypeInput)(nil)).Elem(), KafkaUserPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecInput)(nil)).Elem(), KafkaUserSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecPtrInput)(nil)).Elem(), KafkaUserSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthenticationInput)(nil)).Elem(), KafkaUserSpecAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthenticationPtrInput)(nil)).Elem(), KafkaUserSpecAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthenticationPasswordInput)(nil)).Elem(), KafkaUserSpecAuthenticationPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthenticationPasswordPtrInput)(nil)).Elem(), KafkaUserSpecAuthenticationPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthenticationPasswordPatchInput)(nil)).Elem(), KafkaUserSpecAuthenticationPasswordPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthenticationPasswordPatchPtrInput)(nil)).Elem(), KafkaUserSpecAuthenticationPasswordPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthenticationPasswordValueFromInput)(nil)).Elem(), KafkaUserSpecAuthenticationPasswordValueFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthenticationPasswordValueFromPtrInput)(nil)).Elem(), KafkaUserSpecAuthenticationPasswordValueFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthenticationPasswordValueFromPatchInput)(nil)).Elem(), KafkaUserSpecAuthenticationPasswordValueFromPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthenticationPasswordValueFromPatchPtrInput)(nil)).Elem(), KafkaUserSpecAuthenticationPasswordValueFromPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefInput)(nil)).Elem(), KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrInput)(nil)).Elem(), KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchInput)(nil)).Elem(), KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrInput)(nil)).Elem(), KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthenticationPatchInput)(nil)).Elem(), KafkaUserSpecAuthenticationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthenticationPatchPtrInput)(nil)).Elem(), KafkaUserSpecAuthenticationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthorizationInput)(nil)).Elem(), KafkaUserSpecAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthorizationPtrInput)(nil)).Elem(), KafkaUserSpecAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthorizationAclsInput)(nil)).Elem(), KafkaUserSpecAuthorizationAclsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthorizationAclsArrayInput)(nil)).Elem(), KafkaUserSpecAuthorizationAclsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthorizationAclsPatchInput)(nil)).Elem(), KafkaUserSpecAuthorizationAclsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthorizationAclsPatchArrayInput)(nil)).Elem(), KafkaUserSpecAuthorizationAclsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthorizationAclsResourceInput)(nil)).Elem(), KafkaUserSpecAuthorizationAclsResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthorizationAclsResourcePtrInput)(nil)).Elem(), KafkaUserSpecAuthorizationAclsResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthorizationAclsResourcePatchInput)(nil)).Elem(), KafkaUserSpecAuthorizationAclsResourcePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthorizationAclsResourcePatchPtrInput)(nil)).Elem(), KafkaUserSpecAuthorizationAclsResourcePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthorizationPatchInput)(nil)).Elem(), KafkaUserSpecAuthorizationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecAuthorizationPatchPtrInput)(nil)).Elem(), KafkaUserSpecAuthorizationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecPatchInput)(nil)).Elem(), KafkaUserSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecPatchPtrInput)(nil)).Elem(), KafkaUserSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecQuotasInput)(nil)).Elem(), KafkaUserSpecQuotasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecQuotasPtrInput)(nil)).Elem(), KafkaUserSpecQuotasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecQuotasPatchInput)(nil)).Elem(), KafkaUserSpecQuotasPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecQuotasPatchPtrInput)(nil)).Elem(), KafkaUserSpecQuotasPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecTemplateInput)(nil)).Elem(), KafkaUserSpecTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecTemplatePtrInput)(nil)).Elem(), KafkaUserSpecTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecTemplatePatchInput)(nil)).Elem(), KafkaUserSpecTemplatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecTemplatePatchPtrInput)(nil)).Elem(), KafkaUserSpecTemplatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecTemplateSecretInput)(nil)).Elem(), KafkaUserSpecTemplateSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecTemplateSecretPtrInput)(nil)).Elem(), KafkaUserSpecTemplateSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecTemplateSecretMetadataInput)(nil)).Elem(), KafkaUserSpecTemplateSecretMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecTemplateSecretMetadataPtrInput)(nil)).Elem(), KafkaUserSpecTemplateSecretMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecTemplateSecretMetadataPatchInput)(nil)).Elem(), KafkaUserSpecTemplateSecretMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecTemplateSecretMetadataPatchPtrInput)(nil)).Elem(), KafkaUserSpecTemplateSecretMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecTemplateSecretPatchInput)(nil)).Elem(), KafkaUserSpecTemplateSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserSpecTemplateSecretPatchPtrInput)(nil)).Elem(), KafkaUserSpecTemplateSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserStatusInput)(nil)).Elem(), KafkaUserStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserStatusPtrInput)(nil)).Elem(), KafkaUserStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserStatusConditionsInput)(nil)).Elem(), KafkaUserStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserStatusConditionsArrayInput)(nil)).Elem(), KafkaUserStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserStatusConditionsPatchInput)(nil)).Elem(), KafkaUserStatusConditionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserStatusConditionsPatchArrayInput)(nil)).Elem(), KafkaUserStatusConditionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserStatusPatchInput)(nil)).Elem(), KafkaUserStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaUserStatusPatchPtrInput)(nil)).Elem(), KafkaUserStatusPatchArgs{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodSetPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodSetPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodTolerationsOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodTolerationsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodTolerationsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodTolerationsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodTopologySpreadConstraintsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesConfigMapOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesConfigMapPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesConfigMapItemsOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesConfigMapItemsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesConfigMapItemsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesConfigMapPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesConfigMapPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesCsiOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesCsiPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesCsiPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesCsiPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesEmptyDirOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesEmptyDirPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesEmptyDirPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesImageOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesImagePtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesImagePatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesImagePatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesSecretOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesSecretPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesSecretItemsOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesSecretItemsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesSecretItemsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesSecretPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplatePodVolumesSecretPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplateServiceAccountOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplateServiceAccountPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplateServiceAccountMetadataOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplateServiceAccountMetadataPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplateServiceAccountMetadataPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplateServiceAccountMetadataPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplateServiceAccountPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplateServiceAccountPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplateStatefulsetOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplateStatefulsetPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplateStatefulsetMetadataOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplateStatefulsetMetadataPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplateStatefulsetMetadataPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplateStatefulsetMetadataPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplateStatefulsetPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTemplateStatefulsetPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTieredStorageOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTieredStoragePtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTieredStoragePatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTieredStoragePatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTieredStorageRemoteStorageManagerOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTieredStorageRemoteStorageManagerPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecKafkaTieredStorageRemoteStorageManagerPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperJmxOptionsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperJmxOptionsPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperJmxOptionsAuthenticationOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperJmxOptionsAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperJmxOptionsAuthenticationPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperJmxOptionsAuthenticationPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperJmxOptionsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperJmxOptionsPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperJvmOptionsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperJvmOptionsPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperJvmOptionsJavaSystemPropertiesPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperJvmOptionsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperJvmOptionsPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperLivenessProbeOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperLivenessProbePtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperLivenessProbePatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperLivenessProbePatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperLoggingOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperLoggingPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperLoggingPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperLoggingPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperLoggingValueFromOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperLoggingValueFromPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperLoggingValueFromConfigMapKeyRefPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperLoggingValueFromPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperLoggingValueFromPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperMetricsConfigOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperMetricsConfigPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperMetricsConfigPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperMetricsConfigPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperMetricsConfigValueFromOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperMetricsConfigValueFromPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperMetricsConfigValueFromConfigMapKeyRefPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperMetricsConfigValueFromPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperMetricsConfigValueFromPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperMetricsConfigValuesOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperMetricsConfigValuesPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperMetricsConfigValuesPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperMetricsConfigValuesPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperReadinessProbeOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperReadinessProbePtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperReadinessProbePatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperReadinessProbePatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperResourcesOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperResourcesPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperResourcesClaimsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperResourcesClaimsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperResourcesClaimsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperResourcesClaimsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperResourcesPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperResourcesPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperStorageOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperStoragePtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperStorageOverridesOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperStorageOverridesArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperStorageOverridesPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperStorageOverridesPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperStoragePatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperStoragePatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateClientServiceOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateClientServicePtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateClientServiceMetadataOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateClientServiceMetadataPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateClientServiceMetadataPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateClientServiceMetadataPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateClientServicePatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateClientServicePatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateJmxSecretOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateJmxSecretPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateJmxSecretMetadataOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateJmxSecretMetadataPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateJmxSecretMetadataPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateJmxSecretMetadataPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateJmxSecretPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateJmxSecretPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateNodesServiceOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateNodesServicePtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateNodesServiceMetadataOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateNodesServiceMetadataPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateNodesServiceMetadataPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateNodesServiceMetadataPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateNodesServicePatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateNodesServicePatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePersistentVolumeClaimOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePersistentVolumeClaimPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePersistentVolumeClaimMetadataPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePersistentVolumeClaimPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferencePatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodDisruptionBudgetOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodDisruptionBudgetPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodDisruptionBudgetMetadataPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodDisruptionBudgetPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodDnsConfigOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodDnsConfigPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodDnsConfigOptionsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodDnsConfigOptionsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodDnsConfigOptionsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodDnsConfigPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodDnsConfigPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodHostAliasesOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodHostAliasesArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodHostAliasesPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodHostAliasesPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodImagePullSecretsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodImagePullSecretsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodImagePullSecretsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodImagePullSecretsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodMetadataOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodMetadataPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodMetadataPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodMetadataPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfileOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextAppArmorProfilePatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextSeLinuxOptionsPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfileOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextSeccompProfilePatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextSysctlsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextSysctlsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextSysctlsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSecurityContextWindowsOptionsPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSetOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSetPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSetMetadataOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSetMetadataPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSetMetadataPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSetMetadataPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSetPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodSetPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodTolerationsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodTolerationsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodTolerationsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodTolerationsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsLabelSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodTopologySpreadConstraintsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesConfigMapOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesConfigMapPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesConfigMapItemsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesConfigMapPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesCsiOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesCsiPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesCsiNodePublishSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesCsiPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesCsiPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesEmptyDirOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesEmptyDirPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesEmptyDirPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesEmptyDirSizeLimitPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesImageOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesImagePtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesImagePatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesImagePatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesPersistentVolumeClaimPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesSecretOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesSecretPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesSecretItemsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesSecretItemsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesSecretItemsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesSecretPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplatePodVolumesSecretPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateServiceAccountOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateServiceAccountPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateServiceAccountMetadataOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateServiceAccountMetadataPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateServiceAccountMetadataPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateServiceAccountMetadataPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateServiceAccountPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateServiceAccountPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateStatefulsetOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateStatefulsetPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateStatefulsetMetadataOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateStatefulsetMetadataPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateStatefulsetMetadataPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateStatefulsetMetadataPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateStatefulsetPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateStatefulsetPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerEnvOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerEnvArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerEnvPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromConfigMapKeyRefPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerEnvValueFromSecretKeyRefPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfileOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextAppArmorProfilePatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextCapabilitiesPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeLinuxOptionsPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfileOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextSeccompProfilePatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerSecurityContextWindowsOptionsPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsArrayOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchOutput{})
	pulumi.RegisterOutputType(KafkaSpecZookeeperTemplateZookeeperContainerVolumeMountsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaStatusOutput{})
	pulumi.RegisterOutputType(KafkaStatusPtrOutput{})
	pulumi.RegisterOutputType(KafkaStatusAutoRebalanceOutput{})
	pulumi.RegisterOutputType(KafkaStatusAutoRebalancePtrOutput{})
	pulumi.RegisterOutputType(KafkaStatusAutoRebalanceModesOutput{})
	pulumi.RegisterOutputType(KafkaStatusAutoRebalanceModesArrayOutput{})
	pulumi.RegisterOutputType(KafkaStatusAutoRebalanceModesPatchOutput{})
	pulumi.RegisterOutputType(KafkaStatusAutoRebalanceModesPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaStatusAutoRebalancePatchOutput{})
	pulumi.RegisterOutputType(KafkaStatusAutoRebalancePatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaStatusConditionsOutput{})
	pulumi.RegisterOutputType(KafkaStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(KafkaStatusConditionsPatchOutput{})
	pulumi.RegisterOutputType(KafkaStatusConditionsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaStatusKafkaNodePoolsOutput{})
	pulumi.RegisterOutputType(KafkaStatusKafkaNodePoolsArrayOutput{})
	pulumi.RegisterOutputType(KafkaStatusKafkaNodePoolsPatchOutput{})
	pulumi.RegisterOutputType(KafkaStatusKafkaNodePoolsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaStatusListenersOutput{})
	pulumi.RegisterOutputType(KafkaStatusListenersArrayOutput{})
	pulumi.RegisterOutputType(KafkaStatusListenersAddressesOutput{})
	pulumi.RegisterOutputType(KafkaStatusListenersAddressesArrayOutput{})
	pulumi.RegisterOutputType(KafkaStatusListenersAddressesPatchOutput{})
	pulumi.RegisterOutputType(KafkaStatusListenersAddressesPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaStatusListenersPatchOutput{})
	pulumi.RegisterOutputType(KafkaStatusListenersPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaStatusPatchOutput{})
	pulumi.RegisterOutputType(KafkaStatusPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaTopicTypeOutput{})
	pulumi.RegisterOutputType(KafkaTopicTypeArrayOutput{})
	pulumi.RegisterOutputType(KafkaTopicListTypeOutput{})
	pulumi.RegisterOutputType(KafkaTopicPatchTypeOutput{})
	pulumi.RegisterOutputType(KafkaTopicSpecOutput{})
	pulumi.RegisterOutputType(KafkaTopicSpecPtrOutput{})
	pulumi.RegisterOutputType(KafkaTopicSpecPatchOutput{})
	pulumi.RegisterOutputType(KafkaTopicSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaTopicStatusOutput{})
	pulumi.RegisterOutputType(KafkaTopicStatusPtrOutput{})
	pulumi.RegisterOutputType(KafkaTopicStatusConditionsOutput{})
	pulumi.RegisterOutputType(KafkaTopicStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(KafkaTopicStatusConditionsPatchOutput{})
	pulumi.RegisterOutputType(KafkaTopicStatusConditionsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaTopicStatusPatchOutput{})
	pulumi.RegisterOutputType(KafkaTopicStatusPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaTopicStatusReplicasChangeOutput{})
	pulumi.RegisterOutputType(KafkaTopicStatusReplicasChangePtrOutput{})
	pulumi.RegisterOutputType(KafkaTopicStatusReplicasChangePatchOutput{})
	pulumi.RegisterOutputType(KafkaTopicStatusReplicasChangePatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaUserTypeOutput{})
	pulumi.RegisterOutputType(KafkaUserTypeArrayOutput{})
	pulumi.RegisterOutputType(KafkaUserListTypeOutput{})
	pulumi.RegisterOutputType(KafkaUserPatchTypeOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecPtrOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthenticationOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthenticationPasswordOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthenticationPasswordPtrOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthenticationPasswordPatchOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthenticationPasswordPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthenticationPasswordValueFromOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthenticationPasswordValueFromPtrOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthenticationPasswordValueFromPatchOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthenticationPasswordValueFromPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPtrOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRefPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthenticationPatchOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthenticationPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthorizationOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthorizationPtrOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthorizationAclsOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthorizationAclsArrayOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthorizationAclsPatchOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthorizationAclsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthorizationAclsResourceOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthorizationAclsResourcePtrOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthorizationAclsResourcePatchOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthorizationAclsResourcePatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthorizationPatchOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecAuthorizationPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecPatchOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecQuotasOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecQuotasPtrOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecQuotasPatchOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecQuotasPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecTemplateOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecTemplatePtrOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecTemplatePatchOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecTemplatePatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecTemplateSecretOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecTemplateSecretPtrOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecTemplateSecretMetadataOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecTemplateSecretMetadataPtrOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecTemplateSecretMetadataPatchOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecTemplateSecretMetadataPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecTemplateSecretPatchOutput{})
	pulumi.RegisterOutputType(KafkaUserSpecTemplateSecretPatchPtrOutput{})
	pulumi.RegisterOutputType(KafkaUserStatusOutput{})
	pulumi.RegisterOutputType(KafkaUserStatusPtrOutput{})
	pulumi.RegisterOutputType(KafkaUserStatusConditionsOutput{})
	pulumi.RegisterOutputType(KafkaUserStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(KafkaUserStatusConditionsPatchOutput{})
	pulumi.RegisterOutputType(KafkaUserStatusConditionsPatchArrayOutput{})
	pulumi.RegisterOutputType(KafkaUserStatusPatchOutput{})
	pulumi.RegisterOutputType(KafkaUserStatusPatchPtrOutput{})
}
