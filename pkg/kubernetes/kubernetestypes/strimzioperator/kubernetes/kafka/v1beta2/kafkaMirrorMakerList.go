// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta2

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// KafkaMirrorMakerList is a list of KafkaMirrorMaker
type KafkaMirrorMakerList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of kafkamirrormakers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items KafkaMirrorMakerTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewKafkaMirrorMakerList registers a new resource with the given unique name, arguments, and options.
func NewKafkaMirrorMakerList(ctx *pulumi.Context,
	name string, args *KafkaMirrorMakerListArgs, opts ...pulumi.ResourceOption) (*KafkaMirrorMakerList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("kafka.strimzi.io/v1beta2")
	args.Kind = pulumi.StringPtr("KafkaMirrorMakerList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource KafkaMirrorMakerList
	err := ctx.RegisterResource("kubernetes:kafka.strimzi.io/v1beta2:KafkaMirrorMakerList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKafkaMirrorMakerList gets an existing KafkaMirrorMakerList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKafkaMirrorMakerList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KafkaMirrorMakerListState, opts ...pulumi.ResourceOption) (*KafkaMirrorMakerList, error) {
	var resource KafkaMirrorMakerList
	err := ctx.ReadResource("kubernetes:kafka.strimzi.io/v1beta2:KafkaMirrorMakerList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KafkaMirrorMakerList resources.
type kafkaMirrorMakerListState struct {
}

type KafkaMirrorMakerListState struct {
}

func (KafkaMirrorMakerListState) ElementType() reflect.Type {
	return reflect.TypeOf((*kafkaMirrorMakerListState)(nil)).Elem()
}

type kafkaMirrorMakerListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of kafkamirrormakers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []KafkaMirrorMakerType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a KafkaMirrorMakerList resource.
type KafkaMirrorMakerListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of kafkamirrormakers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items KafkaMirrorMakerTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (KafkaMirrorMakerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kafkaMirrorMakerListArgs)(nil)).Elem()
}

type KafkaMirrorMakerListInput interface {
	pulumi.Input

	ToKafkaMirrorMakerListOutput() KafkaMirrorMakerListOutput
	ToKafkaMirrorMakerListOutputWithContext(ctx context.Context) KafkaMirrorMakerListOutput
}

func (*KafkaMirrorMakerList) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorMakerList)(nil)).Elem()
}

func (i *KafkaMirrorMakerList) ToKafkaMirrorMakerListOutput() KafkaMirrorMakerListOutput {
	return i.ToKafkaMirrorMakerListOutputWithContext(context.Background())
}

func (i *KafkaMirrorMakerList) ToKafkaMirrorMakerListOutputWithContext(ctx context.Context) KafkaMirrorMakerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorMakerListOutput)
}

// KafkaMirrorMakerListArrayInput is an input type that accepts KafkaMirrorMakerListArray and KafkaMirrorMakerListArrayOutput values.
// You can construct a concrete instance of `KafkaMirrorMakerListArrayInput` via:
//
//	KafkaMirrorMakerListArray{ KafkaMirrorMakerListArgs{...} }
type KafkaMirrorMakerListArrayInput interface {
	pulumi.Input

	ToKafkaMirrorMakerListArrayOutput() KafkaMirrorMakerListArrayOutput
	ToKafkaMirrorMakerListArrayOutputWithContext(context.Context) KafkaMirrorMakerListArrayOutput
}

type KafkaMirrorMakerListArray []KafkaMirrorMakerListInput

func (KafkaMirrorMakerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KafkaMirrorMakerList)(nil)).Elem()
}

func (i KafkaMirrorMakerListArray) ToKafkaMirrorMakerListArrayOutput() KafkaMirrorMakerListArrayOutput {
	return i.ToKafkaMirrorMakerListArrayOutputWithContext(context.Background())
}

func (i KafkaMirrorMakerListArray) ToKafkaMirrorMakerListArrayOutputWithContext(ctx context.Context) KafkaMirrorMakerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorMakerListArrayOutput)
}

// KafkaMirrorMakerListMapInput is an input type that accepts KafkaMirrorMakerListMap and KafkaMirrorMakerListMapOutput values.
// You can construct a concrete instance of `KafkaMirrorMakerListMapInput` via:
//
//	KafkaMirrorMakerListMap{ "key": KafkaMirrorMakerListArgs{...} }
type KafkaMirrorMakerListMapInput interface {
	pulumi.Input

	ToKafkaMirrorMakerListMapOutput() KafkaMirrorMakerListMapOutput
	ToKafkaMirrorMakerListMapOutputWithContext(context.Context) KafkaMirrorMakerListMapOutput
}

type KafkaMirrorMakerListMap map[string]KafkaMirrorMakerListInput

func (KafkaMirrorMakerListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KafkaMirrorMakerList)(nil)).Elem()
}

func (i KafkaMirrorMakerListMap) ToKafkaMirrorMakerListMapOutput() KafkaMirrorMakerListMapOutput {
	return i.ToKafkaMirrorMakerListMapOutputWithContext(context.Background())
}

func (i KafkaMirrorMakerListMap) ToKafkaMirrorMakerListMapOutputWithContext(ctx context.Context) KafkaMirrorMakerListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorMakerListMapOutput)
}

type KafkaMirrorMakerListOutput struct{ *pulumi.OutputState }

func (KafkaMirrorMakerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorMakerList)(nil)).Elem()
}

func (o KafkaMirrorMakerListOutput) ToKafkaMirrorMakerListOutput() KafkaMirrorMakerListOutput {
	return o
}

func (o KafkaMirrorMakerListOutput) ToKafkaMirrorMakerListOutputWithContext(ctx context.Context) KafkaMirrorMakerListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o KafkaMirrorMakerListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaMirrorMakerList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of kafkamirrormakers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o KafkaMirrorMakerListOutput) Items() KafkaMirrorMakerTypeArrayOutput {
	return o.ApplyT(func(v *KafkaMirrorMakerList) KafkaMirrorMakerTypeArrayOutput { return v.Items }).(KafkaMirrorMakerTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o KafkaMirrorMakerListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaMirrorMakerList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o KafkaMirrorMakerListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *KafkaMirrorMakerList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type KafkaMirrorMakerListArrayOutput struct{ *pulumi.OutputState }

func (KafkaMirrorMakerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KafkaMirrorMakerList)(nil)).Elem()
}

func (o KafkaMirrorMakerListArrayOutput) ToKafkaMirrorMakerListArrayOutput() KafkaMirrorMakerListArrayOutput {
	return o
}

func (o KafkaMirrorMakerListArrayOutput) ToKafkaMirrorMakerListArrayOutputWithContext(ctx context.Context) KafkaMirrorMakerListArrayOutput {
	return o
}

func (o KafkaMirrorMakerListArrayOutput) Index(i pulumi.IntInput) KafkaMirrorMakerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KafkaMirrorMakerList {
		return vs[0].([]*KafkaMirrorMakerList)[vs[1].(int)]
	}).(KafkaMirrorMakerListOutput)
}

type KafkaMirrorMakerListMapOutput struct{ *pulumi.OutputState }

func (KafkaMirrorMakerListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KafkaMirrorMakerList)(nil)).Elem()
}

func (o KafkaMirrorMakerListMapOutput) ToKafkaMirrorMakerListMapOutput() KafkaMirrorMakerListMapOutput {
	return o
}

func (o KafkaMirrorMakerListMapOutput) ToKafkaMirrorMakerListMapOutputWithContext(ctx context.Context) KafkaMirrorMakerListMapOutput {
	return o
}

func (o KafkaMirrorMakerListMapOutput) MapIndex(k pulumi.StringInput) KafkaMirrorMakerListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KafkaMirrorMakerList {
		return vs[0].(map[string]*KafkaMirrorMakerList)[vs[1].(string)]
	}).(KafkaMirrorMakerListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaMirrorMakerListInput)(nil)).Elem(), &KafkaMirrorMakerList{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaMirrorMakerListArrayInput)(nil)).Elem(), KafkaMirrorMakerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaMirrorMakerListMapInput)(nil)).Elem(), KafkaMirrorMakerListMap{})
	pulumi.RegisterOutputType(KafkaMirrorMakerListOutput{})
	pulumi.RegisterOutputType(KafkaMirrorMakerListArrayOutput{})
	pulumi.RegisterOutputType(KafkaMirrorMakerListMapOutput{})
}
