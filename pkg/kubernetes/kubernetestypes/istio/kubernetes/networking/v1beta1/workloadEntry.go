// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WorkloadEntry struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput `pulumi:"metadata"`
	Spec     WorkloadEntrySpecOutput `pulumi:"spec"`
	Status   pulumi.MapOutput        `pulumi:"status"`
}

// NewWorkloadEntry registers a new resource with the given unique name, arguments, and options.
func NewWorkloadEntry(ctx *pulumi.Context,
	name string, args *WorkloadEntryArgs, opts ...pulumi.ResourceOption) (*WorkloadEntry, error) {
	if args == nil {
		args = &WorkloadEntryArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("networking.istio.io/v1beta1")
	args.Kind = pulumi.StringPtr("WorkloadEntry")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("kubernetes:networking.istio.io/v1:WorkloadEntry"),
		},
		{
			Type: pulumi.String("kubernetes:networking.istio.io/v1alpha3:WorkloadEntry"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource WorkloadEntry
	err := ctx.RegisterResource("kubernetes:networking.istio.io/v1beta1:WorkloadEntry", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkloadEntry gets an existing WorkloadEntry resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkloadEntry(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkloadEntryState, opts ...pulumi.ResourceOption) (*WorkloadEntry, error) {
	var resource WorkloadEntry
	err := ctx.ReadResource("kubernetes:networking.istio.io/v1beta1:WorkloadEntry", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkloadEntry resources.
type workloadEntryState struct {
}

type WorkloadEntryState struct {
}

func (WorkloadEntryState) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadEntryState)(nil)).Elem()
}

type workloadEntryArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *WorkloadEntrySpec `pulumi:"spec"`
}

// The set of arguments for constructing a WorkloadEntry resource.
type WorkloadEntryArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     WorkloadEntrySpecPtrInput
}

func (WorkloadEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadEntryArgs)(nil)).Elem()
}

type WorkloadEntryInput interface {
	pulumi.Input

	ToWorkloadEntryOutput() WorkloadEntryOutput
	ToWorkloadEntryOutputWithContext(ctx context.Context) WorkloadEntryOutput
}

func (*WorkloadEntry) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadEntry)(nil)).Elem()
}

func (i *WorkloadEntry) ToWorkloadEntryOutput() WorkloadEntryOutput {
	return i.ToWorkloadEntryOutputWithContext(context.Background())
}

func (i *WorkloadEntry) ToWorkloadEntryOutputWithContext(ctx context.Context) WorkloadEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadEntryOutput)
}

// WorkloadEntryArrayInput is an input type that accepts WorkloadEntryArray and WorkloadEntryArrayOutput values.
// You can construct a concrete instance of `WorkloadEntryArrayInput` via:
//
//	WorkloadEntryArray{ WorkloadEntryArgs{...} }
type WorkloadEntryArrayInput interface {
	pulumi.Input

	ToWorkloadEntryArrayOutput() WorkloadEntryArrayOutput
	ToWorkloadEntryArrayOutputWithContext(context.Context) WorkloadEntryArrayOutput
}

type WorkloadEntryArray []WorkloadEntryInput

func (WorkloadEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkloadEntry)(nil)).Elem()
}

func (i WorkloadEntryArray) ToWorkloadEntryArrayOutput() WorkloadEntryArrayOutput {
	return i.ToWorkloadEntryArrayOutputWithContext(context.Background())
}

func (i WorkloadEntryArray) ToWorkloadEntryArrayOutputWithContext(ctx context.Context) WorkloadEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadEntryArrayOutput)
}

// WorkloadEntryMapInput is an input type that accepts WorkloadEntryMap and WorkloadEntryMapOutput values.
// You can construct a concrete instance of `WorkloadEntryMapInput` via:
//
//	WorkloadEntryMap{ "key": WorkloadEntryArgs{...} }
type WorkloadEntryMapInput interface {
	pulumi.Input

	ToWorkloadEntryMapOutput() WorkloadEntryMapOutput
	ToWorkloadEntryMapOutputWithContext(context.Context) WorkloadEntryMapOutput
}

type WorkloadEntryMap map[string]WorkloadEntryInput

func (WorkloadEntryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkloadEntry)(nil)).Elem()
}

func (i WorkloadEntryMap) ToWorkloadEntryMapOutput() WorkloadEntryMapOutput {
	return i.ToWorkloadEntryMapOutputWithContext(context.Background())
}

func (i WorkloadEntryMap) ToWorkloadEntryMapOutputWithContext(ctx context.Context) WorkloadEntryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadEntryMapOutput)
}

type WorkloadEntryOutput struct{ *pulumi.OutputState }

func (WorkloadEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadEntry)(nil)).Elem()
}

func (o WorkloadEntryOutput) ToWorkloadEntryOutput() WorkloadEntryOutput {
	return o
}

func (o WorkloadEntryOutput) ToWorkloadEntryOutputWithContext(ctx context.Context) WorkloadEntryOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o WorkloadEntryOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadEntry) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o WorkloadEntryOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadEntry) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o WorkloadEntryOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *WorkloadEntry) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o WorkloadEntryOutput) Spec() WorkloadEntrySpecOutput {
	return o.ApplyT(func(v *WorkloadEntry) WorkloadEntrySpecOutput { return v.Spec }).(WorkloadEntrySpecOutput)
}

func (o WorkloadEntryOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v *WorkloadEntry) pulumi.MapOutput { return v.Status }).(pulumi.MapOutput)
}

type WorkloadEntryArrayOutput struct{ *pulumi.OutputState }

func (WorkloadEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkloadEntry)(nil)).Elem()
}

func (o WorkloadEntryArrayOutput) ToWorkloadEntryArrayOutput() WorkloadEntryArrayOutput {
	return o
}

func (o WorkloadEntryArrayOutput) ToWorkloadEntryArrayOutputWithContext(ctx context.Context) WorkloadEntryArrayOutput {
	return o
}

func (o WorkloadEntryArrayOutput) Index(i pulumi.IntInput) WorkloadEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkloadEntry {
		return vs[0].([]*WorkloadEntry)[vs[1].(int)]
	}).(WorkloadEntryOutput)
}

type WorkloadEntryMapOutput struct{ *pulumi.OutputState }

func (WorkloadEntryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkloadEntry)(nil)).Elem()
}

func (o WorkloadEntryMapOutput) ToWorkloadEntryMapOutput() WorkloadEntryMapOutput {
	return o
}

func (o WorkloadEntryMapOutput) ToWorkloadEntryMapOutputWithContext(ctx context.Context) WorkloadEntryMapOutput {
	return o
}

func (o WorkloadEntryMapOutput) MapIndex(k pulumi.StringInput) WorkloadEntryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkloadEntry {
		return vs[0].(map[string]*WorkloadEntry)[vs[1].(string)]
	}).(WorkloadEntryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadEntryInput)(nil)).Elem(), &WorkloadEntry{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadEntryArrayInput)(nil)).Elem(), WorkloadEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadEntryMapInput)(nil)).Elem(), WorkloadEntryMap{})
	pulumi.RegisterOutputType(WorkloadEntryOutput{})
	pulumi.RegisterOutputType(WorkloadEntryArrayOutput{})
	pulumi.RegisterOutputType(WorkloadEntryMapOutput{})
}
