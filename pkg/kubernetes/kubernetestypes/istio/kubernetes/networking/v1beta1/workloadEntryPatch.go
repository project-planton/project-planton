// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
type WorkloadEntryPatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput `pulumi:"metadata"`
	Spec     WorkloadEntrySpecPatchPtrOutput `pulumi:"spec"`
	Status   pulumi.MapOutput                `pulumi:"status"`
}

// NewWorkloadEntryPatch registers a new resource with the given unique name, arguments, and options.
func NewWorkloadEntryPatch(ctx *pulumi.Context,
	name string, args *WorkloadEntryPatchArgs, opts ...pulumi.ResourceOption) (*WorkloadEntryPatch, error) {
	if args == nil {
		args = &WorkloadEntryPatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("networking.istio.io/v1beta1")
	args.Kind = pulumi.StringPtr("WorkloadEntry")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("kubernetes:networking.istio.io/v1:WorkloadEntryPatch"),
		},
		{
			Type: pulumi.String("kubernetes:networking.istio.io/v1alpha3:WorkloadEntryPatch"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource WorkloadEntryPatch
	err := ctx.RegisterResource("kubernetes:networking.istio.io/v1beta1:WorkloadEntryPatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkloadEntryPatch gets an existing WorkloadEntryPatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkloadEntryPatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkloadEntryPatchState, opts ...pulumi.ResourceOption) (*WorkloadEntryPatch, error) {
	var resource WorkloadEntryPatch
	err := ctx.ReadResource("kubernetes:networking.istio.io/v1beta1:WorkloadEntryPatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkloadEntryPatch resources.
type workloadEntryPatchState struct {
}

type WorkloadEntryPatchState struct {
}

func (WorkloadEntryPatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadEntryPatchState)(nil)).Elem()
}

type workloadEntryPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *WorkloadEntrySpecPatch `pulumi:"spec"`
}

// The set of arguments for constructing a WorkloadEntryPatch resource.
type WorkloadEntryPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     WorkloadEntrySpecPatchPtrInput
}

func (WorkloadEntryPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadEntryPatchArgs)(nil)).Elem()
}

type WorkloadEntryPatchInput interface {
	pulumi.Input

	ToWorkloadEntryPatchOutput() WorkloadEntryPatchOutput
	ToWorkloadEntryPatchOutputWithContext(ctx context.Context) WorkloadEntryPatchOutput
}

func (*WorkloadEntryPatch) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadEntryPatch)(nil)).Elem()
}

func (i *WorkloadEntryPatch) ToWorkloadEntryPatchOutput() WorkloadEntryPatchOutput {
	return i.ToWorkloadEntryPatchOutputWithContext(context.Background())
}

func (i *WorkloadEntryPatch) ToWorkloadEntryPatchOutputWithContext(ctx context.Context) WorkloadEntryPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadEntryPatchOutput)
}

// WorkloadEntryPatchArrayInput is an input type that accepts WorkloadEntryPatchArray and WorkloadEntryPatchArrayOutput values.
// You can construct a concrete instance of `WorkloadEntryPatchArrayInput` via:
//
//	WorkloadEntryPatchArray{ WorkloadEntryPatchArgs{...} }
type WorkloadEntryPatchArrayInput interface {
	pulumi.Input

	ToWorkloadEntryPatchArrayOutput() WorkloadEntryPatchArrayOutput
	ToWorkloadEntryPatchArrayOutputWithContext(context.Context) WorkloadEntryPatchArrayOutput
}

type WorkloadEntryPatchArray []WorkloadEntryPatchInput

func (WorkloadEntryPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkloadEntryPatch)(nil)).Elem()
}

func (i WorkloadEntryPatchArray) ToWorkloadEntryPatchArrayOutput() WorkloadEntryPatchArrayOutput {
	return i.ToWorkloadEntryPatchArrayOutputWithContext(context.Background())
}

func (i WorkloadEntryPatchArray) ToWorkloadEntryPatchArrayOutputWithContext(ctx context.Context) WorkloadEntryPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadEntryPatchArrayOutput)
}

// WorkloadEntryPatchMapInput is an input type that accepts WorkloadEntryPatchMap and WorkloadEntryPatchMapOutput values.
// You can construct a concrete instance of `WorkloadEntryPatchMapInput` via:
//
//	WorkloadEntryPatchMap{ "key": WorkloadEntryPatchArgs{...} }
type WorkloadEntryPatchMapInput interface {
	pulumi.Input

	ToWorkloadEntryPatchMapOutput() WorkloadEntryPatchMapOutput
	ToWorkloadEntryPatchMapOutputWithContext(context.Context) WorkloadEntryPatchMapOutput
}

type WorkloadEntryPatchMap map[string]WorkloadEntryPatchInput

func (WorkloadEntryPatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkloadEntryPatch)(nil)).Elem()
}

func (i WorkloadEntryPatchMap) ToWorkloadEntryPatchMapOutput() WorkloadEntryPatchMapOutput {
	return i.ToWorkloadEntryPatchMapOutputWithContext(context.Background())
}

func (i WorkloadEntryPatchMap) ToWorkloadEntryPatchMapOutputWithContext(ctx context.Context) WorkloadEntryPatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadEntryPatchMapOutput)
}

type WorkloadEntryPatchOutput struct{ *pulumi.OutputState }

func (WorkloadEntryPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadEntryPatch)(nil)).Elem()
}

func (o WorkloadEntryPatchOutput) ToWorkloadEntryPatchOutput() WorkloadEntryPatchOutput {
	return o
}

func (o WorkloadEntryPatchOutput) ToWorkloadEntryPatchOutputWithContext(ctx context.Context) WorkloadEntryPatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o WorkloadEntryPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadEntryPatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o WorkloadEntryPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadEntryPatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o WorkloadEntryPatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *WorkloadEntryPatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o WorkloadEntryPatchOutput) Spec() WorkloadEntrySpecPatchPtrOutput {
	return o.ApplyT(func(v *WorkloadEntryPatch) WorkloadEntrySpecPatchPtrOutput { return v.Spec }).(WorkloadEntrySpecPatchPtrOutput)
}

func (o WorkloadEntryPatchOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v *WorkloadEntryPatch) pulumi.MapOutput { return v.Status }).(pulumi.MapOutput)
}

type WorkloadEntryPatchArrayOutput struct{ *pulumi.OutputState }

func (WorkloadEntryPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkloadEntryPatch)(nil)).Elem()
}

func (o WorkloadEntryPatchArrayOutput) ToWorkloadEntryPatchArrayOutput() WorkloadEntryPatchArrayOutput {
	return o
}

func (o WorkloadEntryPatchArrayOutput) ToWorkloadEntryPatchArrayOutputWithContext(ctx context.Context) WorkloadEntryPatchArrayOutput {
	return o
}

func (o WorkloadEntryPatchArrayOutput) Index(i pulumi.IntInput) WorkloadEntryPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkloadEntryPatch {
		return vs[0].([]*WorkloadEntryPatch)[vs[1].(int)]
	}).(WorkloadEntryPatchOutput)
}

type WorkloadEntryPatchMapOutput struct{ *pulumi.OutputState }

func (WorkloadEntryPatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkloadEntryPatch)(nil)).Elem()
}

func (o WorkloadEntryPatchMapOutput) ToWorkloadEntryPatchMapOutput() WorkloadEntryPatchMapOutput {
	return o
}

func (o WorkloadEntryPatchMapOutput) ToWorkloadEntryPatchMapOutputWithContext(ctx context.Context) WorkloadEntryPatchMapOutput {
	return o
}

func (o WorkloadEntryPatchMapOutput) MapIndex(k pulumi.StringInput) WorkloadEntryPatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkloadEntryPatch {
		return vs[0].(map[string]*WorkloadEntryPatch)[vs[1].(string)]
	}).(WorkloadEntryPatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadEntryPatchInput)(nil)).Elem(), &WorkloadEntryPatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadEntryPatchArrayInput)(nil)).Elem(), WorkloadEntryPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadEntryPatchMapInput)(nil)).Elem(), WorkloadEntryPatchMap{})
	pulumi.RegisterOutputType(WorkloadEntryPatchOutput{})
	pulumi.RegisterOutputType(WorkloadEntryPatchArrayOutput{})
	pulumi.RegisterOutputType(WorkloadEntryPatchMapOutput{})
}
