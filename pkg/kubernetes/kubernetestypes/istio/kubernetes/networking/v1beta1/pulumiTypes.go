// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

type DestinationRuleType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta     `pulumi:"metadata"`
	Spec     *DestinationRuleSpec   `pulumi:"spec"`
	Status   map[string]interface{} `pulumi:"status"`
}

// DestinationRuleTypeInput is an input type that accepts DestinationRuleTypeArgs and DestinationRuleTypeOutput values.
// You can construct a concrete instance of `DestinationRuleTypeInput` via:
//
//	DestinationRuleTypeArgs{...}
type DestinationRuleTypeInput interface {
	pulumi.Input

	ToDestinationRuleTypeOutput() DestinationRuleTypeOutput
	ToDestinationRuleTypeOutputWithContext(context.Context) DestinationRuleTypeOutput
}

type DestinationRuleTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput   `pulumi:"metadata"`
	Spec     DestinationRuleSpecPtrInput `pulumi:"spec"`
	Status   pulumi.MapInput             `pulumi:"status"`
}

func (DestinationRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleType)(nil)).Elem()
}

func (i DestinationRuleTypeArgs) ToDestinationRuleTypeOutput() DestinationRuleTypeOutput {
	return i.ToDestinationRuleTypeOutputWithContext(context.Background())
}

func (i DestinationRuleTypeArgs) ToDestinationRuleTypeOutputWithContext(ctx context.Context) DestinationRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleTypeOutput)
}

// DestinationRuleTypeArrayInput is an input type that accepts DestinationRuleTypeArray and DestinationRuleTypeArrayOutput values.
// You can construct a concrete instance of `DestinationRuleTypeArrayInput` via:
//
//	DestinationRuleTypeArray{ DestinationRuleTypeArgs{...} }
type DestinationRuleTypeArrayInput interface {
	pulumi.Input

	ToDestinationRuleTypeArrayOutput() DestinationRuleTypeArrayOutput
	ToDestinationRuleTypeArrayOutputWithContext(context.Context) DestinationRuleTypeArrayOutput
}

type DestinationRuleTypeArray []DestinationRuleTypeInput

func (DestinationRuleTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleType)(nil)).Elem()
}

func (i DestinationRuleTypeArray) ToDestinationRuleTypeArrayOutput() DestinationRuleTypeArrayOutput {
	return i.ToDestinationRuleTypeArrayOutputWithContext(context.Background())
}

func (i DestinationRuleTypeArray) ToDestinationRuleTypeArrayOutputWithContext(ctx context.Context) DestinationRuleTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleTypeArrayOutput)
}

type DestinationRuleTypeOutput struct{ *pulumi.OutputState }

func (DestinationRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleType)(nil)).Elem()
}

func (o DestinationRuleTypeOutput) ToDestinationRuleTypeOutput() DestinationRuleTypeOutput {
	return o
}

func (o DestinationRuleTypeOutput) ToDestinationRuleTypeOutputWithContext(ctx context.Context) DestinationRuleTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o DestinationRuleTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o DestinationRuleTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o DestinationRuleTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v DestinationRuleType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o DestinationRuleTypeOutput) Spec() DestinationRuleSpecPtrOutput {
	return o.ApplyT(func(v DestinationRuleType) *DestinationRuleSpec { return v.Spec }).(DestinationRuleSpecPtrOutput)
}

func (o DestinationRuleTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v DestinationRuleType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

type DestinationRuleTypeArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleType)(nil)).Elem()
}

func (o DestinationRuleTypeArrayOutput) ToDestinationRuleTypeArrayOutput() DestinationRuleTypeArrayOutput {
	return o
}

func (o DestinationRuleTypeArrayOutput) ToDestinationRuleTypeArrayOutputWithContext(ctx context.Context) DestinationRuleTypeArrayOutput {
	return o
}

func (o DestinationRuleTypeArrayOutput) Index(i pulumi.IntInput) DestinationRuleTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DestinationRuleType {
		return vs[0].([]DestinationRuleType)[vs[1].(int)]
	}).(DestinationRuleTypeOutput)
}

// DestinationRuleList is a list of DestinationRule
type DestinationRuleListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of destinationrules. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []DestinationRuleType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// DestinationRuleListTypeInput is an input type that accepts DestinationRuleListTypeArgs and DestinationRuleListTypeOutput values.
// You can construct a concrete instance of `DestinationRuleListTypeInput` via:
//
//	DestinationRuleListTypeArgs{...}
type DestinationRuleListTypeInput interface {
	pulumi.Input

	ToDestinationRuleListTypeOutput() DestinationRuleListTypeOutput
	ToDestinationRuleListTypeOutputWithContext(context.Context) DestinationRuleListTypeOutput
}

// DestinationRuleList is a list of DestinationRule
type DestinationRuleListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of destinationrules. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items DestinationRuleTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (DestinationRuleListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleListType)(nil)).Elem()
}

func (i DestinationRuleListTypeArgs) ToDestinationRuleListTypeOutput() DestinationRuleListTypeOutput {
	return i.ToDestinationRuleListTypeOutputWithContext(context.Background())
}

func (i DestinationRuleListTypeArgs) ToDestinationRuleListTypeOutputWithContext(ctx context.Context) DestinationRuleListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleListTypeOutput)
}

// DestinationRuleList is a list of DestinationRule
type DestinationRuleListTypeOutput struct{ *pulumi.OutputState }

func (DestinationRuleListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleListType)(nil)).Elem()
}

func (o DestinationRuleListTypeOutput) ToDestinationRuleListTypeOutput() DestinationRuleListTypeOutput {
	return o
}

func (o DestinationRuleListTypeOutput) ToDestinationRuleListTypeOutputWithContext(ctx context.Context) DestinationRuleListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o DestinationRuleListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of destinationrules. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o DestinationRuleListTypeOutput) Items() DestinationRuleTypeArrayOutput {
	return o.ApplyT(func(v DestinationRuleListType) []DestinationRuleType { return v.Items }).(DestinationRuleTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o DestinationRuleListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o DestinationRuleListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v DestinationRuleListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

type DestinationRulePatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch   `pulumi:"metadata"`
	Spec     *DestinationRuleSpecPatch `pulumi:"spec"`
	Status   map[string]interface{}    `pulumi:"status"`
}

// DestinationRulePatchTypeInput is an input type that accepts DestinationRulePatchTypeArgs and DestinationRulePatchTypeOutput values.
// You can construct a concrete instance of `DestinationRulePatchTypeInput` via:
//
//	DestinationRulePatchTypeArgs{...}
type DestinationRulePatchTypeInput interface {
	pulumi.Input

	ToDestinationRulePatchTypeOutput() DestinationRulePatchTypeOutput
	ToDestinationRulePatchTypeOutputWithContext(context.Context) DestinationRulePatchTypeOutput
}

type DestinationRulePatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput   `pulumi:"metadata"`
	Spec     DestinationRuleSpecPatchPtrInput `pulumi:"spec"`
	Status   pulumi.MapInput                  `pulumi:"status"`
}

func (DestinationRulePatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRulePatchType)(nil)).Elem()
}

func (i DestinationRulePatchTypeArgs) ToDestinationRulePatchTypeOutput() DestinationRulePatchTypeOutput {
	return i.ToDestinationRulePatchTypeOutputWithContext(context.Background())
}

func (i DestinationRulePatchTypeArgs) ToDestinationRulePatchTypeOutputWithContext(ctx context.Context) DestinationRulePatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRulePatchTypeOutput)
}

type DestinationRulePatchTypeOutput struct{ *pulumi.OutputState }

func (DestinationRulePatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRulePatchType)(nil)).Elem()
}

func (o DestinationRulePatchTypeOutput) ToDestinationRulePatchTypeOutput() DestinationRulePatchTypeOutput {
	return o
}

func (o DestinationRulePatchTypeOutput) ToDestinationRulePatchTypeOutputWithContext(ctx context.Context) DestinationRulePatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o DestinationRulePatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRulePatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o DestinationRulePatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRulePatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o DestinationRulePatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v DestinationRulePatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o DestinationRulePatchTypeOutput) Spec() DestinationRuleSpecPatchPtrOutput {
	return o.ApplyT(func(v DestinationRulePatchType) *DestinationRuleSpecPatch { return v.Spec }).(DestinationRuleSpecPatchPtrOutput)
}

func (o DestinationRulePatchTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v DestinationRulePatchType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

// Configuration affecting load balancing, outlier detection, etc. See more details at: https://istio.io/docs/reference/config/networking/destination-rule.html
type DestinationRuleSpec struct {
	// A list of namespaces to which this destination rule is exported.
	ExportTo []string `pulumi:"exportTo"`
	// The name of a service from the service registry.
	Host *string `pulumi:"host"`
	// One or more named sets that represent individual versions of a service.
	Subsets          []DestinationRuleSpecSubsets         `pulumi:"subsets"`
	TrafficPolicy    *DestinationRuleSpecTrafficPolicy    `pulumi:"trafficPolicy"`
	WorkloadSelector *DestinationRuleSpecWorkloadSelector `pulumi:"workloadSelector"`
}

// DestinationRuleSpecInput is an input type that accepts DestinationRuleSpecArgs and DestinationRuleSpecOutput values.
// You can construct a concrete instance of `DestinationRuleSpecInput` via:
//
//	DestinationRuleSpecArgs{...}
type DestinationRuleSpecInput interface {
	pulumi.Input

	ToDestinationRuleSpecOutput() DestinationRuleSpecOutput
	ToDestinationRuleSpecOutputWithContext(context.Context) DestinationRuleSpecOutput
}

// Configuration affecting load balancing, outlier detection, etc. See more details at: https://istio.io/docs/reference/config/networking/destination-rule.html
type DestinationRuleSpecArgs struct {
	// A list of namespaces to which this destination rule is exported.
	ExportTo pulumi.StringArrayInput `pulumi:"exportTo"`
	// The name of a service from the service registry.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// One or more named sets that represent individual versions of a service.
	Subsets          DestinationRuleSpecSubsetsArrayInput        `pulumi:"subsets"`
	TrafficPolicy    DestinationRuleSpecTrafficPolicyPtrInput    `pulumi:"trafficPolicy"`
	WorkloadSelector DestinationRuleSpecWorkloadSelectorPtrInput `pulumi:"workloadSelector"`
}

func (DestinationRuleSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpec)(nil)).Elem()
}

func (i DestinationRuleSpecArgs) ToDestinationRuleSpecOutput() DestinationRuleSpecOutput {
	return i.ToDestinationRuleSpecOutputWithContext(context.Background())
}

func (i DestinationRuleSpecArgs) ToDestinationRuleSpecOutputWithContext(ctx context.Context) DestinationRuleSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecOutput)
}

func (i DestinationRuleSpecArgs) ToDestinationRuleSpecPtrOutput() DestinationRuleSpecPtrOutput {
	return i.ToDestinationRuleSpecPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecArgs) ToDestinationRuleSpecPtrOutputWithContext(ctx context.Context) DestinationRuleSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecOutput).ToDestinationRuleSpecPtrOutputWithContext(ctx)
}

// DestinationRuleSpecPtrInput is an input type that accepts DestinationRuleSpecArgs, DestinationRuleSpecPtr and DestinationRuleSpecPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecPtrInput` via:
//
//	        DestinationRuleSpecArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecPtrOutput() DestinationRuleSpecPtrOutput
	ToDestinationRuleSpecPtrOutputWithContext(context.Context) DestinationRuleSpecPtrOutput
}

type destinationRuleSpecPtrType DestinationRuleSpecArgs

func DestinationRuleSpecPtr(v *DestinationRuleSpecArgs) DestinationRuleSpecPtrInput {
	return (*destinationRuleSpecPtrType)(v)
}

func (*destinationRuleSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpec)(nil)).Elem()
}

func (i *destinationRuleSpecPtrType) ToDestinationRuleSpecPtrOutput() DestinationRuleSpecPtrOutput {
	return i.ToDestinationRuleSpecPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecPtrType) ToDestinationRuleSpecPtrOutputWithContext(ctx context.Context) DestinationRuleSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecPtrOutput)
}

// Configuration affecting load balancing, outlier detection, etc. See more details at: https://istio.io/docs/reference/config/networking/destination-rule.html
type DestinationRuleSpecOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpec)(nil)).Elem()
}

func (o DestinationRuleSpecOutput) ToDestinationRuleSpecOutput() DestinationRuleSpecOutput {
	return o
}

func (o DestinationRuleSpecOutput) ToDestinationRuleSpecOutputWithContext(ctx context.Context) DestinationRuleSpecOutput {
	return o
}

func (o DestinationRuleSpecOutput) ToDestinationRuleSpecPtrOutput() DestinationRuleSpecPtrOutput {
	return o.ToDestinationRuleSpecPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecOutput) ToDestinationRuleSpecPtrOutputWithContext(ctx context.Context) DestinationRuleSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpec) *DestinationRuleSpec {
		return &v
	}).(DestinationRuleSpecPtrOutput)
}

// A list of namespaces to which this destination rule is exported.
func (o DestinationRuleSpecOutput) ExportTo() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpec) []string { return v.ExportTo }).(pulumi.StringArrayOutput)
}

// The name of a service from the service registry.
func (o DestinationRuleSpecOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpec) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// One or more named sets that represent individual versions of a service.
func (o DestinationRuleSpecOutput) Subsets() DestinationRuleSpecSubsetsArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpec) []DestinationRuleSpecSubsets { return v.Subsets }).(DestinationRuleSpecSubsetsArrayOutput)
}

func (o DestinationRuleSpecOutput) TrafficPolicy() DestinationRuleSpecTrafficPolicyPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpec) *DestinationRuleSpecTrafficPolicy { return v.TrafficPolicy }).(DestinationRuleSpecTrafficPolicyPtrOutput)
}

func (o DestinationRuleSpecOutput) WorkloadSelector() DestinationRuleSpecWorkloadSelectorPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpec) *DestinationRuleSpecWorkloadSelector { return v.WorkloadSelector }).(DestinationRuleSpecWorkloadSelectorPtrOutput)
}

type DestinationRuleSpecPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpec)(nil)).Elem()
}

func (o DestinationRuleSpecPtrOutput) ToDestinationRuleSpecPtrOutput() DestinationRuleSpecPtrOutput {
	return o
}

func (o DestinationRuleSpecPtrOutput) ToDestinationRuleSpecPtrOutputWithContext(ctx context.Context) DestinationRuleSpecPtrOutput {
	return o
}

func (o DestinationRuleSpecPtrOutput) Elem() DestinationRuleSpecOutput {
	return o.ApplyT(func(v *DestinationRuleSpec) DestinationRuleSpec {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpec
		return ret
	}).(DestinationRuleSpecOutput)
}

// A list of namespaces to which this destination rule is exported.
func (o DestinationRuleSpecPtrOutput) ExportTo() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpec) []string {
		if v == nil {
			return nil
		}
		return v.ExportTo
	}).(pulumi.StringArrayOutput)
}

// The name of a service from the service registry.
func (o DestinationRuleSpecPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpec) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// One or more named sets that represent individual versions of a service.
func (o DestinationRuleSpecPtrOutput) Subsets() DestinationRuleSpecSubsetsArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpec) []DestinationRuleSpecSubsets {
		if v == nil {
			return nil
		}
		return v.Subsets
	}).(DestinationRuleSpecSubsetsArrayOutput)
}

func (o DestinationRuleSpecPtrOutput) TrafficPolicy() DestinationRuleSpecTrafficPolicyPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpec) *DestinationRuleSpecTrafficPolicy {
		if v == nil {
			return nil
		}
		return v.TrafficPolicy
	}).(DestinationRuleSpecTrafficPolicyPtrOutput)
}

func (o DestinationRuleSpecPtrOutput) WorkloadSelector() DestinationRuleSpecWorkloadSelectorPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpec) *DestinationRuleSpecWorkloadSelector {
		if v == nil {
			return nil
		}
		return v.WorkloadSelector
	}).(DestinationRuleSpecWorkloadSelectorPtrOutput)
}

// Configuration affecting load balancing, outlier detection, etc. See more details at: https://istio.io/docs/reference/config/networking/destination-rule.html
type DestinationRuleSpecPatch struct {
	// A list of namespaces to which this destination rule is exported.
	ExportTo []string `pulumi:"exportTo"`
	// The name of a service from the service registry.
	Host *string `pulumi:"host"`
	// One or more named sets that represent individual versions of a service.
	Subsets          []DestinationRuleSpecSubsetsPatch         `pulumi:"subsets"`
	TrafficPolicy    *DestinationRuleSpecTrafficPolicyPatch    `pulumi:"trafficPolicy"`
	WorkloadSelector *DestinationRuleSpecWorkloadSelectorPatch `pulumi:"workloadSelector"`
}

// DestinationRuleSpecPatchInput is an input type that accepts DestinationRuleSpecPatchArgs and DestinationRuleSpecPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecPatchInput` via:
//
//	DestinationRuleSpecPatchArgs{...}
type DestinationRuleSpecPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecPatchOutput() DestinationRuleSpecPatchOutput
	ToDestinationRuleSpecPatchOutputWithContext(context.Context) DestinationRuleSpecPatchOutput
}

// Configuration affecting load balancing, outlier detection, etc. See more details at: https://istio.io/docs/reference/config/networking/destination-rule.html
type DestinationRuleSpecPatchArgs struct {
	// A list of namespaces to which this destination rule is exported.
	ExportTo pulumi.StringArrayInput `pulumi:"exportTo"`
	// The name of a service from the service registry.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// One or more named sets that represent individual versions of a service.
	Subsets          DestinationRuleSpecSubsetsPatchArrayInput        `pulumi:"subsets"`
	TrafficPolicy    DestinationRuleSpecTrafficPolicyPatchPtrInput    `pulumi:"trafficPolicy"`
	WorkloadSelector DestinationRuleSpecWorkloadSelectorPatchPtrInput `pulumi:"workloadSelector"`
}

func (DestinationRuleSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecPatch)(nil)).Elem()
}

func (i DestinationRuleSpecPatchArgs) ToDestinationRuleSpecPatchOutput() DestinationRuleSpecPatchOutput {
	return i.ToDestinationRuleSpecPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecPatchArgs) ToDestinationRuleSpecPatchOutputWithContext(ctx context.Context) DestinationRuleSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecPatchOutput)
}

func (i DestinationRuleSpecPatchArgs) ToDestinationRuleSpecPatchPtrOutput() DestinationRuleSpecPatchPtrOutput {
	return i.ToDestinationRuleSpecPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecPatchArgs) ToDestinationRuleSpecPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecPatchOutput).ToDestinationRuleSpecPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecPatchPtrInput is an input type that accepts DestinationRuleSpecPatchArgs, DestinationRuleSpecPatchPtr and DestinationRuleSpecPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecPatchPtrInput` via:
//
//	        DestinationRuleSpecPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecPatchPtrOutput() DestinationRuleSpecPatchPtrOutput
	ToDestinationRuleSpecPatchPtrOutputWithContext(context.Context) DestinationRuleSpecPatchPtrOutput
}

type destinationRuleSpecPatchPtrType DestinationRuleSpecPatchArgs

func DestinationRuleSpecPatchPtr(v *DestinationRuleSpecPatchArgs) DestinationRuleSpecPatchPtrInput {
	return (*destinationRuleSpecPatchPtrType)(v)
}

func (*destinationRuleSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecPatch)(nil)).Elem()
}

func (i *destinationRuleSpecPatchPtrType) ToDestinationRuleSpecPatchPtrOutput() DestinationRuleSpecPatchPtrOutput {
	return i.ToDestinationRuleSpecPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecPatchPtrType) ToDestinationRuleSpecPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecPatchPtrOutput)
}

// Configuration affecting load balancing, outlier detection, etc. See more details at: https://istio.io/docs/reference/config/networking/destination-rule.html
type DestinationRuleSpecPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecPatch)(nil)).Elem()
}

func (o DestinationRuleSpecPatchOutput) ToDestinationRuleSpecPatchOutput() DestinationRuleSpecPatchOutput {
	return o
}

func (o DestinationRuleSpecPatchOutput) ToDestinationRuleSpecPatchOutputWithContext(ctx context.Context) DestinationRuleSpecPatchOutput {
	return o
}

func (o DestinationRuleSpecPatchOutput) ToDestinationRuleSpecPatchPtrOutput() DestinationRuleSpecPatchPtrOutput {
	return o.ToDestinationRuleSpecPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecPatchOutput) ToDestinationRuleSpecPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecPatch) *DestinationRuleSpecPatch {
		return &v
	}).(DestinationRuleSpecPatchPtrOutput)
}

// A list of namespaces to which this destination rule is exported.
func (o DestinationRuleSpecPatchOutput) ExportTo() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecPatch) []string { return v.ExportTo }).(pulumi.StringArrayOutput)
}

// The name of a service from the service registry.
func (o DestinationRuleSpecPatchOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecPatch) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// One or more named sets that represent individual versions of a service.
func (o DestinationRuleSpecPatchOutput) Subsets() DestinationRuleSpecSubsetsPatchArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecPatch) []DestinationRuleSpecSubsetsPatch { return v.Subsets }).(DestinationRuleSpecSubsetsPatchArrayOutput)
}

func (o DestinationRuleSpecPatchOutput) TrafficPolicy() DestinationRuleSpecTrafficPolicyPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecPatch) *DestinationRuleSpecTrafficPolicyPatch { return v.TrafficPolicy }).(DestinationRuleSpecTrafficPolicyPatchPtrOutput)
}

func (o DestinationRuleSpecPatchOutput) WorkloadSelector() DestinationRuleSpecWorkloadSelectorPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecPatch) *DestinationRuleSpecWorkloadSelectorPatch { return v.WorkloadSelector }).(DestinationRuleSpecWorkloadSelectorPatchPtrOutput)
}

type DestinationRuleSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecPatch)(nil)).Elem()
}

func (o DestinationRuleSpecPatchPtrOutput) ToDestinationRuleSpecPatchPtrOutput() DestinationRuleSpecPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecPatchPtrOutput) ToDestinationRuleSpecPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecPatchPtrOutput) Elem() DestinationRuleSpecPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecPatch) DestinationRuleSpecPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecPatch
		return ret
	}).(DestinationRuleSpecPatchOutput)
}

// A list of namespaces to which this destination rule is exported.
func (o DestinationRuleSpecPatchPtrOutput) ExportTo() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecPatch) []string {
		if v == nil {
			return nil
		}
		return v.ExportTo
	}).(pulumi.StringArrayOutput)
}

// The name of a service from the service registry.
func (o DestinationRuleSpecPatchPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// One or more named sets that represent individual versions of a service.
func (o DestinationRuleSpecPatchPtrOutput) Subsets() DestinationRuleSpecSubsetsPatchArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecPatch) []DestinationRuleSpecSubsetsPatch {
		if v == nil {
			return nil
		}
		return v.Subsets
	}).(DestinationRuleSpecSubsetsPatchArrayOutput)
}

func (o DestinationRuleSpecPatchPtrOutput) TrafficPolicy() DestinationRuleSpecTrafficPolicyPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecPatch) *DestinationRuleSpecTrafficPolicyPatch {
		if v == nil {
			return nil
		}
		return v.TrafficPolicy
	}).(DestinationRuleSpecTrafficPolicyPatchPtrOutput)
}

func (o DestinationRuleSpecPatchPtrOutput) WorkloadSelector() DestinationRuleSpecWorkloadSelectorPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecPatch) *DestinationRuleSpecWorkloadSelectorPatch {
		if v == nil {
			return nil
		}
		return v.WorkloadSelector
	}).(DestinationRuleSpecWorkloadSelectorPatchPtrOutput)
}

type DestinationRuleSpecSubsets struct {
	// Labels apply a filter over the endpoints of a service in the service registry.
	Labels map[string]string `pulumi:"labels"`
	// Name of the subset.
	Name          *string                                  `pulumi:"name"`
	TrafficPolicy *DestinationRuleSpecSubsetsTrafficPolicy `pulumi:"trafficPolicy"`
}

// DestinationRuleSpecSubsetsInput is an input type that accepts DestinationRuleSpecSubsetsArgs and DestinationRuleSpecSubsetsOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsInput` via:
//
//	DestinationRuleSpecSubsetsArgs{...}
type DestinationRuleSpecSubsetsInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsOutput() DestinationRuleSpecSubsetsOutput
	ToDestinationRuleSpecSubsetsOutputWithContext(context.Context) DestinationRuleSpecSubsetsOutput
}

type DestinationRuleSpecSubsetsArgs struct {
	// Labels apply a filter over the endpoints of a service in the service registry.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Name of the subset.
	Name          pulumi.StringPtrInput                           `pulumi:"name"`
	TrafficPolicy DestinationRuleSpecSubsetsTrafficPolicyPtrInput `pulumi:"trafficPolicy"`
}

func (DestinationRuleSpecSubsetsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsets)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsArgs) ToDestinationRuleSpecSubsetsOutput() DestinationRuleSpecSubsetsOutput {
	return i.ToDestinationRuleSpecSubsetsOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsArgs) ToDestinationRuleSpecSubsetsOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsOutput)
}

// DestinationRuleSpecSubsetsArrayInput is an input type that accepts DestinationRuleSpecSubsetsArray and DestinationRuleSpecSubsetsArrayOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsArrayInput` via:
//
//	DestinationRuleSpecSubsetsArray{ DestinationRuleSpecSubsetsArgs{...} }
type DestinationRuleSpecSubsetsArrayInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsArrayOutput() DestinationRuleSpecSubsetsArrayOutput
	ToDestinationRuleSpecSubsetsArrayOutputWithContext(context.Context) DestinationRuleSpecSubsetsArrayOutput
}

type DestinationRuleSpecSubsetsArray []DestinationRuleSpecSubsetsInput

func (DestinationRuleSpecSubsetsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsets)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsArray) ToDestinationRuleSpecSubsetsArrayOutput() DestinationRuleSpecSubsetsArrayOutput {
	return i.ToDestinationRuleSpecSubsetsArrayOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsArray) ToDestinationRuleSpecSubsetsArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsArrayOutput)
}

type DestinationRuleSpecSubsetsOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsets)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsOutput) ToDestinationRuleSpecSubsetsOutput() DestinationRuleSpecSubsetsOutput {
	return o
}

func (o DestinationRuleSpecSubsetsOutput) ToDestinationRuleSpecSubsetsOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsOutput {
	return o
}

// Labels apply a filter over the endpoints of a service in the service registry.
func (o DestinationRuleSpecSubsetsOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsets) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the subset.
func (o DestinationRuleSpecSubsetsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsets) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DestinationRuleSpecSubsetsOutput) TrafficPolicy() DestinationRuleSpecSubsetsTrafficPolicyPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsets) *DestinationRuleSpecSubsetsTrafficPolicy { return v.TrafficPolicy }).(DestinationRuleSpecSubsetsTrafficPolicyPtrOutput)
}

type DestinationRuleSpecSubsetsArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsets)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsArrayOutput) ToDestinationRuleSpecSubsetsArrayOutput() DestinationRuleSpecSubsetsArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsArrayOutput) ToDestinationRuleSpecSubsetsArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsArrayOutput) Index(i pulumi.IntInput) DestinationRuleSpecSubsetsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DestinationRuleSpecSubsets {
		return vs[0].([]DestinationRuleSpecSubsets)[vs[1].(int)]
	}).(DestinationRuleSpecSubsetsOutput)
}

type DestinationRuleSpecSubsetsPatch struct {
	// Labels apply a filter over the endpoints of a service in the service registry.
	Labels map[string]string `pulumi:"labels"`
	// Name of the subset.
	Name          *string                                       `pulumi:"name"`
	TrafficPolicy *DestinationRuleSpecSubsetsTrafficPolicyPatch `pulumi:"trafficPolicy"`
}

// DestinationRuleSpecSubsetsPatchInput is an input type that accepts DestinationRuleSpecSubsetsPatchArgs and DestinationRuleSpecSubsetsPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsPatchInput` via:
//
//	DestinationRuleSpecSubsetsPatchArgs{...}
type DestinationRuleSpecSubsetsPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsPatchOutput() DestinationRuleSpecSubsetsPatchOutput
	ToDestinationRuleSpecSubsetsPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsPatchOutput
}

type DestinationRuleSpecSubsetsPatchArgs struct {
	// Labels apply a filter over the endpoints of a service in the service registry.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Name of the subset.
	Name          pulumi.StringPtrInput                                `pulumi:"name"`
	TrafficPolicy DestinationRuleSpecSubsetsTrafficPolicyPatchPtrInput `pulumi:"trafficPolicy"`
}

func (DestinationRuleSpecSubsetsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsPatchArgs) ToDestinationRuleSpecSubsetsPatchOutput() DestinationRuleSpecSubsetsPatchOutput {
	return i.ToDestinationRuleSpecSubsetsPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsPatchArgs) ToDestinationRuleSpecSubsetsPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsPatchOutput)
}

// DestinationRuleSpecSubsetsPatchArrayInput is an input type that accepts DestinationRuleSpecSubsetsPatchArray and DestinationRuleSpecSubsetsPatchArrayOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsPatchArrayInput` via:
//
//	DestinationRuleSpecSubsetsPatchArray{ DestinationRuleSpecSubsetsPatchArgs{...} }
type DestinationRuleSpecSubsetsPatchArrayInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsPatchArrayOutput() DestinationRuleSpecSubsetsPatchArrayOutput
	ToDestinationRuleSpecSubsetsPatchArrayOutputWithContext(context.Context) DestinationRuleSpecSubsetsPatchArrayOutput
}

type DestinationRuleSpecSubsetsPatchArray []DestinationRuleSpecSubsetsPatchInput

func (DestinationRuleSpecSubsetsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsetsPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsPatchArray) ToDestinationRuleSpecSubsetsPatchArrayOutput() DestinationRuleSpecSubsetsPatchArrayOutput {
	return i.ToDestinationRuleSpecSubsetsPatchArrayOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsPatchArray) ToDestinationRuleSpecSubsetsPatchArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsPatchArrayOutput)
}

type DestinationRuleSpecSubsetsPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsPatchOutput) ToDestinationRuleSpecSubsetsPatchOutput() DestinationRuleSpecSubsetsPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsPatchOutput) ToDestinationRuleSpecSubsetsPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsPatchOutput {
	return o
}

// Labels apply a filter over the endpoints of a service in the service registry.
func (o DestinationRuleSpecSubsetsPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the subset.
func (o DestinationRuleSpecSubsetsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DestinationRuleSpecSubsetsPatchOutput) TrafficPolicy() DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsPatch) *DestinationRuleSpecSubsetsTrafficPolicyPatch {
		return v.TrafficPolicy
	}).(DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput)
}

type DestinationRuleSpecSubsetsPatchArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsetsPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsPatchArrayOutput) ToDestinationRuleSpecSubsetsPatchArrayOutput() DestinationRuleSpecSubsetsPatchArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsPatchArrayOutput) ToDestinationRuleSpecSubsetsPatchArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsPatchArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsPatchArrayOutput) Index(i pulumi.IntInput) DestinationRuleSpecSubsetsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DestinationRuleSpecSubsetsPatch {
		return vs[0].([]DestinationRuleSpecSubsetsPatch)[vs[1].(int)]
	}).(DestinationRuleSpecSubsetsPatchOutput)
}

// Traffic policies that apply to this subset.
type DestinationRuleSpecSubsetsTrafficPolicy struct {
	ConnectionPool   *DestinationRuleSpecSubsetsTrafficPolicyConnectionPool   `pulumi:"connectionPool"`
	LoadBalancer     *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancer     `pulumi:"loadBalancer"`
	OutlierDetection *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection `pulumi:"outlierDetection"`
	// Traffic policies specific to individual ports.
	PortLevelSettings []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettings `pulumi:"portLevelSettings"`
	ProxyProtocol     *DestinationRuleSpecSubsetsTrafficPolicyProxyProtocol      `pulumi:"proxyProtocol"`
	Tls               *DestinationRuleSpecSubsetsTrafficPolicyTls                `pulumi:"tls"`
	Tunnel            *DestinationRuleSpecSubsetsTrafficPolicyTunnel             `pulumi:"tunnel"`
}

// DestinationRuleSpecSubsetsTrafficPolicyInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyArgs and DestinationRuleSpecSubsetsTrafficPolicyOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyOutput() DestinationRuleSpecSubsetsTrafficPolicyOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyOutput
}

// Traffic policies that apply to this subset.
type DestinationRuleSpecSubsetsTrafficPolicyArgs struct {
	ConnectionPool   DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrInput   `pulumi:"connectionPool"`
	LoadBalancer     DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrInput     `pulumi:"loadBalancer"`
	OutlierDetection DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrInput `pulumi:"outlierDetection"`
	// Traffic policies specific to individual ports.
	PortLevelSettings DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayInput `pulumi:"portLevelSettings"`
	ProxyProtocol     DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrInput       `pulumi:"proxyProtocol"`
	Tls               DestinationRuleSpecSubsetsTrafficPolicyTlsPtrInput                 `pulumi:"tls"`
	Tunnel            DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrInput              `pulumi:"tunnel"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicy)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyArgs) ToDestinationRuleSpecSubsetsTrafficPolicyOutput() DestinationRuleSpecSubsetsTrafficPolicyOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyArgs) ToDestinationRuleSpecSubsetsTrafficPolicyOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyArgs, DestinationRuleSpecSubsetsTrafficPolicyPtr and DestinationRuleSpecSubsetsTrafficPolicyPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPtrType DestinationRuleSpecSubsetsTrafficPolicyArgs

func DestinationRuleSpecSubsetsTrafficPolicyPtr(v *DestinationRuleSpecSubsetsTrafficPolicyArgs) DestinationRuleSpecSubsetsTrafficPolicyPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicy)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPtrOutput)
}

// Traffic policies that apply to this subset.
type DestinationRuleSpecSubsetsTrafficPolicyOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicy)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutput) ToDestinationRuleSpecSubsetsTrafficPolicyOutput() DestinationRuleSpecSubsetsTrafficPolicyOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutput) ToDestinationRuleSpecSubsetsTrafficPolicyOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicy) *DestinationRuleSpecSubsetsTrafficPolicy {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutput) ConnectionPool() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicy) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPool {
		return v.ConnectionPool
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutput) LoadBalancer() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicy) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancer {
		return v.LoadBalancer
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutput) OutlierDetection() DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicy) *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection {
		return v.OutlierDetection
	}).(DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput)
}

// Traffic policies specific to individual ports.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutput) PortLevelSettings() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicy) []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettings {
		return v.PortLevelSettings
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutput) ProxyProtocol() DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicy) *DestinationRuleSpecSubsetsTrafficPolicyProxyProtocol {
		return v.ProxyProtocol
	}).(DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutput) Tls() DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicy) *DestinationRuleSpecSubsetsTrafficPolicyTls {
		return v.Tls
	}).(DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutput) Tunnel() DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicy) *DestinationRuleSpecSubsetsTrafficPolicyTunnel {
		return v.Tunnel
	}).(DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicy)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicy) DestinationRuleSpecSubsetsTrafficPolicy {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicy
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPtrOutput) ConnectionPool() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicy) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPool {
		if v == nil {
			return nil
		}
		return v.ConnectionPool
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPtrOutput) LoadBalancer() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicy) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancer {
		if v == nil {
			return nil
		}
		return v.LoadBalancer
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPtrOutput) OutlierDetection() DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicy) *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection {
		if v == nil {
			return nil
		}
		return v.OutlierDetection
	}).(DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput)
}

// Traffic policies specific to individual ports.
func (o DestinationRuleSpecSubsetsTrafficPolicyPtrOutput) PortLevelSettings() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicy) []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettings {
		if v == nil {
			return nil
		}
		return v.PortLevelSettings
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPtrOutput) ProxyProtocol() DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicy) *DestinationRuleSpecSubsetsTrafficPolicyProxyProtocol {
		if v == nil {
			return nil
		}
		return v.ProxyProtocol
	}).(DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPtrOutput) Tls() DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicy) *DestinationRuleSpecSubsetsTrafficPolicyTls {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPtrOutput) Tunnel() DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicy) *DestinationRuleSpecSubsetsTrafficPolicyTunnel {
		if v == nil {
			return nil
		}
		return v.Tunnel
	}).(DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyConnectionPool struct {
	Http *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp `pulumi:"http"`
	Tcp  *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcp  `pulumi:"tcp"`
}

// DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolArgs and DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolArgs struct {
	Http DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrInput `pulumi:"http"`
	Tcp  DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrInput  `pulumi:"tcp"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPool)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutput).ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolArgs, DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtr and DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrType DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolArgs

func DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtr(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolArgs) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyConnectionPool)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPool)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyConnectionPool) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPool {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutput) Http() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPool) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp {
		return v.Http
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutput) Tcp() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPool) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcp {
		return v.Tcp
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyConnectionPool)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPool) DestinationRuleSpecSubsetsTrafficPolicyConnectionPool {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyConnectionPool
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput) Http() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPool) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput) Tcp() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPool) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput)
}

// HTTP connection pool settings.
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy *string `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests *int `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests *int `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams *int `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection *int `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries *int `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol *bool `pulumi:"useClientProtocol"`
}

// DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpArgs and DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput
}

// HTTP connection pool settings.
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpArgs struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy pulumi.StringPtrInput `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests pulumi.IntPtrInput `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests pulumi.IntPtrInput `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams pulumi.IntPtrInput `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection pulumi.IntPtrInput `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries pulumi.IntPtrInput `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol pulumi.BoolPtrInput `pulumi:"useClientProtocol"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput).ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpArgs, DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtr and DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrType DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpArgs

func DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtr(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpArgs) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput)
}

// HTTP connection pool settings.
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp) *string { return v.H2UpgradePolicy }).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp) *int {
		return v.Http1MaxPendingRequests
	}).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp) *int { return v.Http2MaxRequests }).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp) *string { return v.IdleTimeout }).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp) *int { return v.MaxConcurrentStreams }).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp) *int {
		return v.MaxRequestsPerConnection
	}).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp) *bool { return v.UseClientProtocol }).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp) *string {
		if v == nil {
			return nil
		}
		return v.H2UpgradePolicy
	}).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.Http1MaxPendingRequests
	}).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.Http2MaxRequests
	}).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentStreams
	}).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestsPerConnection
	}).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttp) *bool {
		if v == nil {
			return nil
		}
		return v.UseClientProtocol
	}).(pulumi.BoolPtrOutput)
}

// HTTP connection pool settings.
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy *string `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests *int `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests *int `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams *int `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection *int `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries *int `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol *bool `pulumi:"useClientProtocol"`
}

// DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput
}

// HTTP connection pool settings.
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchArgs struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy pulumi.StringPtrInput `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests pulumi.IntPtrInput `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests pulumi.IntPtrInput `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams pulumi.IntPtrInput `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection pulumi.IntPtrInput `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries pulumi.IntPtrInput `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol pulumi.BoolPtrInput `pulumi:"useClientProtocol"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput)
}

// HTTP connection pool settings.
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch) *string {
		return v.H2UpgradePolicy
	}).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch) *int {
		return v.Http1MaxPendingRequests
	}).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch) *int { return v.Http2MaxRequests }).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch) *string { return v.IdleTimeout }).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch) *int {
		return v.MaxConcurrentStreams
	}).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch) *int {
		return v.MaxRequestsPerConnection
	}).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch) *bool {
		return v.UseClientProtocol
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch) *string {
		if v == nil {
			return nil
		}
		return v.H2UpgradePolicy
	}).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.Http1MaxPendingRequests
	}).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.Http2MaxRequests
	}).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentStreams
	}).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestsPerConnection
	}).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch) *bool {
		if v == nil {
			return nil
		}
		return v.UseClientProtocol
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatch struct {
	Http *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch `pulumi:"http"`
	Tcp  *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatch  `pulumi:"tcp"`
}

// DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchArgs struct {
	Http DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrInput `pulumi:"http"`
	Tcp  DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrInput  `pulumi:"tcp"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatch) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutput) Http() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatch) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch {
		return v.Http
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutput) Tcp() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatch) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatch {
		return v.Tcp
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatch) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput) Http() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatch) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatch {
		if v == nil {
			return nil
		}
		return v.Http
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput) Tcp() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatch) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatch {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcp struct {
	// TCP connection timeout.
	ConnectTimeout *string `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration *string `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections *int                                                                  `pulumi:"maxConnections"`
	TcpKeepalive   *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalive `pulumi:"tcpKeepalive"`
}

// DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpArgs and DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpArgs struct {
	// TCP connection timeout.
	ConnectTimeout pulumi.StringPtrInput `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration pulumi.StringPtrInput `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections pulumi.IntPtrInput                                                           `pulumi:"maxConnections"`
	TcpKeepalive   DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrInput `pulumi:"tcpKeepalive"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcp)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput).ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpArgs, DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtr and DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrType DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpArgs

func DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtr(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpArgs) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcp)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcp)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcp) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcp {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput)
}

// TCP connection timeout.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcp) *string { return v.ConnectTimeout }).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcp) *string { return v.IdleTimeout }).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcp) *string {
		return v.MaxConnectionDuration
	}).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcp) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput) TcpKeepalive() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcp) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalive {
		return v.TcpKeepalive
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcp)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcp) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcp {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcp
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput)
}

// TCP connection timeout.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcp) *string {
		if v == nil {
			return nil
		}
		return v.ConnectTimeout
	}).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcp) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcp) *string {
		if v == nil {
			return nil
		}
		return v.MaxConnectionDuration
	}).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcp) *int {
		if v == nil {
			return nil
		}
		return v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput) TcpKeepalive() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcp) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalive {
		if v == nil {
			return nil
		}
		return v.TcpKeepalive
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatch struct {
	// TCP connection timeout.
	ConnectTimeout *string `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration *string `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections *int                                                                       `pulumi:"maxConnections"`
	TcpKeepalive   *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatch `pulumi:"tcpKeepalive"`
}

// DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchArgs struct {
	// TCP connection timeout.
	ConnectTimeout pulumi.StringPtrInput `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration pulumi.StringPtrInput `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections pulumi.IntPtrInput                                                                `pulumi:"maxConnections"`
	TcpKeepalive   DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrInput `pulumi:"tcpKeepalive"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatch) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput)
}

// TCP connection timeout.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatch) *string { return v.ConnectTimeout }).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatch) *string { return v.IdleTimeout }).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatch) *string {
		return v.MaxConnectionDuration
	}).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatch) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput) TcpKeepalive() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatch) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatch {
		return v.TcpKeepalive
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatch) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput)
}

// TCP connection timeout.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatch) *string {
		if v == nil {
			return nil
		}
		return v.ConnectTimeout
	}).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatch) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatch) *string {
		if v == nil {
			return nil
		}
		return v.MaxConnectionDuration
	}).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput) TcpKeepalive() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatch) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatch {
		if v == nil {
			return nil
		}
		return v.TcpKeepalive
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalive struct {
	// The time duration between keep-alive probes.
	Interval *string `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes *int `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time *string `pulumi:"time"`
}

// DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs and DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs struct {
	// The time duration between keep-alive probes.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes pulumi.IntPtrInput `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time pulumi.StringPtrInput `pulumi:"time"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput).ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs, DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtr and DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrType DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs

func DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtr(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrType) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrType) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalive) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalive {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput)
}

// The time duration between keep-alive probes.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalive) *string {
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalive) *int { return v.Probes }).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalive) *string { return v.Time }).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalive) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalive {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalive
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput)
}

// The time duration between keep-alive probes.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalive) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalive) *int {
		if v == nil {
			return nil
		}
		return v.Probes
	}).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalive) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatch struct {
	// The time duration between keep-alive probes.
	Interval *string `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes *int `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time *string `pulumi:"time"`
}

// DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs and DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs struct {
	// The time duration between keep-alive probes.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes pulumi.IntPtrInput `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time pulumi.StringPtrInput `pulumi:"time"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs, DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtr and DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrType DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatch) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

// The time duration between keep-alive probes.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatch) *string {
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatch) *int {
		return v.Probes
	}).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatch) *string {
		return v.Time
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatch) DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput)
}

// The time duration between keep-alive probes.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatch) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatch) *int {
		if v == nil {
			return nil
		}
		return v.Probes
	}).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatch) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancer struct {
	ConsistentHash    *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash    `pulumi:"consistentHash"`
	LocalityLbSetting *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSetting `pulumi:"localityLbSetting"`
	// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
	Simple *string `pulumi:"simple"`
	// Represents the warmup duration of Service.
	WarmupDurationSecs *string `pulumi:"warmupDurationSecs"`
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerArgs and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerArgs struct {
	ConsistentHash    DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrInput    `pulumi:"consistentHash"`
	LocalityLbSetting DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrInput `pulumi:"localityLbSetting"`
	// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
	Simple pulumi.StringPtrInput `pulumi:"simple"`
	// Represents the warmup duration of Service.
	WarmupDurationSecs pulumi.StringPtrInput `pulumi:"warmupDurationSecs"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancer)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput).ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerArgs, DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtr and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrType DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerArgs

func DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtr(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerArgs) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancer)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput)
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancer)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancer) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancer {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput) ConsistentHash() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancer) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash {
		return v.ConsistentHash
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput) LocalityLbSetting() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancer) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSetting {
		return v.LocalityLbSetting
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput)
}

// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput) Simple() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancer) *string { return v.Simple }).(pulumi.StringPtrOutput)
}

// Represents the warmup duration of Service.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput) WarmupDurationSecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancer) *string { return v.WarmupDurationSecs }).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancer)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancer) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancer {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyLoadBalancer
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput) ConsistentHash() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancer) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash {
		if v == nil {
			return nil
		}
		return v.ConsistentHash
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput) LocalityLbSetting() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancer) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSetting {
		if v == nil {
			return nil
		}
		return v.LocalityLbSetting
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput)
}

// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput) Simple() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.Simple
	}).(pulumi.StringPtrOutput)
}

// Represents the warmup duration of Service.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput) WarmupDurationSecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.WarmupDurationSecs
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash struct {
	HttpCookie *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookie `pulumi:"httpCookie"`
	// Hash based on a specific HTTP header.
	HttpHeaderName *string `pulumi:"httpHeaderName"`
	// Hash based on a specific HTTP query parameter.
	HttpQueryParameterName *string                                                                  `pulumi:"httpQueryParameterName"`
	Maglev                 *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglev `pulumi:"maglev"`
	// Deprecated.
	MinimumRingSize *int                                                                       `pulumi:"minimumRingSize"`
	RingHash        *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHash `pulumi:"ringHash"`
	// Hash based on the source IP address.
	UseSourceIp *bool `pulumi:"useSourceIp"`
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashArgs and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashArgs struct {
	HttpCookie DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrInput `pulumi:"httpCookie"`
	// Hash based on a specific HTTP header.
	HttpHeaderName pulumi.StringPtrInput `pulumi:"httpHeaderName"`
	// Hash based on a specific HTTP query parameter.
	HttpQueryParameterName pulumi.StringPtrInput                                                           `pulumi:"httpQueryParameterName"`
	Maglev                 DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrInput `pulumi:"maglev"`
	// Deprecated.
	MinimumRingSize pulumi.IntPtrInput                                                                `pulumi:"minimumRingSize"`
	RingHash        DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrInput `pulumi:"ringHash"`
	// Hash based on the source IP address.
	UseSourceIp pulumi.BoolPtrInput `pulumi:"useSourceIp"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput).ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashArgs, DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtr and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrType DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashArgs

func DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtr(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashArgs) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput) HttpCookie() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookie {
		return v.HttpCookie
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput)
}

// Hash based on a specific HTTP header.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput) HttpHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash) *string {
		return v.HttpHeaderName
	}).(pulumi.StringPtrOutput)
}

// Hash based on a specific HTTP query parameter.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput) HttpQueryParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash) *string {
		return v.HttpQueryParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput) Maglev() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglev {
		return v.Maglev
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput)
}

// Deprecated.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash) *int {
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput) RingHash() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHash {
		return v.RingHash
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput)
}

// Hash based on the source IP address.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput) UseSourceIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash) *bool { return v.UseSourceIp }).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput) HttpCookie() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookie {
		if v == nil {
			return nil
		}
		return v.HttpCookie
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput)
}

// Hash based on a specific HTTP header.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput) HttpHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash) *string {
		if v == nil {
			return nil
		}
		return v.HttpHeaderName
	}).(pulumi.StringPtrOutput)
}

// Hash based on a specific HTTP query parameter.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput) HttpQueryParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash) *string {
		if v == nil {
			return nil
		}
		return v.HttpQueryParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput) Maglev() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglev {
		if v == nil {
			return nil
		}
		return v.Maglev
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput)
}

// Deprecated.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash) *int {
		if v == nil {
			return nil
		}
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput) RingHash() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHash {
		if v == nil {
			return nil
		}
		return v.RingHash
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput)
}

// Hash based on the source IP address.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput) UseSourceIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHash) *bool {
		if v == nil {
			return nil
		}
		return v.UseSourceIp
	}).(pulumi.BoolPtrOutput)
}

// Hash based on HTTP cookie.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookie struct {
	// Name of the cookie.
	Name *string `pulumi:"name"`
	// Path to set for the cookie.
	Path *string `pulumi:"path"`
	// Lifetime of the cookie.
	Ttl *string `pulumi:"ttl"`
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput
}

// Hash based on HTTP cookie.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs struct {
	// Name of the cookie.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path to set for the cookie.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Lifetime of the cookie.
	Ttl pulumi.StringPtrInput `pulumi:"ttl"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookie)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput).ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs, DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtr and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrType DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs

func DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtr(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookie)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput)
}

// Hash based on HTTP cookie.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookie)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookie) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookie {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput)
}

// Name of the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookie) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Path to set for the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookie) *string {
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Lifetime of the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookie) *string {
		return v.Ttl
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookie)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookie) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookie {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookie
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput)
}

// Name of the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookie) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Path to set for the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookie) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Lifetime of the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookie) *string {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.StringPtrOutput)
}

// Hash based on HTTP cookie.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch struct {
	// Name of the cookie.
	Name *string `pulumi:"name"`
	// Path to set for the cookie.
	Path *string `pulumi:"path"`
	// Lifetime of the cookie.
	Ttl *string `pulumi:"ttl"`
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput
}

// Hash based on HTTP cookie.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs struct {
	// Name of the cookie.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path to set for the cookie.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Lifetime of the cookie.
	Ttl pulumi.StringPtrInput `pulumi:"ttl"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs, DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtr and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrType DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput)
}

// Hash based on HTTP cookie.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput)
}

// Name of the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Path to set for the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch) *string {
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Lifetime of the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch) *string {
		return v.Ttl
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput)
}

// Name of the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Path to set for the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Lifetime of the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch) *string {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.StringPtrOutput)
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglev struct {
	// The table size for Maglev hashing.
	TableSize *int `pulumi:"tableSize"`
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevArgs and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutput
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevArgs struct {
	// The table size for Maglev hashing.
	TableSize pulumi.IntPtrInput `pulumi:"tableSize"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglev)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutput).ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevArgs, DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtr and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrType DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevArgs

func DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtr(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevArgs) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglev)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput)
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglev)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglev) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglev {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput)
}

// The table size for Maglev hashing.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutput) TableSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglev) *int {
		return v.TableSize
	}).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglev)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglev) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglev {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglev
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutput)
}

// The table size for Maglev hashing.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput) TableSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglev) *int {
		if v == nil {
			return nil
		}
		return v.TableSize
	}).(pulumi.IntPtrOutput)
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatch struct {
	// The table size for Maglev hashing.
	TableSize *int `pulumi:"tableSize"`
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs struct {
	// The table size for Maglev hashing.
	TableSize pulumi.IntPtrInput `pulumi:"tableSize"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput)
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatch) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput)
}

// The table size for Maglev hashing.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput) TableSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatch) *int {
		return v.TableSize
	}).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatch) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput)
}

// The table size for Maglev hashing.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput) TableSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatch) *int {
		if v == nil {
			return nil
		}
		return v.TableSize
	}).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch struct {
	HttpCookie *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch `pulumi:"httpCookie"`
	// Hash based on a specific HTTP header.
	HttpHeaderName *string `pulumi:"httpHeaderName"`
	// Hash based on a specific HTTP query parameter.
	HttpQueryParameterName *string                                                                       `pulumi:"httpQueryParameterName"`
	Maglev                 *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatch `pulumi:"maglev"`
	// Deprecated.
	MinimumRingSize *int                                                                            `pulumi:"minimumRingSize"`
	RingHash        *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatch `pulumi:"ringHash"`
	// Hash based on the source IP address.
	UseSourceIp *bool `pulumi:"useSourceIp"`
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchArgs struct {
	HttpCookie DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrInput `pulumi:"httpCookie"`
	// Hash based on a specific HTTP header.
	HttpHeaderName pulumi.StringPtrInput `pulumi:"httpHeaderName"`
	// Hash based on a specific HTTP query parameter.
	HttpQueryParameterName pulumi.StringPtrInput                                                                `pulumi:"httpQueryParameterName"`
	Maglev                 DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrInput `pulumi:"maglev"`
	// Deprecated.
	MinimumRingSize pulumi.IntPtrInput                                                                     `pulumi:"minimumRingSize"`
	RingHash        DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrInput `pulumi:"ringHash"`
	// Hash based on the source IP address.
	UseSourceIp pulumi.BoolPtrInput `pulumi:"useSourceIp"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput) HttpCookie() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch {
		return v.HttpCookie
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput)
}

// Hash based on a specific HTTP header.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput) HttpHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch) *string {
		return v.HttpHeaderName
	}).(pulumi.StringPtrOutput)
}

// Hash based on a specific HTTP query parameter.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput) HttpQueryParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch) *string {
		return v.HttpQueryParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput) Maglev() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatch {
		return v.Maglev
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput)
}

// Deprecated.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch) *int {
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput) RingHash() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatch {
		return v.RingHash
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput)
}

// Hash based on the source IP address.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput) UseSourceIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch) *bool {
		return v.UseSourceIp
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput) HttpCookie() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch {
		if v == nil {
			return nil
		}
		return v.HttpCookie
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput)
}

// Hash based on a specific HTTP header.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput) HttpHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch) *string {
		if v == nil {
			return nil
		}
		return v.HttpHeaderName
	}).(pulumi.StringPtrOutput)
}

// Hash based on a specific HTTP query parameter.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput) HttpQueryParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch) *string {
		if v == nil {
			return nil
		}
		return v.HttpQueryParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput) Maglev() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatch {
		if v == nil {
			return nil
		}
		return v.Maglev
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput)
}

// Deprecated.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch) *int {
		if v == nil {
			return nil
		}
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput) RingHash() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatch {
		if v == nil {
			return nil
		}
		return v.RingHash
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput)
}

// Hash based on the source IP address.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput) UseSourceIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch) *bool {
		if v == nil {
			return nil
		}
		return v.UseSourceIp
	}).(pulumi.BoolPtrOutput)
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHash struct {
	// The minimum number of virtual nodes to use for the hash ring.
	MinimumRingSize *int `pulumi:"minimumRingSize"`
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashArgs and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutput
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashArgs struct {
	// The minimum number of virtual nodes to use for the hash ring.
	MinimumRingSize pulumi.IntPtrInput `pulumi:"minimumRingSize"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHash)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutput).ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashArgs, DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtr and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrType DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashArgs

func DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtr(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashArgs) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHash)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput)
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHash)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHash) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHash {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput)
}

// The minimum number of virtual nodes to use for the hash ring.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHash) *int {
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHash)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHash) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHash {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHash
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutput)
}

// The minimum number of virtual nodes to use for the hash ring.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHash) *int {
		if v == nil {
			return nil
		}
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatch struct {
	// The minimum number of virtual nodes to use for the hash ring.
	MinimumRingSize *int `pulumi:"minimumRingSize"`
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs struct {
	// The minimum number of virtual nodes to use for the hash ring.
	MinimumRingSize pulumi.IntPtrInput `pulumi:"minimumRingSize"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput)
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatch) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput)
}

// The minimum number of virtual nodes to use for the hash ring.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatch) *int {
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatch) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput)
}

// The minimum number of virtual nodes to use for the hash ring.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatch) *int {
		if v == nil {
			return nil
		}
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSetting struct {
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Distribute []DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistribute `pulumi:"distribute"`
	// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
	Enabled *bool `pulumi:"enabled"`
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Failover []DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailover `pulumi:"failover"`
	// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
	FailoverPriority []string `pulumi:"failoverPriority"`
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingArgs and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingArgs struct {
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Distribute DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayInput `pulumi:"distribute"`
	// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Failover DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayInput `pulumi:"failover"`
	// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
	FailoverPriority pulumi.StringArrayInput `pulumi:"failoverPriority"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSetting)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput).ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingArgs, DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtr and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrType DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingArgs

func DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtr(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingArgs) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSetting)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSetting)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSetting) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSetting {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput) Distribute() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSetting) []DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistribute {
		return v.Distribute
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput)
}

// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSetting) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput) Failover() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSetting) []DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailover {
		return v.Failover
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput)
}

// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput) FailoverPriority() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSetting) []string {
		return v.FailoverPriority
	}).(pulumi.StringArrayOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSetting)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSetting) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSetting {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSetting
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput) Distribute() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSetting) []DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistribute {
		if v == nil {
			return nil
		}
		return v.Distribute
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput)
}

// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSetting) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput) Failover() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSetting) []DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailover {
		if v == nil {
			return nil
		}
		return v.Failover
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput)
}

// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput) FailoverPriority() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSetting) []string {
		if v == nil {
			return nil
		}
		return v.FailoverPriority
	}).(pulumi.StringArrayOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistribute struct {
	// Originating locality, '/' separated, e.g.
	From *string `pulumi:"from"`
	// Map of upstream localities to traffic distribution weights.
	To map[string]int `pulumi:"to"`
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArgs and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArgs struct {
	// Originating locality, '/' separated, e.g.
	From pulumi.StringPtrInput `pulumi:"from"`
	// Map of upstream localities to traffic distribution weights.
	To pulumi.IntMapInput `pulumi:"to"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistribute)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput)
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArray and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArray{ DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArgs{...} }
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArray []DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeInput

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistribute)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArray) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArray) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistribute)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput {
	return o
}

// Originating locality, '/' separated, e.g.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistribute) *string {
		return v.From
	}).(pulumi.StringPtrOutput)
}

// Map of upstream localities to traffic distribution weights.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput) To() pulumi.IntMapOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistribute) map[string]int {
		return v.To
	}).(pulumi.IntMapOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistribute)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput) Index(i pulumi.IntInput) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistribute {
		return vs[0].([]DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistribute)[vs[1].(int)]
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch struct {
	// Originating locality, '/' separated, e.g.
	From *string `pulumi:"from"`
	// Map of upstream localities to traffic distribution weights.
	To map[string]int `pulumi:"to"`
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArgs and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArgs struct {
	// Originating locality, '/' separated, e.g.
	From pulumi.StringPtrInput `pulumi:"from"`
	// Map of upstream localities to traffic distribution weights.
	To pulumi.IntMapInput `pulumi:"to"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput)
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArray and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArray{ DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArgs{...} }
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArray []DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchInput

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArray) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArray) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput {
	return o
}

// Originating locality, '/' separated, e.g.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch) *string {
		return v.From
	}).(pulumi.StringPtrOutput)
}

// Map of upstream localities to traffic distribution weights.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput) To() pulumi.IntMapOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch) map[string]int {
		return v.To
	}).(pulumi.IntMapOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput) Index(i pulumi.IntInput) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch {
		return vs[0].([]DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch)[vs[1].(int)]
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailover struct {
	// Originating region.
	From *string `pulumi:"from"`
	// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
	To *string `pulumi:"to"`
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArgs and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArgs struct {
	// Originating region.
	From pulumi.StringPtrInput `pulumi:"from"`
	// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
	To pulumi.StringPtrInput `pulumi:"to"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailover)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput)
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArray and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArray{ DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArgs{...} }
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArray []DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverInput

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailover)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArray) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArray) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailover)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput {
	return o
}

// Originating region.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailover) *string {
		return v.From
	}).(pulumi.StringPtrOutput)
}

// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailover) *string {
		return v.To
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailover)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput) Index(i pulumi.IntInput) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailover {
		return vs[0].([]DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailover)[vs[1].(int)]
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch struct {
	// Originating region.
	From *string `pulumi:"from"`
	// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
	To *string `pulumi:"to"`
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArgs struct {
	// Originating region.
	From pulumi.StringPtrInput `pulumi:"from"`
	// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
	To pulumi.StringPtrInput `pulumi:"to"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput)
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArray and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArray{ DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArgs{...} }
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArray []DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchInput

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArray) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArray) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput {
	return o
}

// Originating region.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch) *string {
		return v.From
	}).(pulumi.StringPtrOutput)
}

// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch) *string {
		return v.To
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput) Index(i pulumi.IntInput) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch {
		return vs[0].([]DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch)[vs[1].(int)]
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatch struct {
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Distribute []DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch `pulumi:"distribute"`
	// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
	Enabled *bool `pulumi:"enabled"`
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Failover []DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch `pulumi:"failover"`
	// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
	FailoverPriority []string `pulumi:"failoverPriority"`
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs struct {
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Distribute DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayInput `pulumi:"distribute"`
	// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Failover DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayInput `pulumi:"failover"`
	// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
	FailoverPriority pulumi.StringArrayInput `pulumi:"failoverPriority"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatch) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput) Distribute() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatch) []DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch {
		return v.Distribute
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput)
}

// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatch) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput) Failover() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatch) []DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch {
		return v.Failover
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput)
}

// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput) FailoverPriority() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatch) []string {
		return v.FailoverPriority
	}).(pulumi.StringArrayOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatch) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput) Distribute() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatch) []DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch {
		if v == nil {
			return nil
		}
		return v.Distribute
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput)
}

// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput) Failover() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatch) []DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch {
		if v == nil {
			return nil
		}
		return v.Failover
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput)
}

// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput) FailoverPriority() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatch) []string {
		if v == nil {
			return nil
		}
		return v.FailoverPriority
	}).(pulumi.StringArrayOutput)
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatch struct {
	ConsistentHash    *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch    `pulumi:"consistentHash"`
	LocalityLbSetting *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatch `pulumi:"localityLbSetting"`
	// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
	Simple *string `pulumi:"simple"`
	// Represents the warmup duration of Service.
	WarmupDurationSecs *string `pulumi:"warmupDurationSecs"`
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchArgs struct {
	ConsistentHash    DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrInput    `pulumi:"consistentHash"`
	LocalityLbSetting DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrInput `pulumi:"localityLbSetting"`
	// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
	Simple pulumi.StringPtrInput `pulumi:"simple"`
	// Represents the warmup duration of Service.
	WarmupDurationSecs pulumi.StringPtrInput `pulumi:"warmupDurationSecs"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput)
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatch) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput) ConsistentHash() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatch) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch {
		return v.ConsistentHash
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput) LocalityLbSetting() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatch) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatch {
		return v.LocalityLbSetting
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput)
}

// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput) Simple() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatch) *string { return v.Simple }).(pulumi.StringPtrOutput)
}

// Represents the warmup duration of Service.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput) WarmupDurationSecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatch) *string { return v.WarmupDurationSecs }).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatch) DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput) ConsistentHash() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatch) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatch {
		if v == nil {
			return nil
		}
		return v.ConsistentHash
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput) LocalityLbSetting() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatch) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatch {
		if v == nil {
			return nil
		}
		return v.LocalityLbSetting
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput)
}

// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput) Simple() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatch) *string {
		if v == nil {
			return nil
		}
		return v.Simple
	}).(pulumi.StringPtrOutput)
}

// Represents the warmup duration of Service.
func (o DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput) WarmupDurationSecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatch) *string {
		if v == nil {
			return nil
		}
		return v.WarmupDurationSecs
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection struct {
	// Minimum ejection duration.
	BaseEjectionTime *string `pulumi:"baseEjectionTime"`
	// Number of 5xx errors before a host is ejected from the connection pool.
	Consecutive5xxErrors *int `pulumi:"consecutive5xxErrors"`
	ConsecutiveErrors    *int `pulumi:"consecutiveErrors"`
	// Number of gateway errors before a host is ejected from the connection pool.
	ConsecutiveGatewayErrors *int `pulumi:"consecutiveGatewayErrors"`
	// The number of consecutive locally originated failures before ejection occurs.
	ConsecutiveLocalOriginFailures *int `pulumi:"consecutiveLocalOriginFailures"`
	// Time interval between ejection sweep analysis.
	Interval *string `pulumi:"interval"`
	// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
	MaxEjectionPercent *int `pulumi:"maxEjectionPercent"`
	// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
	MinHealthPercent *int `pulumi:"minHealthPercent"`
	// Determines whether to distinguish local origin failures from external errors.
	SplitExternalLocalOriginErrors *bool `pulumi:"splitExternalLocalOriginErrors"`
}

// DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionArgs and DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput() DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionArgs struct {
	// Minimum ejection duration.
	BaseEjectionTime pulumi.StringPtrInput `pulumi:"baseEjectionTime"`
	// Number of 5xx errors before a host is ejected from the connection pool.
	Consecutive5xxErrors pulumi.IntPtrInput `pulumi:"consecutive5xxErrors"`
	ConsecutiveErrors    pulumi.IntPtrInput `pulumi:"consecutiveErrors"`
	// Number of gateway errors before a host is ejected from the connection pool.
	ConsecutiveGatewayErrors pulumi.IntPtrInput `pulumi:"consecutiveGatewayErrors"`
	// The number of consecutive locally originated failures before ejection occurs.
	ConsecutiveLocalOriginFailures pulumi.IntPtrInput `pulumi:"consecutiveLocalOriginFailures"`
	// Time interval between ejection sweep analysis.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
	MaxEjectionPercent pulumi.IntPtrInput `pulumi:"maxEjectionPercent"`
	// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
	MinHealthPercent pulumi.IntPtrInput `pulumi:"minHealthPercent"`
	// Determines whether to distinguish local origin failures from external errors.
	SplitExternalLocalOriginErrors pulumi.BoolPtrInput `pulumi:"splitExternalLocalOriginErrors"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionArgs) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput() DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionArgs) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionArgs) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionArgs) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput).ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionArgs, DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtr and DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrType DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionArgs

func DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtr(v *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionArgs) DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput() DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection) *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput)
}

// Minimum ejection duration.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput) BaseEjectionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection) *string { return v.BaseEjectionTime }).(pulumi.StringPtrOutput)
}

// Number of 5xx errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput) Consecutive5xxErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection) *int { return v.Consecutive5xxErrors }).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput) ConsecutiveErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection) *int { return v.ConsecutiveErrors }).(pulumi.IntPtrOutput)
}

// Number of gateway errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput) ConsecutiveGatewayErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection) *int {
		return v.ConsecutiveGatewayErrors
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive locally originated failures before ejection occurs.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput) ConsecutiveLocalOriginFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection) *int {
		return v.ConsecutiveLocalOriginFailures
	}).(pulumi.IntPtrOutput)
}

// Time interval between ejection sweep analysis.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput) MaxEjectionPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection) *int { return v.MaxEjectionPercent }).(pulumi.IntPtrOutput)
}

// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput) MinHealthPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection) *int { return v.MinHealthPercent }).(pulumi.IntPtrOutput)
}

// Determines whether to distinguish local origin failures from external errors.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput) SplitExternalLocalOriginErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection) *bool {
		return v.SplitExternalLocalOriginErrors
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection) DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput)
}

// Minimum ejection duration.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput) BaseEjectionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection) *string {
		if v == nil {
			return nil
		}
		return v.BaseEjectionTime
	}).(pulumi.StringPtrOutput)
}

// Number of 5xx errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput) Consecutive5xxErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.Consecutive5xxErrors
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput) ConsecutiveErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveErrors
	}).(pulumi.IntPtrOutput)
}

// Number of gateway errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput) ConsecutiveGatewayErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveGatewayErrors
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive locally originated failures before ejection occurs.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput) ConsecutiveLocalOriginFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveLocalOriginFailures
	}).(pulumi.IntPtrOutput)
}

// Time interval between ejection sweep analysis.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput) MaxEjectionPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.MaxEjectionPercent
	}).(pulumi.IntPtrOutput)
}

// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput) MinHealthPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.MinHealthPercent
	}).(pulumi.IntPtrOutput)
}

// Determines whether to distinguish local origin failures from external errors.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput) SplitExternalLocalOriginErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetection) *bool {
		if v == nil {
			return nil
		}
		return v.SplitExternalLocalOriginErrors
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch struct {
	// Minimum ejection duration.
	BaseEjectionTime *string `pulumi:"baseEjectionTime"`
	// Number of 5xx errors before a host is ejected from the connection pool.
	Consecutive5xxErrors *int `pulumi:"consecutive5xxErrors"`
	ConsecutiveErrors    *int `pulumi:"consecutiveErrors"`
	// Number of gateway errors before a host is ejected from the connection pool.
	ConsecutiveGatewayErrors *int `pulumi:"consecutiveGatewayErrors"`
	// The number of consecutive locally originated failures before ejection occurs.
	ConsecutiveLocalOriginFailures *int `pulumi:"consecutiveLocalOriginFailures"`
	// Time interval between ejection sweep analysis.
	Interval *string `pulumi:"interval"`
	// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
	MaxEjectionPercent *int `pulumi:"maxEjectionPercent"`
	// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
	MinHealthPercent *int `pulumi:"minHealthPercent"`
	// Determines whether to distinguish local origin failures from external errors.
	SplitExternalLocalOriginErrors *bool `pulumi:"splitExternalLocalOriginErrors"`
}

// DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchArgs struct {
	// Minimum ejection duration.
	BaseEjectionTime pulumi.StringPtrInput `pulumi:"baseEjectionTime"`
	// Number of 5xx errors before a host is ejected from the connection pool.
	Consecutive5xxErrors pulumi.IntPtrInput `pulumi:"consecutive5xxErrors"`
	ConsecutiveErrors    pulumi.IntPtrInput `pulumi:"consecutiveErrors"`
	// Number of gateway errors before a host is ejected from the connection pool.
	ConsecutiveGatewayErrors pulumi.IntPtrInput `pulumi:"consecutiveGatewayErrors"`
	// The number of consecutive locally originated failures before ejection occurs.
	ConsecutiveLocalOriginFailures pulumi.IntPtrInput `pulumi:"consecutiveLocalOriginFailures"`
	// Time interval between ejection sweep analysis.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
	MaxEjectionPercent pulumi.IntPtrInput `pulumi:"maxEjectionPercent"`
	// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
	MinHealthPercent pulumi.IntPtrInput `pulumi:"minHealthPercent"`
	// Determines whether to distinguish local origin failures from external errors.
	SplitExternalLocalOriginErrors pulumi.BoolPtrInput `pulumi:"splitExternalLocalOriginErrors"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch) *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput)
}

// Minimum ejection duration.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput) BaseEjectionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch) *string {
		return v.BaseEjectionTime
	}).(pulumi.StringPtrOutput)
}

// Number of 5xx errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput) Consecutive5xxErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch) *int {
		return v.Consecutive5xxErrors
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput) ConsecutiveErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch) *int { return v.ConsecutiveErrors }).(pulumi.IntPtrOutput)
}

// Number of gateway errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput) ConsecutiveGatewayErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch) *int {
		return v.ConsecutiveGatewayErrors
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive locally originated failures before ejection occurs.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput) ConsecutiveLocalOriginFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch) *int {
		return v.ConsecutiveLocalOriginFailures
	}).(pulumi.IntPtrOutput)
}

// Time interval between ejection sweep analysis.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput) MaxEjectionPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch) *int { return v.MaxEjectionPercent }).(pulumi.IntPtrOutput)
}

// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput) MinHealthPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch) *int { return v.MinHealthPercent }).(pulumi.IntPtrOutput)
}

// Determines whether to distinguish local origin failures from external errors.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput) SplitExternalLocalOriginErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch) *bool {
		return v.SplitExternalLocalOriginErrors
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch) DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput)
}

// Minimum ejection duration.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput) BaseEjectionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch) *string {
		if v == nil {
			return nil
		}
		return v.BaseEjectionTime
	}).(pulumi.StringPtrOutput)
}

// Number of 5xx errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput) Consecutive5xxErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.Consecutive5xxErrors
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput) ConsecutiveErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveErrors
	}).(pulumi.IntPtrOutput)
}

// Number of gateway errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput) ConsecutiveGatewayErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveGatewayErrors
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive locally originated failures before ejection occurs.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput) ConsecutiveLocalOriginFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveLocalOriginFailures
	}).(pulumi.IntPtrOutput)
}

// Time interval between ejection sweep analysis.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput) MaxEjectionPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxEjectionPercent
	}).(pulumi.IntPtrOutput)
}

// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput) MinHealthPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.MinHealthPercent
	}).(pulumi.IntPtrOutput)
}

// Determines whether to distinguish local origin failures from external errors.
func (o DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput) SplitExternalLocalOriginErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch) *bool {
		if v == nil {
			return nil
		}
		return v.SplitExternalLocalOriginErrors
	}).(pulumi.BoolPtrOutput)
}

// Traffic policies that apply to this subset.
type DestinationRuleSpecSubsetsTrafficPolicyPatch struct {
	ConnectionPool   *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatch   `pulumi:"connectionPool"`
	LoadBalancer     *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatch     `pulumi:"loadBalancer"`
	OutlierDetection *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch `pulumi:"outlierDetection"`
	// Traffic policies specific to individual ports.
	PortLevelSettings []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatch `pulumi:"portLevelSettings"`
	ProxyProtocol     *DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatch      `pulumi:"proxyProtocol"`
	Tls               *DestinationRuleSpecSubsetsTrafficPolicyTlsPatch                `pulumi:"tls"`
	Tunnel            *DestinationRuleSpecSubsetsTrafficPolicyTunnelPatch             `pulumi:"tunnel"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPatchOutput
}

// Traffic policies that apply to this subset.
type DestinationRuleSpecSubsetsTrafficPolicyPatchArgs struct {
	ConnectionPool   DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrInput   `pulumi:"connectionPool"`
	LoadBalancer     DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrInput     `pulumi:"loadBalancer"`
	OutlierDetection DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrInput `pulumi:"outlierDetection"`
	// Traffic policies specific to individual ports.
	PortLevelSettings DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayInput `pulumi:"portLevelSettings"`
	ProxyProtocol     DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrInput       `pulumi:"proxyProtocol"`
	Tls               DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrInput                 `pulumi:"tls"`
	Tunnel            DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrInput              `pulumi:"tunnel"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput)
}

// Traffic policies that apply to this subset.
type DestinationRuleSpecSubsetsTrafficPolicyPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPatch) *DestinationRuleSpecSubsetsTrafficPolicyPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPatchOutput) ConnectionPool() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPatch) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatch {
		return v.ConnectionPool
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPatchOutput) LoadBalancer() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPatch) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatch {
		return v.LoadBalancer
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPatchOutput) OutlierDetection() DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPatch) *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch {
		return v.OutlierDetection
	}).(DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput)
}

// Traffic policies specific to individual ports.
func (o DestinationRuleSpecSubsetsTrafficPolicyPatchOutput) PortLevelSettings() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPatch) []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatch {
		return v.PortLevelSettings
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPatchOutput) ProxyProtocol() DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPatch) *DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatch {
		return v.ProxyProtocol
	}).(DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPatchOutput) Tls() DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPatch) *DestinationRuleSpecSubsetsTrafficPolicyTlsPatch {
		return v.Tls
	}).(DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPatchOutput) Tunnel() DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPatch) *DestinationRuleSpecSubsetsTrafficPolicyTunnelPatch {
		return v.Tunnel
	}).(DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPatch) DestinationRuleSpecSubsetsTrafficPolicyPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPatchOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput) ConnectionPool() DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPatch) *DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatch {
		if v == nil {
			return nil
		}
		return v.ConnectionPool
	}).(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput) LoadBalancer() DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPatch) *DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatch {
		if v == nil {
			return nil
		}
		return v.LoadBalancer
	}).(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput) OutlierDetection() DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPatch) *DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatch {
		if v == nil {
			return nil
		}
		return v.OutlierDetection
	}).(DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput)
}

// Traffic policies specific to individual ports.
func (o DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput) PortLevelSettings() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPatch) []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatch {
		if v == nil {
			return nil
		}
		return v.PortLevelSettings
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput) ProxyProtocol() DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPatch) *DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatch {
		if v == nil {
			return nil
		}
		return v.ProxyProtocol
	}).(DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput) Tls() DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPatch) *DestinationRuleSpecSubsetsTrafficPolicyTlsPatch {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput) Tunnel() DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPatch) *DestinationRuleSpecSubsetsTrafficPolicyTunnelPatch {
		if v == nil {
			return nil
		}
		return v.Tunnel
	}).(DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettings struct {
	ConnectionPool   *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPool   `pulumi:"connectionPool"`
	LoadBalancer     *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancer     `pulumi:"loadBalancer"`
	OutlierDetection *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection `pulumi:"outlierDetection"`
	Port             *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPort             `pulumi:"port"`
	Tls              *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls              `pulumi:"tls"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArgs struct {
	ConnectionPool   DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrInput   `pulumi:"connectionPool"`
	LoadBalancer     DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrInput     `pulumi:"loadBalancer"`
	OutlierDetection DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrInput `pulumi:"outlierDetection"`
	Port             DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrInput             `pulumi:"port"`
	Tls              DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrInput              `pulumi:"tls"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettings)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutput)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArray and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArray{ DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArgs{...} }
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArray []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsInput

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettings)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArray) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArray) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettings)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutput) ConnectionPool() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettings) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPool {
		return v.ConnectionPool
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutput) LoadBalancer() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettings) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancer {
		return v.LoadBalancer
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutput) OutlierDetection() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettings) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection {
		return v.OutlierDetection
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutput) Port() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettings) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPort {
		return v.Port
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutput) Tls() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettings) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls {
		return v.Tls
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettings)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutput) Index(i pulumi.IntInput) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettings {
		return vs[0].([]DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettings)[vs[1].(int)]
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPool struct {
	Http *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp `pulumi:"http"`
	Tcp  *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcp  `pulumi:"tcp"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolArgs struct {
	Http DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrInput `pulumi:"http"`
	Tcp  DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrInput  `pulumi:"tcp"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPool)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPool)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPool)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPool) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPool {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutput) Http() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPool) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp {
		return v.Http
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutput) Tcp() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPool) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcp {
		return v.Tcp
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPool)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPool) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPool {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPool
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput) Http() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPool) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput) Tcp() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPool) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput)
}

// HTTP connection pool settings.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy *string `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests *int `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests *int `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams *int `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection *int `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries *int `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol *bool `pulumi:"useClientProtocol"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput
}

// HTTP connection pool settings.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy pulumi.StringPtrInput `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests pulumi.IntPtrInput `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests pulumi.IntPtrInput `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams pulumi.IntPtrInput `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection pulumi.IntPtrInput `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries pulumi.IntPtrInput `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol pulumi.BoolPtrInput `pulumi:"useClientProtocol"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput)
}

// HTTP connection pool settings.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp) *string {
		return v.H2UpgradePolicy
	}).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp) *int {
		return v.Http1MaxPendingRequests
	}).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp) *int {
		return v.Http2MaxRequests
	}).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp) *string {
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp) *int {
		return v.MaxConcurrentStreams
	}).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp) *int {
		return v.MaxRequestsPerConnection
	}).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp) *int {
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp) *bool {
		return v.UseClientProtocol
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp) *string {
		if v == nil {
			return nil
		}
		return v.H2UpgradePolicy
	}).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.Http1MaxPendingRequests
	}).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.Http2MaxRequests
	}).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentStreams
	}).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestsPerConnection
	}).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttp) *bool {
		if v == nil {
			return nil
		}
		return v.UseClientProtocol
	}).(pulumi.BoolPtrOutput)
}

// HTTP connection pool settings.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy *string `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests *int `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests *int `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams *int `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection *int `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries *int `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol *bool `pulumi:"useClientProtocol"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput
}

// HTTP connection pool settings.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy pulumi.StringPtrInput `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests pulumi.IntPtrInput `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests pulumi.IntPtrInput `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams pulumi.IntPtrInput `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection pulumi.IntPtrInput `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries pulumi.IntPtrInput `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol pulumi.BoolPtrInput `pulumi:"useClientProtocol"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput)
}

// HTTP connection pool settings.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *string {
		return v.H2UpgradePolicy
	}).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *int {
		return v.Http1MaxPendingRequests
	}).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *int {
		return v.Http2MaxRequests
	}).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *string {
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *int {
		return v.MaxConcurrentStreams
	}).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *int {
		return v.MaxRequestsPerConnection
	}).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *int {
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *bool {
		return v.UseClientProtocol
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *string {
		if v == nil {
			return nil
		}
		return v.H2UpgradePolicy
	}).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.Http1MaxPendingRequests
	}).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.Http2MaxRequests
	}).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentStreams
	}).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestsPerConnection
	}).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *bool {
		if v == nil {
			return nil
		}
		return v.UseClientProtocol
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatch struct {
	Http *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch `pulumi:"http"`
	Tcp  *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch  `pulumi:"tcp"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs struct {
	Http DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrInput `pulumi:"http"`
	Tcp  DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrInput  `pulumi:"tcp"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput) Http() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch {
		return v.Http
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput) Tcp() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch {
		return v.Tcp
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatch) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput) Http() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch {
		if v == nil {
			return nil
		}
		return v.Http
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput) Tcp() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcp struct {
	// TCP connection timeout.
	ConnectTimeout *string `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration *string `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections *int                                                                                   `pulumi:"maxConnections"`
	TcpKeepalive   *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive `pulumi:"tcpKeepalive"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs struct {
	// TCP connection timeout.
	ConnectTimeout pulumi.StringPtrInput `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration pulumi.StringPtrInput `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections pulumi.IntPtrInput                                                                            `pulumi:"maxConnections"`
	TcpKeepalive   DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrInput `pulumi:"tcpKeepalive"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcp)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcp)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcp)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcp) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcp {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput)
}

// TCP connection timeout.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcp) *string {
		return v.ConnectTimeout
	}).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcp) *string {
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcp) *string {
		return v.MaxConnectionDuration
	}).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcp) *int {
		return v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput) TcpKeepalive() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcp) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive {
		return v.TcpKeepalive
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcp)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcp) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcp {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcp
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput)
}

// TCP connection timeout.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcp) *string {
		if v == nil {
			return nil
		}
		return v.ConnectTimeout
	}).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcp) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcp) *string {
		if v == nil {
			return nil
		}
		return v.MaxConnectionDuration
	}).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcp) *int {
		if v == nil {
			return nil
		}
		return v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput) TcpKeepalive() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcp) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive {
		if v == nil {
			return nil
		}
		return v.TcpKeepalive
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch struct {
	// TCP connection timeout.
	ConnectTimeout *string `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration *string `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections *int                                                                                        `pulumi:"maxConnections"`
	TcpKeepalive   *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch `pulumi:"tcpKeepalive"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs struct {
	// TCP connection timeout.
	ConnectTimeout pulumi.StringPtrInput `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration pulumi.StringPtrInput `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections pulumi.IntPtrInput                                                                                 `pulumi:"maxConnections"`
	TcpKeepalive   DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrInput `pulumi:"tcpKeepalive"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput)
}

// TCP connection timeout.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) *string {
		return v.ConnectTimeout
	}).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) *string {
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) *string {
		return v.MaxConnectionDuration
	}).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) *int {
		return v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput) TcpKeepalive() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch {
		return v.TcpKeepalive
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput)
}

// TCP connection timeout.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) *string {
		if v == nil {
			return nil
		}
		return v.ConnectTimeout
	}).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) *string {
		if v == nil {
			return nil
		}
		return v.MaxConnectionDuration
	}).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput) TcpKeepalive() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch {
		if v == nil {
			return nil
		}
		return v.TcpKeepalive
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive struct {
	// The time duration between keep-alive probes.
	Interval *string `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes *int `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time *string `pulumi:"time"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs struct {
	// The time duration between keep-alive probes.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes pulumi.IntPtrInput `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time pulumi.StringPtrInput `pulumi:"time"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput)
}

// The time duration between keep-alive probes.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive) *string {
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive) *int {
		return v.Probes
	}).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive) *string {
		return v.Time
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput)
}

// The time duration between keep-alive probes.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive) *int {
		if v == nil {
			return nil
		}
		return v.Probes
	}).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch struct {
	// The time duration between keep-alive probes.
	Interval *string `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes *int `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time *string `pulumi:"time"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs struct {
	// The time duration between keep-alive probes.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes pulumi.IntPtrInput `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time pulumi.StringPtrInput `pulumi:"time"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

// The time duration between keep-alive probes.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch) *string {
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch) *int {
		return v.Probes
	}).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch) *string {
		return v.Time
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput)
}

// The time duration between keep-alive probes.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch) *int {
		if v == nil {
			return nil
		}
		return v.Probes
	}).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancer struct {
	ConsistentHash    *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash    `pulumi:"consistentHash"`
	LocalityLbSetting *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting `pulumi:"localityLbSetting"`
	// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
	Simple *string `pulumi:"simple"`
	// Represents the warmup duration of Service.
	WarmupDurationSecs *string `pulumi:"warmupDurationSecs"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerArgs struct {
	ConsistentHash    DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrInput    `pulumi:"consistentHash"`
	LocalityLbSetting DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrInput `pulumi:"localityLbSetting"`
	// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
	Simple pulumi.StringPtrInput `pulumi:"simple"`
	// Represents the warmup duration of Service.
	WarmupDurationSecs pulumi.StringPtrInput `pulumi:"warmupDurationSecs"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancer)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancer)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput)
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancer)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancer) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancer {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput) ConsistentHash() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancer) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash {
		return v.ConsistentHash
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput) LocalityLbSetting() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancer) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting {
		return v.LocalityLbSetting
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput)
}

// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput) Simple() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancer) *string { return v.Simple }).(pulumi.StringPtrOutput)
}

// Represents the warmup duration of Service.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput) WarmupDurationSecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancer) *string {
		return v.WarmupDurationSecs
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancer)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancer) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancer {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancer
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput) ConsistentHash() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancer) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash {
		if v == nil {
			return nil
		}
		return v.ConsistentHash
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput) LocalityLbSetting() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancer) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting {
		if v == nil {
			return nil
		}
		return v.LocalityLbSetting
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput)
}

// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput) Simple() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.Simple
	}).(pulumi.StringPtrOutput)
}

// Represents the warmup duration of Service.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput) WarmupDurationSecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.WarmupDurationSecs
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash struct {
	HttpCookie *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie `pulumi:"httpCookie"`
	// Hash based on a specific HTTP header.
	HttpHeaderName *string `pulumi:"httpHeaderName"`
	// Hash based on a specific HTTP query parameter.
	HttpQueryParameterName *string                                                                                   `pulumi:"httpQueryParameterName"`
	Maglev                 *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev `pulumi:"maglev"`
	// Deprecated.
	MinimumRingSize *int                                                                                        `pulumi:"minimumRingSize"`
	RingHash        *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash `pulumi:"ringHash"`
	// Hash based on the source IP address.
	UseSourceIp *bool `pulumi:"useSourceIp"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs struct {
	HttpCookie DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrInput `pulumi:"httpCookie"`
	// Hash based on a specific HTTP header.
	HttpHeaderName pulumi.StringPtrInput `pulumi:"httpHeaderName"`
	// Hash based on a specific HTTP query parameter.
	HttpQueryParameterName pulumi.StringPtrInput                                                                            `pulumi:"httpQueryParameterName"`
	Maglev                 DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrInput `pulumi:"maglev"`
	// Deprecated.
	MinimumRingSize pulumi.IntPtrInput                                                                                 `pulumi:"minimumRingSize"`
	RingHash        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrInput `pulumi:"ringHash"`
	// Hash based on the source IP address.
	UseSourceIp pulumi.BoolPtrInput `pulumi:"useSourceIp"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) HttpCookie() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie {
		return v.HttpCookie
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput)
}

// Hash based on a specific HTTP header.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) HttpHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *string {
		return v.HttpHeaderName
	}).(pulumi.StringPtrOutput)
}

// Hash based on a specific HTTP query parameter.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) HttpQueryParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *string {
		return v.HttpQueryParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) Maglev() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev {
		return v.Maglev
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput)
}

// Deprecated.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *int {
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) RingHash() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash {
		return v.RingHash
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput)
}

// Hash based on the source IP address.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) UseSourceIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *bool {
		return v.UseSourceIp
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput) HttpCookie() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie {
		if v == nil {
			return nil
		}
		return v.HttpCookie
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput)
}

// Hash based on a specific HTTP header.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput) HttpHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *string {
		if v == nil {
			return nil
		}
		return v.HttpHeaderName
	}).(pulumi.StringPtrOutput)
}

// Hash based on a specific HTTP query parameter.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput) HttpQueryParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *string {
		if v == nil {
			return nil
		}
		return v.HttpQueryParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput) Maglev() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev {
		if v == nil {
			return nil
		}
		return v.Maglev
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput)
}

// Deprecated.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *int {
		if v == nil {
			return nil
		}
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput) RingHash() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash {
		if v == nil {
			return nil
		}
		return v.RingHash
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput)
}

// Hash based on the source IP address.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput) UseSourceIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *bool {
		if v == nil {
			return nil
		}
		return v.UseSourceIp
	}).(pulumi.BoolPtrOutput)
}

// Hash based on HTTP cookie.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie struct {
	// Name of the cookie.
	Name *string `pulumi:"name"`
	// Path to set for the cookie.
	Path *string `pulumi:"path"`
	// Lifetime of the cookie.
	Ttl *string `pulumi:"ttl"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput
}

// Hash based on HTTP cookie.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs struct {
	// Name of the cookie.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path to set for the cookie.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Lifetime of the cookie.
	Ttl pulumi.StringPtrInput `pulumi:"ttl"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput)
}

// Hash based on HTTP cookie.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput)
}

// Name of the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Path to set for the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie) *string {
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Lifetime of the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie) *string {
		return v.Ttl
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput)
}

// Name of the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Path to set for the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Lifetime of the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie) *string {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.StringPtrOutput)
}

// Hash based on HTTP cookie.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch struct {
	// Name of the cookie.
	Name *string `pulumi:"name"`
	// Path to set for the cookie.
	Path *string `pulumi:"path"`
	// Lifetime of the cookie.
	Ttl *string `pulumi:"ttl"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput
}

// Hash based on HTTP cookie.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs struct {
	// Name of the cookie.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path to set for the cookie.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Lifetime of the cookie.
	Ttl pulumi.StringPtrInput `pulumi:"ttl"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput)
}

// Hash based on HTTP cookie.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput)
}

// Name of the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Path to set for the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch) *string {
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Lifetime of the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch) *string {
		return v.Ttl
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput)
}

// Name of the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Path to set for the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Lifetime of the cookie.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch) *string {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.StringPtrOutput)
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev struct {
	// The table size for Maglev hashing.
	TableSize *int `pulumi:"tableSize"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs struct {
	// The table size for Maglev hashing.
	TableSize pulumi.IntPtrInput `pulumi:"tableSize"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput)
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput)
}

// The table size for Maglev hashing.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput) TableSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev) *int {
		return v.TableSize
	}).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput)
}

// The table size for Maglev hashing.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput) TableSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev) *int {
		if v == nil {
			return nil
		}
		return v.TableSize
	}).(pulumi.IntPtrOutput)
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch struct {
	// The table size for Maglev hashing.
	TableSize *int `pulumi:"tableSize"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs struct {
	// The table size for Maglev hashing.
	TableSize pulumi.IntPtrInput `pulumi:"tableSize"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput)
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput)
}

// The table size for Maglev hashing.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput) TableSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch) *int {
		return v.TableSize
	}).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput)
}

// The table size for Maglev hashing.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput) TableSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch) *int {
		if v == nil {
			return nil
		}
		return v.TableSize
	}).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch struct {
	HttpCookie *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch `pulumi:"httpCookie"`
	// Hash based on a specific HTTP header.
	HttpHeaderName *string `pulumi:"httpHeaderName"`
	// Hash based on a specific HTTP query parameter.
	HttpQueryParameterName *string                                                                                        `pulumi:"httpQueryParameterName"`
	Maglev                 *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch `pulumi:"maglev"`
	// Deprecated.
	MinimumRingSize *int                                                                                             `pulumi:"minimumRingSize"`
	RingHash        *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch `pulumi:"ringHash"`
	// Hash based on the source IP address.
	UseSourceIp *bool `pulumi:"useSourceIp"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs struct {
	HttpCookie DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrInput `pulumi:"httpCookie"`
	// Hash based on a specific HTTP header.
	HttpHeaderName pulumi.StringPtrInput `pulumi:"httpHeaderName"`
	// Hash based on a specific HTTP query parameter.
	HttpQueryParameterName pulumi.StringPtrInput                                                                                 `pulumi:"httpQueryParameterName"`
	Maglev                 DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrInput `pulumi:"maglev"`
	// Deprecated.
	MinimumRingSize pulumi.IntPtrInput                                                                                      `pulumi:"minimumRingSize"`
	RingHash        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrInput `pulumi:"ringHash"`
	// Hash based on the source IP address.
	UseSourceIp pulumi.BoolPtrInput `pulumi:"useSourceIp"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) HttpCookie() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch {
		return v.HttpCookie
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput)
}

// Hash based on a specific HTTP header.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) HttpHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *string {
		return v.HttpHeaderName
	}).(pulumi.StringPtrOutput)
}

// Hash based on a specific HTTP query parameter.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) HttpQueryParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *string {
		return v.HttpQueryParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) Maglev() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch {
		return v.Maglev
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput)
}

// Deprecated.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *int {
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) RingHash() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch {
		return v.RingHash
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput)
}

// Hash based on the source IP address.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) UseSourceIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *bool {
		return v.UseSourceIp
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput) HttpCookie() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch {
		if v == nil {
			return nil
		}
		return v.HttpCookie
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput)
}

// Hash based on a specific HTTP header.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput) HttpHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *string {
		if v == nil {
			return nil
		}
		return v.HttpHeaderName
	}).(pulumi.StringPtrOutput)
}

// Hash based on a specific HTTP query parameter.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput) HttpQueryParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *string {
		if v == nil {
			return nil
		}
		return v.HttpQueryParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput) Maglev() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch {
		if v == nil {
			return nil
		}
		return v.Maglev
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput)
}

// Deprecated.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *int {
		if v == nil {
			return nil
		}
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput) RingHash() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch {
		if v == nil {
			return nil
		}
		return v.RingHash
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput)
}

// Hash based on the source IP address.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput) UseSourceIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *bool {
		if v == nil {
			return nil
		}
		return v.UseSourceIp
	}).(pulumi.BoolPtrOutput)
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash struct {
	// The minimum number of virtual nodes to use for the hash ring.
	MinimumRingSize *int `pulumi:"minimumRingSize"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs struct {
	// The minimum number of virtual nodes to use for the hash ring.
	MinimumRingSize pulumi.IntPtrInput `pulumi:"minimumRingSize"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput)
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput)
}

// The minimum number of virtual nodes to use for the hash ring.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash) *int {
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput)
}

// The minimum number of virtual nodes to use for the hash ring.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash) *int {
		if v == nil {
			return nil
		}
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch struct {
	// The minimum number of virtual nodes to use for the hash ring.
	MinimumRingSize *int `pulumi:"minimumRingSize"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs struct {
	// The minimum number of virtual nodes to use for the hash ring.
	MinimumRingSize pulumi.IntPtrInput `pulumi:"minimumRingSize"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput)
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput)
}

// The minimum number of virtual nodes to use for the hash ring.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch) *int {
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput)
}

// The minimum number of virtual nodes to use for the hash ring.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch) *int {
		if v == nil {
			return nil
		}
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting struct {
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Distribute []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute `pulumi:"distribute"`
	// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
	Enabled *bool `pulumi:"enabled"`
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Failover []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover `pulumi:"failover"`
	// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
	FailoverPriority []string `pulumi:"failoverPriority"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs struct {
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Distribute DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayInput `pulumi:"distribute"`
	// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Failover DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayInput `pulumi:"failover"`
	// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
	FailoverPriority pulumi.StringArrayInput `pulumi:"failoverPriority"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput) Distribute() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting) []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute {
		return v.Distribute
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput)
}

// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput) Failover() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting) []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover {
		return v.Failover
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput)
}

// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput) FailoverPriority() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting) []string {
		return v.FailoverPriority
	}).(pulumi.StringArrayOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput) Distribute() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting) []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute {
		if v == nil {
			return nil
		}
		return v.Distribute
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput)
}

// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput) Failover() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting) []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover {
		if v == nil {
			return nil
		}
		return v.Failover
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput)
}

// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput) FailoverPriority() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting) []string {
		if v == nil {
			return nil
		}
		return v.FailoverPriority
	}).(pulumi.StringArrayOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute struct {
	// Originating locality, '/' separated, e.g.
	From *string `pulumi:"from"`
	// Map of upstream localities to traffic distribution weights.
	To map[string]int `pulumi:"to"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArgs struct {
	// Originating locality, '/' separated, e.g.
	From pulumi.StringPtrInput `pulumi:"from"`
	// Map of upstream localities to traffic distribution weights.
	To pulumi.IntMapInput `pulumi:"to"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArray and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArray{ DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArgs{...} }
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArray []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeInput

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArray) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArray) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput {
	return o
}

// Originating locality, '/' separated, e.g.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute) *string {
		return v.From
	}).(pulumi.StringPtrOutput)
}

// Map of upstream localities to traffic distribution weights.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput) To() pulumi.IntMapOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute) map[string]int {
		return v.To
	}).(pulumi.IntMapOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput) Index(i pulumi.IntInput) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute {
		return vs[0].([]DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute)[vs[1].(int)]
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch struct {
	// Originating locality, '/' separated, e.g.
	From *string `pulumi:"from"`
	// Map of upstream localities to traffic distribution weights.
	To map[string]int `pulumi:"to"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArgs struct {
	// Originating locality, '/' separated, e.g.
	From pulumi.StringPtrInput `pulumi:"from"`
	// Map of upstream localities to traffic distribution weights.
	To pulumi.IntMapInput `pulumi:"to"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArray and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArray{ DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArgs{...} }
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArray []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchInput

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArray) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArray) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput {
	return o
}

// Originating locality, '/' separated, e.g.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch) *string {
		return v.From
	}).(pulumi.StringPtrOutput)
}

// Map of upstream localities to traffic distribution weights.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput) To() pulumi.IntMapOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch) map[string]int {
		return v.To
	}).(pulumi.IntMapOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput) Index(i pulumi.IntInput) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch {
		return vs[0].([]DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch)[vs[1].(int)]
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover struct {
	// Originating region.
	From *string `pulumi:"from"`
	// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
	To *string `pulumi:"to"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArgs struct {
	// Originating region.
	From pulumi.StringPtrInput `pulumi:"from"`
	// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
	To pulumi.StringPtrInput `pulumi:"to"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArray and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArray{ DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArgs{...} }
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArray []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverInput

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArray) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArray) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput {
	return o
}

// Originating region.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover) *string {
		return v.From
	}).(pulumi.StringPtrOutput)
}

// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover) *string {
		return v.To
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput) Index(i pulumi.IntInput) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover {
		return vs[0].([]DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover)[vs[1].(int)]
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch struct {
	// Originating region.
	From *string `pulumi:"from"`
	// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
	To *string `pulumi:"to"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArgs struct {
	// Originating region.
	From pulumi.StringPtrInput `pulumi:"from"`
	// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
	To pulumi.StringPtrInput `pulumi:"to"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArray and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArray{ DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArgs{...} }
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArray []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchInput

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArray) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArray) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput {
	return o
}

// Originating region.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch) *string {
		return v.From
	}).(pulumi.StringPtrOutput)
}

// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch) *string {
		return v.To
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput) Index(i pulumi.IntInput) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch {
		return vs[0].([]DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch)[vs[1].(int)]
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch struct {
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Distribute []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch `pulumi:"distribute"`
	// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
	Enabled *bool `pulumi:"enabled"`
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Failover []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch `pulumi:"failover"`
	// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
	FailoverPriority []string `pulumi:"failoverPriority"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs struct {
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Distribute DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayInput `pulumi:"distribute"`
	// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Failover DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayInput `pulumi:"failover"`
	// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
	FailoverPriority pulumi.StringArrayInput `pulumi:"failoverPriority"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput) Distribute() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch) []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch {
		return v.Distribute
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput)
}

// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput) Failover() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch) []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch {
		return v.Failover
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput)
}

// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput) FailoverPriority() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch) []string {
		return v.FailoverPriority
	}).(pulumi.StringArrayOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput) Distribute() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch) []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch {
		if v == nil {
			return nil
		}
		return v.Distribute
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput)
}

// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput) Failover() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch) []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch {
		if v == nil {
			return nil
		}
		return v.Failover
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput)
}

// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput) FailoverPriority() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch) []string {
		if v == nil {
			return nil
		}
		return v.FailoverPriority
	}).(pulumi.StringArrayOutput)
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatch struct {
	ConsistentHash    *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch    `pulumi:"consistentHash"`
	LocalityLbSetting *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch `pulumi:"localityLbSetting"`
	// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
	Simple *string `pulumi:"simple"`
	// Represents the warmup duration of Service.
	WarmupDurationSecs *string `pulumi:"warmupDurationSecs"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs struct {
	ConsistentHash    DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrInput    `pulumi:"consistentHash"`
	LocalityLbSetting DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrInput `pulumi:"localityLbSetting"`
	// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
	Simple pulumi.StringPtrInput `pulumi:"simple"`
	// Represents the warmup duration of Service.
	WarmupDurationSecs pulumi.StringPtrInput `pulumi:"warmupDurationSecs"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput)
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput) ConsistentHash() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch {
		return v.ConsistentHash
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput) LocalityLbSetting() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch {
		return v.LocalityLbSetting
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput)
}

// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput) Simple() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatch) *string {
		return v.Simple
	}).(pulumi.StringPtrOutput)
}

// Represents the warmup duration of Service.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput) WarmupDurationSecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatch) *string {
		return v.WarmupDurationSecs
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatch) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput) ConsistentHash() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch {
		if v == nil {
			return nil
		}
		return v.ConsistentHash
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput) LocalityLbSetting() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch {
		if v == nil {
			return nil
		}
		return v.LocalityLbSetting
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput)
}

// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput) Simple() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatch) *string {
		if v == nil {
			return nil
		}
		return v.Simple
	}).(pulumi.StringPtrOutput)
}

// Represents the warmup duration of Service.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput) WarmupDurationSecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatch) *string {
		if v == nil {
			return nil
		}
		return v.WarmupDurationSecs
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection struct {
	// Minimum ejection duration.
	BaseEjectionTime *string `pulumi:"baseEjectionTime"`
	// Number of 5xx errors before a host is ejected from the connection pool.
	Consecutive5xxErrors *int `pulumi:"consecutive5xxErrors"`
	ConsecutiveErrors    *int `pulumi:"consecutiveErrors"`
	// Number of gateway errors before a host is ejected from the connection pool.
	ConsecutiveGatewayErrors *int `pulumi:"consecutiveGatewayErrors"`
	// The number of consecutive locally originated failures before ejection occurs.
	ConsecutiveLocalOriginFailures *int `pulumi:"consecutiveLocalOriginFailures"`
	// Time interval between ejection sweep analysis.
	Interval *string `pulumi:"interval"`
	// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
	MaxEjectionPercent *int `pulumi:"maxEjectionPercent"`
	// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
	MinHealthPercent *int `pulumi:"minHealthPercent"`
	// Determines whether to distinguish local origin failures from external errors.
	SplitExternalLocalOriginErrors *bool `pulumi:"splitExternalLocalOriginErrors"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionArgs struct {
	// Minimum ejection duration.
	BaseEjectionTime pulumi.StringPtrInput `pulumi:"baseEjectionTime"`
	// Number of 5xx errors before a host is ejected from the connection pool.
	Consecutive5xxErrors pulumi.IntPtrInput `pulumi:"consecutive5xxErrors"`
	ConsecutiveErrors    pulumi.IntPtrInput `pulumi:"consecutiveErrors"`
	// Number of gateway errors before a host is ejected from the connection pool.
	ConsecutiveGatewayErrors pulumi.IntPtrInput `pulumi:"consecutiveGatewayErrors"`
	// The number of consecutive locally originated failures before ejection occurs.
	ConsecutiveLocalOriginFailures pulumi.IntPtrInput `pulumi:"consecutiveLocalOriginFailures"`
	// Time interval between ejection sweep analysis.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
	MaxEjectionPercent pulumi.IntPtrInput `pulumi:"maxEjectionPercent"`
	// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
	MinHealthPercent pulumi.IntPtrInput `pulumi:"minHealthPercent"`
	// Determines whether to distinguish local origin failures from external errors.
	SplitExternalLocalOriginErrors pulumi.BoolPtrInput `pulumi:"splitExternalLocalOriginErrors"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput)
}

// Minimum ejection duration.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput) BaseEjectionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection) *string {
		return v.BaseEjectionTime
	}).(pulumi.StringPtrOutput)
}

// Number of 5xx errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput) Consecutive5xxErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		return v.Consecutive5xxErrors
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput) ConsecutiveErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		return v.ConsecutiveErrors
	}).(pulumi.IntPtrOutput)
}

// Number of gateway errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput) ConsecutiveGatewayErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		return v.ConsecutiveGatewayErrors
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive locally originated failures before ejection occurs.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput) ConsecutiveLocalOriginFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		return v.ConsecutiveLocalOriginFailures
	}).(pulumi.IntPtrOutput)
}

// Time interval between ejection sweep analysis.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection) *string {
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput) MaxEjectionPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		return v.MaxEjectionPercent
	}).(pulumi.IntPtrOutput)
}

// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput) MinHealthPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		return v.MinHealthPercent
	}).(pulumi.IntPtrOutput)
}

// Determines whether to distinguish local origin failures from external errors.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput) SplitExternalLocalOriginErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection) *bool {
		return v.SplitExternalLocalOriginErrors
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput)
}

// Minimum ejection duration.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) BaseEjectionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection) *string {
		if v == nil {
			return nil
		}
		return v.BaseEjectionTime
	}).(pulumi.StringPtrOutput)
}

// Number of 5xx errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) Consecutive5xxErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.Consecutive5xxErrors
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) ConsecutiveErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveErrors
	}).(pulumi.IntPtrOutput)
}

// Number of gateway errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) ConsecutiveGatewayErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveGatewayErrors
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive locally originated failures before ejection occurs.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) ConsecutiveLocalOriginFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveLocalOriginFailures
	}).(pulumi.IntPtrOutput)
}

// Time interval between ejection sweep analysis.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) MaxEjectionPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.MaxEjectionPercent
	}).(pulumi.IntPtrOutput)
}

// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) MinHealthPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.MinHealthPercent
	}).(pulumi.IntPtrOutput)
}

// Determines whether to distinguish local origin failures from external errors.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) SplitExternalLocalOriginErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetection) *bool {
		if v == nil {
			return nil
		}
		return v.SplitExternalLocalOriginErrors
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch struct {
	// Minimum ejection duration.
	BaseEjectionTime *string `pulumi:"baseEjectionTime"`
	// Number of 5xx errors before a host is ejected from the connection pool.
	Consecutive5xxErrors *int `pulumi:"consecutive5xxErrors"`
	ConsecutiveErrors    *int `pulumi:"consecutiveErrors"`
	// Number of gateway errors before a host is ejected from the connection pool.
	ConsecutiveGatewayErrors *int `pulumi:"consecutiveGatewayErrors"`
	// The number of consecutive locally originated failures before ejection occurs.
	ConsecutiveLocalOriginFailures *int `pulumi:"consecutiveLocalOriginFailures"`
	// Time interval between ejection sweep analysis.
	Interval *string `pulumi:"interval"`
	// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
	MaxEjectionPercent *int `pulumi:"maxEjectionPercent"`
	// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
	MinHealthPercent *int `pulumi:"minHealthPercent"`
	// Determines whether to distinguish local origin failures from external errors.
	SplitExternalLocalOriginErrors *bool `pulumi:"splitExternalLocalOriginErrors"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs struct {
	// Minimum ejection duration.
	BaseEjectionTime pulumi.StringPtrInput `pulumi:"baseEjectionTime"`
	// Number of 5xx errors before a host is ejected from the connection pool.
	Consecutive5xxErrors pulumi.IntPtrInput `pulumi:"consecutive5xxErrors"`
	ConsecutiveErrors    pulumi.IntPtrInput `pulumi:"consecutiveErrors"`
	// Number of gateway errors before a host is ejected from the connection pool.
	ConsecutiveGatewayErrors pulumi.IntPtrInput `pulumi:"consecutiveGatewayErrors"`
	// The number of consecutive locally originated failures before ejection occurs.
	ConsecutiveLocalOriginFailures pulumi.IntPtrInput `pulumi:"consecutiveLocalOriginFailures"`
	// Time interval between ejection sweep analysis.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
	MaxEjectionPercent pulumi.IntPtrInput `pulumi:"maxEjectionPercent"`
	// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
	MinHealthPercent pulumi.IntPtrInput `pulumi:"minHealthPercent"`
	// Determines whether to distinguish local origin failures from external errors.
	SplitExternalLocalOriginErrors pulumi.BoolPtrInput `pulumi:"splitExternalLocalOriginErrors"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput)
}

// Minimum ejection duration.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) BaseEjectionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *string {
		return v.BaseEjectionTime
	}).(pulumi.StringPtrOutput)
}

// Number of 5xx errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) Consecutive5xxErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		return v.Consecutive5xxErrors
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) ConsecutiveErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		return v.ConsecutiveErrors
	}).(pulumi.IntPtrOutput)
}

// Number of gateway errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) ConsecutiveGatewayErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		return v.ConsecutiveGatewayErrors
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive locally originated failures before ejection occurs.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) ConsecutiveLocalOriginFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		return v.ConsecutiveLocalOriginFailures
	}).(pulumi.IntPtrOutput)
}

// Time interval between ejection sweep analysis.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *string {
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) MaxEjectionPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		return v.MaxEjectionPercent
	}).(pulumi.IntPtrOutput)
}

// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) MinHealthPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		return v.MinHealthPercent
	}).(pulumi.IntPtrOutput)
}

// Determines whether to distinguish local origin failures from external errors.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) SplitExternalLocalOriginErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *bool {
		return v.SplitExternalLocalOriginErrors
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput)
}

// Minimum ejection duration.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) BaseEjectionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *string {
		if v == nil {
			return nil
		}
		return v.BaseEjectionTime
	}).(pulumi.StringPtrOutput)
}

// Number of 5xx errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) Consecutive5xxErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.Consecutive5xxErrors
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) ConsecutiveErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveErrors
	}).(pulumi.IntPtrOutput)
}

// Number of gateway errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) ConsecutiveGatewayErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveGatewayErrors
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive locally originated failures before ejection occurs.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) ConsecutiveLocalOriginFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveLocalOriginFailures
	}).(pulumi.IntPtrOutput)
}

// Time interval between ejection sweep analysis.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) MaxEjectionPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxEjectionPercent
	}).(pulumi.IntPtrOutput)
}

// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) MinHealthPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.MinHealthPercent
	}).(pulumi.IntPtrOutput)
}

// Determines whether to distinguish local origin failures from external errors.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) SplitExternalLocalOriginErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *bool {
		if v == nil {
			return nil
		}
		return v.SplitExternalLocalOriginErrors
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatch struct {
	ConnectionPool   *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatch   `pulumi:"connectionPool"`
	LoadBalancer     *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatch     `pulumi:"loadBalancer"`
	OutlierDetection *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch `pulumi:"outlierDetection"`
	Port             *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatch             `pulumi:"port"`
	Tls              *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch              `pulumi:"tls"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArgs struct {
	ConnectionPool   DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrInput   `pulumi:"connectionPool"`
	LoadBalancer     DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrInput     `pulumi:"loadBalancer"`
	OutlierDetection DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrInput `pulumi:"outlierDetection"`
	Port             DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrInput             `pulumi:"port"`
	Tls              DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrInput              `pulumi:"tls"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutput)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArray and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArray{ DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArgs{...} }
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutput
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArray []DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchInput

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArray) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArray) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutput) ConnectionPool() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatch {
		return v.ConnectionPool
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutput) LoadBalancer() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatch {
		return v.LoadBalancer
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutput) OutlierDetection() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatch {
		return v.OutlierDetection
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutput) Port() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatch {
		return v.Port
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutput) Tls() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch {
		return v.Tls
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutput) Index(i pulumi.IntInput) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatch {
		return vs[0].([]DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatch)[vs[1].(int)]
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutput)
}

// Specifies the number of a port on the destination service on which this policy is being applied.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPort struct {
	Number *int `pulumi:"number"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutput
}

// Specifies the number of a port on the destination service on which this policy is being applied.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortArgs struct {
	Number pulumi.IntPtrInput `pulumi:"number"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPort)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPort)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput)
}

// Specifies the number of a port on the destination service on which this policy is being applied.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPort)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPort) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPort {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPort) *int { return v.Number }).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPort)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPort) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPort {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPort
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPort) *int {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.IntPtrOutput)
}

// Specifies the number of a port on the destination service on which this policy is being applied.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatch struct {
	Number *int `pulumi:"number"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutput
}

// Specifies the number of a port on the destination service on which this policy is being applied.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchArgs struct {
	Number pulumi.IntPtrInput `pulumi:"number"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput)
}

// Specifies the number of a port on the destination service on which this policy is being applied.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatch) *int { return v.Number }).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatch) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutput)
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatch) *int {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.IntPtrOutput)
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls struct {
	// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
	CaCertificates *string `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
	CaCrl *string `pulumi:"caCrl"`
	// REQUIRED if mode is `MUTUAL`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// The name of the secret that holds the TLS certs for the client including the CA certificates.
	CredentialName *string `pulumi:"credentialName"`
	// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
	InsecureSkipVerify *bool `pulumi:"insecureSkipVerify"`
	// Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
	Mode *string `pulumi:"mode"`
	// REQUIRED if mode is `MUTUAL`.
	PrivateKey *string `pulumi:"privateKey"`
	// SNI string to present to the server during TLS handshake.
	Sni *string `pulumi:"sni"`
	// A list of alternate names to verify the subject identity in the certificate.
	SubjectAltNames []string `pulumi:"subjectAltNames"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsArgs struct {
	// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
	CaCertificates pulumi.StringPtrInput `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
	CaCrl pulumi.StringPtrInput `pulumi:"caCrl"`
	// REQUIRED if mode is `MUTUAL`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// The name of the secret that holds the TLS certs for the client including the CA certificates.
	CredentialName pulumi.StringPtrInput `pulumi:"credentialName"`
	// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
	InsecureSkipVerify pulumi.BoolPtrInput `pulumi:"insecureSkipVerify"`
	// Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// REQUIRED if mode is `MUTUAL`.
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
	// SNI string to present to the server during TLS handshake.
	Sni pulumi.StringPtrInput `pulumi:"sni"`
	// A list of alternate names to verify the subject identity in the certificate.
	SubjectAltNames pulumi.StringArrayInput `pulumi:"subjectAltNames"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput)
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput)
}

// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls) *string { return v.CaCertificates }).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls) *string { return v.CaCrl }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls) *string {
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// The name of the secret that holds the TLS certs for the client including the CA certificates.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls) *string { return v.CredentialName }).(pulumi.StringPtrOutput)
}

// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls) *bool { return v.InsecureSkipVerify }).(pulumi.BoolPtrOutput)
}

// Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// SNI string to present to the server during TLS handshake.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput) Sni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls) *string { return v.Sni }).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls) []string { return v.SubjectAltNames }).(pulumi.StringArrayOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput)
}

// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls) *string {
		if v == nil {
			return nil
		}
		return v.CaCertificates
	}).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls) *string {
		if v == nil {
			return nil
		}
		return v.CaCrl
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// The name of the secret that holds the TLS certs for the client including the CA certificates.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls) *string {
		if v == nil {
			return nil
		}
		return v.CredentialName
	}).(pulumi.StringPtrOutput)
}

// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSkipVerify
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

// SNI string to present to the server during TLS handshake.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput) Sni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls) *string {
		if v == nil {
			return nil
		}
		return v.Sni
	}).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTls) []string {
		if v == nil {
			return nil
		}
		return v.SubjectAltNames
	}).(pulumi.StringArrayOutput)
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch struct {
	// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
	CaCertificates *string `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
	CaCrl *string `pulumi:"caCrl"`
	// REQUIRED if mode is `MUTUAL`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// The name of the secret that holds the TLS certs for the client including the CA certificates.
	CredentialName *string `pulumi:"credentialName"`
	// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
	InsecureSkipVerify *bool `pulumi:"insecureSkipVerify"`
	// Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
	Mode *string `pulumi:"mode"`
	// REQUIRED if mode is `MUTUAL`.
	PrivateKey *string `pulumi:"privateKey"`
	// SNI string to present to the server during TLS handshake.
	Sni *string `pulumi:"sni"`
	// A list of alternate names to verify the subject identity in the certificate.
	SubjectAltNames []string `pulumi:"subjectAltNames"`
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchArgs struct {
	// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
	CaCertificates pulumi.StringPtrInput `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
	CaCrl pulumi.StringPtrInput `pulumi:"caCrl"`
	// REQUIRED if mode is `MUTUAL`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// The name of the secret that holds the TLS certs for the client including the CA certificates.
	CredentialName pulumi.StringPtrInput `pulumi:"credentialName"`
	// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
	InsecureSkipVerify pulumi.BoolPtrInput `pulumi:"insecureSkipVerify"`
	// Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// REQUIRED if mode is `MUTUAL`.
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
	// SNI string to present to the server during TLS handshake.
	Sni pulumi.StringPtrInput `pulumi:"sni"`
	// A list of alternate names to verify the subject identity in the certificate.
	SubjectAltNames pulumi.StringArrayInput `pulumi:"subjectAltNames"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput)
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch) *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput)
}

// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch) *string {
		return v.CaCertificates
	}).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch) *string { return v.CaCrl }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch) *string {
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// The name of the secret that holds the TLS certs for the client including the CA certificates.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch) *string {
		return v.CredentialName
	}).(pulumi.StringPtrOutput)
}

// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch) *bool {
		return v.InsecureSkipVerify
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// SNI string to present to the server during TLS handshake.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput) Sni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch) *string { return v.Sni }).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch) []string {
		return v.SubjectAltNames
	}).(pulumi.StringArrayOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch) DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput)
}

// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaCertificates
	}).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaCrl
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// The name of the secret that holds the TLS certs for the client including the CA certificates.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.CredentialName
	}).(pulumi.StringPtrOutput)
}

// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSkipVerify
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

// SNI string to present to the server during TLS handshake.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) Sni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Sni
	}).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatch) []string {
		if v == nil {
			return nil
		}
		return v.SubjectAltNames
	}).(pulumi.StringArrayOutput)
}

// The upstream PROXY protocol settings.
type DestinationRuleSpecSubsetsTrafficPolicyProxyProtocol struct {
	// The PROXY protocol version to use.
	//
	// Valid Options: V1, V2
	Version *string `pulumi:"version"`
}

// DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolArgs and DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutput() DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutput
}

// The upstream PROXY protocol settings.
type DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolArgs struct {
	// The PROXY protocol version to use.
	//
	// Valid Options: V1, V2
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyProxyProtocol)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolArgs) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutput() DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolArgs) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolArgs) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolArgs) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutput).ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolArgs, DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtr and DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrType DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolArgs

func DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtr(v *DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolArgs) DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyProxyProtocol)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput)
}

// The upstream PROXY protocol settings.
type DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyProxyProtocol)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutput) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutput() DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutput) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutput) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutput) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyProxyProtocol) *DestinationRuleSpecSubsetsTrafficPolicyProxyProtocol {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput)
}

// The PROXY protocol version to use.
//
// Valid Options: V1, V2
func (o DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyProxyProtocol) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyProxyProtocol)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyProxyProtocol) DestinationRuleSpecSubsetsTrafficPolicyProxyProtocol {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyProxyProtocol
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutput)
}

// The PROXY protocol version to use.
//
// Valid Options: V1, V2
func (o DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyProxyProtocol) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The upstream PROXY protocol settings.
type DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatch struct {
	// The PROXY protocol version to use.
	//
	// Valid Options: V1, V2
	Version *string `pulumi:"version"`
}

// DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutput
}

// The upstream PROXY protocol settings.
type DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchArgs struct {
	// The PROXY protocol version to use.
	//
	// Valid Options: V1, V2
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput)
}

// The upstream PROXY protocol settings.
type DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatch) *DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput)
}

// The PROXY protocol version to use.
//
// Valid Options: V1, V2
func (o DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatch) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatch) DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutput)
}

// The PROXY protocol version to use.
//
// Valid Options: V1, V2
func (o DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatch) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecSubsetsTrafficPolicyTls struct {
	// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
	CaCertificates *string `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
	CaCrl *string `pulumi:"caCrl"`
	// REQUIRED if mode is `MUTUAL`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// The name of the secret that holds the TLS certs for the client including the CA certificates.
	CredentialName *string `pulumi:"credentialName"`
	// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
	InsecureSkipVerify *bool `pulumi:"insecureSkipVerify"`
	// Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
	Mode *string `pulumi:"mode"`
	// REQUIRED if mode is `MUTUAL`.
	PrivateKey *string `pulumi:"privateKey"`
	// SNI string to present to the server during TLS handshake.
	Sni *string `pulumi:"sni"`
	// A list of alternate names to verify the subject identity in the certificate.
	SubjectAltNames []string `pulumi:"subjectAltNames"`
}

// DestinationRuleSpecSubsetsTrafficPolicyTlsInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyTlsArgs and DestinationRuleSpecSubsetsTrafficPolicyTlsOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyTlsInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyTlsArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyTlsInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyTlsOutput() DestinationRuleSpecSubsetsTrafficPolicyTlsOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyTlsOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyTlsOutput
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecSubsetsTrafficPolicyTlsArgs struct {
	// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
	CaCertificates pulumi.StringPtrInput `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
	CaCrl pulumi.StringPtrInput `pulumi:"caCrl"`
	// REQUIRED if mode is `MUTUAL`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// The name of the secret that holds the TLS certs for the client including the CA certificates.
	CredentialName pulumi.StringPtrInput `pulumi:"credentialName"`
	// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
	InsecureSkipVerify pulumi.BoolPtrInput `pulumi:"insecureSkipVerify"`
	// Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// REQUIRED if mode is `MUTUAL`.
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
	// SNI string to present to the server during TLS handshake.
	Sni pulumi.StringPtrInput `pulumi:"sni"`
	// A list of alternate names to verify the subject identity in the certificate.
	SubjectAltNames pulumi.StringArrayInput `pulumi:"subjectAltNames"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyTls)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyTlsArgs) ToDestinationRuleSpecSubsetsTrafficPolicyTlsOutput() DestinationRuleSpecSubsetsTrafficPolicyTlsOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyTlsOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyTlsArgs) ToDestinationRuleSpecSubsetsTrafficPolicyTlsOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyTlsOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyTlsArgs) ToDestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyTlsArgs) ToDestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyTlsOutput).ToDestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyTlsPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyTlsArgs, DestinationRuleSpecSubsetsTrafficPolicyTlsPtr and DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyTlsPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyTlsArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyTlsPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyTlsPtrType DestinationRuleSpecSubsetsTrafficPolicyTlsArgs

func DestinationRuleSpecSubsetsTrafficPolicyTlsPtr(v *DestinationRuleSpecSubsetsTrafficPolicyTlsArgs) DestinationRuleSpecSubsetsTrafficPolicyTlsPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyTlsPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyTls)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyTlsPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyTlsPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput)
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecSubsetsTrafficPolicyTlsOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyTls)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTlsOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTlsOutput() DestinationRuleSpecSubsetsTrafficPolicyTlsOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTlsOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTlsOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTlsOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTlsOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTlsOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyTls) *DestinationRuleSpecSubsetsTrafficPolicyTls {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput)
}

// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTls) *string { return v.CaCertificates }).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTls) *string { return v.CaCrl }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTls) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// The name of the secret that holds the TLS certs for the client including the CA certificates.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTls) *string { return v.CredentialName }).(pulumi.StringPtrOutput)
}

// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTls) *bool { return v.InsecureSkipVerify }).(pulumi.BoolPtrOutput)
}

// Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTls) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTls) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// SNI string to present to the server during TLS handshake.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsOutput) Sni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTls) *string { return v.Sni }).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTls) []string { return v.SubjectAltNames }).(pulumi.StringArrayOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyTls)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyTlsOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTls) DestinationRuleSpecSubsetsTrafficPolicyTls {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyTls
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyTlsOutput)
}

// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTls) *string {
		if v == nil {
			return nil
		}
		return v.CaCertificates
	}).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTls) *string {
		if v == nil {
			return nil
		}
		return v.CaCrl
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTls) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// The name of the secret that holds the TLS certs for the client including the CA certificates.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTls) *string {
		if v == nil {
			return nil
		}
		return v.CredentialName
	}).(pulumi.StringPtrOutput)
}

// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTls) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSkipVerify
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTls) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTls) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

// SNI string to present to the server during TLS handshake.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput) Sni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTls) *string {
		if v == nil {
			return nil
		}
		return v.Sni
	}).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTls) []string {
		if v == nil {
			return nil
		}
		return v.SubjectAltNames
	}).(pulumi.StringArrayOutput)
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecSubsetsTrafficPolicyTlsPatch struct {
	// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
	CaCertificates *string `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
	CaCrl *string `pulumi:"caCrl"`
	// REQUIRED if mode is `MUTUAL`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// The name of the secret that holds the TLS certs for the client including the CA certificates.
	CredentialName *string `pulumi:"credentialName"`
	// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
	InsecureSkipVerify *bool `pulumi:"insecureSkipVerify"`
	// Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
	Mode *string `pulumi:"mode"`
	// REQUIRED if mode is `MUTUAL`.
	PrivateKey *string `pulumi:"privateKey"`
	// SNI string to present to the server during TLS handshake.
	Sni *string `pulumi:"sni"`
	// A list of alternate names to verify the subject identity in the certificate.
	SubjectAltNames []string `pulumi:"subjectAltNames"`
}

// DestinationRuleSpecSubsetsTrafficPolicyTlsPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyTlsPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyTlsPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyTlsPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyTlsPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecSubsetsTrafficPolicyTlsPatchArgs struct {
	// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
	CaCertificates pulumi.StringPtrInput `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
	CaCrl pulumi.StringPtrInput `pulumi:"caCrl"`
	// REQUIRED if mode is `MUTUAL`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// The name of the secret that holds the TLS certs for the client including the CA certificates.
	CredentialName pulumi.StringPtrInput `pulumi:"credentialName"`
	// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
	InsecureSkipVerify pulumi.BoolPtrInput `pulumi:"insecureSkipVerify"`
	// Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// REQUIRED if mode is `MUTUAL`.
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
	// SNI string to present to the server during TLS handshake.
	Sni pulumi.StringPtrInput `pulumi:"sni"`
	// A list of alternate names to verify the subject identity in the certificate.
	SubjectAltNames pulumi.StringArrayInput `pulumi:"subjectAltNames"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyTlsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyTlsPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyTlsPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyTlsPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyTlsPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyTlsPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyTlsPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyTlsPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyTlsPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyTlsPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyTlsPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput)
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyTlsPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyTlsPatch) *DestinationRuleSpecSubsetsTrafficPolicyTlsPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput)
}

// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTlsPatch) *string { return v.CaCertificates }).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTlsPatch) *string { return v.CaCrl }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTlsPatch) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// The name of the secret that holds the TLS certs for the client including the CA certificates.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTlsPatch) *string { return v.CredentialName }).(pulumi.StringPtrOutput)
}

// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTlsPatch) *bool { return v.InsecureSkipVerify }).(pulumi.BoolPtrOutput)
}

// Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTlsPatch) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTlsPatch) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// SNI string to present to the server during TLS handshake.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput) Sni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTlsPatch) *string { return v.Sni }).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTlsPatch) []string { return v.SubjectAltNames }).(pulumi.StringArrayOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyTlsPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTlsPatch) DestinationRuleSpecSubsetsTrafficPolicyTlsPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyTlsPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput)
}

// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaCertificates
	}).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaCrl
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// The name of the secret that holds the TLS certs for the client including the CA certificates.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.CredentialName
	}).(pulumi.StringPtrOutput)
}

// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTlsPatch) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSkipVerify
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

// SNI string to present to the server during TLS handshake.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput) Sni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Sni
	}).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate.
func (o DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTlsPatch) []string {
		if v == nil {
			return nil
		}
		return v.SubjectAltNames
	}).(pulumi.StringArrayOutput)
}

// Configuration of tunneling TCP over other transport or application layers for the host configured in the DestinationRule.
type DestinationRuleSpecSubsetsTrafficPolicyTunnel struct {
	// Specifies which protocol to use for tunneling the downstream connection.
	Protocol *string `pulumi:"protocol"`
	// Specifies a host to which the downstream connection is tunneled.
	TargetHost *string `pulumi:"targetHost"`
	// Specifies a port to which the downstream connection is tunneled.
	TargetPort *int `pulumi:"targetPort"`
}

// DestinationRuleSpecSubsetsTrafficPolicyTunnelInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyTunnelArgs and DestinationRuleSpecSubsetsTrafficPolicyTunnelOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyTunnelInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyTunnelArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyTunnelInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyTunnelOutput() DestinationRuleSpecSubsetsTrafficPolicyTunnelOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyTunnelOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyTunnelOutput
}

// Configuration of tunneling TCP over other transport or application layers for the host configured in the DestinationRule.
type DestinationRuleSpecSubsetsTrafficPolicyTunnelArgs struct {
	// Specifies which protocol to use for tunneling the downstream connection.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Specifies a host to which the downstream connection is tunneled.
	TargetHost pulumi.StringPtrInput `pulumi:"targetHost"`
	// Specifies a port to which the downstream connection is tunneled.
	TargetPort pulumi.IntPtrInput `pulumi:"targetPort"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyTunnelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyTunnel)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyTunnelArgs) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelOutput() DestinationRuleSpecSubsetsTrafficPolicyTunnelOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyTunnelOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyTunnelArgs) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTunnelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyTunnelOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyTunnelArgs) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyTunnelArgs) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyTunnelOutput).ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyTunnelArgs, DestinationRuleSpecSubsetsTrafficPolicyTunnelPtr and DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyTunnelArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyTunnelPtrType DestinationRuleSpecSubsetsTrafficPolicyTunnelArgs

func DestinationRuleSpecSubsetsTrafficPolicyTunnelPtr(v *DestinationRuleSpecSubsetsTrafficPolicyTunnelArgs) DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyTunnelPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyTunnelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyTunnel)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyTunnelPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyTunnelPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput)
}

// Configuration of tunneling TCP over other transport or application layers for the host configured in the DestinationRule.
type DestinationRuleSpecSubsetsTrafficPolicyTunnelOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyTunnel)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelOutput() DestinationRuleSpecSubsetsTrafficPolicyTunnelOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTunnelOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyTunnel) *DestinationRuleSpecSubsetsTrafficPolicyTunnel {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput)
}

// Specifies which protocol to use for tunneling the downstream connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTunnel) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Specifies a host to which the downstream connection is tunneled.
func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelOutput) TargetHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTunnel) *string { return v.TargetHost }).(pulumi.StringPtrOutput)
}

// Specifies a port to which the downstream connection is tunneled.
func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTunnel) *int { return v.TargetPort }).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyTunnel)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyTunnelOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTunnel) DestinationRuleSpecSubsetsTrafficPolicyTunnel {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyTunnel
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyTunnelOutput)
}

// Specifies which protocol to use for tunneling the downstream connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTunnel) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Specifies a host to which the downstream connection is tunneled.
func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput) TargetHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTunnel) *string {
		if v == nil {
			return nil
		}
		return v.TargetHost
	}).(pulumi.StringPtrOutput)
}

// Specifies a port to which the downstream connection is tunneled.
func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTunnel) *int {
		if v == nil {
			return nil
		}
		return v.TargetPort
	}).(pulumi.IntPtrOutput)
}

// Configuration of tunneling TCP over other transport or application layers for the host configured in the DestinationRule.
type DestinationRuleSpecSubsetsTrafficPolicyTunnelPatch struct {
	// Specifies which protocol to use for tunneling the downstream connection.
	Protocol *string `pulumi:"protocol"`
	// Specifies a host to which the downstream connection is tunneled.
	TargetHost *string `pulumi:"targetHost"`
	// Specifies a port to which the downstream connection is tunneled.
	TargetPort *int `pulumi:"targetPort"`
}

// DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchArgs and DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchInput` via:
//
//	DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchArgs{...}
type DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput
}

// Configuration of tunneling TCP over other transport or application layers for the host configured in the DestinationRule.
type DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchArgs struct {
	// Specifies which protocol to use for tunneling the downstream connection.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Specifies a host to which the downstream connection is tunneled.
	TargetHost pulumi.StringPtrInput `pulumi:"targetHost"`
	// Specifies a port to which the downstream connection is tunneled.
	TargetPort pulumi.IntPtrInput `pulumi:"targetPort"`
}

func (DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyTunnelPatch)(nil)).Elem()
}

func (i DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput)
}

func (i DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchArgs) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput).ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrInput is an input type that accepts DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchArgs, DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtr and DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrInput` via:
//
//	        DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput
	ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutputWithContext(context.Context) DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput
}

type destinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrType DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchArgs

func DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtr(v *DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchArgs) DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrInput {
	return (*destinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrType)(v)
}

func (*destinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyTunnelPatch)(nil)).Elem()
}

func (i *destinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput {
	return i.ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrType) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput)
}

// Configuration of tunneling TCP over other transport or application layers for the host configured in the DestinationRule.
type DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyTunnelPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput() DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput {
	return o.ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecSubsetsTrafficPolicyTunnelPatch) *DestinationRuleSpecSubsetsTrafficPolicyTunnelPatch {
		return &v
	}).(DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput)
}

// Specifies which protocol to use for tunneling the downstream connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTunnelPatch) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Specifies a host to which the downstream connection is tunneled.
func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput) TargetHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTunnelPatch) *string { return v.TargetHost }).(pulumi.StringPtrOutput)
}

// Specifies a port to which the downstream connection is tunneled.
func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecSubsetsTrafficPolicyTunnelPatch) *int { return v.TargetPort }).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecSubsetsTrafficPolicyTunnelPatch)(nil)).Elem()
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput() DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput) ToDestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput) Elem() DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTunnelPatch) DestinationRuleSpecSubsetsTrafficPolicyTunnelPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecSubsetsTrafficPolicyTunnelPatch
		return ret
	}).(DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput)
}

// Specifies which protocol to use for tunneling the downstream connection.
func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTunnelPatch) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Specifies a host to which the downstream connection is tunneled.
func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput) TargetHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTunnelPatch) *string {
		if v == nil {
			return nil
		}
		return v.TargetHost
	}).(pulumi.StringPtrOutput)
}

// Specifies a port to which the downstream connection is tunneled.
func (o DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecSubsetsTrafficPolicyTunnelPatch) *int {
		if v == nil {
			return nil
		}
		return v.TargetPort
	}).(pulumi.IntPtrOutput)
}

// Traffic policies to apply (load balancing policy, connection pool sizes, outlier detection).
type DestinationRuleSpecTrafficPolicy struct {
	ConnectionPool   *DestinationRuleSpecTrafficPolicyConnectionPool   `pulumi:"connectionPool"`
	LoadBalancer     *DestinationRuleSpecTrafficPolicyLoadBalancer     `pulumi:"loadBalancer"`
	OutlierDetection *DestinationRuleSpecTrafficPolicyOutlierDetection `pulumi:"outlierDetection"`
	// Traffic policies specific to individual ports.
	PortLevelSettings []DestinationRuleSpecTrafficPolicyPortLevelSettings `pulumi:"portLevelSettings"`
	ProxyProtocol     *DestinationRuleSpecTrafficPolicyProxyProtocol      `pulumi:"proxyProtocol"`
	Tls               *DestinationRuleSpecTrafficPolicyTls                `pulumi:"tls"`
	Tunnel            *DestinationRuleSpecTrafficPolicyTunnel             `pulumi:"tunnel"`
}

// DestinationRuleSpecTrafficPolicyInput is an input type that accepts DestinationRuleSpecTrafficPolicyArgs and DestinationRuleSpecTrafficPolicyOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyInput` via:
//
//	DestinationRuleSpecTrafficPolicyArgs{...}
type DestinationRuleSpecTrafficPolicyInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyOutput() DestinationRuleSpecTrafficPolicyOutput
	ToDestinationRuleSpecTrafficPolicyOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyOutput
}

// Traffic policies to apply (load balancing policy, connection pool sizes, outlier detection).
type DestinationRuleSpecTrafficPolicyArgs struct {
	ConnectionPool   DestinationRuleSpecTrafficPolicyConnectionPoolPtrInput   `pulumi:"connectionPool"`
	LoadBalancer     DestinationRuleSpecTrafficPolicyLoadBalancerPtrInput     `pulumi:"loadBalancer"`
	OutlierDetection DestinationRuleSpecTrafficPolicyOutlierDetectionPtrInput `pulumi:"outlierDetection"`
	// Traffic policies specific to individual ports.
	PortLevelSettings DestinationRuleSpecTrafficPolicyPortLevelSettingsArrayInput `pulumi:"portLevelSettings"`
	ProxyProtocol     DestinationRuleSpecTrafficPolicyProxyProtocolPtrInput       `pulumi:"proxyProtocol"`
	Tls               DestinationRuleSpecTrafficPolicyTlsPtrInput                 `pulumi:"tls"`
	Tunnel            DestinationRuleSpecTrafficPolicyTunnelPtrInput              `pulumi:"tunnel"`
}

func (DestinationRuleSpecTrafficPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicy)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyArgs) ToDestinationRuleSpecTrafficPolicyOutput() DestinationRuleSpecTrafficPolicyOutput {
	return i.ToDestinationRuleSpecTrafficPolicyOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyArgs) ToDestinationRuleSpecTrafficPolicyOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyOutput)
}

func (i DestinationRuleSpecTrafficPolicyArgs) ToDestinationRuleSpecTrafficPolicyPtrOutput() DestinationRuleSpecTrafficPolicyPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyArgs) ToDestinationRuleSpecTrafficPolicyPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyOutput).ToDestinationRuleSpecTrafficPolicyPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyArgs, DestinationRuleSpecTrafficPolicyPtr and DestinationRuleSpecTrafficPolicyPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPtrOutput() DestinationRuleSpecTrafficPolicyPtrOutput
	ToDestinationRuleSpecTrafficPolicyPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPtrOutput
}

type destinationRuleSpecTrafficPolicyPtrType DestinationRuleSpecTrafficPolicyArgs

func DestinationRuleSpecTrafficPolicyPtr(v *DestinationRuleSpecTrafficPolicyArgs) DestinationRuleSpecTrafficPolicyPtrInput {
	return (*destinationRuleSpecTrafficPolicyPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicy)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPtrType) ToDestinationRuleSpecTrafficPolicyPtrOutput() DestinationRuleSpecTrafficPolicyPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPtrType) ToDestinationRuleSpecTrafficPolicyPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPtrOutput)
}

// Traffic policies to apply (load balancing policy, connection pool sizes, outlier detection).
type DestinationRuleSpecTrafficPolicyOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicy)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyOutput) ToDestinationRuleSpecTrafficPolicyOutput() DestinationRuleSpecTrafficPolicyOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyOutput) ToDestinationRuleSpecTrafficPolicyOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyOutput) ToDestinationRuleSpecTrafficPolicyPtrOutput() DestinationRuleSpecTrafficPolicyPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyOutput) ToDestinationRuleSpecTrafficPolicyPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicy) *DestinationRuleSpecTrafficPolicy {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyOutput) ConnectionPool() DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicy) *DestinationRuleSpecTrafficPolicyConnectionPool {
		return v.ConnectionPool
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyOutput) LoadBalancer() DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicy) *DestinationRuleSpecTrafficPolicyLoadBalancer {
		return v.LoadBalancer
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyOutput) OutlierDetection() DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicy) *DestinationRuleSpecTrafficPolicyOutlierDetection {
		return v.OutlierDetection
	}).(DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput)
}

// Traffic policies specific to individual ports.
func (o DestinationRuleSpecTrafficPolicyOutput) PortLevelSettings() DestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicy) []DestinationRuleSpecTrafficPolicyPortLevelSettings {
		return v.PortLevelSettings
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutput)
}

func (o DestinationRuleSpecTrafficPolicyOutput) ProxyProtocol() DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicy) *DestinationRuleSpecTrafficPolicyProxyProtocol {
		return v.ProxyProtocol
	}).(DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyOutput) Tls() DestinationRuleSpecTrafficPolicyTlsPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicy) *DestinationRuleSpecTrafficPolicyTls { return v.Tls }).(DestinationRuleSpecTrafficPolicyTlsPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyOutput) Tunnel() DestinationRuleSpecTrafficPolicyTunnelPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicy) *DestinationRuleSpecTrafficPolicyTunnel { return v.Tunnel }).(DestinationRuleSpecTrafficPolicyTunnelPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicy)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPtrOutput) ToDestinationRuleSpecTrafficPolicyPtrOutput() DestinationRuleSpecTrafficPolicyPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPtrOutput) ToDestinationRuleSpecTrafficPolicyPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPtrOutput) Elem() DestinationRuleSpecTrafficPolicyOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicy) DestinationRuleSpecTrafficPolicy {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicy
		return ret
	}).(DestinationRuleSpecTrafficPolicyOutput)
}

func (o DestinationRuleSpecTrafficPolicyPtrOutput) ConnectionPool() DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicy) *DestinationRuleSpecTrafficPolicyConnectionPool {
		if v == nil {
			return nil
		}
		return v.ConnectionPool
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPtrOutput) LoadBalancer() DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicy) *DestinationRuleSpecTrafficPolicyLoadBalancer {
		if v == nil {
			return nil
		}
		return v.LoadBalancer
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPtrOutput) OutlierDetection() DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicy) *DestinationRuleSpecTrafficPolicyOutlierDetection {
		if v == nil {
			return nil
		}
		return v.OutlierDetection
	}).(DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput)
}

// Traffic policies specific to individual ports.
func (o DestinationRuleSpecTrafficPolicyPtrOutput) PortLevelSettings() DestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicy) []DestinationRuleSpecTrafficPolicyPortLevelSettings {
		if v == nil {
			return nil
		}
		return v.PortLevelSettings
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutput)
}

func (o DestinationRuleSpecTrafficPolicyPtrOutput) ProxyProtocol() DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicy) *DestinationRuleSpecTrafficPolicyProxyProtocol {
		if v == nil {
			return nil
		}
		return v.ProxyProtocol
	}).(DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPtrOutput) Tls() DestinationRuleSpecTrafficPolicyTlsPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicy) *DestinationRuleSpecTrafficPolicyTls {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(DestinationRuleSpecTrafficPolicyTlsPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPtrOutput) Tunnel() DestinationRuleSpecTrafficPolicyTunnelPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicy) *DestinationRuleSpecTrafficPolicyTunnel {
		if v == nil {
			return nil
		}
		return v.Tunnel
	}).(DestinationRuleSpecTrafficPolicyTunnelPtrOutput)
}

type DestinationRuleSpecTrafficPolicyConnectionPool struct {
	Http *DestinationRuleSpecTrafficPolicyConnectionPoolHttp `pulumi:"http"`
	Tcp  *DestinationRuleSpecTrafficPolicyConnectionPoolTcp  `pulumi:"tcp"`
}

// DestinationRuleSpecTrafficPolicyConnectionPoolInput is an input type that accepts DestinationRuleSpecTrafficPolicyConnectionPoolArgs and DestinationRuleSpecTrafficPolicyConnectionPoolOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyConnectionPoolInput` via:
//
//	DestinationRuleSpecTrafficPolicyConnectionPoolArgs{...}
type DestinationRuleSpecTrafficPolicyConnectionPoolInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyConnectionPoolOutput() DestinationRuleSpecTrafficPolicyConnectionPoolOutput
	ToDestinationRuleSpecTrafficPolicyConnectionPoolOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolOutput
}

type DestinationRuleSpecTrafficPolicyConnectionPoolArgs struct {
	Http DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrInput `pulumi:"http"`
	Tcp  DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrInput  `pulumi:"tcp"`
}

func (DestinationRuleSpecTrafficPolicyConnectionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPool)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolOutput() DestinationRuleSpecTrafficPolicyConnectionPoolOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolOutput)
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolOutput).ToDestinationRuleSpecTrafficPolicyConnectionPoolPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyConnectionPoolPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyConnectionPoolArgs, DestinationRuleSpecTrafficPolicyConnectionPoolPtr and DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyConnectionPoolPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyConnectionPoolArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyConnectionPoolPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput
	ToDestinationRuleSpecTrafficPolicyConnectionPoolPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput
}

type destinationRuleSpecTrafficPolicyConnectionPoolPtrType DestinationRuleSpecTrafficPolicyConnectionPoolArgs

func DestinationRuleSpecTrafficPolicyConnectionPoolPtr(v *DestinationRuleSpecTrafficPolicyConnectionPoolArgs) DestinationRuleSpecTrafficPolicyConnectionPoolPtrInput {
	return (*destinationRuleSpecTrafficPolicyConnectionPoolPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyConnectionPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyConnectionPool)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyConnectionPoolPtrType) ToDestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyConnectionPoolPtrType) ToDestinationRuleSpecTrafficPolicyConnectionPoolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput)
}

type DestinationRuleSpecTrafficPolicyConnectionPoolOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyConnectionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPool)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolOutput() DestinationRuleSpecTrafficPolicyConnectionPoolOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyConnectionPoolPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyConnectionPool) *DestinationRuleSpecTrafficPolicyConnectionPool {
		return &v
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolOutput) Http() DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPool) *DestinationRuleSpecTrafficPolicyConnectionPoolHttp {
		return v.Http
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolOutput) Tcp() DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPool) *DestinationRuleSpecTrafficPolicyConnectionPoolTcp {
		return v.Tcp
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput)
}

type DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyConnectionPool)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput) Elem() DestinationRuleSpecTrafficPolicyConnectionPoolOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPool) DestinationRuleSpecTrafficPolicyConnectionPool {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyConnectionPool
		return ret
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolOutput)
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput) Http() DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPool) *DestinationRuleSpecTrafficPolicyConnectionPoolHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput) Tcp() DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPool) *DestinationRuleSpecTrafficPolicyConnectionPoolTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput)
}

// HTTP connection pool settings.
type DestinationRuleSpecTrafficPolicyConnectionPoolHttp struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy *string `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests *int `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests *int `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams *int `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection *int `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries *int `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol *bool `pulumi:"useClientProtocol"`
}

// DestinationRuleSpecTrafficPolicyConnectionPoolHttpInput is an input type that accepts DestinationRuleSpecTrafficPolicyConnectionPoolHttpArgs and DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyConnectionPoolHttpInput` via:
//
//	DestinationRuleSpecTrafficPolicyConnectionPoolHttpArgs{...}
type DestinationRuleSpecTrafficPolicyConnectionPoolHttpInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput() DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput
	ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput
}

// HTTP connection pool settings.
type DestinationRuleSpecTrafficPolicyConnectionPoolHttpArgs struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy pulumi.StringPtrInput `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests pulumi.IntPtrInput `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests pulumi.IntPtrInput `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams pulumi.IntPtrInput `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection pulumi.IntPtrInput `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries pulumi.IntPtrInput `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol pulumi.BoolPtrInput `pulumi:"useClientProtocol"`
}

func (DestinationRuleSpecTrafficPolicyConnectionPoolHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolHttp)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolHttpArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput() DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolHttpArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput)
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolHttpArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolHttpArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput).ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyConnectionPoolHttpArgs, DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtr and DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyConnectionPoolHttpArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput
	ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput
}

type destinationRuleSpecTrafficPolicyConnectionPoolHttpPtrType DestinationRuleSpecTrafficPolicyConnectionPoolHttpArgs

func DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtr(v *DestinationRuleSpecTrafficPolicyConnectionPoolHttpArgs) DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrInput {
	return (*destinationRuleSpecTrafficPolicyConnectionPoolHttpPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyConnectionPoolHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyConnectionPoolHttp)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyConnectionPoolHttpPtrType) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyConnectionPoolHttpPtrType) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput)
}

// HTTP connection pool settings.
type DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolHttp)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput() DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyConnectionPoolHttp) *DestinationRuleSpecTrafficPolicyConnectionPoolHttp {
		return &v
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolHttp) *string { return v.H2UpgradePolicy }).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolHttp) *int { return v.Http1MaxPendingRequests }).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolHttp) *int { return v.Http2MaxRequests }).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolHttp) *string { return v.IdleTimeout }).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolHttp) *int { return v.MaxConcurrentStreams }).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolHttp) *int { return v.MaxRequestsPerConnection }).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolHttp) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolHttp) *bool { return v.UseClientProtocol }).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyConnectionPoolHttp)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput) Elem() DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolHttp) DestinationRuleSpecTrafficPolicyConnectionPoolHttp {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyConnectionPoolHttp
		return ret
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolHttp) *string {
		if v == nil {
			return nil
		}
		return v.H2UpgradePolicy
	}).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.Http1MaxPendingRequests
	}).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.Http2MaxRequests
	}).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolHttp) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentStreams
	}).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestsPerConnection
	}).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolHttp) *bool {
		if v == nil {
			return nil
		}
		return v.UseClientProtocol
	}).(pulumi.BoolPtrOutput)
}

// HTTP connection pool settings.
type DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy *string `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests *int `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests *int `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams *int `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection *int `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries *int `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol *bool `pulumi:"useClientProtocol"`
}

// DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchArgs and DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchArgs{...}
type DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput() DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput
	ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput
}

// HTTP connection pool settings.
type DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchArgs struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy pulumi.StringPtrInput `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests pulumi.IntPtrInput `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests pulumi.IntPtrInput `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams pulumi.IntPtrInput `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection pulumi.IntPtrInput `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries pulumi.IntPtrInput `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol pulumi.BoolPtrInput `pulumi:"useClientProtocol"`
}

func (DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput() DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput).ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchArgs, DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtr and DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrType DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchArgs

func DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtr(v *DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchArgs) DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrType) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrType) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput)
}

// HTTP connection pool settings.
type DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput() DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch) *DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch) *string { return v.H2UpgradePolicy }).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch) *int { return v.Http1MaxPendingRequests }).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch) *int { return v.Http2MaxRequests }).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch) *string { return v.IdleTimeout }).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch) *int { return v.MaxConcurrentStreams }).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch) *int {
		return v.MaxRequestsPerConnection
	}).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch) *bool { return v.UseClientProtocol }).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch) DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch) *string {
		if v == nil {
			return nil
		}
		return v.H2UpgradePolicy
	}).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.Http1MaxPendingRequests
	}).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.Http2MaxRequests
	}).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentStreams
	}).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestsPerConnection
	}).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch) *bool {
		if v == nil {
			return nil
		}
		return v.UseClientProtocol
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecTrafficPolicyConnectionPoolPatch struct {
	Http *DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch `pulumi:"http"`
	Tcp  *DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatch  `pulumi:"tcp"`
}

// DestinationRuleSpecTrafficPolicyConnectionPoolPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyConnectionPoolPatchArgs and DestinationRuleSpecTrafficPolicyConnectionPoolPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyConnectionPoolPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyConnectionPoolPatchArgs{...}
type DestinationRuleSpecTrafficPolicyConnectionPoolPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyConnectionPoolPatchOutput() DestinationRuleSpecTrafficPolicyConnectionPoolPatchOutput
	ToDestinationRuleSpecTrafficPolicyConnectionPoolPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolPatchOutput
}

type DestinationRuleSpecTrafficPolicyConnectionPoolPatchArgs struct {
	Http DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrInput `pulumi:"http"`
	Tcp  DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrInput  `pulumi:"tcp"`
}

func (DestinationRuleSpecTrafficPolicyConnectionPoolPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolPatchArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolPatchOutput() DestinationRuleSpecTrafficPolicyConnectionPoolPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolPatchArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolPatchArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolPatchArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolPatchOutput).ToDestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyConnectionPoolPatchArgs, DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtr and DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyConnectionPoolPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyConnectionPoolPatchPtrType DestinationRuleSpecTrafficPolicyConnectionPoolPatchArgs

func DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtr(v *DestinationRuleSpecTrafficPolicyConnectionPoolPatchArgs) DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyConnectionPoolPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyConnectionPoolPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyConnectionPoolPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyConnectionPoolPatchPtrType) ToDestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyConnectionPoolPatchPtrType) ToDestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput)
}

type DestinationRuleSpecTrafficPolicyConnectionPoolPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyConnectionPoolPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolPatchOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolPatchOutput() DestinationRuleSpecTrafficPolicyConnectionPoolPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolPatchOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolPatchOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolPatchOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyConnectionPoolPatch) *DestinationRuleSpecTrafficPolicyConnectionPoolPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolPatchOutput) Http() DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolPatch) *DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch {
		return v.Http
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolPatchOutput) Tcp() DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolPatch) *DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatch {
		return v.Tcp
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput)
}

type DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyConnectionPoolPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyConnectionPoolPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolPatch) DestinationRuleSpecTrafficPolicyConnectionPoolPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyConnectionPoolPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolPatchOutput)
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput) Http() DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolPatch) *DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatch {
		if v == nil {
			return nil
		}
		return v.Http
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput) Tcp() DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolPatch) *DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatch {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecTrafficPolicyConnectionPoolTcp struct {
	// TCP connection timeout.
	ConnectTimeout *string `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration *string `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections *int                                                           `pulumi:"maxConnections"`
	TcpKeepalive   *DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive `pulumi:"tcpKeepalive"`
}

// DestinationRuleSpecTrafficPolicyConnectionPoolTcpInput is an input type that accepts DestinationRuleSpecTrafficPolicyConnectionPoolTcpArgs and DestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyConnectionPoolTcpInput` via:
//
//	DestinationRuleSpecTrafficPolicyConnectionPoolTcpArgs{...}
type DestinationRuleSpecTrafficPolicyConnectionPoolTcpInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput
	ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecTrafficPolicyConnectionPoolTcpArgs struct {
	// TCP connection timeout.
	ConnectTimeout pulumi.StringPtrInput `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration pulumi.StringPtrInput `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections pulumi.IntPtrInput                                                    `pulumi:"maxConnections"`
	TcpKeepalive   DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrInput `pulumi:"tcpKeepalive"`
}

func (DestinationRuleSpecTrafficPolicyConnectionPoolTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolTcp)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolTcpArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolTcpArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput)
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolTcpArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolTcpArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput).ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyConnectionPoolTcpArgs, DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtr and DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyConnectionPoolTcpArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput
	ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput
}

type destinationRuleSpecTrafficPolicyConnectionPoolTcpPtrType DestinationRuleSpecTrafficPolicyConnectionPoolTcpArgs

func DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtr(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcpArgs) DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrInput {
	return (*destinationRuleSpecTrafficPolicyConnectionPoolTcpPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyConnectionPoolTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyConnectionPoolTcp)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyConnectionPoolTcpPtrType) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyConnectionPoolTcpPtrType) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolTcp)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyConnectionPoolTcp) *DestinationRuleSpecTrafficPolicyConnectionPoolTcp {
		return &v
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput)
}

// TCP connection timeout.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolTcp) *string { return v.ConnectTimeout }).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolTcp) *string { return v.IdleTimeout }).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolTcp) *string { return v.MaxConnectionDuration }).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolTcp) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput) TcpKeepalive() DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolTcp) *DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive {
		return v.TcpKeepalive
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput)
}

type DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyConnectionPoolTcp)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput) Elem() DestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcp) DestinationRuleSpecTrafficPolicyConnectionPoolTcp {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyConnectionPoolTcp
		return ret
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput)
}

// TCP connection timeout.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcp) *string {
		if v == nil {
			return nil
		}
		return v.ConnectTimeout
	}).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcp) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcp) *string {
		if v == nil {
			return nil
		}
		return v.MaxConnectionDuration
	}).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcp) *int {
		if v == nil {
			return nil
		}
		return v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput) TcpKeepalive() DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcp) *DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive {
		if v == nil {
			return nil
		}
		return v.TcpKeepalive
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatch struct {
	// TCP connection timeout.
	ConnectTimeout *string `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration *string `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections *int                                                                `pulumi:"maxConnections"`
	TcpKeepalive   *DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatch `pulumi:"tcpKeepalive"`
}

// DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchArgs and DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchArgs{...}
type DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput
	ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchArgs struct {
	// TCP connection timeout.
	ConnectTimeout pulumi.StringPtrInput `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration pulumi.StringPtrInput `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections pulumi.IntPtrInput                                                         `pulumi:"maxConnections"`
	TcpKeepalive   DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrInput `pulumi:"tcpKeepalive"`
}

func (DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput).ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchArgs, DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtr and DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrType DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchArgs

func DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtr(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchArgs) DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrType) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrType) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatch) *DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput)
}

// TCP connection timeout.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatch) *string { return v.ConnectTimeout }).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatch) *string { return v.IdleTimeout }).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatch) *string { return v.MaxConnectionDuration }).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatch) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput) TcpKeepalive() DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatch) *DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatch {
		return v.TcpKeepalive
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

type DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatch) DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput)
}

// TCP connection timeout.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatch) *string {
		if v == nil {
			return nil
		}
		return v.ConnectTimeout
	}).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatch) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatch) *string {
		if v == nil {
			return nil
		}
		return v.MaxConnectionDuration
	}).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput) TcpKeepalive() DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatch) *DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatch {
		if v == nil {
			return nil
		}
		return v.TcpKeepalive
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive struct {
	// The time duration between keep-alive probes.
	Interval *string `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes *int `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time *string `pulumi:"time"`
}

// DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveInput is an input type that accepts DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs and DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveInput` via:
//
//	DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs{...}
type DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput
	ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs struct {
	// The time duration between keep-alive probes.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes pulumi.IntPtrInput `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time pulumi.StringPtrInput `pulumi:"time"`
}

func (DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput)
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput).ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs, DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtr and DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput
	ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput
}

type destinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrType DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs

func DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtr(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs) DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrInput {
	return (*destinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrType) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrType) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive) *DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive {
		return &v
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput)
}

// The time duration between keep-alive probes.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive) *int { return v.Probes }).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive) *string { return v.Time }).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput) Elem() DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive) DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive
		return ret
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput)
}

// The time duration between keep-alive probes.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive) *int {
		if v == nil {
			return nil
		}
		return v.Probes
	}).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalive) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatch struct {
	// The time duration between keep-alive probes.
	Interval *string `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes *int `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time *string `pulumi:"time"`
}

// DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs and DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs{...}
type DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput
	ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs struct {
	// The time duration between keep-alive probes.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes pulumi.IntPtrInput `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time pulumi.StringPtrInput `pulumi:"time"`
}

func (DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput).ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs, DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtr and DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput
}

type destinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrType DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs

func DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtr(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs) DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrType) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrType) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatch) *DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

// The time duration between keep-alive probes.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatch) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatch) *int { return v.Probes }).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatch) *string { return v.Time }).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput() DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput) ToDestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatch) DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput)
}

// The time duration between keep-alive probes.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatch) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatch) *int {
		if v == nil {
			return nil
		}
		return v.Probes
	}).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatch) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecTrafficPolicyLoadBalancer struct {
	ConsistentHash    *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash    `pulumi:"consistentHash"`
	LocalityLbSetting *DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSetting `pulumi:"localityLbSetting"`
	// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
	Simple *string `pulumi:"simple"`
	// Represents the warmup duration of Service.
	WarmupDurationSecs *string `pulumi:"warmupDurationSecs"`
}

// DestinationRuleSpecTrafficPolicyLoadBalancerInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerArgs and DestinationRuleSpecTrafficPolicyLoadBalancerOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerInput` via:
//
//	DestinationRuleSpecTrafficPolicyLoadBalancerArgs{...}
type DestinationRuleSpecTrafficPolicyLoadBalancerInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerOutput() DestinationRuleSpecTrafficPolicyLoadBalancerOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerOutput
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecTrafficPolicyLoadBalancerArgs struct {
	ConsistentHash    DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrInput    `pulumi:"consistentHash"`
	LocalityLbSetting DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrInput `pulumi:"localityLbSetting"`
	// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
	Simple pulumi.StringPtrInput `pulumi:"simple"`
	// Represents the warmup duration of Service.
	WarmupDurationSecs pulumi.StringPtrInput `pulumi:"warmupDurationSecs"`
}

func (DestinationRuleSpecTrafficPolicyLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancer)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerOutput() DestinationRuleSpecTrafficPolicyLoadBalancerOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerOutput)
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerOutput).ToDestinationRuleSpecTrafficPolicyLoadBalancerPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyLoadBalancerPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerArgs, DestinationRuleSpecTrafficPolicyLoadBalancerPtr and DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyLoadBalancerArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyLoadBalancerPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput
}

type destinationRuleSpecTrafficPolicyLoadBalancerPtrType DestinationRuleSpecTrafficPolicyLoadBalancerArgs

func DestinationRuleSpecTrafficPolicyLoadBalancerPtr(v *DestinationRuleSpecTrafficPolicyLoadBalancerArgs) DestinationRuleSpecTrafficPolicyLoadBalancerPtrInput {
	return (*destinationRuleSpecTrafficPolicyLoadBalancerPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyLoadBalancerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancer)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerPtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerPtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput)
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecTrafficPolicyLoadBalancerOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancer)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerOutput() DestinationRuleSpecTrafficPolicyLoadBalancerOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyLoadBalancerPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyLoadBalancer) *DestinationRuleSpecTrafficPolicyLoadBalancer {
		return &v
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerOutput) ConsistentHash() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancer) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash {
		return v.ConsistentHash
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerOutput) LocalityLbSetting() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancer) *DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSetting {
		return v.LocalityLbSetting
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput)
}

// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
func (o DestinationRuleSpecTrafficPolicyLoadBalancerOutput) Simple() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancer) *string { return v.Simple }).(pulumi.StringPtrOutput)
}

// Represents the warmup duration of Service.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerOutput) WarmupDurationSecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancer) *string { return v.WarmupDurationSecs }).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancer)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput) Elem() DestinationRuleSpecTrafficPolicyLoadBalancerOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancer) DestinationRuleSpecTrafficPolicyLoadBalancer {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyLoadBalancer
		return ret
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerOutput)
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput) ConsistentHash() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancer) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash {
		if v == nil {
			return nil
		}
		return v.ConsistentHash
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput) LocalityLbSetting() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancer) *DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSetting {
		if v == nil {
			return nil
		}
		return v.LocalityLbSetting
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput)
}

// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
func (o DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput) Simple() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.Simple
	}).(pulumi.StringPtrOutput)
}

// Represents the warmup duration of Service.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput) WarmupDurationSecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.WarmupDurationSecs
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash struct {
	HttpCookie *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookie `pulumi:"httpCookie"`
	// Hash based on a specific HTTP header.
	HttpHeaderName *string `pulumi:"httpHeaderName"`
	// Hash based on a specific HTTP query parameter.
	HttpQueryParameterName *string                                                           `pulumi:"httpQueryParameterName"`
	Maglev                 *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglev `pulumi:"maglev"`
	// Deprecated.
	MinimumRingSize *int                                                                `pulumi:"minimumRingSize"`
	RingHash        *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHash `pulumi:"ringHash"`
	// Hash based on the source IP address.
	UseSourceIp *bool `pulumi:"useSourceIp"`
}

// DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashArgs and DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashInput` via:
//
//	DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashArgs{...}
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput
}

type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashArgs struct {
	HttpCookie DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrInput `pulumi:"httpCookie"`
	// Hash based on a specific HTTP header.
	HttpHeaderName pulumi.StringPtrInput `pulumi:"httpHeaderName"`
	// Hash based on a specific HTTP query parameter.
	HttpQueryParameterName pulumi.StringPtrInput                                                    `pulumi:"httpQueryParameterName"`
	Maglev                 DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrInput `pulumi:"maglev"`
	// Deprecated.
	MinimumRingSize pulumi.IntPtrInput                                                         `pulumi:"minimumRingSize"`
	RingHash        DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrInput `pulumi:"ringHash"`
	// Hash based on the source IP address.
	UseSourceIp pulumi.BoolPtrInput `pulumi:"useSourceIp"`
}

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput)
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput).ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashArgs, DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtr and DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput
}

type destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrType DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashArgs

func DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtr(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashArgs) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrInput {
	return (*destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash {
		return &v
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput) HttpCookie() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookie {
		return v.HttpCookie
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput)
}

// Hash based on a specific HTTP header.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput) HttpHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash) *string { return v.HttpHeaderName }).(pulumi.StringPtrOutput)
}

// Hash based on a specific HTTP query parameter.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput) HttpQueryParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash) *string {
		return v.HttpQueryParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput) Maglev() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglev {
		return v.Maglev
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput)
}

// Deprecated.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash) *int { return v.MinimumRingSize }).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput) RingHash() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHash {
		return v.RingHash
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput)
}

// Hash based on the source IP address.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput) UseSourceIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash) *bool { return v.UseSourceIp }).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput) Elem() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash
		return ret
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput)
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput) HttpCookie() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookie {
		if v == nil {
			return nil
		}
		return v.HttpCookie
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput)
}

// Hash based on a specific HTTP header.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput) HttpHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash) *string {
		if v == nil {
			return nil
		}
		return v.HttpHeaderName
	}).(pulumi.StringPtrOutput)
}

// Hash based on a specific HTTP query parameter.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput) HttpQueryParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash) *string {
		if v == nil {
			return nil
		}
		return v.HttpQueryParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput) Maglev() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglev {
		if v == nil {
			return nil
		}
		return v.Maglev
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput)
}

// Deprecated.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash) *int {
		if v == nil {
			return nil
		}
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput) RingHash() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHash {
		if v == nil {
			return nil
		}
		return v.RingHash
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput)
}

// Hash based on the source IP address.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput) UseSourceIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHash) *bool {
		if v == nil {
			return nil
		}
		return v.UseSourceIp
	}).(pulumi.BoolPtrOutput)
}

// Hash based on HTTP cookie.
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookie struct {
	// Name of the cookie.
	Name *string `pulumi:"name"`
	// Path to set for the cookie.
	Path *string `pulumi:"path"`
	// Lifetime of the cookie.
	Ttl *string `pulumi:"ttl"`
}

// DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs and DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieInput` via:
//
//	DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs{...}
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput
}

// Hash based on HTTP cookie.
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs struct {
	// Name of the cookie.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path to set for the cookie.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Lifetime of the cookie.
	Ttl pulumi.StringPtrInput `pulumi:"ttl"`
}

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookie)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput)
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput).ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs, DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtr and DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput
}

type destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrType DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs

func DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtr(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrInput {
	return (*destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookie)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput)
}

// Hash based on HTTP cookie.
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookie)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookie) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookie {
		return &v
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput)
}

// Name of the cookie.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookie) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path to set for the cookie.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookie) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Lifetime of the cookie.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookie) *string { return v.Ttl }).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookie)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput) Elem() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookie) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookie {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookie
		return ret
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput)
}

// Name of the cookie.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookie) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Path to set for the cookie.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookie) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Lifetime of the cookie.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookie) *string {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.StringPtrOutput)
}

// Hash based on HTTP cookie.
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch struct {
	// Name of the cookie.
	Name *string `pulumi:"name"`
	// Path to set for the cookie.
	Path *string `pulumi:"path"`
	// Lifetime of the cookie.
	Ttl *string `pulumi:"ttl"`
}

// DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs and DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs{...}
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput
}

// Hash based on HTTP cookie.
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs struct {
	// Name of the cookie.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path to set for the cookie.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Lifetime of the cookie.
	Ttl pulumi.StringPtrInput `pulumi:"ttl"`
}

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput).ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs, DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtr and DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput
}

type destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrType DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs

func DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtr(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput)
}

// Hash based on HTTP cookie.
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput)
}

// Name of the cookie.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Path to set for the cookie.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch) *string {
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Lifetime of the cookie.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch) *string {
		return v.Ttl
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput)
}

// Name of the cookie.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Path to set for the cookie.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Lifetime of the cookie.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch) *string {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.StringPtrOutput)
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglev struct {
	// The table size for Maglev hashing.
	TableSize *int `pulumi:"tableSize"`
}

// DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevArgs and DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevInput` via:
//
//	DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevArgs{...}
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutput
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevArgs struct {
	// The table size for Maglev hashing.
	TableSize pulumi.IntPtrInput `pulumi:"tableSize"`
}

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglev)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutput)
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutput).ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevArgs, DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtr and DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput
}

type destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrType DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevArgs

func DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtr(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevArgs) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrInput {
	return (*destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglev)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput)
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglev)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglev) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglev {
		return &v
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput)
}

// The table size for Maglev hashing.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutput) TableSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglev) *int { return v.TableSize }).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglev)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput) Elem() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglev) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglev {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglev
		return ret
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutput)
}

// The table size for Maglev hashing.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput) TableSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglev) *int {
		if v == nil {
			return nil
		}
		return v.TableSize
	}).(pulumi.IntPtrOutput)
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatch struct {
	// The table size for Maglev hashing.
	TableSize *int `pulumi:"tableSize"`
}

// DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs and DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs{...}
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs struct {
	// The table size for Maglev hashing.
	TableSize pulumi.IntPtrInput `pulumi:"tableSize"`
}

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput).ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs, DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtr and DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrType DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs

func DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtr(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput)
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatch) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput)
}

// The table size for Maglev hashing.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput) TableSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatch) *int { return v.TableSize }).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatch) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput)
}

// The table size for Maglev hashing.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput) TableSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatch) *int {
		if v == nil {
			return nil
		}
		return v.TableSize
	}).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch struct {
	HttpCookie *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch `pulumi:"httpCookie"`
	// Hash based on a specific HTTP header.
	HttpHeaderName *string `pulumi:"httpHeaderName"`
	// Hash based on a specific HTTP query parameter.
	HttpQueryParameterName *string                                                                `pulumi:"httpQueryParameterName"`
	Maglev                 *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatch `pulumi:"maglev"`
	// Deprecated.
	MinimumRingSize *int                                                                     `pulumi:"minimumRingSize"`
	RingHash        *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatch `pulumi:"ringHash"`
	// Hash based on the source IP address.
	UseSourceIp *bool `pulumi:"useSourceIp"`
}

// DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchArgs and DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchArgs{...}
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput
}

type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchArgs struct {
	HttpCookie DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrInput `pulumi:"httpCookie"`
	// Hash based on a specific HTTP header.
	HttpHeaderName pulumi.StringPtrInput `pulumi:"httpHeaderName"`
	// Hash based on a specific HTTP query parameter.
	HttpQueryParameterName pulumi.StringPtrInput                                                         `pulumi:"httpQueryParameterName"`
	Maglev                 DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrInput `pulumi:"maglev"`
	// Deprecated.
	MinimumRingSize pulumi.IntPtrInput                                                              `pulumi:"minimumRingSize"`
	RingHash        DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrInput `pulumi:"ringHash"`
	// Hash based on the source IP address.
	UseSourceIp pulumi.BoolPtrInput `pulumi:"useSourceIp"`
}

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput).ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchArgs, DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtr and DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrType DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchArgs

func DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtr(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchArgs) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput) HttpCookie() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch {
		return v.HttpCookie
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput)
}

// Hash based on a specific HTTP header.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput) HttpHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch) *string {
		return v.HttpHeaderName
	}).(pulumi.StringPtrOutput)
}

// Hash based on a specific HTTP query parameter.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput) HttpQueryParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch) *string {
		return v.HttpQueryParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput) Maglev() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatch {
		return v.Maglev
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput)
}

// Deprecated.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch) *int { return v.MinimumRingSize }).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput) RingHash() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatch {
		return v.RingHash
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput)
}

// Hash based on the source IP address.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput) UseSourceIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch) *bool { return v.UseSourceIp }).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput)
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput) HttpCookie() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatch {
		if v == nil {
			return nil
		}
		return v.HttpCookie
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput)
}

// Hash based on a specific HTTP header.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput) HttpHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch) *string {
		if v == nil {
			return nil
		}
		return v.HttpHeaderName
	}).(pulumi.StringPtrOutput)
}

// Hash based on a specific HTTP query parameter.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput) HttpQueryParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch) *string {
		if v == nil {
			return nil
		}
		return v.HttpQueryParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput) Maglev() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatch {
		if v == nil {
			return nil
		}
		return v.Maglev
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput)
}

// Deprecated.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch) *int {
		if v == nil {
			return nil
		}
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput) RingHash() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatch {
		if v == nil {
			return nil
		}
		return v.RingHash
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput)
}

// Hash based on the source IP address.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput) UseSourceIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch) *bool {
		if v == nil {
			return nil
		}
		return v.UseSourceIp
	}).(pulumi.BoolPtrOutput)
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHash struct {
	// The minimum number of virtual nodes to use for the hash ring.
	MinimumRingSize *int `pulumi:"minimumRingSize"`
}

// DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashArgs and DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashInput` via:
//
//	DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashArgs{...}
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutput
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashArgs struct {
	// The minimum number of virtual nodes to use for the hash ring.
	MinimumRingSize pulumi.IntPtrInput `pulumi:"minimumRingSize"`
}

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHash)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutput)
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutput).ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashArgs, DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtr and DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput
}

type destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrType DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashArgs

func DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtr(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashArgs) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrInput {
	return (*destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHash)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput)
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHash)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHash) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHash {
		return &v
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput)
}

// The minimum number of virtual nodes to use for the hash ring.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHash) *int {
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHash)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput) Elem() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHash) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHash {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHash
		return ret
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutput)
}

// The minimum number of virtual nodes to use for the hash ring.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHash) *int {
		if v == nil {
			return nil
		}
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatch struct {
	// The minimum number of virtual nodes to use for the hash ring.
	MinimumRingSize *int `pulumi:"minimumRingSize"`
}

// DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs and DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs{...}
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs struct {
	// The minimum number of virtual nodes to use for the hash ring.
	MinimumRingSize pulumi.IntPtrInput `pulumi:"minimumRingSize"`
}

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput).ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs, DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtr and DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrType DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs

func DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtr(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput)
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatch) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput)
}

// The minimum number of virtual nodes to use for the hash ring.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatch) *int {
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatch) DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput)
}

// The minimum number of virtual nodes to use for the hash ring.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatch) *int {
		if v == nil {
			return nil
		}
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSetting struct {
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Distribute []DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistribute `pulumi:"distribute"`
	// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
	Enabled *bool `pulumi:"enabled"`
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Failover []DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailover `pulumi:"failover"`
	// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
	FailoverPriority []string `pulumi:"failoverPriority"`
}

// DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingArgs and DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingInput` via:
//
//	DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingArgs{...}
type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingArgs struct {
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Distribute DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayInput `pulumi:"distribute"`
	// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Failover DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayInput `pulumi:"failover"`
	// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
	FailoverPriority pulumi.StringArrayInput `pulumi:"failoverPriority"`
}

func (DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSetting)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput)
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput).ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingArgs, DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtr and DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput
}

type destinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrType DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingArgs

func DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtr(v *DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingArgs) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrInput {
	return (*destinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSetting)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSetting)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSetting) *DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSetting {
		return &v
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput) Distribute() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSetting) []DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistribute {
		return v.Distribute
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput)
}

// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSetting) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput) Failover() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSetting) []DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailover {
		return v.Failover
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput)
}

// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput) FailoverPriority() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSetting) []string {
		return v.FailoverPriority
	}).(pulumi.StringArrayOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSetting)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput) Elem() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSetting) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSetting {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSetting
		return ret
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput) Distribute() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSetting) []DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistribute {
		if v == nil {
			return nil
		}
		return v.Distribute
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput)
}

// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSetting) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput) Failover() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSetting) []DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailover {
		if v == nil {
			return nil
		}
		return v.Failover
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput)
}

// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput) FailoverPriority() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSetting) []string {
		if v == nil {
			return nil
		}
		return v.FailoverPriority
	}).(pulumi.StringArrayOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistribute struct {
	// Originating locality, '/' separated, e.g.
	From *string `pulumi:"from"`
	// Map of upstream localities to traffic distribution weights.
	To map[string]int `pulumi:"to"`
}

// DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArgs and DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeInput` via:
//
//	DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArgs{...}
type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArgs struct {
	// Originating locality, '/' separated, e.g.
	From pulumi.StringPtrInput `pulumi:"from"`
	// Map of upstream localities to traffic distribution weights.
	To pulumi.IntMapInput `pulumi:"to"`
}

func (DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistribute)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput)
}

// DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArray and DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayInput` via:
//
//	DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArray{ DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArgs{...} }
type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArray []DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeInput

func (DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistribute)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArray) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArray) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistribute)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput {
	return o
}

// Originating locality, '/' separated, e.g.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistribute) *string { return v.From }).(pulumi.StringPtrOutput)
}

// Map of upstream localities to traffic distribution weights.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput) To() pulumi.IntMapOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistribute) map[string]int {
		return v.To
	}).(pulumi.IntMapOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistribute)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput) Index(i pulumi.IntInput) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistribute {
		return vs[0].([]DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistribute)[vs[1].(int)]
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch struct {
	// Originating locality, '/' separated, e.g.
	From *string `pulumi:"from"`
	// Map of upstream localities to traffic distribution weights.
	To map[string]int `pulumi:"to"`
}

// DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArgs and DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArgs{...}
type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArgs struct {
	// Originating locality, '/' separated, e.g.
	From pulumi.StringPtrInput `pulumi:"from"`
	// Map of upstream localities to traffic distribution weights.
	To pulumi.IntMapInput `pulumi:"to"`
}

func (DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput)
}

// DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArray and DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayInput` via:
//
//	DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArray{ DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArgs{...} }
type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArray []DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchInput

func (DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArray) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArray) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput {
	return o
}

// Originating locality, '/' separated, e.g.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch) *string {
		return v.From
	}).(pulumi.StringPtrOutput)
}

// Map of upstream localities to traffic distribution weights.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput) To() pulumi.IntMapOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch) map[string]int {
		return v.To
	}).(pulumi.IntMapOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput) Index(i pulumi.IntInput) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch {
		return vs[0].([]DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch)[vs[1].(int)]
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailover struct {
	// Originating region.
	From *string `pulumi:"from"`
	// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
	To *string `pulumi:"to"`
}

// DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArgs and DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverInput` via:
//
//	DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArgs{...}
type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArgs struct {
	// Originating region.
	From pulumi.StringPtrInput `pulumi:"from"`
	// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
	To pulumi.StringPtrInput `pulumi:"to"`
}

func (DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailover)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput)
}

// DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArray and DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayInput` via:
//
//	DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArray{ DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArgs{...} }
type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArray []DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverInput

func (DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailover)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArray) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArray) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailover)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput {
	return o
}

// Originating region.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailover) *string { return v.From }).(pulumi.StringPtrOutput)
}

// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailover) *string { return v.To }).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailover)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput) Index(i pulumi.IntInput) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailover {
		return vs[0].([]DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailover)[vs[1].(int)]
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch struct {
	// Originating region.
	From *string `pulumi:"from"`
	// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
	To *string `pulumi:"to"`
}

// DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArgs and DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArgs{...}
type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArgs struct {
	// Originating region.
	From pulumi.StringPtrInput `pulumi:"from"`
	// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
	To pulumi.StringPtrInput `pulumi:"to"`
}

func (DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput)
}

// DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArray and DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayInput` via:
//
//	DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArray{ DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArgs{...} }
type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArray []DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchInput

func (DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArray) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArray) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput {
	return o
}

// Originating region.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch) *string {
		return v.From
	}).(pulumi.StringPtrOutput)
}

// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch) *string {
		return v.To
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput) Index(i pulumi.IntInput) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch {
		return vs[0].([]DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch)[vs[1].(int)]
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatch struct {
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Distribute []DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch `pulumi:"distribute"`
	// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
	Enabled *bool `pulumi:"enabled"`
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Failover []DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch `pulumi:"failover"`
	// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
	FailoverPriority []string `pulumi:"failoverPriority"`
}

// DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs and DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs{...}
type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs struct {
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Distribute DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayInput `pulumi:"distribute"`
	// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Failover DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayInput `pulumi:"failover"`
	// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
	FailoverPriority pulumi.StringArrayInput `pulumi:"failoverPriority"`
}

func (DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput).ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs, DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtr and DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrType DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs

func DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtr(v *DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatch) *DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput) Distribute() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatch) []DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch {
		return v.Distribute
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput)
}

// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatch) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput) Failover() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatch) []DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch {
		return v.Failover
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput)
}

// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput) FailoverPriority() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatch) []string {
		return v.FailoverPriority
	}).(pulumi.StringArrayOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatch) DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput) Distribute() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatch) []DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatch {
		if v == nil {
			return nil
		}
		return v.Distribute
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput)
}

// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput) Failover() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatch) []DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatch {
		if v == nil {
			return nil
		}
		return v.Failover
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput)
}

// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput) FailoverPriority() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatch) []string {
		if v == nil {
			return nil
		}
		return v.FailoverPriority
	}).(pulumi.StringArrayOutput)
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecTrafficPolicyLoadBalancerPatch struct {
	ConsistentHash    *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch    `pulumi:"consistentHash"`
	LocalityLbSetting *DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatch `pulumi:"localityLbSetting"`
	// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
	Simple *string `pulumi:"simple"`
	// Represents the warmup duration of Service.
	WarmupDurationSecs *string `pulumi:"warmupDurationSecs"`
}

// DestinationRuleSpecTrafficPolicyLoadBalancerPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerPatchArgs and DestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyLoadBalancerPatchArgs{...}
type DestinationRuleSpecTrafficPolicyLoadBalancerPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecTrafficPolicyLoadBalancerPatchArgs struct {
	ConsistentHash    DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrInput    `pulumi:"consistentHash"`
	LocalityLbSetting DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrInput `pulumi:"localityLbSetting"`
	// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
	Simple pulumi.StringPtrInput `pulumi:"simple"`
	// Represents the warmup duration of Service.
	WarmupDurationSecs pulumi.StringPtrInput `pulumi:"warmupDurationSecs"`
}

func (DestinationRuleSpecTrafficPolicyLoadBalancerPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerPatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerPatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerPatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyLoadBalancerPatchArgs) ToDestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput).ToDestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyLoadBalancerPatchArgs, DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtr and DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyLoadBalancerPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyLoadBalancerPatchPtrType DestinationRuleSpecTrafficPolicyLoadBalancerPatchArgs

func DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtr(v *DestinationRuleSpecTrafficPolicyLoadBalancerPatchArgs) DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyLoadBalancerPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyLoadBalancerPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancerPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerPatchPtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyLoadBalancerPatchPtrType) ToDestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput)
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput() DestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyLoadBalancerPatch) *DestinationRuleSpecTrafficPolicyLoadBalancerPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput) ConsistentHash() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerPatch) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch {
		return v.ConsistentHash
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput) LocalityLbSetting() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerPatch) *DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatch {
		return v.LocalityLbSetting
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput)
}

// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
func (o DestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput) Simple() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerPatch) *string { return v.Simple }).(pulumi.StringPtrOutput)
}

// Represents the warmup duration of Service.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput) WarmupDurationSecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyLoadBalancerPatch) *string { return v.WarmupDurationSecs }).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyLoadBalancerPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput() DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerPatch) DestinationRuleSpecTrafficPolicyLoadBalancerPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyLoadBalancerPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput)
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput) ConsistentHash() DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerPatch) *DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatch {
		if v == nil {
			return nil
		}
		return v.ConsistentHash
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput) LocalityLbSetting() DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerPatch) *DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatch {
		if v == nil {
			return nil
		}
		return v.LocalityLbSetting
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput)
}

// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
func (o DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput) Simple() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerPatch) *string {
		if v == nil {
			return nil
		}
		return v.Simple
	}).(pulumi.StringPtrOutput)
}

// Represents the warmup duration of Service.
func (o DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput) WarmupDurationSecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyLoadBalancerPatch) *string {
		if v == nil {
			return nil
		}
		return v.WarmupDurationSecs
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecTrafficPolicyOutlierDetection struct {
	// Minimum ejection duration.
	BaseEjectionTime *string `pulumi:"baseEjectionTime"`
	// Number of 5xx errors before a host is ejected from the connection pool.
	Consecutive5xxErrors *int `pulumi:"consecutive5xxErrors"`
	ConsecutiveErrors    *int `pulumi:"consecutiveErrors"`
	// Number of gateway errors before a host is ejected from the connection pool.
	ConsecutiveGatewayErrors *int `pulumi:"consecutiveGatewayErrors"`
	// The number of consecutive locally originated failures before ejection occurs.
	ConsecutiveLocalOriginFailures *int `pulumi:"consecutiveLocalOriginFailures"`
	// Time interval between ejection sweep analysis.
	Interval *string `pulumi:"interval"`
	// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
	MaxEjectionPercent *int `pulumi:"maxEjectionPercent"`
	// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
	MinHealthPercent *int `pulumi:"minHealthPercent"`
	// Determines whether to distinguish local origin failures from external errors.
	SplitExternalLocalOriginErrors *bool `pulumi:"splitExternalLocalOriginErrors"`
}

// DestinationRuleSpecTrafficPolicyOutlierDetectionInput is an input type that accepts DestinationRuleSpecTrafficPolicyOutlierDetectionArgs and DestinationRuleSpecTrafficPolicyOutlierDetectionOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyOutlierDetectionInput` via:
//
//	DestinationRuleSpecTrafficPolicyOutlierDetectionArgs{...}
type DestinationRuleSpecTrafficPolicyOutlierDetectionInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyOutlierDetectionOutput() DestinationRuleSpecTrafficPolicyOutlierDetectionOutput
	ToDestinationRuleSpecTrafficPolicyOutlierDetectionOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyOutlierDetectionOutput
}

type DestinationRuleSpecTrafficPolicyOutlierDetectionArgs struct {
	// Minimum ejection duration.
	BaseEjectionTime pulumi.StringPtrInput `pulumi:"baseEjectionTime"`
	// Number of 5xx errors before a host is ejected from the connection pool.
	Consecutive5xxErrors pulumi.IntPtrInput `pulumi:"consecutive5xxErrors"`
	ConsecutiveErrors    pulumi.IntPtrInput `pulumi:"consecutiveErrors"`
	// Number of gateway errors before a host is ejected from the connection pool.
	ConsecutiveGatewayErrors pulumi.IntPtrInput `pulumi:"consecutiveGatewayErrors"`
	// The number of consecutive locally originated failures before ejection occurs.
	ConsecutiveLocalOriginFailures pulumi.IntPtrInput `pulumi:"consecutiveLocalOriginFailures"`
	// Time interval between ejection sweep analysis.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
	MaxEjectionPercent pulumi.IntPtrInput `pulumi:"maxEjectionPercent"`
	// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
	MinHealthPercent pulumi.IntPtrInput `pulumi:"minHealthPercent"`
	// Determines whether to distinguish local origin failures from external errors.
	SplitExternalLocalOriginErrors pulumi.BoolPtrInput `pulumi:"splitExternalLocalOriginErrors"`
}

func (DestinationRuleSpecTrafficPolicyOutlierDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyOutlierDetection)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyOutlierDetectionArgs) ToDestinationRuleSpecTrafficPolicyOutlierDetectionOutput() DestinationRuleSpecTrafficPolicyOutlierDetectionOutput {
	return i.ToDestinationRuleSpecTrafficPolicyOutlierDetectionOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyOutlierDetectionArgs) ToDestinationRuleSpecTrafficPolicyOutlierDetectionOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyOutlierDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyOutlierDetectionOutput)
}

func (i DestinationRuleSpecTrafficPolicyOutlierDetectionArgs) ToDestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput() DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyOutlierDetectionArgs) ToDestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyOutlierDetectionOutput).ToDestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyOutlierDetectionPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyOutlierDetectionArgs, DestinationRuleSpecTrafficPolicyOutlierDetectionPtr and DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyOutlierDetectionPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyOutlierDetectionArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyOutlierDetectionPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput() DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput
	ToDestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput
}

type destinationRuleSpecTrafficPolicyOutlierDetectionPtrType DestinationRuleSpecTrafficPolicyOutlierDetectionArgs

func DestinationRuleSpecTrafficPolicyOutlierDetectionPtr(v *DestinationRuleSpecTrafficPolicyOutlierDetectionArgs) DestinationRuleSpecTrafficPolicyOutlierDetectionPtrInput {
	return (*destinationRuleSpecTrafficPolicyOutlierDetectionPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyOutlierDetectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyOutlierDetection)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyOutlierDetectionPtrType) ToDestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput() DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyOutlierDetectionPtrType) ToDestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput)
}

type DestinationRuleSpecTrafficPolicyOutlierDetectionOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyOutlierDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyOutlierDetection)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyOutlierDetectionOutput) ToDestinationRuleSpecTrafficPolicyOutlierDetectionOutput() DestinationRuleSpecTrafficPolicyOutlierDetectionOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyOutlierDetectionOutput) ToDestinationRuleSpecTrafficPolicyOutlierDetectionOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyOutlierDetectionOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyOutlierDetectionOutput) ToDestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput() DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyOutlierDetectionOutput) ToDestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyOutlierDetection) *DestinationRuleSpecTrafficPolicyOutlierDetection {
		return &v
	}).(DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput)
}

// Minimum ejection duration.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionOutput) BaseEjectionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyOutlierDetection) *string { return v.BaseEjectionTime }).(pulumi.StringPtrOutput)
}

// Number of 5xx errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionOutput) Consecutive5xxErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyOutlierDetection) *int { return v.Consecutive5xxErrors }).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyOutlierDetectionOutput) ConsecutiveErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyOutlierDetection) *int { return v.ConsecutiveErrors }).(pulumi.IntPtrOutput)
}

// Number of gateway errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionOutput) ConsecutiveGatewayErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyOutlierDetection) *int { return v.ConsecutiveGatewayErrors }).(pulumi.IntPtrOutput)
}

// The number of consecutive locally originated failures before ejection occurs.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionOutput) ConsecutiveLocalOriginFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyOutlierDetection) *int { return v.ConsecutiveLocalOriginFailures }).(pulumi.IntPtrOutput)
}

// Time interval between ejection sweep analysis.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyOutlierDetection) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionOutput) MaxEjectionPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyOutlierDetection) *int { return v.MaxEjectionPercent }).(pulumi.IntPtrOutput)
}

// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionOutput) MinHealthPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyOutlierDetection) *int { return v.MinHealthPercent }).(pulumi.IntPtrOutput)
}

// Determines whether to distinguish local origin failures from external errors.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionOutput) SplitExternalLocalOriginErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyOutlierDetection) *bool {
		return v.SplitExternalLocalOriginErrors
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyOutlierDetection)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput) ToDestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput() DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput) ToDestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput) Elem() DestinationRuleSpecTrafficPolicyOutlierDetectionOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyOutlierDetection) DestinationRuleSpecTrafficPolicyOutlierDetection {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyOutlierDetection
		return ret
	}).(DestinationRuleSpecTrafficPolicyOutlierDetectionOutput)
}

// Minimum ejection duration.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput) BaseEjectionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyOutlierDetection) *string {
		if v == nil {
			return nil
		}
		return v.BaseEjectionTime
	}).(pulumi.StringPtrOutput)
}

// Number of 5xx errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput) Consecutive5xxErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.Consecutive5xxErrors
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput) ConsecutiveErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveErrors
	}).(pulumi.IntPtrOutput)
}

// Number of gateway errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput) ConsecutiveGatewayErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveGatewayErrors
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive locally originated failures before ejection occurs.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput) ConsecutiveLocalOriginFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveLocalOriginFailures
	}).(pulumi.IntPtrOutput)
}

// Time interval between ejection sweep analysis.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyOutlierDetection) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput) MaxEjectionPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.MaxEjectionPercent
	}).(pulumi.IntPtrOutput)
}

// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput) MinHealthPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.MinHealthPercent
	}).(pulumi.IntPtrOutput)
}

// Determines whether to distinguish local origin failures from external errors.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput) SplitExternalLocalOriginErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyOutlierDetection) *bool {
		if v == nil {
			return nil
		}
		return v.SplitExternalLocalOriginErrors
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecTrafficPolicyOutlierDetectionPatch struct {
	// Minimum ejection duration.
	BaseEjectionTime *string `pulumi:"baseEjectionTime"`
	// Number of 5xx errors before a host is ejected from the connection pool.
	Consecutive5xxErrors *int `pulumi:"consecutive5xxErrors"`
	ConsecutiveErrors    *int `pulumi:"consecutiveErrors"`
	// Number of gateway errors before a host is ejected from the connection pool.
	ConsecutiveGatewayErrors *int `pulumi:"consecutiveGatewayErrors"`
	// The number of consecutive locally originated failures before ejection occurs.
	ConsecutiveLocalOriginFailures *int `pulumi:"consecutiveLocalOriginFailures"`
	// Time interval between ejection sweep analysis.
	Interval *string `pulumi:"interval"`
	// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
	MaxEjectionPercent *int `pulumi:"maxEjectionPercent"`
	// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
	MinHealthPercent *int `pulumi:"minHealthPercent"`
	// Determines whether to distinguish local origin failures from external errors.
	SplitExternalLocalOriginErrors *bool `pulumi:"splitExternalLocalOriginErrors"`
}

// DestinationRuleSpecTrafficPolicyOutlierDetectionPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyOutlierDetectionPatchArgs and DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyOutlierDetectionPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyOutlierDetectionPatchArgs{...}
type DestinationRuleSpecTrafficPolicyOutlierDetectionPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput() DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput
	ToDestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput
}

type DestinationRuleSpecTrafficPolicyOutlierDetectionPatchArgs struct {
	// Minimum ejection duration.
	BaseEjectionTime pulumi.StringPtrInput `pulumi:"baseEjectionTime"`
	// Number of 5xx errors before a host is ejected from the connection pool.
	Consecutive5xxErrors pulumi.IntPtrInput `pulumi:"consecutive5xxErrors"`
	ConsecutiveErrors    pulumi.IntPtrInput `pulumi:"consecutiveErrors"`
	// Number of gateway errors before a host is ejected from the connection pool.
	ConsecutiveGatewayErrors pulumi.IntPtrInput `pulumi:"consecutiveGatewayErrors"`
	// The number of consecutive locally originated failures before ejection occurs.
	ConsecutiveLocalOriginFailures pulumi.IntPtrInput `pulumi:"consecutiveLocalOriginFailures"`
	// Time interval between ejection sweep analysis.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
	MaxEjectionPercent pulumi.IntPtrInput `pulumi:"maxEjectionPercent"`
	// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
	MinHealthPercent pulumi.IntPtrInput `pulumi:"minHealthPercent"`
	// Determines whether to distinguish local origin failures from external errors.
	SplitExternalLocalOriginErrors pulumi.BoolPtrInput `pulumi:"splitExternalLocalOriginErrors"`
}

func (DestinationRuleSpecTrafficPolicyOutlierDetectionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyOutlierDetectionPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyOutlierDetectionPatchArgs) ToDestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput() DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyOutlierDetectionPatchArgs) ToDestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyOutlierDetectionPatchArgs) ToDestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput() DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyOutlierDetectionPatchArgs) ToDestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput).ToDestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyOutlierDetectionPatchArgs, DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtr and DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyOutlierDetectionPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput() DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrType DestinationRuleSpecTrafficPolicyOutlierDetectionPatchArgs

func DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtr(v *DestinationRuleSpecTrafficPolicyOutlierDetectionPatchArgs) DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyOutlierDetectionPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrType) ToDestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput() DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrType) ToDestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput)
}

type DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyOutlierDetectionPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput) ToDestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput() DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput) ToDestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput) ToDestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput() DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput) ToDestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyOutlierDetectionPatch) *DestinationRuleSpecTrafficPolicyOutlierDetectionPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput)
}

// Minimum ejection duration.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput) BaseEjectionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyOutlierDetectionPatch) *string { return v.BaseEjectionTime }).(pulumi.StringPtrOutput)
}

// Number of 5xx errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput) Consecutive5xxErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyOutlierDetectionPatch) *int { return v.Consecutive5xxErrors }).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput) ConsecutiveErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyOutlierDetectionPatch) *int { return v.ConsecutiveErrors }).(pulumi.IntPtrOutput)
}

// Number of gateway errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput) ConsecutiveGatewayErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyOutlierDetectionPatch) *int { return v.ConsecutiveGatewayErrors }).(pulumi.IntPtrOutput)
}

// The number of consecutive locally originated failures before ejection occurs.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput) ConsecutiveLocalOriginFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyOutlierDetectionPatch) *int {
		return v.ConsecutiveLocalOriginFailures
	}).(pulumi.IntPtrOutput)
}

// Time interval between ejection sweep analysis.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyOutlierDetectionPatch) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput) MaxEjectionPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyOutlierDetectionPatch) *int { return v.MaxEjectionPercent }).(pulumi.IntPtrOutput)
}

// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput) MinHealthPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyOutlierDetectionPatch) *int { return v.MinHealthPercent }).(pulumi.IntPtrOutput)
}

// Determines whether to distinguish local origin failures from external errors.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput) SplitExternalLocalOriginErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyOutlierDetectionPatch) *bool {
		return v.SplitExternalLocalOriginErrors
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyOutlierDetectionPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput() DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyOutlierDetectionPatch) DestinationRuleSpecTrafficPolicyOutlierDetectionPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyOutlierDetectionPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput)
}

// Minimum ejection duration.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput) BaseEjectionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyOutlierDetectionPatch) *string {
		if v == nil {
			return nil
		}
		return v.BaseEjectionTime
	}).(pulumi.StringPtrOutput)
}

// Number of 5xx errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput) Consecutive5xxErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.Consecutive5xxErrors
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput) ConsecutiveErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveErrors
	}).(pulumi.IntPtrOutput)
}

// Number of gateway errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput) ConsecutiveGatewayErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveGatewayErrors
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive locally originated failures before ejection occurs.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput) ConsecutiveLocalOriginFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveLocalOriginFailures
	}).(pulumi.IntPtrOutput)
}

// Time interval between ejection sweep analysis.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyOutlierDetectionPatch) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput) MaxEjectionPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxEjectionPercent
	}).(pulumi.IntPtrOutput)
}

// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput) MinHealthPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.MinHealthPercent
	}).(pulumi.IntPtrOutput)
}

// Determines whether to distinguish local origin failures from external errors.
func (o DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput) SplitExternalLocalOriginErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyOutlierDetectionPatch) *bool {
		if v == nil {
			return nil
		}
		return v.SplitExternalLocalOriginErrors
	}).(pulumi.BoolPtrOutput)
}

// Traffic policies to apply (load balancing policy, connection pool sizes, outlier detection).
type DestinationRuleSpecTrafficPolicyPatch struct {
	ConnectionPool   *DestinationRuleSpecTrafficPolicyConnectionPoolPatch   `pulumi:"connectionPool"`
	LoadBalancer     *DestinationRuleSpecTrafficPolicyLoadBalancerPatch     `pulumi:"loadBalancer"`
	OutlierDetection *DestinationRuleSpecTrafficPolicyOutlierDetectionPatch `pulumi:"outlierDetection"`
	// Traffic policies specific to individual ports.
	PortLevelSettings []DestinationRuleSpecTrafficPolicyPortLevelSettingsPatch `pulumi:"portLevelSettings"`
	ProxyProtocol     *DestinationRuleSpecTrafficPolicyProxyProtocolPatch      `pulumi:"proxyProtocol"`
	Tls               *DestinationRuleSpecTrafficPolicyTlsPatch                `pulumi:"tls"`
	Tunnel            *DestinationRuleSpecTrafficPolicyTunnelPatch             `pulumi:"tunnel"`
}

// DestinationRuleSpecTrafficPolicyPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyPatchArgs and DestinationRuleSpecTrafficPolicyPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyPatchArgs{...}
type DestinationRuleSpecTrafficPolicyPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPatchOutput() DestinationRuleSpecTrafficPolicyPatchOutput
	ToDestinationRuleSpecTrafficPolicyPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPatchOutput
}

// Traffic policies to apply (load balancing policy, connection pool sizes, outlier detection).
type DestinationRuleSpecTrafficPolicyPatchArgs struct {
	ConnectionPool   DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrInput   `pulumi:"connectionPool"`
	LoadBalancer     DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrInput     `pulumi:"loadBalancer"`
	OutlierDetection DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrInput `pulumi:"outlierDetection"`
	// Traffic policies specific to individual ports.
	PortLevelSettings DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayInput `pulumi:"portLevelSettings"`
	ProxyProtocol     DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrInput       `pulumi:"proxyProtocol"`
	Tls               DestinationRuleSpecTrafficPolicyTlsPatchPtrInput                 `pulumi:"tls"`
	Tunnel            DestinationRuleSpecTrafficPolicyTunnelPatchPtrInput              `pulumi:"tunnel"`
}

func (DestinationRuleSpecTrafficPolicyPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPatchArgs) ToDestinationRuleSpecTrafficPolicyPatchOutput() DestinationRuleSpecTrafficPolicyPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPatchArgs) ToDestinationRuleSpecTrafficPolicyPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyPatchArgs) ToDestinationRuleSpecTrafficPolicyPatchPtrOutput() DestinationRuleSpecTrafficPolicyPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPatchArgs) ToDestinationRuleSpecTrafficPolicyPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPatchOutput).ToDestinationRuleSpecTrafficPolicyPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPatchArgs, DestinationRuleSpecTrafficPolicyPatchPtr and DestinationRuleSpecTrafficPolicyPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPatchPtrOutput() DestinationRuleSpecTrafficPolicyPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyPatchPtrType DestinationRuleSpecTrafficPolicyPatchArgs

func DestinationRuleSpecTrafficPolicyPatchPtr(v *DestinationRuleSpecTrafficPolicyPatchArgs) DestinationRuleSpecTrafficPolicyPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPatchPtrType) ToDestinationRuleSpecTrafficPolicyPatchPtrOutput() DestinationRuleSpecTrafficPolicyPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPatchPtrType) ToDestinationRuleSpecTrafficPolicyPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPatchPtrOutput)
}

// Traffic policies to apply (load balancing policy, connection pool sizes, outlier detection).
type DestinationRuleSpecTrafficPolicyPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPatchOutput) ToDestinationRuleSpecTrafficPolicyPatchOutput() DestinationRuleSpecTrafficPolicyPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPatchOutput) ToDestinationRuleSpecTrafficPolicyPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPatchOutput) ToDestinationRuleSpecTrafficPolicyPatchPtrOutput() DestinationRuleSpecTrafficPolicyPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPatchOutput) ToDestinationRuleSpecTrafficPolicyPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPatch) *DestinationRuleSpecTrafficPolicyPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPatchOutput) ConnectionPool() DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPatch) *DestinationRuleSpecTrafficPolicyConnectionPoolPatch {
		return v.ConnectionPool
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPatchOutput) LoadBalancer() DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPatch) *DestinationRuleSpecTrafficPolicyLoadBalancerPatch {
		return v.LoadBalancer
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPatchOutput) OutlierDetection() DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPatch) *DestinationRuleSpecTrafficPolicyOutlierDetectionPatch {
		return v.OutlierDetection
	}).(DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput)
}

// Traffic policies specific to individual ports.
func (o DestinationRuleSpecTrafficPolicyPatchOutput) PortLevelSettings() DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPatch) []DestinationRuleSpecTrafficPolicyPortLevelSettingsPatch {
		return v.PortLevelSettings
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutput)
}

func (o DestinationRuleSpecTrafficPolicyPatchOutput) ProxyProtocol() DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPatch) *DestinationRuleSpecTrafficPolicyProxyProtocolPatch {
		return v.ProxyProtocol
	}).(DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPatchOutput) Tls() DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPatch) *DestinationRuleSpecTrafficPolicyTlsPatch { return v.Tls }).(DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPatchOutput) Tunnel() DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPatch) *DestinationRuleSpecTrafficPolicyTunnelPatch {
		return v.Tunnel
	}).(DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPatchPtrOutput() DestinationRuleSpecTrafficPolicyPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPatch) DestinationRuleSpecTrafficPolicyPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyPatchOutput)
}

func (o DestinationRuleSpecTrafficPolicyPatchPtrOutput) ConnectionPool() DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPatch) *DestinationRuleSpecTrafficPolicyConnectionPoolPatch {
		if v == nil {
			return nil
		}
		return v.ConnectionPool
	}).(DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPatchPtrOutput) LoadBalancer() DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPatch) *DestinationRuleSpecTrafficPolicyLoadBalancerPatch {
		if v == nil {
			return nil
		}
		return v.LoadBalancer
	}).(DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPatchPtrOutput) OutlierDetection() DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPatch) *DestinationRuleSpecTrafficPolicyOutlierDetectionPatch {
		if v == nil {
			return nil
		}
		return v.OutlierDetection
	}).(DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput)
}

// Traffic policies specific to individual ports.
func (o DestinationRuleSpecTrafficPolicyPatchPtrOutput) PortLevelSettings() DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPatch) []DestinationRuleSpecTrafficPolicyPortLevelSettingsPatch {
		if v == nil {
			return nil
		}
		return v.PortLevelSettings
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutput)
}

func (o DestinationRuleSpecTrafficPolicyPatchPtrOutput) ProxyProtocol() DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPatch) *DestinationRuleSpecTrafficPolicyProxyProtocolPatch {
		if v == nil {
			return nil
		}
		return v.ProxyProtocol
	}).(DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPatchPtrOutput) Tls() DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPatch) *DestinationRuleSpecTrafficPolicyTlsPatch {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPatchPtrOutput) Tunnel() DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPatch) *DestinationRuleSpecTrafficPolicyTunnelPatch {
		if v == nil {
			return nil
		}
		return v.Tunnel
	}).(DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettings struct {
	ConnectionPool   *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPool   `pulumi:"connectionPool"`
	LoadBalancer     *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancer     `pulumi:"loadBalancer"`
	OutlierDetection *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection `pulumi:"outlierDetection"`
	Port             *DestinationRuleSpecTrafficPolicyPortLevelSettingsPort             `pulumi:"port"`
	Tls              *DestinationRuleSpecTrafficPolicyPortLevelSettingsTls              `pulumi:"tls"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutput
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsArgs struct {
	ConnectionPool   DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrInput   `pulumi:"connectionPool"`
	LoadBalancer     DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrInput     `pulumi:"loadBalancer"`
	OutlierDetection DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrInput `pulumi:"outlierDetection"`
	Port             DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrInput             `pulumi:"port"`
	Tls              DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrInput              `pulumi:"tls"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettings)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsOutput)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsArrayInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsArray and DestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsArrayInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsArray{ DestinationRuleSpecTrafficPolicyPortLevelSettingsArgs{...} }
type DestinationRuleSpecTrafficPolicyPortLevelSettingsArrayInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutput
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsArray []DestinationRuleSpecTrafficPolicyPortLevelSettingsInput

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecTrafficPolicyPortLevelSettings)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsArray) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsArray) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettings)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutput) ConnectionPool() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettings) *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPool {
		return v.ConnectionPool
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutput) LoadBalancer() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettings) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancer {
		return v.LoadBalancer
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutput) OutlierDetection() DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettings) *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection {
		return v.OutlierDetection
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutput) Port() DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettings) *DestinationRuleSpecTrafficPolicyPortLevelSettingsPort {
		return v.Port
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutput) Tls() DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettings) *DestinationRuleSpecTrafficPolicyPortLevelSettingsTls {
		return v.Tls
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecTrafficPolicyPortLevelSettings)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutput) Index(i pulumi.IntInput) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DestinationRuleSpecTrafficPolicyPortLevelSettings {
		return vs[0].([]DestinationRuleSpecTrafficPolicyPortLevelSettings)[vs[1].(int)]
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPool struct {
	Http *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp `pulumi:"http"`
	Tcp  *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcp  `pulumi:"tcp"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutput
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolArgs struct {
	Http DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrInput `pulumi:"http"`
	Tcp  DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrInput  `pulumi:"tcp"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPool)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPool)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPool)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPool) *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPool {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutput) Http() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPool) *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp {
		return v.Http
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutput) Tcp() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPool) *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcp {
		return v.Tcp
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPool)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPool) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPool {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPool
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput) Http() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPool) *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput) Tcp() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPool) *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput)
}

// HTTP connection pool settings.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy *string `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests *int `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests *int `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams *int `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection *int `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries *int `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol *bool `pulumi:"useClientProtocol"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput
}

// HTTP connection pool settings.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy pulumi.StringPtrInput `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests pulumi.IntPtrInput `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests pulumi.IntPtrInput `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams pulumi.IntPtrInput `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection pulumi.IntPtrInput `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries pulumi.IntPtrInput `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol pulumi.BoolPtrInput `pulumi:"useClientProtocol"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput)
}

// HTTP connection pool settings.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp) *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp) *string {
		return v.H2UpgradePolicy
	}).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp) *int {
		return v.Http1MaxPendingRequests
	}).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp) *int {
		return v.Http2MaxRequests
	}).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp) *string {
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp) *int {
		return v.MaxConcurrentStreams
	}).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp) *int {
		return v.MaxRequestsPerConnection
	}).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp) *bool {
		return v.UseClientProtocol
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp) *string {
		if v == nil {
			return nil
		}
		return v.H2UpgradePolicy
	}).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.Http1MaxPendingRequests
	}).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.Http2MaxRequests
	}).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentStreams
	}).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestsPerConnection
	}).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttp) *bool {
		if v == nil {
			return nil
		}
		return v.UseClientProtocol
	}).(pulumi.BoolPtrOutput)
}

// HTTP connection pool settings.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy *string `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests *int `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests *int `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams *int `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection *int `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries *int `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol *bool `pulumi:"useClientProtocol"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput
}

// HTTP connection pool settings.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy pulumi.StringPtrInput `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests pulumi.IntPtrInput `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests pulumi.IntPtrInput `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams pulumi.IntPtrInput `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection pulumi.IntPtrInput `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries pulumi.IntPtrInput `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol pulumi.BoolPtrInput `pulumi:"useClientProtocol"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput)
}

// HTTP connection pool settings.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *string {
		return v.H2UpgradePolicy
	}).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *int {
		return v.Http1MaxPendingRequests
	}).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *int {
		return v.Http2MaxRequests
	}).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *string {
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *int {
		return v.MaxConcurrentStreams
	}).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *int {
		return v.MaxRequestsPerConnection
	}).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *int {
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *bool {
		return v.UseClientProtocol
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *string {
		if v == nil {
			return nil
		}
		return v.H2UpgradePolicy
	}).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.Http1MaxPendingRequests
	}).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.Http2MaxRequests
	}).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentStreams
	}).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestsPerConnection
	}).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch) *bool {
		if v == nil {
			return nil
		}
		return v.UseClientProtocol
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatch struct {
	Http *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch `pulumi:"http"`
	Tcp  *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch  `pulumi:"tcp"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs struct {
	Http DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrInput `pulumi:"http"`
	Tcp  DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrInput  `pulumi:"tcp"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput) Http() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch {
		return v.Http
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput) Tcp() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch {
		return v.Tcp
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatch) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput) Http() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatch {
		if v == nil {
			return nil
		}
		return v.Http
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput) Tcp() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcp struct {
	// TCP connection timeout.
	ConnectTimeout *string `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration *string `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections *int                                                                            `pulumi:"maxConnections"`
	TcpKeepalive   *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive `pulumi:"tcpKeepalive"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs struct {
	// TCP connection timeout.
	ConnectTimeout pulumi.StringPtrInput `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration pulumi.StringPtrInput `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections pulumi.IntPtrInput                                                                     `pulumi:"maxConnections"`
	TcpKeepalive   DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrInput `pulumi:"tcpKeepalive"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcp)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcp)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcp)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcp) *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcp {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput)
}

// TCP connection timeout.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcp) *string {
		return v.ConnectTimeout
	}).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcp) *string {
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcp) *string {
		return v.MaxConnectionDuration
	}).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcp) *int {
		return v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput) TcpKeepalive() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcp) *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive {
		return v.TcpKeepalive
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcp)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcp) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcp {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcp
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput)
}

// TCP connection timeout.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcp) *string {
		if v == nil {
			return nil
		}
		return v.ConnectTimeout
	}).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcp) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcp) *string {
		if v == nil {
			return nil
		}
		return v.MaxConnectionDuration
	}).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcp) *int {
		if v == nil {
			return nil
		}
		return v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput) TcpKeepalive() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcp) *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive {
		if v == nil {
			return nil
		}
		return v.TcpKeepalive
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch struct {
	// TCP connection timeout.
	ConnectTimeout *string `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration *string `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections *int                                                                                 `pulumi:"maxConnections"`
	TcpKeepalive   *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch `pulumi:"tcpKeepalive"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs struct {
	// TCP connection timeout.
	ConnectTimeout pulumi.StringPtrInput `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration pulumi.StringPtrInput `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections pulumi.IntPtrInput                                                                          `pulumi:"maxConnections"`
	TcpKeepalive   DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrInput `pulumi:"tcpKeepalive"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput)
}

// TCP connection timeout.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) *string {
		return v.ConnectTimeout
	}).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) *string {
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) *string {
		return v.MaxConnectionDuration
	}).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) *int {
		return v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput) TcpKeepalive() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch {
		return v.TcpKeepalive
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput)
}

// TCP connection timeout.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) *string {
		if v == nil {
			return nil
		}
		return v.ConnectTimeout
	}).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) *string {
		if v == nil {
			return nil
		}
		return v.MaxConnectionDuration
	}).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput) TcpKeepalive() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch {
		if v == nil {
			return nil
		}
		return v.TcpKeepalive
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive struct {
	// The time duration between keep-alive probes.
	Interval *string `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes *int `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time *string `pulumi:"time"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs struct {
	// The time duration between keep-alive probes.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes pulumi.IntPtrInput `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time pulumi.StringPtrInput `pulumi:"time"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive) *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput)
}

// The time duration between keep-alive probes.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive) *string {
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive) *int {
		return v.Probes
	}).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive) *string {
		return v.Time
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput)
}

// The time duration between keep-alive probes.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive) *int {
		if v == nil {
			return nil
		}
		return v.Probes
	}).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalive) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch struct {
	// The time duration between keep-alive probes.
	Interval *string `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes *int `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time *string `pulumi:"time"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs struct {
	// The time duration between keep-alive probes.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes pulumi.IntPtrInput `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time pulumi.StringPtrInput `pulumi:"time"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

// The time duration between keep-alive probes.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch) *string {
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch) *int {
		return v.Probes
	}).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch) *string {
		return v.Time
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch) DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput)
}

// The time duration between keep-alive probes.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch) *int {
		if v == nil {
			return nil
		}
		return v.Probes
	}).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatch) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancer struct {
	ConsistentHash    *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash    `pulumi:"consistentHash"`
	LocalityLbSetting *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting `pulumi:"localityLbSetting"`
	// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
	Simple *string `pulumi:"simple"`
	// Represents the warmup duration of Service.
	WarmupDurationSecs *string `pulumi:"warmupDurationSecs"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerArgs struct {
	ConsistentHash    DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrInput    `pulumi:"consistentHash"`
	LocalityLbSetting DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrInput `pulumi:"localityLbSetting"`
	// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
	Simple pulumi.StringPtrInput `pulumi:"simple"`
	// Represents the warmup duration of Service.
	WarmupDurationSecs pulumi.StringPtrInput `pulumi:"warmupDurationSecs"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancer)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancer)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput)
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancer)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancer) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancer {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput) ConsistentHash() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancer) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash {
		return v.ConsistentHash
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput) LocalityLbSetting() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancer) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting {
		return v.LocalityLbSetting
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput)
}

// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput) Simple() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancer) *string { return v.Simple }).(pulumi.StringPtrOutput)
}

// Represents the warmup duration of Service.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput) WarmupDurationSecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancer) *string {
		return v.WarmupDurationSecs
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancer)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancer) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancer {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancer
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput) ConsistentHash() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancer) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash {
		if v == nil {
			return nil
		}
		return v.ConsistentHash
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput) LocalityLbSetting() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancer) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting {
		if v == nil {
			return nil
		}
		return v.LocalityLbSetting
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput)
}

// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput) Simple() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.Simple
	}).(pulumi.StringPtrOutput)
}

// Represents the warmup duration of Service.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput) WarmupDurationSecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.WarmupDurationSecs
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash struct {
	HttpCookie *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie `pulumi:"httpCookie"`
	// Hash based on a specific HTTP header.
	HttpHeaderName *string `pulumi:"httpHeaderName"`
	// Hash based on a specific HTTP query parameter.
	HttpQueryParameterName *string                                                                            `pulumi:"httpQueryParameterName"`
	Maglev                 *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev `pulumi:"maglev"`
	// Deprecated.
	MinimumRingSize *int                                                                                 `pulumi:"minimumRingSize"`
	RingHash        *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash `pulumi:"ringHash"`
	// Hash based on the source IP address.
	UseSourceIp *bool `pulumi:"useSourceIp"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs struct {
	HttpCookie DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrInput `pulumi:"httpCookie"`
	// Hash based on a specific HTTP header.
	HttpHeaderName pulumi.StringPtrInput `pulumi:"httpHeaderName"`
	// Hash based on a specific HTTP query parameter.
	HttpQueryParameterName pulumi.StringPtrInput                                                                     `pulumi:"httpQueryParameterName"`
	Maglev                 DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrInput `pulumi:"maglev"`
	// Deprecated.
	MinimumRingSize pulumi.IntPtrInput                                                                          `pulumi:"minimumRingSize"`
	RingHash        DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrInput `pulumi:"ringHash"`
	// Hash based on the source IP address.
	UseSourceIp pulumi.BoolPtrInput `pulumi:"useSourceIp"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) HttpCookie() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie {
		return v.HttpCookie
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput)
}

// Hash based on a specific HTTP header.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) HttpHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *string {
		return v.HttpHeaderName
	}).(pulumi.StringPtrOutput)
}

// Hash based on a specific HTTP query parameter.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) HttpQueryParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *string {
		return v.HttpQueryParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) Maglev() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev {
		return v.Maglev
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput)
}

// Deprecated.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *int {
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) RingHash() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash {
		return v.RingHash
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput)
}

// Hash based on the source IP address.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput) UseSourceIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *bool {
		return v.UseSourceIp
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput) HttpCookie() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie {
		if v == nil {
			return nil
		}
		return v.HttpCookie
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput)
}

// Hash based on a specific HTTP header.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput) HttpHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *string {
		if v == nil {
			return nil
		}
		return v.HttpHeaderName
	}).(pulumi.StringPtrOutput)
}

// Hash based on a specific HTTP query parameter.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput) HttpQueryParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *string {
		if v == nil {
			return nil
		}
		return v.HttpQueryParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput) Maglev() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev {
		if v == nil {
			return nil
		}
		return v.Maglev
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput)
}

// Deprecated.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *int {
		if v == nil {
			return nil
		}
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput) RingHash() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash {
		if v == nil {
			return nil
		}
		return v.RingHash
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput)
}

// Hash based on the source IP address.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput) UseSourceIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHash) *bool {
		if v == nil {
			return nil
		}
		return v.UseSourceIp
	}).(pulumi.BoolPtrOutput)
}

// Hash based on HTTP cookie.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie struct {
	// Name of the cookie.
	Name *string `pulumi:"name"`
	// Path to set for the cookie.
	Path *string `pulumi:"path"`
	// Lifetime of the cookie.
	Ttl *string `pulumi:"ttl"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput
}

// Hash based on HTTP cookie.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs struct {
	// Name of the cookie.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path to set for the cookie.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Lifetime of the cookie.
	Ttl pulumi.StringPtrInput `pulumi:"ttl"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput)
}

// Hash based on HTTP cookie.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput)
}

// Name of the cookie.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Path to set for the cookie.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie) *string {
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Lifetime of the cookie.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie) *string {
		return v.Ttl
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput)
}

// Name of the cookie.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Path to set for the cookie.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Lifetime of the cookie.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookie) *string {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.StringPtrOutput)
}

// Hash based on HTTP cookie.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch struct {
	// Name of the cookie.
	Name *string `pulumi:"name"`
	// Path to set for the cookie.
	Path *string `pulumi:"path"`
	// Lifetime of the cookie.
	Ttl *string `pulumi:"ttl"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput
}

// Hash based on HTTP cookie.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs struct {
	// Name of the cookie.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path to set for the cookie.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Lifetime of the cookie.
	Ttl pulumi.StringPtrInput `pulumi:"ttl"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput)
}

// Hash based on HTTP cookie.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput)
}

// Name of the cookie.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Path to set for the cookie.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch) *string {
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Lifetime of the cookie.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch) *string {
		return v.Ttl
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput)
}

// Name of the cookie.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Path to set for the cookie.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Lifetime of the cookie.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch) *string {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.StringPtrOutput)
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev struct {
	// The table size for Maglev hashing.
	TableSize *int `pulumi:"tableSize"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs struct {
	// The table size for Maglev hashing.
	TableSize pulumi.IntPtrInput `pulumi:"tableSize"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput)
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput)
}

// The table size for Maglev hashing.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput) TableSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev) *int {
		return v.TableSize
	}).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput)
}

// The table size for Maglev hashing.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput) TableSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglev) *int {
		if v == nil {
			return nil
		}
		return v.TableSize
	}).(pulumi.IntPtrOutput)
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch struct {
	// The table size for Maglev hashing.
	TableSize *int `pulumi:"tableSize"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs struct {
	// The table size for Maglev hashing.
	TableSize pulumi.IntPtrInput `pulumi:"tableSize"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput)
}

// The Maglev load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput)
}

// The table size for Maglev hashing.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput) TableSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch) *int {
		return v.TableSize
	}).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput)
}

// The table size for Maglev hashing.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput) TableSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch) *int {
		if v == nil {
			return nil
		}
		return v.TableSize
	}).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch struct {
	HttpCookie *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch `pulumi:"httpCookie"`
	// Hash based on a specific HTTP header.
	HttpHeaderName *string `pulumi:"httpHeaderName"`
	// Hash based on a specific HTTP query parameter.
	HttpQueryParameterName *string                                                                                 `pulumi:"httpQueryParameterName"`
	Maglev                 *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch `pulumi:"maglev"`
	// Deprecated.
	MinimumRingSize *int                                                                                      `pulumi:"minimumRingSize"`
	RingHash        *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch `pulumi:"ringHash"`
	// Hash based on the source IP address.
	UseSourceIp *bool `pulumi:"useSourceIp"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs struct {
	HttpCookie DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrInput `pulumi:"httpCookie"`
	// Hash based on a specific HTTP header.
	HttpHeaderName pulumi.StringPtrInput `pulumi:"httpHeaderName"`
	// Hash based on a specific HTTP query parameter.
	HttpQueryParameterName pulumi.StringPtrInput                                                                          `pulumi:"httpQueryParameterName"`
	Maglev                 DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrInput `pulumi:"maglev"`
	// Deprecated.
	MinimumRingSize pulumi.IntPtrInput                                                                               `pulumi:"minimumRingSize"`
	RingHash        DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrInput `pulumi:"ringHash"`
	// Hash based on the source IP address.
	UseSourceIp pulumi.BoolPtrInput `pulumi:"useSourceIp"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) HttpCookie() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch {
		return v.HttpCookie
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput)
}

// Hash based on a specific HTTP header.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) HttpHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *string {
		return v.HttpHeaderName
	}).(pulumi.StringPtrOutput)
}

// Hash based on a specific HTTP query parameter.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) HttpQueryParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *string {
		return v.HttpQueryParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) Maglev() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch {
		return v.Maglev
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput)
}

// Deprecated.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *int {
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) RingHash() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch {
		return v.RingHash
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput)
}

// Hash based on the source IP address.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput) UseSourceIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *bool {
		return v.UseSourceIp
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput) HttpCookie() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatch {
		if v == nil {
			return nil
		}
		return v.HttpCookie
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput)
}

// Hash based on a specific HTTP header.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput) HttpHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *string {
		if v == nil {
			return nil
		}
		return v.HttpHeaderName
	}).(pulumi.StringPtrOutput)
}

// Hash based on a specific HTTP query parameter.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput) HttpQueryParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *string {
		if v == nil {
			return nil
		}
		return v.HttpQueryParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput) Maglev() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatch {
		if v == nil {
			return nil
		}
		return v.Maglev
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput)
}

// Deprecated.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *int {
		if v == nil {
			return nil
		}
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput) RingHash() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch {
		if v == nil {
			return nil
		}
		return v.RingHash
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput)
}

// Hash based on the source IP address.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput) UseSourceIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch) *bool {
		if v == nil {
			return nil
		}
		return v.UseSourceIp
	}).(pulumi.BoolPtrOutput)
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash struct {
	// The minimum number of virtual nodes to use for the hash ring.
	MinimumRingSize *int `pulumi:"minimumRingSize"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs struct {
	// The minimum number of virtual nodes to use for the hash ring.
	MinimumRingSize pulumi.IntPtrInput `pulumi:"minimumRingSize"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput)
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput)
}

// The minimum number of virtual nodes to use for the hash ring.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash) *int {
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput)
}

// The minimum number of virtual nodes to use for the hash ring.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHash) *int {
		if v == nil {
			return nil
		}
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch struct {
	// The minimum number of virtual nodes to use for the hash ring.
	MinimumRingSize *int `pulumi:"minimumRingSize"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs struct {
	// The minimum number of virtual nodes to use for the hash ring.
	MinimumRingSize pulumi.IntPtrInput `pulumi:"minimumRingSize"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput)
}

// The ring/modulo hash load balancer implements consistent hashing to backend hosts.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput)
}

// The minimum number of virtual nodes to use for the hash ring.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch) *int {
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput)
}

// The minimum number of virtual nodes to use for the hash ring.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatch) *int {
		if v == nil {
			return nil
		}
		return v.MinimumRingSize
	}).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting struct {
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Distribute []DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute `pulumi:"distribute"`
	// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
	Enabled *bool `pulumi:"enabled"`
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Failover []DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover `pulumi:"failover"`
	// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
	FailoverPriority []string `pulumi:"failoverPriority"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs struct {
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Distribute DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayInput `pulumi:"distribute"`
	// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Failover DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayInput `pulumi:"failover"`
	// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
	FailoverPriority pulumi.StringArrayInput `pulumi:"failoverPriority"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput) Distribute() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting) []DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute {
		return v.Distribute
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput)
}

// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput) Failover() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting) []DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover {
		return v.Failover
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput)
}

// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput) FailoverPriority() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting) []string {
		return v.FailoverPriority
	}).(pulumi.StringArrayOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput) Distribute() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting) []DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute {
		if v == nil {
			return nil
		}
		return v.Distribute
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput)
}

// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput) Failover() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting) []DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover {
		if v == nil {
			return nil
		}
		return v.Failover
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput)
}

// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput) FailoverPriority() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSetting) []string {
		if v == nil {
			return nil
		}
		return v.FailoverPriority
	}).(pulumi.StringArrayOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute struct {
	// Originating locality, '/' separated, e.g.
	From *string `pulumi:"from"`
	// Map of upstream localities to traffic distribution weights.
	To map[string]int `pulumi:"to"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArgs struct {
	// Originating locality, '/' separated, e.g.
	From pulumi.StringPtrInput `pulumi:"from"`
	// Map of upstream localities to traffic distribution weights.
	To pulumi.IntMapInput `pulumi:"to"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArray and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArray{ DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArgs{...} }
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArray []DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeInput

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArray) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArray) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput {
	return o
}

// Originating locality, '/' separated, e.g.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute) *string {
		return v.From
	}).(pulumi.StringPtrOutput)
}

// Map of upstream localities to traffic distribution weights.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput) To() pulumi.IntMapOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute) map[string]int {
		return v.To
	}).(pulumi.IntMapOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput) Index(i pulumi.IntInput) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute {
		return vs[0].([]DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistribute)[vs[1].(int)]
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch struct {
	// Originating locality, '/' separated, e.g.
	From *string `pulumi:"from"`
	// Map of upstream localities to traffic distribution weights.
	To map[string]int `pulumi:"to"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArgs struct {
	// Originating locality, '/' separated, e.g.
	From pulumi.StringPtrInput `pulumi:"from"`
	// Map of upstream localities to traffic distribution weights.
	To pulumi.IntMapInput `pulumi:"to"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArray and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArray{ DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArgs{...} }
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArray []DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchInput

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArray) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArray) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput {
	return o
}

// Originating locality, '/' separated, e.g.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch) *string {
		return v.From
	}).(pulumi.StringPtrOutput)
}

// Map of upstream localities to traffic distribution weights.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput) To() pulumi.IntMapOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch) map[string]int {
		return v.To
	}).(pulumi.IntMapOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput) Index(i pulumi.IntInput) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch {
		return vs[0].([]DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch)[vs[1].(int)]
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover struct {
	// Originating region.
	From *string `pulumi:"from"`
	// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
	To *string `pulumi:"to"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArgs struct {
	// Originating region.
	From pulumi.StringPtrInput `pulumi:"from"`
	// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
	To pulumi.StringPtrInput `pulumi:"to"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArray and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArray{ DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArgs{...} }
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArray []DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverInput

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArray) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArray) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput {
	return o
}

// Originating region.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover) *string {
		return v.From
	}).(pulumi.StringPtrOutput)
}

// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover) *string {
		return v.To
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput) Index(i pulumi.IntInput) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover {
		return vs[0].([]DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailover)[vs[1].(int)]
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch struct {
	// Originating region.
	From *string `pulumi:"from"`
	// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
	To *string `pulumi:"to"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArgs struct {
	// Originating region.
	From pulumi.StringPtrInput `pulumi:"from"`
	// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
	To pulumi.StringPtrInput `pulumi:"to"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArray and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArray{ DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArgs{...} }
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArray []DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchInput

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArray) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArray) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput {
	return o
}

// Originating region.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch) *string {
		return v.From
	}).(pulumi.StringPtrOutput)
}

// Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch) *string {
		return v.To
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput) Index(i pulumi.IntInput) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch {
		return vs[0].([]DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch)[vs[1].(int)]
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch struct {
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Distribute []DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch `pulumi:"distribute"`
	// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
	Enabled *bool `pulumi:"enabled"`
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Failover []DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch `pulumi:"failover"`
	// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
	FailoverPriority []string `pulumi:"failoverPriority"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs struct {
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Distribute DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayInput `pulumi:"distribute"`
	// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Optional: only one of distribute, failover or failoverPriority can be set.
	Failover DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayInput `pulumi:"failover"`
	// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
	FailoverPriority pulumi.StringArrayInput `pulumi:"failoverPriority"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput) Distribute() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch) []DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch {
		return v.Distribute
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput)
}

// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput) Failover() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch) []DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch {
		return v.Failover
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput)
}

// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput) FailoverPriority() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch) []string {
		return v.FailoverPriority
	}).(pulumi.StringArrayOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput) Distribute() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch) []DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatch {
		if v == nil {
			return nil
		}
		return v.Distribute
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput)
}

// enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Optional: only one of distribute, failover or failoverPriority can be set.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput) Failover() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch) []DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatch {
		if v == nil {
			return nil
		}
		return v.Failover
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput)
}

// failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput) FailoverPriority() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch) []string {
		if v == nil {
			return nil
		}
		return v.FailoverPriority
	}).(pulumi.StringArrayOutput)
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatch struct {
	ConsistentHash    *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch    `pulumi:"consistentHash"`
	LocalityLbSetting *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch `pulumi:"localityLbSetting"`
	// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
	Simple *string `pulumi:"simple"`
	// Represents the warmup duration of Service.
	WarmupDurationSecs *string `pulumi:"warmupDurationSecs"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs struct {
	ConsistentHash    DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrInput    `pulumi:"consistentHash"`
	LocalityLbSetting DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrInput `pulumi:"localityLbSetting"`
	// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
	Simple pulumi.StringPtrInput `pulumi:"simple"`
	// Represents the warmup duration of Service.
	WarmupDurationSecs pulumi.StringPtrInput `pulumi:"warmupDurationSecs"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput)
}

// Settings controlling the load balancer algorithms.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput) ConsistentHash() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch {
		return v.ConsistentHash
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput) LocalityLbSetting() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch {
		return v.LocalityLbSetting
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput)
}

// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput) Simple() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatch) *string { return v.Simple }).(pulumi.StringPtrOutput)
}

// Represents the warmup duration of Service.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput) WarmupDurationSecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatch) *string {
		return v.WarmupDurationSecs
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatch) DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput) ConsistentHash() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatch {
		if v == nil {
			return nil
		}
		return v.ConsistentHash
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput) LocalityLbSetting() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatch {
		if v == nil {
			return nil
		}
		return v.LocalityLbSetting
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput)
}

// Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput) Simple() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatch) *string {
		if v == nil {
			return nil
		}
		return v.Simple
	}).(pulumi.StringPtrOutput)
}

// Represents the warmup duration of Service.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput) WarmupDurationSecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatch) *string {
		if v == nil {
			return nil
		}
		return v.WarmupDurationSecs
	}).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection struct {
	// Minimum ejection duration.
	BaseEjectionTime *string `pulumi:"baseEjectionTime"`
	// Number of 5xx errors before a host is ejected from the connection pool.
	Consecutive5xxErrors *int `pulumi:"consecutive5xxErrors"`
	ConsecutiveErrors    *int `pulumi:"consecutiveErrors"`
	// Number of gateway errors before a host is ejected from the connection pool.
	ConsecutiveGatewayErrors *int `pulumi:"consecutiveGatewayErrors"`
	// The number of consecutive locally originated failures before ejection occurs.
	ConsecutiveLocalOriginFailures *int `pulumi:"consecutiveLocalOriginFailures"`
	// Time interval between ejection sweep analysis.
	Interval *string `pulumi:"interval"`
	// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
	MaxEjectionPercent *int `pulumi:"maxEjectionPercent"`
	// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
	MinHealthPercent *int `pulumi:"minHealthPercent"`
	// Determines whether to distinguish local origin failures from external errors.
	SplitExternalLocalOriginErrors *bool `pulumi:"splitExternalLocalOriginErrors"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionArgs struct {
	// Minimum ejection duration.
	BaseEjectionTime pulumi.StringPtrInput `pulumi:"baseEjectionTime"`
	// Number of 5xx errors before a host is ejected from the connection pool.
	Consecutive5xxErrors pulumi.IntPtrInput `pulumi:"consecutive5xxErrors"`
	ConsecutiveErrors    pulumi.IntPtrInput `pulumi:"consecutiveErrors"`
	// Number of gateway errors before a host is ejected from the connection pool.
	ConsecutiveGatewayErrors pulumi.IntPtrInput `pulumi:"consecutiveGatewayErrors"`
	// The number of consecutive locally originated failures before ejection occurs.
	ConsecutiveLocalOriginFailures pulumi.IntPtrInput `pulumi:"consecutiveLocalOriginFailures"`
	// Time interval between ejection sweep analysis.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
	MaxEjectionPercent pulumi.IntPtrInput `pulumi:"maxEjectionPercent"`
	// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
	MinHealthPercent pulumi.IntPtrInput `pulumi:"minHealthPercent"`
	// Determines whether to distinguish local origin failures from external errors.
	SplitExternalLocalOriginErrors pulumi.BoolPtrInput `pulumi:"splitExternalLocalOriginErrors"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection) *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput)
}

// Minimum ejection duration.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput) BaseEjectionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection) *string {
		return v.BaseEjectionTime
	}).(pulumi.StringPtrOutput)
}

// Number of 5xx errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput) Consecutive5xxErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		return v.Consecutive5xxErrors
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput) ConsecutiveErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		return v.ConsecutiveErrors
	}).(pulumi.IntPtrOutput)
}

// Number of gateway errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput) ConsecutiveGatewayErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		return v.ConsecutiveGatewayErrors
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive locally originated failures before ejection occurs.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput) ConsecutiveLocalOriginFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		return v.ConsecutiveLocalOriginFailures
	}).(pulumi.IntPtrOutput)
}

// Time interval between ejection sweep analysis.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput) MaxEjectionPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		return v.MaxEjectionPercent
	}).(pulumi.IntPtrOutput)
}

// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput) MinHealthPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		return v.MinHealthPercent
	}).(pulumi.IntPtrOutput)
}

// Determines whether to distinguish local origin failures from external errors.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput) SplitExternalLocalOriginErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection) *bool {
		return v.SplitExternalLocalOriginErrors
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput)
}

// Minimum ejection duration.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) BaseEjectionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection) *string {
		if v == nil {
			return nil
		}
		return v.BaseEjectionTime
	}).(pulumi.StringPtrOutput)
}

// Number of 5xx errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) Consecutive5xxErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.Consecutive5xxErrors
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) ConsecutiveErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveErrors
	}).(pulumi.IntPtrOutput)
}

// Number of gateway errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) ConsecutiveGatewayErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveGatewayErrors
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive locally originated failures before ejection occurs.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) ConsecutiveLocalOriginFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveLocalOriginFailures
	}).(pulumi.IntPtrOutput)
}

// Time interval between ejection sweep analysis.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) MaxEjectionPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.MaxEjectionPercent
	}).(pulumi.IntPtrOutput)
}

// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) MinHealthPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return v.MinHealthPercent
	}).(pulumi.IntPtrOutput)
}

// Determines whether to distinguish local origin failures from external errors.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput) SplitExternalLocalOriginErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetection) *bool {
		if v == nil {
			return nil
		}
		return v.SplitExternalLocalOriginErrors
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch struct {
	// Minimum ejection duration.
	BaseEjectionTime *string `pulumi:"baseEjectionTime"`
	// Number of 5xx errors before a host is ejected from the connection pool.
	Consecutive5xxErrors *int `pulumi:"consecutive5xxErrors"`
	ConsecutiveErrors    *int `pulumi:"consecutiveErrors"`
	// Number of gateway errors before a host is ejected from the connection pool.
	ConsecutiveGatewayErrors *int `pulumi:"consecutiveGatewayErrors"`
	// The number of consecutive locally originated failures before ejection occurs.
	ConsecutiveLocalOriginFailures *int `pulumi:"consecutiveLocalOriginFailures"`
	// Time interval between ejection sweep analysis.
	Interval *string `pulumi:"interval"`
	// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
	MaxEjectionPercent *int `pulumi:"maxEjectionPercent"`
	// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
	MinHealthPercent *int `pulumi:"minHealthPercent"`
	// Determines whether to distinguish local origin failures from external errors.
	SplitExternalLocalOriginErrors *bool `pulumi:"splitExternalLocalOriginErrors"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs struct {
	// Minimum ejection duration.
	BaseEjectionTime pulumi.StringPtrInput `pulumi:"baseEjectionTime"`
	// Number of 5xx errors before a host is ejected from the connection pool.
	Consecutive5xxErrors pulumi.IntPtrInput `pulumi:"consecutive5xxErrors"`
	ConsecutiveErrors    pulumi.IntPtrInput `pulumi:"consecutiveErrors"`
	// Number of gateway errors before a host is ejected from the connection pool.
	ConsecutiveGatewayErrors pulumi.IntPtrInput `pulumi:"consecutiveGatewayErrors"`
	// The number of consecutive locally originated failures before ejection occurs.
	ConsecutiveLocalOriginFailures pulumi.IntPtrInput `pulumi:"consecutiveLocalOriginFailures"`
	// Time interval between ejection sweep analysis.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
	MaxEjectionPercent pulumi.IntPtrInput `pulumi:"maxEjectionPercent"`
	// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
	MinHealthPercent pulumi.IntPtrInput `pulumi:"minHealthPercent"`
	// Determines whether to distinguish local origin failures from external errors.
	SplitExternalLocalOriginErrors pulumi.BoolPtrInput `pulumi:"splitExternalLocalOriginErrors"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput)
}

// Minimum ejection duration.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) BaseEjectionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *string {
		return v.BaseEjectionTime
	}).(pulumi.StringPtrOutput)
}

// Number of 5xx errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) Consecutive5xxErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		return v.Consecutive5xxErrors
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) ConsecutiveErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		return v.ConsecutiveErrors
	}).(pulumi.IntPtrOutput)
}

// Number of gateway errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) ConsecutiveGatewayErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		return v.ConsecutiveGatewayErrors
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive locally originated failures before ejection occurs.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) ConsecutiveLocalOriginFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		return v.ConsecutiveLocalOriginFailures
	}).(pulumi.IntPtrOutput)
}

// Time interval between ejection sweep analysis.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *string {
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) MaxEjectionPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		return v.MaxEjectionPercent
	}).(pulumi.IntPtrOutput)
}

// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) MinHealthPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		return v.MinHealthPercent
	}).(pulumi.IntPtrOutput)
}

// Determines whether to distinguish local origin failures from external errors.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput) SplitExternalLocalOriginErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *bool {
		return v.SplitExternalLocalOriginErrors
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch) DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput)
}

// Minimum ejection duration.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) BaseEjectionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *string {
		if v == nil {
			return nil
		}
		return v.BaseEjectionTime
	}).(pulumi.StringPtrOutput)
}

// Number of 5xx errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) Consecutive5xxErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.Consecutive5xxErrors
	}).(pulumi.IntPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) ConsecutiveErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveErrors
	}).(pulumi.IntPtrOutput)
}

// Number of gateway errors before a host is ejected from the connection pool.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) ConsecutiveGatewayErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveGatewayErrors
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive locally originated failures before ejection occurs.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) ConsecutiveLocalOriginFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveLocalOriginFailures
	}).(pulumi.IntPtrOutput)
}

// Time interval between ejection sweep analysis.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) MaxEjectionPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxEjectionPercent
	}).(pulumi.IntPtrOutput)
}

// Outlier detection will be enabled as long as the associated load balancing pool has at least min_health_percent hosts in healthy mode.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) MinHealthPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *int {
		if v == nil {
			return nil
		}
		return v.MinHealthPercent
	}).(pulumi.IntPtrOutput)
}

// Determines whether to distinguish local origin failures from external errors.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput) SplitExternalLocalOriginErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch) *bool {
		if v == nil {
			return nil
		}
		return v.SplitExternalLocalOriginErrors
	}).(pulumi.BoolPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsPatch struct {
	ConnectionPool   *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatch   `pulumi:"connectionPool"`
	LoadBalancer     *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatch     `pulumi:"loadBalancer"`
	OutlierDetection *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch `pulumi:"outlierDetection"`
	Port             *DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatch             `pulumi:"port"`
	Tls              *DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch              `pulumi:"tls"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutput
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArgs struct {
	ConnectionPool   DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrInput   `pulumi:"connectionPool"`
	LoadBalancer     DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrInput     `pulumi:"loadBalancer"`
	OutlierDetection DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrInput `pulumi:"outlierDetection"`
	Port             DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrInput             `pulumi:"port"`
	Tls              DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrInput              `pulumi:"tls"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutput)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArray and DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArray{ DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArgs{...} }
type DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutput
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArray []DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchInput

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecTrafficPolicyPortLevelSettingsPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArray) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArray) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutput) ConnectionPool() DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatch {
		return v.ConnectionPool
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutput) LoadBalancer() DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatch {
		return v.LoadBalancer
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutput) OutlierDetection() DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatch {
		return v.OutlierDetection
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutput) Port() DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatch {
		return v.Port
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutput) Tls() DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch {
		return v.Tls
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DestinationRuleSpecTrafficPolicyPortLevelSettingsPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutput) Index(i pulumi.IntInput) DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DestinationRuleSpecTrafficPolicyPortLevelSettingsPatch {
		return vs[0].([]DestinationRuleSpecTrafficPolicyPortLevelSettingsPatch)[vs[1].(int)]
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutput)
}

// Specifies the number of a port on the destination service on which this policy is being applied.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsPort struct {
	Number *int `pulumi:"number"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsPortInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsPortArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsPortInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsPortArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsPortInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutput
}

// Specifies the number of a port on the destination service on which this policy is being applied.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsPortArgs struct {
	Number pulumi.IntPtrInput `pulumi:"number"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsPort)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsPortArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsPortArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsPortArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsPortArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsPortArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsPortArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsPortArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsPortArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsPort)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput)
}

// Specifies the number of a port on the destination service on which this policy is being applied.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsPort)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsPort) *DestinationRuleSpecTrafficPolicyPortLevelSettingsPort {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsPort) *int { return v.Number }).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsPort)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsPort) DestinationRuleSpecTrafficPolicyPortLevelSettingsPort {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsPort
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsPort) *int {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.IntPtrOutput)
}

// Specifies the number of a port on the destination service on which this policy is being applied.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatch struct {
	Number *int `pulumi:"number"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutput
}

// Specifies the number of a port on the destination service on which this policy is being applied.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchArgs struct {
	Number pulumi.IntPtrInput `pulumi:"number"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput)
}

// Specifies the number of a port on the destination service on which this policy is being applied.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatch) *int { return v.Number }).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatch) DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutput)
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatch) *int {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.IntPtrOutput)
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsTls struct {
	// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
	CaCertificates *string `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
	CaCrl *string `pulumi:"caCrl"`
	// REQUIRED if mode is `MUTUAL`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// The name of the secret that holds the TLS certs for the client including the CA certificates.
	CredentialName *string `pulumi:"credentialName"`
	// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
	InsecureSkipVerify *bool `pulumi:"insecureSkipVerify"`
	// Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
	Mode *string `pulumi:"mode"`
	// REQUIRED if mode is `MUTUAL`.
	PrivateKey *string `pulumi:"privateKey"`
	// SNI string to present to the server during TLS handshake.
	Sni *string `pulumi:"sni"`
	// A list of alternate names to verify the subject identity in the certificate.
	SubjectAltNames []string `pulumi:"subjectAltNames"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsArgs struct {
	// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
	CaCertificates pulumi.StringPtrInput `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
	CaCrl pulumi.StringPtrInput `pulumi:"caCrl"`
	// REQUIRED if mode is `MUTUAL`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// The name of the secret that holds the TLS certs for the client including the CA certificates.
	CredentialName pulumi.StringPtrInput `pulumi:"credentialName"`
	// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
	InsecureSkipVerify pulumi.BoolPtrInput `pulumi:"insecureSkipVerify"`
	// Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// REQUIRED if mode is `MUTUAL`.
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
	// SNI string to present to the server during TLS handshake.
	Sni pulumi.StringPtrInput `pulumi:"sni"`
	// A list of alternate names to verify the subject identity in the certificate.
	SubjectAltNames pulumi.StringArrayInput `pulumi:"subjectAltNames"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsTls)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsTls)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput)
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsTls)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsTls) *DestinationRuleSpecTrafficPolicyPortLevelSettingsTls {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput)
}

// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsTls) *string { return v.CaCertificates }).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsTls) *string { return v.CaCrl }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsTls) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// The name of the secret that holds the TLS certs for the client including the CA certificates.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsTls) *string { return v.CredentialName }).(pulumi.StringPtrOutput)
}

// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsTls) *bool { return v.InsecureSkipVerify }).(pulumi.BoolPtrOutput)
}

// Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsTls) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsTls) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// SNI string to present to the server during TLS handshake.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput) Sni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsTls) *string { return v.Sni }).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsTls) []string { return v.SubjectAltNames }).(pulumi.StringArrayOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsTls)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsTls) DestinationRuleSpecTrafficPolicyPortLevelSettingsTls {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsTls
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput)
}

// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsTls) *string {
		if v == nil {
			return nil
		}
		return v.CaCertificates
	}).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsTls) *string {
		if v == nil {
			return nil
		}
		return v.CaCrl
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsTls) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// The name of the secret that holds the TLS certs for the client including the CA certificates.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsTls) *string {
		if v == nil {
			return nil
		}
		return v.CredentialName
	}).(pulumi.StringPtrOutput)
}

// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsTls) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSkipVerify
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsTls) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsTls) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

// SNI string to present to the server during TLS handshake.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput) Sni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsTls) *string {
		if v == nil {
			return nil
		}
		return v.Sni
	}).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsTls) []string {
		if v == nil {
			return nil
		}
		return v.SubjectAltNames
	}).(pulumi.StringArrayOutput)
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch struct {
	// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
	CaCertificates *string `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
	CaCrl *string `pulumi:"caCrl"`
	// REQUIRED if mode is `MUTUAL`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// The name of the secret that holds the TLS certs for the client including the CA certificates.
	CredentialName *string `pulumi:"credentialName"`
	// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
	InsecureSkipVerify *bool `pulumi:"insecureSkipVerify"`
	// Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
	Mode *string `pulumi:"mode"`
	// REQUIRED if mode is `MUTUAL`.
	PrivateKey *string `pulumi:"privateKey"`
	// SNI string to present to the server during TLS handshake.
	Sni *string `pulumi:"sni"`
	// A list of alternate names to verify the subject identity in the certificate.
	SubjectAltNames []string `pulumi:"subjectAltNames"`
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchArgs and DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchArgs{...}
type DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchArgs struct {
	// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
	CaCertificates pulumi.StringPtrInput `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
	CaCrl pulumi.StringPtrInput `pulumi:"caCrl"`
	// REQUIRED if mode is `MUTUAL`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// The name of the secret that holds the TLS certs for the client including the CA certificates.
	CredentialName pulumi.StringPtrInput `pulumi:"credentialName"`
	// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
	InsecureSkipVerify pulumi.BoolPtrInput `pulumi:"insecureSkipVerify"`
	// Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// REQUIRED if mode is `MUTUAL`.
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
	// SNI string to present to the server during TLS handshake.
	Sni pulumi.StringPtrInput `pulumi:"sni"`
	// A list of alternate names to verify the subject identity in the certificate.
	SubjectAltNames pulumi.StringArrayInput `pulumi:"subjectAltNames"`
}

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchArgs) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput).ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchArgs, DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtr and DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrType DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchArgs

func DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtr(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchArgs) DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrType) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput)
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch) *DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput)
}

// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch) *string { return v.CaCertificates }).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch) *string { return v.CaCrl }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// The name of the secret that holds the TLS certs for the client including the CA certificates.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch) *string { return v.CredentialName }).(pulumi.StringPtrOutput)
}

// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch) *bool { return v.InsecureSkipVerify }).(pulumi.BoolPtrOutput)
}

// Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// SNI string to present to the server during TLS handshake.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput) Sni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch) *string { return v.Sni }).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch) []string { return v.SubjectAltNames }).(pulumi.StringArrayOutput)
}

type DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput() DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch) DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput)
}

// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaCertificates
	}).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaCrl
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// The name of the secret that holds the TLS certs for the client including the CA certificates.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.CredentialName
	}).(pulumi.StringPtrOutput)
}

// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSkipVerify
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

// SNI string to present to the server during TLS handshake.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) Sni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Sni
	}).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate.
func (o DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatch) []string {
		if v == nil {
			return nil
		}
		return v.SubjectAltNames
	}).(pulumi.StringArrayOutput)
}

// The upstream PROXY protocol settings.
type DestinationRuleSpecTrafficPolicyProxyProtocol struct {
	// The PROXY protocol version to use.
	//
	// Valid Options: V1, V2
	Version *string `pulumi:"version"`
}

// DestinationRuleSpecTrafficPolicyProxyProtocolInput is an input type that accepts DestinationRuleSpecTrafficPolicyProxyProtocolArgs and DestinationRuleSpecTrafficPolicyProxyProtocolOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyProxyProtocolInput` via:
//
//	DestinationRuleSpecTrafficPolicyProxyProtocolArgs{...}
type DestinationRuleSpecTrafficPolicyProxyProtocolInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyProxyProtocolOutput() DestinationRuleSpecTrafficPolicyProxyProtocolOutput
	ToDestinationRuleSpecTrafficPolicyProxyProtocolOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyProxyProtocolOutput
}

// The upstream PROXY protocol settings.
type DestinationRuleSpecTrafficPolicyProxyProtocolArgs struct {
	// The PROXY protocol version to use.
	//
	// Valid Options: V1, V2
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (DestinationRuleSpecTrafficPolicyProxyProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyProxyProtocol)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyProxyProtocolArgs) ToDestinationRuleSpecTrafficPolicyProxyProtocolOutput() DestinationRuleSpecTrafficPolicyProxyProtocolOutput {
	return i.ToDestinationRuleSpecTrafficPolicyProxyProtocolOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyProxyProtocolArgs) ToDestinationRuleSpecTrafficPolicyProxyProtocolOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyProxyProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyProxyProtocolOutput)
}

func (i DestinationRuleSpecTrafficPolicyProxyProtocolArgs) ToDestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput() DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyProxyProtocolPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyProxyProtocolArgs) ToDestinationRuleSpecTrafficPolicyProxyProtocolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyProxyProtocolOutput).ToDestinationRuleSpecTrafficPolicyProxyProtocolPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyProxyProtocolPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyProxyProtocolArgs, DestinationRuleSpecTrafficPolicyProxyProtocolPtr and DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyProxyProtocolPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyProxyProtocolArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyProxyProtocolPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput() DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput
	ToDestinationRuleSpecTrafficPolicyProxyProtocolPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput
}

type destinationRuleSpecTrafficPolicyProxyProtocolPtrType DestinationRuleSpecTrafficPolicyProxyProtocolArgs

func DestinationRuleSpecTrafficPolicyProxyProtocolPtr(v *DestinationRuleSpecTrafficPolicyProxyProtocolArgs) DestinationRuleSpecTrafficPolicyProxyProtocolPtrInput {
	return (*destinationRuleSpecTrafficPolicyProxyProtocolPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyProxyProtocolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyProxyProtocol)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyProxyProtocolPtrType) ToDestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput() DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyProxyProtocolPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyProxyProtocolPtrType) ToDestinationRuleSpecTrafficPolicyProxyProtocolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput)
}

// The upstream PROXY protocol settings.
type DestinationRuleSpecTrafficPolicyProxyProtocolOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyProxyProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyProxyProtocol)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyProxyProtocolOutput) ToDestinationRuleSpecTrafficPolicyProxyProtocolOutput() DestinationRuleSpecTrafficPolicyProxyProtocolOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyProxyProtocolOutput) ToDestinationRuleSpecTrafficPolicyProxyProtocolOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyProxyProtocolOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyProxyProtocolOutput) ToDestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput() DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyProxyProtocolPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyProxyProtocolOutput) ToDestinationRuleSpecTrafficPolicyProxyProtocolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyProxyProtocol) *DestinationRuleSpecTrafficPolicyProxyProtocol {
		return &v
	}).(DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput)
}

// The PROXY protocol version to use.
//
// Valid Options: V1, V2
func (o DestinationRuleSpecTrafficPolicyProxyProtocolOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyProxyProtocol) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyProxyProtocol)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput) ToDestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput() DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput) ToDestinationRuleSpecTrafficPolicyProxyProtocolPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput) Elem() DestinationRuleSpecTrafficPolicyProxyProtocolOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyProxyProtocol) DestinationRuleSpecTrafficPolicyProxyProtocol {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyProxyProtocol
		return ret
	}).(DestinationRuleSpecTrafficPolicyProxyProtocolOutput)
}

// The PROXY protocol version to use.
//
// Valid Options: V1, V2
func (o DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyProxyProtocol) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The upstream PROXY protocol settings.
type DestinationRuleSpecTrafficPolicyProxyProtocolPatch struct {
	// The PROXY protocol version to use.
	//
	// Valid Options: V1, V2
	Version *string `pulumi:"version"`
}

// DestinationRuleSpecTrafficPolicyProxyProtocolPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyProxyProtocolPatchArgs and DestinationRuleSpecTrafficPolicyProxyProtocolPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyProxyProtocolPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyProxyProtocolPatchArgs{...}
type DestinationRuleSpecTrafficPolicyProxyProtocolPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyProxyProtocolPatchOutput() DestinationRuleSpecTrafficPolicyProxyProtocolPatchOutput
	ToDestinationRuleSpecTrafficPolicyProxyProtocolPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyProxyProtocolPatchOutput
}

// The upstream PROXY protocol settings.
type DestinationRuleSpecTrafficPolicyProxyProtocolPatchArgs struct {
	// The PROXY protocol version to use.
	//
	// Valid Options: V1, V2
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (DestinationRuleSpecTrafficPolicyProxyProtocolPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyProxyProtocolPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyProxyProtocolPatchArgs) ToDestinationRuleSpecTrafficPolicyProxyProtocolPatchOutput() DestinationRuleSpecTrafficPolicyProxyProtocolPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyProxyProtocolPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyProxyProtocolPatchArgs) ToDestinationRuleSpecTrafficPolicyProxyProtocolPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyProxyProtocolPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyProxyProtocolPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyProxyProtocolPatchArgs) ToDestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput() DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyProxyProtocolPatchArgs) ToDestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyProxyProtocolPatchOutput).ToDestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyProxyProtocolPatchArgs, DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtr and DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyProxyProtocolPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput() DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyProxyProtocolPatchPtrType DestinationRuleSpecTrafficPolicyProxyProtocolPatchArgs

func DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtr(v *DestinationRuleSpecTrafficPolicyProxyProtocolPatchArgs) DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyProxyProtocolPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyProxyProtocolPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyProxyProtocolPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyProxyProtocolPatchPtrType) ToDestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput() DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyProxyProtocolPatchPtrType) ToDestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput)
}

// The upstream PROXY protocol settings.
type DestinationRuleSpecTrafficPolicyProxyProtocolPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyProxyProtocolPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyProxyProtocolPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyProxyProtocolPatchOutput) ToDestinationRuleSpecTrafficPolicyProxyProtocolPatchOutput() DestinationRuleSpecTrafficPolicyProxyProtocolPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyProxyProtocolPatchOutput) ToDestinationRuleSpecTrafficPolicyProxyProtocolPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyProxyProtocolPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyProxyProtocolPatchOutput) ToDestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput() DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyProxyProtocolPatchOutput) ToDestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyProxyProtocolPatch) *DestinationRuleSpecTrafficPolicyProxyProtocolPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput)
}

// The PROXY protocol version to use.
//
// Valid Options: V1, V2
func (o DestinationRuleSpecTrafficPolicyProxyProtocolPatchOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyProxyProtocolPatch) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyProxyProtocolPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput() DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyProxyProtocolPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyProxyProtocolPatch) DestinationRuleSpecTrafficPolicyProxyProtocolPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyProxyProtocolPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyProxyProtocolPatchOutput)
}

// The PROXY protocol version to use.
//
// Valid Options: V1, V2
func (o DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyProxyProtocolPatch) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecTrafficPolicyTls struct {
	// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
	CaCertificates *string `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
	CaCrl *string `pulumi:"caCrl"`
	// REQUIRED if mode is `MUTUAL`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// The name of the secret that holds the TLS certs for the client including the CA certificates.
	CredentialName *string `pulumi:"credentialName"`
	// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
	InsecureSkipVerify *bool `pulumi:"insecureSkipVerify"`
	// Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
	Mode *string `pulumi:"mode"`
	// REQUIRED if mode is `MUTUAL`.
	PrivateKey *string `pulumi:"privateKey"`
	// SNI string to present to the server during TLS handshake.
	Sni *string `pulumi:"sni"`
	// A list of alternate names to verify the subject identity in the certificate.
	SubjectAltNames []string `pulumi:"subjectAltNames"`
}

// DestinationRuleSpecTrafficPolicyTlsInput is an input type that accepts DestinationRuleSpecTrafficPolicyTlsArgs and DestinationRuleSpecTrafficPolicyTlsOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyTlsInput` via:
//
//	DestinationRuleSpecTrafficPolicyTlsArgs{...}
type DestinationRuleSpecTrafficPolicyTlsInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyTlsOutput() DestinationRuleSpecTrafficPolicyTlsOutput
	ToDestinationRuleSpecTrafficPolicyTlsOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyTlsOutput
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecTrafficPolicyTlsArgs struct {
	// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
	CaCertificates pulumi.StringPtrInput `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
	CaCrl pulumi.StringPtrInput `pulumi:"caCrl"`
	// REQUIRED if mode is `MUTUAL`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// The name of the secret that holds the TLS certs for the client including the CA certificates.
	CredentialName pulumi.StringPtrInput `pulumi:"credentialName"`
	// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
	InsecureSkipVerify pulumi.BoolPtrInput `pulumi:"insecureSkipVerify"`
	// Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// REQUIRED if mode is `MUTUAL`.
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
	// SNI string to present to the server during TLS handshake.
	Sni pulumi.StringPtrInput `pulumi:"sni"`
	// A list of alternate names to verify the subject identity in the certificate.
	SubjectAltNames pulumi.StringArrayInput `pulumi:"subjectAltNames"`
}

func (DestinationRuleSpecTrafficPolicyTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyTls)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyTlsArgs) ToDestinationRuleSpecTrafficPolicyTlsOutput() DestinationRuleSpecTrafficPolicyTlsOutput {
	return i.ToDestinationRuleSpecTrafficPolicyTlsOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyTlsArgs) ToDestinationRuleSpecTrafficPolicyTlsOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyTlsOutput)
}

func (i DestinationRuleSpecTrafficPolicyTlsArgs) ToDestinationRuleSpecTrafficPolicyTlsPtrOutput() DestinationRuleSpecTrafficPolicyTlsPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyTlsPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyTlsArgs) ToDestinationRuleSpecTrafficPolicyTlsPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyTlsOutput).ToDestinationRuleSpecTrafficPolicyTlsPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyTlsPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyTlsArgs, DestinationRuleSpecTrafficPolicyTlsPtr and DestinationRuleSpecTrafficPolicyTlsPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyTlsPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyTlsArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyTlsPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyTlsPtrOutput() DestinationRuleSpecTrafficPolicyTlsPtrOutput
	ToDestinationRuleSpecTrafficPolicyTlsPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyTlsPtrOutput
}

type destinationRuleSpecTrafficPolicyTlsPtrType DestinationRuleSpecTrafficPolicyTlsArgs

func DestinationRuleSpecTrafficPolicyTlsPtr(v *DestinationRuleSpecTrafficPolicyTlsArgs) DestinationRuleSpecTrafficPolicyTlsPtrInput {
	return (*destinationRuleSpecTrafficPolicyTlsPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyTls)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyTlsPtrType) ToDestinationRuleSpecTrafficPolicyTlsPtrOutput() DestinationRuleSpecTrafficPolicyTlsPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyTlsPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyTlsPtrType) ToDestinationRuleSpecTrafficPolicyTlsPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyTlsPtrOutput)
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecTrafficPolicyTlsOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyTls)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyTlsOutput) ToDestinationRuleSpecTrafficPolicyTlsOutput() DestinationRuleSpecTrafficPolicyTlsOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyTlsOutput) ToDestinationRuleSpecTrafficPolicyTlsOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTlsOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyTlsOutput) ToDestinationRuleSpecTrafficPolicyTlsPtrOutput() DestinationRuleSpecTrafficPolicyTlsPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyTlsPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyTlsOutput) ToDestinationRuleSpecTrafficPolicyTlsPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyTls) *DestinationRuleSpecTrafficPolicyTls {
		return &v
	}).(DestinationRuleSpecTrafficPolicyTlsPtrOutput)
}

// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
func (o DestinationRuleSpecTrafficPolicyTlsOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTls) *string { return v.CaCertificates }).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
func (o DestinationRuleSpecTrafficPolicyTlsOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTls) *string { return v.CaCrl }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecTrafficPolicyTlsOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTls) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// The name of the secret that holds the TLS certs for the client including the CA certificates.
func (o DestinationRuleSpecTrafficPolicyTlsOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTls) *string { return v.CredentialName }).(pulumi.StringPtrOutput)
}

// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
func (o DestinationRuleSpecTrafficPolicyTlsOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTls) *bool { return v.InsecureSkipVerify }).(pulumi.BoolPtrOutput)
}

// Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
func (o DestinationRuleSpecTrafficPolicyTlsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTls) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecTrafficPolicyTlsOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTls) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// SNI string to present to the server during TLS handshake.
func (o DestinationRuleSpecTrafficPolicyTlsOutput) Sni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTls) *string { return v.Sni }).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate.
func (o DestinationRuleSpecTrafficPolicyTlsOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTls) []string { return v.SubjectAltNames }).(pulumi.StringArrayOutput)
}

type DestinationRuleSpecTrafficPolicyTlsPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyTls)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyTlsPtrOutput) ToDestinationRuleSpecTrafficPolicyTlsPtrOutput() DestinationRuleSpecTrafficPolicyTlsPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyTlsPtrOutput) ToDestinationRuleSpecTrafficPolicyTlsPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTlsPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyTlsPtrOutput) Elem() DestinationRuleSpecTrafficPolicyTlsOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTls) DestinationRuleSpecTrafficPolicyTls {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyTls
		return ret
	}).(DestinationRuleSpecTrafficPolicyTlsOutput)
}

// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
func (o DestinationRuleSpecTrafficPolicyTlsPtrOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTls) *string {
		if v == nil {
			return nil
		}
		return v.CaCertificates
	}).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
func (o DestinationRuleSpecTrafficPolicyTlsPtrOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTls) *string {
		if v == nil {
			return nil
		}
		return v.CaCrl
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecTrafficPolicyTlsPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTls) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// The name of the secret that holds the TLS certs for the client including the CA certificates.
func (o DestinationRuleSpecTrafficPolicyTlsPtrOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTls) *string {
		if v == nil {
			return nil
		}
		return v.CredentialName
	}).(pulumi.StringPtrOutput)
}

// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
func (o DestinationRuleSpecTrafficPolicyTlsPtrOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTls) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSkipVerify
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
func (o DestinationRuleSpecTrafficPolicyTlsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTls) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecTrafficPolicyTlsPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTls) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

// SNI string to present to the server during TLS handshake.
func (o DestinationRuleSpecTrafficPolicyTlsPtrOutput) Sni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTls) *string {
		if v == nil {
			return nil
		}
		return v.Sni
	}).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate.
func (o DestinationRuleSpecTrafficPolicyTlsPtrOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTls) []string {
		if v == nil {
			return nil
		}
		return v.SubjectAltNames
	}).(pulumi.StringArrayOutput)
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecTrafficPolicyTlsPatch struct {
	// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
	CaCertificates *string `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
	CaCrl *string `pulumi:"caCrl"`
	// REQUIRED if mode is `MUTUAL`.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// The name of the secret that holds the TLS certs for the client including the CA certificates.
	CredentialName *string `pulumi:"credentialName"`
	// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
	InsecureSkipVerify *bool `pulumi:"insecureSkipVerify"`
	// Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
	Mode *string `pulumi:"mode"`
	// REQUIRED if mode is `MUTUAL`.
	PrivateKey *string `pulumi:"privateKey"`
	// SNI string to present to the server during TLS handshake.
	Sni *string `pulumi:"sni"`
	// A list of alternate names to verify the subject identity in the certificate.
	SubjectAltNames []string `pulumi:"subjectAltNames"`
}

// DestinationRuleSpecTrafficPolicyTlsPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyTlsPatchArgs and DestinationRuleSpecTrafficPolicyTlsPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyTlsPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyTlsPatchArgs{...}
type DestinationRuleSpecTrafficPolicyTlsPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyTlsPatchOutput() DestinationRuleSpecTrafficPolicyTlsPatchOutput
	ToDestinationRuleSpecTrafficPolicyTlsPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyTlsPatchOutput
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecTrafficPolicyTlsPatchArgs struct {
	// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
	CaCertificates pulumi.StringPtrInput `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
	CaCrl pulumi.StringPtrInput `pulumi:"caCrl"`
	// REQUIRED if mode is `MUTUAL`.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// The name of the secret that holds the TLS certs for the client including the CA certificates.
	CredentialName pulumi.StringPtrInput `pulumi:"credentialName"`
	// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
	InsecureSkipVerify pulumi.BoolPtrInput `pulumi:"insecureSkipVerify"`
	// Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// REQUIRED if mode is `MUTUAL`.
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
	// SNI string to present to the server during TLS handshake.
	Sni pulumi.StringPtrInput `pulumi:"sni"`
	// A list of alternate names to verify the subject identity in the certificate.
	SubjectAltNames pulumi.StringArrayInput `pulumi:"subjectAltNames"`
}

func (DestinationRuleSpecTrafficPolicyTlsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyTlsPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyTlsPatchArgs) ToDestinationRuleSpecTrafficPolicyTlsPatchOutput() DestinationRuleSpecTrafficPolicyTlsPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyTlsPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyTlsPatchArgs) ToDestinationRuleSpecTrafficPolicyTlsPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTlsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyTlsPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyTlsPatchArgs) ToDestinationRuleSpecTrafficPolicyTlsPatchPtrOutput() DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyTlsPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyTlsPatchArgs) ToDestinationRuleSpecTrafficPolicyTlsPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyTlsPatchOutput).ToDestinationRuleSpecTrafficPolicyTlsPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyTlsPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyTlsPatchArgs, DestinationRuleSpecTrafficPolicyTlsPatchPtr and DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyTlsPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyTlsPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyTlsPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyTlsPatchPtrOutput() DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyTlsPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyTlsPatchPtrType DestinationRuleSpecTrafficPolicyTlsPatchArgs

func DestinationRuleSpecTrafficPolicyTlsPatchPtr(v *DestinationRuleSpecTrafficPolicyTlsPatchArgs) DestinationRuleSpecTrafficPolicyTlsPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyTlsPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyTlsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyTlsPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyTlsPatchPtrType) ToDestinationRuleSpecTrafficPolicyTlsPatchPtrOutput() DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyTlsPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyTlsPatchPtrType) ToDestinationRuleSpecTrafficPolicyTlsPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput)
}

// TLS related settings for connections to the upstream service.
type DestinationRuleSpecTrafficPolicyTlsPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyTlsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyTlsPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyTlsPatchOutput) ToDestinationRuleSpecTrafficPolicyTlsPatchOutput() DestinationRuleSpecTrafficPolicyTlsPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyTlsPatchOutput) ToDestinationRuleSpecTrafficPolicyTlsPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTlsPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyTlsPatchOutput) ToDestinationRuleSpecTrafficPolicyTlsPatchPtrOutput() DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyTlsPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyTlsPatchOutput) ToDestinationRuleSpecTrafficPolicyTlsPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyTlsPatch) *DestinationRuleSpecTrafficPolicyTlsPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput)
}

// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
func (o DestinationRuleSpecTrafficPolicyTlsPatchOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTlsPatch) *string { return v.CaCertificates }).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
func (o DestinationRuleSpecTrafficPolicyTlsPatchOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTlsPatch) *string { return v.CaCrl }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecTrafficPolicyTlsPatchOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTlsPatch) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// The name of the secret that holds the TLS certs for the client including the CA certificates.
func (o DestinationRuleSpecTrafficPolicyTlsPatchOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTlsPatch) *string { return v.CredentialName }).(pulumi.StringPtrOutput)
}

// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
func (o DestinationRuleSpecTrafficPolicyTlsPatchOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTlsPatch) *bool { return v.InsecureSkipVerify }).(pulumi.BoolPtrOutput)
}

// Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
func (o DestinationRuleSpecTrafficPolicyTlsPatchOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTlsPatch) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecTrafficPolicyTlsPatchOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTlsPatch) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// SNI string to present to the server during TLS handshake.
func (o DestinationRuleSpecTrafficPolicyTlsPatchOutput) Sni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTlsPatch) *string { return v.Sni }).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate.
func (o DestinationRuleSpecTrafficPolicyTlsPatchOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTlsPatch) []string { return v.SubjectAltNames }).(pulumi.StringArrayOutput)
}

type DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyTlsPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyTlsPatchPtrOutput() DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyTlsPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyTlsPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTlsPatch) DestinationRuleSpecTrafficPolicyTlsPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyTlsPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyTlsPatchOutput)
}

// OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
func (o DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaCertificates
	}).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate.
func (o DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaCrl
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// The name of the secret that holds the TLS certs for the client including the CA certificates.
func (o DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.CredentialName
	}).(pulumi.StringPtrOutput)
}

// `insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
func (o DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTlsPatch) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSkipVerify
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
func (o DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `MUTUAL`.
func (o DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

// SNI string to present to the server during TLS handshake.
func (o DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput) Sni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Sni
	}).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate.
func (o DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTlsPatch) []string {
		if v == nil {
			return nil
		}
		return v.SubjectAltNames
	}).(pulumi.StringArrayOutput)
}

// Configuration of tunneling TCP over other transport or application layers for the host configured in the DestinationRule.
type DestinationRuleSpecTrafficPolicyTunnel struct {
	// Specifies which protocol to use for tunneling the downstream connection.
	Protocol *string `pulumi:"protocol"`
	// Specifies a host to which the downstream connection is tunneled.
	TargetHost *string `pulumi:"targetHost"`
	// Specifies a port to which the downstream connection is tunneled.
	TargetPort *int `pulumi:"targetPort"`
}

// DestinationRuleSpecTrafficPolicyTunnelInput is an input type that accepts DestinationRuleSpecTrafficPolicyTunnelArgs and DestinationRuleSpecTrafficPolicyTunnelOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyTunnelInput` via:
//
//	DestinationRuleSpecTrafficPolicyTunnelArgs{...}
type DestinationRuleSpecTrafficPolicyTunnelInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyTunnelOutput() DestinationRuleSpecTrafficPolicyTunnelOutput
	ToDestinationRuleSpecTrafficPolicyTunnelOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyTunnelOutput
}

// Configuration of tunneling TCP over other transport or application layers for the host configured in the DestinationRule.
type DestinationRuleSpecTrafficPolicyTunnelArgs struct {
	// Specifies which protocol to use for tunneling the downstream connection.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Specifies a host to which the downstream connection is tunneled.
	TargetHost pulumi.StringPtrInput `pulumi:"targetHost"`
	// Specifies a port to which the downstream connection is tunneled.
	TargetPort pulumi.IntPtrInput `pulumi:"targetPort"`
}

func (DestinationRuleSpecTrafficPolicyTunnelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyTunnel)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyTunnelArgs) ToDestinationRuleSpecTrafficPolicyTunnelOutput() DestinationRuleSpecTrafficPolicyTunnelOutput {
	return i.ToDestinationRuleSpecTrafficPolicyTunnelOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyTunnelArgs) ToDestinationRuleSpecTrafficPolicyTunnelOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTunnelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyTunnelOutput)
}

func (i DestinationRuleSpecTrafficPolicyTunnelArgs) ToDestinationRuleSpecTrafficPolicyTunnelPtrOutput() DestinationRuleSpecTrafficPolicyTunnelPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyTunnelPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyTunnelArgs) ToDestinationRuleSpecTrafficPolicyTunnelPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTunnelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyTunnelOutput).ToDestinationRuleSpecTrafficPolicyTunnelPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyTunnelPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyTunnelArgs, DestinationRuleSpecTrafficPolicyTunnelPtr and DestinationRuleSpecTrafficPolicyTunnelPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyTunnelPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyTunnelArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyTunnelPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyTunnelPtrOutput() DestinationRuleSpecTrafficPolicyTunnelPtrOutput
	ToDestinationRuleSpecTrafficPolicyTunnelPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyTunnelPtrOutput
}

type destinationRuleSpecTrafficPolicyTunnelPtrType DestinationRuleSpecTrafficPolicyTunnelArgs

func DestinationRuleSpecTrafficPolicyTunnelPtr(v *DestinationRuleSpecTrafficPolicyTunnelArgs) DestinationRuleSpecTrafficPolicyTunnelPtrInput {
	return (*destinationRuleSpecTrafficPolicyTunnelPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyTunnelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyTunnel)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyTunnelPtrType) ToDestinationRuleSpecTrafficPolicyTunnelPtrOutput() DestinationRuleSpecTrafficPolicyTunnelPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyTunnelPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyTunnelPtrType) ToDestinationRuleSpecTrafficPolicyTunnelPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTunnelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyTunnelPtrOutput)
}

// Configuration of tunneling TCP over other transport or application layers for the host configured in the DestinationRule.
type DestinationRuleSpecTrafficPolicyTunnelOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyTunnel)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyTunnelOutput) ToDestinationRuleSpecTrafficPolicyTunnelOutput() DestinationRuleSpecTrafficPolicyTunnelOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyTunnelOutput) ToDestinationRuleSpecTrafficPolicyTunnelOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTunnelOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyTunnelOutput) ToDestinationRuleSpecTrafficPolicyTunnelPtrOutput() DestinationRuleSpecTrafficPolicyTunnelPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyTunnelPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyTunnelOutput) ToDestinationRuleSpecTrafficPolicyTunnelPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTunnelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyTunnel) *DestinationRuleSpecTrafficPolicyTunnel {
		return &v
	}).(DestinationRuleSpecTrafficPolicyTunnelPtrOutput)
}

// Specifies which protocol to use for tunneling the downstream connection.
func (o DestinationRuleSpecTrafficPolicyTunnelOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTunnel) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Specifies a host to which the downstream connection is tunneled.
func (o DestinationRuleSpecTrafficPolicyTunnelOutput) TargetHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTunnel) *string { return v.TargetHost }).(pulumi.StringPtrOutput)
}

// Specifies a port to which the downstream connection is tunneled.
func (o DestinationRuleSpecTrafficPolicyTunnelOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTunnel) *int { return v.TargetPort }).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecTrafficPolicyTunnelPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyTunnelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyTunnel)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyTunnelPtrOutput) ToDestinationRuleSpecTrafficPolicyTunnelPtrOutput() DestinationRuleSpecTrafficPolicyTunnelPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyTunnelPtrOutput) ToDestinationRuleSpecTrafficPolicyTunnelPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTunnelPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyTunnelPtrOutput) Elem() DestinationRuleSpecTrafficPolicyTunnelOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTunnel) DestinationRuleSpecTrafficPolicyTunnel {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyTunnel
		return ret
	}).(DestinationRuleSpecTrafficPolicyTunnelOutput)
}

// Specifies which protocol to use for tunneling the downstream connection.
func (o DestinationRuleSpecTrafficPolicyTunnelPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTunnel) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Specifies a host to which the downstream connection is tunneled.
func (o DestinationRuleSpecTrafficPolicyTunnelPtrOutput) TargetHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTunnel) *string {
		if v == nil {
			return nil
		}
		return v.TargetHost
	}).(pulumi.StringPtrOutput)
}

// Specifies a port to which the downstream connection is tunneled.
func (o DestinationRuleSpecTrafficPolicyTunnelPtrOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTunnel) *int {
		if v == nil {
			return nil
		}
		return v.TargetPort
	}).(pulumi.IntPtrOutput)
}

// Configuration of tunneling TCP over other transport or application layers for the host configured in the DestinationRule.
type DestinationRuleSpecTrafficPolicyTunnelPatch struct {
	// Specifies which protocol to use for tunneling the downstream connection.
	Protocol *string `pulumi:"protocol"`
	// Specifies a host to which the downstream connection is tunneled.
	TargetHost *string `pulumi:"targetHost"`
	// Specifies a port to which the downstream connection is tunneled.
	TargetPort *int `pulumi:"targetPort"`
}

// DestinationRuleSpecTrafficPolicyTunnelPatchInput is an input type that accepts DestinationRuleSpecTrafficPolicyTunnelPatchArgs and DestinationRuleSpecTrafficPolicyTunnelPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyTunnelPatchInput` via:
//
//	DestinationRuleSpecTrafficPolicyTunnelPatchArgs{...}
type DestinationRuleSpecTrafficPolicyTunnelPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyTunnelPatchOutput() DestinationRuleSpecTrafficPolicyTunnelPatchOutput
	ToDestinationRuleSpecTrafficPolicyTunnelPatchOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyTunnelPatchOutput
}

// Configuration of tunneling TCP over other transport or application layers for the host configured in the DestinationRule.
type DestinationRuleSpecTrafficPolicyTunnelPatchArgs struct {
	// Specifies which protocol to use for tunneling the downstream connection.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Specifies a host to which the downstream connection is tunneled.
	TargetHost pulumi.StringPtrInput `pulumi:"targetHost"`
	// Specifies a port to which the downstream connection is tunneled.
	TargetPort pulumi.IntPtrInput `pulumi:"targetPort"`
}

func (DestinationRuleSpecTrafficPolicyTunnelPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyTunnelPatch)(nil)).Elem()
}

func (i DestinationRuleSpecTrafficPolicyTunnelPatchArgs) ToDestinationRuleSpecTrafficPolicyTunnelPatchOutput() DestinationRuleSpecTrafficPolicyTunnelPatchOutput {
	return i.ToDestinationRuleSpecTrafficPolicyTunnelPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyTunnelPatchArgs) ToDestinationRuleSpecTrafficPolicyTunnelPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTunnelPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyTunnelPatchOutput)
}

func (i DestinationRuleSpecTrafficPolicyTunnelPatchArgs) ToDestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput() DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyTunnelPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecTrafficPolicyTunnelPatchArgs) ToDestinationRuleSpecTrafficPolicyTunnelPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyTunnelPatchOutput).ToDestinationRuleSpecTrafficPolicyTunnelPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecTrafficPolicyTunnelPatchPtrInput is an input type that accepts DestinationRuleSpecTrafficPolicyTunnelPatchArgs, DestinationRuleSpecTrafficPolicyTunnelPatchPtr and DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecTrafficPolicyTunnelPatchPtrInput` via:
//
//	        DestinationRuleSpecTrafficPolicyTunnelPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecTrafficPolicyTunnelPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput() DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput
	ToDestinationRuleSpecTrafficPolicyTunnelPatchPtrOutputWithContext(context.Context) DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput
}

type destinationRuleSpecTrafficPolicyTunnelPatchPtrType DestinationRuleSpecTrafficPolicyTunnelPatchArgs

func DestinationRuleSpecTrafficPolicyTunnelPatchPtr(v *DestinationRuleSpecTrafficPolicyTunnelPatchArgs) DestinationRuleSpecTrafficPolicyTunnelPatchPtrInput {
	return (*destinationRuleSpecTrafficPolicyTunnelPatchPtrType)(v)
}

func (*destinationRuleSpecTrafficPolicyTunnelPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyTunnelPatch)(nil)).Elem()
}

func (i *destinationRuleSpecTrafficPolicyTunnelPatchPtrType) ToDestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput() DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput {
	return i.ToDestinationRuleSpecTrafficPolicyTunnelPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecTrafficPolicyTunnelPatchPtrType) ToDestinationRuleSpecTrafficPolicyTunnelPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput)
}

// Configuration of tunneling TCP over other transport or application layers for the host configured in the DestinationRule.
type DestinationRuleSpecTrafficPolicyTunnelPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyTunnelPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecTrafficPolicyTunnelPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyTunnelPatchOutput) ToDestinationRuleSpecTrafficPolicyTunnelPatchOutput() DestinationRuleSpecTrafficPolicyTunnelPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyTunnelPatchOutput) ToDestinationRuleSpecTrafficPolicyTunnelPatchOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTunnelPatchOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyTunnelPatchOutput) ToDestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput() DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput {
	return o.ToDestinationRuleSpecTrafficPolicyTunnelPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecTrafficPolicyTunnelPatchOutput) ToDestinationRuleSpecTrafficPolicyTunnelPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecTrafficPolicyTunnelPatch) *DestinationRuleSpecTrafficPolicyTunnelPatch {
		return &v
	}).(DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput)
}

// Specifies which protocol to use for tunneling the downstream connection.
func (o DestinationRuleSpecTrafficPolicyTunnelPatchOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTunnelPatch) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Specifies a host to which the downstream connection is tunneled.
func (o DestinationRuleSpecTrafficPolicyTunnelPatchOutput) TargetHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTunnelPatch) *string { return v.TargetHost }).(pulumi.StringPtrOutput)
}

// Specifies a port to which the downstream connection is tunneled.
func (o DestinationRuleSpecTrafficPolicyTunnelPatchOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DestinationRuleSpecTrafficPolicyTunnelPatch) *int { return v.TargetPort }).(pulumi.IntPtrOutput)
}

type DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecTrafficPolicyTunnelPatch)(nil)).Elem()
}

func (o DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput() DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput) ToDestinationRuleSpecTrafficPolicyTunnelPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput) Elem() DestinationRuleSpecTrafficPolicyTunnelPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTunnelPatch) DestinationRuleSpecTrafficPolicyTunnelPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecTrafficPolicyTunnelPatch
		return ret
	}).(DestinationRuleSpecTrafficPolicyTunnelPatchOutput)
}

// Specifies which protocol to use for tunneling the downstream connection.
func (o DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTunnelPatch) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Specifies a host to which the downstream connection is tunneled.
func (o DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput) TargetHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTunnelPatch) *string {
		if v == nil {
			return nil
		}
		return v.TargetHost
	}).(pulumi.StringPtrOutput)
}

// Specifies a port to which the downstream connection is tunneled.
func (o DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DestinationRuleSpecTrafficPolicyTunnelPatch) *int {
		if v == nil {
			return nil
		}
		return v.TargetPort
	}).(pulumi.IntPtrOutput)
}

// Criteria used to select the specific set of pods/VMs on which this `DestinationRule` configuration should be applied.
type DestinationRuleSpecWorkloadSelector struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// DestinationRuleSpecWorkloadSelectorInput is an input type that accepts DestinationRuleSpecWorkloadSelectorArgs and DestinationRuleSpecWorkloadSelectorOutput values.
// You can construct a concrete instance of `DestinationRuleSpecWorkloadSelectorInput` via:
//
//	DestinationRuleSpecWorkloadSelectorArgs{...}
type DestinationRuleSpecWorkloadSelectorInput interface {
	pulumi.Input

	ToDestinationRuleSpecWorkloadSelectorOutput() DestinationRuleSpecWorkloadSelectorOutput
	ToDestinationRuleSpecWorkloadSelectorOutputWithContext(context.Context) DestinationRuleSpecWorkloadSelectorOutput
}

// Criteria used to select the specific set of pods/VMs on which this `DestinationRule` configuration should be applied.
type DestinationRuleSpecWorkloadSelectorArgs struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (DestinationRuleSpecWorkloadSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecWorkloadSelector)(nil)).Elem()
}

func (i DestinationRuleSpecWorkloadSelectorArgs) ToDestinationRuleSpecWorkloadSelectorOutput() DestinationRuleSpecWorkloadSelectorOutput {
	return i.ToDestinationRuleSpecWorkloadSelectorOutputWithContext(context.Background())
}

func (i DestinationRuleSpecWorkloadSelectorArgs) ToDestinationRuleSpecWorkloadSelectorOutputWithContext(ctx context.Context) DestinationRuleSpecWorkloadSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecWorkloadSelectorOutput)
}

func (i DestinationRuleSpecWorkloadSelectorArgs) ToDestinationRuleSpecWorkloadSelectorPtrOutput() DestinationRuleSpecWorkloadSelectorPtrOutput {
	return i.ToDestinationRuleSpecWorkloadSelectorPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecWorkloadSelectorArgs) ToDestinationRuleSpecWorkloadSelectorPtrOutputWithContext(ctx context.Context) DestinationRuleSpecWorkloadSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecWorkloadSelectorOutput).ToDestinationRuleSpecWorkloadSelectorPtrOutputWithContext(ctx)
}

// DestinationRuleSpecWorkloadSelectorPtrInput is an input type that accepts DestinationRuleSpecWorkloadSelectorArgs, DestinationRuleSpecWorkloadSelectorPtr and DestinationRuleSpecWorkloadSelectorPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecWorkloadSelectorPtrInput` via:
//
//	        DestinationRuleSpecWorkloadSelectorArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecWorkloadSelectorPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecWorkloadSelectorPtrOutput() DestinationRuleSpecWorkloadSelectorPtrOutput
	ToDestinationRuleSpecWorkloadSelectorPtrOutputWithContext(context.Context) DestinationRuleSpecWorkloadSelectorPtrOutput
}

type destinationRuleSpecWorkloadSelectorPtrType DestinationRuleSpecWorkloadSelectorArgs

func DestinationRuleSpecWorkloadSelectorPtr(v *DestinationRuleSpecWorkloadSelectorArgs) DestinationRuleSpecWorkloadSelectorPtrInput {
	return (*destinationRuleSpecWorkloadSelectorPtrType)(v)
}

func (*destinationRuleSpecWorkloadSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecWorkloadSelector)(nil)).Elem()
}

func (i *destinationRuleSpecWorkloadSelectorPtrType) ToDestinationRuleSpecWorkloadSelectorPtrOutput() DestinationRuleSpecWorkloadSelectorPtrOutput {
	return i.ToDestinationRuleSpecWorkloadSelectorPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecWorkloadSelectorPtrType) ToDestinationRuleSpecWorkloadSelectorPtrOutputWithContext(ctx context.Context) DestinationRuleSpecWorkloadSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecWorkloadSelectorPtrOutput)
}

// Criteria used to select the specific set of pods/VMs on which this `DestinationRule` configuration should be applied.
type DestinationRuleSpecWorkloadSelectorOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecWorkloadSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecWorkloadSelector)(nil)).Elem()
}

func (o DestinationRuleSpecWorkloadSelectorOutput) ToDestinationRuleSpecWorkloadSelectorOutput() DestinationRuleSpecWorkloadSelectorOutput {
	return o
}

func (o DestinationRuleSpecWorkloadSelectorOutput) ToDestinationRuleSpecWorkloadSelectorOutputWithContext(ctx context.Context) DestinationRuleSpecWorkloadSelectorOutput {
	return o
}

func (o DestinationRuleSpecWorkloadSelectorOutput) ToDestinationRuleSpecWorkloadSelectorPtrOutput() DestinationRuleSpecWorkloadSelectorPtrOutput {
	return o.ToDestinationRuleSpecWorkloadSelectorPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecWorkloadSelectorOutput) ToDestinationRuleSpecWorkloadSelectorPtrOutputWithContext(ctx context.Context) DestinationRuleSpecWorkloadSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecWorkloadSelector) *DestinationRuleSpecWorkloadSelector {
		return &v
	}).(DestinationRuleSpecWorkloadSelectorPtrOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o DestinationRuleSpecWorkloadSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v DestinationRuleSpecWorkloadSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type DestinationRuleSpecWorkloadSelectorPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecWorkloadSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecWorkloadSelector)(nil)).Elem()
}

func (o DestinationRuleSpecWorkloadSelectorPtrOutput) ToDestinationRuleSpecWorkloadSelectorPtrOutput() DestinationRuleSpecWorkloadSelectorPtrOutput {
	return o
}

func (o DestinationRuleSpecWorkloadSelectorPtrOutput) ToDestinationRuleSpecWorkloadSelectorPtrOutputWithContext(ctx context.Context) DestinationRuleSpecWorkloadSelectorPtrOutput {
	return o
}

func (o DestinationRuleSpecWorkloadSelectorPtrOutput) Elem() DestinationRuleSpecWorkloadSelectorOutput {
	return o.ApplyT(func(v *DestinationRuleSpecWorkloadSelector) DestinationRuleSpecWorkloadSelector {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecWorkloadSelector
		return ret
	}).(DestinationRuleSpecWorkloadSelectorOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o DestinationRuleSpecWorkloadSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DestinationRuleSpecWorkloadSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// Criteria used to select the specific set of pods/VMs on which this `DestinationRule` configuration should be applied.
type DestinationRuleSpecWorkloadSelectorPatch struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// DestinationRuleSpecWorkloadSelectorPatchInput is an input type that accepts DestinationRuleSpecWorkloadSelectorPatchArgs and DestinationRuleSpecWorkloadSelectorPatchOutput values.
// You can construct a concrete instance of `DestinationRuleSpecWorkloadSelectorPatchInput` via:
//
//	DestinationRuleSpecWorkloadSelectorPatchArgs{...}
type DestinationRuleSpecWorkloadSelectorPatchInput interface {
	pulumi.Input

	ToDestinationRuleSpecWorkloadSelectorPatchOutput() DestinationRuleSpecWorkloadSelectorPatchOutput
	ToDestinationRuleSpecWorkloadSelectorPatchOutputWithContext(context.Context) DestinationRuleSpecWorkloadSelectorPatchOutput
}

// Criteria used to select the specific set of pods/VMs on which this `DestinationRule` configuration should be applied.
type DestinationRuleSpecWorkloadSelectorPatchArgs struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (DestinationRuleSpecWorkloadSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecWorkloadSelectorPatch)(nil)).Elem()
}

func (i DestinationRuleSpecWorkloadSelectorPatchArgs) ToDestinationRuleSpecWorkloadSelectorPatchOutput() DestinationRuleSpecWorkloadSelectorPatchOutput {
	return i.ToDestinationRuleSpecWorkloadSelectorPatchOutputWithContext(context.Background())
}

func (i DestinationRuleSpecWorkloadSelectorPatchArgs) ToDestinationRuleSpecWorkloadSelectorPatchOutputWithContext(ctx context.Context) DestinationRuleSpecWorkloadSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecWorkloadSelectorPatchOutput)
}

func (i DestinationRuleSpecWorkloadSelectorPatchArgs) ToDestinationRuleSpecWorkloadSelectorPatchPtrOutput() DestinationRuleSpecWorkloadSelectorPatchPtrOutput {
	return i.ToDestinationRuleSpecWorkloadSelectorPatchPtrOutputWithContext(context.Background())
}

func (i DestinationRuleSpecWorkloadSelectorPatchArgs) ToDestinationRuleSpecWorkloadSelectorPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecWorkloadSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecWorkloadSelectorPatchOutput).ToDestinationRuleSpecWorkloadSelectorPatchPtrOutputWithContext(ctx)
}

// DestinationRuleSpecWorkloadSelectorPatchPtrInput is an input type that accepts DestinationRuleSpecWorkloadSelectorPatchArgs, DestinationRuleSpecWorkloadSelectorPatchPtr and DestinationRuleSpecWorkloadSelectorPatchPtrOutput values.
// You can construct a concrete instance of `DestinationRuleSpecWorkloadSelectorPatchPtrInput` via:
//
//	        DestinationRuleSpecWorkloadSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type DestinationRuleSpecWorkloadSelectorPatchPtrInput interface {
	pulumi.Input

	ToDestinationRuleSpecWorkloadSelectorPatchPtrOutput() DestinationRuleSpecWorkloadSelectorPatchPtrOutput
	ToDestinationRuleSpecWorkloadSelectorPatchPtrOutputWithContext(context.Context) DestinationRuleSpecWorkloadSelectorPatchPtrOutput
}

type destinationRuleSpecWorkloadSelectorPatchPtrType DestinationRuleSpecWorkloadSelectorPatchArgs

func DestinationRuleSpecWorkloadSelectorPatchPtr(v *DestinationRuleSpecWorkloadSelectorPatchArgs) DestinationRuleSpecWorkloadSelectorPatchPtrInput {
	return (*destinationRuleSpecWorkloadSelectorPatchPtrType)(v)
}

func (*destinationRuleSpecWorkloadSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecWorkloadSelectorPatch)(nil)).Elem()
}

func (i *destinationRuleSpecWorkloadSelectorPatchPtrType) ToDestinationRuleSpecWorkloadSelectorPatchPtrOutput() DestinationRuleSpecWorkloadSelectorPatchPtrOutput {
	return i.ToDestinationRuleSpecWorkloadSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *destinationRuleSpecWorkloadSelectorPatchPtrType) ToDestinationRuleSpecWorkloadSelectorPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecWorkloadSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleSpecWorkloadSelectorPatchPtrOutput)
}

// Criteria used to select the specific set of pods/VMs on which this `DestinationRule` configuration should be applied.
type DestinationRuleSpecWorkloadSelectorPatchOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecWorkloadSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationRuleSpecWorkloadSelectorPatch)(nil)).Elem()
}

func (o DestinationRuleSpecWorkloadSelectorPatchOutput) ToDestinationRuleSpecWorkloadSelectorPatchOutput() DestinationRuleSpecWorkloadSelectorPatchOutput {
	return o
}

func (o DestinationRuleSpecWorkloadSelectorPatchOutput) ToDestinationRuleSpecWorkloadSelectorPatchOutputWithContext(ctx context.Context) DestinationRuleSpecWorkloadSelectorPatchOutput {
	return o
}

func (o DestinationRuleSpecWorkloadSelectorPatchOutput) ToDestinationRuleSpecWorkloadSelectorPatchPtrOutput() DestinationRuleSpecWorkloadSelectorPatchPtrOutput {
	return o.ToDestinationRuleSpecWorkloadSelectorPatchPtrOutputWithContext(context.Background())
}

func (o DestinationRuleSpecWorkloadSelectorPatchOutput) ToDestinationRuleSpecWorkloadSelectorPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecWorkloadSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationRuleSpecWorkloadSelectorPatch) *DestinationRuleSpecWorkloadSelectorPatch {
		return &v
	}).(DestinationRuleSpecWorkloadSelectorPatchPtrOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o DestinationRuleSpecWorkloadSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v DestinationRuleSpecWorkloadSelectorPatch) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type DestinationRuleSpecWorkloadSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (DestinationRuleSpecWorkloadSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleSpecWorkloadSelectorPatch)(nil)).Elem()
}

func (o DestinationRuleSpecWorkloadSelectorPatchPtrOutput) ToDestinationRuleSpecWorkloadSelectorPatchPtrOutput() DestinationRuleSpecWorkloadSelectorPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecWorkloadSelectorPatchPtrOutput) ToDestinationRuleSpecWorkloadSelectorPatchPtrOutputWithContext(ctx context.Context) DestinationRuleSpecWorkloadSelectorPatchPtrOutput {
	return o
}

func (o DestinationRuleSpecWorkloadSelectorPatchPtrOutput) Elem() DestinationRuleSpecWorkloadSelectorPatchOutput {
	return o.ApplyT(func(v *DestinationRuleSpecWorkloadSelectorPatch) DestinationRuleSpecWorkloadSelectorPatch {
		if v != nil {
			return *v
		}
		var ret DestinationRuleSpecWorkloadSelectorPatch
		return ret
	}).(DestinationRuleSpecWorkloadSelectorPatchOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o DestinationRuleSpecWorkloadSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DestinationRuleSpecWorkloadSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type GatewayType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta     `pulumi:"metadata"`
	Spec     *GatewaySpec           `pulumi:"spec"`
	Status   map[string]interface{} `pulumi:"status"`
}

// GatewayTypeInput is an input type that accepts GatewayTypeArgs and GatewayTypeOutput values.
// You can construct a concrete instance of `GatewayTypeInput` via:
//
//	GatewayTypeArgs{...}
type GatewayTypeInput interface {
	pulumi.Input

	ToGatewayTypeOutput() GatewayTypeOutput
	ToGatewayTypeOutputWithContext(context.Context) GatewayTypeOutput
}

type GatewayTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec     GatewaySpecPtrInput       `pulumi:"spec"`
	Status   pulumi.MapInput           `pulumi:"status"`
}

func (GatewayTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayType)(nil)).Elem()
}

func (i GatewayTypeArgs) ToGatewayTypeOutput() GatewayTypeOutput {
	return i.ToGatewayTypeOutputWithContext(context.Background())
}

func (i GatewayTypeArgs) ToGatewayTypeOutputWithContext(ctx context.Context) GatewayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTypeOutput)
}

// GatewayTypeArrayInput is an input type that accepts GatewayTypeArray and GatewayTypeArrayOutput values.
// You can construct a concrete instance of `GatewayTypeArrayInput` via:
//
//	GatewayTypeArray{ GatewayTypeArgs{...} }
type GatewayTypeArrayInput interface {
	pulumi.Input

	ToGatewayTypeArrayOutput() GatewayTypeArrayOutput
	ToGatewayTypeArrayOutputWithContext(context.Context) GatewayTypeArrayOutput
}

type GatewayTypeArray []GatewayTypeInput

func (GatewayTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayType)(nil)).Elem()
}

func (i GatewayTypeArray) ToGatewayTypeArrayOutput() GatewayTypeArrayOutput {
	return i.ToGatewayTypeArrayOutputWithContext(context.Background())
}

func (i GatewayTypeArray) ToGatewayTypeArrayOutputWithContext(ctx context.Context) GatewayTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTypeArrayOutput)
}

type GatewayTypeOutput struct{ *pulumi.OutputState }

func (GatewayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayType)(nil)).Elem()
}

func (o GatewayTypeOutput) ToGatewayTypeOutput() GatewayTypeOutput {
	return o
}

func (o GatewayTypeOutput) ToGatewayTypeOutputWithContext(ctx context.Context) GatewayTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o GatewayTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o GatewayTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o GatewayTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v GatewayType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o GatewayTypeOutput) Spec() GatewaySpecPtrOutput {
	return o.ApplyT(func(v GatewayType) *GatewaySpec { return v.Spec }).(GatewaySpecPtrOutput)
}

func (o GatewayTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v GatewayType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

type GatewayTypeArrayOutput struct{ *pulumi.OutputState }

func (GatewayTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayType)(nil)).Elem()
}

func (o GatewayTypeArrayOutput) ToGatewayTypeArrayOutput() GatewayTypeArrayOutput {
	return o
}

func (o GatewayTypeArrayOutput) ToGatewayTypeArrayOutputWithContext(ctx context.Context) GatewayTypeArrayOutput {
	return o
}

func (o GatewayTypeArrayOutput) Index(i pulumi.IntInput) GatewayTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayType {
		return vs[0].([]GatewayType)[vs[1].(int)]
	}).(GatewayTypeOutput)
}

// GatewayList is a list of Gateway
type GatewayListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of gateways. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []GatewayType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// GatewayListTypeInput is an input type that accepts GatewayListTypeArgs and GatewayListTypeOutput values.
// You can construct a concrete instance of `GatewayListTypeInput` via:
//
//	GatewayListTypeArgs{...}
type GatewayListTypeInput interface {
	pulumi.Input

	ToGatewayListTypeOutput() GatewayListTypeOutput
	ToGatewayListTypeOutputWithContext(context.Context) GatewayListTypeOutput
}

// GatewayList is a list of Gateway
type GatewayListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of gateways. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items GatewayTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (GatewayListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayListType)(nil)).Elem()
}

func (i GatewayListTypeArgs) ToGatewayListTypeOutput() GatewayListTypeOutput {
	return i.ToGatewayListTypeOutputWithContext(context.Background())
}

func (i GatewayListTypeArgs) ToGatewayListTypeOutputWithContext(ctx context.Context) GatewayListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayListTypeOutput)
}

// GatewayList is a list of Gateway
type GatewayListTypeOutput struct{ *pulumi.OutputState }

func (GatewayListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayListType)(nil)).Elem()
}

func (o GatewayListTypeOutput) ToGatewayListTypeOutput() GatewayListTypeOutput {
	return o
}

func (o GatewayListTypeOutput) ToGatewayListTypeOutputWithContext(ctx context.Context) GatewayListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o GatewayListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of gateways. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o GatewayListTypeOutput) Items() GatewayTypeArrayOutput {
	return o.ApplyT(func(v GatewayListType) []GatewayType { return v.Items }).(GatewayTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o GatewayListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o GatewayListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v GatewayListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

type GatewayPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *GatewaySpecPatch       `pulumi:"spec"`
	Status   map[string]interface{}  `pulumi:"status"`
}

// GatewayPatchTypeInput is an input type that accepts GatewayPatchTypeArgs and GatewayPatchTypeOutput values.
// You can construct a concrete instance of `GatewayPatchTypeInput` via:
//
//	GatewayPatchTypeArgs{...}
type GatewayPatchTypeInput interface {
	pulumi.Input

	ToGatewayPatchTypeOutput() GatewayPatchTypeOutput
	ToGatewayPatchTypeOutputWithContext(context.Context) GatewayPatchTypeOutput
}

type GatewayPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
	Spec     GatewaySpecPatchPtrInput       `pulumi:"spec"`
	Status   pulumi.MapInput                `pulumi:"status"`
}

func (GatewayPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPatchType)(nil)).Elem()
}

func (i GatewayPatchTypeArgs) ToGatewayPatchTypeOutput() GatewayPatchTypeOutput {
	return i.ToGatewayPatchTypeOutputWithContext(context.Background())
}

func (i GatewayPatchTypeArgs) ToGatewayPatchTypeOutputWithContext(ctx context.Context) GatewayPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPatchTypeOutput)
}

type GatewayPatchTypeOutput struct{ *pulumi.OutputState }

func (GatewayPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayPatchType)(nil)).Elem()
}

func (o GatewayPatchTypeOutput) ToGatewayPatchTypeOutput() GatewayPatchTypeOutput {
	return o
}

func (o GatewayPatchTypeOutput) ToGatewayPatchTypeOutputWithContext(ctx context.Context) GatewayPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o GatewayPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o GatewayPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o GatewayPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v GatewayPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o GatewayPatchTypeOutput) Spec() GatewaySpecPatchPtrOutput {
	return o.ApplyT(func(v GatewayPatchType) *GatewaySpecPatch { return v.Spec }).(GatewaySpecPatchPtrOutput)
}

func (o GatewayPatchTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v GatewayPatchType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

// Configuration affecting edge load balancer. See more details at: https://istio.io/docs/reference/config/networking/gateway.html
type GatewaySpec struct {
	// One or more labels that indicate a specific set of pods/VMs on which this gateway configuration should be applied.
	Selector map[string]string `pulumi:"selector"`
	// A list of server specifications.
	Servers []GatewaySpecServers `pulumi:"servers"`
}

// GatewaySpecInput is an input type that accepts GatewaySpecArgs and GatewaySpecOutput values.
// You can construct a concrete instance of `GatewaySpecInput` via:
//
//	GatewaySpecArgs{...}
type GatewaySpecInput interface {
	pulumi.Input

	ToGatewaySpecOutput() GatewaySpecOutput
	ToGatewaySpecOutputWithContext(context.Context) GatewaySpecOutput
}

// Configuration affecting edge load balancer. See more details at: https://istio.io/docs/reference/config/networking/gateway.html
type GatewaySpecArgs struct {
	// One or more labels that indicate a specific set of pods/VMs on which this gateway configuration should be applied.
	Selector pulumi.StringMapInput `pulumi:"selector"`
	// A list of server specifications.
	Servers GatewaySpecServersArrayInput `pulumi:"servers"`
}

func (GatewaySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaySpec)(nil)).Elem()
}

func (i GatewaySpecArgs) ToGatewaySpecOutput() GatewaySpecOutput {
	return i.ToGatewaySpecOutputWithContext(context.Background())
}

func (i GatewaySpecArgs) ToGatewaySpecOutputWithContext(ctx context.Context) GatewaySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySpecOutput)
}

func (i GatewaySpecArgs) ToGatewaySpecPtrOutput() GatewaySpecPtrOutput {
	return i.ToGatewaySpecPtrOutputWithContext(context.Background())
}

func (i GatewaySpecArgs) ToGatewaySpecPtrOutputWithContext(ctx context.Context) GatewaySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySpecOutput).ToGatewaySpecPtrOutputWithContext(ctx)
}

// GatewaySpecPtrInput is an input type that accepts GatewaySpecArgs, GatewaySpecPtr and GatewaySpecPtrOutput values.
// You can construct a concrete instance of `GatewaySpecPtrInput` via:
//
//	        GatewaySpecArgs{...}
//
//	or:
//
//	        nil
type GatewaySpecPtrInput interface {
	pulumi.Input

	ToGatewaySpecPtrOutput() GatewaySpecPtrOutput
	ToGatewaySpecPtrOutputWithContext(context.Context) GatewaySpecPtrOutput
}

type gatewaySpecPtrType GatewaySpecArgs

func GatewaySpecPtr(v *GatewaySpecArgs) GatewaySpecPtrInput {
	return (*gatewaySpecPtrType)(v)
}

func (*gatewaySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewaySpec)(nil)).Elem()
}

func (i *gatewaySpecPtrType) ToGatewaySpecPtrOutput() GatewaySpecPtrOutput {
	return i.ToGatewaySpecPtrOutputWithContext(context.Background())
}

func (i *gatewaySpecPtrType) ToGatewaySpecPtrOutputWithContext(ctx context.Context) GatewaySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySpecPtrOutput)
}

// Configuration affecting edge load balancer. See more details at: https://istio.io/docs/reference/config/networking/gateway.html
type GatewaySpecOutput struct{ *pulumi.OutputState }

func (GatewaySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaySpec)(nil)).Elem()
}

func (o GatewaySpecOutput) ToGatewaySpecOutput() GatewaySpecOutput {
	return o
}

func (o GatewaySpecOutput) ToGatewaySpecOutputWithContext(ctx context.Context) GatewaySpecOutput {
	return o
}

func (o GatewaySpecOutput) ToGatewaySpecPtrOutput() GatewaySpecPtrOutput {
	return o.ToGatewaySpecPtrOutputWithContext(context.Background())
}

func (o GatewaySpecOutput) ToGatewaySpecPtrOutputWithContext(ctx context.Context) GatewaySpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewaySpec) *GatewaySpec {
		return &v
	}).(GatewaySpecPtrOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which this gateway configuration should be applied.
func (o GatewaySpecOutput) Selector() pulumi.StringMapOutput {
	return o.ApplyT(func(v GatewaySpec) map[string]string { return v.Selector }).(pulumi.StringMapOutput)
}

// A list of server specifications.
func (o GatewaySpecOutput) Servers() GatewaySpecServersArrayOutput {
	return o.ApplyT(func(v GatewaySpec) []GatewaySpecServers { return v.Servers }).(GatewaySpecServersArrayOutput)
}

type GatewaySpecPtrOutput struct{ *pulumi.OutputState }

func (GatewaySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewaySpec)(nil)).Elem()
}

func (o GatewaySpecPtrOutput) ToGatewaySpecPtrOutput() GatewaySpecPtrOutput {
	return o
}

func (o GatewaySpecPtrOutput) ToGatewaySpecPtrOutputWithContext(ctx context.Context) GatewaySpecPtrOutput {
	return o
}

func (o GatewaySpecPtrOutput) Elem() GatewaySpecOutput {
	return o.ApplyT(func(v *GatewaySpec) GatewaySpec {
		if v != nil {
			return *v
		}
		var ret GatewaySpec
		return ret
	}).(GatewaySpecOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which this gateway configuration should be applied.
func (o GatewaySpecPtrOutput) Selector() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GatewaySpec) map[string]string {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(pulumi.StringMapOutput)
}

// A list of server specifications.
func (o GatewaySpecPtrOutput) Servers() GatewaySpecServersArrayOutput {
	return o.ApplyT(func(v *GatewaySpec) []GatewaySpecServers {
		if v == nil {
			return nil
		}
		return v.Servers
	}).(GatewaySpecServersArrayOutput)
}

// Configuration affecting edge load balancer. See more details at: https://istio.io/docs/reference/config/networking/gateway.html
type GatewaySpecPatch struct {
	// One or more labels that indicate a specific set of pods/VMs on which this gateway configuration should be applied.
	Selector map[string]string `pulumi:"selector"`
	// A list of server specifications.
	Servers []GatewaySpecServersPatch `pulumi:"servers"`
}

// GatewaySpecPatchInput is an input type that accepts GatewaySpecPatchArgs and GatewaySpecPatchOutput values.
// You can construct a concrete instance of `GatewaySpecPatchInput` via:
//
//	GatewaySpecPatchArgs{...}
type GatewaySpecPatchInput interface {
	pulumi.Input

	ToGatewaySpecPatchOutput() GatewaySpecPatchOutput
	ToGatewaySpecPatchOutputWithContext(context.Context) GatewaySpecPatchOutput
}

// Configuration affecting edge load balancer. See more details at: https://istio.io/docs/reference/config/networking/gateway.html
type GatewaySpecPatchArgs struct {
	// One or more labels that indicate a specific set of pods/VMs on which this gateway configuration should be applied.
	Selector pulumi.StringMapInput `pulumi:"selector"`
	// A list of server specifications.
	Servers GatewaySpecServersPatchArrayInput `pulumi:"servers"`
}

func (GatewaySpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaySpecPatch)(nil)).Elem()
}

func (i GatewaySpecPatchArgs) ToGatewaySpecPatchOutput() GatewaySpecPatchOutput {
	return i.ToGatewaySpecPatchOutputWithContext(context.Background())
}

func (i GatewaySpecPatchArgs) ToGatewaySpecPatchOutputWithContext(ctx context.Context) GatewaySpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySpecPatchOutput)
}

func (i GatewaySpecPatchArgs) ToGatewaySpecPatchPtrOutput() GatewaySpecPatchPtrOutput {
	return i.ToGatewaySpecPatchPtrOutputWithContext(context.Background())
}

func (i GatewaySpecPatchArgs) ToGatewaySpecPatchPtrOutputWithContext(ctx context.Context) GatewaySpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySpecPatchOutput).ToGatewaySpecPatchPtrOutputWithContext(ctx)
}

// GatewaySpecPatchPtrInput is an input type that accepts GatewaySpecPatchArgs, GatewaySpecPatchPtr and GatewaySpecPatchPtrOutput values.
// You can construct a concrete instance of `GatewaySpecPatchPtrInput` via:
//
//	        GatewaySpecPatchArgs{...}
//
//	or:
//
//	        nil
type GatewaySpecPatchPtrInput interface {
	pulumi.Input

	ToGatewaySpecPatchPtrOutput() GatewaySpecPatchPtrOutput
	ToGatewaySpecPatchPtrOutputWithContext(context.Context) GatewaySpecPatchPtrOutput
}

type gatewaySpecPatchPtrType GatewaySpecPatchArgs

func GatewaySpecPatchPtr(v *GatewaySpecPatchArgs) GatewaySpecPatchPtrInput {
	return (*gatewaySpecPatchPtrType)(v)
}

func (*gatewaySpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewaySpecPatch)(nil)).Elem()
}

func (i *gatewaySpecPatchPtrType) ToGatewaySpecPatchPtrOutput() GatewaySpecPatchPtrOutput {
	return i.ToGatewaySpecPatchPtrOutputWithContext(context.Background())
}

func (i *gatewaySpecPatchPtrType) ToGatewaySpecPatchPtrOutputWithContext(ctx context.Context) GatewaySpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySpecPatchPtrOutput)
}

// Configuration affecting edge load balancer. See more details at: https://istio.io/docs/reference/config/networking/gateway.html
type GatewaySpecPatchOutput struct{ *pulumi.OutputState }

func (GatewaySpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaySpecPatch)(nil)).Elem()
}

func (o GatewaySpecPatchOutput) ToGatewaySpecPatchOutput() GatewaySpecPatchOutput {
	return o
}

func (o GatewaySpecPatchOutput) ToGatewaySpecPatchOutputWithContext(ctx context.Context) GatewaySpecPatchOutput {
	return o
}

func (o GatewaySpecPatchOutput) ToGatewaySpecPatchPtrOutput() GatewaySpecPatchPtrOutput {
	return o.ToGatewaySpecPatchPtrOutputWithContext(context.Background())
}

func (o GatewaySpecPatchOutput) ToGatewaySpecPatchPtrOutputWithContext(ctx context.Context) GatewaySpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewaySpecPatch) *GatewaySpecPatch {
		return &v
	}).(GatewaySpecPatchPtrOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which this gateway configuration should be applied.
func (o GatewaySpecPatchOutput) Selector() pulumi.StringMapOutput {
	return o.ApplyT(func(v GatewaySpecPatch) map[string]string { return v.Selector }).(pulumi.StringMapOutput)
}

// A list of server specifications.
func (o GatewaySpecPatchOutput) Servers() GatewaySpecServersPatchArrayOutput {
	return o.ApplyT(func(v GatewaySpecPatch) []GatewaySpecServersPatch { return v.Servers }).(GatewaySpecServersPatchArrayOutput)
}

type GatewaySpecPatchPtrOutput struct{ *pulumi.OutputState }

func (GatewaySpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewaySpecPatch)(nil)).Elem()
}

func (o GatewaySpecPatchPtrOutput) ToGatewaySpecPatchPtrOutput() GatewaySpecPatchPtrOutput {
	return o
}

func (o GatewaySpecPatchPtrOutput) ToGatewaySpecPatchPtrOutputWithContext(ctx context.Context) GatewaySpecPatchPtrOutput {
	return o
}

func (o GatewaySpecPatchPtrOutput) Elem() GatewaySpecPatchOutput {
	return o.ApplyT(func(v *GatewaySpecPatch) GatewaySpecPatch {
		if v != nil {
			return *v
		}
		var ret GatewaySpecPatch
		return ret
	}).(GatewaySpecPatchOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which this gateway configuration should be applied.
func (o GatewaySpecPatchPtrOutput) Selector() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GatewaySpecPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(pulumi.StringMapOutput)
}

// A list of server specifications.
func (o GatewaySpecPatchPtrOutput) Servers() GatewaySpecServersPatchArrayOutput {
	return o.ApplyT(func(v *GatewaySpecPatch) []GatewaySpecServersPatch {
		if v == nil {
			return nil
		}
		return v.Servers
	}).(GatewaySpecServersPatchArrayOutput)
}

type GatewaySpecServers struct {
	// The ip or the Unix domain socket to which the listener should be bound to.
	Bind            *string `pulumi:"bind"`
	DefaultEndpoint *string `pulumi:"defaultEndpoint"`
	// One or more hosts exposed by this gateway.
	Hosts []string `pulumi:"hosts"`
	// An optional name of the server, when set must be unique across all servers.
	Name *string                 `pulumi:"name"`
	Port *GatewaySpecServersPort `pulumi:"port"`
	Tls  *GatewaySpecServersTls  `pulumi:"tls"`
}

// GatewaySpecServersInput is an input type that accepts GatewaySpecServersArgs and GatewaySpecServersOutput values.
// You can construct a concrete instance of `GatewaySpecServersInput` via:
//
//	GatewaySpecServersArgs{...}
type GatewaySpecServersInput interface {
	pulumi.Input

	ToGatewaySpecServersOutput() GatewaySpecServersOutput
	ToGatewaySpecServersOutputWithContext(context.Context) GatewaySpecServersOutput
}

type GatewaySpecServersArgs struct {
	// The ip or the Unix domain socket to which the listener should be bound to.
	Bind            pulumi.StringPtrInput `pulumi:"bind"`
	DefaultEndpoint pulumi.StringPtrInput `pulumi:"defaultEndpoint"`
	// One or more hosts exposed by this gateway.
	Hosts pulumi.StringArrayInput `pulumi:"hosts"`
	// An optional name of the server, when set must be unique across all servers.
	Name pulumi.StringPtrInput          `pulumi:"name"`
	Port GatewaySpecServersPortPtrInput `pulumi:"port"`
	Tls  GatewaySpecServersTlsPtrInput  `pulumi:"tls"`
}

func (GatewaySpecServersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaySpecServers)(nil)).Elem()
}

func (i GatewaySpecServersArgs) ToGatewaySpecServersOutput() GatewaySpecServersOutput {
	return i.ToGatewaySpecServersOutputWithContext(context.Background())
}

func (i GatewaySpecServersArgs) ToGatewaySpecServersOutputWithContext(ctx context.Context) GatewaySpecServersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySpecServersOutput)
}

// GatewaySpecServersArrayInput is an input type that accepts GatewaySpecServersArray and GatewaySpecServersArrayOutput values.
// You can construct a concrete instance of `GatewaySpecServersArrayInput` via:
//
//	GatewaySpecServersArray{ GatewaySpecServersArgs{...} }
type GatewaySpecServersArrayInput interface {
	pulumi.Input

	ToGatewaySpecServersArrayOutput() GatewaySpecServersArrayOutput
	ToGatewaySpecServersArrayOutputWithContext(context.Context) GatewaySpecServersArrayOutput
}

type GatewaySpecServersArray []GatewaySpecServersInput

func (GatewaySpecServersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewaySpecServers)(nil)).Elem()
}

func (i GatewaySpecServersArray) ToGatewaySpecServersArrayOutput() GatewaySpecServersArrayOutput {
	return i.ToGatewaySpecServersArrayOutputWithContext(context.Background())
}

func (i GatewaySpecServersArray) ToGatewaySpecServersArrayOutputWithContext(ctx context.Context) GatewaySpecServersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySpecServersArrayOutput)
}

type GatewaySpecServersOutput struct{ *pulumi.OutputState }

func (GatewaySpecServersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaySpecServers)(nil)).Elem()
}

func (o GatewaySpecServersOutput) ToGatewaySpecServersOutput() GatewaySpecServersOutput {
	return o
}

func (o GatewaySpecServersOutput) ToGatewaySpecServersOutputWithContext(ctx context.Context) GatewaySpecServersOutput {
	return o
}

// The ip or the Unix domain socket to which the listener should be bound to.
func (o GatewaySpecServersOutput) Bind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServers) *string { return v.Bind }).(pulumi.StringPtrOutput)
}

func (o GatewaySpecServersOutput) DefaultEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServers) *string { return v.DefaultEndpoint }).(pulumi.StringPtrOutput)
}

// One or more hosts exposed by this gateway.
func (o GatewaySpecServersOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewaySpecServers) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// An optional name of the server, when set must be unique across all servers.
func (o GatewaySpecServersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServers) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GatewaySpecServersOutput) Port() GatewaySpecServersPortPtrOutput {
	return o.ApplyT(func(v GatewaySpecServers) *GatewaySpecServersPort { return v.Port }).(GatewaySpecServersPortPtrOutput)
}

func (o GatewaySpecServersOutput) Tls() GatewaySpecServersTlsPtrOutput {
	return o.ApplyT(func(v GatewaySpecServers) *GatewaySpecServersTls { return v.Tls }).(GatewaySpecServersTlsPtrOutput)
}

type GatewaySpecServersArrayOutput struct{ *pulumi.OutputState }

func (GatewaySpecServersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewaySpecServers)(nil)).Elem()
}

func (o GatewaySpecServersArrayOutput) ToGatewaySpecServersArrayOutput() GatewaySpecServersArrayOutput {
	return o
}

func (o GatewaySpecServersArrayOutput) ToGatewaySpecServersArrayOutputWithContext(ctx context.Context) GatewaySpecServersArrayOutput {
	return o
}

func (o GatewaySpecServersArrayOutput) Index(i pulumi.IntInput) GatewaySpecServersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewaySpecServers {
		return vs[0].([]GatewaySpecServers)[vs[1].(int)]
	}).(GatewaySpecServersOutput)
}

type GatewaySpecServersPatch struct {
	// The ip or the Unix domain socket to which the listener should be bound to.
	Bind            *string `pulumi:"bind"`
	DefaultEndpoint *string `pulumi:"defaultEndpoint"`
	// One or more hosts exposed by this gateway.
	Hosts []string `pulumi:"hosts"`
	// An optional name of the server, when set must be unique across all servers.
	Name *string                      `pulumi:"name"`
	Port *GatewaySpecServersPortPatch `pulumi:"port"`
	Tls  *GatewaySpecServersTlsPatch  `pulumi:"tls"`
}

// GatewaySpecServersPatchInput is an input type that accepts GatewaySpecServersPatchArgs and GatewaySpecServersPatchOutput values.
// You can construct a concrete instance of `GatewaySpecServersPatchInput` via:
//
//	GatewaySpecServersPatchArgs{...}
type GatewaySpecServersPatchInput interface {
	pulumi.Input

	ToGatewaySpecServersPatchOutput() GatewaySpecServersPatchOutput
	ToGatewaySpecServersPatchOutputWithContext(context.Context) GatewaySpecServersPatchOutput
}

type GatewaySpecServersPatchArgs struct {
	// The ip or the Unix domain socket to which the listener should be bound to.
	Bind            pulumi.StringPtrInput `pulumi:"bind"`
	DefaultEndpoint pulumi.StringPtrInput `pulumi:"defaultEndpoint"`
	// One or more hosts exposed by this gateway.
	Hosts pulumi.StringArrayInput `pulumi:"hosts"`
	// An optional name of the server, when set must be unique across all servers.
	Name pulumi.StringPtrInput               `pulumi:"name"`
	Port GatewaySpecServersPortPatchPtrInput `pulumi:"port"`
	Tls  GatewaySpecServersTlsPatchPtrInput  `pulumi:"tls"`
}

func (GatewaySpecServersPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaySpecServersPatch)(nil)).Elem()
}

func (i GatewaySpecServersPatchArgs) ToGatewaySpecServersPatchOutput() GatewaySpecServersPatchOutput {
	return i.ToGatewaySpecServersPatchOutputWithContext(context.Background())
}

func (i GatewaySpecServersPatchArgs) ToGatewaySpecServersPatchOutputWithContext(ctx context.Context) GatewaySpecServersPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySpecServersPatchOutput)
}

// GatewaySpecServersPatchArrayInput is an input type that accepts GatewaySpecServersPatchArray and GatewaySpecServersPatchArrayOutput values.
// You can construct a concrete instance of `GatewaySpecServersPatchArrayInput` via:
//
//	GatewaySpecServersPatchArray{ GatewaySpecServersPatchArgs{...} }
type GatewaySpecServersPatchArrayInput interface {
	pulumi.Input

	ToGatewaySpecServersPatchArrayOutput() GatewaySpecServersPatchArrayOutput
	ToGatewaySpecServersPatchArrayOutputWithContext(context.Context) GatewaySpecServersPatchArrayOutput
}

type GatewaySpecServersPatchArray []GatewaySpecServersPatchInput

func (GatewaySpecServersPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewaySpecServersPatch)(nil)).Elem()
}

func (i GatewaySpecServersPatchArray) ToGatewaySpecServersPatchArrayOutput() GatewaySpecServersPatchArrayOutput {
	return i.ToGatewaySpecServersPatchArrayOutputWithContext(context.Background())
}

func (i GatewaySpecServersPatchArray) ToGatewaySpecServersPatchArrayOutputWithContext(ctx context.Context) GatewaySpecServersPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySpecServersPatchArrayOutput)
}

type GatewaySpecServersPatchOutput struct{ *pulumi.OutputState }

func (GatewaySpecServersPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaySpecServersPatch)(nil)).Elem()
}

func (o GatewaySpecServersPatchOutput) ToGatewaySpecServersPatchOutput() GatewaySpecServersPatchOutput {
	return o
}

func (o GatewaySpecServersPatchOutput) ToGatewaySpecServersPatchOutputWithContext(ctx context.Context) GatewaySpecServersPatchOutput {
	return o
}

// The ip or the Unix domain socket to which the listener should be bound to.
func (o GatewaySpecServersPatchOutput) Bind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersPatch) *string { return v.Bind }).(pulumi.StringPtrOutput)
}

func (o GatewaySpecServersPatchOutput) DefaultEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersPatch) *string { return v.DefaultEndpoint }).(pulumi.StringPtrOutput)
}

// One or more hosts exposed by this gateway.
func (o GatewaySpecServersPatchOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewaySpecServersPatch) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// An optional name of the server, when set must be unique across all servers.
func (o GatewaySpecServersPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GatewaySpecServersPatchOutput) Port() GatewaySpecServersPortPatchPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersPatch) *GatewaySpecServersPortPatch { return v.Port }).(GatewaySpecServersPortPatchPtrOutput)
}

func (o GatewaySpecServersPatchOutput) Tls() GatewaySpecServersTlsPatchPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersPatch) *GatewaySpecServersTlsPatch { return v.Tls }).(GatewaySpecServersTlsPatchPtrOutput)
}

type GatewaySpecServersPatchArrayOutput struct{ *pulumi.OutputState }

func (GatewaySpecServersPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewaySpecServersPatch)(nil)).Elem()
}

func (o GatewaySpecServersPatchArrayOutput) ToGatewaySpecServersPatchArrayOutput() GatewaySpecServersPatchArrayOutput {
	return o
}

func (o GatewaySpecServersPatchArrayOutput) ToGatewaySpecServersPatchArrayOutputWithContext(ctx context.Context) GatewaySpecServersPatchArrayOutput {
	return o
}

func (o GatewaySpecServersPatchArrayOutput) Index(i pulumi.IntInput) GatewaySpecServersPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewaySpecServersPatch {
		return vs[0].([]GatewaySpecServersPatch)[vs[1].(int)]
	}).(GatewaySpecServersPatchOutput)
}

// The Port on which the proxy should listen for incoming connections.
type GatewaySpecServersPort struct {
	// Label assigned to the port.
	Name *string `pulumi:"name"`
	// A valid non-negative integer port number.
	Number *int `pulumi:"number"`
	// The protocol exposed on the port.
	Protocol   *string `pulumi:"protocol"`
	TargetPort *int    `pulumi:"targetPort"`
}

// GatewaySpecServersPortInput is an input type that accepts GatewaySpecServersPortArgs and GatewaySpecServersPortOutput values.
// You can construct a concrete instance of `GatewaySpecServersPortInput` via:
//
//	GatewaySpecServersPortArgs{...}
type GatewaySpecServersPortInput interface {
	pulumi.Input

	ToGatewaySpecServersPortOutput() GatewaySpecServersPortOutput
	ToGatewaySpecServersPortOutputWithContext(context.Context) GatewaySpecServersPortOutput
}

// The Port on which the proxy should listen for incoming connections.
type GatewaySpecServersPortArgs struct {
	// Label assigned to the port.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A valid non-negative integer port number.
	Number pulumi.IntPtrInput `pulumi:"number"`
	// The protocol exposed on the port.
	Protocol   pulumi.StringPtrInput `pulumi:"protocol"`
	TargetPort pulumi.IntPtrInput    `pulumi:"targetPort"`
}

func (GatewaySpecServersPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaySpecServersPort)(nil)).Elem()
}

func (i GatewaySpecServersPortArgs) ToGatewaySpecServersPortOutput() GatewaySpecServersPortOutput {
	return i.ToGatewaySpecServersPortOutputWithContext(context.Background())
}

func (i GatewaySpecServersPortArgs) ToGatewaySpecServersPortOutputWithContext(ctx context.Context) GatewaySpecServersPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySpecServersPortOutput)
}

func (i GatewaySpecServersPortArgs) ToGatewaySpecServersPortPtrOutput() GatewaySpecServersPortPtrOutput {
	return i.ToGatewaySpecServersPortPtrOutputWithContext(context.Background())
}

func (i GatewaySpecServersPortArgs) ToGatewaySpecServersPortPtrOutputWithContext(ctx context.Context) GatewaySpecServersPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySpecServersPortOutput).ToGatewaySpecServersPortPtrOutputWithContext(ctx)
}

// GatewaySpecServersPortPtrInput is an input type that accepts GatewaySpecServersPortArgs, GatewaySpecServersPortPtr and GatewaySpecServersPortPtrOutput values.
// You can construct a concrete instance of `GatewaySpecServersPortPtrInput` via:
//
//	        GatewaySpecServersPortArgs{...}
//
//	or:
//
//	        nil
type GatewaySpecServersPortPtrInput interface {
	pulumi.Input

	ToGatewaySpecServersPortPtrOutput() GatewaySpecServersPortPtrOutput
	ToGatewaySpecServersPortPtrOutputWithContext(context.Context) GatewaySpecServersPortPtrOutput
}

type gatewaySpecServersPortPtrType GatewaySpecServersPortArgs

func GatewaySpecServersPortPtr(v *GatewaySpecServersPortArgs) GatewaySpecServersPortPtrInput {
	return (*gatewaySpecServersPortPtrType)(v)
}

func (*gatewaySpecServersPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewaySpecServersPort)(nil)).Elem()
}

func (i *gatewaySpecServersPortPtrType) ToGatewaySpecServersPortPtrOutput() GatewaySpecServersPortPtrOutput {
	return i.ToGatewaySpecServersPortPtrOutputWithContext(context.Background())
}

func (i *gatewaySpecServersPortPtrType) ToGatewaySpecServersPortPtrOutputWithContext(ctx context.Context) GatewaySpecServersPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySpecServersPortPtrOutput)
}

// The Port on which the proxy should listen for incoming connections.
type GatewaySpecServersPortOutput struct{ *pulumi.OutputState }

func (GatewaySpecServersPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaySpecServersPort)(nil)).Elem()
}

func (o GatewaySpecServersPortOutput) ToGatewaySpecServersPortOutput() GatewaySpecServersPortOutput {
	return o
}

func (o GatewaySpecServersPortOutput) ToGatewaySpecServersPortOutputWithContext(ctx context.Context) GatewaySpecServersPortOutput {
	return o
}

func (o GatewaySpecServersPortOutput) ToGatewaySpecServersPortPtrOutput() GatewaySpecServersPortPtrOutput {
	return o.ToGatewaySpecServersPortPtrOutputWithContext(context.Background())
}

func (o GatewaySpecServersPortOutput) ToGatewaySpecServersPortPtrOutputWithContext(ctx context.Context) GatewaySpecServersPortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewaySpecServersPort) *GatewaySpecServersPort {
		return &v
	}).(GatewaySpecServersPortPtrOutput)
}

// Label assigned to the port.
func (o GatewaySpecServersPortOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersPort) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A valid non-negative integer port number.
func (o GatewaySpecServersPortOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersPort) *int { return v.Number }).(pulumi.IntPtrOutput)
}

// The protocol exposed on the port.
func (o GatewaySpecServersPortOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersPort) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o GatewaySpecServersPortOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersPort) *int { return v.TargetPort }).(pulumi.IntPtrOutput)
}

type GatewaySpecServersPortPtrOutput struct{ *pulumi.OutputState }

func (GatewaySpecServersPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewaySpecServersPort)(nil)).Elem()
}

func (o GatewaySpecServersPortPtrOutput) ToGatewaySpecServersPortPtrOutput() GatewaySpecServersPortPtrOutput {
	return o
}

func (o GatewaySpecServersPortPtrOutput) ToGatewaySpecServersPortPtrOutputWithContext(ctx context.Context) GatewaySpecServersPortPtrOutput {
	return o
}

func (o GatewaySpecServersPortPtrOutput) Elem() GatewaySpecServersPortOutput {
	return o.ApplyT(func(v *GatewaySpecServersPort) GatewaySpecServersPort {
		if v != nil {
			return *v
		}
		var ret GatewaySpecServersPort
		return ret
	}).(GatewaySpecServersPortOutput)
}

// Label assigned to the port.
func (o GatewaySpecServersPortPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersPort) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A valid non-negative integer port number.
func (o GatewaySpecServersPortPtrOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersPort) *int {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.IntPtrOutput)
}

// The protocol exposed on the port.
func (o GatewaySpecServersPortPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersPort) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

func (o GatewaySpecServersPortPtrOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersPort) *int {
		if v == nil {
			return nil
		}
		return v.TargetPort
	}).(pulumi.IntPtrOutput)
}

// The Port on which the proxy should listen for incoming connections.
type GatewaySpecServersPortPatch struct {
	// Label assigned to the port.
	Name *string `pulumi:"name"`
	// A valid non-negative integer port number.
	Number *int `pulumi:"number"`
	// The protocol exposed on the port.
	Protocol   *string `pulumi:"protocol"`
	TargetPort *int    `pulumi:"targetPort"`
}

// GatewaySpecServersPortPatchInput is an input type that accepts GatewaySpecServersPortPatchArgs and GatewaySpecServersPortPatchOutput values.
// You can construct a concrete instance of `GatewaySpecServersPortPatchInput` via:
//
//	GatewaySpecServersPortPatchArgs{...}
type GatewaySpecServersPortPatchInput interface {
	pulumi.Input

	ToGatewaySpecServersPortPatchOutput() GatewaySpecServersPortPatchOutput
	ToGatewaySpecServersPortPatchOutputWithContext(context.Context) GatewaySpecServersPortPatchOutput
}

// The Port on which the proxy should listen for incoming connections.
type GatewaySpecServersPortPatchArgs struct {
	// Label assigned to the port.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A valid non-negative integer port number.
	Number pulumi.IntPtrInput `pulumi:"number"`
	// The protocol exposed on the port.
	Protocol   pulumi.StringPtrInput `pulumi:"protocol"`
	TargetPort pulumi.IntPtrInput    `pulumi:"targetPort"`
}

func (GatewaySpecServersPortPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaySpecServersPortPatch)(nil)).Elem()
}

func (i GatewaySpecServersPortPatchArgs) ToGatewaySpecServersPortPatchOutput() GatewaySpecServersPortPatchOutput {
	return i.ToGatewaySpecServersPortPatchOutputWithContext(context.Background())
}

func (i GatewaySpecServersPortPatchArgs) ToGatewaySpecServersPortPatchOutputWithContext(ctx context.Context) GatewaySpecServersPortPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySpecServersPortPatchOutput)
}

func (i GatewaySpecServersPortPatchArgs) ToGatewaySpecServersPortPatchPtrOutput() GatewaySpecServersPortPatchPtrOutput {
	return i.ToGatewaySpecServersPortPatchPtrOutputWithContext(context.Background())
}

func (i GatewaySpecServersPortPatchArgs) ToGatewaySpecServersPortPatchPtrOutputWithContext(ctx context.Context) GatewaySpecServersPortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySpecServersPortPatchOutput).ToGatewaySpecServersPortPatchPtrOutputWithContext(ctx)
}

// GatewaySpecServersPortPatchPtrInput is an input type that accepts GatewaySpecServersPortPatchArgs, GatewaySpecServersPortPatchPtr and GatewaySpecServersPortPatchPtrOutput values.
// You can construct a concrete instance of `GatewaySpecServersPortPatchPtrInput` via:
//
//	        GatewaySpecServersPortPatchArgs{...}
//
//	or:
//
//	        nil
type GatewaySpecServersPortPatchPtrInput interface {
	pulumi.Input

	ToGatewaySpecServersPortPatchPtrOutput() GatewaySpecServersPortPatchPtrOutput
	ToGatewaySpecServersPortPatchPtrOutputWithContext(context.Context) GatewaySpecServersPortPatchPtrOutput
}

type gatewaySpecServersPortPatchPtrType GatewaySpecServersPortPatchArgs

func GatewaySpecServersPortPatchPtr(v *GatewaySpecServersPortPatchArgs) GatewaySpecServersPortPatchPtrInput {
	return (*gatewaySpecServersPortPatchPtrType)(v)
}

func (*gatewaySpecServersPortPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewaySpecServersPortPatch)(nil)).Elem()
}

func (i *gatewaySpecServersPortPatchPtrType) ToGatewaySpecServersPortPatchPtrOutput() GatewaySpecServersPortPatchPtrOutput {
	return i.ToGatewaySpecServersPortPatchPtrOutputWithContext(context.Background())
}

func (i *gatewaySpecServersPortPatchPtrType) ToGatewaySpecServersPortPatchPtrOutputWithContext(ctx context.Context) GatewaySpecServersPortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySpecServersPortPatchPtrOutput)
}

// The Port on which the proxy should listen for incoming connections.
type GatewaySpecServersPortPatchOutput struct{ *pulumi.OutputState }

func (GatewaySpecServersPortPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaySpecServersPortPatch)(nil)).Elem()
}

func (o GatewaySpecServersPortPatchOutput) ToGatewaySpecServersPortPatchOutput() GatewaySpecServersPortPatchOutput {
	return o
}

func (o GatewaySpecServersPortPatchOutput) ToGatewaySpecServersPortPatchOutputWithContext(ctx context.Context) GatewaySpecServersPortPatchOutput {
	return o
}

func (o GatewaySpecServersPortPatchOutput) ToGatewaySpecServersPortPatchPtrOutput() GatewaySpecServersPortPatchPtrOutput {
	return o.ToGatewaySpecServersPortPatchPtrOutputWithContext(context.Background())
}

func (o GatewaySpecServersPortPatchOutput) ToGatewaySpecServersPortPatchPtrOutputWithContext(ctx context.Context) GatewaySpecServersPortPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewaySpecServersPortPatch) *GatewaySpecServersPortPatch {
		return &v
	}).(GatewaySpecServersPortPatchPtrOutput)
}

// Label assigned to the port.
func (o GatewaySpecServersPortPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersPortPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A valid non-negative integer port number.
func (o GatewaySpecServersPortPatchOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersPortPatch) *int { return v.Number }).(pulumi.IntPtrOutput)
}

// The protocol exposed on the port.
func (o GatewaySpecServersPortPatchOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersPortPatch) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o GatewaySpecServersPortPatchOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersPortPatch) *int { return v.TargetPort }).(pulumi.IntPtrOutput)
}

type GatewaySpecServersPortPatchPtrOutput struct{ *pulumi.OutputState }

func (GatewaySpecServersPortPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewaySpecServersPortPatch)(nil)).Elem()
}

func (o GatewaySpecServersPortPatchPtrOutput) ToGatewaySpecServersPortPatchPtrOutput() GatewaySpecServersPortPatchPtrOutput {
	return o
}

func (o GatewaySpecServersPortPatchPtrOutput) ToGatewaySpecServersPortPatchPtrOutputWithContext(ctx context.Context) GatewaySpecServersPortPatchPtrOutput {
	return o
}

func (o GatewaySpecServersPortPatchPtrOutput) Elem() GatewaySpecServersPortPatchOutput {
	return o.ApplyT(func(v *GatewaySpecServersPortPatch) GatewaySpecServersPortPatch {
		if v != nil {
			return *v
		}
		var ret GatewaySpecServersPortPatch
		return ret
	}).(GatewaySpecServersPortPatchOutput)
}

// Label assigned to the port.
func (o GatewaySpecServersPortPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersPortPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A valid non-negative integer port number.
func (o GatewaySpecServersPortPatchPtrOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersPortPatch) *int {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.IntPtrOutput)
}

// The protocol exposed on the port.
func (o GatewaySpecServersPortPatchPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersPortPatch) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

func (o GatewaySpecServersPortPatchPtrOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersPortPatch) *int {
		if v == nil {
			return nil
		}
		return v.TargetPort
	}).(pulumi.IntPtrOutput)
}

// Set of TLS related options that govern the server's behavior.
type GatewaySpecServersTls struct {
	// REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
	CaCertificates *string `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented client side certificate.
	CaCrl *string `pulumi:"caCrl"`
	// Optional: If specified, only support the specified cipher list.
	CipherSuites []string `pulumi:"cipherSuites"`
	// For gateways running on Kubernetes, the name of the secret that holds the TLS certs including the CA certificates.
	CredentialName *string `pulumi:"credentialName"`
	// If set to true, the load balancer will send a 301 redirect for all http connections, asking the clients to use HTTPS.
	HttpsRedirect *bool `pulumi:"httpsRedirect"`
	// Optional: Maximum TLS protocol version.
	//
	// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
	MaxProtocolVersion *string `pulumi:"maxProtocolVersion"`
	// Optional: Minimum TLS protocol version.
	//
	// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
	MinProtocolVersion *string `pulumi:"minProtocolVersion"`
	// Optional: Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: PASSTHROUGH, SIMPLE, MUTUAL, AUTO_PASSTHROUGH, ISTIO_MUTUAL, OPTIONAL_MUTUAL
	Mode *string `pulumi:"mode"`
	// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
	PrivateKey *string `pulumi:"privateKey"`
	// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
	ServerCertificate *string `pulumi:"serverCertificate"`
	// A list of alternate names to verify the subject identity in the certificate presented by the client.
	SubjectAltNames []string `pulumi:"subjectAltNames"`
	// An optional list of hex-encoded SHA-256 hashes of the authorized client certificates.
	VerifyCertificateHash []string `pulumi:"verifyCertificateHash"`
	// An optional list of base64-encoded SHA-256 hashes of the SPKIs of authorized client certificates.
	VerifyCertificateSpki []string `pulumi:"verifyCertificateSpki"`
}

// GatewaySpecServersTlsInput is an input type that accepts GatewaySpecServersTlsArgs and GatewaySpecServersTlsOutput values.
// You can construct a concrete instance of `GatewaySpecServersTlsInput` via:
//
//	GatewaySpecServersTlsArgs{...}
type GatewaySpecServersTlsInput interface {
	pulumi.Input

	ToGatewaySpecServersTlsOutput() GatewaySpecServersTlsOutput
	ToGatewaySpecServersTlsOutputWithContext(context.Context) GatewaySpecServersTlsOutput
}

// Set of TLS related options that govern the server's behavior.
type GatewaySpecServersTlsArgs struct {
	// REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
	CaCertificates pulumi.StringPtrInput `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented client side certificate.
	CaCrl pulumi.StringPtrInput `pulumi:"caCrl"`
	// Optional: If specified, only support the specified cipher list.
	CipherSuites pulumi.StringArrayInput `pulumi:"cipherSuites"`
	// For gateways running on Kubernetes, the name of the secret that holds the TLS certs including the CA certificates.
	CredentialName pulumi.StringPtrInput `pulumi:"credentialName"`
	// If set to true, the load balancer will send a 301 redirect for all http connections, asking the clients to use HTTPS.
	HttpsRedirect pulumi.BoolPtrInput `pulumi:"httpsRedirect"`
	// Optional: Maximum TLS protocol version.
	//
	// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
	MaxProtocolVersion pulumi.StringPtrInput `pulumi:"maxProtocolVersion"`
	// Optional: Minimum TLS protocol version.
	//
	// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
	MinProtocolVersion pulumi.StringPtrInput `pulumi:"minProtocolVersion"`
	// Optional: Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: PASSTHROUGH, SIMPLE, MUTUAL, AUTO_PASSTHROUGH, ISTIO_MUTUAL, OPTIONAL_MUTUAL
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
	// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
	ServerCertificate pulumi.StringPtrInput `pulumi:"serverCertificate"`
	// A list of alternate names to verify the subject identity in the certificate presented by the client.
	SubjectAltNames pulumi.StringArrayInput `pulumi:"subjectAltNames"`
	// An optional list of hex-encoded SHA-256 hashes of the authorized client certificates.
	VerifyCertificateHash pulumi.StringArrayInput `pulumi:"verifyCertificateHash"`
	// An optional list of base64-encoded SHA-256 hashes of the SPKIs of authorized client certificates.
	VerifyCertificateSpki pulumi.StringArrayInput `pulumi:"verifyCertificateSpki"`
}

func (GatewaySpecServersTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaySpecServersTls)(nil)).Elem()
}

func (i GatewaySpecServersTlsArgs) ToGatewaySpecServersTlsOutput() GatewaySpecServersTlsOutput {
	return i.ToGatewaySpecServersTlsOutputWithContext(context.Background())
}

func (i GatewaySpecServersTlsArgs) ToGatewaySpecServersTlsOutputWithContext(ctx context.Context) GatewaySpecServersTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySpecServersTlsOutput)
}

func (i GatewaySpecServersTlsArgs) ToGatewaySpecServersTlsPtrOutput() GatewaySpecServersTlsPtrOutput {
	return i.ToGatewaySpecServersTlsPtrOutputWithContext(context.Background())
}

func (i GatewaySpecServersTlsArgs) ToGatewaySpecServersTlsPtrOutputWithContext(ctx context.Context) GatewaySpecServersTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySpecServersTlsOutput).ToGatewaySpecServersTlsPtrOutputWithContext(ctx)
}

// GatewaySpecServersTlsPtrInput is an input type that accepts GatewaySpecServersTlsArgs, GatewaySpecServersTlsPtr and GatewaySpecServersTlsPtrOutput values.
// You can construct a concrete instance of `GatewaySpecServersTlsPtrInput` via:
//
//	        GatewaySpecServersTlsArgs{...}
//
//	or:
//
//	        nil
type GatewaySpecServersTlsPtrInput interface {
	pulumi.Input

	ToGatewaySpecServersTlsPtrOutput() GatewaySpecServersTlsPtrOutput
	ToGatewaySpecServersTlsPtrOutputWithContext(context.Context) GatewaySpecServersTlsPtrOutput
}

type gatewaySpecServersTlsPtrType GatewaySpecServersTlsArgs

func GatewaySpecServersTlsPtr(v *GatewaySpecServersTlsArgs) GatewaySpecServersTlsPtrInput {
	return (*gatewaySpecServersTlsPtrType)(v)
}

func (*gatewaySpecServersTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewaySpecServersTls)(nil)).Elem()
}

func (i *gatewaySpecServersTlsPtrType) ToGatewaySpecServersTlsPtrOutput() GatewaySpecServersTlsPtrOutput {
	return i.ToGatewaySpecServersTlsPtrOutputWithContext(context.Background())
}

func (i *gatewaySpecServersTlsPtrType) ToGatewaySpecServersTlsPtrOutputWithContext(ctx context.Context) GatewaySpecServersTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySpecServersTlsPtrOutput)
}

// Set of TLS related options that govern the server's behavior.
type GatewaySpecServersTlsOutput struct{ *pulumi.OutputState }

func (GatewaySpecServersTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaySpecServersTls)(nil)).Elem()
}

func (o GatewaySpecServersTlsOutput) ToGatewaySpecServersTlsOutput() GatewaySpecServersTlsOutput {
	return o
}

func (o GatewaySpecServersTlsOutput) ToGatewaySpecServersTlsOutputWithContext(ctx context.Context) GatewaySpecServersTlsOutput {
	return o
}

func (o GatewaySpecServersTlsOutput) ToGatewaySpecServersTlsPtrOutput() GatewaySpecServersTlsPtrOutput {
	return o.ToGatewaySpecServersTlsPtrOutputWithContext(context.Background())
}

func (o GatewaySpecServersTlsOutput) ToGatewaySpecServersTlsPtrOutputWithContext(ctx context.Context) GatewaySpecServersTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewaySpecServersTls) *GatewaySpecServersTls {
		return &v
	}).(GatewaySpecServersTlsPtrOutput)
}

// REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
func (o GatewaySpecServersTlsOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersTls) *string { return v.CaCertificates }).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented client side certificate.
func (o GatewaySpecServersTlsOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersTls) *string { return v.CaCrl }).(pulumi.StringPtrOutput)
}

// Optional: If specified, only support the specified cipher list.
func (o GatewaySpecServersTlsOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewaySpecServersTls) []string { return v.CipherSuites }).(pulumi.StringArrayOutput)
}

// For gateways running on Kubernetes, the name of the secret that holds the TLS certs including the CA certificates.
func (o GatewaySpecServersTlsOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersTls) *string { return v.CredentialName }).(pulumi.StringPtrOutput)
}

// If set to true, the load balancer will send a 301 redirect for all http connections, asking the clients to use HTTPS.
func (o GatewaySpecServersTlsOutput) HttpsRedirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersTls) *bool { return v.HttpsRedirect }).(pulumi.BoolPtrOutput)
}

// Optional: Maximum TLS protocol version.
//
// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
func (o GatewaySpecServersTlsOutput) MaxProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersTls) *string { return v.MaxProtocolVersion }).(pulumi.StringPtrOutput)
}

// Optional: Minimum TLS protocol version.
//
// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
func (o GatewaySpecServersTlsOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersTls) *string { return v.MinProtocolVersion }).(pulumi.StringPtrOutput)
}

// Optional: Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: PASSTHROUGH, SIMPLE, MUTUAL, AUTO_PASSTHROUGH, ISTIO_MUTUAL, OPTIONAL_MUTUAL
func (o GatewaySpecServersTlsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersTls) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
func (o GatewaySpecServersTlsOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersTls) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
func (o GatewaySpecServersTlsOutput) ServerCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersTls) *string { return v.ServerCertificate }).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate presented by the client.
func (o GatewaySpecServersTlsOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewaySpecServersTls) []string { return v.SubjectAltNames }).(pulumi.StringArrayOutput)
}

// An optional list of hex-encoded SHA-256 hashes of the authorized client certificates.
func (o GatewaySpecServersTlsOutput) VerifyCertificateHash() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewaySpecServersTls) []string { return v.VerifyCertificateHash }).(pulumi.StringArrayOutput)
}

// An optional list of base64-encoded SHA-256 hashes of the SPKIs of authorized client certificates.
func (o GatewaySpecServersTlsOutput) VerifyCertificateSpki() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewaySpecServersTls) []string { return v.VerifyCertificateSpki }).(pulumi.StringArrayOutput)
}

type GatewaySpecServersTlsPtrOutput struct{ *pulumi.OutputState }

func (GatewaySpecServersTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewaySpecServersTls)(nil)).Elem()
}

func (o GatewaySpecServersTlsPtrOutput) ToGatewaySpecServersTlsPtrOutput() GatewaySpecServersTlsPtrOutput {
	return o
}

func (o GatewaySpecServersTlsPtrOutput) ToGatewaySpecServersTlsPtrOutputWithContext(ctx context.Context) GatewaySpecServersTlsPtrOutput {
	return o
}

func (o GatewaySpecServersTlsPtrOutput) Elem() GatewaySpecServersTlsOutput {
	return o.ApplyT(func(v *GatewaySpecServersTls) GatewaySpecServersTls {
		if v != nil {
			return *v
		}
		var ret GatewaySpecServersTls
		return ret
	}).(GatewaySpecServersTlsOutput)
}

// REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
func (o GatewaySpecServersTlsPtrOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersTls) *string {
		if v == nil {
			return nil
		}
		return v.CaCertificates
	}).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented client side certificate.
func (o GatewaySpecServersTlsPtrOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersTls) *string {
		if v == nil {
			return nil
		}
		return v.CaCrl
	}).(pulumi.StringPtrOutput)
}

// Optional: If specified, only support the specified cipher list.
func (o GatewaySpecServersTlsPtrOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewaySpecServersTls) []string {
		if v == nil {
			return nil
		}
		return v.CipherSuites
	}).(pulumi.StringArrayOutput)
}

// For gateways running on Kubernetes, the name of the secret that holds the TLS certs including the CA certificates.
func (o GatewaySpecServersTlsPtrOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersTls) *string {
		if v == nil {
			return nil
		}
		return v.CredentialName
	}).(pulumi.StringPtrOutput)
}

// If set to true, the load balancer will send a 301 redirect for all http connections, asking the clients to use HTTPS.
func (o GatewaySpecServersTlsPtrOutput) HttpsRedirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersTls) *bool {
		if v == nil {
			return nil
		}
		return v.HttpsRedirect
	}).(pulumi.BoolPtrOutput)
}

// Optional: Maximum TLS protocol version.
//
// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
func (o GatewaySpecServersTlsPtrOutput) MaxProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersTls) *string {
		if v == nil {
			return nil
		}
		return v.MaxProtocolVersion
	}).(pulumi.StringPtrOutput)
}

// Optional: Minimum TLS protocol version.
//
// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
func (o GatewaySpecServersTlsPtrOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersTls) *string {
		if v == nil {
			return nil
		}
		return v.MinProtocolVersion
	}).(pulumi.StringPtrOutput)
}

// Optional: Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: PASSTHROUGH, SIMPLE, MUTUAL, AUTO_PASSTHROUGH, ISTIO_MUTUAL, OPTIONAL_MUTUAL
func (o GatewaySpecServersTlsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersTls) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
func (o GatewaySpecServersTlsPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersTls) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
func (o GatewaySpecServersTlsPtrOutput) ServerCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersTls) *string {
		if v == nil {
			return nil
		}
		return v.ServerCertificate
	}).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate presented by the client.
func (o GatewaySpecServersTlsPtrOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewaySpecServersTls) []string {
		if v == nil {
			return nil
		}
		return v.SubjectAltNames
	}).(pulumi.StringArrayOutput)
}

// An optional list of hex-encoded SHA-256 hashes of the authorized client certificates.
func (o GatewaySpecServersTlsPtrOutput) VerifyCertificateHash() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewaySpecServersTls) []string {
		if v == nil {
			return nil
		}
		return v.VerifyCertificateHash
	}).(pulumi.StringArrayOutput)
}

// An optional list of base64-encoded SHA-256 hashes of the SPKIs of authorized client certificates.
func (o GatewaySpecServersTlsPtrOutput) VerifyCertificateSpki() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewaySpecServersTls) []string {
		if v == nil {
			return nil
		}
		return v.VerifyCertificateSpki
	}).(pulumi.StringArrayOutput)
}

// Set of TLS related options that govern the server's behavior.
type GatewaySpecServersTlsPatch struct {
	// REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
	CaCertificates *string `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented client side certificate.
	CaCrl *string `pulumi:"caCrl"`
	// Optional: If specified, only support the specified cipher list.
	CipherSuites []string `pulumi:"cipherSuites"`
	// For gateways running on Kubernetes, the name of the secret that holds the TLS certs including the CA certificates.
	CredentialName *string `pulumi:"credentialName"`
	// If set to true, the load balancer will send a 301 redirect for all http connections, asking the clients to use HTTPS.
	HttpsRedirect *bool `pulumi:"httpsRedirect"`
	// Optional: Maximum TLS protocol version.
	//
	// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
	MaxProtocolVersion *string `pulumi:"maxProtocolVersion"`
	// Optional: Minimum TLS protocol version.
	//
	// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
	MinProtocolVersion *string `pulumi:"minProtocolVersion"`
	// Optional: Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: PASSTHROUGH, SIMPLE, MUTUAL, AUTO_PASSTHROUGH, ISTIO_MUTUAL, OPTIONAL_MUTUAL
	Mode *string `pulumi:"mode"`
	// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
	PrivateKey *string `pulumi:"privateKey"`
	// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
	ServerCertificate *string `pulumi:"serverCertificate"`
	// A list of alternate names to verify the subject identity in the certificate presented by the client.
	SubjectAltNames []string `pulumi:"subjectAltNames"`
	// An optional list of hex-encoded SHA-256 hashes of the authorized client certificates.
	VerifyCertificateHash []string `pulumi:"verifyCertificateHash"`
	// An optional list of base64-encoded SHA-256 hashes of the SPKIs of authorized client certificates.
	VerifyCertificateSpki []string `pulumi:"verifyCertificateSpki"`
}

// GatewaySpecServersTlsPatchInput is an input type that accepts GatewaySpecServersTlsPatchArgs and GatewaySpecServersTlsPatchOutput values.
// You can construct a concrete instance of `GatewaySpecServersTlsPatchInput` via:
//
//	GatewaySpecServersTlsPatchArgs{...}
type GatewaySpecServersTlsPatchInput interface {
	pulumi.Input

	ToGatewaySpecServersTlsPatchOutput() GatewaySpecServersTlsPatchOutput
	ToGatewaySpecServersTlsPatchOutputWithContext(context.Context) GatewaySpecServersTlsPatchOutput
}

// Set of TLS related options that govern the server's behavior.
type GatewaySpecServersTlsPatchArgs struct {
	// REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
	CaCertificates pulumi.StringPtrInput `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented client side certificate.
	CaCrl pulumi.StringPtrInput `pulumi:"caCrl"`
	// Optional: If specified, only support the specified cipher list.
	CipherSuites pulumi.StringArrayInput `pulumi:"cipherSuites"`
	// For gateways running on Kubernetes, the name of the secret that holds the TLS certs including the CA certificates.
	CredentialName pulumi.StringPtrInput `pulumi:"credentialName"`
	// If set to true, the load balancer will send a 301 redirect for all http connections, asking the clients to use HTTPS.
	HttpsRedirect pulumi.BoolPtrInput `pulumi:"httpsRedirect"`
	// Optional: Maximum TLS protocol version.
	//
	// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
	MaxProtocolVersion pulumi.StringPtrInput `pulumi:"maxProtocolVersion"`
	// Optional: Minimum TLS protocol version.
	//
	// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
	MinProtocolVersion pulumi.StringPtrInput `pulumi:"minProtocolVersion"`
	// Optional: Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: PASSTHROUGH, SIMPLE, MUTUAL, AUTO_PASSTHROUGH, ISTIO_MUTUAL, OPTIONAL_MUTUAL
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
	// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
	ServerCertificate pulumi.StringPtrInput `pulumi:"serverCertificate"`
	// A list of alternate names to verify the subject identity in the certificate presented by the client.
	SubjectAltNames pulumi.StringArrayInput `pulumi:"subjectAltNames"`
	// An optional list of hex-encoded SHA-256 hashes of the authorized client certificates.
	VerifyCertificateHash pulumi.StringArrayInput `pulumi:"verifyCertificateHash"`
	// An optional list of base64-encoded SHA-256 hashes of the SPKIs of authorized client certificates.
	VerifyCertificateSpki pulumi.StringArrayInput `pulumi:"verifyCertificateSpki"`
}

func (GatewaySpecServersTlsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaySpecServersTlsPatch)(nil)).Elem()
}

func (i GatewaySpecServersTlsPatchArgs) ToGatewaySpecServersTlsPatchOutput() GatewaySpecServersTlsPatchOutput {
	return i.ToGatewaySpecServersTlsPatchOutputWithContext(context.Background())
}

func (i GatewaySpecServersTlsPatchArgs) ToGatewaySpecServersTlsPatchOutputWithContext(ctx context.Context) GatewaySpecServersTlsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySpecServersTlsPatchOutput)
}

func (i GatewaySpecServersTlsPatchArgs) ToGatewaySpecServersTlsPatchPtrOutput() GatewaySpecServersTlsPatchPtrOutput {
	return i.ToGatewaySpecServersTlsPatchPtrOutputWithContext(context.Background())
}

func (i GatewaySpecServersTlsPatchArgs) ToGatewaySpecServersTlsPatchPtrOutputWithContext(ctx context.Context) GatewaySpecServersTlsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySpecServersTlsPatchOutput).ToGatewaySpecServersTlsPatchPtrOutputWithContext(ctx)
}

// GatewaySpecServersTlsPatchPtrInput is an input type that accepts GatewaySpecServersTlsPatchArgs, GatewaySpecServersTlsPatchPtr and GatewaySpecServersTlsPatchPtrOutput values.
// You can construct a concrete instance of `GatewaySpecServersTlsPatchPtrInput` via:
//
//	        GatewaySpecServersTlsPatchArgs{...}
//
//	or:
//
//	        nil
type GatewaySpecServersTlsPatchPtrInput interface {
	pulumi.Input

	ToGatewaySpecServersTlsPatchPtrOutput() GatewaySpecServersTlsPatchPtrOutput
	ToGatewaySpecServersTlsPatchPtrOutputWithContext(context.Context) GatewaySpecServersTlsPatchPtrOutput
}

type gatewaySpecServersTlsPatchPtrType GatewaySpecServersTlsPatchArgs

func GatewaySpecServersTlsPatchPtr(v *GatewaySpecServersTlsPatchArgs) GatewaySpecServersTlsPatchPtrInput {
	return (*gatewaySpecServersTlsPatchPtrType)(v)
}

func (*gatewaySpecServersTlsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewaySpecServersTlsPatch)(nil)).Elem()
}

func (i *gatewaySpecServersTlsPatchPtrType) ToGatewaySpecServersTlsPatchPtrOutput() GatewaySpecServersTlsPatchPtrOutput {
	return i.ToGatewaySpecServersTlsPatchPtrOutputWithContext(context.Background())
}

func (i *gatewaySpecServersTlsPatchPtrType) ToGatewaySpecServersTlsPatchPtrOutputWithContext(ctx context.Context) GatewaySpecServersTlsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySpecServersTlsPatchPtrOutput)
}

// Set of TLS related options that govern the server's behavior.
type GatewaySpecServersTlsPatchOutput struct{ *pulumi.OutputState }

func (GatewaySpecServersTlsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaySpecServersTlsPatch)(nil)).Elem()
}

func (o GatewaySpecServersTlsPatchOutput) ToGatewaySpecServersTlsPatchOutput() GatewaySpecServersTlsPatchOutput {
	return o
}

func (o GatewaySpecServersTlsPatchOutput) ToGatewaySpecServersTlsPatchOutputWithContext(ctx context.Context) GatewaySpecServersTlsPatchOutput {
	return o
}

func (o GatewaySpecServersTlsPatchOutput) ToGatewaySpecServersTlsPatchPtrOutput() GatewaySpecServersTlsPatchPtrOutput {
	return o.ToGatewaySpecServersTlsPatchPtrOutputWithContext(context.Background())
}

func (o GatewaySpecServersTlsPatchOutput) ToGatewaySpecServersTlsPatchPtrOutputWithContext(ctx context.Context) GatewaySpecServersTlsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewaySpecServersTlsPatch) *GatewaySpecServersTlsPatch {
		return &v
	}).(GatewaySpecServersTlsPatchPtrOutput)
}

// REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
func (o GatewaySpecServersTlsPatchOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersTlsPatch) *string { return v.CaCertificates }).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented client side certificate.
func (o GatewaySpecServersTlsPatchOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersTlsPatch) *string { return v.CaCrl }).(pulumi.StringPtrOutput)
}

// Optional: If specified, only support the specified cipher list.
func (o GatewaySpecServersTlsPatchOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewaySpecServersTlsPatch) []string { return v.CipherSuites }).(pulumi.StringArrayOutput)
}

// For gateways running on Kubernetes, the name of the secret that holds the TLS certs including the CA certificates.
func (o GatewaySpecServersTlsPatchOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersTlsPatch) *string { return v.CredentialName }).(pulumi.StringPtrOutput)
}

// If set to true, the load balancer will send a 301 redirect for all http connections, asking the clients to use HTTPS.
func (o GatewaySpecServersTlsPatchOutput) HttpsRedirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersTlsPatch) *bool { return v.HttpsRedirect }).(pulumi.BoolPtrOutput)
}

// Optional: Maximum TLS protocol version.
//
// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
func (o GatewaySpecServersTlsPatchOutput) MaxProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersTlsPatch) *string { return v.MaxProtocolVersion }).(pulumi.StringPtrOutput)
}

// Optional: Minimum TLS protocol version.
//
// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
func (o GatewaySpecServersTlsPatchOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersTlsPatch) *string { return v.MinProtocolVersion }).(pulumi.StringPtrOutput)
}

// Optional: Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: PASSTHROUGH, SIMPLE, MUTUAL, AUTO_PASSTHROUGH, ISTIO_MUTUAL, OPTIONAL_MUTUAL
func (o GatewaySpecServersTlsPatchOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersTlsPatch) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
func (o GatewaySpecServersTlsPatchOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersTlsPatch) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
func (o GatewaySpecServersTlsPatchOutput) ServerCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySpecServersTlsPatch) *string { return v.ServerCertificate }).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate presented by the client.
func (o GatewaySpecServersTlsPatchOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewaySpecServersTlsPatch) []string { return v.SubjectAltNames }).(pulumi.StringArrayOutput)
}

// An optional list of hex-encoded SHA-256 hashes of the authorized client certificates.
func (o GatewaySpecServersTlsPatchOutput) VerifyCertificateHash() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewaySpecServersTlsPatch) []string { return v.VerifyCertificateHash }).(pulumi.StringArrayOutput)
}

// An optional list of base64-encoded SHA-256 hashes of the SPKIs of authorized client certificates.
func (o GatewaySpecServersTlsPatchOutput) VerifyCertificateSpki() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewaySpecServersTlsPatch) []string { return v.VerifyCertificateSpki }).(pulumi.StringArrayOutput)
}

type GatewaySpecServersTlsPatchPtrOutput struct{ *pulumi.OutputState }

func (GatewaySpecServersTlsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewaySpecServersTlsPatch)(nil)).Elem()
}

func (o GatewaySpecServersTlsPatchPtrOutput) ToGatewaySpecServersTlsPatchPtrOutput() GatewaySpecServersTlsPatchPtrOutput {
	return o
}

func (o GatewaySpecServersTlsPatchPtrOutput) ToGatewaySpecServersTlsPatchPtrOutputWithContext(ctx context.Context) GatewaySpecServersTlsPatchPtrOutput {
	return o
}

func (o GatewaySpecServersTlsPatchPtrOutput) Elem() GatewaySpecServersTlsPatchOutput {
	return o.ApplyT(func(v *GatewaySpecServersTlsPatch) GatewaySpecServersTlsPatch {
		if v != nil {
			return *v
		}
		var ret GatewaySpecServersTlsPatch
		return ret
	}).(GatewaySpecServersTlsPatchOutput)
}

// REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
func (o GatewaySpecServersTlsPatchPtrOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaCertificates
	}).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented client side certificate.
func (o GatewaySpecServersTlsPatchPtrOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaCrl
	}).(pulumi.StringPtrOutput)
}

// Optional: If specified, only support the specified cipher list.
func (o GatewaySpecServersTlsPatchPtrOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewaySpecServersTlsPatch) []string {
		if v == nil {
			return nil
		}
		return v.CipherSuites
	}).(pulumi.StringArrayOutput)
}

// For gateways running on Kubernetes, the name of the secret that holds the TLS certs including the CA certificates.
func (o GatewaySpecServersTlsPatchPtrOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.CredentialName
	}).(pulumi.StringPtrOutput)
}

// If set to true, the load balancer will send a 301 redirect for all http connections, asking the clients to use HTTPS.
func (o GatewaySpecServersTlsPatchPtrOutput) HttpsRedirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersTlsPatch) *bool {
		if v == nil {
			return nil
		}
		return v.HttpsRedirect
	}).(pulumi.BoolPtrOutput)
}

// Optional: Maximum TLS protocol version.
//
// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
func (o GatewaySpecServersTlsPatchPtrOutput) MaxProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.MaxProtocolVersion
	}).(pulumi.StringPtrOutput)
}

// Optional: Minimum TLS protocol version.
//
// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
func (o GatewaySpecServersTlsPatchPtrOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.MinProtocolVersion
	}).(pulumi.StringPtrOutput)
}

// Optional: Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: PASSTHROUGH, SIMPLE, MUTUAL, AUTO_PASSTHROUGH, ISTIO_MUTUAL, OPTIONAL_MUTUAL
func (o GatewaySpecServersTlsPatchPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
func (o GatewaySpecServersTlsPatchPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
func (o GatewaySpecServersTlsPatchPtrOutput) ServerCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySpecServersTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.ServerCertificate
	}).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate presented by the client.
func (o GatewaySpecServersTlsPatchPtrOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewaySpecServersTlsPatch) []string {
		if v == nil {
			return nil
		}
		return v.SubjectAltNames
	}).(pulumi.StringArrayOutput)
}

// An optional list of hex-encoded SHA-256 hashes of the authorized client certificates.
func (o GatewaySpecServersTlsPatchPtrOutput) VerifyCertificateHash() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewaySpecServersTlsPatch) []string {
		if v == nil {
			return nil
		}
		return v.VerifyCertificateHash
	}).(pulumi.StringArrayOutput)
}

// An optional list of base64-encoded SHA-256 hashes of the SPKIs of authorized client certificates.
func (o GatewaySpecServersTlsPatchPtrOutput) VerifyCertificateSpki() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewaySpecServersTlsPatch) []string {
		if v == nil {
			return nil
		}
		return v.VerifyCertificateSpki
	}).(pulumi.StringArrayOutput)
}

type ProxyConfigType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta     `pulumi:"metadata"`
	Spec     *ProxyConfigSpec       `pulumi:"spec"`
	Status   map[string]interface{} `pulumi:"status"`
}

// ProxyConfigTypeInput is an input type that accepts ProxyConfigTypeArgs and ProxyConfigTypeOutput values.
// You can construct a concrete instance of `ProxyConfigTypeInput` via:
//
//	ProxyConfigTypeArgs{...}
type ProxyConfigTypeInput interface {
	pulumi.Input

	ToProxyConfigTypeOutput() ProxyConfigTypeOutput
	ToProxyConfigTypeOutputWithContext(context.Context) ProxyConfigTypeOutput
}

type ProxyConfigTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec     ProxyConfigSpecPtrInput   `pulumi:"spec"`
	Status   pulumi.MapInput           `pulumi:"status"`
}

func (ProxyConfigTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyConfigType)(nil)).Elem()
}

func (i ProxyConfigTypeArgs) ToProxyConfigTypeOutput() ProxyConfigTypeOutput {
	return i.ToProxyConfigTypeOutputWithContext(context.Background())
}

func (i ProxyConfigTypeArgs) ToProxyConfigTypeOutputWithContext(ctx context.Context) ProxyConfigTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigTypeOutput)
}

// ProxyConfigTypeArrayInput is an input type that accepts ProxyConfigTypeArray and ProxyConfigTypeArrayOutput values.
// You can construct a concrete instance of `ProxyConfigTypeArrayInput` via:
//
//	ProxyConfigTypeArray{ ProxyConfigTypeArgs{...} }
type ProxyConfigTypeArrayInput interface {
	pulumi.Input

	ToProxyConfigTypeArrayOutput() ProxyConfigTypeArrayOutput
	ToProxyConfigTypeArrayOutputWithContext(context.Context) ProxyConfigTypeArrayOutput
}

type ProxyConfigTypeArray []ProxyConfigTypeInput

func (ProxyConfigTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyConfigType)(nil)).Elem()
}

func (i ProxyConfigTypeArray) ToProxyConfigTypeArrayOutput() ProxyConfigTypeArrayOutput {
	return i.ToProxyConfigTypeArrayOutputWithContext(context.Background())
}

func (i ProxyConfigTypeArray) ToProxyConfigTypeArrayOutputWithContext(ctx context.Context) ProxyConfigTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigTypeArrayOutput)
}

type ProxyConfigTypeOutput struct{ *pulumi.OutputState }

func (ProxyConfigTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyConfigType)(nil)).Elem()
}

func (o ProxyConfigTypeOutput) ToProxyConfigTypeOutput() ProxyConfigTypeOutput {
	return o
}

func (o ProxyConfigTypeOutput) ToProxyConfigTypeOutputWithContext(ctx context.Context) ProxyConfigTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ProxyConfigTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyConfigType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ProxyConfigTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyConfigType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ProxyConfigTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ProxyConfigType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o ProxyConfigTypeOutput) Spec() ProxyConfigSpecPtrOutput {
	return o.ApplyT(func(v ProxyConfigType) *ProxyConfigSpec { return v.Spec }).(ProxyConfigSpecPtrOutput)
}

func (o ProxyConfigTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v ProxyConfigType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

type ProxyConfigTypeArrayOutput struct{ *pulumi.OutputState }

func (ProxyConfigTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyConfigType)(nil)).Elem()
}

func (o ProxyConfigTypeArrayOutput) ToProxyConfigTypeArrayOutput() ProxyConfigTypeArrayOutput {
	return o
}

func (o ProxyConfigTypeArrayOutput) ToProxyConfigTypeArrayOutputWithContext(ctx context.Context) ProxyConfigTypeArrayOutput {
	return o
}

func (o ProxyConfigTypeArrayOutput) Index(i pulumi.IntInput) ProxyConfigTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxyConfigType {
		return vs[0].([]ProxyConfigType)[vs[1].(int)]
	}).(ProxyConfigTypeOutput)
}

// ProxyConfigList is a list of ProxyConfig
type ProxyConfigListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of proxyconfigs. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []ProxyConfigType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// ProxyConfigListTypeInput is an input type that accepts ProxyConfigListTypeArgs and ProxyConfigListTypeOutput values.
// You can construct a concrete instance of `ProxyConfigListTypeInput` via:
//
//	ProxyConfigListTypeArgs{...}
type ProxyConfigListTypeInput interface {
	pulumi.Input

	ToProxyConfigListTypeOutput() ProxyConfigListTypeOutput
	ToProxyConfigListTypeOutputWithContext(context.Context) ProxyConfigListTypeOutput
}

// ProxyConfigList is a list of ProxyConfig
type ProxyConfigListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of proxyconfigs. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items ProxyConfigTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (ProxyConfigListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyConfigListType)(nil)).Elem()
}

func (i ProxyConfigListTypeArgs) ToProxyConfigListTypeOutput() ProxyConfigListTypeOutput {
	return i.ToProxyConfigListTypeOutputWithContext(context.Background())
}

func (i ProxyConfigListTypeArgs) ToProxyConfigListTypeOutputWithContext(ctx context.Context) ProxyConfigListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigListTypeOutput)
}

// ProxyConfigList is a list of ProxyConfig
type ProxyConfigListTypeOutput struct{ *pulumi.OutputState }

func (ProxyConfigListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyConfigListType)(nil)).Elem()
}

func (o ProxyConfigListTypeOutput) ToProxyConfigListTypeOutput() ProxyConfigListTypeOutput {
	return o
}

func (o ProxyConfigListTypeOutput) ToProxyConfigListTypeOutputWithContext(ctx context.Context) ProxyConfigListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ProxyConfigListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyConfigListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of proxyconfigs. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o ProxyConfigListTypeOutput) Items() ProxyConfigTypeArrayOutput {
	return o.ApplyT(func(v ProxyConfigListType) []ProxyConfigType { return v.Items }).(ProxyConfigTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ProxyConfigListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyConfigListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ProxyConfigListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v ProxyConfigListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

type ProxyConfigPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *ProxyConfigSpecPatch   `pulumi:"spec"`
	Status   map[string]interface{}  `pulumi:"status"`
}

// ProxyConfigPatchTypeInput is an input type that accepts ProxyConfigPatchTypeArgs and ProxyConfigPatchTypeOutput values.
// You can construct a concrete instance of `ProxyConfigPatchTypeInput` via:
//
//	ProxyConfigPatchTypeArgs{...}
type ProxyConfigPatchTypeInput interface {
	pulumi.Input

	ToProxyConfigPatchTypeOutput() ProxyConfigPatchTypeOutput
	ToProxyConfigPatchTypeOutputWithContext(context.Context) ProxyConfigPatchTypeOutput
}

type ProxyConfigPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
	Spec     ProxyConfigSpecPatchPtrInput   `pulumi:"spec"`
	Status   pulumi.MapInput                `pulumi:"status"`
}

func (ProxyConfigPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyConfigPatchType)(nil)).Elem()
}

func (i ProxyConfigPatchTypeArgs) ToProxyConfigPatchTypeOutput() ProxyConfigPatchTypeOutput {
	return i.ToProxyConfigPatchTypeOutputWithContext(context.Background())
}

func (i ProxyConfigPatchTypeArgs) ToProxyConfigPatchTypeOutputWithContext(ctx context.Context) ProxyConfigPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigPatchTypeOutput)
}

type ProxyConfigPatchTypeOutput struct{ *pulumi.OutputState }

func (ProxyConfigPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyConfigPatchType)(nil)).Elem()
}

func (o ProxyConfigPatchTypeOutput) ToProxyConfigPatchTypeOutput() ProxyConfigPatchTypeOutput {
	return o
}

func (o ProxyConfigPatchTypeOutput) ToProxyConfigPatchTypeOutputWithContext(ctx context.Context) ProxyConfigPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ProxyConfigPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyConfigPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ProxyConfigPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyConfigPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ProxyConfigPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v ProxyConfigPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o ProxyConfigPatchTypeOutput) Spec() ProxyConfigSpecPatchPtrOutput {
	return o.ApplyT(func(v ProxyConfigPatchType) *ProxyConfigSpecPatch { return v.Spec }).(ProxyConfigSpecPatchPtrOutput)
}

func (o ProxyConfigPatchTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v ProxyConfigPatchType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

// Provides configuration for individual workloads. See more details at: https://istio.io/docs/reference/config/networking/proxy-config.html
type ProxyConfigSpec struct {
	// The number of worker threads to run.
	Concurrency *int `pulumi:"concurrency"`
	// Additional environment variables for the proxy.
	EnvironmentVariables map[string]string        `pulumi:"environmentVariables"`
	Image                *ProxyConfigSpecImage    `pulumi:"image"`
	Selector             *ProxyConfigSpecSelector `pulumi:"selector"`
}

// ProxyConfigSpecInput is an input type that accepts ProxyConfigSpecArgs and ProxyConfigSpecOutput values.
// You can construct a concrete instance of `ProxyConfigSpecInput` via:
//
//	ProxyConfigSpecArgs{...}
type ProxyConfigSpecInput interface {
	pulumi.Input

	ToProxyConfigSpecOutput() ProxyConfigSpecOutput
	ToProxyConfigSpecOutputWithContext(context.Context) ProxyConfigSpecOutput
}

// Provides configuration for individual workloads. See more details at: https://istio.io/docs/reference/config/networking/proxy-config.html
type ProxyConfigSpecArgs struct {
	// The number of worker threads to run.
	Concurrency pulumi.IntPtrInput `pulumi:"concurrency"`
	// Additional environment variables for the proxy.
	EnvironmentVariables pulumi.StringMapInput           `pulumi:"environmentVariables"`
	Image                ProxyConfigSpecImagePtrInput    `pulumi:"image"`
	Selector             ProxyConfigSpecSelectorPtrInput `pulumi:"selector"`
}

func (ProxyConfigSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyConfigSpec)(nil)).Elem()
}

func (i ProxyConfigSpecArgs) ToProxyConfigSpecOutput() ProxyConfigSpecOutput {
	return i.ToProxyConfigSpecOutputWithContext(context.Background())
}

func (i ProxyConfigSpecArgs) ToProxyConfigSpecOutputWithContext(ctx context.Context) ProxyConfigSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigSpecOutput)
}

func (i ProxyConfigSpecArgs) ToProxyConfigSpecPtrOutput() ProxyConfigSpecPtrOutput {
	return i.ToProxyConfigSpecPtrOutputWithContext(context.Background())
}

func (i ProxyConfigSpecArgs) ToProxyConfigSpecPtrOutputWithContext(ctx context.Context) ProxyConfigSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigSpecOutput).ToProxyConfigSpecPtrOutputWithContext(ctx)
}

// ProxyConfigSpecPtrInput is an input type that accepts ProxyConfigSpecArgs, ProxyConfigSpecPtr and ProxyConfigSpecPtrOutput values.
// You can construct a concrete instance of `ProxyConfigSpecPtrInput` via:
//
//	        ProxyConfigSpecArgs{...}
//
//	or:
//
//	        nil
type ProxyConfigSpecPtrInput interface {
	pulumi.Input

	ToProxyConfigSpecPtrOutput() ProxyConfigSpecPtrOutput
	ToProxyConfigSpecPtrOutputWithContext(context.Context) ProxyConfigSpecPtrOutput
}

type proxyConfigSpecPtrType ProxyConfigSpecArgs

func ProxyConfigSpecPtr(v *ProxyConfigSpecArgs) ProxyConfigSpecPtrInput {
	return (*proxyConfigSpecPtrType)(v)
}

func (*proxyConfigSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyConfigSpec)(nil)).Elem()
}

func (i *proxyConfigSpecPtrType) ToProxyConfigSpecPtrOutput() ProxyConfigSpecPtrOutput {
	return i.ToProxyConfigSpecPtrOutputWithContext(context.Background())
}

func (i *proxyConfigSpecPtrType) ToProxyConfigSpecPtrOutputWithContext(ctx context.Context) ProxyConfigSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigSpecPtrOutput)
}

// Provides configuration for individual workloads. See more details at: https://istio.io/docs/reference/config/networking/proxy-config.html
type ProxyConfigSpecOutput struct{ *pulumi.OutputState }

func (ProxyConfigSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyConfigSpec)(nil)).Elem()
}

func (o ProxyConfigSpecOutput) ToProxyConfigSpecOutput() ProxyConfigSpecOutput {
	return o
}

func (o ProxyConfigSpecOutput) ToProxyConfigSpecOutputWithContext(ctx context.Context) ProxyConfigSpecOutput {
	return o
}

func (o ProxyConfigSpecOutput) ToProxyConfigSpecPtrOutput() ProxyConfigSpecPtrOutput {
	return o.ToProxyConfigSpecPtrOutputWithContext(context.Background())
}

func (o ProxyConfigSpecOutput) ToProxyConfigSpecPtrOutputWithContext(ctx context.Context) ProxyConfigSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProxyConfigSpec) *ProxyConfigSpec {
		return &v
	}).(ProxyConfigSpecPtrOutput)
}

// The number of worker threads to run.
func (o ProxyConfigSpecOutput) Concurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProxyConfigSpec) *int { return v.Concurrency }).(pulumi.IntPtrOutput)
}

// Additional environment variables for the proxy.
func (o ProxyConfigSpecOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProxyConfigSpec) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

func (o ProxyConfigSpecOutput) Image() ProxyConfigSpecImagePtrOutput {
	return o.ApplyT(func(v ProxyConfigSpec) *ProxyConfigSpecImage { return v.Image }).(ProxyConfigSpecImagePtrOutput)
}

func (o ProxyConfigSpecOutput) Selector() ProxyConfigSpecSelectorPtrOutput {
	return o.ApplyT(func(v ProxyConfigSpec) *ProxyConfigSpecSelector { return v.Selector }).(ProxyConfigSpecSelectorPtrOutput)
}

type ProxyConfigSpecPtrOutput struct{ *pulumi.OutputState }

func (ProxyConfigSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyConfigSpec)(nil)).Elem()
}

func (o ProxyConfigSpecPtrOutput) ToProxyConfigSpecPtrOutput() ProxyConfigSpecPtrOutput {
	return o
}

func (o ProxyConfigSpecPtrOutput) ToProxyConfigSpecPtrOutputWithContext(ctx context.Context) ProxyConfigSpecPtrOutput {
	return o
}

func (o ProxyConfigSpecPtrOutput) Elem() ProxyConfigSpecOutput {
	return o.ApplyT(func(v *ProxyConfigSpec) ProxyConfigSpec {
		if v != nil {
			return *v
		}
		var ret ProxyConfigSpec
		return ret
	}).(ProxyConfigSpecOutput)
}

// The number of worker threads to run.
func (o ProxyConfigSpecPtrOutput) Concurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProxyConfigSpec) *int {
		if v == nil {
			return nil
		}
		return v.Concurrency
	}).(pulumi.IntPtrOutput)
}

// Additional environment variables for the proxy.
func (o ProxyConfigSpecPtrOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProxyConfigSpec) map[string]string {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(pulumi.StringMapOutput)
}

func (o ProxyConfigSpecPtrOutput) Image() ProxyConfigSpecImagePtrOutput {
	return o.ApplyT(func(v *ProxyConfigSpec) *ProxyConfigSpecImage {
		if v == nil {
			return nil
		}
		return v.Image
	}).(ProxyConfigSpecImagePtrOutput)
}

func (o ProxyConfigSpecPtrOutput) Selector() ProxyConfigSpecSelectorPtrOutput {
	return o.ApplyT(func(v *ProxyConfigSpec) *ProxyConfigSpecSelector {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(ProxyConfigSpecSelectorPtrOutput)
}

// Specifies the details of the proxy image.
type ProxyConfigSpecImage struct {
	// The image type of the image.
	ImageType *string `pulumi:"imageType"`
}

// ProxyConfigSpecImageInput is an input type that accepts ProxyConfigSpecImageArgs and ProxyConfigSpecImageOutput values.
// You can construct a concrete instance of `ProxyConfigSpecImageInput` via:
//
//	ProxyConfigSpecImageArgs{...}
type ProxyConfigSpecImageInput interface {
	pulumi.Input

	ToProxyConfigSpecImageOutput() ProxyConfigSpecImageOutput
	ToProxyConfigSpecImageOutputWithContext(context.Context) ProxyConfigSpecImageOutput
}

// Specifies the details of the proxy image.
type ProxyConfigSpecImageArgs struct {
	// The image type of the image.
	ImageType pulumi.StringPtrInput `pulumi:"imageType"`
}

func (ProxyConfigSpecImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyConfigSpecImage)(nil)).Elem()
}

func (i ProxyConfigSpecImageArgs) ToProxyConfigSpecImageOutput() ProxyConfigSpecImageOutput {
	return i.ToProxyConfigSpecImageOutputWithContext(context.Background())
}

func (i ProxyConfigSpecImageArgs) ToProxyConfigSpecImageOutputWithContext(ctx context.Context) ProxyConfigSpecImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigSpecImageOutput)
}

func (i ProxyConfigSpecImageArgs) ToProxyConfigSpecImagePtrOutput() ProxyConfigSpecImagePtrOutput {
	return i.ToProxyConfigSpecImagePtrOutputWithContext(context.Background())
}

func (i ProxyConfigSpecImageArgs) ToProxyConfigSpecImagePtrOutputWithContext(ctx context.Context) ProxyConfigSpecImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigSpecImageOutput).ToProxyConfigSpecImagePtrOutputWithContext(ctx)
}

// ProxyConfigSpecImagePtrInput is an input type that accepts ProxyConfigSpecImageArgs, ProxyConfigSpecImagePtr and ProxyConfigSpecImagePtrOutput values.
// You can construct a concrete instance of `ProxyConfigSpecImagePtrInput` via:
//
//	        ProxyConfigSpecImageArgs{...}
//
//	or:
//
//	        nil
type ProxyConfigSpecImagePtrInput interface {
	pulumi.Input

	ToProxyConfigSpecImagePtrOutput() ProxyConfigSpecImagePtrOutput
	ToProxyConfigSpecImagePtrOutputWithContext(context.Context) ProxyConfigSpecImagePtrOutput
}

type proxyConfigSpecImagePtrType ProxyConfigSpecImageArgs

func ProxyConfigSpecImagePtr(v *ProxyConfigSpecImageArgs) ProxyConfigSpecImagePtrInput {
	return (*proxyConfigSpecImagePtrType)(v)
}

func (*proxyConfigSpecImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyConfigSpecImage)(nil)).Elem()
}

func (i *proxyConfigSpecImagePtrType) ToProxyConfigSpecImagePtrOutput() ProxyConfigSpecImagePtrOutput {
	return i.ToProxyConfigSpecImagePtrOutputWithContext(context.Background())
}

func (i *proxyConfigSpecImagePtrType) ToProxyConfigSpecImagePtrOutputWithContext(ctx context.Context) ProxyConfigSpecImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigSpecImagePtrOutput)
}

// Specifies the details of the proxy image.
type ProxyConfigSpecImageOutput struct{ *pulumi.OutputState }

func (ProxyConfigSpecImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyConfigSpecImage)(nil)).Elem()
}

func (o ProxyConfigSpecImageOutput) ToProxyConfigSpecImageOutput() ProxyConfigSpecImageOutput {
	return o
}

func (o ProxyConfigSpecImageOutput) ToProxyConfigSpecImageOutputWithContext(ctx context.Context) ProxyConfigSpecImageOutput {
	return o
}

func (o ProxyConfigSpecImageOutput) ToProxyConfigSpecImagePtrOutput() ProxyConfigSpecImagePtrOutput {
	return o.ToProxyConfigSpecImagePtrOutputWithContext(context.Background())
}

func (o ProxyConfigSpecImageOutput) ToProxyConfigSpecImagePtrOutputWithContext(ctx context.Context) ProxyConfigSpecImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProxyConfigSpecImage) *ProxyConfigSpecImage {
		return &v
	}).(ProxyConfigSpecImagePtrOutput)
}

// The image type of the image.
func (o ProxyConfigSpecImageOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyConfigSpecImage) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

type ProxyConfigSpecImagePtrOutput struct{ *pulumi.OutputState }

func (ProxyConfigSpecImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyConfigSpecImage)(nil)).Elem()
}

func (o ProxyConfigSpecImagePtrOutput) ToProxyConfigSpecImagePtrOutput() ProxyConfigSpecImagePtrOutput {
	return o
}

func (o ProxyConfigSpecImagePtrOutput) ToProxyConfigSpecImagePtrOutputWithContext(ctx context.Context) ProxyConfigSpecImagePtrOutput {
	return o
}

func (o ProxyConfigSpecImagePtrOutput) Elem() ProxyConfigSpecImageOutput {
	return o.ApplyT(func(v *ProxyConfigSpecImage) ProxyConfigSpecImage {
		if v != nil {
			return *v
		}
		var ret ProxyConfigSpecImage
		return ret
	}).(ProxyConfigSpecImageOutput)
}

// The image type of the image.
func (o ProxyConfigSpecImagePtrOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProxyConfigSpecImage) *string {
		if v == nil {
			return nil
		}
		return v.ImageType
	}).(pulumi.StringPtrOutput)
}

// Specifies the details of the proxy image.
type ProxyConfigSpecImagePatch struct {
	// The image type of the image.
	ImageType *string `pulumi:"imageType"`
}

// ProxyConfigSpecImagePatchInput is an input type that accepts ProxyConfigSpecImagePatchArgs and ProxyConfigSpecImagePatchOutput values.
// You can construct a concrete instance of `ProxyConfigSpecImagePatchInput` via:
//
//	ProxyConfigSpecImagePatchArgs{...}
type ProxyConfigSpecImagePatchInput interface {
	pulumi.Input

	ToProxyConfigSpecImagePatchOutput() ProxyConfigSpecImagePatchOutput
	ToProxyConfigSpecImagePatchOutputWithContext(context.Context) ProxyConfigSpecImagePatchOutput
}

// Specifies the details of the proxy image.
type ProxyConfigSpecImagePatchArgs struct {
	// The image type of the image.
	ImageType pulumi.StringPtrInput `pulumi:"imageType"`
}

func (ProxyConfigSpecImagePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyConfigSpecImagePatch)(nil)).Elem()
}

func (i ProxyConfigSpecImagePatchArgs) ToProxyConfigSpecImagePatchOutput() ProxyConfigSpecImagePatchOutput {
	return i.ToProxyConfigSpecImagePatchOutputWithContext(context.Background())
}

func (i ProxyConfigSpecImagePatchArgs) ToProxyConfigSpecImagePatchOutputWithContext(ctx context.Context) ProxyConfigSpecImagePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigSpecImagePatchOutput)
}

func (i ProxyConfigSpecImagePatchArgs) ToProxyConfigSpecImagePatchPtrOutput() ProxyConfigSpecImagePatchPtrOutput {
	return i.ToProxyConfigSpecImagePatchPtrOutputWithContext(context.Background())
}

func (i ProxyConfigSpecImagePatchArgs) ToProxyConfigSpecImagePatchPtrOutputWithContext(ctx context.Context) ProxyConfigSpecImagePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigSpecImagePatchOutput).ToProxyConfigSpecImagePatchPtrOutputWithContext(ctx)
}

// ProxyConfigSpecImagePatchPtrInput is an input type that accepts ProxyConfigSpecImagePatchArgs, ProxyConfigSpecImagePatchPtr and ProxyConfigSpecImagePatchPtrOutput values.
// You can construct a concrete instance of `ProxyConfigSpecImagePatchPtrInput` via:
//
//	        ProxyConfigSpecImagePatchArgs{...}
//
//	or:
//
//	        nil
type ProxyConfigSpecImagePatchPtrInput interface {
	pulumi.Input

	ToProxyConfigSpecImagePatchPtrOutput() ProxyConfigSpecImagePatchPtrOutput
	ToProxyConfigSpecImagePatchPtrOutputWithContext(context.Context) ProxyConfigSpecImagePatchPtrOutput
}

type proxyConfigSpecImagePatchPtrType ProxyConfigSpecImagePatchArgs

func ProxyConfigSpecImagePatchPtr(v *ProxyConfigSpecImagePatchArgs) ProxyConfigSpecImagePatchPtrInput {
	return (*proxyConfigSpecImagePatchPtrType)(v)
}

func (*proxyConfigSpecImagePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyConfigSpecImagePatch)(nil)).Elem()
}

func (i *proxyConfigSpecImagePatchPtrType) ToProxyConfigSpecImagePatchPtrOutput() ProxyConfigSpecImagePatchPtrOutput {
	return i.ToProxyConfigSpecImagePatchPtrOutputWithContext(context.Background())
}

func (i *proxyConfigSpecImagePatchPtrType) ToProxyConfigSpecImagePatchPtrOutputWithContext(ctx context.Context) ProxyConfigSpecImagePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigSpecImagePatchPtrOutput)
}

// Specifies the details of the proxy image.
type ProxyConfigSpecImagePatchOutput struct{ *pulumi.OutputState }

func (ProxyConfigSpecImagePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyConfigSpecImagePatch)(nil)).Elem()
}

func (o ProxyConfigSpecImagePatchOutput) ToProxyConfigSpecImagePatchOutput() ProxyConfigSpecImagePatchOutput {
	return o
}

func (o ProxyConfigSpecImagePatchOutput) ToProxyConfigSpecImagePatchOutputWithContext(ctx context.Context) ProxyConfigSpecImagePatchOutput {
	return o
}

func (o ProxyConfigSpecImagePatchOutput) ToProxyConfigSpecImagePatchPtrOutput() ProxyConfigSpecImagePatchPtrOutput {
	return o.ToProxyConfigSpecImagePatchPtrOutputWithContext(context.Background())
}

func (o ProxyConfigSpecImagePatchOutput) ToProxyConfigSpecImagePatchPtrOutputWithContext(ctx context.Context) ProxyConfigSpecImagePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProxyConfigSpecImagePatch) *ProxyConfigSpecImagePatch {
		return &v
	}).(ProxyConfigSpecImagePatchPtrOutput)
}

// The image type of the image.
func (o ProxyConfigSpecImagePatchOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyConfigSpecImagePatch) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

type ProxyConfigSpecImagePatchPtrOutput struct{ *pulumi.OutputState }

func (ProxyConfigSpecImagePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyConfigSpecImagePatch)(nil)).Elem()
}

func (o ProxyConfigSpecImagePatchPtrOutput) ToProxyConfigSpecImagePatchPtrOutput() ProxyConfigSpecImagePatchPtrOutput {
	return o
}

func (o ProxyConfigSpecImagePatchPtrOutput) ToProxyConfigSpecImagePatchPtrOutputWithContext(ctx context.Context) ProxyConfigSpecImagePatchPtrOutput {
	return o
}

func (o ProxyConfigSpecImagePatchPtrOutput) Elem() ProxyConfigSpecImagePatchOutput {
	return o.ApplyT(func(v *ProxyConfigSpecImagePatch) ProxyConfigSpecImagePatch {
		if v != nil {
			return *v
		}
		var ret ProxyConfigSpecImagePatch
		return ret
	}).(ProxyConfigSpecImagePatchOutput)
}

// The image type of the image.
func (o ProxyConfigSpecImagePatchPtrOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProxyConfigSpecImagePatch) *string {
		if v == nil {
			return nil
		}
		return v.ImageType
	}).(pulumi.StringPtrOutput)
}

// Provides configuration for individual workloads. See more details at: https://istio.io/docs/reference/config/networking/proxy-config.html
type ProxyConfigSpecPatch struct {
	// The number of worker threads to run.
	Concurrency *int `pulumi:"concurrency"`
	// Additional environment variables for the proxy.
	EnvironmentVariables map[string]string             `pulumi:"environmentVariables"`
	Image                *ProxyConfigSpecImagePatch    `pulumi:"image"`
	Selector             *ProxyConfigSpecSelectorPatch `pulumi:"selector"`
}

// ProxyConfigSpecPatchInput is an input type that accepts ProxyConfigSpecPatchArgs and ProxyConfigSpecPatchOutput values.
// You can construct a concrete instance of `ProxyConfigSpecPatchInput` via:
//
//	ProxyConfigSpecPatchArgs{...}
type ProxyConfigSpecPatchInput interface {
	pulumi.Input

	ToProxyConfigSpecPatchOutput() ProxyConfigSpecPatchOutput
	ToProxyConfigSpecPatchOutputWithContext(context.Context) ProxyConfigSpecPatchOutput
}

// Provides configuration for individual workloads. See more details at: https://istio.io/docs/reference/config/networking/proxy-config.html
type ProxyConfigSpecPatchArgs struct {
	// The number of worker threads to run.
	Concurrency pulumi.IntPtrInput `pulumi:"concurrency"`
	// Additional environment variables for the proxy.
	EnvironmentVariables pulumi.StringMapInput                `pulumi:"environmentVariables"`
	Image                ProxyConfigSpecImagePatchPtrInput    `pulumi:"image"`
	Selector             ProxyConfigSpecSelectorPatchPtrInput `pulumi:"selector"`
}

func (ProxyConfigSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyConfigSpecPatch)(nil)).Elem()
}

func (i ProxyConfigSpecPatchArgs) ToProxyConfigSpecPatchOutput() ProxyConfigSpecPatchOutput {
	return i.ToProxyConfigSpecPatchOutputWithContext(context.Background())
}

func (i ProxyConfigSpecPatchArgs) ToProxyConfigSpecPatchOutputWithContext(ctx context.Context) ProxyConfigSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigSpecPatchOutput)
}

func (i ProxyConfigSpecPatchArgs) ToProxyConfigSpecPatchPtrOutput() ProxyConfigSpecPatchPtrOutput {
	return i.ToProxyConfigSpecPatchPtrOutputWithContext(context.Background())
}

func (i ProxyConfigSpecPatchArgs) ToProxyConfigSpecPatchPtrOutputWithContext(ctx context.Context) ProxyConfigSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigSpecPatchOutput).ToProxyConfigSpecPatchPtrOutputWithContext(ctx)
}

// ProxyConfigSpecPatchPtrInput is an input type that accepts ProxyConfigSpecPatchArgs, ProxyConfigSpecPatchPtr and ProxyConfigSpecPatchPtrOutput values.
// You can construct a concrete instance of `ProxyConfigSpecPatchPtrInput` via:
//
//	        ProxyConfigSpecPatchArgs{...}
//
//	or:
//
//	        nil
type ProxyConfigSpecPatchPtrInput interface {
	pulumi.Input

	ToProxyConfigSpecPatchPtrOutput() ProxyConfigSpecPatchPtrOutput
	ToProxyConfigSpecPatchPtrOutputWithContext(context.Context) ProxyConfigSpecPatchPtrOutput
}

type proxyConfigSpecPatchPtrType ProxyConfigSpecPatchArgs

func ProxyConfigSpecPatchPtr(v *ProxyConfigSpecPatchArgs) ProxyConfigSpecPatchPtrInput {
	return (*proxyConfigSpecPatchPtrType)(v)
}

func (*proxyConfigSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyConfigSpecPatch)(nil)).Elem()
}

func (i *proxyConfigSpecPatchPtrType) ToProxyConfigSpecPatchPtrOutput() ProxyConfigSpecPatchPtrOutput {
	return i.ToProxyConfigSpecPatchPtrOutputWithContext(context.Background())
}

func (i *proxyConfigSpecPatchPtrType) ToProxyConfigSpecPatchPtrOutputWithContext(ctx context.Context) ProxyConfigSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigSpecPatchPtrOutput)
}

// Provides configuration for individual workloads. See more details at: https://istio.io/docs/reference/config/networking/proxy-config.html
type ProxyConfigSpecPatchOutput struct{ *pulumi.OutputState }

func (ProxyConfigSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyConfigSpecPatch)(nil)).Elem()
}

func (o ProxyConfigSpecPatchOutput) ToProxyConfigSpecPatchOutput() ProxyConfigSpecPatchOutput {
	return o
}

func (o ProxyConfigSpecPatchOutput) ToProxyConfigSpecPatchOutputWithContext(ctx context.Context) ProxyConfigSpecPatchOutput {
	return o
}

func (o ProxyConfigSpecPatchOutput) ToProxyConfigSpecPatchPtrOutput() ProxyConfigSpecPatchPtrOutput {
	return o.ToProxyConfigSpecPatchPtrOutputWithContext(context.Background())
}

func (o ProxyConfigSpecPatchOutput) ToProxyConfigSpecPatchPtrOutputWithContext(ctx context.Context) ProxyConfigSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProxyConfigSpecPatch) *ProxyConfigSpecPatch {
		return &v
	}).(ProxyConfigSpecPatchPtrOutput)
}

// The number of worker threads to run.
func (o ProxyConfigSpecPatchOutput) Concurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProxyConfigSpecPatch) *int { return v.Concurrency }).(pulumi.IntPtrOutput)
}

// Additional environment variables for the proxy.
func (o ProxyConfigSpecPatchOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProxyConfigSpecPatch) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

func (o ProxyConfigSpecPatchOutput) Image() ProxyConfigSpecImagePatchPtrOutput {
	return o.ApplyT(func(v ProxyConfigSpecPatch) *ProxyConfigSpecImagePatch { return v.Image }).(ProxyConfigSpecImagePatchPtrOutput)
}

func (o ProxyConfigSpecPatchOutput) Selector() ProxyConfigSpecSelectorPatchPtrOutput {
	return o.ApplyT(func(v ProxyConfigSpecPatch) *ProxyConfigSpecSelectorPatch { return v.Selector }).(ProxyConfigSpecSelectorPatchPtrOutput)
}

type ProxyConfigSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (ProxyConfigSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyConfigSpecPatch)(nil)).Elem()
}

func (o ProxyConfigSpecPatchPtrOutput) ToProxyConfigSpecPatchPtrOutput() ProxyConfigSpecPatchPtrOutput {
	return o
}

func (o ProxyConfigSpecPatchPtrOutput) ToProxyConfigSpecPatchPtrOutputWithContext(ctx context.Context) ProxyConfigSpecPatchPtrOutput {
	return o
}

func (o ProxyConfigSpecPatchPtrOutput) Elem() ProxyConfigSpecPatchOutput {
	return o.ApplyT(func(v *ProxyConfigSpecPatch) ProxyConfigSpecPatch {
		if v != nil {
			return *v
		}
		var ret ProxyConfigSpecPatch
		return ret
	}).(ProxyConfigSpecPatchOutput)
}

// The number of worker threads to run.
func (o ProxyConfigSpecPatchPtrOutput) Concurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProxyConfigSpecPatch) *int {
		if v == nil {
			return nil
		}
		return v.Concurrency
	}).(pulumi.IntPtrOutput)
}

// Additional environment variables for the proxy.
func (o ProxyConfigSpecPatchPtrOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProxyConfigSpecPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(pulumi.StringMapOutput)
}

func (o ProxyConfigSpecPatchPtrOutput) Image() ProxyConfigSpecImagePatchPtrOutput {
	return o.ApplyT(func(v *ProxyConfigSpecPatch) *ProxyConfigSpecImagePatch {
		if v == nil {
			return nil
		}
		return v.Image
	}).(ProxyConfigSpecImagePatchPtrOutput)
}

func (o ProxyConfigSpecPatchPtrOutput) Selector() ProxyConfigSpecSelectorPatchPtrOutput {
	return o.ApplyT(func(v *ProxyConfigSpecPatch) *ProxyConfigSpecSelectorPatch {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(ProxyConfigSpecSelectorPatchPtrOutput)
}

// Optional.
type ProxyConfigSpecSelector struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// ProxyConfigSpecSelectorInput is an input type that accepts ProxyConfigSpecSelectorArgs and ProxyConfigSpecSelectorOutput values.
// You can construct a concrete instance of `ProxyConfigSpecSelectorInput` via:
//
//	ProxyConfigSpecSelectorArgs{...}
type ProxyConfigSpecSelectorInput interface {
	pulumi.Input

	ToProxyConfigSpecSelectorOutput() ProxyConfigSpecSelectorOutput
	ToProxyConfigSpecSelectorOutputWithContext(context.Context) ProxyConfigSpecSelectorOutput
}

// Optional.
type ProxyConfigSpecSelectorArgs struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (ProxyConfigSpecSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyConfigSpecSelector)(nil)).Elem()
}

func (i ProxyConfigSpecSelectorArgs) ToProxyConfigSpecSelectorOutput() ProxyConfigSpecSelectorOutput {
	return i.ToProxyConfigSpecSelectorOutputWithContext(context.Background())
}

func (i ProxyConfigSpecSelectorArgs) ToProxyConfigSpecSelectorOutputWithContext(ctx context.Context) ProxyConfigSpecSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigSpecSelectorOutput)
}

func (i ProxyConfigSpecSelectorArgs) ToProxyConfigSpecSelectorPtrOutput() ProxyConfigSpecSelectorPtrOutput {
	return i.ToProxyConfigSpecSelectorPtrOutputWithContext(context.Background())
}

func (i ProxyConfigSpecSelectorArgs) ToProxyConfigSpecSelectorPtrOutputWithContext(ctx context.Context) ProxyConfigSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigSpecSelectorOutput).ToProxyConfigSpecSelectorPtrOutputWithContext(ctx)
}

// ProxyConfigSpecSelectorPtrInput is an input type that accepts ProxyConfigSpecSelectorArgs, ProxyConfigSpecSelectorPtr and ProxyConfigSpecSelectorPtrOutput values.
// You can construct a concrete instance of `ProxyConfigSpecSelectorPtrInput` via:
//
//	        ProxyConfigSpecSelectorArgs{...}
//
//	or:
//
//	        nil
type ProxyConfigSpecSelectorPtrInput interface {
	pulumi.Input

	ToProxyConfigSpecSelectorPtrOutput() ProxyConfigSpecSelectorPtrOutput
	ToProxyConfigSpecSelectorPtrOutputWithContext(context.Context) ProxyConfigSpecSelectorPtrOutput
}

type proxyConfigSpecSelectorPtrType ProxyConfigSpecSelectorArgs

func ProxyConfigSpecSelectorPtr(v *ProxyConfigSpecSelectorArgs) ProxyConfigSpecSelectorPtrInput {
	return (*proxyConfigSpecSelectorPtrType)(v)
}

func (*proxyConfigSpecSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyConfigSpecSelector)(nil)).Elem()
}

func (i *proxyConfigSpecSelectorPtrType) ToProxyConfigSpecSelectorPtrOutput() ProxyConfigSpecSelectorPtrOutput {
	return i.ToProxyConfigSpecSelectorPtrOutputWithContext(context.Background())
}

func (i *proxyConfigSpecSelectorPtrType) ToProxyConfigSpecSelectorPtrOutputWithContext(ctx context.Context) ProxyConfigSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigSpecSelectorPtrOutput)
}

// Optional.
type ProxyConfigSpecSelectorOutput struct{ *pulumi.OutputState }

func (ProxyConfigSpecSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyConfigSpecSelector)(nil)).Elem()
}

func (o ProxyConfigSpecSelectorOutput) ToProxyConfigSpecSelectorOutput() ProxyConfigSpecSelectorOutput {
	return o
}

func (o ProxyConfigSpecSelectorOutput) ToProxyConfigSpecSelectorOutputWithContext(ctx context.Context) ProxyConfigSpecSelectorOutput {
	return o
}

func (o ProxyConfigSpecSelectorOutput) ToProxyConfigSpecSelectorPtrOutput() ProxyConfigSpecSelectorPtrOutput {
	return o.ToProxyConfigSpecSelectorPtrOutputWithContext(context.Background())
}

func (o ProxyConfigSpecSelectorOutput) ToProxyConfigSpecSelectorPtrOutputWithContext(ctx context.Context) ProxyConfigSpecSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProxyConfigSpecSelector) *ProxyConfigSpecSelector {
		return &v
	}).(ProxyConfigSpecSelectorPtrOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o ProxyConfigSpecSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProxyConfigSpecSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type ProxyConfigSpecSelectorPtrOutput struct{ *pulumi.OutputState }

func (ProxyConfigSpecSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyConfigSpecSelector)(nil)).Elem()
}

func (o ProxyConfigSpecSelectorPtrOutput) ToProxyConfigSpecSelectorPtrOutput() ProxyConfigSpecSelectorPtrOutput {
	return o
}

func (o ProxyConfigSpecSelectorPtrOutput) ToProxyConfigSpecSelectorPtrOutputWithContext(ctx context.Context) ProxyConfigSpecSelectorPtrOutput {
	return o
}

func (o ProxyConfigSpecSelectorPtrOutput) Elem() ProxyConfigSpecSelectorOutput {
	return o.ApplyT(func(v *ProxyConfigSpecSelector) ProxyConfigSpecSelector {
		if v != nil {
			return *v
		}
		var ret ProxyConfigSpecSelector
		return ret
	}).(ProxyConfigSpecSelectorOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o ProxyConfigSpecSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProxyConfigSpecSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// Optional.
type ProxyConfigSpecSelectorPatch struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// ProxyConfigSpecSelectorPatchInput is an input type that accepts ProxyConfigSpecSelectorPatchArgs and ProxyConfigSpecSelectorPatchOutput values.
// You can construct a concrete instance of `ProxyConfigSpecSelectorPatchInput` via:
//
//	ProxyConfigSpecSelectorPatchArgs{...}
type ProxyConfigSpecSelectorPatchInput interface {
	pulumi.Input

	ToProxyConfigSpecSelectorPatchOutput() ProxyConfigSpecSelectorPatchOutput
	ToProxyConfigSpecSelectorPatchOutputWithContext(context.Context) ProxyConfigSpecSelectorPatchOutput
}

// Optional.
type ProxyConfigSpecSelectorPatchArgs struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (ProxyConfigSpecSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyConfigSpecSelectorPatch)(nil)).Elem()
}

func (i ProxyConfigSpecSelectorPatchArgs) ToProxyConfigSpecSelectorPatchOutput() ProxyConfigSpecSelectorPatchOutput {
	return i.ToProxyConfigSpecSelectorPatchOutputWithContext(context.Background())
}

func (i ProxyConfigSpecSelectorPatchArgs) ToProxyConfigSpecSelectorPatchOutputWithContext(ctx context.Context) ProxyConfigSpecSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigSpecSelectorPatchOutput)
}

func (i ProxyConfigSpecSelectorPatchArgs) ToProxyConfigSpecSelectorPatchPtrOutput() ProxyConfigSpecSelectorPatchPtrOutput {
	return i.ToProxyConfigSpecSelectorPatchPtrOutputWithContext(context.Background())
}

func (i ProxyConfigSpecSelectorPatchArgs) ToProxyConfigSpecSelectorPatchPtrOutputWithContext(ctx context.Context) ProxyConfigSpecSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigSpecSelectorPatchOutput).ToProxyConfigSpecSelectorPatchPtrOutputWithContext(ctx)
}

// ProxyConfigSpecSelectorPatchPtrInput is an input type that accepts ProxyConfigSpecSelectorPatchArgs, ProxyConfigSpecSelectorPatchPtr and ProxyConfigSpecSelectorPatchPtrOutput values.
// You can construct a concrete instance of `ProxyConfigSpecSelectorPatchPtrInput` via:
//
//	        ProxyConfigSpecSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type ProxyConfigSpecSelectorPatchPtrInput interface {
	pulumi.Input

	ToProxyConfigSpecSelectorPatchPtrOutput() ProxyConfigSpecSelectorPatchPtrOutput
	ToProxyConfigSpecSelectorPatchPtrOutputWithContext(context.Context) ProxyConfigSpecSelectorPatchPtrOutput
}

type proxyConfigSpecSelectorPatchPtrType ProxyConfigSpecSelectorPatchArgs

func ProxyConfigSpecSelectorPatchPtr(v *ProxyConfigSpecSelectorPatchArgs) ProxyConfigSpecSelectorPatchPtrInput {
	return (*proxyConfigSpecSelectorPatchPtrType)(v)
}

func (*proxyConfigSpecSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyConfigSpecSelectorPatch)(nil)).Elem()
}

func (i *proxyConfigSpecSelectorPatchPtrType) ToProxyConfigSpecSelectorPatchPtrOutput() ProxyConfigSpecSelectorPatchPtrOutput {
	return i.ToProxyConfigSpecSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *proxyConfigSpecSelectorPatchPtrType) ToProxyConfigSpecSelectorPatchPtrOutputWithContext(ctx context.Context) ProxyConfigSpecSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigSpecSelectorPatchPtrOutput)
}

// Optional.
type ProxyConfigSpecSelectorPatchOutput struct{ *pulumi.OutputState }

func (ProxyConfigSpecSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyConfigSpecSelectorPatch)(nil)).Elem()
}

func (o ProxyConfigSpecSelectorPatchOutput) ToProxyConfigSpecSelectorPatchOutput() ProxyConfigSpecSelectorPatchOutput {
	return o
}

func (o ProxyConfigSpecSelectorPatchOutput) ToProxyConfigSpecSelectorPatchOutputWithContext(ctx context.Context) ProxyConfigSpecSelectorPatchOutput {
	return o
}

func (o ProxyConfigSpecSelectorPatchOutput) ToProxyConfigSpecSelectorPatchPtrOutput() ProxyConfigSpecSelectorPatchPtrOutput {
	return o.ToProxyConfigSpecSelectorPatchPtrOutputWithContext(context.Background())
}

func (o ProxyConfigSpecSelectorPatchOutput) ToProxyConfigSpecSelectorPatchPtrOutputWithContext(ctx context.Context) ProxyConfigSpecSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProxyConfigSpecSelectorPatch) *ProxyConfigSpecSelectorPatch {
		return &v
	}).(ProxyConfigSpecSelectorPatchPtrOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o ProxyConfigSpecSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProxyConfigSpecSelectorPatch) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type ProxyConfigSpecSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (ProxyConfigSpecSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyConfigSpecSelectorPatch)(nil)).Elem()
}

func (o ProxyConfigSpecSelectorPatchPtrOutput) ToProxyConfigSpecSelectorPatchPtrOutput() ProxyConfigSpecSelectorPatchPtrOutput {
	return o
}

func (o ProxyConfigSpecSelectorPatchPtrOutput) ToProxyConfigSpecSelectorPatchPtrOutputWithContext(ctx context.Context) ProxyConfigSpecSelectorPatchPtrOutput {
	return o
}

func (o ProxyConfigSpecSelectorPatchPtrOutput) Elem() ProxyConfigSpecSelectorPatchOutput {
	return o.ApplyT(func(v *ProxyConfigSpecSelectorPatch) ProxyConfigSpecSelectorPatch {
		if v != nil {
			return *v
		}
		var ret ProxyConfigSpecSelectorPatch
		return ret
	}).(ProxyConfigSpecSelectorPatchOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o ProxyConfigSpecSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProxyConfigSpecSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type ServiceEntryType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta     `pulumi:"metadata"`
	Spec     *ServiceEntrySpec      `pulumi:"spec"`
	Status   map[string]interface{} `pulumi:"status"`
}

// ServiceEntryTypeInput is an input type that accepts ServiceEntryTypeArgs and ServiceEntryTypeOutput values.
// You can construct a concrete instance of `ServiceEntryTypeInput` via:
//
//	ServiceEntryTypeArgs{...}
type ServiceEntryTypeInput interface {
	pulumi.Input

	ToServiceEntryTypeOutput() ServiceEntryTypeOutput
	ToServiceEntryTypeOutputWithContext(context.Context) ServiceEntryTypeOutput
}

type ServiceEntryTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec     ServiceEntrySpecPtrInput  `pulumi:"spec"`
	Status   pulumi.MapInput           `pulumi:"status"`
}

func (ServiceEntryTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEntryType)(nil)).Elem()
}

func (i ServiceEntryTypeArgs) ToServiceEntryTypeOutput() ServiceEntryTypeOutput {
	return i.ToServiceEntryTypeOutputWithContext(context.Background())
}

func (i ServiceEntryTypeArgs) ToServiceEntryTypeOutputWithContext(ctx context.Context) ServiceEntryTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntryTypeOutput)
}

// ServiceEntryTypeArrayInput is an input type that accepts ServiceEntryTypeArray and ServiceEntryTypeArrayOutput values.
// You can construct a concrete instance of `ServiceEntryTypeArrayInput` via:
//
//	ServiceEntryTypeArray{ ServiceEntryTypeArgs{...} }
type ServiceEntryTypeArrayInput interface {
	pulumi.Input

	ToServiceEntryTypeArrayOutput() ServiceEntryTypeArrayOutput
	ToServiceEntryTypeArrayOutputWithContext(context.Context) ServiceEntryTypeArrayOutput
}

type ServiceEntryTypeArray []ServiceEntryTypeInput

func (ServiceEntryTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEntryType)(nil)).Elem()
}

func (i ServiceEntryTypeArray) ToServiceEntryTypeArrayOutput() ServiceEntryTypeArrayOutput {
	return i.ToServiceEntryTypeArrayOutputWithContext(context.Background())
}

func (i ServiceEntryTypeArray) ToServiceEntryTypeArrayOutputWithContext(ctx context.Context) ServiceEntryTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntryTypeArrayOutput)
}

type ServiceEntryTypeOutput struct{ *pulumi.OutputState }

func (ServiceEntryTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEntryType)(nil)).Elem()
}

func (o ServiceEntryTypeOutput) ToServiceEntryTypeOutput() ServiceEntryTypeOutput {
	return o
}

func (o ServiceEntryTypeOutput) ToServiceEntryTypeOutputWithContext(ctx context.Context) ServiceEntryTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ServiceEntryTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEntryType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ServiceEntryTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEntryType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ServiceEntryTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ServiceEntryType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o ServiceEntryTypeOutput) Spec() ServiceEntrySpecPtrOutput {
	return o.ApplyT(func(v ServiceEntryType) *ServiceEntrySpec { return v.Spec }).(ServiceEntrySpecPtrOutput)
}

func (o ServiceEntryTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v ServiceEntryType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

type ServiceEntryTypeArrayOutput struct{ *pulumi.OutputState }

func (ServiceEntryTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEntryType)(nil)).Elem()
}

func (o ServiceEntryTypeArrayOutput) ToServiceEntryTypeArrayOutput() ServiceEntryTypeArrayOutput {
	return o
}

func (o ServiceEntryTypeArrayOutput) ToServiceEntryTypeArrayOutputWithContext(ctx context.Context) ServiceEntryTypeArrayOutput {
	return o
}

func (o ServiceEntryTypeArrayOutput) Index(i pulumi.IntInput) ServiceEntryTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEntryType {
		return vs[0].([]ServiceEntryType)[vs[1].(int)]
	}).(ServiceEntryTypeOutput)
}

// ServiceEntryList is a list of ServiceEntry
type ServiceEntryListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of serviceentries. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []ServiceEntryType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// ServiceEntryListTypeInput is an input type that accepts ServiceEntryListTypeArgs and ServiceEntryListTypeOutput values.
// You can construct a concrete instance of `ServiceEntryListTypeInput` via:
//
//	ServiceEntryListTypeArgs{...}
type ServiceEntryListTypeInput interface {
	pulumi.Input

	ToServiceEntryListTypeOutput() ServiceEntryListTypeOutput
	ToServiceEntryListTypeOutputWithContext(context.Context) ServiceEntryListTypeOutput
}

// ServiceEntryList is a list of ServiceEntry
type ServiceEntryListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of serviceentries. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items ServiceEntryTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (ServiceEntryListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEntryListType)(nil)).Elem()
}

func (i ServiceEntryListTypeArgs) ToServiceEntryListTypeOutput() ServiceEntryListTypeOutput {
	return i.ToServiceEntryListTypeOutputWithContext(context.Background())
}

func (i ServiceEntryListTypeArgs) ToServiceEntryListTypeOutputWithContext(ctx context.Context) ServiceEntryListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntryListTypeOutput)
}

// ServiceEntryList is a list of ServiceEntry
type ServiceEntryListTypeOutput struct{ *pulumi.OutputState }

func (ServiceEntryListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEntryListType)(nil)).Elem()
}

func (o ServiceEntryListTypeOutput) ToServiceEntryListTypeOutput() ServiceEntryListTypeOutput {
	return o
}

func (o ServiceEntryListTypeOutput) ToServiceEntryListTypeOutputWithContext(ctx context.Context) ServiceEntryListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ServiceEntryListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEntryListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of serviceentries. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o ServiceEntryListTypeOutput) Items() ServiceEntryTypeArrayOutput {
	return o.ApplyT(func(v ServiceEntryListType) []ServiceEntryType { return v.Items }).(ServiceEntryTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ServiceEntryListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEntryListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ServiceEntryListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v ServiceEntryListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

type ServiceEntryPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *ServiceEntrySpecPatch  `pulumi:"spec"`
	Status   map[string]interface{}  `pulumi:"status"`
}

// ServiceEntryPatchTypeInput is an input type that accepts ServiceEntryPatchTypeArgs and ServiceEntryPatchTypeOutput values.
// You can construct a concrete instance of `ServiceEntryPatchTypeInput` via:
//
//	ServiceEntryPatchTypeArgs{...}
type ServiceEntryPatchTypeInput interface {
	pulumi.Input

	ToServiceEntryPatchTypeOutput() ServiceEntryPatchTypeOutput
	ToServiceEntryPatchTypeOutputWithContext(context.Context) ServiceEntryPatchTypeOutput
}

type ServiceEntryPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
	Spec     ServiceEntrySpecPatchPtrInput  `pulumi:"spec"`
	Status   pulumi.MapInput                `pulumi:"status"`
}

func (ServiceEntryPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEntryPatchType)(nil)).Elem()
}

func (i ServiceEntryPatchTypeArgs) ToServiceEntryPatchTypeOutput() ServiceEntryPatchTypeOutput {
	return i.ToServiceEntryPatchTypeOutputWithContext(context.Background())
}

func (i ServiceEntryPatchTypeArgs) ToServiceEntryPatchTypeOutputWithContext(ctx context.Context) ServiceEntryPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntryPatchTypeOutput)
}

type ServiceEntryPatchTypeOutput struct{ *pulumi.OutputState }

func (ServiceEntryPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEntryPatchType)(nil)).Elem()
}

func (o ServiceEntryPatchTypeOutput) ToServiceEntryPatchTypeOutput() ServiceEntryPatchTypeOutput {
	return o
}

func (o ServiceEntryPatchTypeOutput) ToServiceEntryPatchTypeOutputWithContext(ctx context.Context) ServiceEntryPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ServiceEntryPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEntryPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ServiceEntryPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEntryPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ServiceEntryPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v ServiceEntryPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o ServiceEntryPatchTypeOutput) Spec() ServiceEntrySpecPatchPtrOutput {
	return o.ApplyT(func(v ServiceEntryPatchType) *ServiceEntrySpecPatch { return v.Spec }).(ServiceEntrySpecPatchPtrOutput)
}

func (o ServiceEntryPatchTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v ServiceEntryPatchType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

// Configuration affecting service registry. See more details at: https://istio.io/docs/reference/config/networking/service-entry.html
type ServiceEntrySpec struct {
	// The virtual IP addresses associated with the service.
	Addresses []string `pulumi:"addresses"`
	// One or more endpoints associated with the service.
	Endpoints []ServiceEntrySpecEndpoints `pulumi:"endpoints"`
	// A list of namespaces to which this service is exported.
	ExportTo []string `pulumi:"exportTo"`
	// The hosts associated with the ServiceEntry.
	Hosts []string `pulumi:"hosts"`
	// Specify whether the service should be considered external to the mesh or part of the mesh.
	//
	// Valid Options: MESH_EXTERNAL, MESH_INTERNAL
	Location *string `pulumi:"location"`
	// The ports associated with the external service.
	Ports []ServiceEntrySpecPorts `pulumi:"ports"`
	// Service resolution mode for the hosts.
	//
	// Valid Options: NONE, STATIC, DNS, DNS_ROUND_ROBIN
	Resolution *string `pulumi:"resolution"`
	// If specified, the proxy will verify that the server certificate's subject alternate name matches one of the specified values.
	SubjectAltNames  []string                          `pulumi:"subjectAltNames"`
	WorkloadSelector *ServiceEntrySpecWorkloadSelector `pulumi:"workloadSelector"`
}

// ServiceEntrySpecInput is an input type that accepts ServiceEntrySpecArgs and ServiceEntrySpecOutput values.
// You can construct a concrete instance of `ServiceEntrySpecInput` via:
//
//	ServiceEntrySpecArgs{...}
type ServiceEntrySpecInput interface {
	pulumi.Input

	ToServiceEntrySpecOutput() ServiceEntrySpecOutput
	ToServiceEntrySpecOutputWithContext(context.Context) ServiceEntrySpecOutput
}

// Configuration affecting service registry. See more details at: https://istio.io/docs/reference/config/networking/service-entry.html
type ServiceEntrySpecArgs struct {
	// The virtual IP addresses associated with the service.
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
	// One or more endpoints associated with the service.
	Endpoints ServiceEntrySpecEndpointsArrayInput `pulumi:"endpoints"`
	// A list of namespaces to which this service is exported.
	ExportTo pulumi.StringArrayInput `pulumi:"exportTo"`
	// The hosts associated with the ServiceEntry.
	Hosts pulumi.StringArrayInput `pulumi:"hosts"`
	// Specify whether the service should be considered external to the mesh or part of the mesh.
	//
	// Valid Options: MESH_EXTERNAL, MESH_INTERNAL
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The ports associated with the external service.
	Ports ServiceEntrySpecPortsArrayInput `pulumi:"ports"`
	// Service resolution mode for the hosts.
	//
	// Valid Options: NONE, STATIC, DNS, DNS_ROUND_ROBIN
	Resolution pulumi.StringPtrInput `pulumi:"resolution"`
	// If specified, the proxy will verify that the server certificate's subject alternate name matches one of the specified values.
	SubjectAltNames  pulumi.StringArrayInput                  `pulumi:"subjectAltNames"`
	WorkloadSelector ServiceEntrySpecWorkloadSelectorPtrInput `pulumi:"workloadSelector"`
}

func (ServiceEntrySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEntrySpec)(nil)).Elem()
}

func (i ServiceEntrySpecArgs) ToServiceEntrySpecOutput() ServiceEntrySpecOutput {
	return i.ToServiceEntrySpecOutputWithContext(context.Background())
}

func (i ServiceEntrySpecArgs) ToServiceEntrySpecOutputWithContext(ctx context.Context) ServiceEntrySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntrySpecOutput)
}

func (i ServiceEntrySpecArgs) ToServiceEntrySpecPtrOutput() ServiceEntrySpecPtrOutput {
	return i.ToServiceEntrySpecPtrOutputWithContext(context.Background())
}

func (i ServiceEntrySpecArgs) ToServiceEntrySpecPtrOutputWithContext(ctx context.Context) ServiceEntrySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntrySpecOutput).ToServiceEntrySpecPtrOutputWithContext(ctx)
}

// ServiceEntrySpecPtrInput is an input type that accepts ServiceEntrySpecArgs, ServiceEntrySpecPtr and ServiceEntrySpecPtrOutput values.
// You can construct a concrete instance of `ServiceEntrySpecPtrInput` via:
//
//	        ServiceEntrySpecArgs{...}
//
//	or:
//
//	        nil
type ServiceEntrySpecPtrInput interface {
	pulumi.Input

	ToServiceEntrySpecPtrOutput() ServiceEntrySpecPtrOutput
	ToServiceEntrySpecPtrOutputWithContext(context.Context) ServiceEntrySpecPtrOutput
}

type serviceEntrySpecPtrType ServiceEntrySpecArgs

func ServiceEntrySpecPtr(v *ServiceEntrySpecArgs) ServiceEntrySpecPtrInput {
	return (*serviceEntrySpecPtrType)(v)
}

func (*serviceEntrySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEntrySpec)(nil)).Elem()
}

func (i *serviceEntrySpecPtrType) ToServiceEntrySpecPtrOutput() ServiceEntrySpecPtrOutput {
	return i.ToServiceEntrySpecPtrOutputWithContext(context.Background())
}

func (i *serviceEntrySpecPtrType) ToServiceEntrySpecPtrOutputWithContext(ctx context.Context) ServiceEntrySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntrySpecPtrOutput)
}

// Configuration affecting service registry. See more details at: https://istio.io/docs/reference/config/networking/service-entry.html
type ServiceEntrySpecOutput struct{ *pulumi.OutputState }

func (ServiceEntrySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEntrySpec)(nil)).Elem()
}

func (o ServiceEntrySpecOutput) ToServiceEntrySpecOutput() ServiceEntrySpecOutput {
	return o
}

func (o ServiceEntrySpecOutput) ToServiceEntrySpecOutputWithContext(ctx context.Context) ServiceEntrySpecOutput {
	return o
}

func (o ServiceEntrySpecOutput) ToServiceEntrySpecPtrOutput() ServiceEntrySpecPtrOutput {
	return o.ToServiceEntrySpecPtrOutputWithContext(context.Background())
}

func (o ServiceEntrySpecOutput) ToServiceEntrySpecPtrOutputWithContext(ctx context.Context) ServiceEntrySpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceEntrySpec) *ServiceEntrySpec {
		return &v
	}).(ServiceEntrySpecPtrOutput)
}

// The virtual IP addresses associated with the service.
func (o ServiceEntrySpecOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEntrySpec) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

// One or more endpoints associated with the service.
func (o ServiceEntrySpecOutput) Endpoints() ServiceEntrySpecEndpointsArrayOutput {
	return o.ApplyT(func(v ServiceEntrySpec) []ServiceEntrySpecEndpoints { return v.Endpoints }).(ServiceEntrySpecEndpointsArrayOutput)
}

// A list of namespaces to which this service is exported.
func (o ServiceEntrySpecOutput) ExportTo() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEntrySpec) []string { return v.ExportTo }).(pulumi.StringArrayOutput)
}

// The hosts associated with the ServiceEntry.
func (o ServiceEntrySpecOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEntrySpec) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// Specify whether the service should be considered external to the mesh or part of the mesh.
//
// Valid Options: MESH_EXTERNAL, MESH_INTERNAL
func (o ServiceEntrySpecOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpec) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The ports associated with the external service.
func (o ServiceEntrySpecOutput) Ports() ServiceEntrySpecPortsArrayOutput {
	return o.ApplyT(func(v ServiceEntrySpec) []ServiceEntrySpecPorts { return v.Ports }).(ServiceEntrySpecPortsArrayOutput)
}

// Service resolution mode for the hosts.
//
// Valid Options: NONE, STATIC, DNS, DNS_ROUND_ROBIN
func (o ServiceEntrySpecOutput) Resolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpec) *string { return v.Resolution }).(pulumi.StringPtrOutput)
}

// If specified, the proxy will verify that the server certificate's subject alternate name matches one of the specified values.
func (o ServiceEntrySpecOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEntrySpec) []string { return v.SubjectAltNames }).(pulumi.StringArrayOutput)
}

func (o ServiceEntrySpecOutput) WorkloadSelector() ServiceEntrySpecWorkloadSelectorPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpec) *ServiceEntrySpecWorkloadSelector { return v.WorkloadSelector }).(ServiceEntrySpecWorkloadSelectorPtrOutput)
}

type ServiceEntrySpecPtrOutput struct{ *pulumi.OutputState }

func (ServiceEntrySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEntrySpec)(nil)).Elem()
}

func (o ServiceEntrySpecPtrOutput) ToServiceEntrySpecPtrOutput() ServiceEntrySpecPtrOutput {
	return o
}

func (o ServiceEntrySpecPtrOutput) ToServiceEntrySpecPtrOutputWithContext(ctx context.Context) ServiceEntrySpecPtrOutput {
	return o
}

func (o ServiceEntrySpecPtrOutput) Elem() ServiceEntrySpecOutput {
	return o.ApplyT(func(v *ServiceEntrySpec) ServiceEntrySpec {
		if v != nil {
			return *v
		}
		var ret ServiceEntrySpec
		return ret
	}).(ServiceEntrySpecOutput)
}

// The virtual IP addresses associated with the service.
func (o ServiceEntrySpecPtrOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceEntrySpec) []string {
		if v == nil {
			return nil
		}
		return v.Addresses
	}).(pulumi.StringArrayOutput)
}

// One or more endpoints associated with the service.
func (o ServiceEntrySpecPtrOutput) Endpoints() ServiceEntrySpecEndpointsArrayOutput {
	return o.ApplyT(func(v *ServiceEntrySpec) []ServiceEntrySpecEndpoints {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(ServiceEntrySpecEndpointsArrayOutput)
}

// A list of namespaces to which this service is exported.
func (o ServiceEntrySpecPtrOutput) ExportTo() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceEntrySpec) []string {
		if v == nil {
			return nil
		}
		return v.ExportTo
	}).(pulumi.StringArrayOutput)
}

// The hosts associated with the ServiceEntry.
func (o ServiceEntrySpecPtrOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceEntrySpec) []string {
		if v == nil {
			return nil
		}
		return v.Hosts
	}).(pulumi.StringArrayOutput)
}

// Specify whether the service should be considered external to the mesh or part of the mesh.
//
// Valid Options: MESH_EXTERNAL, MESH_INTERNAL
func (o ServiceEntrySpecPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceEntrySpec) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The ports associated with the external service.
func (o ServiceEntrySpecPtrOutput) Ports() ServiceEntrySpecPortsArrayOutput {
	return o.ApplyT(func(v *ServiceEntrySpec) []ServiceEntrySpecPorts {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(ServiceEntrySpecPortsArrayOutput)
}

// Service resolution mode for the hosts.
//
// Valid Options: NONE, STATIC, DNS, DNS_ROUND_ROBIN
func (o ServiceEntrySpecPtrOutput) Resolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceEntrySpec) *string {
		if v == nil {
			return nil
		}
		return v.Resolution
	}).(pulumi.StringPtrOutput)
}

// If specified, the proxy will verify that the server certificate's subject alternate name matches one of the specified values.
func (o ServiceEntrySpecPtrOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceEntrySpec) []string {
		if v == nil {
			return nil
		}
		return v.SubjectAltNames
	}).(pulumi.StringArrayOutput)
}

func (o ServiceEntrySpecPtrOutput) WorkloadSelector() ServiceEntrySpecWorkloadSelectorPtrOutput {
	return o.ApplyT(func(v *ServiceEntrySpec) *ServiceEntrySpecWorkloadSelector {
		if v == nil {
			return nil
		}
		return v.WorkloadSelector
	}).(ServiceEntrySpecWorkloadSelectorPtrOutput)
}

type ServiceEntrySpecEndpoints struct {
	// Address associated with the network endpoint without the port.
	Address *string `pulumi:"address"`
	// One or more labels associated with the endpoint.
	Labels map[string]string `pulumi:"labels"`
	// The locality associated with the endpoint.
	Locality *string `pulumi:"locality"`
	// Network enables Istio to group endpoints resident in the same L3 domain/network.
	Network *string `pulumi:"network"`
	// Set of ports associated with the endpoint.
	Ports map[string]int `pulumi:"ports"`
	// The service account associated with the workload if a sidecar is present in the workload.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// The load balancing weight associated with the endpoint.
	Weight *int `pulumi:"weight"`
}

// ServiceEntrySpecEndpointsInput is an input type that accepts ServiceEntrySpecEndpointsArgs and ServiceEntrySpecEndpointsOutput values.
// You can construct a concrete instance of `ServiceEntrySpecEndpointsInput` via:
//
//	ServiceEntrySpecEndpointsArgs{...}
type ServiceEntrySpecEndpointsInput interface {
	pulumi.Input

	ToServiceEntrySpecEndpointsOutput() ServiceEntrySpecEndpointsOutput
	ToServiceEntrySpecEndpointsOutputWithContext(context.Context) ServiceEntrySpecEndpointsOutput
}

type ServiceEntrySpecEndpointsArgs struct {
	// Address associated with the network endpoint without the port.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// One or more labels associated with the endpoint.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The locality associated with the endpoint.
	Locality pulumi.StringPtrInput `pulumi:"locality"`
	// Network enables Istio to group endpoints resident in the same L3 domain/network.
	Network pulumi.StringPtrInput `pulumi:"network"`
	// Set of ports associated with the endpoint.
	Ports pulumi.IntMapInput `pulumi:"ports"`
	// The service account associated with the workload if a sidecar is present in the workload.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
	// The load balancing weight associated with the endpoint.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (ServiceEntrySpecEndpointsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEntrySpecEndpoints)(nil)).Elem()
}

func (i ServiceEntrySpecEndpointsArgs) ToServiceEntrySpecEndpointsOutput() ServiceEntrySpecEndpointsOutput {
	return i.ToServiceEntrySpecEndpointsOutputWithContext(context.Background())
}

func (i ServiceEntrySpecEndpointsArgs) ToServiceEntrySpecEndpointsOutputWithContext(ctx context.Context) ServiceEntrySpecEndpointsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntrySpecEndpointsOutput)
}

// ServiceEntrySpecEndpointsArrayInput is an input type that accepts ServiceEntrySpecEndpointsArray and ServiceEntrySpecEndpointsArrayOutput values.
// You can construct a concrete instance of `ServiceEntrySpecEndpointsArrayInput` via:
//
//	ServiceEntrySpecEndpointsArray{ ServiceEntrySpecEndpointsArgs{...} }
type ServiceEntrySpecEndpointsArrayInput interface {
	pulumi.Input

	ToServiceEntrySpecEndpointsArrayOutput() ServiceEntrySpecEndpointsArrayOutput
	ToServiceEntrySpecEndpointsArrayOutputWithContext(context.Context) ServiceEntrySpecEndpointsArrayOutput
}

type ServiceEntrySpecEndpointsArray []ServiceEntrySpecEndpointsInput

func (ServiceEntrySpecEndpointsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEntrySpecEndpoints)(nil)).Elem()
}

func (i ServiceEntrySpecEndpointsArray) ToServiceEntrySpecEndpointsArrayOutput() ServiceEntrySpecEndpointsArrayOutput {
	return i.ToServiceEntrySpecEndpointsArrayOutputWithContext(context.Background())
}

func (i ServiceEntrySpecEndpointsArray) ToServiceEntrySpecEndpointsArrayOutputWithContext(ctx context.Context) ServiceEntrySpecEndpointsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntrySpecEndpointsArrayOutput)
}

type ServiceEntrySpecEndpointsOutput struct{ *pulumi.OutputState }

func (ServiceEntrySpecEndpointsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEntrySpecEndpoints)(nil)).Elem()
}

func (o ServiceEntrySpecEndpointsOutput) ToServiceEntrySpecEndpointsOutput() ServiceEntrySpecEndpointsOutput {
	return o
}

func (o ServiceEntrySpecEndpointsOutput) ToServiceEntrySpecEndpointsOutputWithContext(ctx context.Context) ServiceEntrySpecEndpointsOutput {
	return o
}

// Address associated with the network endpoint without the port.
func (o ServiceEntrySpecEndpointsOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpecEndpoints) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// One or more labels associated with the endpoint.
func (o ServiceEntrySpecEndpointsOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceEntrySpecEndpoints) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The locality associated with the endpoint.
func (o ServiceEntrySpecEndpointsOutput) Locality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpecEndpoints) *string { return v.Locality }).(pulumi.StringPtrOutput)
}

// Network enables Istio to group endpoints resident in the same L3 domain/network.
func (o ServiceEntrySpecEndpointsOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpecEndpoints) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// Set of ports associated with the endpoint.
func (o ServiceEntrySpecEndpointsOutput) Ports() pulumi.IntMapOutput {
	return o.ApplyT(func(v ServiceEntrySpecEndpoints) map[string]int { return v.Ports }).(pulumi.IntMapOutput)
}

// The service account associated with the workload if a sidecar is present in the workload.
func (o ServiceEntrySpecEndpointsOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpecEndpoints) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// The load balancing weight associated with the endpoint.
func (o ServiceEntrySpecEndpointsOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpecEndpoints) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ServiceEntrySpecEndpointsArrayOutput struct{ *pulumi.OutputState }

func (ServiceEntrySpecEndpointsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEntrySpecEndpoints)(nil)).Elem()
}

func (o ServiceEntrySpecEndpointsArrayOutput) ToServiceEntrySpecEndpointsArrayOutput() ServiceEntrySpecEndpointsArrayOutput {
	return o
}

func (o ServiceEntrySpecEndpointsArrayOutput) ToServiceEntrySpecEndpointsArrayOutputWithContext(ctx context.Context) ServiceEntrySpecEndpointsArrayOutput {
	return o
}

func (o ServiceEntrySpecEndpointsArrayOutput) Index(i pulumi.IntInput) ServiceEntrySpecEndpointsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEntrySpecEndpoints {
		return vs[0].([]ServiceEntrySpecEndpoints)[vs[1].(int)]
	}).(ServiceEntrySpecEndpointsOutput)
}

type ServiceEntrySpecEndpointsPatch struct {
	// Address associated with the network endpoint without the port.
	Address *string `pulumi:"address"`
	// One or more labels associated with the endpoint.
	Labels map[string]string `pulumi:"labels"`
	// The locality associated with the endpoint.
	Locality *string `pulumi:"locality"`
	// Network enables Istio to group endpoints resident in the same L3 domain/network.
	Network *string `pulumi:"network"`
	// Set of ports associated with the endpoint.
	Ports map[string]int `pulumi:"ports"`
	// The service account associated with the workload if a sidecar is present in the workload.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// The load balancing weight associated with the endpoint.
	Weight *int `pulumi:"weight"`
}

// ServiceEntrySpecEndpointsPatchInput is an input type that accepts ServiceEntrySpecEndpointsPatchArgs and ServiceEntrySpecEndpointsPatchOutput values.
// You can construct a concrete instance of `ServiceEntrySpecEndpointsPatchInput` via:
//
//	ServiceEntrySpecEndpointsPatchArgs{...}
type ServiceEntrySpecEndpointsPatchInput interface {
	pulumi.Input

	ToServiceEntrySpecEndpointsPatchOutput() ServiceEntrySpecEndpointsPatchOutput
	ToServiceEntrySpecEndpointsPatchOutputWithContext(context.Context) ServiceEntrySpecEndpointsPatchOutput
}

type ServiceEntrySpecEndpointsPatchArgs struct {
	// Address associated with the network endpoint without the port.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// One or more labels associated with the endpoint.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The locality associated with the endpoint.
	Locality pulumi.StringPtrInput `pulumi:"locality"`
	// Network enables Istio to group endpoints resident in the same L3 domain/network.
	Network pulumi.StringPtrInput `pulumi:"network"`
	// Set of ports associated with the endpoint.
	Ports pulumi.IntMapInput `pulumi:"ports"`
	// The service account associated with the workload if a sidecar is present in the workload.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
	// The load balancing weight associated with the endpoint.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (ServiceEntrySpecEndpointsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEntrySpecEndpointsPatch)(nil)).Elem()
}

func (i ServiceEntrySpecEndpointsPatchArgs) ToServiceEntrySpecEndpointsPatchOutput() ServiceEntrySpecEndpointsPatchOutput {
	return i.ToServiceEntrySpecEndpointsPatchOutputWithContext(context.Background())
}

func (i ServiceEntrySpecEndpointsPatchArgs) ToServiceEntrySpecEndpointsPatchOutputWithContext(ctx context.Context) ServiceEntrySpecEndpointsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntrySpecEndpointsPatchOutput)
}

// ServiceEntrySpecEndpointsPatchArrayInput is an input type that accepts ServiceEntrySpecEndpointsPatchArray and ServiceEntrySpecEndpointsPatchArrayOutput values.
// You can construct a concrete instance of `ServiceEntrySpecEndpointsPatchArrayInput` via:
//
//	ServiceEntrySpecEndpointsPatchArray{ ServiceEntrySpecEndpointsPatchArgs{...} }
type ServiceEntrySpecEndpointsPatchArrayInput interface {
	pulumi.Input

	ToServiceEntrySpecEndpointsPatchArrayOutput() ServiceEntrySpecEndpointsPatchArrayOutput
	ToServiceEntrySpecEndpointsPatchArrayOutputWithContext(context.Context) ServiceEntrySpecEndpointsPatchArrayOutput
}

type ServiceEntrySpecEndpointsPatchArray []ServiceEntrySpecEndpointsPatchInput

func (ServiceEntrySpecEndpointsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEntrySpecEndpointsPatch)(nil)).Elem()
}

func (i ServiceEntrySpecEndpointsPatchArray) ToServiceEntrySpecEndpointsPatchArrayOutput() ServiceEntrySpecEndpointsPatchArrayOutput {
	return i.ToServiceEntrySpecEndpointsPatchArrayOutputWithContext(context.Background())
}

func (i ServiceEntrySpecEndpointsPatchArray) ToServiceEntrySpecEndpointsPatchArrayOutputWithContext(ctx context.Context) ServiceEntrySpecEndpointsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntrySpecEndpointsPatchArrayOutput)
}

type ServiceEntrySpecEndpointsPatchOutput struct{ *pulumi.OutputState }

func (ServiceEntrySpecEndpointsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEntrySpecEndpointsPatch)(nil)).Elem()
}

func (o ServiceEntrySpecEndpointsPatchOutput) ToServiceEntrySpecEndpointsPatchOutput() ServiceEntrySpecEndpointsPatchOutput {
	return o
}

func (o ServiceEntrySpecEndpointsPatchOutput) ToServiceEntrySpecEndpointsPatchOutputWithContext(ctx context.Context) ServiceEntrySpecEndpointsPatchOutput {
	return o
}

// Address associated with the network endpoint without the port.
func (o ServiceEntrySpecEndpointsPatchOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpecEndpointsPatch) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// One or more labels associated with the endpoint.
func (o ServiceEntrySpecEndpointsPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceEntrySpecEndpointsPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The locality associated with the endpoint.
func (o ServiceEntrySpecEndpointsPatchOutput) Locality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpecEndpointsPatch) *string { return v.Locality }).(pulumi.StringPtrOutput)
}

// Network enables Istio to group endpoints resident in the same L3 domain/network.
func (o ServiceEntrySpecEndpointsPatchOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpecEndpointsPatch) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// Set of ports associated with the endpoint.
func (o ServiceEntrySpecEndpointsPatchOutput) Ports() pulumi.IntMapOutput {
	return o.ApplyT(func(v ServiceEntrySpecEndpointsPatch) map[string]int { return v.Ports }).(pulumi.IntMapOutput)
}

// The service account associated with the workload if a sidecar is present in the workload.
func (o ServiceEntrySpecEndpointsPatchOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpecEndpointsPatch) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// The load balancing weight associated with the endpoint.
func (o ServiceEntrySpecEndpointsPatchOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpecEndpointsPatch) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ServiceEntrySpecEndpointsPatchArrayOutput struct{ *pulumi.OutputState }

func (ServiceEntrySpecEndpointsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEntrySpecEndpointsPatch)(nil)).Elem()
}

func (o ServiceEntrySpecEndpointsPatchArrayOutput) ToServiceEntrySpecEndpointsPatchArrayOutput() ServiceEntrySpecEndpointsPatchArrayOutput {
	return o
}

func (o ServiceEntrySpecEndpointsPatchArrayOutput) ToServiceEntrySpecEndpointsPatchArrayOutputWithContext(ctx context.Context) ServiceEntrySpecEndpointsPatchArrayOutput {
	return o
}

func (o ServiceEntrySpecEndpointsPatchArrayOutput) Index(i pulumi.IntInput) ServiceEntrySpecEndpointsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEntrySpecEndpointsPatch {
		return vs[0].([]ServiceEntrySpecEndpointsPatch)[vs[1].(int)]
	}).(ServiceEntrySpecEndpointsPatchOutput)
}

// Configuration affecting service registry. See more details at: https://istio.io/docs/reference/config/networking/service-entry.html
type ServiceEntrySpecPatch struct {
	// The virtual IP addresses associated with the service.
	Addresses []string `pulumi:"addresses"`
	// One or more endpoints associated with the service.
	Endpoints []ServiceEntrySpecEndpointsPatch `pulumi:"endpoints"`
	// A list of namespaces to which this service is exported.
	ExportTo []string `pulumi:"exportTo"`
	// The hosts associated with the ServiceEntry.
	Hosts []string `pulumi:"hosts"`
	// Specify whether the service should be considered external to the mesh or part of the mesh.
	//
	// Valid Options: MESH_EXTERNAL, MESH_INTERNAL
	Location *string `pulumi:"location"`
	// The ports associated with the external service.
	Ports []ServiceEntrySpecPortsPatch `pulumi:"ports"`
	// Service resolution mode for the hosts.
	//
	// Valid Options: NONE, STATIC, DNS, DNS_ROUND_ROBIN
	Resolution *string `pulumi:"resolution"`
	// If specified, the proxy will verify that the server certificate's subject alternate name matches one of the specified values.
	SubjectAltNames  []string                               `pulumi:"subjectAltNames"`
	WorkloadSelector *ServiceEntrySpecWorkloadSelectorPatch `pulumi:"workloadSelector"`
}

// ServiceEntrySpecPatchInput is an input type that accepts ServiceEntrySpecPatchArgs and ServiceEntrySpecPatchOutput values.
// You can construct a concrete instance of `ServiceEntrySpecPatchInput` via:
//
//	ServiceEntrySpecPatchArgs{...}
type ServiceEntrySpecPatchInput interface {
	pulumi.Input

	ToServiceEntrySpecPatchOutput() ServiceEntrySpecPatchOutput
	ToServiceEntrySpecPatchOutputWithContext(context.Context) ServiceEntrySpecPatchOutput
}

// Configuration affecting service registry. See more details at: https://istio.io/docs/reference/config/networking/service-entry.html
type ServiceEntrySpecPatchArgs struct {
	// The virtual IP addresses associated with the service.
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
	// One or more endpoints associated with the service.
	Endpoints ServiceEntrySpecEndpointsPatchArrayInput `pulumi:"endpoints"`
	// A list of namespaces to which this service is exported.
	ExportTo pulumi.StringArrayInput `pulumi:"exportTo"`
	// The hosts associated with the ServiceEntry.
	Hosts pulumi.StringArrayInput `pulumi:"hosts"`
	// Specify whether the service should be considered external to the mesh or part of the mesh.
	//
	// Valid Options: MESH_EXTERNAL, MESH_INTERNAL
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The ports associated with the external service.
	Ports ServiceEntrySpecPortsPatchArrayInput `pulumi:"ports"`
	// Service resolution mode for the hosts.
	//
	// Valid Options: NONE, STATIC, DNS, DNS_ROUND_ROBIN
	Resolution pulumi.StringPtrInput `pulumi:"resolution"`
	// If specified, the proxy will verify that the server certificate's subject alternate name matches one of the specified values.
	SubjectAltNames  pulumi.StringArrayInput                       `pulumi:"subjectAltNames"`
	WorkloadSelector ServiceEntrySpecWorkloadSelectorPatchPtrInput `pulumi:"workloadSelector"`
}

func (ServiceEntrySpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEntrySpecPatch)(nil)).Elem()
}

func (i ServiceEntrySpecPatchArgs) ToServiceEntrySpecPatchOutput() ServiceEntrySpecPatchOutput {
	return i.ToServiceEntrySpecPatchOutputWithContext(context.Background())
}

func (i ServiceEntrySpecPatchArgs) ToServiceEntrySpecPatchOutputWithContext(ctx context.Context) ServiceEntrySpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntrySpecPatchOutput)
}

func (i ServiceEntrySpecPatchArgs) ToServiceEntrySpecPatchPtrOutput() ServiceEntrySpecPatchPtrOutput {
	return i.ToServiceEntrySpecPatchPtrOutputWithContext(context.Background())
}

func (i ServiceEntrySpecPatchArgs) ToServiceEntrySpecPatchPtrOutputWithContext(ctx context.Context) ServiceEntrySpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntrySpecPatchOutput).ToServiceEntrySpecPatchPtrOutputWithContext(ctx)
}

// ServiceEntrySpecPatchPtrInput is an input type that accepts ServiceEntrySpecPatchArgs, ServiceEntrySpecPatchPtr and ServiceEntrySpecPatchPtrOutput values.
// You can construct a concrete instance of `ServiceEntrySpecPatchPtrInput` via:
//
//	        ServiceEntrySpecPatchArgs{...}
//
//	or:
//
//	        nil
type ServiceEntrySpecPatchPtrInput interface {
	pulumi.Input

	ToServiceEntrySpecPatchPtrOutput() ServiceEntrySpecPatchPtrOutput
	ToServiceEntrySpecPatchPtrOutputWithContext(context.Context) ServiceEntrySpecPatchPtrOutput
}

type serviceEntrySpecPatchPtrType ServiceEntrySpecPatchArgs

func ServiceEntrySpecPatchPtr(v *ServiceEntrySpecPatchArgs) ServiceEntrySpecPatchPtrInput {
	return (*serviceEntrySpecPatchPtrType)(v)
}

func (*serviceEntrySpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEntrySpecPatch)(nil)).Elem()
}

func (i *serviceEntrySpecPatchPtrType) ToServiceEntrySpecPatchPtrOutput() ServiceEntrySpecPatchPtrOutput {
	return i.ToServiceEntrySpecPatchPtrOutputWithContext(context.Background())
}

func (i *serviceEntrySpecPatchPtrType) ToServiceEntrySpecPatchPtrOutputWithContext(ctx context.Context) ServiceEntrySpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntrySpecPatchPtrOutput)
}

// Configuration affecting service registry. See more details at: https://istio.io/docs/reference/config/networking/service-entry.html
type ServiceEntrySpecPatchOutput struct{ *pulumi.OutputState }

func (ServiceEntrySpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEntrySpecPatch)(nil)).Elem()
}

func (o ServiceEntrySpecPatchOutput) ToServiceEntrySpecPatchOutput() ServiceEntrySpecPatchOutput {
	return o
}

func (o ServiceEntrySpecPatchOutput) ToServiceEntrySpecPatchOutputWithContext(ctx context.Context) ServiceEntrySpecPatchOutput {
	return o
}

func (o ServiceEntrySpecPatchOutput) ToServiceEntrySpecPatchPtrOutput() ServiceEntrySpecPatchPtrOutput {
	return o.ToServiceEntrySpecPatchPtrOutputWithContext(context.Background())
}

func (o ServiceEntrySpecPatchOutput) ToServiceEntrySpecPatchPtrOutputWithContext(ctx context.Context) ServiceEntrySpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceEntrySpecPatch) *ServiceEntrySpecPatch {
		return &v
	}).(ServiceEntrySpecPatchPtrOutput)
}

// The virtual IP addresses associated with the service.
func (o ServiceEntrySpecPatchOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEntrySpecPatch) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

// One or more endpoints associated with the service.
func (o ServiceEntrySpecPatchOutput) Endpoints() ServiceEntrySpecEndpointsPatchArrayOutput {
	return o.ApplyT(func(v ServiceEntrySpecPatch) []ServiceEntrySpecEndpointsPatch { return v.Endpoints }).(ServiceEntrySpecEndpointsPatchArrayOutput)
}

// A list of namespaces to which this service is exported.
func (o ServiceEntrySpecPatchOutput) ExportTo() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEntrySpecPatch) []string { return v.ExportTo }).(pulumi.StringArrayOutput)
}

// The hosts associated with the ServiceEntry.
func (o ServiceEntrySpecPatchOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEntrySpecPatch) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// Specify whether the service should be considered external to the mesh or part of the mesh.
//
// Valid Options: MESH_EXTERNAL, MESH_INTERNAL
func (o ServiceEntrySpecPatchOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpecPatch) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The ports associated with the external service.
func (o ServiceEntrySpecPatchOutput) Ports() ServiceEntrySpecPortsPatchArrayOutput {
	return o.ApplyT(func(v ServiceEntrySpecPatch) []ServiceEntrySpecPortsPatch { return v.Ports }).(ServiceEntrySpecPortsPatchArrayOutput)
}

// Service resolution mode for the hosts.
//
// Valid Options: NONE, STATIC, DNS, DNS_ROUND_ROBIN
func (o ServiceEntrySpecPatchOutput) Resolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpecPatch) *string { return v.Resolution }).(pulumi.StringPtrOutput)
}

// If specified, the proxy will verify that the server certificate's subject alternate name matches one of the specified values.
func (o ServiceEntrySpecPatchOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEntrySpecPatch) []string { return v.SubjectAltNames }).(pulumi.StringArrayOutput)
}

func (o ServiceEntrySpecPatchOutput) WorkloadSelector() ServiceEntrySpecWorkloadSelectorPatchPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpecPatch) *ServiceEntrySpecWorkloadSelectorPatch { return v.WorkloadSelector }).(ServiceEntrySpecWorkloadSelectorPatchPtrOutput)
}

type ServiceEntrySpecPatchPtrOutput struct{ *pulumi.OutputState }

func (ServiceEntrySpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEntrySpecPatch)(nil)).Elem()
}

func (o ServiceEntrySpecPatchPtrOutput) ToServiceEntrySpecPatchPtrOutput() ServiceEntrySpecPatchPtrOutput {
	return o
}

func (o ServiceEntrySpecPatchPtrOutput) ToServiceEntrySpecPatchPtrOutputWithContext(ctx context.Context) ServiceEntrySpecPatchPtrOutput {
	return o
}

func (o ServiceEntrySpecPatchPtrOutput) Elem() ServiceEntrySpecPatchOutput {
	return o.ApplyT(func(v *ServiceEntrySpecPatch) ServiceEntrySpecPatch {
		if v != nil {
			return *v
		}
		var ret ServiceEntrySpecPatch
		return ret
	}).(ServiceEntrySpecPatchOutput)
}

// The virtual IP addresses associated with the service.
func (o ServiceEntrySpecPatchPtrOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceEntrySpecPatch) []string {
		if v == nil {
			return nil
		}
		return v.Addresses
	}).(pulumi.StringArrayOutput)
}

// One or more endpoints associated with the service.
func (o ServiceEntrySpecPatchPtrOutput) Endpoints() ServiceEntrySpecEndpointsPatchArrayOutput {
	return o.ApplyT(func(v *ServiceEntrySpecPatch) []ServiceEntrySpecEndpointsPatch {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(ServiceEntrySpecEndpointsPatchArrayOutput)
}

// A list of namespaces to which this service is exported.
func (o ServiceEntrySpecPatchPtrOutput) ExportTo() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceEntrySpecPatch) []string {
		if v == nil {
			return nil
		}
		return v.ExportTo
	}).(pulumi.StringArrayOutput)
}

// The hosts associated with the ServiceEntry.
func (o ServiceEntrySpecPatchPtrOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceEntrySpecPatch) []string {
		if v == nil {
			return nil
		}
		return v.Hosts
	}).(pulumi.StringArrayOutput)
}

// Specify whether the service should be considered external to the mesh or part of the mesh.
//
// Valid Options: MESH_EXTERNAL, MESH_INTERNAL
func (o ServiceEntrySpecPatchPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceEntrySpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The ports associated with the external service.
func (o ServiceEntrySpecPatchPtrOutput) Ports() ServiceEntrySpecPortsPatchArrayOutput {
	return o.ApplyT(func(v *ServiceEntrySpecPatch) []ServiceEntrySpecPortsPatch {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(ServiceEntrySpecPortsPatchArrayOutput)
}

// Service resolution mode for the hosts.
//
// Valid Options: NONE, STATIC, DNS, DNS_ROUND_ROBIN
func (o ServiceEntrySpecPatchPtrOutput) Resolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceEntrySpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Resolution
	}).(pulumi.StringPtrOutput)
}

// If specified, the proxy will verify that the server certificate's subject alternate name matches one of the specified values.
func (o ServiceEntrySpecPatchPtrOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceEntrySpecPatch) []string {
		if v == nil {
			return nil
		}
		return v.SubjectAltNames
	}).(pulumi.StringArrayOutput)
}

func (o ServiceEntrySpecPatchPtrOutput) WorkloadSelector() ServiceEntrySpecWorkloadSelectorPatchPtrOutput {
	return o.ApplyT(func(v *ServiceEntrySpecPatch) *ServiceEntrySpecWorkloadSelectorPatch {
		if v == nil {
			return nil
		}
		return v.WorkloadSelector
	}).(ServiceEntrySpecWorkloadSelectorPatchPtrOutput)
}

type ServiceEntrySpecPorts struct {
	// Label assigned to the port.
	Name *string `pulumi:"name"`
	// A valid non-negative integer port number.
	Number *int `pulumi:"number"`
	// The protocol exposed on the port.
	Protocol *string `pulumi:"protocol"`
	// The port number on the endpoint where the traffic will be received.
	TargetPort *int `pulumi:"targetPort"`
}

// ServiceEntrySpecPortsInput is an input type that accepts ServiceEntrySpecPortsArgs and ServiceEntrySpecPortsOutput values.
// You can construct a concrete instance of `ServiceEntrySpecPortsInput` via:
//
//	ServiceEntrySpecPortsArgs{...}
type ServiceEntrySpecPortsInput interface {
	pulumi.Input

	ToServiceEntrySpecPortsOutput() ServiceEntrySpecPortsOutput
	ToServiceEntrySpecPortsOutputWithContext(context.Context) ServiceEntrySpecPortsOutput
}

type ServiceEntrySpecPortsArgs struct {
	// Label assigned to the port.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A valid non-negative integer port number.
	Number pulumi.IntPtrInput `pulumi:"number"`
	// The protocol exposed on the port.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The port number on the endpoint where the traffic will be received.
	TargetPort pulumi.IntPtrInput `pulumi:"targetPort"`
}

func (ServiceEntrySpecPortsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEntrySpecPorts)(nil)).Elem()
}

func (i ServiceEntrySpecPortsArgs) ToServiceEntrySpecPortsOutput() ServiceEntrySpecPortsOutput {
	return i.ToServiceEntrySpecPortsOutputWithContext(context.Background())
}

func (i ServiceEntrySpecPortsArgs) ToServiceEntrySpecPortsOutputWithContext(ctx context.Context) ServiceEntrySpecPortsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntrySpecPortsOutput)
}

// ServiceEntrySpecPortsArrayInput is an input type that accepts ServiceEntrySpecPortsArray and ServiceEntrySpecPortsArrayOutput values.
// You can construct a concrete instance of `ServiceEntrySpecPortsArrayInput` via:
//
//	ServiceEntrySpecPortsArray{ ServiceEntrySpecPortsArgs{...} }
type ServiceEntrySpecPortsArrayInput interface {
	pulumi.Input

	ToServiceEntrySpecPortsArrayOutput() ServiceEntrySpecPortsArrayOutput
	ToServiceEntrySpecPortsArrayOutputWithContext(context.Context) ServiceEntrySpecPortsArrayOutput
}

type ServiceEntrySpecPortsArray []ServiceEntrySpecPortsInput

func (ServiceEntrySpecPortsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEntrySpecPorts)(nil)).Elem()
}

func (i ServiceEntrySpecPortsArray) ToServiceEntrySpecPortsArrayOutput() ServiceEntrySpecPortsArrayOutput {
	return i.ToServiceEntrySpecPortsArrayOutputWithContext(context.Background())
}

func (i ServiceEntrySpecPortsArray) ToServiceEntrySpecPortsArrayOutputWithContext(ctx context.Context) ServiceEntrySpecPortsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntrySpecPortsArrayOutput)
}

type ServiceEntrySpecPortsOutput struct{ *pulumi.OutputState }

func (ServiceEntrySpecPortsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEntrySpecPorts)(nil)).Elem()
}

func (o ServiceEntrySpecPortsOutput) ToServiceEntrySpecPortsOutput() ServiceEntrySpecPortsOutput {
	return o
}

func (o ServiceEntrySpecPortsOutput) ToServiceEntrySpecPortsOutputWithContext(ctx context.Context) ServiceEntrySpecPortsOutput {
	return o
}

// Label assigned to the port.
func (o ServiceEntrySpecPortsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpecPorts) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A valid non-negative integer port number.
func (o ServiceEntrySpecPortsOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpecPorts) *int { return v.Number }).(pulumi.IntPtrOutput)
}

// The protocol exposed on the port.
func (o ServiceEntrySpecPortsOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpecPorts) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The port number on the endpoint where the traffic will be received.
func (o ServiceEntrySpecPortsOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpecPorts) *int { return v.TargetPort }).(pulumi.IntPtrOutput)
}

type ServiceEntrySpecPortsArrayOutput struct{ *pulumi.OutputState }

func (ServiceEntrySpecPortsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEntrySpecPorts)(nil)).Elem()
}

func (o ServiceEntrySpecPortsArrayOutput) ToServiceEntrySpecPortsArrayOutput() ServiceEntrySpecPortsArrayOutput {
	return o
}

func (o ServiceEntrySpecPortsArrayOutput) ToServiceEntrySpecPortsArrayOutputWithContext(ctx context.Context) ServiceEntrySpecPortsArrayOutput {
	return o
}

func (o ServiceEntrySpecPortsArrayOutput) Index(i pulumi.IntInput) ServiceEntrySpecPortsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEntrySpecPorts {
		return vs[0].([]ServiceEntrySpecPorts)[vs[1].(int)]
	}).(ServiceEntrySpecPortsOutput)
}

type ServiceEntrySpecPortsPatch struct {
	// Label assigned to the port.
	Name *string `pulumi:"name"`
	// A valid non-negative integer port number.
	Number *int `pulumi:"number"`
	// The protocol exposed on the port.
	Protocol *string `pulumi:"protocol"`
	// The port number on the endpoint where the traffic will be received.
	TargetPort *int `pulumi:"targetPort"`
}

// ServiceEntrySpecPortsPatchInput is an input type that accepts ServiceEntrySpecPortsPatchArgs and ServiceEntrySpecPortsPatchOutput values.
// You can construct a concrete instance of `ServiceEntrySpecPortsPatchInput` via:
//
//	ServiceEntrySpecPortsPatchArgs{...}
type ServiceEntrySpecPortsPatchInput interface {
	pulumi.Input

	ToServiceEntrySpecPortsPatchOutput() ServiceEntrySpecPortsPatchOutput
	ToServiceEntrySpecPortsPatchOutputWithContext(context.Context) ServiceEntrySpecPortsPatchOutput
}

type ServiceEntrySpecPortsPatchArgs struct {
	// Label assigned to the port.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A valid non-negative integer port number.
	Number pulumi.IntPtrInput `pulumi:"number"`
	// The protocol exposed on the port.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The port number on the endpoint where the traffic will be received.
	TargetPort pulumi.IntPtrInput `pulumi:"targetPort"`
}

func (ServiceEntrySpecPortsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEntrySpecPortsPatch)(nil)).Elem()
}

func (i ServiceEntrySpecPortsPatchArgs) ToServiceEntrySpecPortsPatchOutput() ServiceEntrySpecPortsPatchOutput {
	return i.ToServiceEntrySpecPortsPatchOutputWithContext(context.Background())
}

func (i ServiceEntrySpecPortsPatchArgs) ToServiceEntrySpecPortsPatchOutputWithContext(ctx context.Context) ServiceEntrySpecPortsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntrySpecPortsPatchOutput)
}

// ServiceEntrySpecPortsPatchArrayInput is an input type that accepts ServiceEntrySpecPortsPatchArray and ServiceEntrySpecPortsPatchArrayOutput values.
// You can construct a concrete instance of `ServiceEntrySpecPortsPatchArrayInput` via:
//
//	ServiceEntrySpecPortsPatchArray{ ServiceEntrySpecPortsPatchArgs{...} }
type ServiceEntrySpecPortsPatchArrayInput interface {
	pulumi.Input

	ToServiceEntrySpecPortsPatchArrayOutput() ServiceEntrySpecPortsPatchArrayOutput
	ToServiceEntrySpecPortsPatchArrayOutputWithContext(context.Context) ServiceEntrySpecPortsPatchArrayOutput
}

type ServiceEntrySpecPortsPatchArray []ServiceEntrySpecPortsPatchInput

func (ServiceEntrySpecPortsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEntrySpecPortsPatch)(nil)).Elem()
}

func (i ServiceEntrySpecPortsPatchArray) ToServiceEntrySpecPortsPatchArrayOutput() ServiceEntrySpecPortsPatchArrayOutput {
	return i.ToServiceEntrySpecPortsPatchArrayOutputWithContext(context.Background())
}

func (i ServiceEntrySpecPortsPatchArray) ToServiceEntrySpecPortsPatchArrayOutputWithContext(ctx context.Context) ServiceEntrySpecPortsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntrySpecPortsPatchArrayOutput)
}

type ServiceEntrySpecPortsPatchOutput struct{ *pulumi.OutputState }

func (ServiceEntrySpecPortsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEntrySpecPortsPatch)(nil)).Elem()
}

func (o ServiceEntrySpecPortsPatchOutput) ToServiceEntrySpecPortsPatchOutput() ServiceEntrySpecPortsPatchOutput {
	return o
}

func (o ServiceEntrySpecPortsPatchOutput) ToServiceEntrySpecPortsPatchOutputWithContext(ctx context.Context) ServiceEntrySpecPortsPatchOutput {
	return o
}

// Label assigned to the port.
func (o ServiceEntrySpecPortsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpecPortsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A valid non-negative integer port number.
func (o ServiceEntrySpecPortsPatchOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpecPortsPatch) *int { return v.Number }).(pulumi.IntPtrOutput)
}

// The protocol exposed on the port.
func (o ServiceEntrySpecPortsPatchOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpecPortsPatch) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The port number on the endpoint where the traffic will be received.
func (o ServiceEntrySpecPortsPatchOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceEntrySpecPortsPatch) *int { return v.TargetPort }).(pulumi.IntPtrOutput)
}

type ServiceEntrySpecPortsPatchArrayOutput struct{ *pulumi.OutputState }

func (ServiceEntrySpecPortsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEntrySpecPortsPatch)(nil)).Elem()
}

func (o ServiceEntrySpecPortsPatchArrayOutput) ToServiceEntrySpecPortsPatchArrayOutput() ServiceEntrySpecPortsPatchArrayOutput {
	return o
}

func (o ServiceEntrySpecPortsPatchArrayOutput) ToServiceEntrySpecPortsPatchArrayOutputWithContext(ctx context.Context) ServiceEntrySpecPortsPatchArrayOutput {
	return o
}

func (o ServiceEntrySpecPortsPatchArrayOutput) Index(i pulumi.IntInput) ServiceEntrySpecPortsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEntrySpecPortsPatch {
		return vs[0].([]ServiceEntrySpecPortsPatch)[vs[1].(int)]
	}).(ServiceEntrySpecPortsPatchOutput)
}

// Applicable only for MESH_INTERNAL services.
type ServiceEntrySpecWorkloadSelector struct {
	// One or more labels that indicate a specific set of pods/VMs on which the configuration should be applied.
	Labels map[string]string `pulumi:"labels"`
}

// ServiceEntrySpecWorkloadSelectorInput is an input type that accepts ServiceEntrySpecWorkloadSelectorArgs and ServiceEntrySpecWorkloadSelectorOutput values.
// You can construct a concrete instance of `ServiceEntrySpecWorkloadSelectorInput` via:
//
//	ServiceEntrySpecWorkloadSelectorArgs{...}
type ServiceEntrySpecWorkloadSelectorInput interface {
	pulumi.Input

	ToServiceEntrySpecWorkloadSelectorOutput() ServiceEntrySpecWorkloadSelectorOutput
	ToServiceEntrySpecWorkloadSelectorOutputWithContext(context.Context) ServiceEntrySpecWorkloadSelectorOutput
}

// Applicable only for MESH_INTERNAL services.
type ServiceEntrySpecWorkloadSelectorArgs struct {
	// One or more labels that indicate a specific set of pods/VMs on which the configuration should be applied.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (ServiceEntrySpecWorkloadSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEntrySpecWorkloadSelector)(nil)).Elem()
}

func (i ServiceEntrySpecWorkloadSelectorArgs) ToServiceEntrySpecWorkloadSelectorOutput() ServiceEntrySpecWorkloadSelectorOutput {
	return i.ToServiceEntrySpecWorkloadSelectorOutputWithContext(context.Background())
}

func (i ServiceEntrySpecWorkloadSelectorArgs) ToServiceEntrySpecWorkloadSelectorOutputWithContext(ctx context.Context) ServiceEntrySpecWorkloadSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntrySpecWorkloadSelectorOutput)
}

func (i ServiceEntrySpecWorkloadSelectorArgs) ToServiceEntrySpecWorkloadSelectorPtrOutput() ServiceEntrySpecWorkloadSelectorPtrOutput {
	return i.ToServiceEntrySpecWorkloadSelectorPtrOutputWithContext(context.Background())
}

func (i ServiceEntrySpecWorkloadSelectorArgs) ToServiceEntrySpecWorkloadSelectorPtrOutputWithContext(ctx context.Context) ServiceEntrySpecWorkloadSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntrySpecWorkloadSelectorOutput).ToServiceEntrySpecWorkloadSelectorPtrOutputWithContext(ctx)
}

// ServiceEntrySpecWorkloadSelectorPtrInput is an input type that accepts ServiceEntrySpecWorkloadSelectorArgs, ServiceEntrySpecWorkloadSelectorPtr and ServiceEntrySpecWorkloadSelectorPtrOutput values.
// You can construct a concrete instance of `ServiceEntrySpecWorkloadSelectorPtrInput` via:
//
//	        ServiceEntrySpecWorkloadSelectorArgs{...}
//
//	or:
//
//	        nil
type ServiceEntrySpecWorkloadSelectorPtrInput interface {
	pulumi.Input

	ToServiceEntrySpecWorkloadSelectorPtrOutput() ServiceEntrySpecWorkloadSelectorPtrOutput
	ToServiceEntrySpecWorkloadSelectorPtrOutputWithContext(context.Context) ServiceEntrySpecWorkloadSelectorPtrOutput
}

type serviceEntrySpecWorkloadSelectorPtrType ServiceEntrySpecWorkloadSelectorArgs

func ServiceEntrySpecWorkloadSelectorPtr(v *ServiceEntrySpecWorkloadSelectorArgs) ServiceEntrySpecWorkloadSelectorPtrInput {
	return (*serviceEntrySpecWorkloadSelectorPtrType)(v)
}

func (*serviceEntrySpecWorkloadSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEntrySpecWorkloadSelector)(nil)).Elem()
}

func (i *serviceEntrySpecWorkloadSelectorPtrType) ToServiceEntrySpecWorkloadSelectorPtrOutput() ServiceEntrySpecWorkloadSelectorPtrOutput {
	return i.ToServiceEntrySpecWorkloadSelectorPtrOutputWithContext(context.Background())
}

func (i *serviceEntrySpecWorkloadSelectorPtrType) ToServiceEntrySpecWorkloadSelectorPtrOutputWithContext(ctx context.Context) ServiceEntrySpecWorkloadSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntrySpecWorkloadSelectorPtrOutput)
}

// Applicable only for MESH_INTERNAL services.
type ServiceEntrySpecWorkloadSelectorOutput struct{ *pulumi.OutputState }

func (ServiceEntrySpecWorkloadSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEntrySpecWorkloadSelector)(nil)).Elem()
}

func (o ServiceEntrySpecWorkloadSelectorOutput) ToServiceEntrySpecWorkloadSelectorOutput() ServiceEntrySpecWorkloadSelectorOutput {
	return o
}

func (o ServiceEntrySpecWorkloadSelectorOutput) ToServiceEntrySpecWorkloadSelectorOutputWithContext(ctx context.Context) ServiceEntrySpecWorkloadSelectorOutput {
	return o
}

func (o ServiceEntrySpecWorkloadSelectorOutput) ToServiceEntrySpecWorkloadSelectorPtrOutput() ServiceEntrySpecWorkloadSelectorPtrOutput {
	return o.ToServiceEntrySpecWorkloadSelectorPtrOutputWithContext(context.Background())
}

func (o ServiceEntrySpecWorkloadSelectorOutput) ToServiceEntrySpecWorkloadSelectorPtrOutputWithContext(ctx context.Context) ServiceEntrySpecWorkloadSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceEntrySpecWorkloadSelector) *ServiceEntrySpecWorkloadSelector {
		return &v
	}).(ServiceEntrySpecWorkloadSelectorPtrOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which the configuration should be applied.
func (o ServiceEntrySpecWorkloadSelectorOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceEntrySpecWorkloadSelector) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type ServiceEntrySpecWorkloadSelectorPtrOutput struct{ *pulumi.OutputState }

func (ServiceEntrySpecWorkloadSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEntrySpecWorkloadSelector)(nil)).Elem()
}

func (o ServiceEntrySpecWorkloadSelectorPtrOutput) ToServiceEntrySpecWorkloadSelectorPtrOutput() ServiceEntrySpecWorkloadSelectorPtrOutput {
	return o
}

func (o ServiceEntrySpecWorkloadSelectorPtrOutput) ToServiceEntrySpecWorkloadSelectorPtrOutputWithContext(ctx context.Context) ServiceEntrySpecWorkloadSelectorPtrOutput {
	return o
}

func (o ServiceEntrySpecWorkloadSelectorPtrOutput) Elem() ServiceEntrySpecWorkloadSelectorOutput {
	return o.ApplyT(func(v *ServiceEntrySpecWorkloadSelector) ServiceEntrySpecWorkloadSelector {
		if v != nil {
			return *v
		}
		var ret ServiceEntrySpecWorkloadSelector
		return ret
	}).(ServiceEntrySpecWorkloadSelectorOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which the configuration should be applied.
func (o ServiceEntrySpecWorkloadSelectorPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceEntrySpecWorkloadSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Applicable only for MESH_INTERNAL services.
type ServiceEntrySpecWorkloadSelectorPatch struct {
	// One or more labels that indicate a specific set of pods/VMs on which the configuration should be applied.
	Labels map[string]string `pulumi:"labels"`
}

// ServiceEntrySpecWorkloadSelectorPatchInput is an input type that accepts ServiceEntrySpecWorkloadSelectorPatchArgs and ServiceEntrySpecWorkloadSelectorPatchOutput values.
// You can construct a concrete instance of `ServiceEntrySpecWorkloadSelectorPatchInput` via:
//
//	ServiceEntrySpecWorkloadSelectorPatchArgs{...}
type ServiceEntrySpecWorkloadSelectorPatchInput interface {
	pulumi.Input

	ToServiceEntrySpecWorkloadSelectorPatchOutput() ServiceEntrySpecWorkloadSelectorPatchOutput
	ToServiceEntrySpecWorkloadSelectorPatchOutputWithContext(context.Context) ServiceEntrySpecWorkloadSelectorPatchOutput
}

// Applicable only for MESH_INTERNAL services.
type ServiceEntrySpecWorkloadSelectorPatchArgs struct {
	// One or more labels that indicate a specific set of pods/VMs on which the configuration should be applied.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (ServiceEntrySpecWorkloadSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEntrySpecWorkloadSelectorPatch)(nil)).Elem()
}

func (i ServiceEntrySpecWorkloadSelectorPatchArgs) ToServiceEntrySpecWorkloadSelectorPatchOutput() ServiceEntrySpecWorkloadSelectorPatchOutput {
	return i.ToServiceEntrySpecWorkloadSelectorPatchOutputWithContext(context.Background())
}

func (i ServiceEntrySpecWorkloadSelectorPatchArgs) ToServiceEntrySpecWorkloadSelectorPatchOutputWithContext(ctx context.Context) ServiceEntrySpecWorkloadSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntrySpecWorkloadSelectorPatchOutput)
}

func (i ServiceEntrySpecWorkloadSelectorPatchArgs) ToServiceEntrySpecWorkloadSelectorPatchPtrOutput() ServiceEntrySpecWorkloadSelectorPatchPtrOutput {
	return i.ToServiceEntrySpecWorkloadSelectorPatchPtrOutputWithContext(context.Background())
}

func (i ServiceEntrySpecWorkloadSelectorPatchArgs) ToServiceEntrySpecWorkloadSelectorPatchPtrOutputWithContext(ctx context.Context) ServiceEntrySpecWorkloadSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntrySpecWorkloadSelectorPatchOutput).ToServiceEntrySpecWorkloadSelectorPatchPtrOutputWithContext(ctx)
}

// ServiceEntrySpecWorkloadSelectorPatchPtrInput is an input type that accepts ServiceEntrySpecWorkloadSelectorPatchArgs, ServiceEntrySpecWorkloadSelectorPatchPtr and ServiceEntrySpecWorkloadSelectorPatchPtrOutput values.
// You can construct a concrete instance of `ServiceEntrySpecWorkloadSelectorPatchPtrInput` via:
//
//	        ServiceEntrySpecWorkloadSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type ServiceEntrySpecWorkloadSelectorPatchPtrInput interface {
	pulumi.Input

	ToServiceEntrySpecWorkloadSelectorPatchPtrOutput() ServiceEntrySpecWorkloadSelectorPatchPtrOutput
	ToServiceEntrySpecWorkloadSelectorPatchPtrOutputWithContext(context.Context) ServiceEntrySpecWorkloadSelectorPatchPtrOutput
}

type serviceEntrySpecWorkloadSelectorPatchPtrType ServiceEntrySpecWorkloadSelectorPatchArgs

func ServiceEntrySpecWorkloadSelectorPatchPtr(v *ServiceEntrySpecWorkloadSelectorPatchArgs) ServiceEntrySpecWorkloadSelectorPatchPtrInput {
	return (*serviceEntrySpecWorkloadSelectorPatchPtrType)(v)
}

func (*serviceEntrySpecWorkloadSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEntrySpecWorkloadSelectorPatch)(nil)).Elem()
}

func (i *serviceEntrySpecWorkloadSelectorPatchPtrType) ToServiceEntrySpecWorkloadSelectorPatchPtrOutput() ServiceEntrySpecWorkloadSelectorPatchPtrOutput {
	return i.ToServiceEntrySpecWorkloadSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *serviceEntrySpecWorkloadSelectorPatchPtrType) ToServiceEntrySpecWorkloadSelectorPatchPtrOutputWithContext(ctx context.Context) ServiceEntrySpecWorkloadSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntrySpecWorkloadSelectorPatchPtrOutput)
}

// Applicable only for MESH_INTERNAL services.
type ServiceEntrySpecWorkloadSelectorPatchOutput struct{ *pulumi.OutputState }

func (ServiceEntrySpecWorkloadSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEntrySpecWorkloadSelectorPatch)(nil)).Elem()
}

func (o ServiceEntrySpecWorkloadSelectorPatchOutput) ToServiceEntrySpecWorkloadSelectorPatchOutput() ServiceEntrySpecWorkloadSelectorPatchOutput {
	return o
}

func (o ServiceEntrySpecWorkloadSelectorPatchOutput) ToServiceEntrySpecWorkloadSelectorPatchOutputWithContext(ctx context.Context) ServiceEntrySpecWorkloadSelectorPatchOutput {
	return o
}

func (o ServiceEntrySpecWorkloadSelectorPatchOutput) ToServiceEntrySpecWorkloadSelectorPatchPtrOutput() ServiceEntrySpecWorkloadSelectorPatchPtrOutput {
	return o.ToServiceEntrySpecWorkloadSelectorPatchPtrOutputWithContext(context.Background())
}

func (o ServiceEntrySpecWorkloadSelectorPatchOutput) ToServiceEntrySpecWorkloadSelectorPatchPtrOutputWithContext(ctx context.Context) ServiceEntrySpecWorkloadSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceEntrySpecWorkloadSelectorPatch) *ServiceEntrySpecWorkloadSelectorPatch {
		return &v
	}).(ServiceEntrySpecWorkloadSelectorPatchPtrOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which the configuration should be applied.
func (o ServiceEntrySpecWorkloadSelectorPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceEntrySpecWorkloadSelectorPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type ServiceEntrySpecWorkloadSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (ServiceEntrySpecWorkloadSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEntrySpecWorkloadSelectorPatch)(nil)).Elem()
}

func (o ServiceEntrySpecWorkloadSelectorPatchPtrOutput) ToServiceEntrySpecWorkloadSelectorPatchPtrOutput() ServiceEntrySpecWorkloadSelectorPatchPtrOutput {
	return o
}

func (o ServiceEntrySpecWorkloadSelectorPatchPtrOutput) ToServiceEntrySpecWorkloadSelectorPatchPtrOutputWithContext(ctx context.Context) ServiceEntrySpecWorkloadSelectorPatchPtrOutput {
	return o
}

func (o ServiceEntrySpecWorkloadSelectorPatchPtrOutput) Elem() ServiceEntrySpecWorkloadSelectorPatchOutput {
	return o.ApplyT(func(v *ServiceEntrySpecWorkloadSelectorPatch) ServiceEntrySpecWorkloadSelectorPatch {
		if v != nil {
			return *v
		}
		var ret ServiceEntrySpecWorkloadSelectorPatch
		return ret
	}).(ServiceEntrySpecWorkloadSelectorPatchOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which the configuration should be applied.
func (o ServiceEntrySpecWorkloadSelectorPatchPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceEntrySpecWorkloadSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

type SidecarType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta     `pulumi:"metadata"`
	Spec     *SidecarSpec           `pulumi:"spec"`
	Status   map[string]interface{} `pulumi:"status"`
}

// SidecarTypeInput is an input type that accepts SidecarTypeArgs and SidecarTypeOutput values.
// You can construct a concrete instance of `SidecarTypeInput` via:
//
//	SidecarTypeArgs{...}
type SidecarTypeInput interface {
	pulumi.Input

	ToSidecarTypeOutput() SidecarTypeOutput
	ToSidecarTypeOutputWithContext(context.Context) SidecarTypeOutput
}

type SidecarTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec     SidecarSpecPtrInput       `pulumi:"spec"`
	Status   pulumi.MapInput           `pulumi:"status"`
}

func (SidecarTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarType)(nil)).Elem()
}

func (i SidecarTypeArgs) ToSidecarTypeOutput() SidecarTypeOutput {
	return i.ToSidecarTypeOutputWithContext(context.Background())
}

func (i SidecarTypeArgs) ToSidecarTypeOutputWithContext(ctx context.Context) SidecarTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarTypeOutput)
}

// SidecarTypeArrayInput is an input type that accepts SidecarTypeArray and SidecarTypeArrayOutput values.
// You can construct a concrete instance of `SidecarTypeArrayInput` via:
//
//	SidecarTypeArray{ SidecarTypeArgs{...} }
type SidecarTypeArrayInput interface {
	pulumi.Input

	ToSidecarTypeArrayOutput() SidecarTypeArrayOutput
	ToSidecarTypeArrayOutputWithContext(context.Context) SidecarTypeArrayOutput
}

type SidecarTypeArray []SidecarTypeInput

func (SidecarTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SidecarType)(nil)).Elem()
}

func (i SidecarTypeArray) ToSidecarTypeArrayOutput() SidecarTypeArrayOutput {
	return i.ToSidecarTypeArrayOutputWithContext(context.Background())
}

func (i SidecarTypeArray) ToSidecarTypeArrayOutputWithContext(ctx context.Context) SidecarTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarTypeArrayOutput)
}

type SidecarTypeOutput struct{ *pulumi.OutputState }

func (SidecarTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarType)(nil)).Elem()
}

func (o SidecarTypeOutput) ToSidecarTypeOutput() SidecarTypeOutput {
	return o
}

func (o SidecarTypeOutput) ToSidecarTypeOutputWithContext(ctx context.Context) SidecarTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o SidecarTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o SidecarTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o SidecarTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v SidecarType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o SidecarTypeOutput) Spec() SidecarSpecPtrOutput {
	return o.ApplyT(func(v SidecarType) *SidecarSpec { return v.Spec }).(SidecarSpecPtrOutput)
}

func (o SidecarTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v SidecarType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

type SidecarTypeArrayOutput struct{ *pulumi.OutputState }

func (SidecarTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SidecarType)(nil)).Elem()
}

func (o SidecarTypeArrayOutput) ToSidecarTypeArrayOutput() SidecarTypeArrayOutput {
	return o
}

func (o SidecarTypeArrayOutput) ToSidecarTypeArrayOutputWithContext(ctx context.Context) SidecarTypeArrayOutput {
	return o
}

func (o SidecarTypeArrayOutput) Index(i pulumi.IntInput) SidecarTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SidecarType {
		return vs[0].([]SidecarType)[vs[1].(int)]
	}).(SidecarTypeOutput)
}

// SidecarList is a list of Sidecar
type SidecarListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of sidecars. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []SidecarType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// SidecarListTypeInput is an input type that accepts SidecarListTypeArgs and SidecarListTypeOutput values.
// You can construct a concrete instance of `SidecarListTypeInput` via:
//
//	SidecarListTypeArgs{...}
type SidecarListTypeInput interface {
	pulumi.Input

	ToSidecarListTypeOutput() SidecarListTypeOutput
	ToSidecarListTypeOutputWithContext(context.Context) SidecarListTypeOutput
}

// SidecarList is a list of Sidecar
type SidecarListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of sidecars. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items SidecarTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (SidecarListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarListType)(nil)).Elem()
}

func (i SidecarListTypeArgs) ToSidecarListTypeOutput() SidecarListTypeOutput {
	return i.ToSidecarListTypeOutputWithContext(context.Background())
}

func (i SidecarListTypeArgs) ToSidecarListTypeOutputWithContext(ctx context.Context) SidecarListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarListTypeOutput)
}

// SidecarList is a list of Sidecar
type SidecarListTypeOutput struct{ *pulumi.OutputState }

func (SidecarListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarListType)(nil)).Elem()
}

func (o SidecarListTypeOutput) ToSidecarListTypeOutput() SidecarListTypeOutput {
	return o
}

func (o SidecarListTypeOutput) ToSidecarListTypeOutputWithContext(ctx context.Context) SidecarListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o SidecarListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of sidecars. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o SidecarListTypeOutput) Items() SidecarTypeArrayOutput {
	return o.ApplyT(func(v SidecarListType) []SidecarType { return v.Items }).(SidecarTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o SidecarListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o SidecarListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v SidecarListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

type SidecarPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *SidecarSpecPatch       `pulumi:"spec"`
	Status   map[string]interface{}  `pulumi:"status"`
}

// SidecarPatchTypeInput is an input type that accepts SidecarPatchTypeArgs and SidecarPatchTypeOutput values.
// You can construct a concrete instance of `SidecarPatchTypeInput` via:
//
//	SidecarPatchTypeArgs{...}
type SidecarPatchTypeInput interface {
	pulumi.Input

	ToSidecarPatchTypeOutput() SidecarPatchTypeOutput
	ToSidecarPatchTypeOutputWithContext(context.Context) SidecarPatchTypeOutput
}

type SidecarPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
	Spec     SidecarSpecPatchPtrInput       `pulumi:"spec"`
	Status   pulumi.MapInput                `pulumi:"status"`
}

func (SidecarPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarPatchType)(nil)).Elem()
}

func (i SidecarPatchTypeArgs) ToSidecarPatchTypeOutput() SidecarPatchTypeOutput {
	return i.ToSidecarPatchTypeOutputWithContext(context.Background())
}

func (i SidecarPatchTypeArgs) ToSidecarPatchTypeOutputWithContext(ctx context.Context) SidecarPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarPatchTypeOutput)
}

type SidecarPatchTypeOutput struct{ *pulumi.OutputState }

func (SidecarPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarPatchType)(nil)).Elem()
}

func (o SidecarPatchTypeOutput) ToSidecarPatchTypeOutput() SidecarPatchTypeOutput {
	return o
}

func (o SidecarPatchTypeOutput) ToSidecarPatchTypeOutputWithContext(ctx context.Context) SidecarPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o SidecarPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o SidecarPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o SidecarPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v SidecarPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o SidecarPatchTypeOutput) Spec() SidecarSpecPatchPtrOutput {
	return o.ApplyT(func(v SidecarPatchType) *SidecarSpecPatch { return v.Spec }).(SidecarSpecPatchPtrOutput)
}

func (o SidecarPatchTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v SidecarPatchType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

// Configuration affecting network reachability of a sidecar. See more details at: https://istio.io/docs/reference/config/networking/sidecar.html
type SidecarSpec struct {
	// Egress specifies the configuration of the sidecar for processing outbound traffic from the attached workload instance to other services in the mesh.
	Egress                []SidecarSpecEgress               `pulumi:"egress"`
	InboundConnectionPool *SidecarSpecInboundConnectionPool `pulumi:"inboundConnectionPool"`
	// Ingress specifies the configuration of the sidecar for processing inbound traffic to the attached workload instance.
	Ingress               []SidecarSpecIngress              `pulumi:"ingress"`
	OutboundTrafficPolicy *SidecarSpecOutboundTrafficPolicy `pulumi:"outboundTrafficPolicy"`
	WorkloadSelector      *SidecarSpecWorkloadSelector      `pulumi:"workloadSelector"`
}

// SidecarSpecInput is an input type that accepts SidecarSpecArgs and SidecarSpecOutput values.
// You can construct a concrete instance of `SidecarSpecInput` via:
//
//	SidecarSpecArgs{...}
type SidecarSpecInput interface {
	pulumi.Input

	ToSidecarSpecOutput() SidecarSpecOutput
	ToSidecarSpecOutputWithContext(context.Context) SidecarSpecOutput
}

// Configuration affecting network reachability of a sidecar. See more details at: https://istio.io/docs/reference/config/networking/sidecar.html
type SidecarSpecArgs struct {
	// Egress specifies the configuration of the sidecar for processing outbound traffic from the attached workload instance to other services in the mesh.
	Egress                SidecarSpecEgressArrayInput              `pulumi:"egress"`
	InboundConnectionPool SidecarSpecInboundConnectionPoolPtrInput `pulumi:"inboundConnectionPool"`
	// Ingress specifies the configuration of the sidecar for processing inbound traffic to the attached workload instance.
	Ingress               SidecarSpecIngressArrayInput             `pulumi:"ingress"`
	OutboundTrafficPolicy SidecarSpecOutboundTrafficPolicyPtrInput `pulumi:"outboundTrafficPolicy"`
	WorkloadSelector      SidecarSpecWorkloadSelectorPtrInput      `pulumi:"workloadSelector"`
}

func (SidecarSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpec)(nil)).Elem()
}

func (i SidecarSpecArgs) ToSidecarSpecOutput() SidecarSpecOutput {
	return i.ToSidecarSpecOutputWithContext(context.Background())
}

func (i SidecarSpecArgs) ToSidecarSpecOutputWithContext(ctx context.Context) SidecarSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecOutput)
}

func (i SidecarSpecArgs) ToSidecarSpecPtrOutput() SidecarSpecPtrOutput {
	return i.ToSidecarSpecPtrOutputWithContext(context.Background())
}

func (i SidecarSpecArgs) ToSidecarSpecPtrOutputWithContext(ctx context.Context) SidecarSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecOutput).ToSidecarSpecPtrOutputWithContext(ctx)
}

// SidecarSpecPtrInput is an input type that accepts SidecarSpecArgs, SidecarSpecPtr and SidecarSpecPtrOutput values.
// You can construct a concrete instance of `SidecarSpecPtrInput` via:
//
//	        SidecarSpecArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecPtrInput interface {
	pulumi.Input

	ToSidecarSpecPtrOutput() SidecarSpecPtrOutput
	ToSidecarSpecPtrOutputWithContext(context.Context) SidecarSpecPtrOutput
}

type sidecarSpecPtrType SidecarSpecArgs

func SidecarSpecPtr(v *SidecarSpecArgs) SidecarSpecPtrInput {
	return (*sidecarSpecPtrType)(v)
}

func (*sidecarSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpec)(nil)).Elem()
}

func (i *sidecarSpecPtrType) ToSidecarSpecPtrOutput() SidecarSpecPtrOutput {
	return i.ToSidecarSpecPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecPtrType) ToSidecarSpecPtrOutputWithContext(ctx context.Context) SidecarSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecPtrOutput)
}

// Configuration affecting network reachability of a sidecar. See more details at: https://istio.io/docs/reference/config/networking/sidecar.html
type SidecarSpecOutput struct{ *pulumi.OutputState }

func (SidecarSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpec)(nil)).Elem()
}

func (o SidecarSpecOutput) ToSidecarSpecOutput() SidecarSpecOutput {
	return o
}

func (o SidecarSpecOutput) ToSidecarSpecOutputWithContext(ctx context.Context) SidecarSpecOutput {
	return o
}

func (o SidecarSpecOutput) ToSidecarSpecPtrOutput() SidecarSpecPtrOutput {
	return o.ToSidecarSpecPtrOutputWithContext(context.Background())
}

func (o SidecarSpecOutput) ToSidecarSpecPtrOutputWithContext(ctx context.Context) SidecarSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpec) *SidecarSpec {
		return &v
	}).(SidecarSpecPtrOutput)
}

// Egress specifies the configuration of the sidecar for processing outbound traffic from the attached workload instance to other services in the mesh.
func (o SidecarSpecOutput) Egress() SidecarSpecEgressArrayOutput {
	return o.ApplyT(func(v SidecarSpec) []SidecarSpecEgress { return v.Egress }).(SidecarSpecEgressArrayOutput)
}

func (o SidecarSpecOutput) InboundConnectionPool() SidecarSpecInboundConnectionPoolPtrOutput {
	return o.ApplyT(func(v SidecarSpec) *SidecarSpecInboundConnectionPool { return v.InboundConnectionPool }).(SidecarSpecInboundConnectionPoolPtrOutput)
}

// Ingress specifies the configuration of the sidecar for processing inbound traffic to the attached workload instance.
func (o SidecarSpecOutput) Ingress() SidecarSpecIngressArrayOutput {
	return o.ApplyT(func(v SidecarSpec) []SidecarSpecIngress { return v.Ingress }).(SidecarSpecIngressArrayOutput)
}

func (o SidecarSpecOutput) OutboundTrafficPolicy() SidecarSpecOutboundTrafficPolicyPtrOutput {
	return o.ApplyT(func(v SidecarSpec) *SidecarSpecOutboundTrafficPolicy { return v.OutboundTrafficPolicy }).(SidecarSpecOutboundTrafficPolicyPtrOutput)
}

func (o SidecarSpecOutput) WorkloadSelector() SidecarSpecWorkloadSelectorPtrOutput {
	return o.ApplyT(func(v SidecarSpec) *SidecarSpecWorkloadSelector { return v.WorkloadSelector }).(SidecarSpecWorkloadSelectorPtrOutput)
}

type SidecarSpecPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpec)(nil)).Elem()
}

func (o SidecarSpecPtrOutput) ToSidecarSpecPtrOutput() SidecarSpecPtrOutput {
	return o
}

func (o SidecarSpecPtrOutput) ToSidecarSpecPtrOutputWithContext(ctx context.Context) SidecarSpecPtrOutput {
	return o
}

func (o SidecarSpecPtrOutput) Elem() SidecarSpecOutput {
	return o.ApplyT(func(v *SidecarSpec) SidecarSpec {
		if v != nil {
			return *v
		}
		var ret SidecarSpec
		return ret
	}).(SidecarSpecOutput)
}

// Egress specifies the configuration of the sidecar for processing outbound traffic from the attached workload instance to other services in the mesh.
func (o SidecarSpecPtrOutput) Egress() SidecarSpecEgressArrayOutput {
	return o.ApplyT(func(v *SidecarSpec) []SidecarSpecEgress {
		if v == nil {
			return nil
		}
		return v.Egress
	}).(SidecarSpecEgressArrayOutput)
}

func (o SidecarSpecPtrOutput) InboundConnectionPool() SidecarSpecInboundConnectionPoolPtrOutput {
	return o.ApplyT(func(v *SidecarSpec) *SidecarSpecInboundConnectionPool {
		if v == nil {
			return nil
		}
		return v.InboundConnectionPool
	}).(SidecarSpecInboundConnectionPoolPtrOutput)
}

// Ingress specifies the configuration of the sidecar for processing inbound traffic to the attached workload instance.
func (o SidecarSpecPtrOutput) Ingress() SidecarSpecIngressArrayOutput {
	return o.ApplyT(func(v *SidecarSpec) []SidecarSpecIngress {
		if v == nil {
			return nil
		}
		return v.Ingress
	}).(SidecarSpecIngressArrayOutput)
}

func (o SidecarSpecPtrOutput) OutboundTrafficPolicy() SidecarSpecOutboundTrafficPolicyPtrOutput {
	return o.ApplyT(func(v *SidecarSpec) *SidecarSpecOutboundTrafficPolicy {
		if v == nil {
			return nil
		}
		return v.OutboundTrafficPolicy
	}).(SidecarSpecOutboundTrafficPolicyPtrOutput)
}

func (o SidecarSpecPtrOutput) WorkloadSelector() SidecarSpecWorkloadSelectorPtrOutput {
	return o.ApplyT(func(v *SidecarSpec) *SidecarSpecWorkloadSelector {
		if v == nil {
			return nil
		}
		return v.WorkloadSelector
	}).(SidecarSpecWorkloadSelectorPtrOutput)
}

type SidecarSpecEgress struct {
	// The IP(IPv4 or IPv6) or the Unix domain socket to which the listener should be bound to.
	Bind *string `pulumi:"bind"`
	// When the bind address is an IP, the captureMode option dictates how traffic to the listener is expected to be captured (or not).
	//
	// Valid Options: DEFAULT, IPTABLES, NONE
	CaptureMode *string `pulumi:"captureMode"`
	// One or more service hosts exposed by the listener in `namespace/dnsName` format.
	Hosts []string               `pulumi:"hosts"`
	Port  *SidecarSpecEgressPort `pulumi:"port"`
}

// SidecarSpecEgressInput is an input type that accepts SidecarSpecEgressArgs and SidecarSpecEgressOutput values.
// You can construct a concrete instance of `SidecarSpecEgressInput` via:
//
//	SidecarSpecEgressArgs{...}
type SidecarSpecEgressInput interface {
	pulumi.Input

	ToSidecarSpecEgressOutput() SidecarSpecEgressOutput
	ToSidecarSpecEgressOutputWithContext(context.Context) SidecarSpecEgressOutput
}

type SidecarSpecEgressArgs struct {
	// The IP(IPv4 or IPv6) or the Unix domain socket to which the listener should be bound to.
	Bind pulumi.StringPtrInput `pulumi:"bind"`
	// When the bind address is an IP, the captureMode option dictates how traffic to the listener is expected to be captured (or not).
	//
	// Valid Options: DEFAULT, IPTABLES, NONE
	CaptureMode pulumi.StringPtrInput `pulumi:"captureMode"`
	// One or more service hosts exposed by the listener in `namespace/dnsName` format.
	Hosts pulumi.StringArrayInput       `pulumi:"hosts"`
	Port  SidecarSpecEgressPortPtrInput `pulumi:"port"`
}

func (SidecarSpecEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecEgress)(nil)).Elem()
}

func (i SidecarSpecEgressArgs) ToSidecarSpecEgressOutput() SidecarSpecEgressOutput {
	return i.ToSidecarSpecEgressOutputWithContext(context.Background())
}

func (i SidecarSpecEgressArgs) ToSidecarSpecEgressOutputWithContext(ctx context.Context) SidecarSpecEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecEgressOutput)
}

// SidecarSpecEgressArrayInput is an input type that accepts SidecarSpecEgressArray and SidecarSpecEgressArrayOutput values.
// You can construct a concrete instance of `SidecarSpecEgressArrayInput` via:
//
//	SidecarSpecEgressArray{ SidecarSpecEgressArgs{...} }
type SidecarSpecEgressArrayInput interface {
	pulumi.Input

	ToSidecarSpecEgressArrayOutput() SidecarSpecEgressArrayOutput
	ToSidecarSpecEgressArrayOutputWithContext(context.Context) SidecarSpecEgressArrayOutput
}

type SidecarSpecEgressArray []SidecarSpecEgressInput

func (SidecarSpecEgressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SidecarSpecEgress)(nil)).Elem()
}

func (i SidecarSpecEgressArray) ToSidecarSpecEgressArrayOutput() SidecarSpecEgressArrayOutput {
	return i.ToSidecarSpecEgressArrayOutputWithContext(context.Background())
}

func (i SidecarSpecEgressArray) ToSidecarSpecEgressArrayOutputWithContext(ctx context.Context) SidecarSpecEgressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecEgressArrayOutput)
}

type SidecarSpecEgressOutput struct{ *pulumi.OutputState }

func (SidecarSpecEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecEgress)(nil)).Elem()
}

func (o SidecarSpecEgressOutput) ToSidecarSpecEgressOutput() SidecarSpecEgressOutput {
	return o
}

func (o SidecarSpecEgressOutput) ToSidecarSpecEgressOutputWithContext(ctx context.Context) SidecarSpecEgressOutput {
	return o
}

// The IP(IPv4 or IPv6) or the Unix domain socket to which the listener should be bound to.
func (o SidecarSpecEgressOutput) Bind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecEgress) *string { return v.Bind }).(pulumi.StringPtrOutput)
}

// When the bind address is an IP, the captureMode option dictates how traffic to the listener is expected to be captured (or not).
//
// Valid Options: DEFAULT, IPTABLES, NONE
func (o SidecarSpecEgressOutput) CaptureMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecEgress) *string { return v.CaptureMode }).(pulumi.StringPtrOutput)
}

// One or more service hosts exposed by the listener in `namespace/dnsName` format.
func (o SidecarSpecEgressOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SidecarSpecEgress) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

func (o SidecarSpecEgressOutput) Port() SidecarSpecEgressPortPtrOutput {
	return o.ApplyT(func(v SidecarSpecEgress) *SidecarSpecEgressPort { return v.Port }).(SidecarSpecEgressPortPtrOutput)
}

type SidecarSpecEgressArrayOutput struct{ *pulumi.OutputState }

func (SidecarSpecEgressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SidecarSpecEgress)(nil)).Elem()
}

func (o SidecarSpecEgressArrayOutput) ToSidecarSpecEgressArrayOutput() SidecarSpecEgressArrayOutput {
	return o
}

func (o SidecarSpecEgressArrayOutput) ToSidecarSpecEgressArrayOutputWithContext(ctx context.Context) SidecarSpecEgressArrayOutput {
	return o
}

func (o SidecarSpecEgressArrayOutput) Index(i pulumi.IntInput) SidecarSpecEgressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SidecarSpecEgress {
		return vs[0].([]SidecarSpecEgress)[vs[1].(int)]
	}).(SidecarSpecEgressOutput)
}

type SidecarSpecEgressPatch struct {
	// The IP(IPv4 or IPv6) or the Unix domain socket to which the listener should be bound to.
	Bind *string `pulumi:"bind"`
	// When the bind address is an IP, the captureMode option dictates how traffic to the listener is expected to be captured (or not).
	//
	// Valid Options: DEFAULT, IPTABLES, NONE
	CaptureMode *string `pulumi:"captureMode"`
	// One or more service hosts exposed by the listener in `namespace/dnsName` format.
	Hosts []string                    `pulumi:"hosts"`
	Port  *SidecarSpecEgressPortPatch `pulumi:"port"`
}

// SidecarSpecEgressPatchInput is an input type that accepts SidecarSpecEgressPatchArgs and SidecarSpecEgressPatchOutput values.
// You can construct a concrete instance of `SidecarSpecEgressPatchInput` via:
//
//	SidecarSpecEgressPatchArgs{...}
type SidecarSpecEgressPatchInput interface {
	pulumi.Input

	ToSidecarSpecEgressPatchOutput() SidecarSpecEgressPatchOutput
	ToSidecarSpecEgressPatchOutputWithContext(context.Context) SidecarSpecEgressPatchOutput
}

type SidecarSpecEgressPatchArgs struct {
	// The IP(IPv4 or IPv6) or the Unix domain socket to which the listener should be bound to.
	Bind pulumi.StringPtrInput `pulumi:"bind"`
	// When the bind address is an IP, the captureMode option dictates how traffic to the listener is expected to be captured (or not).
	//
	// Valid Options: DEFAULT, IPTABLES, NONE
	CaptureMode pulumi.StringPtrInput `pulumi:"captureMode"`
	// One or more service hosts exposed by the listener in `namespace/dnsName` format.
	Hosts pulumi.StringArrayInput            `pulumi:"hosts"`
	Port  SidecarSpecEgressPortPatchPtrInput `pulumi:"port"`
}

func (SidecarSpecEgressPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecEgressPatch)(nil)).Elem()
}

func (i SidecarSpecEgressPatchArgs) ToSidecarSpecEgressPatchOutput() SidecarSpecEgressPatchOutput {
	return i.ToSidecarSpecEgressPatchOutputWithContext(context.Background())
}

func (i SidecarSpecEgressPatchArgs) ToSidecarSpecEgressPatchOutputWithContext(ctx context.Context) SidecarSpecEgressPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecEgressPatchOutput)
}

// SidecarSpecEgressPatchArrayInput is an input type that accepts SidecarSpecEgressPatchArray and SidecarSpecEgressPatchArrayOutput values.
// You can construct a concrete instance of `SidecarSpecEgressPatchArrayInput` via:
//
//	SidecarSpecEgressPatchArray{ SidecarSpecEgressPatchArgs{...} }
type SidecarSpecEgressPatchArrayInput interface {
	pulumi.Input

	ToSidecarSpecEgressPatchArrayOutput() SidecarSpecEgressPatchArrayOutput
	ToSidecarSpecEgressPatchArrayOutputWithContext(context.Context) SidecarSpecEgressPatchArrayOutput
}

type SidecarSpecEgressPatchArray []SidecarSpecEgressPatchInput

func (SidecarSpecEgressPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SidecarSpecEgressPatch)(nil)).Elem()
}

func (i SidecarSpecEgressPatchArray) ToSidecarSpecEgressPatchArrayOutput() SidecarSpecEgressPatchArrayOutput {
	return i.ToSidecarSpecEgressPatchArrayOutputWithContext(context.Background())
}

func (i SidecarSpecEgressPatchArray) ToSidecarSpecEgressPatchArrayOutputWithContext(ctx context.Context) SidecarSpecEgressPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecEgressPatchArrayOutput)
}

type SidecarSpecEgressPatchOutput struct{ *pulumi.OutputState }

func (SidecarSpecEgressPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecEgressPatch)(nil)).Elem()
}

func (o SidecarSpecEgressPatchOutput) ToSidecarSpecEgressPatchOutput() SidecarSpecEgressPatchOutput {
	return o
}

func (o SidecarSpecEgressPatchOutput) ToSidecarSpecEgressPatchOutputWithContext(ctx context.Context) SidecarSpecEgressPatchOutput {
	return o
}

// The IP(IPv4 or IPv6) or the Unix domain socket to which the listener should be bound to.
func (o SidecarSpecEgressPatchOutput) Bind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecEgressPatch) *string { return v.Bind }).(pulumi.StringPtrOutput)
}

// When the bind address is an IP, the captureMode option dictates how traffic to the listener is expected to be captured (or not).
//
// Valid Options: DEFAULT, IPTABLES, NONE
func (o SidecarSpecEgressPatchOutput) CaptureMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecEgressPatch) *string { return v.CaptureMode }).(pulumi.StringPtrOutput)
}

// One or more service hosts exposed by the listener in `namespace/dnsName` format.
func (o SidecarSpecEgressPatchOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SidecarSpecEgressPatch) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

func (o SidecarSpecEgressPatchOutput) Port() SidecarSpecEgressPortPatchPtrOutput {
	return o.ApplyT(func(v SidecarSpecEgressPatch) *SidecarSpecEgressPortPatch { return v.Port }).(SidecarSpecEgressPortPatchPtrOutput)
}

type SidecarSpecEgressPatchArrayOutput struct{ *pulumi.OutputState }

func (SidecarSpecEgressPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SidecarSpecEgressPatch)(nil)).Elem()
}

func (o SidecarSpecEgressPatchArrayOutput) ToSidecarSpecEgressPatchArrayOutput() SidecarSpecEgressPatchArrayOutput {
	return o
}

func (o SidecarSpecEgressPatchArrayOutput) ToSidecarSpecEgressPatchArrayOutputWithContext(ctx context.Context) SidecarSpecEgressPatchArrayOutput {
	return o
}

func (o SidecarSpecEgressPatchArrayOutput) Index(i pulumi.IntInput) SidecarSpecEgressPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SidecarSpecEgressPatch {
		return vs[0].([]SidecarSpecEgressPatch)[vs[1].(int)]
	}).(SidecarSpecEgressPatchOutput)
}

// The port associated with the listener.
type SidecarSpecEgressPort struct {
	// Label assigned to the port.
	Name *string `pulumi:"name"`
	// A valid non-negative integer port number.
	Number *int `pulumi:"number"`
	// The protocol exposed on the port.
	Protocol   *string `pulumi:"protocol"`
	TargetPort *int    `pulumi:"targetPort"`
}

// SidecarSpecEgressPortInput is an input type that accepts SidecarSpecEgressPortArgs and SidecarSpecEgressPortOutput values.
// You can construct a concrete instance of `SidecarSpecEgressPortInput` via:
//
//	SidecarSpecEgressPortArgs{...}
type SidecarSpecEgressPortInput interface {
	pulumi.Input

	ToSidecarSpecEgressPortOutput() SidecarSpecEgressPortOutput
	ToSidecarSpecEgressPortOutputWithContext(context.Context) SidecarSpecEgressPortOutput
}

// The port associated with the listener.
type SidecarSpecEgressPortArgs struct {
	// Label assigned to the port.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A valid non-negative integer port number.
	Number pulumi.IntPtrInput `pulumi:"number"`
	// The protocol exposed on the port.
	Protocol   pulumi.StringPtrInput `pulumi:"protocol"`
	TargetPort pulumi.IntPtrInput    `pulumi:"targetPort"`
}

func (SidecarSpecEgressPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecEgressPort)(nil)).Elem()
}

func (i SidecarSpecEgressPortArgs) ToSidecarSpecEgressPortOutput() SidecarSpecEgressPortOutput {
	return i.ToSidecarSpecEgressPortOutputWithContext(context.Background())
}

func (i SidecarSpecEgressPortArgs) ToSidecarSpecEgressPortOutputWithContext(ctx context.Context) SidecarSpecEgressPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecEgressPortOutput)
}

func (i SidecarSpecEgressPortArgs) ToSidecarSpecEgressPortPtrOutput() SidecarSpecEgressPortPtrOutput {
	return i.ToSidecarSpecEgressPortPtrOutputWithContext(context.Background())
}

func (i SidecarSpecEgressPortArgs) ToSidecarSpecEgressPortPtrOutputWithContext(ctx context.Context) SidecarSpecEgressPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecEgressPortOutput).ToSidecarSpecEgressPortPtrOutputWithContext(ctx)
}

// SidecarSpecEgressPortPtrInput is an input type that accepts SidecarSpecEgressPortArgs, SidecarSpecEgressPortPtr and SidecarSpecEgressPortPtrOutput values.
// You can construct a concrete instance of `SidecarSpecEgressPortPtrInput` via:
//
//	        SidecarSpecEgressPortArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecEgressPortPtrInput interface {
	pulumi.Input

	ToSidecarSpecEgressPortPtrOutput() SidecarSpecEgressPortPtrOutput
	ToSidecarSpecEgressPortPtrOutputWithContext(context.Context) SidecarSpecEgressPortPtrOutput
}

type sidecarSpecEgressPortPtrType SidecarSpecEgressPortArgs

func SidecarSpecEgressPortPtr(v *SidecarSpecEgressPortArgs) SidecarSpecEgressPortPtrInput {
	return (*sidecarSpecEgressPortPtrType)(v)
}

func (*sidecarSpecEgressPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecEgressPort)(nil)).Elem()
}

func (i *sidecarSpecEgressPortPtrType) ToSidecarSpecEgressPortPtrOutput() SidecarSpecEgressPortPtrOutput {
	return i.ToSidecarSpecEgressPortPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecEgressPortPtrType) ToSidecarSpecEgressPortPtrOutputWithContext(ctx context.Context) SidecarSpecEgressPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecEgressPortPtrOutput)
}

// The port associated with the listener.
type SidecarSpecEgressPortOutput struct{ *pulumi.OutputState }

func (SidecarSpecEgressPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecEgressPort)(nil)).Elem()
}

func (o SidecarSpecEgressPortOutput) ToSidecarSpecEgressPortOutput() SidecarSpecEgressPortOutput {
	return o
}

func (o SidecarSpecEgressPortOutput) ToSidecarSpecEgressPortOutputWithContext(ctx context.Context) SidecarSpecEgressPortOutput {
	return o
}

func (o SidecarSpecEgressPortOutput) ToSidecarSpecEgressPortPtrOutput() SidecarSpecEgressPortPtrOutput {
	return o.ToSidecarSpecEgressPortPtrOutputWithContext(context.Background())
}

func (o SidecarSpecEgressPortOutput) ToSidecarSpecEgressPortPtrOutputWithContext(ctx context.Context) SidecarSpecEgressPortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecEgressPort) *SidecarSpecEgressPort {
		return &v
	}).(SidecarSpecEgressPortPtrOutput)
}

// Label assigned to the port.
func (o SidecarSpecEgressPortOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecEgressPort) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A valid non-negative integer port number.
func (o SidecarSpecEgressPortOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecEgressPort) *int { return v.Number }).(pulumi.IntPtrOutput)
}

// The protocol exposed on the port.
func (o SidecarSpecEgressPortOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecEgressPort) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o SidecarSpecEgressPortOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecEgressPort) *int { return v.TargetPort }).(pulumi.IntPtrOutput)
}

type SidecarSpecEgressPortPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecEgressPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecEgressPort)(nil)).Elem()
}

func (o SidecarSpecEgressPortPtrOutput) ToSidecarSpecEgressPortPtrOutput() SidecarSpecEgressPortPtrOutput {
	return o
}

func (o SidecarSpecEgressPortPtrOutput) ToSidecarSpecEgressPortPtrOutputWithContext(ctx context.Context) SidecarSpecEgressPortPtrOutput {
	return o
}

func (o SidecarSpecEgressPortPtrOutput) Elem() SidecarSpecEgressPortOutput {
	return o.ApplyT(func(v *SidecarSpecEgressPort) SidecarSpecEgressPort {
		if v != nil {
			return *v
		}
		var ret SidecarSpecEgressPort
		return ret
	}).(SidecarSpecEgressPortOutput)
}

// Label assigned to the port.
func (o SidecarSpecEgressPortPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecEgressPort) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A valid non-negative integer port number.
func (o SidecarSpecEgressPortPtrOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecEgressPort) *int {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.IntPtrOutput)
}

// The protocol exposed on the port.
func (o SidecarSpecEgressPortPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecEgressPort) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

func (o SidecarSpecEgressPortPtrOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecEgressPort) *int {
		if v == nil {
			return nil
		}
		return v.TargetPort
	}).(pulumi.IntPtrOutput)
}

// The port associated with the listener.
type SidecarSpecEgressPortPatch struct {
	// Label assigned to the port.
	Name *string `pulumi:"name"`
	// A valid non-negative integer port number.
	Number *int `pulumi:"number"`
	// The protocol exposed on the port.
	Protocol   *string `pulumi:"protocol"`
	TargetPort *int    `pulumi:"targetPort"`
}

// SidecarSpecEgressPortPatchInput is an input type that accepts SidecarSpecEgressPortPatchArgs and SidecarSpecEgressPortPatchOutput values.
// You can construct a concrete instance of `SidecarSpecEgressPortPatchInput` via:
//
//	SidecarSpecEgressPortPatchArgs{...}
type SidecarSpecEgressPortPatchInput interface {
	pulumi.Input

	ToSidecarSpecEgressPortPatchOutput() SidecarSpecEgressPortPatchOutput
	ToSidecarSpecEgressPortPatchOutputWithContext(context.Context) SidecarSpecEgressPortPatchOutput
}

// The port associated with the listener.
type SidecarSpecEgressPortPatchArgs struct {
	// Label assigned to the port.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A valid non-negative integer port number.
	Number pulumi.IntPtrInput `pulumi:"number"`
	// The protocol exposed on the port.
	Protocol   pulumi.StringPtrInput `pulumi:"protocol"`
	TargetPort pulumi.IntPtrInput    `pulumi:"targetPort"`
}

func (SidecarSpecEgressPortPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecEgressPortPatch)(nil)).Elem()
}

func (i SidecarSpecEgressPortPatchArgs) ToSidecarSpecEgressPortPatchOutput() SidecarSpecEgressPortPatchOutput {
	return i.ToSidecarSpecEgressPortPatchOutputWithContext(context.Background())
}

func (i SidecarSpecEgressPortPatchArgs) ToSidecarSpecEgressPortPatchOutputWithContext(ctx context.Context) SidecarSpecEgressPortPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecEgressPortPatchOutput)
}

func (i SidecarSpecEgressPortPatchArgs) ToSidecarSpecEgressPortPatchPtrOutput() SidecarSpecEgressPortPatchPtrOutput {
	return i.ToSidecarSpecEgressPortPatchPtrOutputWithContext(context.Background())
}

func (i SidecarSpecEgressPortPatchArgs) ToSidecarSpecEgressPortPatchPtrOutputWithContext(ctx context.Context) SidecarSpecEgressPortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecEgressPortPatchOutput).ToSidecarSpecEgressPortPatchPtrOutputWithContext(ctx)
}

// SidecarSpecEgressPortPatchPtrInput is an input type that accepts SidecarSpecEgressPortPatchArgs, SidecarSpecEgressPortPatchPtr and SidecarSpecEgressPortPatchPtrOutput values.
// You can construct a concrete instance of `SidecarSpecEgressPortPatchPtrInput` via:
//
//	        SidecarSpecEgressPortPatchArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecEgressPortPatchPtrInput interface {
	pulumi.Input

	ToSidecarSpecEgressPortPatchPtrOutput() SidecarSpecEgressPortPatchPtrOutput
	ToSidecarSpecEgressPortPatchPtrOutputWithContext(context.Context) SidecarSpecEgressPortPatchPtrOutput
}

type sidecarSpecEgressPortPatchPtrType SidecarSpecEgressPortPatchArgs

func SidecarSpecEgressPortPatchPtr(v *SidecarSpecEgressPortPatchArgs) SidecarSpecEgressPortPatchPtrInput {
	return (*sidecarSpecEgressPortPatchPtrType)(v)
}

func (*sidecarSpecEgressPortPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecEgressPortPatch)(nil)).Elem()
}

func (i *sidecarSpecEgressPortPatchPtrType) ToSidecarSpecEgressPortPatchPtrOutput() SidecarSpecEgressPortPatchPtrOutput {
	return i.ToSidecarSpecEgressPortPatchPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecEgressPortPatchPtrType) ToSidecarSpecEgressPortPatchPtrOutputWithContext(ctx context.Context) SidecarSpecEgressPortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecEgressPortPatchPtrOutput)
}

// The port associated with the listener.
type SidecarSpecEgressPortPatchOutput struct{ *pulumi.OutputState }

func (SidecarSpecEgressPortPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecEgressPortPatch)(nil)).Elem()
}

func (o SidecarSpecEgressPortPatchOutput) ToSidecarSpecEgressPortPatchOutput() SidecarSpecEgressPortPatchOutput {
	return o
}

func (o SidecarSpecEgressPortPatchOutput) ToSidecarSpecEgressPortPatchOutputWithContext(ctx context.Context) SidecarSpecEgressPortPatchOutput {
	return o
}

func (o SidecarSpecEgressPortPatchOutput) ToSidecarSpecEgressPortPatchPtrOutput() SidecarSpecEgressPortPatchPtrOutput {
	return o.ToSidecarSpecEgressPortPatchPtrOutputWithContext(context.Background())
}

func (o SidecarSpecEgressPortPatchOutput) ToSidecarSpecEgressPortPatchPtrOutputWithContext(ctx context.Context) SidecarSpecEgressPortPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecEgressPortPatch) *SidecarSpecEgressPortPatch {
		return &v
	}).(SidecarSpecEgressPortPatchPtrOutput)
}

// Label assigned to the port.
func (o SidecarSpecEgressPortPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecEgressPortPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A valid non-negative integer port number.
func (o SidecarSpecEgressPortPatchOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecEgressPortPatch) *int { return v.Number }).(pulumi.IntPtrOutput)
}

// The protocol exposed on the port.
func (o SidecarSpecEgressPortPatchOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecEgressPortPatch) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o SidecarSpecEgressPortPatchOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecEgressPortPatch) *int { return v.TargetPort }).(pulumi.IntPtrOutput)
}

type SidecarSpecEgressPortPatchPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecEgressPortPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecEgressPortPatch)(nil)).Elem()
}

func (o SidecarSpecEgressPortPatchPtrOutput) ToSidecarSpecEgressPortPatchPtrOutput() SidecarSpecEgressPortPatchPtrOutput {
	return o
}

func (o SidecarSpecEgressPortPatchPtrOutput) ToSidecarSpecEgressPortPatchPtrOutputWithContext(ctx context.Context) SidecarSpecEgressPortPatchPtrOutput {
	return o
}

func (o SidecarSpecEgressPortPatchPtrOutput) Elem() SidecarSpecEgressPortPatchOutput {
	return o.ApplyT(func(v *SidecarSpecEgressPortPatch) SidecarSpecEgressPortPatch {
		if v != nil {
			return *v
		}
		var ret SidecarSpecEgressPortPatch
		return ret
	}).(SidecarSpecEgressPortPatchOutput)
}

// Label assigned to the port.
func (o SidecarSpecEgressPortPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecEgressPortPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A valid non-negative integer port number.
func (o SidecarSpecEgressPortPatchPtrOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecEgressPortPatch) *int {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.IntPtrOutput)
}

// The protocol exposed on the port.
func (o SidecarSpecEgressPortPatchPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecEgressPortPatch) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

func (o SidecarSpecEgressPortPatchPtrOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecEgressPortPatch) *int {
		if v == nil {
			return nil
		}
		return v.TargetPort
	}).(pulumi.IntPtrOutput)
}

// Settings controlling the volume of connections Envoy will accept from the network.
type SidecarSpecInboundConnectionPool struct {
	Http *SidecarSpecInboundConnectionPoolHttp `pulumi:"http"`
	Tcp  *SidecarSpecInboundConnectionPoolTcp  `pulumi:"tcp"`
}

// SidecarSpecInboundConnectionPoolInput is an input type that accepts SidecarSpecInboundConnectionPoolArgs and SidecarSpecInboundConnectionPoolOutput values.
// You can construct a concrete instance of `SidecarSpecInboundConnectionPoolInput` via:
//
//	SidecarSpecInboundConnectionPoolArgs{...}
type SidecarSpecInboundConnectionPoolInput interface {
	pulumi.Input

	ToSidecarSpecInboundConnectionPoolOutput() SidecarSpecInboundConnectionPoolOutput
	ToSidecarSpecInboundConnectionPoolOutputWithContext(context.Context) SidecarSpecInboundConnectionPoolOutput
}

// Settings controlling the volume of connections Envoy will accept from the network.
type SidecarSpecInboundConnectionPoolArgs struct {
	Http SidecarSpecInboundConnectionPoolHttpPtrInput `pulumi:"http"`
	Tcp  SidecarSpecInboundConnectionPoolTcpPtrInput  `pulumi:"tcp"`
}

func (SidecarSpecInboundConnectionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecInboundConnectionPool)(nil)).Elem()
}

func (i SidecarSpecInboundConnectionPoolArgs) ToSidecarSpecInboundConnectionPoolOutput() SidecarSpecInboundConnectionPoolOutput {
	return i.ToSidecarSpecInboundConnectionPoolOutputWithContext(context.Background())
}

func (i SidecarSpecInboundConnectionPoolArgs) ToSidecarSpecInboundConnectionPoolOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolOutput)
}

func (i SidecarSpecInboundConnectionPoolArgs) ToSidecarSpecInboundConnectionPoolPtrOutput() SidecarSpecInboundConnectionPoolPtrOutput {
	return i.ToSidecarSpecInboundConnectionPoolPtrOutputWithContext(context.Background())
}

func (i SidecarSpecInboundConnectionPoolArgs) ToSidecarSpecInboundConnectionPoolPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolOutput).ToSidecarSpecInboundConnectionPoolPtrOutputWithContext(ctx)
}

// SidecarSpecInboundConnectionPoolPtrInput is an input type that accepts SidecarSpecInboundConnectionPoolArgs, SidecarSpecInboundConnectionPoolPtr and SidecarSpecInboundConnectionPoolPtrOutput values.
// You can construct a concrete instance of `SidecarSpecInboundConnectionPoolPtrInput` via:
//
//	        SidecarSpecInboundConnectionPoolArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecInboundConnectionPoolPtrInput interface {
	pulumi.Input

	ToSidecarSpecInboundConnectionPoolPtrOutput() SidecarSpecInboundConnectionPoolPtrOutput
	ToSidecarSpecInboundConnectionPoolPtrOutputWithContext(context.Context) SidecarSpecInboundConnectionPoolPtrOutput
}

type sidecarSpecInboundConnectionPoolPtrType SidecarSpecInboundConnectionPoolArgs

func SidecarSpecInboundConnectionPoolPtr(v *SidecarSpecInboundConnectionPoolArgs) SidecarSpecInboundConnectionPoolPtrInput {
	return (*sidecarSpecInboundConnectionPoolPtrType)(v)
}

func (*sidecarSpecInboundConnectionPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecInboundConnectionPool)(nil)).Elem()
}

func (i *sidecarSpecInboundConnectionPoolPtrType) ToSidecarSpecInboundConnectionPoolPtrOutput() SidecarSpecInboundConnectionPoolPtrOutput {
	return i.ToSidecarSpecInboundConnectionPoolPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecInboundConnectionPoolPtrType) ToSidecarSpecInboundConnectionPoolPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolPtrOutput)
}

// Settings controlling the volume of connections Envoy will accept from the network.
type SidecarSpecInboundConnectionPoolOutput struct{ *pulumi.OutputState }

func (SidecarSpecInboundConnectionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecInboundConnectionPool)(nil)).Elem()
}

func (o SidecarSpecInboundConnectionPoolOutput) ToSidecarSpecInboundConnectionPoolOutput() SidecarSpecInboundConnectionPoolOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolOutput) ToSidecarSpecInboundConnectionPoolOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolOutput) ToSidecarSpecInboundConnectionPoolPtrOutput() SidecarSpecInboundConnectionPoolPtrOutput {
	return o.ToSidecarSpecInboundConnectionPoolPtrOutputWithContext(context.Background())
}

func (o SidecarSpecInboundConnectionPoolOutput) ToSidecarSpecInboundConnectionPoolPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecInboundConnectionPool) *SidecarSpecInboundConnectionPool {
		return &v
	}).(SidecarSpecInboundConnectionPoolPtrOutput)
}

func (o SidecarSpecInboundConnectionPoolOutput) Http() SidecarSpecInboundConnectionPoolHttpPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPool) *SidecarSpecInboundConnectionPoolHttp { return v.Http }).(SidecarSpecInboundConnectionPoolHttpPtrOutput)
}

func (o SidecarSpecInboundConnectionPoolOutput) Tcp() SidecarSpecInboundConnectionPoolTcpPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPool) *SidecarSpecInboundConnectionPoolTcp { return v.Tcp }).(SidecarSpecInboundConnectionPoolTcpPtrOutput)
}

type SidecarSpecInboundConnectionPoolPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecInboundConnectionPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecInboundConnectionPool)(nil)).Elem()
}

func (o SidecarSpecInboundConnectionPoolPtrOutput) ToSidecarSpecInboundConnectionPoolPtrOutput() SidecarSpecInboundConnectionPoolPtrOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolPtrOutput) ToSidecarSpecInboundConnectionPoolPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolPtrOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolPtrOutput) Elem() SidecarSpecInboundConnectionPoolOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPool) SidecarSpecInboundConnectionPool {
		if v != nil {
			return *v
		}
		var ret SidecarSpecInboundConnectionPool
		return ret
	}).(SidecarSpecInboundConnectionPoolOutput)
}

func (o SidecarSpecInboundConnectionPoolPtrOutput) Http() SidecarSpecInboundConnectionPoolHttpPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPool) *SidecarSpecInboundConnectionPoolHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(SidecarSpecInboundConnectionPoolHttpPtrOutput)
}

func (o SidecarSpecInboundConnectionPoolPtrOutput) Tcp() SidecarSpecInboundConnectionPoolTcpPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPool) *SidecarSpecInboundConnectionPoolTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(SidecarSpecInboundConnectionPoolTcpPtrOutput)
}

// HTTP connection pool settings.
type SidecarSpecInboundConnectionPoolHttp struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy *string `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests *int `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests *int `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams *int `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection *int `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries *int `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol *bool `pulumi:"useClientProtocol"`
}

// SidecarSpecInboundConnectionPoolHttpInput is an input type that accepts SidecarSpecInboundConnectionPoolHttpArgs and SidecarSpecInboundConnectionPoolHttpOutput values.
// You can construct a concrete instance of `SidecarSpecInboundConnectionPoolHttpInput` via:
//
//	SidecarSpecInboundConnectionPoolHttpArgs{...}
type SidecarSpecInboundConnectionPoolHttpInput interface {
	pulumi.Input

	ToSidecarSpecInboundConnectionPoolHttpOutput() SidecarSpecInboundConnectionPoolHttpOutput
	ToSidecarSpecInboundConnectionPoolHttpOutputWithContext(context.Context) SidecarSpecInboundConnectionPoolHttpOutput
}

// HTTP connection pool settings.
type SidecarSpecInboundConnectionPoolHttpArgs struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy pulumi.StringPtrInput `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests pulumi.IntPtrInput `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests pulumi.IntPtrInput `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams pulumi.IntPtrInput `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection pulumi.IntPtrInput `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries pulumi.IntPtrInput `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol pulumi.BoolPtrInput `pulumi:"useClientProtocol"`
}

func (SidecarSpecInboundConnectionPoolHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecInboundConnectionPoolHttp)(nil)).Elem()
}

func (i SidecarSpecInboundConnectionPoolHttpArgs) ToSidecarSpecInboundConnectionPoolHttpOutput() SidecarSpecInboundConnectionPoolHttpOutput {
	return i.ToSidecarSpecInboundConnectionPoolHttpOutputWithContext(context.Background())
}

func (i SidecarSpecInboundConnectionPoolHttpArgs) ToSidecarSpecInboundConnectionPoolHttpOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolHttpOutput)
}

func (i SidecarSpecInboundConnectionPoolHttpArgs) ToSidecarSpecInboundConnectionPoolHttpPtrOutput() SidecarSpecInboundConnectionPoolHttpPtrOutput {
	return i.ToSidecarSpecInboundConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (i SidecarSpecInboundConnectionPoolHttpArgs) ToSidecarSpecInboundConnectionPoolHttpPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolHttpOutput).ToSidecarSpecInboundConnectionPoolHttpPtrOutputWithContext(ctx)
}

// SidecarSpecInboundConnectionPoolHttpPtrInput is an input type that accepts SidecarSpecInboundConnectionPoolHttpArgs, SidecarSpecInboundConnectionPoolHttpPtr and SidecarSpecInboundConnectionPoolHttpPtrOutput values.
// You can construct a concrete instance of `SidecarSpecInboundConnectionPoolHttpPtrInput` via:
//
//	        SidecarSpecInboundConnectionPoolHttpArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecInboundConnectionPoolHttpPtrInput interface {
	pulumi.Input

	ToSidecarSpecInboundConnectionPoolHttpPtrOutput() SidecarSpecInboundConnectionPoolHttpPtrOutput
	ToSidecarSpecInboundConnectionPoolHttpPtrOutputWithContext(context.Context) SidecarSpecInboundConnectionPoolHttpPtrOutput
}

type sidecarSpecInboundConnectionPoolHttpPtrType SidecarSpecInboundConnectionPoolHttpArgs

func SidecarSpecInboundConnectionPoolHttpPtr(v *SidecarSpecInboundConnectionPoolHttpArgs) SidecarSpecInboundConnectionPoolHttpPtrInput {
	return (*sidecarSpecInboundConnectionPoolHttpPtrType)(v)
}

func (*sidecarSpecInboundConnectionPoolHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecInboundConnectionPoolHttp)(nil)).Elem()
}

func (i *sidecarSpecInboundConnectionPoolHttpPtrType) ToSidecarSpecInboundConnectionPoolHttpPtrOutput() SidecarSpecInboundConnectionPoolHttpPtrOutput {
	return i.ToSidecarSpecInboundConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecInboundConnectionPoolHttpPtrType) ToSidecarSpecInboundConnectionPoolHttpPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolHttpPtrOutput)
}

// HTTP connection pool settings.
type SidecarSpecInboundConnectionPoolHttpOutput struct{ *pulumi.OutputState }

func (SidecarSpecInboundConnectionPoolHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecInboundConnectionPoolHttp)(nil)).Elem()
}

func (o SidecarSpecInboundConnectionPoolHttpOutput) ToSidecarSpecInboundConnectionPoolHttpOutput() SidecarSpecInboundConnectionPoolHttpOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolHttpOutput) ToSidecarSpecInboundConnectionPoolHttpOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolHttpOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolHttpOutput) ToSidecarSpecInboundConnectionPoolHttpPtrOutput() SidecarSpecInboundConnectionPoolHttpPtrOutput {
	return o.ToSidecarSpecInboundConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (o SidecarSpecInboundConnectionPoolHttpOutput) ToSidecarSpecInboundConnectionPoolHttpPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecInboundConnectionPoolHttp) *SidecarSpecInboundConnectionPoolHttp {
		return &v
	}).(SidecarSpecInboundConnectionPoolHttpPtrOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o SidecarSpecInboundConnectionPoolHttpOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolHttp) *string { return v.H2UpgradePolicy }).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o SidecarSpecInboundConnectionPoolHttpOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolHttp) *int { return v.Http1MaxPendingRequests }).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o SidecarSpecInboundConnectionPoolHttpOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolHttp) *int { return v.Http2MaxRequests }).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o SidecarSpecInboundConnectionPoolHttpOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolHttp) *string { return v.IdleTimeout }).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o SidecarSpecInboundConnectionPoolHttpOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolHttp) *int { return v.MaxConcurrentStreams }).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o SidecarSpecInboundConnectionPoolHttpOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolHttp) *int { return v.MaxRequestsPerConnection }).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o SidecarSpecInboundConnectionPoolHttpOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolHttp) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o SidecarSpecInboundConnectionPoolHttpOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolHttp) *bool { return v.UseClientProtocol }).(pulumi.BoolPtrOutput)
}

type SidecarSpecInboundConnectionPoolHttpPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecInboundConnectionPoolHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecInboundConnectionPoolHttp)(nil)).Elem()
}

func (o SidecarSpecInboundConnectionPoolHttpPtrOutput) ToSidecarSpecInboundConnectionPoolHttpPtrOutput() SidecarSpecInboundConnectionPoolHttpPtrOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolHttpPtrOutput) ToSidecarSpecInboundConnectionPoolHttpPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolHttpPtrOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolHttpPtrOutput) Elem() SidecarSpecInboundConnectionPoolHttpOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolHttp) SidecarSpecInboundConnectionPoolHttp {
		if v != nil {
			return *v
		}
		var ret SidecarSpecInboundConnectionPoolHttp
		return ret
	}).(SidecarSpecInboundConnectionPoolHttpOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o SidecarSpecInboundConnectionPoolHttpPtrOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolHttp) *string {
		if v == nil {
			return nil
		}
		return v.H2UpgradePolicy
	}).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o SidecarSpecInboundConnectionPoolHttpPtrOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.Http1MaxPendingRequests
	}).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o SidecarSpecInboundConnectionPoolHttpPtrOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.Http2MaxRequests
	}).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o SidecarSpecInboundConnectionPoolHttpPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolHttp) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o SidecarSpecInboundConnectionPoolHttpPtrOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentStreams
	}).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o SidecarSpecInboundConnectionPoolHttpPtrOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestsPerConnection
	}).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o SidecarSpecInboundConnectionPoolHttpPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o SidecarSpecInboundConnectionPoolHttpPtrOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolHttp) *bool {
		if v == nil {
			return nil
		}
		return v.UseClientProtocol
	}).(pulumi.BoolPtrOutput)
}

// HTTP connection pool settings.
type SidecarSpecInboundConnectionPoolHttpPatch struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy *string `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests *int `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests *int `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams *int `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection *int `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries *int `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol *bool `pulumi:"useClientProtocol"`
}

// SidecarSpecInboundConnectionPoolHttpPatchInput is an input type that accepts SidecarSpecInboundConnectionPoolHttpPatchArgs and SidecarSpecInboundConnectionPoolHttpPatchOutput values.
// You can construct a concrete instance of `SidecarSpecInboundConnectionPoolHttpPatchInput` via:
//
//	SidecarSpecInboundConnectionPoolHttpPatchArgs{...}
type SidecarSpecInboundConnectionPoolHttpPatchInput interface {
	pulumi.Input

	ToSidecarSpecInboundConnectionPoolHttpPatchOutput() SidecarSpecInboundConnectionPoolHttpPatchOutput
	ToSidecarSpecInboundConnectionPoolHttpPatchOutputWithContext(context.Context) SidecarSpecInboundConnectionPoolHttpPatchOutput
}

// HTTP connection pool settings.
type SidecarSpecInboundConnectionPoolHttpPatchArgs struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy pulumi.StringPtrInput `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests pulumi.IntPtrInput `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests pulumi.IntPtrInput `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams pulumi.IntPtrInput `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection pulumi.IntPtrInput `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries pulumi.IntPtrInput `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol pulumi.BoolPtrInput `pulumi:"useClientProtocol"`
}

func (SidecarSpecInboundConnectionPoolHttpPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecInboundConnectionPoolHttpPatch)(nil)).Elem()
}

func (i SidecarSpecInboundConnectionPoolHttpPatchArgs) ToSidecarSpecInboundConnectionPoolHttpPatchOutput() SidecarSpecInboundConnectionPoolHttpPatchOutput {
	return i.ToSidecarSpecInboundConnectionPoolHttpPatchOutputWithContext(context.Background())
}

func (i SidecarSpecInboundConnectionPoolHttpPatchArgs) ToSidecarSpecInboundConnectionPoolHttpPatchOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolHttpPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolHttpPatchOutput)
}

func (i SidecarSpecInboundConnectionPoolHttpPatchArgs) ToSidecarSpecInboundConnectionPoolHttpPatchPtrOutput() SidecarSpecInboundConnectionPoolHttpPatchPtrOutput {
	return i.ToSidecarSpecInboundConnectionPoolHttpPatchPtrOutputWithContext(context.Background())
}

func (i SidecarSpecInboundConnectionPoolHttpPatchArgs) ToSidecarSpecInboundConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolHttpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolHttpPatchOutput).ToSidecarSpecInboundConnectionPoolHttpPatchPtrOutputWithContext(ctx)
}

// SidecarSpecInboundConnectionPoolHttpPatchPtrInput is an input type that accepts SidecarSpecInboundConnectionPoolHttpPatchArgs, SidecarSpecInboundConnectionPoolHttpPatchPtr and SidecarSpecInboundConnectionPoolHttpPatchPtrOutput values.
// You can construct a concrete instance of `SidecarSpecInboundConnectionPoolHttpPatchPtrInput` via:
//
//	        SidecarSpecInboundConnectionPoolHttpPatchArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecInboundConnectionPoolHttpPatchPtrInput interface {
	pulumi.Input

	ToSidecarSpecInboundConnectionPoolHttpPatchPtrOutput() SidecarSpecInboundConnectionPoolHttpPatchPtrOutput
	ToSidecarSpecInboundConnectionPoolHttpPatchPtrOutputWithContext(context.Context) SidecarSpecInboundConnectionPoolHttpPatchPtrOutput
}

type sidecarSpecInboundConnectionPoolHttpPatchPtrType SidecarSpecInboundConnectionPoolHttpPatchArgs

func SidecarSpecInboundConnectionPoolHttpPatchPtr(v *SidecarSpecInboundConnectionPoolHttpPatchArgs) SidecarSpecInboundConnectionPoolHttpPatchPtrInput {
	return (*sidecarSpecInboundConnectionPoolHttpPatchPtrType)(v)
}

func (*sidecarSpecInboundConnectionPoolHttpPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecInboundConnectionPoolHttpPatch)(nil)).Elem()
}

func (i *sidecarSpecInboundConnectionPoolHttpPatchPtrType) ToSidecarSpecInboundConnectionPoolHttpPatchPtrOutput() SidecarSpecInboundConnectionPoolHttpPatchPtrOutput {
	return i.ToSidecarSpecInboundConnectionPoolHttpPatchPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecInboundConnectionPoolHttpPatchPtrType) ToSidecarSpecInboundConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolHttpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolHttpPatchPtrOutput)
}

// HTTP connection pool settings.
type SidecarSpecInboundConnectionPoolHttpPatchOutput struct{ *pulumi.OutputState }

func (SidecarSpecInboundConnectionPoolHttpPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecInboundConnectionPoolHttpPatch)(nil)).Elem()
}

func (o SidecarSpecInboundConnectionPoolHttpPatchOutput) ToSidecarSpecInboundConnectionPoolHttpPatchOutput() SidecarSpecInboundConnectionPoolHttpPatchOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolHttpPatchOutput) ToSidecarSpecInboundConnectionPoolHttpPatchOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolHttpPatchOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolHttpPatchOutput) ToSidecarSpecInboundConnectionPoolHttpPatchPtrOutput() SidecarSpecInboundConnectionPoolHttpPatchPtrOutput {
	return o.ToSidecarSpecInboundConnectionPoolHttpPatchPtrOutputWithContext(context.Background())
}

func (o SidecarSpecInboundConnectionPoolHttpPatchOutput) ToSidecarSpecInboundConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolHttpPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecInboundConnectionPoolHttpPatch) *SidecarSpecInboundConnectionPoolHttpPatch {
		return &v
	}).(SidecarSpecInboundConnectionPoolHttpPatchPtrOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o SidecarSpecInboundConnectionPoolHttpPatchOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolHttpPatch) *string { return v.H2UpgradePolicy }).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o SidecarSpecInboundConnectionPoolHttpPatchOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolHttpPatch) *int { return v.Http1MaxPendingRequests }).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o SidecarSpecInboundConnectionPoolHttpPatchOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolHttpPatch) *int { return v.Http2MaxRequests }).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o SidecarSpecInboundConnectionPoolHttpPatchOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolHttpPatch) *string { return v.IdleTimeout }).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o SidecarSpecInboundConnectionPoolHttpPatchOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolHttpPatch) *int { return v.MaxConcurrentStreams }).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o SidecarSpecInboundConnectionPoolHttpPatchOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolHttpPatch) *int { return v.MaxRequestsPerConnection }).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o SidecarSpecInboundConnectionPoolHttpPatchOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolHttpPatch) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o SidecarSpecInboundConnectionPoolHttpPatchOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolHttpPatch) *bool { return v.UseClientProtocol }).(pulumi.BoolPtrOutput)
}

type SidecarSpecInboundConnectionPoolHttpPatchPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecInboundConnectionPoolHttpPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecInboundConnectionPoolHttpPatch)(nil)).Elem()
}

func (o SidecarSpecInboundConnectionPoolHttpPatchPtrOutput) ToSidecarSpecInboundConnectionPoolHttpPatchPtrOutput() SidecarSpecInboundConnectionPoolHttpPatchPtrOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolHttpPatchPtrOutput) ToSidecarSpecInboundConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolHttpPatchPtrOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolHttpPatchPtrOutput) Elem() SidecarSpecInboundConnectionPoolHttpPatchOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolHttpPatch) SidecarSpecInboundConnectionPoolHttpPatch {
		if v != nil {
			return *v
		}
		var ret SidecarSpecInboundConnectionPoolHttpPatch
		return ret
	}).(SidecarSpecInboundConnectionPoolHttpPatchOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o SidecarSpecInboundConnectionPoolHttpPatchPtrOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolHttpPatch) *string {
		if v == nil {
			return nil
		}
		return v.H2UpgradePolicy
	}).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o SidecarSpecInboundConnectionPoolHttpPatchPtrOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.Http1MaxPendingRequests
	}).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o SidecarSpecInboundConnectionPoolHttpPatchPtrOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.Http2MaxRequests
	}).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o SidecarSpecInboundConnectionPoolHttpPatchPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolHttpPatch) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o SidecarSpecInboundConnectionPoolHttpPatchPtrOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentStreams
	}).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o SidecarSpecInboundConnectionPoolHttpPatchPtrOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestsPerConnection
	}).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o SidecarSpecInboundConnectionPoolHttpPatchPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o SidecarSpecInboundConnectionPoolHttpPatchPtrOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolHttpPatch) *bool {
		if v == nil {
			return nil
		}
		return v.UseClientProtocol
	}).(pulumi.BoolPtrOutput)
}

// Settings controlling the volume of connections Envoy will accept from the network.
type SidecarSpecInboundConnectionPoolPatch struct {
	Http *SidecarSpecInboundConnectionPoolHttpPatch `pulumi:"http"`
	Tcp  *SidecarSpecInboundConnectionPoolTcpPatch  `pulumi:"tcp"`
}

// SidecarSpecInboundConnectionPoolPatchInput is an input type that accepts SidecarSpecInboundConnectionPoolPatchArgs and SidecarSpecInboundConnectionPoolPatchOutput values.
// You can construct a concrete instance of `SidecarSpecInboundConnectionPoolPatchInput` via:
//
//	SidecarSpecInboundConnectionPoolPatchArgs{...}
type SidecarSpecInboundConnectionPoolPatchInput interface {
	pulumi.Input

	ToSidecarSpecInboundConnectionPoolPatchOutput() SidecarSpecInboundConnectionPoolPatchOutput
	ToSidecarSpecInboundConnectionPoolPatchOutputWithContext(context.Context) SidecarSpecInboundConnectionPoolPatchOutput
}

// Settings controlling the volume of connections Envoy will accept from the network.
type SidecarSpecInboundConnectionPoolPatchArgs struct {
	Http SidecarSpecInboundConnectionPoolHttpPatchPtrInput `pulumi:"http"`
	Tcp  SidecarSpecInboundConnectionPoolTcpPatchPtrInput  `pulumi:"tcp"`
}

func (SidecarSpecInboundConnectionPoolPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecInboundConnectionPoolPatch)(nil)).Elem()
}

func (i SidecarSpecInboundConnectionPoolPatchArgs) ToSidecarSpecInboundConnectionPoolPatchOutput() SidecarSpecInboundConnectionPoolPatchOutput {
	return i.ToSidecarSpecInboundConnectionPoolPatchOutputWithContext(context.Background())
}

func (i SidecarSpecInboundConnectionPoolPatchArgs) ToSidecarSpecInboundConnectionPoolPatchOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolPatchOutput)
}

func (i SidecarSpecInboundConnectionPoolPatchArgs) ToSidecarSpecInboundConnectionPoolPatchPtrOutput() SidecarSpecInboundConnectionPoolPatchPtrOutput {
	return i.ToSidecarSpecInboundConnectionPoolPatchPtrOutputWithContext(context.Background())
}

func (i SidecarSpecInboundConnectionPoolPatchArgs) ToSidecarSpecInboundConnectionPoolPatchPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolPatchOutput).ToSidecarSpecInboundConnectionPoolPatchPtrOutputWithContext(ctx)
}

// SidecarSpecInboundConnectionPoolPatchPtrInput is an input type that accepts SidecarSpecInboundConnectionPoolPatchArgs, SidecarSpecInboundConnectionPoolPatchPtr and SidecarSpecInboundConnectionPoolPatchPtrOutput values.
// You can construct a concrete instance of `SidecarSpecInboundConnectionPoolPatchPtrInput` via:
//
//	        SidecarSpecInboundConnectionPoolPatchArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecInboundConnectionPoolPatchPtrInput interface {
	pulumi.Input

	ToSidecarSpecInboundConnectionPoolPatchPtrOutput() SidecarSpecInboundConnectionPoolPatchPtrOutput
	ToSidecarSpecInboundConnectionPoolPatchPtrOutputWithContext(context.Context) SidecarSpecInboundConnectionPoolPatchPtrOutput
}

type sidecarSpecInboundConnectionPoolPatchPtrType SidecarSpecInboundConnectionPoolPatchArgs

func SidecarSpecInboundConnectionPoolPatchPtr(v *SidecarSpecInboundConnectionPoolPatchArgs) SidecarSpecInboundConnectionPoolPatchPtrInput {
	return (*sidecarSpecInboundConnectionPoolPatchPtrType)(v)
}

func (*sidecarSpecInboundConnectionPoolPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecInboundConnectionPoolPatch)(nil)).Elem()
}

func (i *sidecarSpecInboundConnectionPoolPatchPtrType) ToSidecarSpecInboundConnectionPoolPatchPtrOutput() SidecarSpecInboundConnectionPoolPatchPtrOutput {
	return i.ToSidecarSpecInboundConnectionPoolPatchPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecInboundConnectionPoolPatchPtrType) ToSidecarSpecInboundConnectionPoolPatchPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolPatchPtrOutput)
}

// Settings controlling the volume of connections Envoy will accept from the network.
type SidecarSpecInboundConnectionPoolPatchOutput struct{ *pulumi.OutputState }

func (SidecarSpecInboundConnectionPoolPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecInboundConnectionPoolPatch)(nil)).Elem()
}

func (o SidecarSpecInboundConnectionPoolPatchOutput) ToSidecarSpecInboundConnectionPoolPatchOutput() SidecarSpecInboundConnectionPoolPatchOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolPatchOutput) ToSidecarSpecInboundConnectionPoolPatchOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolPatchOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolPatchOutput) ToSidecarSpecInboundConnectionPoolPatchPtrOutput() SidecarSpecInboundConnectionPoolPatchPtrOutput {
	return o.ToSidecarSpecInboundConnectionPoolPatchPtrOutputWithContext(context.Background())
}

func (o SidecarSpecInboundConnectionPoolPatchOutput) ToSidecarSpecInboundConnectionPoolPatchPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecInboundConnectionPoolPatch) *SidecarSpecInboundConnectionPoolPatch {
		return &v
	}).(SidecarSpecInboundConnectionPoolPatchPtrOutput)
}

func (o SidecarSpecInboundConnectionPoolPatchOutput) Http() SidecarSpecInboundConnectionPoolHttpPatchPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolPatch) *SidecarSpecInboundConnectionPoolHttpPatch {
		return v.Http
	}).(SidecarSpecInboundConnectionPoolHttpPatchPtrOutput)
}

func (o SidecarSpecInboundConnectionPoolPatchOutput) Tcp() SidecarSpecInboundConnectionPoolTcpPatchPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolPatch) *SidecarSpecInboundConnectionPoolTcpPatch { return v.Tcp }).(SidecarSpecInboundConnectionPoolTcpPatchPtrOutput)
}

type SidecarSpecInboundConnectionPoolPatchPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecInboundConnectionPoolPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecInboundConnectionPoolPatch)(nil)).Elem()
}

func (o SidecarSpecInboundConnectionPoolPatchPtrOutput) ToSidecarSpecInboundConnectionPoolPatchPtrOutput() SidecarSpecInboundConnectionPoolPatchPtrOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolPatchPtrOutput) ToSidecarSpecInboundConnectionPoolPatchPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolPatchPtrOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolPatchPtrOutput) Elem() SidecarSpecInboundConnectionPoolPatchOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolPatch) SidecarSpecInboundConnectionPoolPatch {
		if v != nil {
			return *v
		}
		var ret SidecarSpecInboundConnectionPoolPatch
		return ret
	}).(SidecarSpecInboundConnectionPoolPatchOutput)
}

func (o SidecarSpecInboundConnectionPoolPatchPtrOutput) Http() SidecarSpecInboundConnectionPoolHttpPatchPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolPatch) *SidecarSpecInboundConnectionPoolHttpPatch {
		if v == nil {
			return nil
		}
		return v.Http
	}).(SidecarSpecInboundConnectionPoolHttpPatchPtrOutput)
}

func (o SidecarSpecInboundConnectionPoolPatchPtrOutput) Tcp() SidecarSpecInboundConnectionPoolTcpPatchPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolPatch) *SidecarSpecInboundConnectionPoolTcpPatch {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(SidecarSpecInboundConnectionPoolTcpPatchPtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type SidecarSpecInboundConnectionPoolTcp struct {
	// TCP connection timeout.
	ConnectTimeout *string `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration *string `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections *int                                             `pulumi:"maxConnections"`
	TcpKeepalive   *SidecarSpecInboundConnectionPoolTcpTcpKeepalive `pulumi:"tcpKeepalive"`
}

// SidecarSpecInboundConnectionPoolTcpInput is an input type that accepts SidecarSpecInboundConnectionPoolTcpArgs and SidecarSpecInboundConnectionPoolTcpOutput values.
// You can construct a concrete instance of `SidecarSpecInboundConnectionPoolTcpInput` via:
//
//	SidecarSpecInboundConnectionPoolTcpArgs{...}
type SidecarSpecInboundConnectionPoolTcpInput interface {
	pulumi.Input

	ToSidecarSpecInboundConnectionPoolTcpOutput() SidecarSpecInboundConnectionPoolTcpOutput
	ToSidecarSpecInboundConnectionPoolTcpOutputWithContext(context.Context) SidecarSpecInboundConnectionPoolTcpOutput
}

// Settings common to both HTTP and TCP upstream connections.
type SidecarSpecInboundConnectionPoolTcpArgs struct {
	// TCP connection timeout.
	ConnectTimeout pulumi.StringPtrInput `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration pulumi.StringPtrInput `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections pulumi.IntPtrInput                                      `pulumi:"maxConnections"`
	TcpKeepalive   SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrInput `pulumi:"tcpKeepalive"`
}

func (SidecarSpecInboundConnectionPoolTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecInboundConnectionPoolTcp)(nil)).Elem()
}

func (i SidecarSpecInboundConnectionPoolTcpArgs) ToSidecarSpecInboundConnectionPoolTcpOutput() SidecarSpecInboundConnectionPoolTcpOutput {
	return i.ToSidecarSpecInboundConnectionPoolTcpOutputWithContext(context.Background())
}

func (i SidecarSpecInboundConnectionPoolTcpArgs) ToSidecarSpecInboundConnectionPoolTcpOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolTcpOutput)
}

func (i SidecarSpecInboundConnectionPoolTcpArgs) ToSidecarSpecInboundConnectionPoolTcpPtrOutput() SidecarSpecInboundConnectionPoolTcpPtrOutput {
	return i.ToSidecarSpecInboundConnectionPoolTcpPtrOutputWithContext(context.Background())
}

func (i SidecarSpecInboundConnectionPoolTcpArgs) ToSidecarSpecInboundConnectionPoolTcpPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolTcpOutput).ToSidecarSpecInboundConnectionPoolTcpPtrOutputWithContext(ctx)
}

// SidecarSpecInboundConnectionPoolTcpPtrInput is an input type that accepts SidecarSpecInboundConnectionPoolTcpArgs, SidecarSpecInboundConnectionPoolTcpPtr and SidecarSpecInboundConnectionPoolTcpPtrOutput values.
// You can construct a concrete instance of `SidecarSpecInboundConnectionPoolTcpPtrInput` via:
//
//	        SidecarSpecInboundConnectionPoolTcpArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecInboundConnectionPoolTcpPtrInput interface {
	pulumi.Input

	ToSidecarSpecInboundConnectionPoolTcpPtrOutput() SidecarSpecInboundConnectionPoolTcpPtrOutput
	ToSidecarSpecInboundConnectionPoolTcpPtrOutputWithContext(context.Context) SidecarSpecInboundConnectionPoolTcpPtrOutput
}

type sidecarSpecInboundConnectionPoolTcpPtrType SidecarSpecInboundConnectionPoolTcpArgs

func SidecarSpecInboundConnectionPoolTcpPtr(v *SidecarSpecInboundConnectionPoolTcpArgs) SidecarSpecInboundConnectionPoolTcpPtrInput {
	return (*sidecarSpecInboundConnectionPoolTcpPtrType)(v)
}

func (*sidecarSpecInboundConnectionPoolTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecInboundConnectionPoolTcp)(nil)).Elem()
}

func (i *sidecarSpecInboundConnectionPoolTcpPtrType) ToSidecarSpecInboundConnectionPoolTcpPtrOutput() SidecarSpecInboundConnectionPoolTcpPtrOutput {
	return i.ToSidecarSpecInboundConnectionPoolTcpPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecInboundConnectionPoolTcpPtrType) ToSidecarSpecInboundConnectionPoolTcpPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolTcpPtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type SidecarSpecInboundConnectionPoolTcpOutput struct{ *pulumi.OutputState }

func (SidecarSpecInboundConnectionPoolTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecInboundConnectionPoolTcp)(nil)).Elem()
}

func (o SidecarSpecInboundConnectionPoolTcpOutput) ToSidecarSpecInboundConnectionPoolTcpOutput() SidecarSpecInboundConnectionPoolTcpOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolTcpOutput) ToSidecarSpecInboundConnectionPoolTcpOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolTcpOutput) ToSidecarSpecInboundConnectionPoolTcpPtrOutput() SidecarSpecInboundConnectionPoolTcpPtrOutput {
	return o.ToSidecarSpecInboundConnectionPoolTcpPtrOutputWithContext(context.Background())
}

func (o SidecarSpecInboundConnectionPoolTcpOutput) ToSidecarSpecInboundConnectionPoolTcpPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecInboundConnectionPoolTcp) *SidecarSpecInboundConnectionPoolTcp {
		return &v
	}).(SidecarSpecInboundConnectionPoolTcpPtrOutput)
}

// TCP connection timeout.
func (o SidecarSpecInboundConnectionPoolTcpOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolTcp) *string { return v.ConnectTimeout }).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o SidecarSpecInboundConnectionPoolTcpOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolTcp) *string { return v.IdleTimeout }).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o SidecarSpecInboundConnectionPoolTcpOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolTcp) *string { return v.MaxConnectionDuration }).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o SidecarSpecInboundConnectionPoolTcpOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolTcp) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

func (o SidecarSpecInboundConnectionPoolTcpOutput) TcpKeepalive() SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolTcp) *SidecarSpecInboundConnectionPoolTcpTcpKeepalive {
		return v.TcpKeepalive
	}).(SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput)
}

type SidecarSpecInboundConnectionPoolTcpPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecInboundConnectionPoolTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecInboundConnectionPoolTcp)(nil)).Elem()
}

func (o SidecarSpecInboundConnectionPoolTcpPtrOutput) ToSidecarSpecInboundConnectionPoolTcpPtrOutput() SidecarSpecInboundConnectionPoolTcpPtrOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolTcpPtrOutput) ToSidecarSpecInboundConnectionPoolTcpPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpPtrOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolTcpPtrOutput) Elem() SidecarSpecInboundConnectionPoolTcpOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolTcp) SidecarSpecInboundConnectionPoolTcp {
		if v != nil {
			return *v
		}
		var ret SidecarSpecInboundConnectionPoolTcp
		return ret
	}).(SidecarSpecInboundConnectionPoolTcpOutput)
}

// TCP connection timeout.
func (o SidecarSpecInboundConnectionPoolTcpPtrOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolTcp) *string {
		if v == nil {
			return nil
		}
		return v.ConnectTimeout
	}).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o SidecarSpecInboundConnectionPoolTcpPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolTcp) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o SidecarSpecInboundConnectionPoolTcpPtrOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolTcp) *string {
		if v == nil {
			return nil
		}
		return v.MaxConnectionDuration
	}).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o SidecarSpecInboundConnectionPoolTcpPtrOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolTcp) *int {
		if v == nil {
			return nil
		}
		return v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

func (o SidecarSpecInboundConnectionPoolTcpPtrOutput) TcpKeepalive() SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolTcp) *SidecarSpecInboundConnectionPoolTcpTcpKeepalive {
		if v == nil {
			return nil
		}
		return v.TcpKeepalive
	}).(SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type SidecarSpecInboundConnectionPoolTcpPatch struct {
	// TCP connection timeout.
	ConnectTimeout *string `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration *string `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections *int                                                  `pulumi:"maxConnections"`
	TcpKeepalive   *SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatch `pulumi:"tcpKeepalive"`
}

// SidecarSpecInboundConnectionPoolTcpPatchInput is an input type that accepts SidecarSpecInboundConnectionPoolTcpPatchArgs and SidecarSpecInboundConnectionPoolTcpPatchOutput values.
// You can construct a concrete instance of `SidecarSpecInboundConnectionPoolTcpPatchInput` via:
//
//	SidecarSpecInboundConnectionPoolTcpPatchArgs{...}
type SidecarSpecInboundConnectionPoolTcpPatchInput interface {
	pulumi.Input

	ToSidecarSpecInboundConnectionPoolTcpPatchOutput() SidecarSpecInboundConnectionPoolTcpPatchOutput
	ToSidecarSpecInboundConnectionPoolTcpPatchOutputWithContext(context.Context) SidecarSpecInboundConnectionPoolTcpPatchOutput
}

// Settings common to both HTTP and TCP upstream connections.
type SidecarSpecInboundConnectionPoolTcpPatchArgs struct {
	// TCP connection timeout.
	ConnectTimeout pulumi.StringPtrInput `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration pulumi.StringPtrInput `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections pulumi.IntPtrInput                                           `pulumi:"maxConnections"`
	TcpKeepalive   SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrInput `pulumi:"tcpKeepalive"`
}

func (SidecarSpecInboundConnectionPoolTcpPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecInboundConnectionPoolTcpPatch)(nil)).Elem()
}

func (i SidecarSpecInboundConnectionPoolTcpPatchArgs) ToSidecarSpecInboundConnectionPoolTcpPatchOutput() SidecarSpecInboundConnectionPoolTcpPatchOutput {
	return i.ToSidecarSpecInboundConnectionPoolTcpPatchOutputWithContext(context.Background())
}

func (i SidecarSpecInboundConnectionPoolTcpPatchArgs) ToSidecarSpecInboundConnectionPoolTcpPatchOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolTcpPatchOutput)
}

func (i SidecarSpecInboundConnectionPoolTcpPatchArgs) ToSidecarSpecInboundConnectionPoolTcpPatchPtrOutput() SidecarSpecInboundConnectionPoolTcpPatchPtrOutput {
	return i.ToSidecarSpecInboundConnectionPoolTcpPatchPtrOutputWithContext(context.Background())
}

func (i SidecarSpecInboundConnectionPoolTcpPatchArgs) ToSidecarSpecInboundConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolTcpPatchOutput).ToSidecarSpecInboundConnectionPoolTcpPatchPtrOutputWithContext(ctx)
}

// SidecarSpecInboundConnectionPoolTcpPatchPtrInput is an input type that accepts SidecarSpecInboundConnectionPoolTcpPatchArgs, SidecarSpecInboundConnectionPoolTcpPatchPtr and SidecarSpecInboundConnectionPoolTcpPatchPtrOutput values.
// You can construct a concrete instance of `SidecarSpecInboundConnectionPoolTcpPatchPtrInput` via:
//
//	        SidecarSpecInboundConnectionPoolTcpPatchArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecInboundConnectionPoolTcpPatchPtrInput interface {
	pulumi.Input

	ToSidecarSpecInboundConnectionPoolTcpPatchPtrOutput() SidecarSpecInboundConnectionPoolTcpPatchPtrOutput
	ToSidecarSpecInboundConnectionPoolTcpPatchPtrOutputWithContext(context.Context) SidecarSpecInboundConnectionPoolTcpPatchPtrOutput
}

type sidecarSpecInboundConnectionPoolTcpPatchPtrType SidecarSpecInboundConnectionPoolTcpPatchArgs

func SidecarSpecInboundConnectionPoolTcpPatchPtr(v *SidecarSpecInboundConnectionPoolTcpPatchArgs) SidecarSpecInboundConnectionPoolTcpPatchPtrInput {
	return (*sidecarSpecInboundConnectionPoolTcpPatchPtrType)(v)
}

func (*sidecarSpecInboundConnectionPoolTcpPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecInboundConnectionPoolTcpPatch)(nil)).Elem()
}

func (i *sidecarSpecInboundConnectionPoolTcpPatchPtrType) ToSidecarSpecInboundConnectionPoolTcpPatchPtrOutput() SidecarSpecInboundConnectionPoolTcpPatchPtrOutput {
	return i.ToSidecarSpecInboundConnectionPoolTcpPatchPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecInboundConnectionPoolTcpPatchPtrType) ToSidecarSpecInboundConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolTcpPatchPtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type SidecarSpecInboundConnectionPoolTcpPatchOutput struct{ *pulumi.OutputState }

func (SidecarSpecInboundConnectionPoolTcpPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecInboundConnectionPoolTcpPatch)(nil)).Elem()
}

func (o SidecarSpecInboundConnectionPoolTcpPatchOutput) ToSidecarSpecInboundConnectionPoolTcpPatchOutput() SidecarSpecInboundConnectionPoolTcpPatchOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolTcpPatchOutput) ToSidecarSpecInboundConnectionPoolTcpPatchOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpPatchOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolTcpPatchOutput) ToSidecarSpecInboundConnectionPoolTcpPatchPtrOutput() SidecarSpecInboundConnectionPoolTcpPatchPtrOutput {
	return o.ToSidecarSpecInboundConnectionPoolTcpPatchPtrOutputWithContext(context.Background())
}

func (o SidecarSpecInboundConnectionPoolTcpPatchOutput) ToSidecarSpecInboundConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecInboundConnectionPoolTcpPatch) *SidecarSpecInboundConnectionPoolTcpPatch {
		return &v
	}).(SidecarSpecInboundConnectionPoolTcpPatchPtrOutput)
}

// TCP connection timeout.
func (o SidecarSpecInboundConnectionPoolTcpPatchOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolTcpPatch) *string { return v.ConnectTimeout }).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o SidecarSpecInboundConnectionPoolTcpPatchOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolTcpPatch) *string { return v.IdleTimeout }).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o SidecarSpecInboundConnectionPoolTcpPatchOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolTcpPatch) *string { return v.MaxConnectionDuration }).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o SidecarSpecInboundConnectionPoolTcpPatchOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolTcpPatch) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

func (o SidecarSpecInboundConnectionPoolTcpPatchOutput) TcpKeepalive() SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolTcpPatch) *SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatch {
		return v.TcpKeepalive
	}).(SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

type SidecarSpecInboundConnectionPoolTcpPatchPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecInboundConnectionPoolTcpPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecInboundConnectionPoolTcpPatch)(nil)).Elem()
}

func (o SidecarSpecInboundConnectionPoolTcpPatchPtrOutput) ToSidecarSpecInboundConnectionPoolTcpPatchPtrOutput() SidecarSpecInboundConnectionPoolTcpPatchPtrOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolTcpPatchPtrOutput) ToSidecarSpecInboundConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpPatchPtrOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolTcpPatchPtrOutput) Elem() SidecarSpecInboundConnectionPoolTcpPatchOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolTcpPatch) SidecarSpecInboundConnectionPoolTcpPatch {
		if v != nil {
			return *v
		}
		var ret SidecarSpecInboundConnectionPoolTcpPatch
		return ret
	}).(SidecarSpecInboundConnectionPoolTcpPatchOutput)
}

// TCP connection timeout.
func (o SidecarSpecInboundConnectionPoolTcpPatchPtrOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolTcpPatch) *string {
		if v == nil {
			return nil
		}
		return v.ConnectTimeout
	}).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o SidecarSpecInboundConnectionPoolTcpPatchPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolTcpPatch) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o SidecarSpecInboundConnectionPoolTcpPatchPtrOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolTcpPatch) *string {
		if v == nil {
			return nil
		}
		return v.MaxConnectionDuration
	}).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o SidecarSpecInboundConnectionPoolTcpPatchPtrOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolTcpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

func (o SidecarSpecInboundConnectionPoolTcpPatchPtrOutput) TcpKeepalive() SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolTcpPatch) *SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatch {
		if v == nil {
			return nil
		}
		return v.TcpKeepalive
	}).(SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type SidecarSpecInboundConnectionPoolTcpTcpKeepalive struct {
	// The time duration between keep-alive probes.
	Interval *string `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes *int `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time *string `pulumi:"time"`
}

// SidecarSpecInboundConnectionPoolTcpTcpKeepaliveInput is an input type that accepts SidecarSpecInboundConnectionPoolTcpTcpKeepaliveArgs and SidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput values.
// You can construct a concrete instance of `SidecarSpecInboundConnectionPoolTcpTcpKeepaliveInput` via:
//
//	SidecarSpecInboundConnectionPoolTcpTcpKeepaliveArgs{...}
type SidecarSpecInboundConnectionPoolTcpTcpKeepaliveInput interface {
	pulumi.Input

	ToSidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput() SidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput
	ToSidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutputWithContext(context.Context) SidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type SidecarSpecInboundConnectionPoolTcpTcpKeepaliveArgs struct {
	// The time duration between keep-alive probes.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes pulumi.IntPtrInput `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time pulumi.StringPtrInput `pulumi:"time"`
}

func (SidecarSpecInboundConnectionPoolTcpTcpKeepaliveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecInboundConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (i SidecarSpecInboundConnectionPoolTcpTcpKeepaliveArgs) ToSidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput() SidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput {
	return i.ToSidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutputWithContext(context.Background())
}

func (i SidecarSpecInboundConnectionPoolTcpTcpKeepaliveArgs) ToSidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput)
}

func (i SidecarSpecInboundConnectionPoolTcpTcpKeepaliveArgs) ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput() SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput {
	return i.ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Background())
}

func (i SidecarSpecInboundConnectionPoolTcpTcpKeepaliveArgs) ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput).ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx)
}

// SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrInput is an input type that accepts SidecarSpecInboundConnectionPoolTcpTcpKeepaliveArgs, SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtr and SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput values.
// You can construct a concrete instance of `SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrInput` via:
//
//	        SidecarSpecInboundConnectionPoolTcpTcpKeepaliveArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrInput interface {
	pulumi.Input

	ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput() SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput
	ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Context) SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput
}

type sidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrType SidecarSpecInboundConnectionPoolTcpTcpKeepaliveArgs

func SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtr(v *SidecarSpecInboundConnectionPoolTcpTcpKeepaliveArgs) SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrInput {
	return (*sidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrType)(v)
}

func (*sidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecInboundConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (i *sidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrType) ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput() SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput {
	return i.ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Background())
}

func (i *sidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrType) ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type SidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput struct{ *pulumi.OutputState }

func (SidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecInboundConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (o SidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput) ToSidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput() SidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput) ToSidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput) ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput() SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Background())
}

func (o SidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput) ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecInboundConnectionPoolTcpTcpKeepalive) *SidecarSpecInboundConnectionPoolTcpTcpKeepalive {
		return &v
	}).(SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput)
}

// The time duration between keep-alive probes.
func (o SidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolTcpTcpKeepalive) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o SidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolTcpTcpKeepalive) *int { return v.Probes }).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o SidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolTcpTcpKeepalive) *string { return v.Time }).(pulumi.StringPtrOutput)
}

type SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecInboundConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (o SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput) ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput() SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput) ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput) Elem() SidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolTcpTcpKeepalive) SidecarSpecInboundConnectionPoolTcpTcpKeepalive {
		if v != nil {
			return *v
		}
		var ret SidecarSpecInboundConnectionPoolTcpTcpKeepalive
		return ret
	}).(SidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput)
}

// The time duration between keep-alive probes.
func (o SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolTcpTcpKeepalive) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolTcpTcpKeepalive) *int {
		if v == nil {
			return nil
		}
		return v.Probes
	}).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolTcpTcpKeepalive) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatch struct {
	// The time duration between keep-alive probes.
	Interval *string `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes *int `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time *string `pulumi:"time"`
}

// SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchInput is an input type that accepts SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchArgs and SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput values.
// You can construct a concrete instance of `SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchInput` via:
//
//	SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchArgs{...}
type SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchInput interface {
	pulumi.Input

	ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput() SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput
	ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutputWithContext(context.Context) SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchArgs struct {
	// The time duration between keep-alive probes.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes pulumi.IntPtrInput `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time pulumi.StringPtrInput `pulumi:"time"`
}

func (SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (i SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchArgs) ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput() SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput {
	return i.ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutputWithContext(context.Background())
}

func (i SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchArgs) ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput)
}

func (i SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchArgs) ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput() SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return i.ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Background())
}

func (i SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchArgs) ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput).ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx)
}

// SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrInput is an input type that accepts SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchArgs, SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtr and SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput values.
// You can construct a concrete instance of `SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrInput` via:
//
//	        SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrInput interface {
	pulumi.Input

	ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput() SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput
	ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Context) SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput
}

type sidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrType SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchArgs

func SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtr(v *SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchArgs) SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrInput {
	return (*sidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrType)(v)
}

func (*sidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (i *sidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrType) ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput() SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return i.ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrType) ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput struct{ *pulumi.OutputState }

func (SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (o SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput) ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput() SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput) ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput) ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput() SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Background())
}

func (o SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput) ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatch) *SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatch {
		return &v
	}).(SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

// The time duration between keep-alive probes.
func (o SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatch) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatch) *int { return v.Probes }).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatch) *string { return v.Time }).(pulumi.StringPtrOutput)
}

type SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (o SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput) ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput() SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput) ToSidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o
}

func (o SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput) Elem() SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatch) SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatch {
		if v != nil {
			return *v
		}
		var ret SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatch
		return ret
	}).(SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput)
}

// The time duration between keep-alive probes.
func (o SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatch) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatch) *int {
		if v == nil {
			return nil
		}
		return v.Probes
	}).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatch) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

type SidecarSpecIngress struct {
	// The IP(IPv4 or IPv6) to which the listener should be bound.
	Bind *string `pulumi:"bind"`
	// The captureMode option dictates how traffic to the listener is expected to be captured (or not).
	//
	// Valid Options: DEFAULT, IPTABLES, NONE
	CaptureMode    *string                           `pulumi:"captureMode"`
	ConnectionPool *SidecarSpecIngressConnectionPool `pulumi:"connectionPool"`
	// The IP endpoint or Unix domain socket to which traffic should be forwarded to.
	DefaultEndpoint *string                 `pulumi:"defaultEndpoint"`
	Port            *SidecarSpecIngressPort `pulumi:"port"`
	Tls             *SidecarSpecIngressTls  `pulumi:"tls"`
}

// SidecarSpecIngressInput is an input type that accepts SidecarSpecIngressArgs and SidecarSpecIngressOutput values.
// You can construct a concrete instance of `SidecarSpecIngressInput` via:
//
//	SidecarSpecIngressArgs{...}
type SidecarSpecIngressInput interface {
	pulumi.Input

	ToSidecarSpecIngressOutput() SidecarSpecIngressOutput
	ToSidecarSpecIngressOutputWithContext(context.Context) SidecarSpecIngressOutput
}

type SidecarSpecIngressArgs struct {
	// The IP(IPv4 or IPv6) to which the listener should be bound.
	Bind pulumi.StringPtrInput `pulumi:"bind"`
	// The captureMode option dictates how traffic to the listener is expected to be captured (or not).
	//
	// Valid Options: DEFAULT, IPTABLES, NONE
	CaptureMode    pulumi.StringPtrInput                    `pulumi:"captureMode"`
	ConnectionPool SidecarSpecIngressConnectionPoolPtrInput `pulumi:"connectionPool"`
	// The IP endpoint or Unix domain socket to which traffic should be forwarded to.
	DefaultEndpoint pulumi.StringPtrInput          `pulumi:"defaultEndpoint"`
	Port            SidecarSpecIngressPortPtrInput `pulumi:"port"`
	Tls             SidecarSpecIngressTlsPtrInput  `pulumi:"tls"`
}

func (SidecarSpecIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngress)(nil)).Elem()
}

func (i SidecarSpecIngressArgs) ToSidecarSpecIngressOutput() SidecarSpecIngressOutput {
	return i.ToSidecarSpecIngressOutputWithContext(context.Background())
}

func (i SidecarSpecIngressArgs) ToSidecarSpecIngressOutputWithContext(ctx context.Context) SidecarSpecIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressOutput)
}

// SidecarSpecIngressArrayInput is an input type that accepts SidecarSpecIngressArray and SidecarSpecIngressArrayOutput values.
// You can construct a concrete instance of `SidecarSpecIngressArrayInput` via:
//
//	SidecarSpecIngressArray{ SidecarSpecIngressArgs{...} }
type SidecarSpecIngressArrayInput interface {
	pulumi.Input

	ToSidecarSpecIngressArrayOutput() SidecarSpecIngressArrayOutput
	ToSidecarSpecIngressArrayOutputWithContext(context.Context) SidecarSpecIngressArrayOutput
}

type SidecarSpecIngressArray []SidecarSpecIngressInput

func (SidecarSpecIngressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SidecarSpecIngress)(nil)).Elem()
}

func (i SidecarSpecIngressArray) ToSidecarSpecIngressArrayOutput() SidecarSpecIngressArrayOutput {
	return i.ToSidecarSpecIngressArrayOutputWithContext(context.Background())
}

func (i SidecarSpecIngressArray) ToSidecarSpecIngressArrayOutputWithContext(ctx context.Context) SidecarSpecIngressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressArrayOutput)
}

type SidecarSpecIngressOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngress)(nil)).Elem()
}

func (o SidecarSpecIngressOutput) ToSidecarSpecIngressOutput() SidecarSpecIngressOutput {
	return o
}

func (o SidecarSpecIngressOutput) ToSidecarSpecIngressOutputWithContext(ctx context.Context) SidecarSpecIngressOutput {
	return o
}

// The IP(IPv4 or IPv6) to which the listener should be bound.
func (o SidecarSpecIngressOutput) Bind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngress) *string { return v.Bind }).(pulumi.StringPtrOutput)
}

// The captureMode option dictates how traffic to the listener is expected to be captured (or not).
//
// Valid Options: DEFAULT, IPTABLES, NONE
func (o SidecarSpecIngressOutput) CaptureMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngress) *string { return v.CaptureMode }).(pulumi.StringPtrOutput)
}

func (o SidecarSpecIngressOutput) ConnectionPool() SidecarSpecIngressConnectionPoolPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngress) *SidecarSpecIngressConnectionPool { return v.ConnectionPool }).(SidecarSpecIngressConnectionPoolPtrOutput)
}

// The IP endpoint or Unix domain socket to which traffic should be forwarded to.
func (o SidecarSpecIngressOutput) DefaultEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngress) *string { return v.DefaultEndpoint }).(pulumi.StringPtrOutput)
}

func (o SidecarSpecIngressOutput) Port() SidecarSpecIngressPortPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngress) *SidecarSpecIngressPort { return v.Port }).(SidecarSpecIngressPortPtrOutput)
}

func (o SidecarSpecIngressOutput) Tls() SidecarSpecIngressTlsPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngress) *SidecarSpecIngressTls { return v.Tls }).(SidecarSpecIngressTlsPtrOutput)
}

type SidecarSpecIngressArrayOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SidecarSpecIngress)(nil)).Elem()
}

func (o SidecarSpecIngressArrayOutput) ToSidecarSpecIngressArrayOutput() SidecarSpecIngressArrayOutput {
	return o
}

func (o SidecarSpecIngressArrayOutput) ToSidecarSpecIngressArrayOutputWithContext(ctx context.Context) SidecarSpecIngressArrayOutput {
	return o
}

func (o SidecarSpecIngressArrayOutput) Index(i pulumi.IntInput) SidecarSpecIngressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SidecarSpecIngress {
		return vs[0].([]SidecarSpecIngress)[vs[1].(int)]
	}).(SidecarSpecIngressOutput)
}

// Settings controlling the volume of connections Envoy will accept from the network.
type SidecarSpecIngressConnectionPool struct {
	Http *SidecarSpecIngressConnectionPoolHttp `pulumi:"http"`
	Tcp  *SidecarSpecIngressConnectionPoolTcp  `pulumi:"tcp"`
}

// SidecarSpecIngressConnectionPoolInput is an input type that accepts SidecarSpecIngressConnectionPoolArgs and SidecarSpecIngressConnectionPoolOutput values.
// You can construct a concrete instance of `SidecarSpecIngressConnectionPoolInput` via:
//
//	SidecarSpecIngressConnectionPoolArgs{...}
type SidecarSpecIngressConnectionPoolInput interface {
	pulumi.Input

	ToSidecarSpecIngressConnectionPoolOutput() SidecarSpecIngressConnectionPoolOutput
	ToSidecarSpecIngressConnectionPoolOutputWithContext(context.Context) SidecarSpecIngressConnectionPoolOutput
}

// Settings controlling the volume of connections Envoy will accept from the network.
type SidecarSpecIngressConnectionPoolArgs struct {
	Http SidecarSpecIngressConnectionPoolHttpPtrInput `pulumi:"http"`
	Tcp  SidecarSpecIngressConnectionPoolTcpPtrInput  `pulumi:"tcp"`
}

func (SidecarSpecIngressConnectionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressConnectionPool)(nil)).Elem()
}

func (i SidecarSpecIngressConnectionPoolArgs) ToSidecarSpecIngressConnectionPoolOutput() SidecarSpecIngressConnectionPoolOutput {
	return i.ToSidecarSpecIngressConnectionPoolOutputWithContext(context.Background())
}

func (i SidecarSpecIngressConnectionPoolArgs) ToSidecarSpecIngressConnectionPoolOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolOutput)
}

func (i SidecarSpecIngressConnectionPoolArgs) ToSidecarSpecIngressConnectionPoolPtrOutput() SidecarSpecIngressConnectionPoolPtrOutput {
	return i.ToSidecarSpecIngressConnectionPoolPtrOutputWithContext(context.Background())
}

func (i SidecarSpecIngressConnectionPoolArgs) ToSidecarSpecIngressConnectionPoolPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolOutput).ToSidecarSpecIngressConnectionPoolPtrOutputWithContext(ctx)
}

// SidecarSpecIngressConnectionPoolPtrInput is an input type that accepts SidecarSpecIngressConnectionPoolArgs, SidecarSpecIngressConnectionPoolPtr and SidecarSpecIngressConnectionPoolPtrOutput values.
// You can construct a concrete instance of `SidecarSpecIngressConnectionPoolPtrInput` via:
//
//	        SidecarSpecIngressConnectionPoolArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecIngressConnectionPoolPtrInput interface {
	pulumi.Input

	ToSidecarSpecIngressConnectionPoolPtrOutput() SidecarSpecIngressConnectionPoolPtrOutput
	ToSidecarSpecIngressConnectionPoolPtrOutputWithContext(context.Context) SidecarSpecIngressConnectionPoolPtrOutput
}

type sidecarSpecIngressConnectionPoolPtrType SidecarSpecIngressConnectionPoolArgs

func SidecarSpecIngressConnectionPoolPtr(v *SidecarSpecIngressConnectionPoolArgs) SidecarSpecIngressConnectionPoolPtrInput {
	return (*sidecarSpecIngressConnectionPoolPtrType)(v)
}

func (*sidecarSpecIngressConnectionPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressConnectionPool)(nil)).Elem()
}

func (i *sidecarSpecIngressConnectionPoolPtrType) ToSidecarSpecIngressConnectionPoolPtrOutput() SidecarSpecIngressConnectionPoolPtrOutput {
	return i.ToSidecarSpecIngressConnectionPoolPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecIngressConnectionPoolPtrType) ToSidecarSpecIngressConnectionPoolPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolPtrOutput)
}

// Settings controlling the volume of connections Envoy will accept from the network.
type SidecarSpecIngressConnectionPoolOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressConnectionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressConnectionPool)(nil)).Elem()
}

func (o SidecarSpecIngressConnectionPoolOutput) ToSidecarSpecIngressConnectionPoolOutput() SidecarSpecIngressConnectionPoolOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolOutput) ToSidecarSpecIngressConnectionPoolOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolOutput) ToSidecarSpecIngressConnectionPoolPtrOutput() SidecarSpecIngressConnectionPoolPtrOutput {
	return o.ToSidecarSpecIngressConnectionPoolPtrOutputWithContext(context.Background())
}

func (o SidecarSpecIngressConnectionPoolOutput) ToSidecarSpecIngressConnectionPoolPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecIngressConnectionPool) *SidecarSpecIngressConnectionPool {
		return &v
	}).(SidecarSpecIngressConnectionPoolPtrOutput)
}

func (o SidecarSpecIngressConnectionPoolOutput) Http() SidecarSpecIngressConnectionPoolHttpPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPool) *SidecarSpecIngressConnectionPoolHttp { return v.Http }).(SidecarSpecIngressConnectionPoolHttpPtrOutput)
}

func (o SidecarSpecIngressConnectionPoolOutput) Tcp() SidecarSpecIngressConnectionPoolTcpPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPool) *SidecarSpecIngressConnectionPoolTcp { return v.Tcp }).(SidecarSpecIngressConnectionPoolTcpPtrOutput)
}

type SidecarSpecIngressConnectionPoolPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressConnectionPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressConnectionPool)(nil)).Elem()
}

func (o SidecarSpecIngressConnectionPoolPtrOutput) ToSidecarSpecIngressConnectionPoolPtrOutput() SidecarSpecIngressConnectionPoolPtrOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolPtrOutput) ToSidecarSpecIngressConnectionPoolPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolPtrOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolPtrOutput) Elem() SidecarSpecIngressConnectionPoolOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPool) SidecarSpecIngressConnectionPool {
		if v != nil {
			return *v
		}
		var ret SidecarSpecIngressConnectionPool
		return ret
	}).(SidecarSpecIngressConnectionPoolOutput)
}

func (o SidecarSpecIngressConnectionPoolPtrOutput) Http() SidecarSpecIngressConnectionPoolHttpPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPool) *SidecarSpecIngressConnectionPoolHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(SidecarSpecIngressConnectionPoolHttpPtrOutput)
}

func (o SidecarSpecIngressConnectionPoolPtrOutput) Tcp() SidecarSpecIngressConnectionPoolTcpPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPool) *SidecarSpecIngressConnectionPoolTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(SidecarSpecIngressConnectionPoolTcpPtrOutput)
}

// HTTP connection pool settings.
type SidecarSpecIngressConnectionPoolHttp struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy *string `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests *int `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests *int `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams *int `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection *int `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries *int `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol *bool `pulumi:"useClientProtocol"`
}

// SidecarSpecIngressConnectionPoolHttpInput is an input type that accepts SidecarSpecIngressConnectionPoolHttpArgs and SidecarSpecIngressConnectionPoolHttpOutput values.
// You can construct a concrete instance of `SidecarSpecIngressConnectionPoolHttpInput` via:
//
//	SidecarSpecIngressConnectionPoolHttpArgs{...}
type SidecarSpecIngressConnectionPoolHttpInput interface {
	pulumi.Input

	ToSidecarSpecIngressConnectionPoolHttpOutput() SidecarSpecIngressConnectionPoolHttpOutput
	ToSidecarSpecIngressConnectionPoolHttpOutputWithContext(context.Context) SidecarSpecIngressConnectionPoolHttpOutput
}

// HTTP connection pool settings.
type SidecarSpecIngressConnectionPoolHttpArgs struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy pulumi.StringPtrInput `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests pulumi.IntPtrInput `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests pulumi.IntPtrInput `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams pulumi.IntPtrInput `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection pulumi.IntPtrInput `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries pulumi.IntPtrInput `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol pulumi.BoolPtrInput `pulumi:"useClientProtocol"`
}

func (SidecarSpecIngressConnectionPoolHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressConnectionPoolHttp)(nil)).Elem()
}

func (i SidecarSpecIngressConnectionPoolHttpArgs) ToSidecarSpecIngressConnectionPoolHttpOutput() SidecarSpecIngressConnectionPoolHttpOutput {
	return i.ToSidecarSpecIngressConnectionPoolHttpOutputWithContext(context.Background())
}

func (i SidecarSpecIngressConnectionPoolHttpArgs) ToSidecarSpecIngressConnectionPoolHttpOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolHttpOutput)
}

func (i SidecarSpecIngressConnectionPoolHttpArgs) ToSidecarSpecIngressConnectionPoolHttpPtrOutput() SidecarSpecIngressConnectionPoolHttpPtrOutput {
	return i.ToSidecarSpecIngressConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (i SidecarSpecIngressConnectionPoolHttpArgs) ToSidecarSpecIngressConnectionPoolHttpPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolHttpOutput).ToSidecarSpecIngressConnectionPoolHttpPtrOutputWithContext(ctx)
}

// SidecarSpecIngressConnectionPoolHttpPtrInput is an input type that accepts SidecarSpecIngressConnectionPoolHttpArgs, SidecarSpecIngressConnectionPoolHttpPtr and SidecarSpecIngressConnectionPoolHttpPtrOutput values.
// You can construct a concrete instance of `SidecarSpecIngressConnectionPoolHttpPtrInput` via:
//
//	        SidecarSpecIngressConnectionPoolHttpArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecIngressConnectionPoolHttpPtrInput interface {
	pulumi.Input

	ToSidecarSpecIngressConnectionPoolHttpPtrOutput() SidecarSpecIngressConnectionPoolHttpPtrOutput
	ToSidecarSpecIngressConnectionPoolHttpPtrOutputWithContext(context.Context) SidecarSpecIngressConnectionPoolHttpPtrOutput
}

type sidecarSpecIngressConnectionPoolHttpPtrType SidecarSpecIngressConnectionPoolHttpArgs

func SidecarSpecIngressConnectionPoolHttpPtr(v *SidecarSpecIngressConnectionPoolHttpArgs) SidecarSpecIngressConnectionPoolHttpPtrInput {
	return (*sidecarSpecIngressConnectionPoolHttpPtrType)(v)
}

func (*sidecarSpecIngressConnectionPoolHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressConnectionPoolHttp)(nil)).Elem()
}

func (i *sidecarSpecIngressConnectionPoolHttpPtrType) ToSidecarSpecIngressConnectionPoolHttpPtrOutput() SidecarSpecIngressConnectionPoolHttpPtrOutput {
	return i.ToSidecarSpecIngressConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecIngressConnectionPoolHttpPtrType) ToSidecarSpecIngressConnectionPoolHttpPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolHttpPtrOutput)
}

// HTTP connection pool settings.
type SidecarSpecIngressConnectionPoolHttpOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressConnectionPoolHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressConnectionPoolHttp)(nil)).Elem()
}

func (o SidecarSpecIngressConnectionPoolHttpOutput) ToSidecarSpecIngressConnectionPoolHttpOutput() SidecarSpecIngressConnectionPoolHttpOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolHttpOutput) ToSidecarSpecIngressConnectionPoolHttpOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolHttpOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolHttpOutput) ToSidecarSpecIngressConnectionPoolHttpPtrOutput() SidecarSpecIngressConnectionPoolHttpPtrOutput {
	return o.ToSidecarSpecIngressConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (o SidecarSpecIngressConnectionPoolHttpOutput) ToSidecarSpecIngressConnectionPoolHttpPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecIngressConnectionPoolHttp) *SidecarSpecIngressConnectionPoolHttp {
		return &v
	}).(SidecarSpecIngressConnectionPoolHttpPtrOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o SidecarSpecIngressConnectionPoolHttpOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolHttp) *string { return v.H2UpgradePolicy }).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o SidecarSpecIngressConnectionPoolHttpOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolHttp) *int { return v.Http1MaxPendingRequests }).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o SidecarSpecIngressConnectionPoolHttpOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolHttp) *int { return v.Http2MaxRequests }).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o SidecarSpecIngressConnectionPoolHttpOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolHttp) *string { return v.IdleTimeout }).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o SidecarSpecIngressConnectionPoolHttpOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolHttp) *int { return v.MaxConcurrentStreams }).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o SidecarSpecIngressConnectionPoolHttpOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolHttp) *int { return v.MaxRequestsPerConnection }).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o SidecarSpecIngressConnectionPoolHttpOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolHttp) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o SidecarSpecIngressConnectionPoolHttpOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolHttp) *bool { return v.UseClientProtocol }).(pulumi.BoolPtrOutput)
}

type SidecarSpecIngressConnectionPoolHttpPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressConnectionPoolHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressConnectionPoolHttp)(nil)).Elem()
}

func (o SidecarSpecIngressConnectionPoolHttpPtrOutput) ToSidecarSpecIngressConnectionPoolHttpPtrOutput() SidecarSpecIngressConnectionPoolHttpPtrOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolHttpPtrOutput) ToSidecarSpecIngressConnectionPoolHttpPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolHttpPtrOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolHttpPtrOutput) Elem() SidecarSpecIngressConnectionPoolHttpOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolHttp) SidecarSpecIngressConnectionPoolHttp {
		if v != nil {
			return *v
		}
		var ret SidecarSpecIngressConnectionPoolHttp
		return ret
	}).(SidecarSpecIngressConnectionPoolHttpOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o SidecarSpecIngressConnectionPoolHttpPtrOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolHttp) *string {
		if v == nil {
			return nil
		}
		return v.H2UpgradePolicy
	}).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o SidecarSpecIngressConnectionPoolHttpPtrOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.Http1MaxPendingRequests
	}).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o SidecarSpecIngressConnectionPoolHttpPtrOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.Http2MaxRequests
	}).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o SidecarSpecIngressConnectionPoolHttpPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolHttp) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o SidecarSpecIngressConnectionPoolHttpPtrOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentStreams
	}).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o SidecarSpecIngressConnectionPoolHttpPtrOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestsPerConnection
	}).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o SidecarSpecIngressConnectionPoolHttpPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o SidecarSpecIngressConnectionPoolHttpPtrOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolHttp) *bool {
		if v == nil {
			return nil
		}
		return v.UseClientProtocol
	}).(pulumi.BoolPtrOutput)
}

// HTTP connection pool settings.
type SidecarSpecIngressConnectionPoolHttpPatch struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy *string `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests *int `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests *int `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams *int `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection *int `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries *int `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol *bool `pulumi:"useClientProtocol"`
}

// SidecarSpecIngressConnectionPoolHttpPatchInput is an input type that accepts SidecarSpecIngressConnectionPoolHttpPatchArgs and SidecarSpecIngressConnectionPoolHttpPatchOutput values.
// You can construct a concrete instance of `SidecarSpecIngressConnectionPoolHttpPatchInput` via:
//
//	SidecarSpecIngressConnectionPoolHttpPatchArgs{...}
type SidecarSpecIngressConnectionPoolHttpPatchInput interface {
	pulumi.Input

	ToSidecarSpecIngressConnectionPoolHttpPatchOutput() SidecarSpecIngressConnectionPoolHttpPatchOutput
	ToSidecarSpecIngressConnectionPoolHttpPatchOutputWithContext(context.Context) SidecarSpecIngressConnectionPoolHttpPatchOutput
}

// HTTP connection pool settings.
type SidecarSpecIngressConnectionPoolHttpPatchArgs struct {
	// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
	//
	// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
	H2UpgradePolicy pulumi.StringPtrInput `pulumi:"h2UpgradePolicy"`
	// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
	Http1MaxPendingRequests pulumi.IntPtrInput `pulumi:"http1MaxPendingRequests"`
	// Maximum number of active requests to a destination.
	Http2MaxRequests pulumi.IntPtrInput `pulumi:"http2MaxRequests"`
	// The idle timeout for upstream connection pool connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
	MaxConcurrentStreams pulumi.IntPtrInput `pulumi:"maxConcurrentStreams"`
	// Maximum number of requests per connection to a backend.
	MaxRequestsPerConnection pulumi.IntPtrInput `pulumi:"maxRequestsPerConnection"`
	// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
	MaxRetries pulumi.IntPtrInput `pulumi:"maxRetries"`
	// If set to true, client protocol will be preserved while initiating connection to backend.
	UseClientProtocol pulumi.BoolPtrInput `pulumi:"useClientProtocol"`
}

func (SidecarSpecIngressConnectionPoolHttpPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressConnectionPoolHttpPatch)(nil)).Elem()
}

func (i SidecarSpecIngressConnectionPoolHttpPatchArgs) ToSidecarSpecIngressConnectionPoolHttpPatchOutput() SidecarSpecIngressConnectionPoolHttpPatchOutput {
	return i.ToSidecarSpecIngressConnectionPoolHttpPatchOutputWithContext(context.Background())
}

func (i SidecarSpecIngressConnectionPoolHttpPatchArgs) ToSidecarSpecIngressConnectionPoolHttpPatchOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolHttpPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolHttpPatchOutput)
}

func (i SidecarSpecIngressConnectionPoolHttpPatchArgs) ToSidecarSpecIngressConnectionPoolHttpPatchPtrOutput() SidecarSpecIngressConnectionPoolHttpPatchPtrOutput {
	return i.ToSidecarSpecIngressConnectionPoolHttpPatchPtrOutputWithContext(context.Background())
}

func (i SidecarSpecIngressConnectionPoolHttpPatchArgs) ToSidecarSpecIngressConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolHttpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolHttpPatchOutput).ToSidecarSpecIngressConnectionPoolHttpPatchPtrOutputWithContext(ctx)
}

// SidecarSpecIngressConnectionPoolHttpPatchPtrInput is an input type that accepts SidecarSpecIngressConnectionPoolHttpPatchArgs, SidecarSpecIngressConnectionPoolHttpPatchPtr and SidecarSpecIngressConnectionPoolHttpPatchPtrOutput values.
// You can construct a concrete instance of `SidecarSpecIngressConnectionPoolHttpPatchPtrInput` via:
//
//	        SidecarSpecIngressConnectionPoolHttpPatchArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecIngressConnectionPoolHttpPatchPtrInput interface {
	pulumi.Input

	ToSidecarSpecIngressConnectionPoolHttpPatchPtrOutput() SidecarSpecIngressConnectionPoolHttpPatchPtrOutput
	ToSidecarSpecIngressConnectionPoolHttpPatchPtrOutputWithContext(context.Context) SidecarSpecIngressConnectionPoolHttpPatchPtrOutput
}

type sidecarSpecIngressConnectionPoolHttpPatchPtrType SidecarSpecIngressConnectionPoolHttpPatchArgs

func SidecarSpecIngressConnectionPoolHttpPatchPtr(v *SidecarSpecIngressConnectionPoolHttpPatchArgs) SidecarSpecIngressConnectionPoolHttpPatchPtrInput {
	return (*sidecarSpecIngressConnectionPoolHttpPatchPtrType)(v)
}

func (*sidecarSpecIngressConnectionPoolHttpPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressConnectionPoolHttpPatch)(nil)).Elem()
}

func (i *sidecarSpecIngressConnectionPoolHttpPatchPtrType) ToSidecarSpecIngressConnectionPoolHttpPatchPtrOutput() SidecarSpecIngressConnectionPoolHttpPatchPtrOutput {
	return i.ToSidecarSpecIngressConnectionPoolHttpPatchPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecIngressConnectionPoolHttpPatchPtrType) ToSidecarSpecIngressConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolHttpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolHttpPatchPtrOutput)
}

// HTTP connection pool settings.
type SidecarSpecIngressConnectionPoolHttpPatchOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressConnectionPoolHttpPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressConnectionPoolHttpPatch)(nil)).Elem()
}

func (o SidecarSpecIngressConnectionPoolHttpPatchOutput) ToSidecarSpecIngressConnectionPoolHttpPatchOutput() SidecarSpecIngressConnectionPoolHttpPatchOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolHttpPatchOutput) ToSidecarSpecIngressConnectionPoolHttpPatchOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolHttpPatchOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolHttpPatchOutput) ToSidecarSpecIngressConnectionPoolHttpPatchPtrOutput() SidecarSpecIngressConnectionPoolHttpPatchPtrOutput {
	return o.ToSidecarSpecIngressConnectionPoolHttpPatchPtrOutputWithContext(context.Background())
}

func (o SidecarSpecIngressConnectionPoolHttpPatchOutput) ToSidecarSpecIngressConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolHttpPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecIngressConnectionPoolHttpPatch) *SidecarSpecIngressConnectionPoolHttpPatch {
		return &v
	}).(SidecarSpecIngressConnectionPoolHttpPatchPtrOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o SidecarSpecIngressConnectionPoolHttpPatchOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolHttpPatch) *string { return v.H2UpgradePolicy }).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o SidecarSpecIngressConnectionPoolHttpPatchOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolHttpPatch) *int { return v.Http1MaxPendingRequests }).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o SidecarSpecIngressConnectionPoolHttpPatchOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolHttpPatch) *int { return v.Http2MaxRequests }).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o SidecarSpecIngressConnectionPoolHttpPatchOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolHttpPatch) *string { return v.IdleTimeout }).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o SidecarSpecIngressConnectionPoolHttpPatchOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolHttpPatch) *int { return v.MaxConcurrentStreams }).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o SidecarSpecIngressConnectionPoolHttpPatchOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolHttpPatch) *int { return v.MaxRequestsPerConnection }).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o SidecarSpecIngressConnectionPoolHttpPatchOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolHttpPatch) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o SidecarSpecIngressConnectionPoolHttpPatchOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolHttpPatch) *bool { return v.UseClientProtocol }).(pulumi.BoolPtrOutput)
}

type SidecarSpecIngressConnectionPoolHttpPatchPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressConnectionPoolHttpPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressConnectionPoolHttpPatch)(nil)).Elem()
}

func (o SidecarSpecIngressConnectionPoolHttpPatchPtrOutput) ToSidecarSpecIngressConnectionPoolHttpPatchPtrOutput() SidecarSpecIngressConnectionPoolHttpPatchPtrOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolHttpPatchPtrOutput) ToSidecarSpecIngressConnectionPoolHttpPatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolHttpPatchPtrOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolHttpPatchPtrOutput) Elem() SidecarSpecIngressConnectionPoolHttpPatchOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolHttpPatch) SidecarSpecIngressConnectionPoolHttpPatch {
		if v != nil {
			return *v
		}
		var ret SidecarSpecIngressConnectionPoolHttpPatch
		return ret
	}).(SidecarSpecIngressConnectionPoolHttpPatchOutput)
}

// Specify if http1.1 connection should be upgraded to http2 for the associated destination.
//
// Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
func (o SidecarSpecIngressConnectionPoolHttpPatchPtrOutput) H2UpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolHttpPatch) *string {
		if v == nil {
			return nil
		}
		return v.H2UpgradePolicy
	}).(pulumi.StringPtrOutput)
}

// Maximum number of requests that will be queued while waiting for a ready connection pool connection.
func (o SidecarSpecIngressConnectionPoolHttpPatchPtrOutput) Http1MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.Http1MaxPendingRequests
	}).(pulumi.IntPtrOutput)
}

// Maximum number of active requests to a destination.
func (o SidecarSpecIngressConnectionPoolHttpPatchPtrOutput) Http2MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.Http2MaxRequests
	}).(pulumi.IntPtrOutput)
}

// The idle timeout for upstream connection pool connections.
func (o SidecarSpecIngressConnectionPoolHttpPatchPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolHttpPatch) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection.
func (o SidecarSpecIngressConnectionPoolHttpPatchPtrOutput) MaxConcurrentStreams() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentStreams
	}).(pulumi.IntPtrOutput)
}

// Maximum number of requests per connection to a backend.
func (o SidecarSpecIngressConnectionPoolHttpPatchPtrOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestsPerConnection
	}).(pulumi.IntPtrOutput)
}

// Maximum number of retries that can be outstanding to all hosts in a cluster at a given time.
func (o SidecarSpecIngressConnectionPoolHttpPatchPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolHttpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// If set to true, client protocol will be preserved while initiating connection to backend.
func (o SidecarSpecIngressConnectionPoolHttpPatchPtrOutput) UseClientProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolHttpPatch) *bool {
		if v == nil {
			return nil
		}
		return v.UseClientProtocol
	}).(pulumi.BoolPtrOutput)
}

// Settings controlling the volume of connections Envoy will accept from the network.
type SidecarSpecIngressConnectionPoolPatch struct {
	Http *SidecarSpecIngressConnectionPoolHttpPatch `pulumi:"http"`
	Tcp  *SidecarSpecIngressConnectionPoolTcpPatch  `pulumi:"tcp"`
}

// SidecarSpecIngressConnectionPoolPatchInput is an input type that accepts SidecarSpecIngressConnectionPoolPatchArgs and SidecarSpecIngressConnectionPoolPatchOutput values.
// You can construct a concrete instance of `SidecarSpecIngressConnectionPoolPatchInput` via:
//
//	SidecarSpecIngressConnectionPoolPatchArgs{...}
type SidecarSpecIngressConnectionPoolPatchInput interface {
	pulumi.Input

	ToSidecarSpecIngressConnectionPoolPatchOutput() SidecarSpecIngressConnectionPoolPatchOutput
	ToSidecarSpecIngressConnectionPoolPatchOutputWithContext(context.Context) SidecarSpecIngressConnectionPoolPatchOutput
}

// Settings controlling the volume of connections Envoy will accept from the network.
type SidecarSpecIngressConnectionPoolPatchArgs struct {
	Http SidecarSpecIngressConnectionPoolHttpPatchPtrInput `pulumi:"http"`
	Tcp  SidecarSpecIngressConnectionPoolTcpPatchPtrInput  `pulumi:"tcp"`
}

func (SidecarSpecIngressConnectionPoolPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressConnectionPoolPatch)(nil)).Elem()
}

func (i SidecarSpecIngressConnectionPoolPatchArgs) ToSidecarSpecIngressConnectionPoolPatchOutput() SidecarSpecIngressConnectionPoolPatchOutput {
	return i.ToSidecarSpecIngressConnectionPoolPatchOutputWithContext(context.Background())
}

func (i SidecarSpecIngressConnectionPoolPatchArgs) ToSidecarSpecIngressConnectionPoolPatchOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolPatchOutput)
}

func (i SidecarSpecIngressConnectionPoolPatchArgs) ToSidecarSpecIngressConnectionPoolPatchPtrOutput() SidecarSpecIngressConnectionPoolPatchPtrOutput {
	return i.ToSidecarSpecIngressConnectionPoolPatchPtrOutputWithContext(context.Background())
}

func (i SidecarSpecIngressConnectionPoolPatchArgs) ToSidecarSpecIngressConnectionPoolPatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolPatchOutput).ToSidecarSpecIngressConnectionPoolPatchPtrOutputWithContext(ctx)
}

// SidecarSpecIngressConnectionPoolPatchPtrInput is an input type that accepts SidecarSpecIngressConnectionPoolPatchArgs, SidecarSpecIngressConnectionPoolPatchPtr and SidecarSpecIngressConnectionPoolPatchPtrOutput values.
// You can construct a concrete instance of `SidecarSpecIngressConnectionPoolPatchPtrInput` via:
//
//	        SidecarSpecIngressConnectionPoolPatchArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecIngressConnectionPoolPatchPtrInput interface {
	pulumi.Input

	ToSidecarSpecIngressConnectionPoolPatchPtrOutput() SidecarSpecIngressConnectionPoolPatchPtrOutput
	ToSidecarSpecIngressConnectionPoolPatchPtrOutputWithContext(context.Context) SidecarSpecIngressConnectionPoolPatchPtrOutput
}

type sidecarSpecIngressConnectionPoolPatchPtrType SidecarSpecIngressConnectionPoolPatchArgs

func SidecarSpecIngressConnectionPoolPatchPtr(v *SidecarSpecIngressConnectionPoolPatchArgs) SidecarSpecIngressConnectionPoolPatchPtrInput {
	return (*sidecarSpecIngressConnectionPoolPatchPtrType)(v)
}

func (*sidecarSpecIngressConnectionPoolPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressConnectionPoolPatch)(nil)).Elem()
}

func (i *sidecarSpecIngressConnectionPoolPatchPtrType) ToSidecarSpecIngressConnectionPoolPatchPtrOutput() SidecarSpecIngressConnectionPoolPatchPtrOutput {
	return i.ToSidecarSpecIngressConnectionPoolPatchPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecIngressConnectionPoolPatchPtrType) ToSidecarSpecIngressConnectionPoolPatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolPatchPtrOutput)
}

// Settings controlling the volume of connections Envoy will accept from the network.
type SidecarSpecIngressConnectionPoolPatchOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressConnectionPoolPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressConnectionPoolPatch)(nil)).Elem()
}

func (o SidecarSpecIngressConnectionPoolPatchOutput) ToSidecarSpecIngressConnectionPoolPatchOutput() SidecarSpecIngressConnectionPoolPatchOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolPatchOutput) ToSidecarSpecIngressConnectionPoolPatchOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolPatchOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolPatchOutput) ToSidecarSpecIngressConnectionPoolPatchPtrOutput() SidecarSpecIngressConnectionPoolPatchPtrOutput {
	return o.ToSidecarSpecIngressConnectionPoolPatchPtrOutputWithContext(context.Background())
}

func (o SidecarSpecIngressConnectionPoolPatchOutput) ToSidecarSpecIngressConnectionPoolPatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecIngressConnectionPoolPatch) *SidecarSpecIngressConnectionPoolPatch {
		return &v
	}).(SidecarSpecIngressConnectionPoolPatchPtrOutput)
}

func (o SidecarSpecIngressConnectionPoolPatchOutput) Http() SidecarSpecIngressConnectionPoolHttpPatchPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolPatch) *SidecarSpecIngressConnectionPoolHttpPatch {
		return v.Http
	}).(SidecarSpecIngressConnectionPoolHttpPatchPtrOutput)
}

func (o SidecarSpecIngressConnectionPoolPatchOutput) Tcp() SidecarSpecIngressConnectionPoolTcpPatchPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolPatch) *SidecarSpecIngressConnectionPoolTcpPatch { return v.Tcp }).(SidecarSpecIngressConnectionPoolTcpPatchPtrOutput)
}

type SidecarSpecIngressConnectionPoolPatchPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressConnectionPoolPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressConnectionPoolPatch)(nil)).Elem()
}

func (o SidecarSpecIngressConnectionPoolPatchPtrOutput) ToSidecarSpecIngressConnectionPoolPatchPtrOutput() SidecarSpecIngressConnectionPoolPatchPtrOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolPatchPtrOutput) ToSidecarSpecIngressConnectionPoolPatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolPatchPtrOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolPatchPtrOutput) Elem() SidecarSpecIngressConnectionPoolPatchOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolPatch) SidecarSpecIngressConnectionPoolPatch {
		if v != nil {
			return *v
		}
		var ret SidecarSpecIngressConnectionPoolPatch
		return ret
	}).(SidecarSpecIngressConnectionPoolPatchOutput)
}

func (o SidecarSpecIngressConnectionPoolPatchPtrOutput) Http() SidecarSpecIngressConnectionPoolHttpPatchPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolPatch) *SidecarSpecIngressConnectionPoolHttpPatch {
		if v == nil {
			return nil
		}
		return v.Http
	}).(SidecarSpecIngressConnectionPoolHttpPatchPtrOutput)
}

func (o SidecarSpecIngressConnectionPoolPatchPtrOutput) Tcp() SidecarSpecIngressConnectionPoolTcpPatchPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolPatch) *SidecarSpecIngressConnectionPoolTcpPatch {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(SidecarSpecIngressConnectionPoolTcpPatchPtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type SidecarSpecIngressConnectionPoolTcp struct {
	// TCP connection timeout.
	ConnectTimeout *string `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration *string `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections *int                                             `pulumi:"maxConnections"`
	TcpKeepalive   *SidecarSpecIngressConnectionPoolTcpTcpKeepalive `pulumi:"tcpKeepalive"`
}

// SidecarSpecIngressConnectionPoolTcpInput is an input type that accepts SidecarSpecIngressConnectionPoolTcpArgs and SidecarSpecIngressConnectionPoolTcpOutput values.
// You can construct a concrete instance of `SidecarSpecIngressConnectionPoolTcpInput` via:
//
//	SidecarSpecIngressConnectionPoolTcpArgs{...}
type SidecarSpecIngressConnectionPoolTcpInput interface {
	pulumi.Input

	ToSidecarSpecIngressConnectionPoolTcpOutput() SidecarSpecIngressConnectionPoolTcpOutput
	ToSidecarSpecIngressConnectionPoolTcpOutputWithContext(context.Context) SidecarSpecIngressConnectionPoolTcpOutput
}

// Settings common to both HTTP and TCP upstream connections.
type SidecarSpecIngressConnectionPoolTcpArgs struct {
	// TCP connection timeout.
	ConnectTimeout pulumi.StringPtrInput `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration pulumi.StringPtrInput `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections pulumi.IntPtrInput                                      `pulumi:"maxConnections"`
	TcpKeepalive   SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrInput `pulumi:"tcpKeepalive"`
}

func (SidecarSpecIngressConnectionPoolTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressConnectionPoolTcp)(nil)).Elem()
}

func (i SidecarSpecIngressConnectionPoolTcpArgs) ToSidecarSpecIngressConnectionPoolTcpOutput() SidecarSpecIngressConnectionPoolTcpOutput {
	return i.ToSidecarSpecIngressConnectionPoolTcpOutputWithContext(context.Background())
}

func (i SidecarSpecIngressConnectionPoolTcpArgs) ToSidecarSpecIngressConnectionPoolTcpOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolTcpOutput)
}

func (i SidecarSpecIngressConnectionPoolTcpArgs) ToSidecarSpecIngressConnectionPoolTcpPtrOutput() SidecarSpecIngressConnectionPoolTcpPtrOutput {
	return i.ToSidecarSpecIngressConnectionPoolTcpPtrOutputWithContext(context.Background())
}

func (i SidecarSpecIngressConnectionPoolTcpArgs) ToSidecarSpecIngressConnectionPoolTcpPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolTcpOutput).ToSidecarSpecIngressConnectionPoolTcpPtrOutputWithContext(ctx)
}

// SidecarSpecIngressConnectionPoolTcpPtrInput is an input type that accepts SidecarSpecIngressConnectionPoolTcpArgs, SidecarSpecIngressConnectionPoolTcpPtr and SidecarSpecIngressConnectionPoolTcpPtrOutput values.
// You can construct a concrete instance of `SidecarSpecIngressConnectionPoolTcpPtrInput` via:
//
//	        SidecarSpecIngressConnectionPoolTcpArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecIngressConnectionPoolTcpPtrInput interface {
	pulumi.Input

	ToSidecarSpecIngressConnectionPoolTcpPtrOutput() SidecarSpecIngressConnectionPoolTcpPtrOutput
	ToSidecarSpecIngressConnectionPoolTcpPtrOutputWithContext(context.Context) SidecarSpecIngressConnectionPoolTcpPtrOutput
}

type sidecarSpecIngressConnectionPoolTcpPtrType SidecarSpecIngressConnectionPoolTcpArgs

func SidecarSpecIngressConnectionPoolTcpPtr(v *SidecarSpecIngressConnectionPoolTcpArgs) SidecarSpecIngressConnectionPoolTcpPtrInput {
	return (*sidecarSpecIngressConnectionPoolTcpPtrType)(v)
}

func (*sidecarSpecIngressConnectionPoolTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressConnectionPoolTcp)(nil)).Elem()
}

func (i *sidecarSpecIngressConnectionPoolTcpPtrType) ToSidecarSpecIngressConnectionPoolTcpPtrOutput() SidecarSpecIngressConnectionPoolTcpPtrOutput {
	return i.ToSidecarSpecIngressConnectionPoolTcpPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecIngressConnectionPoolTcpPtrType) ToSidecarSpecIngressConnectionPoolTcpPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolTcpPtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type SidecarSpecIngressConnectionPoolTcpOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressConnectionPoolTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressConnectionPoolTcp)(nil)).Elem()
}

func (o SidecarSpecIngressConnectionPoolTcpOutput) ToSidecarSpecIngressConnectionPoolTcpOutput() SidecarSpecIngressConnectionPoolTcpOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolTcpOutput) ToSidecarSpecIngressConnectionPoolTcpOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolTcpOutput) ToSidecarSpecIngressConnectionPoolTcpPtrOutput() SidecarSpecIngressConnectionPoolTcpPtrOutput {
	return o.ToSidecarSpecIngressConnectionPoolTcpPtrOutputWithContext(context.Background())
}

func (o SidecarSpecIngressConnectionPoolTcpOutput) ToSidecarSpecIngressConnectionPoolTcpPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecIngressConnectionPoolTcp) *SidecarSpecIngressConnectionPoolTcp {
		return &v
	}).(SidecarSpecIngressConnectionPoolTcpPtrOutput)
}

// TCP connection timeout.
func (o SidecarSpecIngressConnectionPoolTcpOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolTcp) *string { return v.ConnectTimeout }).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o SidecarSpecIngressConnectionPoolTcpOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolTcp) *string { return v.IdleTimeout }).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o SidecarSpecIngressConnectionPoolTcpOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolTcp) *string { return v.MaxConnectionDuration }).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o SidecarSpecIngressConnectionPoolTcpOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolTcp) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

func (o SidecarSpecIngressConnectionPoolTcpOutput) TcpKeepalive() SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolTcp) *SidecarSpecIngressConnectionPoolTcpTcpKeepalive {
		return v.TcpKeepalive
	}).(SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput)
}

type SidecarSpecIngressConnectionPoolTcpPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressConnectionPoolTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressConnectionPoolTcp)(nil)).Elem()
}

func (o SidecarSpecIngressConnectionPoolTcpPtrOutput) ToSidecarSpecIngressConnectionPoolTcpPtrOutput() SidecarSpecIngressConnectionPoolTcpPtrOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolTcpPtrOutput) ToSidecarSpecIngressConnectionPoolTcpPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpPtrOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolTcpPtrOutput) Elem() SidecarSpecIngressConnectionPoolTcpOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolTcp) SidecarSpecIngressConnectionPoolTcp {
		if v != nil {
			return *v
		}
		var ret SidecarSpecIngressConnectionPoolTcp
		return ret
	}).(SidecarSpecIngressConnectionPoolTcpOutput)
}

// TCP connection timeout.
func (o SidecarSpecIngressConnectionPoolTcpPtrOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolTcp) *string {
		if v == nil {
			return nil
		}
		return v.ConnectTimeout
	}).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o SidecarSpecIngressConnectionPoolTcpPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolTcp) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o SidecarSpecIngressConnectionPoolTcpPtrOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolTcp) *string {
		if v == nil {
			return nil
		}
		return v.MaxConnectionDuration
	}).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o SidecarSpecIngressConnectionPoolTcpPtrOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolTcp) *int {
		if v == nil {
			return nil
		}
		return v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

func (o SidecarSpecIngressConnectionPoolTcpPtrOutput) TcpKeepalive() SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolTcp) *SidecarSpecIngressConnectionPoolTcpTcpKeepalive {
		if v == nil {
			return nil
		}
		return v.TcpKeepalive
	}).(SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type SidecarSpecIngressConnectionPoolTcpPatch struct {
	// TCP connection timeout.
	ConnectTimeout *string `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration *string `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections *int                                                  `pulumi:"maxConnections"`
	TcpKeepalive   *SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatch `pulumi:"tcpKeepalive"`
}

// SidecarSpecIngressConnectionPoolTcpPatchInput is an input type that accepts SidecarSpecIngressConnectionPoolTcpPatchArgs and SidecarSpecIngressConnectionPoolTcpPatchOutput values.
// You can construct a concrete instance of `SidecarSpecIngressConnectionPoolTcpPatchInput` via:
//
//	SidecarSpecIngressConnectionPoolTcpPatchArgs{...}
type SidecarSpecIngressConnectionPoolTcpPatchInput interface {
	pulumi.Input

	ToSidecarSpecIngressConnectionPoolTcpPatchOutput() SidecarSpecIngressConnectionPoolTcpPatchOutput
	ToSidecarSpecIngressConnectionPoolTcpPatchOutputWithContext(context.Context) SidecarSpecIngressConnectionPoolTcpPatchOutput
}

// Settings common to both HTTP and TCP upstream connections.
type SidecarSpecIngressConnectionPoolTcpPatchArgs struct {
	// TCP connection timeout.
	ConnectTimeout pulumi.StringPtrInput `pulumi:"connectTimeout"`
	// The idle timeout for TCP connections.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// The maximum duration of a connection.
	MaxConnectionDuration pulumi.StringPtrInput `pulumi:"maxConnectionDuration"`
	// Maximum number of HTTP1 /TCP connections to a destination host.
	MaxConnections pulumi.IntPtrInput                                           `pulumi:"maxConnections"`
	TcpKeepalive   SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrInput `pulumi:"tcpKeepalive"`
}

func (SidecarSpecIngressConnectionPoolTcpPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressConnectionPoolTcpPatch)(nil)).Elem()
}

func (i SidecarSpecIngressConnectionPoolTcpPatchArgs) ToSidecarSpecIngressConnectionPoolTcpPatchOutput() SidecarSpecIngressConnectionPoolTcpPatchOutput {
	return i.ToSidecarSpecIngressConnectionPoolTcpPatchOutputWithContext(context.Background())
}

func (i SidecarSpecIngressConnectionPoolTcpPatchArgs) ToSidecarSpecIngressConnectionPoolTcpPatchOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolTcpPatchOutput)
}

func (i SidecarSpecIngressConnectionPoolTcpPatchArgs) ToSidecarSpecIngressConnectionPoolTcpPatchPtrOutput() SidecarSpecIngressConnectionPoolTcpPatchPtrOutput {
	return i.ToSidecarSpecIngressConnectionPoolTcpPatchPtrOutputWithContext(context.Background())
}

func (i SidecarSpecIngressConnectionPoolTcpPatchArgs) ToSidecarSpecIngressConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolTcpPatchOutput).ToSidecarSpecIngressConnectionPoolTcpPatchPtrOutputWithContext(ctx)
}

// SidecarSpecIngressConnectionPoolTcpPatchPtrInput is an input type that accepts SidecarSpecIngressConnectionPoolTcpPatchArgs, SidecarSpecIngressConnectionPoolTcpPatchPtr and SidecarSpecIngressConnectionPoolTcpPatchPtrOutput values.
// You can construct a concrete instance of `SidecarSpecIngressConnectionPoolTcpPatchPtrInput` via:
//
//	        SidecarSpecIngressConnectionPoolTcpPatchArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecIngressConnectionPoolTcpPatchPtrInput interface {
	pulumi.Input

	ToSidecarSpecIngressConnectionPoolTcpPatchPtrOutput() SidecarSpecIngressConnectionPoolTcpPatchPtrOutput
	ToSidecarSpecIngressConnectionPoolTcpPatchPtrOutputWithContext(context.Context) SidecarSpecIngressConnectionPoolTcpPatchPtrOutput
}

type sidecarSpecIngressConnectionPoolTcpPatchPtrType SidecarSpecIngressConnectionPoolTcpPatchArgs

func SidecarSpecIngressConnectionPoolTcpPatchPtr(v *SidecarSpecIngressConnectionPoolTcpPatchArgs) SidecarSpecIngressConnectionPoolTcpPatchPtrInput {
	return (*sidecarSpecIngressConnectionPoolTcpPatchPtrType)(v)
}

func (*sidecarSpecIngressConnectionPoolTcpPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressConnectionPoolTcpPatch)(nil)).Elem()
}

func (i *sidecarSpecIngressConnectionPoolTcpPatchPtrType) ToSidecarSpecIngressConnectionPoolTcpPatchPtrOutput() SidecarSpecIngressConnectionPoolTcpPatchPtrOutput {
	return i.ToSidecarSpecIngressConnectionPoolTcpPatchPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecIngressConnectionPoolTcpPatchPtrType) ToSidecarSpecIngressConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolTcpPatchPtrOutput)
}

// Settings common to both HTTP and TCP upstream connections.
type SidecarSpecIngressConnectionPoolTcpPatchOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressConnectionPoolTcpPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressConnectionPoolTcpPatch)(nil)).Elem()
}

func (o SidecarSpecIngressConnectionPoolTcpPatchOutput) ToSidecarSpecIngressConnectionPoolTcpPatchOutput() SidecarSpecIngressConnectionPoolTcpPatchOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolTcpPatchOutput) ToSidecarSpecIngressConnectionPoolTcpPatchOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpPatchOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolTcpPatchOutput) ToSidecarSpecIngressConnectionPoolTcpPatchPtrOutput() SidecarSpecIngressConnectionPoolTcpPatchPtrOutput {
	return o.ToSidecarSpecIngressConnectionPoolTcpPatchPtrOutputWithContext(context.Background())
}

func (o SidecarSpecIngressConnectionPoolTcpPatchOutput) ToSidecarSpecIngressConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecIngressConnectionPoolTcpPatch) *SidecarSpecIngressConnectionPoolTcpPatch {
		return &v
	}).(SidecarSpecIngressConnectionPoolTcpPatchPtrOutput)
}

// TCP connection timeout.
func (o SidecarSpecIngressConnectionPoolTcpPatchOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolTcpPatch) *string { return v.ConnectTimeout }).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o SidecarSpecIngressConnectionPoolTcpPatchOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolTcpPatch) *string { return v.IdleTimeout }).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o SidecarSpecIngressConnectionPoolTcpPatchOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolTcpPatch) *string { return v.MaxConnectionDuration }).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o SidecarSpecIngressConnectionPoolTcpPatchOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolTcpPatch) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

func (o SidecarSpecIngressConnectionPoolTcpPatchOutput) TcpKeepalive() SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolTcpPatch) *SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatch {
		return v.TcpKeepalive
	}).(SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

type SidecarSpecIngressConnectionPoolTcpPatchPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressConnectionPoolTcpPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressConnectionPoolTcpPatch)(nil)).Elem()
}

func (o SidecarSpecIngressConnectionPoolTcpPatchPtrOutput) ToSidecarSpecIngressConnectionPoolTcpPatchPtrOutput() SidecarSpecIngressConnectionPoolTcpPatchPtrOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolTcpPatchPtrOutput) ToSidecarSpecIngressConnectionPoolTcpPatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpPatchPtrOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolTcpPatchPtrOutput) Elem() SidecarSpecIngressConnectionPoolTcpPatchOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolTcpPatch) SidecarSpecIngressConnectionPoolTcpPatch {
		if v != nil {
			return *v
		}
		var ret SidecarSpecIngressConnectionPoolTcpPatch
		return ret
	}).(SidecarSpecIngressConnectionPoolTcpPatchOutput)
}

// TCP connection timeout.
func (o SidecarSpecIngressConnectionPoolTcpPatchPtrOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolTcpPatch) *string {
		if v == nil {
			return nil
		}
		return v.ConnectTimeout
	}).(pulumi.StringPtrOutput)
}

// The idle timeout for TCP connections.
func (o SidecarSpecIngressConnectionPoolTcpPatchPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolTcpPatch) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// The maximum duration of a connection.
func (o SidecarSpecIngressConnectionPoolTcpPatchPtrOutput) MaxConnectionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolTcpPatch) *string {
		if v == nil {
			return nil
		}
		return v.MaxConnectionDuration
	}).(pulumi.StringPtrOutput)
}

// Maximum number of HTTP1 /TCP connections to a destination host.
func (o SidecarSpecIngressConnectionPoolTcpPatchPtrOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolTcpPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

func (o SidecarSpecIngressConnectionPoolTcpPatchPtrOutput) TcpKeepalive() SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolTcpPatch) *SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatch {
		if v == nil {
			return nil
		}
		return v.TcpKeepalive
	}).(SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type SidecarSpecIngressConnectionPoolTcpTcpKeepalive struct {
	// The time duration between keep-alive probes.
	Interval *string `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes *int `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time *string `pulumi:"time"`
}

// SidecarSpecIngressConnectionPoolTcpTcpKeepaliveInput is an input type that accepts SidecarSpecIngressConnectionPoolTcpTcpKeepaliveArgs and SidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput values.
// You can construct a concrete instance of `SidecarSpecIngressConnectionPoolTcpTcpKeepaliveInput` via:
//
//	SidecarSpecIngressConnectionPoolTcpTcpKeepaliveArgs{...}
type SidecarSpecIngressConnectionPoolTcpTcpKeepaliveInput interface {
	pulumi.Input

	ToSidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput() SidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput
	ToSidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutputWithContext(context.Context) SidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type SidecarSpecIngressConnectionPoolTcpTcpKeepaliveArgs struct {
	// The time duration between keep-alive probes.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes pulumi.IntPtrInput `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time pulumi.StringPtrInput `pulumi:"time"`
}

func (SidecarSpecIngressConnectionPoolTcpTcpKeepaliveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (i SidecarSpecIngressConnectionPoolTcpTcpKeepaliveArgs) ToSidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput() SidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput {
	return i.ToSidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutputWithContext(context.Background())
}

func (i SidecarSpecIngressConnectionPoolTcpTcpKeepaliveArgs) ToSidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput)
}

func (i SidecarSpecIngressConnectionPoolTcpTcpKeepaliveArgs) ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput() SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput {
	return i.ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Background())
}

func (i SidecarSpecIngressConnectionPoolTcpTcpKeepaliveArgs) ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput).ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx)
}

// SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrInput is an input type that accepts SidecarSpecIngressConnectionPoolTcpTcpKeepaliveArgs, SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtr and SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput values.
// You can construct a concrete instance of `SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrInput` via:
//
//	        SidecarSpecIngressConnectionPoolTcpTcpKeepaliveArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrInput interface {
	pulumi.Input

	ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput() SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput
	ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Context) SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput
}

type sidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrType SidecarSpecIngressConnectionPoolTcpTcpKeepaliveArgs

func SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtr(v *SidecarSpecIngressConnectionPoolTcpTcpKeepaliveArgs) SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrInput {
	return (*sidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrType)(v)
}

func (*sidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (i *sidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrType) ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput() SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput {
	return i.ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Background())
}

func (i *sidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrType) ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type SidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (o SidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput) ToSidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput() SidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput) ToSidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput) ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput() SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutputWithContext(context.Background())
}

func (o SidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput) ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecIngressConnectionPoolTcpTcpKeepalive) *SidecarSpecIngressConnectionPoolTcpTcpKeepalive {
		return &v
	}).(SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput)
}

// The time duration between keep-alive probes.
func (o SidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolTcpTcpKeepalive) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o SidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolTcpTcpKeepalive) *int { return v.Probes }).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o SidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolTcpTcpKeepalive) *string { return v.Time }).(pulumi.StringPtrOutput)
}

type SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressConnectionPoolTcpTcpKeepalive)(nil)).Elem()
}

func (o SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput) ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput() SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput) ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput) Elem() SidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolTcpTcpKeepalive) SidecarSpecIngressConnectionPoolTcpTcpKeepalive {
		if v != nil {
			return *v
		}
		var ret SidecarSpecIngressConnectionPoolTcpTcpKeepalive
		return ret
	}).(SidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput)
}

// The time duration between keep-alive probes.
func (o SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolTcpTcpKeepalive) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolTcpTcpKeepalive) *int {
		if v == nil {
			return nil
		}
		return v.Probes
	}).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolTcpTcpKeepalive) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatch struct {
	// The time duration between keep-alive probes.
	Interval *string `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes *int `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time *string `pulumi:"time"`
}

// SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchInput is an input type that accepts SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchArgs and SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput values.
// You can construct a concrete instance of `SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchInput` via:
//
//	SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchArgs{...}
type SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchInput interface {
	pulumi.Input

	ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput() SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput
	ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutputWithContext(context.Context) SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchArgs struct {
	// The time duration between keep-alive probes.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	Probes pulumi.IntPtrInput `pulumi:"probes"`
	// The time duration a connection needs to be idle before keep-alive probes start being sent.
	Time pulumi.StringPtrInput `pulumi:"time"`
}

func (SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (i SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchArgs) ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput() SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput {
	return i.ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutputWithContext(context.Background())
}

func (i SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchArgs) ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput)
}

func (i SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchArgs) ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput() SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return i.ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Background())
}

func (i SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchArgs) ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput).ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx)
}

// SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrInput is an input type that accepts SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchArgs, SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtr and SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput values.
// You can construct a concrete instance of `SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrInput` via:
//
//	        SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrInput interface {
	pulumi.Input

	ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput() SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput
	ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Context) SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput
}

type sidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrType SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchArgs

func SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtr(v *SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchArgs) SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrInput {
	return (*sidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrType)(v)
}

func (*sidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (i *sidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrType) ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput() SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return i.ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrType) ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
type SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (o SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput) ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput() SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput) ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput) ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput() SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(context.Background())
}

func (o SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput) ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatch) *SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatch {
		return &v
	}).(SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput)
}

// The time duration between keep-alive probes.
func (o SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatch) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatch) *int { return v.Probes }).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatch) *string { return v.Time }).(pulumi.StringPtrOutput)
}

type SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatch)(nil)).Elem()
}

func (o SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput) ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput() SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput) ToSidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput {
	return o
}

func (o SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput) Elem() SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatch) SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatch {
		if v != nil {
			return *v
		}
		var ret SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatch
		return ret
	}).(SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput)
}

// The time duration between keep-alive probes.
func (o SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatch) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Maximum number of keepalive probes to send without response before deciding the connection is dead.
func (o SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatch) *int {
		if v == nil {
			return nil
		}
		return v.Probes
	}).(pulumi.IntPtrOutput)
}

// The time duration a connection needs to be idle before keep-alive probes start being sent.
func (o SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatch) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

type SidecarSpecIngressPatch struct {
	// The IP(IPv4 or IPv6) to which the listener should be bound.
	Bind *string `pulumi:"bind"`
	// The captureMode option dictates how traffic to the listener is expected to be captured (or not).
	//
	// Valid Options: DEFAULT, IPTABLES, NONE
	CaptureMode    *string                                `pulumi:"captureMode"`
	ConnectionPool *SidecarSpecIngressConnectionPoolPatch `pulumi:"connectionPool"`
	// The IP endpoint or Unix domain socket to which traffic should be forwarded to.
	DefaultEndpoint *string                      `pulumi:"defaultEndpoint"`
	Port            *SidecarSpecIngressPortPatch `pulumi:"port"`
	Tls             *SidecarSpecIngressTlsPatch  `pulumi:"tls"`
}

// SidecarSpecIngressPatchInput is an input type that accepts SidecarSpecIngressPatchArgs and SidecarSpecIngressPatchOutput values.
// You can construct a concrete instance of `SidecarSpecIngressPatchInput` via:
//
//	SidecarSpecIngressPatchArgs{...}
type SidecarSpecIngressPatchInput interface {
	pulumi.Input

	ToSidecarSpecIngressPatchOutput() SidecarSpecIngressPatchOutput
	ToSidecarSpecIngressPatchOutputWithContext(context.Context) SidecarSpecIngressPatchOutput
}

type SidecarSpecIngressPatchArgs struct {
	// The IP(IPv4 or IPv6) to which the listener should be bound.
	Bind pulumi.StringPtrInput `pulumi:"bind"`
	// The captureMode option dictates how traffic to the listener is expected to be captured (or not).
	//
	// Valid Options: DEFAULT, IPTABLES, NONE
	CaptureMode    pulumi.StringPtrInput                         `pulumi:"captureMode"`
	ConnectionPool SidecarSpecIngressConnectionPoolPatchPtrInput `pulumi:"connectionPool"`
	// The IP endpoint or Unix domain socket to which traffic should be forwarded to.
	DefaultEndpoint pulumi.StringPtrInput               `pulumi:"defaultEndpoint"`
	Port            SidecarSpecIngressPortPatchPtrInput `pulumi:"port"`
	Tls             SidecarSpecIngressTlsPatchPtrInput  `pulumi:"tls"`
}

func (SidecarSpecIngressPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressPatch)(nil)).Elem()
}

func (i SidecarSpecIngressPatchArgs) ToSidecarSpecIngressPatchOutput() SidecarSpecIngressPatchOutput {
	return i.ToSidecarSpecIngressPatchOutputWithContext(context.Background())
}

func (i SidecarSpecIngressPatchArgs) ToSidecarSpecIngressPatchOutputWithContext(ctx context.Context) SidecarSpecIngressPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressPatchOutput)
}

// SidecarSpecIngressPatchArrayInput is an input type that accepts SidecarSpecIngressPatchArray and SidecarSpecIngressPatchArrayOutput values.
// You can construct a concrete instance of `SidecarSpecIngressPatchArrayInput` via:
//
//	SidecarSpecIngressPatchArray{ SidecarSpecIngressPatchArgs{...} }
type SidecarSpecIngressPatchArrayInput interface {
	pulumi.Input

	ToSidecarSpecIngressPatchArrayOutput() SidecarSpecIngressPatchArrayOutput
	ToSidecarSpecIngressPatchArrayOutputWithContext(context.Context) SidecarSpecIngressPatchArrayOutput
}

type SidecarSpecIngressPatchArray []SidecarSpecIngressPatchInput

func (SidecarSpecIngressPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SidecarSpecIngressPatch)(nil)).Elem()
}

func (i SidecarSpecIngressPatchArray) ToSidecarSpecIngressPatchArrayOutput() SidecarSpecIngressPatchArrayOutput {
	return i.ToSidecarSpecIngressPatchArrayOutputWithContext(context.Background())
}

func (i SidecarSpecIngressPatchArray) ToSidecarSpecIngressPatchArrayOutputWithContext(ctx context.Context) SidecarSpecIngressPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressPatchArrayOutput)
}

type SidecarSpecIngressPatchOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressPatch)(nil)).Elem()
}

func (o SidecarSpecIngressPatchOutput) ToSidecarSpecIngressPatchOutput() SidecarSpecIngressPatchOutput {
	return o
}

func (o SidecarSpecIngressPatchOutput) ToSidecarSpecIngressPatchOutputWithContext(ctx context.Context) SidecarSpecIngressPatchOutput {
	return o
}

// The IP(IPv4 or IPv6) to which the listener should be bound.
func (o SidecarSpecIngressPatchOutput) Bind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressPatch) *string { return v.Bind }).(pulumi.StringPtrOutput)
}

// The captureMode option dictates how traffic to the listener is expected to be captured (or not).
//
// Valid Options: DEFAULT, IPTABLES, NONE
func (o SidecarSpecIngressPatchOutput) CaptureMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressPatch) *string { return v.CaptureMode }).(pulumi.StringPtrOutput)
}

func (o SidecarSpecIngressPatchOutput) ConnectionPool() SidecarSpecIngressConnectionPoolPatchPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressPatch) *SidecarSpecIngressConnectionPoolPatch { return v.ConnectionPool }).(SidecarSpecIngressConnectionPoolPatchPtrOutput)
}

// The IP endpoint or Unix domain socket to which traffic should be forwarded to.
func (o SidecarSpecIngressPatchOutput) DefaultEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressPatch) *string { return v.DefaultEndpoint }).(pulumi.StringPtrOutput)
}

func (o SidecarSpecIngressPatchOutput) Port() SidecarSpecIngressPortPatchPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressPatch) *SidecarSpecIngressPortPatch { return v.Port }).(SidecarSpecIngressPortPatchPtrOutput)
}

func (o SidecarSpecIngressPatchOutput) Tls() SidecarSpecIngressTlsPatchPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressPatch) *SidecarSpecIngressTlsPatch { return v.Tls }).(SidecarSpecIngressTlsPatchPtrOutput)
}

type SidecarSpecIngressPatchArrayOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SidecarSpecIngressPatch)(nil)).Elem()
}

func (o SidecarSpecIngressPatchArrayOutput) ToSidecarSpecIngressPatchArrayOutput() SidecarSpecIngressPatchArrayOutput {
	return o
}

func (o SidecarSpecIngressPatchArrayOutput) ToSidecarSpecIngressPatchArrayOutputWithContext(ctx context.Context) SidecarSpecIngressPatchArrayOutput {
	return o
}

func (o SidecarSpecIngressPatchArrayOutput) Index(i pulumi.IntInput) SidecarSpecIngressPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SidecarSpecIngressPatch {
		return vs[0].([]SidecarSpecIngressPatch)[vs[1].(int)]
	}).(SidecarSpecIngressPatchOutput)
}

// The port associated with the listener.
type SidecarSpecIngressPort struct {
	// Label assigned to the port.
	Name *string `pulumi:"name"`
	// A valid non-negative integer port number.
	Number *int `pulumi:"number"`
	// The protocol exposed on the port.
	Protocol   *string `pulumi:"protocol"`
	TargetPort *int    `pulumi:"targetPort"`
}

// SidecarSpecIngressPortInput is an input type that accepts SidecarSpecIngressPortArgs and SidecarSpecIngressPortOutput values.
// You can construct a concrete instance of `SidecarSpecIngressPortInput` via:
//
//	SidecarSpecIngressPortArgs{...}
type SidecarSpecIngressPortInput interface {
	pulumi.Input

	ToSidecarSpecIngressPortOutput() SidecarSpecIngressPortOutput
	ToSidecarSpecIngressPortOutputWithContext(context.Context) SidecarSpecIngressPortOutput
}

// The port associated with the listener.
type SidecarSpecIngressPortArgs struct {
	// Label assigned to the port.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A valid non-negative integer port number.
	Number pulumi.IntPtrInput `pulumi:"number"`
	// The protocol exposed on the port.
	Protocol   pulumi.StringPtrInput `pulumi:"protocol"`
	TargetPort pulumi.IntPtrInput    `pulumi:"targetPort"`
}

func (SidecarSpecIngressPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressPort)(nil)).Elem()
}

func (i SidecarSpecIngressPortArgs) ToSidecarSpecIngressPortOutput() SidecarSpecIngressPortOutput {
	return i.ToSidecarSpecIngressPortOutputWithContext(context.Background())
}

func (i SidecarSpecIngressPortArgs) ToSidecarSpecIngressPortOutputWithContext(ctx context.Context) SidecarSpecIngressPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressPortOutput)
}

func (i SidecarSpecIngressPortArgs) ToSidecarSpecIngressPortPtrOutput() SidecarSpecIngressPortPtrOutput {
	return i.ToSidecarSpecIngressPortPtrOutputWithContext(context.Background())
}

func (i SidecarSpecIngressPortArgs) ToSidecarSpecIngressPortPtrOutputWithContext(ctx context.Context) SidecarSpecIngressPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressPortOutput).ToSidecarSpecIngressPortPtrOutputWithContext(ctx)
}

// SidecarSpecIngressPortPtrInput is an input type that accepts SidecarSpecIngressPortArgs, SidecarSpecIngressPortPtr and SidecarSpecIngressPortPtrOutput values.
// You can construct a concrete instance of `SidecarSpecIngressPortPtrInput` via:
//
//	        SidecarSpecIngressPortArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecIngressPortPtrInput interface {
	pulumi.Input

	ToSidecarSpecIngressPortPtrOutput() SidecarSpecIngressPortPtrOutput
	ToSidecarSpecIngressPortPtrOutputWithContext(context.Context) SidecarSpecIngressPortPtrOutput
}

type sidecarSpecIngressPortPtrType SidecarSpecIngressPortArgs

func SidecarSpecIngressPortPtr(v *SidecarSpecIngressPortArgs) SidecarSpecIngressPortPtrInput {
	return (*sidecarSpecIngressPortPtrType)(v)
}

func (*sidecarSpecIngressPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressPort)(nil)).Elem()
}

func (i *sidecarSpecIngressPortPtrType) ToSidecarSpecIngressPortPtrOutput() SidecarSpecIngressPortPtrOutput {
	return i.ToSidecarSpecIngressPortPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecIngressPortPtrType) ToSidecarSpecIngressPortPtrOutputWithContext(ctx context.Context) SidecarSpecIngressPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressPortPtrOutput)
}

// The port associated with the listener.
type SidecarSpecIngressPortOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressPort)(nil)).Elem()
}

func (o SidecarSpecIngressPortOutput) ToSidecarSpecIngressPortOutput() SidecarSpecIngressPortOutput {
	return o
}

func (o SidecarSpecIngressPortOutput) ToSidecarSpecIngressPortOutputWithContext(ctx context.Context) SidecarSpecIngressPortOutput {
	return o
}

func (o SidecarSpecIngressPortOutput) ToSidecarSpecIngressPortPtrOutput() SidecarSpecIngressPortPtrOutput {
	return o.ToSidecarSpecIngressPortPtrOutputWithContext(context.Background())
}

func (o SidecarSpecIngressPortOutput) ToSidecarSpecIngressPortPtrOutputWithContext(ctx context.Context) SidecarSpecIngressPortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecIngressPort) *SidecarSpecIngressPort {
		return &v
	}).(SidecarSpecIngressPortPtrOutput)
}

// Label assigned to the port.
func (o SidecarSpecIngressPortOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressPort) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A valid non-negative integer port number.
func (o SidecarSpecIngressPortOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressPort) *int { return v.Number }).(pulumi.IntPtrOutput)
}

// The protocol exposed on the port.
func (o SidecarSpecIngressPortOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressPort) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o SidecarSpecIngressPortOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressPort) *int { return v.TargetPort }).(pulumi.IntPtrOutput)
}

type SidecarSpecIngressPortPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressPort)(nil)).Elem()
}

func (o SidecarSpecIngressPortPtrOutput) ToSidecarSpecIngressPortPtrOutput() SidecarSpecIngressPortPtrOutput {
	return o
}

func (o SidecarSpecIngressPortPtrOutput) ToSidecarSpecIngressPortPtrOutputWithContext(ctx context.Context) SidecarSpecIngressPortPtrOutput {
	return o
}

func (o SidecarSpecIngressPortPtrOutput) Elem() SidecarSpecIngressPortOutput {
	return o.ApplyT(func(v *SidecarSpecIngressPort) SidecarSpecIngressPort {
		if v != nil {
			return *v
		}
		var ret SidecarSpecIngressPort
		return ret
	}).(SidecarSpecIngressPortOutput)
}

// Label assigned to the port.
func (o SidecarSpecIngressPortPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressPort) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A valid non-negative integer port number.
func (o SidecarSpecIngressPortPtrOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressPort) *int {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.IntPtrOutput)
}

// The protocol exposed on the port.
func (o SidecarSpecIngressPortPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressPort) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

func (o SidecarSpecIngressPortPtrOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressPort) *int {
		if v == nil {
			return nil
		}
		return v.TargetPort
	}).(pulumi.IntPtrOutput)
}

// The port associated with the listener.
type SidecarSpecIngressPortPatch struct {
	// Label assigned to the port.
	Name *string `pulumi:"name"`
	// A valid non-negative integer port number.
	Number *int `pulumi:"number"`
	// The protocol exposed on the port.
	Protocol   *string `pulumi:"protocol"`
	TargetPort *int    `pulumi:"targetPort"`
}

// SidecarSpecIngressPortPatchInput is an input type that accepts SidecarSpecIngressPortPatchArgs and SidecarSpecIngressPortPatchOutput values.
// You can construct a concrete instance of `SidecarSpecIngressPortPatchInput` via:
//
//	SidecarSpecIngressPortPatchArgs{...}
type SidecarSpecIngressPortPatchInput interface {
	pulumi.Input

	ToSidecarSpecIngressPortPatchOutput() SidecarSpecIngressPortPatchOutput
	ToSidecarSpecIngressPortPatchOutputWithContext(context.Context) SidecarSpecIngressPortPatchOutput
}

// The port associated with the listener.
type SidecarSpecIngressPortPatchArgs struct {
	// Label assigned to the port.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A valid non-negative integer port number.
	Number pulumi.IntPtrInput `pulumi:"number"`
	// The protocol exposed on the port.
	Protocol   pulumi.StringPtrInput `pulumi:"protocol"`
	TargetPort pulumi.IntPtrInput    `pulumi:"targetPort"`
}

func (SidecarSpecIngressPortPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressPortPatch)(nil)).Elem()
}

func (i SidecarSpecIngressPortPatchArgs) ToSidecarSpecIngressPortPatchOutput() SidecarSpecIngressPortPatchOutput {
	return i.ToSidecarSpecIngressPortPatchOutputWithContext(context.Background())
}

func (i SidecarSpecIngressPortPatchArgs) ToSidecarSpecIngressPortPatchOutputWithContext(ctx context.Context) SidecarSpecIngressPortPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressPortPatchOutput)
}

func (i SidecarSpecIngressPortPatchArgs) ToSidecarSpecIngressPortPatchPtrOutput() SidecarSpecIngressPortPatchPtrOutput {
	return i.ToSidecarSpecIngressPortPatchPtrOutputWithContext(context.Background())
}

func (i SidecarSpecIngressPortPatchArgs) ToSidecarSpecIngressPortPatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressPortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressPortPatchOutput).ToSidecarSpecIngressPortPatchPtrOutputWithContext(ctx)
}

// SidecarSpecIngressPortPatchPtrInput is an input type that accepts SidecarSpecIngressPortPatchArgs, SidecarSpecIngressPortPatchPtr and SidecarSpecIngressPortPatchPtrOutput values.
// You can construct a concrete instance of `SidecarSpecIngressPortPatchPtrInput` via:
//
//	        SidecarSpecIngressPortPatchArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecIngressPortPatchPtrInput interface {
	pulumi.Input

	ToSidecarSpecIngressPortPatchPtrOutput() SidecarSpecIngressPortPatchPtrOutput
	ToSidecarSpecIngressPortPatchPtrOutputWithContext(context.Context) SidecarSpecIngressPortPatchPtrOutput
}

type sidecarSpecIngressPortPatchPtrType SidecarSpecIngressPortPatchArgs

func SidecarSpecIngressPortPatchPtr(v *SidecarSpecIngressPortPatchArgs) SidecarSpecIngressPortPatchPtrInput {
	return (*sidecarSpecIngressPortPatchPtrType)(v)
}

func (*sidecarSpecIngressPortPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressPortPatch)(nil)).Elem()
}

func (i *sidecarSpecIngressPortPatchPtrType) ToSidecarSpecIngressPortPatchPtrOutput() SidecarSpecIngressPortPatchPtrOutput {
	return i.ToSidecarSpecIngressPortPatchPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecIngressPortPatchPtrType) ToSidecarSpecIngressPortPatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressPortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressPortPatchPtrOutput)
}

// The port associated with the listener.
type SidecarSpecIngressPortPatchOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressPortPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressPortPatch)(nil)).Elem()
}

func (o SidecarSpecIngressPortPatchOutput) ToSidecarSpecIngressPortPatchOutput() SidecarSpecIngressPortPatchOutput {
	return o
}

func (o SidecarSpecIngressPortPatchOutput) ToSidecarSpecIngressPortPatchOutputWithContext(ctx context.Context) SidecarSpecIngressPortPatchOutput {
	return o
}

func (o SidecarSpecIngressPortPatchOutput) ToSidecarSpecIngressPortPatchPtrOutput() SidecarSpecIngressPortPatchPtrOutput {
	return o.ToSidecarSpecIngressPortPatchPtrOutputWithContext(context.Background())
}

func (o SidecarSpecIngressPortPatchOutput) ToSidecarSpecIngressPortPatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressPortPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecIngressPortPatch) *SidecarSpecIngressPortPatch {
		return &v
	}).(SidecarSpecIngressPortPatchPtrOutput)
}

// Label assigned to the port.
func (o SidecarSpecIngressPortPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressPortPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A valid non-negative integer port number.
func (o SidecarSpecIngressPortPatchOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressPortPatch) *int { return v.Number }).(pulumi.IntPtrOutput)
}

// The protocol exposed on the port.
func (o SidecarSpecIngressPortPatchOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressPortPatch) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o SidecarSpecIngressPortPatchOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressPortPatch) *int { return v.TargetPort }).(pulumi.IntPtrOutput)
}

type SidecarSpecIngressPortPatchPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressPortPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressPortPatch)(nil)).Elem()
}

func (o SidecarSpecIngressPortPatchPtrOutput) ToSidecarSpecIngressPortPatchPtrOutput() SidecarSpecIngressPortPatchPtrOutput {
	return o
}

func (o SidecarSpecIngressPortPatchPtrOutput) ToSidecarSpecIngressPortPatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressPortPatchPtrOutput {
	return o
}

func (o SidecarSpecIngressPortPatchPtrOutput) Elem() SidecarSpecIngressPortPatchOutput {
	return o.ApplyT(func(v *SidecarSpecIngressPortPatch) SidecarSpecIngressPortPatch {
		if v != nil {
			return *v
		}
		var ret SidecarSpecIngressPortPatch
		return ret
	}).(SidecarSpecIngressPortPatchOutput)
}

// Label assigned to the port.
func (o SidecarSpecIngressPortPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressPortPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A valid non-negative integer port number.
func (o SidecarSpecIngressPortPatchPtrOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressPortPatch) *int {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.IntPtrOutput)
}

// The protocol exposed on the port.
func (o SidecarSpecIngressPortPatchPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressPortPatch) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

func (o SidecarSpecIngressPortPatchPtrOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressPortPatch) *int {
		if v == nil {
			return nil
		}
		return v.TargetPort
	}).(pulumi.IntPtrOutput)
}

// Set of TLS related options that will enable TLS termination on the sidecar for requests originating from outside the mesh.
type SidecarSpecIngressTls struct {
	// REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
	CaCertificates *string `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented client side certificate.
	CaCrl *string `pulumi:"caCrl"`
	// Optional: If specified, only support the specified cipher list.
	CipherSuites []string `pulumi:"cipherSuites"`
	// For gateways running on Kubernetes, the name of the secret that holds the TLS certs including the CA certificates.
	CredentialName *string `pulumi:"credentialName"`
	// If set to true, the load balancer will send a 301 redirect for all http connections, asking the clients to use HTTPS.
	HttpsRedirect *bool `pulumi:"httpsRedirect"`
	// Optional: Maximum TLS protocol version.
	//
	// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
	MaxProtocolVersion *string `pulumi:"maxProtocolVersion"`
	// Optional: Minimum TLS protocol version.
	//
	// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
	MinProtocolVersion *string `pulumi:"minProtocolVersion"`
	// Optional: Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: PASSTHROUGH, SIMPLE, MUTUAL, AUTO_PASSTHROUGH, ISTIO_MUTUAL, OPTIONAL_MUTUAL
	Mode *string `pulumi:"mode"`
	// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
	PrivateKey *string `pulumi:"privateKey"`
	// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
	ServerCertificate *string `pulumi:"serverCertificate"`
	// A list of alternate names to verify the subject identity in the certificate presented by the client.
	SubjectAltNames []string `pulumi:"subjectAltNames"`
	// An optional list of hex-encoded SHA-256 hashes of the authorized client certificates.
	VerifyCertificateHash []string `pulumi:"verifyCertificateHash"`
	// An optional list of base64-encoded SHA-256 hashes of the SPKIs of authorized client certificates.
	VerifyCertificateSpki []string `pulumi:"verifyCertificateSpki"`
}

// SidecarSpecIngressTlsInput is an input type that accepts SidecarSpecIngressTlsArgs and SidecarSpecIngressTlsOutput values.
// You can construct a concrete instance of `SidecarSpecIngressTlsInput` via:
//
//	SidecarSpecIngressTlsArgs{...}
type SidecarSpecIngressTlsInput interface {
	pulumi.Input

	ToSidecarSpecIngressTlsOutput() SidecarSpecIngressTlsOutput
	ToSidecarSpecIngressTlsOutputWithContext(context.Context) SidecarSpecIngressTlsOutput
}

// Set of TLS related options that will enable TLS termination on the sidecar for requests originating from outside the mesh.
type SidecarSpecIngressTlsArgs struct {
	// REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
	CaCertificates pulumi.StringPtrInput `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented client side certificate.
	CaCrl pulumi.StringPtrInput `pulumi:"caCrl"`
	// Optional: If specified, only support the specified cipher list.
	CipherSuites pulumi.StringArrayInput `pulumi:"cipherSuites"`
	// For gateways running on Kubernetes, the name of the secret that holds the TLS certs including the CA certificates.
	CredentialName pulumi.StringPtrInput `pulumi:"credentialName"`
	// If set to true, the load balancer will send a 301 redirect for all http connections, asking the clients to use HTTPS.
	HttpsRedirect pulumi.BoolPtrInput `pulumi:"httpsRedirect"`
	// Optional: Maximum TLS protocol version.
	//
	// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
	MaxProtocolVersion pulumi.StringPtrInput `pulumi:"maxProtocolVersion"`
	// Optional: Minimum TLS protocol version.
	//
	// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
	MinProtocolVersion pulumi.StringPtrInput `pulumi:"minProtocolVersion"`
	// Optional: Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: PASSTHROUGH, SIMPLE, MUTUAL, AUTO_PASSTHROUGH, ISTIO_MUTUAL, OPTIONAL_MUTUAL
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
	// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
	ServerCertificate pulumi.StringPtrInput `pulumi:"serverCertificate"`
	// A list of alternate names to verify the subject identity in the certificate presented by the client.
	SubjectAltNames pulumi.StringArrayInput `pulumi:"subjectAltNames"`
	// An optional list of hex-encoded SHA-256 hashes of the authorized client certificates.
	VerifyCertificateHash pulumi.StringArrayInput `pulumi:"verifyCertificateHash"`
	// An optional list of base64-encoded SHA-256 hashes of the SPKIs of authorized client certificates.
	VerifyCertificateSpki pulumi.StringArrayInput `pulumi:"verifyCertificateSpki"`
}

func (SidecarSpecIngressTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressTls)(nil)).Elem()
}

func (i SidecarSpecIngressTlsArgs) ToSidecarSpecIngressTlsOutput() SidecarSpecIngressTlsOutput {
	return i.ToSidecarSpecIngressTlsOutputWithContext(context.Background())
}

func (i SidecarSpecIngressTlsArgs) ToSidecarSpecIngressTlsOutputWithContext(ctx context.Context) SidecarSpecIngressTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressTlsOutput)
}

func (i SidecarSpecIngressTlsArgs) ToSidecarSpecIngressTlsPtrOutput() SidecarSpecIngressTlsPtrOutput {
	return i.ToSidecarSpecIngressTlsPtrOutputWithContext(context.Background())
}

func (i SidecarSpecIngressTlsArgs) ToSidecarSpecIngressTlsPtrOutputWithContext(ctx context.Context) SidecarSpecIngressTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressTlsOutput).ToSidecarSpecIngressTlsPtrOutputWithContext(ctx)
}

// SidecarSpecIngressTlsPtrInput is an input type that accepts SidecarSpecIngressTlsArgs, SidecarSpecIngressTlsPtr and SidecarSpecIngressTlsPtrOutput values.
// You can construct a concrete instance of `SidecarSpecIngressTlsPtrInput` via:
//
//	        SidecarSpecIngressTlsArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecIngressTlsPtrInput interface {
	pulumi.Input

	ToSidecarSpecIngressTlsPtrOutput() SidecarSpecIngressTlsPtrOutput
	ToSidecarSpecIngressTlsPtrOutputWithContext(context.Context) SidecarSpecIngressTlsPtrOutput
}

type sidecarSpecIngressTlsPtrType SidecarSpecIngressTlsArgs

func SidecarSpecIngressTlsPtr(v *SidecarSpecIngressTlsArgs) SidecarSpecIngressTlsPtrInput {
	return (*sidecarSpecIngressTlsPtrType)(v)
}

func (*sidecarSpecIngressTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressTls)(nil)).Elem()
}

func (i *sidecarSpecIngressTlsPtrType) ToSidecarSpecIngressTlsPtrOutput() SidecarSpecIngressTlsPtrOutput {
	return i.ToSidecarSpecIngressTlsPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecIngressTlsPtrType) ToSidecarSpecIngressTlsPtrOutputWithContext(ctx context.Context) SidecarSpecIngressTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressTlsPtrOutput)
}

// Set of TLS related options that will enable TLS termination on the sidecar for requests originating from outside the mesh.
type SidecarSpecIngressTlsOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressTls)(nil)).Elem()
}

func (o SidecarSpecIngressTlsOutput) ToSidecarSpecIngressTlsOutput() SidecarSpecIngressTlsOutput {
	return o
}

func (o SidecarSpecIngressTlsOutput) ToSidecarSpecIngressTlsOutputWithContext(ctx context.Context) SidecarSpecIngressTlsOutput {
	return o
}

func (o SidecarSpecIngressTlsOutput) ToSidecarSpecIngressTlsPtrOutput() SidecarSpecIngressTlsPtrOutput {
	return o.ToSidecarSpecIngressTlsPtrOutputWithContext(context.Background())
}

func (o SidecarSpecIngressTlsOutput) ToSidecarSpecIngressTlsPtrOutputWithContext(ctx context.Context) SidecarSpecIngressTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecIngressTls) *SidecarSpecIngressTls {
		return &v
	}).(SidecarSpecIngressTlsPtrOutput)
}

// REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
func (o SidecarSpecIngressTlsOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressTls) *string { return v.CaCertificates }).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented client side certificate.
func (o SidecarSpecIngressTlsOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressTls) *string { return v.CaCrl }).(pulumi.StringPtrOutput)
}

// Optional: If specified, only support the specified cipher list.
func (o SidecarSpecIngressTlsOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SidecarSpecIngressTls) []string { return v.CipherSuites }).(pulumi.StringArrayOutput)
}

// For gateways running on Kubernetes, the name of the secret that holds the TLS certs including the CA certificates.
func (o SidecarSpecIngressTlsOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressTls) *string { return v.CredentialName }).(pulumi.StringPtrOutput)
}

// If set to true, the load balancer will send a 301 redirect for all http connections, asking the clients to use HTTPS.
func (o SidecarSpecIngressTlsOutput) HttpsRedirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressTls) *bool { return v.HttpsRedirect }).(pulumi.BoolPtrOutput)
}

// Optional: Maximum TLS protocol version.
//
// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
func (o SidecarSpecIngressTlsOutput) MaxProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressTls) *string { return v.MaxProtocolVersion }).(pulumi.StringPtrOutput)
}

// Optional: Minimum TLS protocol version.
//
// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
func (o SidecarSpecIngressTlsOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressTls) *string { return v.MinProtocolVersion }).(pulumi.StringPtrOutput)
}

// Optional: Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: PASSTHROUGH, SIMPLE, MUTUAL, AUTO_PASSTHROUGH, ISTIO_MUTUAL, OPTIONAL_MUTUAL
func (o SidecarSpecIngressTlsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressTls) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
func (o SidecarSpecIngressTlsOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressTls) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
func (o SidecarSpecIngressTlsOutput) ServerCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressTls) *string { return v.ServerCertificate }).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate presented by the client.
func (o SidecarSpecIngressTlsOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SidecarSpecIngressTls) []string { return v.SubjectAltNames }).(pulumi.StringArrayOutput)
}

// An optional list of hex-encoded SHA-256 hashes of the authorized client certificates.
func (o SidecarSpecIngressTlsOutput) VerifyCertificateHash() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SidecarSpecIngressTls) []string { return v.VerifyCertificateHash }).(pulumi.StringArrayOutput)
}

// An optional list of base64-encoded SHA-256 hashes of the SPKIs of authorized client certificates.
func (o SidecarSpecIngressTlsOutput) VerifyCertificateSpki() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SidecarSpecIngressTls) []string { return v.VerifyCertificateSpki }).(pulumi.StringArrayOutput)
}

type SidecarSpecIngressTlsPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressTls)(nil)).Elem()
}

func (o SidecarSpecIngressTlsPtrOutput) ToSidecarSpecIngressTlsPtrOutput() SidecarSpecIngressTlsPtrOutput {
	return o
}

func (o SidecarSpecIngressTlsPtrOutput) ToSidecarSpecIngressTlsPtrOutputWithContext(ctx context.Context) SidecarSpecIngressTlsPtrOutput {
	return o
}

func (o SidecarSpecIngressTlsPtrOutput) Elem() SidecarSpecIngressTlsOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTls) SidecarSpecIngressTls {
		if v != nil {
			return *v
		}
		var ret SidecarSpecIngressTls
		return ret
	}).(SidecarSpecIngressTlsOutput)
}

// REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
func (o SidecarSpecIngressTlsPtrOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTls) *string {
		if v == nil {
			return nil
		}
		return v.CaCertificates
	}).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented client side certificate.
func (o SidecarSpecIngressTlsPtrOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTls) *string {
		if v == nil {
			return nil
		}
		return v.CaCrl
	}).(pulumi.StringPtrOutput)
}

// Optional: If specified, only support the specified cipher list.
func (o SidecarSpecIngressTlsPtrOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTls) []string {
		if v == nil {
			return nil
		}
		return v.CipherSuites
	}).(pulumi.StringArrayOutput)
}

// For gateways running on Kubernetes, the name of the secret that holds the TLS certs including the CA certificates.
func (o SidecarSpecIngressTlsPtrOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTls) *string {
		if v == nil {
			return nil
		}
		return v.CredentialName
	}).(pulumi.StringPtrOutput)
}

// If set to true, the load balancer will send a 301 redirect for all http connections, asking the clients to use HTTPS.
func (o SidecarSpecIngressTlsPtrOutput) HttpsRedirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTls) *bool {
		if v == nil {
			return nil
		}
		return v.HttpsRedirect
	}).(pulumi.BoolPtrOutput)
}

// Optional: Maximum TLS protocol version.
//
// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
func (o SidecarSpecIngressTlsPtrOutput) MaxProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTls) *string {
		if v == nil {
			return nil
		}
		return v.MaxProtocolVersion
	}).(pulumi.StringPtrOutput)
}

// Optional: Minimum TLS protocol version.
//
// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
func (o SidecarSpecIngressTlsPtrOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTls) *string {
		if v == nil {
			return nil
		}
		return v.MinProtocolVersion
	}).(pulumi.StringPtrOutput)
}

// Optional: Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: PASSTHROUGH, SIMPLE, MUTUAL, AUTO_PASSTHROUGH, ISTIO_MUTUAL, OPTIONAL_MUTUAL
func (o SidecarSpecIngressTlsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTls) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
func (o SidecarSpecIngressTlsPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTls) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
func (o SidecarSpecIngressTlsPtrOutput) ServerCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTls) *string {
		if v == nil {
			return nil
		}
		return v.ServerCertificate
	}).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate presented by the client.
func (o SidecarSpecIngressTlsPtrOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTls) []string {
		if v == nil {
			return nil
		}
		return v.SubjectAltNames
	}).(pulumi.StringArrayOutput)
}

// An optional list of hex-encoded SHA-256 hashes of the authorized client certificates.
func (o SidecarSpecIngressTlsPtrOutput) VerifyCertificateHash() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTls) []string {
		if v == nil {
			return nil
		}
		return v.VerifyCertificateHash
	}).(pulumi.StringArrayOutput)
}

// An optional list of base64-encoded SHA-256 hashes of the SPKIs of authorized client certificates.
func (o SidecarSpecIngressTlsPtrOutput) VerifyCertificateSpki() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTls) []string {
		if v == nil {
			return nil
		}
		return v.VerifyCertificateSpki
	}).(pulumi.StringArrayOutput)
}

// Set of TLS related options that will enable TLS termination on the sidecar for requests originating from outside the mesh.
type SidecarSpecIngressTlsPatch struct {
	// REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
	CaCertificates *string `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented client side certificate.
	CaCrl *string `pulumi:"caCrl"`
	// Optional: If specified, only support the specified cipher list.
	CipherSuites []string `pulumi:"cipherSuites"`
	// For gateways running on Kubernetes, the name of the secret that holds the TLS certs including the CA certificates.
	CredentialName *string `pulumi:"credentialName"`
	// If set to true, the load balancer will send a 301 redirect for all http connections, asking the clients to use HTTPS.
	HttpsRedirect *bool `pulumi:"httpsRedirect"`
	// Optional: Maximum TLS protocol version.
	//
	// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
	MaxProtocolVersion *string `pulumi:"maxProtocolVersion"`
	// Optional: Minimum TLS protocol version.
	//
	// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
	MinProtocolVersion *string `pulumi:"minProtocolVersion"`
	// Optional: Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: PASSTHROUGH, SIMPLE, MUTUAL, AUTO_PASSTHROUGH, ISTIO_MUTUAL, OPTIONAL_MUTUAL
	Mode *string `pulumi:"mode"`
	// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
	PrivateKey *string `pulumi:"privateKey"`
	// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
	ServerCertificate *string `pulumi:"serverCertificate"`
	// A list of alternate names to verify the subject identity in the certificate presented by the client.
	SubjectAltNames []string `pulumi:"subjectAltNames"`
	// An optional list of hex-encoded SHA-256 hashes of the authorized client certificates.
	VerifyCertificateHash []string `pulumi:"verifyCertificateHash"`
	// An optional list of base64-encoded SHA-256 hashes of the SPKIs of authorized client certificates.
	VerifyCertificateSpki []string `pulumi:"verifyCertificateSpki"`
}

// SidecarSpecIngressTlsPatchInput is an input type that accepts SidecarSpecIngressTlsPatchArgs and SidecarSpecIngressTlsPatchOutput values.
// You can construct a concrete instance of `SidecarSpecIngressTlsPatchInput` via:
//
//	SidecarSpecIngressTlsPatchArgs{...}
type SidecarSpecIngressTlsPatchInput interface {
	pulumi.Input

	ToSidecarSpecIngressTlsPatchOutput() SidecarSpecIngressTlsPatchOutput
	ToSidecarSpecIngressTlsPatchOutputWithContext(context.Context) SidecarSpecIngressTlsPatchOutput
}

// Set of TLS related options that will enable TLS termination on the sidecar for requests originating from outside the mesh.
type SidecarSpecIngressTlsPatchArgs struct {
	// REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
	CaCertificates pulumi.StringPtrInput `pulumi:"caCertificates"`
	// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented client side certificate.
	CaCrl pulumi.StringPtrInput `pulumi:"caCrl"`
	// Optional: If specified, only support the specified cipher list.
	CipherSuites pulumi.StringArrayInput `pulumi:"cipherSuites"`
	// For gateways running on Kubernetes, the name of the secret that holds the TLS certs including the CA certificates.
	CredentialName pulumi.StringPtrInput `pulumi:"credentialName"`
	// If set to true, the load balancer will send a 301 redirect for all http connections, asking the clients to use HTTPS.
	HttpsRedirect pulumi.BoolPtrInput `pulumi:"httpsRedirect"`
	// Optional: Maximum TLS protocol version.
	//
	// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
	MaxProtocolVersion pulumi.StringPtrInput `pulumi:"maxProtocolVersion"`
	// Optional: Minimum TLS protocol version.
	//
	// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
	MinProtocolVersion pulumi.StringPtrInput `pulumi:"minProtocolVersion"`
	// Optional: Indicates whether connections to this port should be secured using TLS.
	//
	// Valid Options: PASSTHROUGH, SIMPLE, MUTUAL, AUTO_PASSTHROUGH, ISTIO_MUTUAL, OPTIONAL_MUTUAL
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
	// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
	ServerCertificate pulumi.StringPtrInput `pulumi:"serverCertificate"`
	// A list of alternate names to verify the subject identity in the certificate presented by the client.
	SubjectAltNames pulumi.StringArrayInput `pulumi:"subjectAltNames"`
	// An optional list of hex-encoded SHA-256 hashes of the authorized client certificates.
	VerifyCertificateHash pulumi.StringArrayInput `pulumi:"verifyCertificateHash"`
	// An optional list of base64-encoded SHA-256 hashes of the SPKIs of authorized client certificates.
	VerifyCertificateSpki pulumi.StringArrayInput `pulumi:"verifyCertificateSpki"`
}

func (SidecarSpecIngressTlsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressTlsPatch)(nil)).Elem()
}

func (i SidecarSpecIngressTlsPatchArgs) ToSidecarSpecIngressTlsPatchOutput() SidecarSpecIngressTlsPatchOutput {
	return i.ToSidecarSpecIngressTlsPatchOutputWithContext(context.Background())
}

func (i SidecarSpecIngressTlsPatchArgs) ToSidecarSpecIngressTlsPatchOutputWithContext(ctx context.Context) SidecarSpecIngressTlsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressTlsPatchOutput)
}

func (i SidecarSpecIngressTlsPatchArgs) ToSidecarSpecIngressTlsPatchPtrOutput() SidecarSpecIngressTlsPatchPtrOutput {
	return i.ToSidecarSpecIngressTlsPatchPtrOutputWithContext(context.Background())
}

func (i SidecarSpecIngressTlsPatchArgs) ToSidecarSpecIngressTlsPatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressTlsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressTlsPatchOutput).ToSidecarSpecIngressTlsPatchPtrOutputWithContext(ctx)
}

// SidecarSpecIngressTlsPatchPtrInput is an input type that accepts SidecarSpecIngressTlsPatchArgs, SidecarSpecIngressTlsPatchPtr and SidecarSpecIngressTlsPatchPtrOutput values.
// You can construct a concrete instance of `SidecarSpecIngressTlsPatchPtrInput` via:
//
//	        SidecarSpecIngressTlsPatchArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecIngressTlsPatchPtrInput interface {
	pulumi.Input

	ToSidecarSpecIngressTlsPatchPtrOutput() SidecarSpecIngressTlsPatchPtrOutput
	ToSidecarSpecIngressTlsPatchPtrOutputWithContext(context.Context) SidecarSpecIngressTlsPatchPtrOutput
}

type sidecarSpecIngressTlsPatchPtrType SidecarSpecIngressTlsPatchArgs

func SidecarSpecIngressTlsPatchPtr(v *SidecarSpecIngressTlsPatchArgs) SidecarSpecIngressTlsPatchPtrInput {
	return (*sidecarSpecIngressTlsPatchPtrType)(v)
}

func (*sidecarSpecIngressTlsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressTlsPatch)(nil)).Elem()
}

func (i *sidecarSpecIngressTlsPatchPtrType) ToSidecarSpecIngressTlsPatchPtrOutput() SidecarSpecIngressTlsPatchPtrOutput {
	return i.ToSidecarSpecIngressTlsPatchPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecIngressTlsPatchPtrType) ToSidecarSpecIngressTlsPatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressTlsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecIngressTlsPatchPtrOutput)
}

// Set of TLS related options that will enable TLS termination on the sidecar for requests originating from outside the mesh.
type SidecarSpecIngressTlsPatchOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressTlsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecIngressTlsPatch)(nil)).Elem()
}

func (o SidecarSpecIngressTlsPatchOutput) ToSidecarSpecIngressTlsPatchOutput() SidecarSpecIngressTlsPatchOutput {
	return o
}

func (o SidecarSpecIngressTlsPatchOutput) ToSidecarSpecIngressTlsPatchOutputWithContext(ctx context.Context) SidecarSpecIngressTlsPatchOutput {
	return o
}

func (o SidecarSpecIngressTlsPatchOutput) ToSidecarSpecIngressTlsPatchPtrOutput() SidecarSpecIngressTlsPatchPtrOutput {
	return o.ToSidecarSpecIngressTlsPatchPtrOutputWithContext(context.Background())
}

func (o SidecarSpecIngressTlsPatchOutput) ToSidecarSpecIngressTlsPatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressTlsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecIngressTlsPatch) *SidecarSpecIngressTlsPatch {
		return &v
	}).(SidecarSpecIngressTlsPatchPtrOutput)
}

// REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
func (o SidecarSpecIngressTlsPatchOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressTlsPatch) *string { return v.CaCertificates }).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented client side certificate.
func (o SidecarSpecIngressTlsPatchOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressTlsPatch) *string { return v.CaCrl }).(pulumi.StringPtrOutput)
}

// Optional: If specified, only support the specified cipher list.
func (o SidecarSpecIngressTlsPatchOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SidecarSpecIngressTlsPatch) []string { return v.CipherSuites }).(pulumi.StringArrayOutput)
}

// For gateways running on Kubernetes, the name of the secret that holds the TLS certs including the CA certificates.
func (o SidecarSpecIngressTlsPatchOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressTlsPatch) *string { return v.CredentialName }).(pulumi.StringPtrOutput)
}

// If set to true, the load balancer will send a 301 redirect for all http connections, asking the clients to use HTTPS.
func (o SidecarSpecIngressTlsPatchOutput) HttpsRedirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressTlsPatch) *bool { return v.HttpsRedirect }).(pulumi.BoolPtrOutput)
}

// Optional: Maximum TLS protocol version.
//
// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
func (o SidecarSpecIngressTlsPatchOutput) MaxProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressTlsPatch) *string { return v.MaxProtocolVersion }).(pulumi.StringPtrOutput)
}

// Optional: Minimum TLS protocol version.
//
// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
func (o SidecarSpecIngressTlsPatchOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressTlsPatch) *string { return v.MinProtocolVersion }).(pulumi.StringPtrOutput)
}

// Optional: Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: PASSTHROUGH, SIMPLE, MUTUAL, AUTO_PASSTHROUGH, ISTIO_MUTUAL, OPTIONAL_MUTUAL
func (o SidecarSpecIngressTlsPatchOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressTlsPatch) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
func (o SidecarSpecIngressTlsPatchOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressTlsPatch) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
func (o SidecarSpecIngressTlsPatchOutput) ServerCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecIngressTlsPatch) *string { return v.ServerCertificate }).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate presented by the client.
func (o SidecarSpecIngressTlsPatchOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SidecarSpecIngressTlsPatch) []string { return v.SubjectAltNames }).(pulumi.StringArrayOutput)
}

// An optional list of hex-encoded SHA-256 hashes of the authorized client certificates.
func (o SidecarSpecIngressTlsPatchOutput) VerifyCertificateHash() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SidecarSpecIngressTlsPatch) []string { return v.VerifyCertificateHash }).(pulumi.StringArrayOutput)
}

// An optional list of base64-encoded SHA-256 hashes of the SPKIs of authorized client certificates.
func (o SidecarSpecIngressTlsPatchOutput) VerifyCertificateSpki() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SidecarSpecIngressTlsPatch) []string { return v.VerifyCertificateSpki }).(pulumi.StringArrayOutput)
}

type SidecarSpecIngressTlsPatchPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecIngressTlsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecIngressTlsPatch)(nil)).Elem()
}

func (o SidecarSpecIngressTlsPatchPtrOutput) ToSidecarSpecIngressTlsPatchPtrOutput() SidecarSpecIngressTlsPatchPtrOutput {
	return o
}

func (o SidecarSpecIngressTlsPatchPtrOutput) ToSidecarSpecIngressTlsPatchPtrOutputWithContext(ctx context.Context) SidecarSpecIngressTlsPatchPtrOutput {
	return o
}

func (o SidecarSpecIngressTlsPatchPtrOutput) Elem() SidecarSpecIngressTlsPatchOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTlsPatch) SidecarSpecIngressTlsPatch {
		if v != nil {
			return *v
		}
		var ret SidecarSpecIngressTlsPatch
		return ret
	}).(SidecarSpecIngressTlsPatchOutput)
}

// REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
func (o SidecarSpecIngressTlsPatchPtrOutput) CaCertificates() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaCertificates
	}).(pulumi.StringPtrOutput)
}

// OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented client side certificate.
func (o SidecarSpecIngressTlsPatchPtrOutput) CaCrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaCrl
	}).(pulumi.StringPtrOutput)
}

// Optional: If specified, only support the specified cipher list.
func (o SidecarSpecIngressTlsPatchPtrOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTlsPatch) []string {
		if v == nil {
			return nil
		}
		return v.CipherSuites
	}).(pulumi.StringArrayOutput)
}

// For gateways running on Kubernetes, the name of the secret that holds the TLS certs including the CA certificates.
func (o SidecarSpecIngressTlsPatchPtrOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.CredentialName
	}).(pulumi.StringPtrOutput)
}

// If set to true, the load balancer will send a 301 redirect for all http connections, asking the clients to use HTTPS.
func (o SidecarSpecIngressTlsPatchPtrOutput) HttpsRedirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTlsPatch) *bool {
		if v == nil {
			return nil
		}
		return v.HttpsRedirect
	}).(pulumi.BoolPtrOutput)
}

// Optional: Maximum TLS protocol version.
//
// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
func (o SidecarSpecIngressTlsPatchPtrOutput) MaxProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.MaxProtocolVersion
	}).(pulumi.StringPtrOutput)
}

// Optional: Minimum TLS protocol version.
//
// Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
func (o SidecarSpecIngressTlsPatchPtrOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.MinProtocolVersion
	}).(pulumi.StringPtrOutput)
}

// Optional: Indicates whether connections to this port should be secured using TLS.
//
// Valid Options: PASSTHROUGH, SIMPLE, MUTUAL, AUTO_PASSTHROUGH, ISTIO_MUTUAL, OPTIONAL_MUTUAL
func (o SidecarSpecIngressTlsPatchPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
func (o SidecarSpecIngressTlsPatchPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

// REQUIRED if mode is `SIMPLE` or `MUTUAL`.
func (o SidecarSpecIngressTlsPatchPtrOutput) ServerCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.ServerCertificate
	}).(pulumi.StringPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate presented by the client.
func (o SidecarSpecIngressTlsPatchPtrOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTlsPatch) []string {
		if v == nil {
			return nil
		}
		return v.SubjectAltNames
	}).(pulumi.StringArrayOutput)
}

// An optional list of hex-encoded SHA-256 hashes of the authorized client certificates.
func (o SidecarSpecIngressTlsPatchPtrOutput) VerifyCertificateHash() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTlsPatch) []string {
		if v == nil {
			return nil
		}
		return v.VerifyCertificateHash
	}).(pulumi.StringArrayOutput)
}

// An optional list of base64-encoded SHA-256 hashes of the SPKIs of authorized client certificates.
func (o SidecarSpecIngressTlsPatchPtrOutput) VerifyCertificateSpki() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SidecarSpecIngressTlsPatch) []string {
		if v == nil {
			return nil
		}
		return v.VerifyCertificateSpki
	}).(pulumi.StringArrayOutput)
}

// Configuration for the outbound traffic policy.
type SidecarSpecOutboundTrafficPolicy struct {
	EgressProxy *SidecarSpecOutboundTrafficPolicyEgressProxy `pulumi:"egressProxy"`
	// Valid Options: REGISTRY_ONLY, ALLOW_ANY
	Mode *string `pulumi:"mode"`
}

// SidecarSpecOutboundTrafficPolicyInput is an input type that accepts SidecarSpecOutboundTrafficPolicyArgs and SidecarSpecOutboundTrafficPolicyOutput values.
// You can construct a concrete instance of `SidecarSpecOutboundTrafficPolicyInput` via:
//
//	SidecarSpecOutboundTrafficPolicyArgs{...}
type SidecarSpecOutboundTrafficPolicyInput interface {
	pulumi.Input

	ToSidecarSpecOutboundTrafficPolicyOutput() SidecarSpecOutboundTrafficPolicyOutput
	ToSidecarSpecOutboundTrafficPolicyOutputWithContext(context.Context) SidecarSpecOutboundTrafficPolicyOutput
}

// Configuration for the outbound traffic policy.
type SidecarSpecOutboundTrafficPolicyArgs struct {
	EgressProxy SidecarSpecOutboundTrafficPolicyEgressProxyPtrInput `pulumi:"egressProxy"`
	// Valid Options: REGISTRY_ONLY, ALLOW_ANY
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (SidecarSpecOutboundTrafficPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecOutboundTrafficPolicy)(nil)).Elem()
}

func (i SidecarSpecOutboundTrafficPolicyArgs) ToSidecarSpecOutboundTrafficPolicyOutput() SidecarSpecOutboundTrafficPolicyOutput {
	return i.ToSidecarSpecOutboundTrafficPolicyOutputWithContext(context.Background())
}

func (i SidecarSpecOutboundTrafficPolicyArgs) ToSidecarSpecOutboundTrafficPolicyOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecOutboundTrafficPolicyOutput)
}

func (i SidecarSpecOutboundTrafficPolicyArgs) ToSidecarSpecOutboundTrafficPolicyPtrOutput() SidecarSpecOutboundTrafficPolicyPtrOutput {
	return i.ToSidecarSpecOutboundTrafficPolicyPtrOutputWithContext(context.Background())
}

func (i SidecarSpecOutboundTrafficPolicyArgs) ToSidecarSpecOutboundTrafficPolicyPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecOutboundTrafficPolicyOutput).ToSidecarSpecOutboundTrafficPolicyPtrOutputWithContext(ctx)
}

// SidecarSpecOutboundTrafficPolicyPtrInput is an input type that accepts SidecarSpecOutboundTrafficPolicyArgs, SidecarSpecOutboundTrafficPolicyPtr and SidecarSpecOutboundTrafficPolicyPtrOutput values.
// You can construct a concrete instance of `SidecarSpecOutboundTrafficPolicyPtrInput` via:
//
//	        SidecarSpecOutboundTrafficPolicyArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecOutboundTrafficPolicyPtrInput interface {
	pulumi.Input

	ToSidecarSpecOutboundTrafficPolicyPtrOutput() SidecarSpecOutboundTrafficPolicyPtrOutput
	ToSidecarSpecOutboundTrafficPolicyPtrOutputWithContext(context.Context) SidecarSpecOutboundTrafficPolicyPtrOutput
}

type sidecarSpecOutboundTrafficPolicyPtrType SidecarSpecOutboundTrafficPolicyArgs

func SidecarSpecOutboundTrafficPolicyPtr(v *SidecarSpecOutboundTrafficPolicyArgs) SidecarSpecOutboundTrafficPolicyPtrInput {
	return (*sidecarSpecOutboundTrafficPolicyPtrType)(v)
}

func (*sidecarSpecOutboundTrafficPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecOutboundTrafficPolicy)(nil)).Elem()
}

func (i *sidecarSpecOutboundTrafficPolicyPtrType) ToSidecarSpecOutboundTrafficPolicyPtrOutput() SidecarSpecOutboundTrafficPolicyPtrOutput {
	return i.ToSidecarSpecOutboundTrafficPolicyPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecOutboundTrafficPolicyPtrType) ToSidecarSpecOutboundTrafficPolicyPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecOutboundTrafficPolicyPtrOutput)
}

// Configuration for the outbound traffic policy.
type SidecarSpecOutboundTrafficPolicyOutput struct{ *pulumi.OutputState }

func (SidecarSpecOutboundTrafficPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecOutboundTrafficPolicy)(nil)).Elem()
}

func (o SidecarSpecOutboundTrafficPolicyOutput) ToSidecarSpecOutboundTrafficPolicyOutput() SidecarSpecOutboundTrafficPolicyOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyOutput) ToSidecarSpecOutboundTrafficPolicyOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyOutput) ToSidecarSpecOutboundTrafficPolicyPtrOutput() SidecarSpecOutboundTrafficPolicyPtrOutput {
	return o.ToSidecarSpecOutboundTrafficPolicyPtrOutputWithContext(context.Background())
}

func (o SidecarSpecOutboundTrafficPolicyOutput) ToSidecarSpecOutboundTrafficPolicyPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecOutboundTrafficPolicy) *SidecarSpecOutboundTrafficPolicy {
		return &v
	}).(SidecarSpecOutboundTrafficPolicyPtrOutput)
}

func (o SidecarSpecOutboundTrafficPolicyOutput) EgressProxy() SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput {
	return o.ApplyT(func(v SidecarSpecOutboundTrafficPolicy) *SidecarSpecOutboundTrafficPolicyEgressProxy {
		return v.EgressProxy
	}).(SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput)
}

// Valid Options: REGISTRY_ONLY, ALLOW_ANY
func (o SidecarSpecOutboundTrafficPolicyOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecOutboundTrafficPolicy) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SidecarSpecOutboundTrafficPolicyPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecOutboundTrafficPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecOutboundTrafficPolicy)(nil)).Elem()
}

func (o SidecarSpecOutboundTrafficPolicyPtrOutput) ToSidecarSpecOutboundTrafficPolicyPtrOutput() SidecarSpecOutboundTrafficPolicyPtrOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyPtrOutput) ToSidecarSpecOutboundTrafficPolicyPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyPtrOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyPtrOutput) Elem() SidecarSpecOutboundTrafficPolicyOutput {
	return o.ApplyT(func(v *SidecarSpecOutboundTrafficPolicy) SidecarSpecOutboundTrafficPolicy {
		if v != nil {
			return *v
		}
		var ret SidecarSpecOutboundTrafficPolicy
		return ret
	}).(SidecarSpecOutboundTrafficPolicyOutput)
}

func (o SidecarSpecOutboundTrafficPolicyPtrOutput) EgressProxy() SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput {
	return o.ApplyT(func(v *SidecarSpecOutboundTrafficPolicy) *SidecarSpecOutboundTrafficPolicyEgressProxy {
		if v == nil {
			return nil
		}
		return v.EgressProxy
	}).(SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput)
}

// Valid Options: REGISTRY_ONLY, ALLOW_ANY
func (o SidecarSpecOutboundTrafficPolicyPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecOutboundTrafficPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SidecarSpecOutboundTrafficPolicyEgressProxy struct {
	// The name of a service from the service registry.
	Host *string                                          `pulumi:"host"`
	Port *SidecarSpecOutboundTrafficPolicyEgressProxyPort `pulumi:"port"`
	// The name of a subset within the service.
	Subset *string `pulumi:"subset"`
}

// SidecarSpecOutboundTrafficPolicyEgressProxyInput is an input type that accepts SidecarSpecOutboundTrafficPolicyEgressProxyArgs and SidecarSpecOutboundTrafficPolicyEgressProxyOutput values.
// You can construct a concrete instance of `SidecarSpecOutboundTrafficPolicyEgressProxyInput` via:
//
//	SidecarSpecOutboundTrafficPolicyEgressProxyArgs{...}
type SidecarSpecOutboundTrafficPolicyEgressProxyInput interface {
	pulumi.Input

	ToSidecarSpecOutboundTrafficPolicyEgressProxyOutput() SidecarSpecOutboundTrafficPolicyEgressProxyOutput
	ToSidecarSpecOutboundTrafficPolicyEgressProxyOutputWithContext(context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyOutput
}

type SidecarSpecOutboundTrafficPolicyEgressProxyArgs struct {
	// The name of a service from the service registry.
	Host pulumi.StringPtrInput                                   `pulumi:"host"`
	Port SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrInput `pulumi:"port"`
	// The name of a subset within the service.
	Subset pulumi.StringPtrInput `pulumi:"subset"`
}

func (SidecarSpecOutboundTrafficPolicyEgressProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecOutboundTrafficPolicyEgressProxy)(nil)).Elem()
}

func (i SidecarSpecOutboundTrafficPolicyEgressProxyArgs) ToSidecarSpecOutboundTrafficPolicyEgressProxyOutput() SidecarSpecOutboundTrafficPolicyEgressProxyOutput {
	return i.ToSidecarSpecOutboundTrafficPolicyEgressProxyOutputWithContext(context.Background())
}

func (i SidecarSpecOutboundTrafficPolicyEgressProxyArgs) ToSidecarSpecOutboundTrafficPolicyEgressProxyOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecOutboundTrafficPolicyEgressProxyOutput)
}

func (i SidecarSpecOutboundTrafficPolicyEgressProxyArgs) ToSidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput {
	return i.ToSidecarSpecOutboundTrafficPolicyEgressProxyPtrOutputWithContext(context.Background())
}

func (i SidecarSpecOutboundTrafficPolicyEgressProxyArgs) ToSidecarSpecOutboundTrafficPolicyEgressProxyPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecOutboundTrafficPolicyEgressProxyOutput).ToSidecarSpecOutboundTrafficPolicyEgressProxyPtrOutputWithContext(ctx)
}

// SidecarSpecOutboundTrafficPolicyEgressProxyPtrInput is an input type that accepts SidecarSpecOutboundTrafficPolicyEgressProxyArgs, SidecarSpecOutboundTrafficPolicyEgressProxyPtr and SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput values.
// You can construct a concrete instance of `SidecarSpecOutboundTrafficPolicyEgressProxyPtrInput` via:
//
//	        SidecarSpecOutboundTrafficPolicyEgressProxyArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecOutboundTrafficPolicyEgressProxyPtrInput interface {
	pulumi.Input

	ToSidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput
	ToSidecarSpecOutboundTrafficPolicyEgressProxyPtrOutputWithContext(context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput
}

type sidecarSpecOutboundTrafficPolicyEgressProxyPtrType SidecarSpecOutboundTrafficPolicyEgressProxyArgs

func SidecarSpecOutboundTrafficPolicyEgressProxyPtr(v *SidecarSpecOutboundTrafficPolicyEgressProxyArgs) SidecarSpecOutboundTrafficPolicyEgressProxyPtrInput {
	return (*sidecarSpecOutboundTrafficPolicyEgressProxyPtrType)(v)
}

func (*sidecarSpecOutboundTrafficPolicyEgressProxyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecOutboundTrafficPolicyEgressProxy)(nil)).Elem()
}

func (i *sidecarSpecOutboundTrafficPolicyEgressProxyPtrType) ToSidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput {
	return i.ToSidecarSpecOutboundTrafficPolicyEgressProxyPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecOutboundTrafficPolicyEgressProxyPtrType) ToSidecarSpecOutboundTrafficPolicyEgressProxyPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput)
}

type SidecarSpecOutboundTrafficPolicyEgressProxyOutput struct{ *pulumi.OutputState }

func (SidecarSpecOutboundTrafficPolicyEgressProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecOutboundTrafficPolicyEgressProxy)(nil)).Elem()
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyOutput() SidecarSpecOutboundTrafficPolicyEgressProxyOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput {
	return o.ToSidecarSpecOutboundTrafficPolicyEgressProxyPtrOutputWithContext(context.Background())
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecOutboundTrafficPolicyEgressProxy) *SidecarSpecOutboundTrafficPolicyEgressProxy {
		return &v
	}).(SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput)
}

// The name of a service from the service registry.
func (o SidecarSpecOutboundTrafficPolicyEgressProxyOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecOutboundTrafficPolicyEgressProxy) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyOutput) Port() SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput {
	return o.ApplyT(func(v SidecarSpecOutboundTrafficPolicyEgressProxy) *SidecarSpecOutboundTrafficPolicyEgressProxyPort {
		return v.Port
	}).(SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput)
}

// The name of a subset within the service.
func (o SidecarSpecOutboundTrafficPolicyEgressProxyOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecOutboundTrafficPolicyEgressProxy) *string { return v.Subset }).(pulumi.StringPtrOutput)
}

type SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecOutboundTrafficPolicyEgressProxy)(nil)).Elem()
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput) Elem() SidecarSpecOutboundTrafficPolicyEgressProxyOutput {
	return o.ApplyT(func(v *SidecarSpecOutboundTrafficPolicyEgressProxy) SidecarSpecOutboundTrafficPolicyEgressProxy {
		if v != nil {
			return *v
		}
		var ret SidecarSpecOutboundTrafficPolicyEgressProxy
		return ret
	}).(SidecarSpecOutboundTrafficPolicyEgressProxyOutput)
}

// The name of a service from the service registry.
func (o SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecOutboundTrafficPolicyEgressProxy) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput) Port() SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput {
	return o.ApplyT(func(v *SidecarSpecOutboundTrafficPolicyEgressProxy) *SidecarSpecOutboundTrafficPolicyEgressProxyPort {
		if v == nil {
			return nil
		}
		return v.Port
	}).(SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput)
}

// The name of a subset within the service.
func (o SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecOutboundTrafficPolicyEgressProxy) *string {
		if v == nil {
			return nil
		}
		return v.Subset
	}).(pulumi.StringPtrOutput)
}

type SidecarSpecOutboundTrafficPolicyEgressProxyPatch struct {
	// The name of a service from the service registry.
	Host *string                                               `pulumi:"host"`
	Port *SidecarSpecOutboundTrafficPolicyEgressProxyPortPatch `pulumi:"port"`
	// The name of a subset within the service.
	Subset *string `pulumi:"subset"`
}

// SidecarSpecOutboundTrafficPolicyEgressProxyPatchInput is an input type that accepts SidecarSpecOutboundTrafficPolicyEgressProxyPatchArgs and SidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput values.
// You can construct a concrete instance of `SidecarSpecOutboundTrafficPolicyEgressProxyPatchInput` via:
//
//	SidecarSpecOutboundTrafficPolicyEgressProxyPatchArgs{...}
type SidecarSpecOutboundTrafficPolicyEgressProxyPatchInput interface {
	pulumi.Input

	ToSidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput
	ToSidecarSpecOutboundTrafficPolicyEgressProxyPatchOutputWithContext(context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput
}

type SidecarSpecOutboundTrafficPolicyEgressProxyPatchArgs struct {
	// The name of a service from the service registry.
	Host pulumi.StringPtrInput                                        `pulumi:"host"`
	Port SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrInput `pulumi:"port"`
	// The name of a subset within the service.
	Subset pulumi.StringPtrInput `pulumi:"subset"`
}

func (SidecarSpecOutboundTrafficPolicyEgressProxyPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecOutboundTrafficPolicyEgressProxyPatch)(nil)).Elem()
}

func (i SidecarSpecOutboundTrafficPolicyEgressProxyPatchArgs) ToSidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput {
	return i.ToSidecarSpecOutboundTrafficPolicyEgressProxyPatchOutputWithContext(context.Background())
}

func (i SidecarSpecOutboundTrafficPolicyEgressProxyPatchArgs) ToSidecarSpecOutboundTrafficPolicyEgressProxyPatchOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput)
}

func (i SidecarSpecOutboundTrafficPolicyEgressProxyPatchArgs) ToSidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput {
	return i.ToSidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutputWithContext(context.Background())
}

func (i SidecarSpecOutboundTrafficPolicyEgressProxyPatchArgs) ToSidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput).ToSidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutputWithContext(ctx)
}

// SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrInput is an input type that accepts SidecarSpecOutboundTrafficPolicyEgressProxyPatchArgs, SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtr and SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput values.
// You can construct a concrete instance of `SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrInput` via:
//
//	        SidecarSpecOutboundTrafficPolicyEgressProxyPatchArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrInput interface {
	pulumi.Input

	ToSidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput
	ToSidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutputWithContext(context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput
}

type sidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrType SidecarSpecOutboundTrafficPolicyEgressProxyPatchArgs

func SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtr(v *SidecarSpecOutboundTrafficPolicyEgressProxyPatchArgs) SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrInput {
	return (*sidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrType)(v)
}

func (*sidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecOutboundTrafficPolicyEgressProxyPatch)(nil)).Elem()
}

func (i *sidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrType) ToSidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput {
	return i.ToSidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrType) ToSidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput)
}

type SidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput struct{ *pulumi.OutputState }

func (SidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecOutboundTrafficPolicyEgressProxyPatch)(nil)).Elem()
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyPatchOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput {
	return o.ToSidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutputWithContext(context.Background())
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecOutboundTrafficPolicyEgressProxyPatch) *SidecarSpecOutboundTrafficPolicyEgressProxyPatch {
		return &v
	}).(SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput)
}

// The name of a service from the service registry.
func (o SidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecOutboundTrafficPolicyEgressProxyPatch) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput) Port() SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput {
	return o.ApplyT(func(v SidecarSpecOutboundTrafficPolicyEgressProxyPatch) *SidecarSpecOutboundTrafficPolicyEgressProxyPortPatch {
		return v.Port
	}).(SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput)
}

// The name of a subset within the service.
func (o SidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecOutboundTrafficPolicyEgressProxyPatch) *string { return v.Subset }).(pulumi.StringPtrOutput)
}

type SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecOutboundTrafficPolicyEgressProxyPatch)(nil)).Elem()
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput) Elem() SidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput {
	return o.ApplyT(func(v *SidecarSpecOutboundTrafficPolicyEgressProxyPatch) SidecarSpecOutboundTrafficPolicyEgressProxyPatch {
		if v != nil {
			return *v
		}
		var ret SidecarSpecOutboundTrafficPolicyEgressProxyPatch
		return ret
	}).(SidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput)
}

// The name of a service from the service registry.
func (o SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecOutboundTrafficPolicyEgressProxyPatch) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput) Port() SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput {
	return o.ApplyT(func(v *SidecarSpecOutboundTrafficPolicyEgressProxyPatch) *SidecarSpecOutboundTrafficPolicyEgressProxyPortPatch {
		if v == nil {
			return nil
		}
		return v.Port
	}).(SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput)
}

// The name of a subset within the service.
func (o SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecOutboundTrafficPolicyEgressProxyPatch) *string {
		if v == nil {
			return nil
		}
		return v.Subset
	}).(pulumi.StringPtrOutput)
}

// Specifies the port on the host that is being addressed.
type SidecarSpecOutboundTrafficPolicyEgressProxyPort struct {
	Number *int `pulumi:"number"`
}

// SidecarSpecOutboundTrafficPolicyEgressProxyPortInput is an input type that accepts SidecarSpecOutboundTrafficPolicyEgressProxyPortArgs and SidecarSpecOutboundTrafficPolicyEgressProxyPortOutput values.
// You can construct a concrete instance of `SidecarSpecOutboundTrafficPolicyEgressProxyPortInput` via:
//
//	SidecarSpecOutboundTrafficPolicyEgressProxyPortArgs{...}
type SidecarSpecOutboundTrafficPolicyEgressProxyPortInput interface {
	pulumi.Input

	ToSidecarSpecOutboundTrafficPolicyEgressProxyPortOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPortOutput
	ToSidecarSpecOutboundTrafficPolicyEgressProxyPortOutputWithContext(context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPortOutput
}

// Specifies the port on the host that is being addressed.
type SidecarSpecOutboundTrafficPolicyEgressProxyPortArgs struct {
	Number pulumi.IntPtrInput `pulumi:"number"`
}

func (SidecarSpecOutboundTrafficPolicyEgressProxyPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecOutboundTrafficPolicyEgressProxyPort)(nil)).Elem()
}

func (i SidecarSpecOutboundTrafficPolicyEgressProxyPortArgs) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPortOutput {
	return i.ToSidecarSpecOutboundTrafficPolicyEgressProxyPortOutputWithContext(context.Background())
}

func (i SidecarSpecOutboundTrafficPolicyEgressProxyPortArgs) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecOutboundTrafficPolicyEgressProxyPortOutput)
}

func (i SidecarSpecOutboundTrafficPolicyEgressProxyPortArgs) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput {
	return i.ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutputWithContext(context.Background())
}

func (i SidecarSpecOutboundTrafficPolicyEgressProxyPortArgs) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecOutboundTrafficPolicyEgressProxyPortOutput).ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutputWithContext(ctx)
}

// SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrInput is an input type that accepts SidecarSpecOutboundTrafficPolicyEgressProxyPortArgs, SidecarSpecOutboundTrafficPolicyEgressProxyPortPtr and SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput values.
// You can construct a concrete instance of `SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrInput` via:
//
//	        SidecarSpecOutboundTrafficPolicyEgressProxyPortArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrInput interface {
	pulumi.Input

	ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput
	ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutputWithContext(context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput
}

type sidecarSpecOutboundTrafficPolicyEgressProxyPortPtrType SidecarSpecOutboundTrafficPolicyEgressProxyPortArgs

func SidecarSpecOutboundTrafficPolicyEgressProxyPortPtr(v *SidecarSpecOutboundTrafficPolicyEgressProxyPortArgs) SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrInput {
	return (*sidecarSpecOutboundTrafficPolicyEgressProxyPortPtrType)(v)
}

func (*sidecarSpecOutboundTrafficPolicyEgressProxyPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecOutboundTrafficPolicyEgressProxyPort)(nil)).Elem()
}

func (i *sidecarSpecOutboundTrafficPolicyEgressProxyPortPtrType) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput {
	return i.ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecOutboundTrafficPolicyEgressProxyPortPtrType) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput)
}

// Specifies the port on the host that is being addressed.
type SidecarSpecOutboundTrafficPolicyEgressProxyPortOutput struct{ *pulumi.OutputState }

func (SidecarSpecOutboundTrafficPolicyEgressProxyPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecOutboundTrafficPolicyEgressProxyPort)(nil)).Elem()
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPortOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPortOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPortOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPortOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPortOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput {
	return o.ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutputWithContext(context.Background())
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPortOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecOutboundTrafficPolicyEgressProxyPort) *SidecarSpecOutboundTrafficPolicyEgressProxyPort {
		return &v
	}).(SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput)
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPortOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecOutboundTrafficPolicyEgressProxyPort) *int { return v.Number }).(pulumi.IntPtrOutput)
}

type SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecOutboundTrafficPolicyEgressProxyPort)(nil)).Elem()
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput) Elem() SidecarSpecOutboundTrafficPolicyEgressProxyPortOutput {
	return o.ApplyT(func(v *SidecarSpecOutboundTrafficPolicyEgressProxyPort) SidecarSpecOutboundTrafficPolicyEgressProxyPort {
		if v != nil {
			return *v
		}
		var ret SidecarSpecOutboundTrafficPolicyEgressProxyPort
		return ret
	}).(SidecarSpecOutboundTrafficPolicyEgressProxyPortOutput)
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecOutboundTrafficPolicyEgressProxyPort) *int {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.IntPtrOutput)
}

// Specifies the port on the host that is being addressed.
type SidecarSpecOutboundTrafficPolicyEgressProxyPortPatch struct {
	Number *int `pulumi:"number"`
}

// SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchInput is an input type that accepts SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchArgs and SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutput values.
// You can construct a concrete instance of `SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchInput` via:
//
//	SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchArgs{...}
type SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchInput interface {
	pulumi.Input

	ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutput
	ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutputWithContext(context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutput
}

// Specifies the port on the host that is being addressed.
type SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchArgs struct {
	Number pulumi.IntPtrInput `pulumi:"number"`
}

func (SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecOutboundTrafficPolicyEgressProxyPortPatch)(nil)).Elem()
}

func (i SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchArgs) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutput {
	return i.ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutputWithContext(context.Background())
}

func (i SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchArgs) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutput)
}

func (i SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchArgs) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput {
	return i.ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutputWithContext(context.Background())
}

func (i SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchArgs) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutput).ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutputWithContext(ctx)
}

// SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrInput is an input type that accepts SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchArgs, SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtr and SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput values.
// You can construct a concrete instance of `SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrInput` via:
//
//	        SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrInput interface {
	pulumi.Input

	ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput
	ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutputWithContext(context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput
}

type sidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrType SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchArgs

func SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtr(v *SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchArgs) SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrInput {
	return (*sidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrType)(v)
}

func (*sidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecOutboundTrafficPolicyEgressProxyPortPatch)(nil)).Elem()
}

func (i *sidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrType) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput {
	return i.ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrType) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput)
}

// Specifies the port on the host that is being addressed.
type SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutput struct{ *pulumi.OutputState }

func (SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecOutboundTrafficPolicyEgressProxyPortPatch)(nil)).Elem()
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput {
	return o.ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutputWithContext(context.Background())
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecOutboundTrafficPolicyEgressProxyPortPatch) *SidecarSpecOutboundTrafficPolicyEgressProxyPortPatch {
		return &v
	}).(SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput)
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SidecarSpecOutboundTrafficPolicyEgressProxyPortPatch) *int { return v.Number }).(pulumi.IntPtrOutput)
}

type SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecOutboundTrafficPolicyEgressProxyPortPatch)(nil)).Elem()
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput() SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput) ToSidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput) Elem() SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutput {
	return o.ApplyT(func(v *SidecarSpecOutboundTrafficPolicyEgressProxyPortPatch) SidecarSpecOutboundTrafficPolicyEgressProxyPortPatch {
		if v != nil {
			return *v
		}
		var ret SidecarSpecOutboundTrafficPolicyEgressProxyPortPatch
		return ret
	}).(SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutput)
}

func (o SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SidecarSpecOutboundTrafficPolicyEgressProxyPortPatch) *int {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.IntPtrOutput)
}

// Configuration for the outbound traffic policy.
type SidecarSpecOutboundTrafficPolicyPatch struct {
	EgressProxy *SidecarSpecOutboundTrafficPolicyEgressProxyPatch `pulumi:"egressProxy"`
	// Valid Options: REGISTRY_ONLY, ALLOW_ANY
	Mode *string `pulumi:"mode"`
}

// SidecarSpecOutboundTrafficPolicyPatchInput is an input type that accepts SidecarSpecOutboundTrafficPolicyPatchArgs and SidecarSpecOutboundTrafficPolicyPatchOutput values.
// You can construct a concrete instance of `SidecarSpecOutboundTrafficPolicyPatchInput` via:
//
//	SidecarSpecOutboundTrafficPolicyPatchArgs{...}
type SidecarSpecOutboundTrafficPolicyPatchInput interface {
	pulumi.Input

	ToSidecarSpecOutboundTrafficPolicyPatchOutput() SidecarSpecOutboundTrafficPolicyPatchOutput
	ToSidecarSpecOutboundTrafficPolicyPatchOutputWithContext(context.Context) SidecarSpecOutboundTrafficPolicyPatchOutput
}

// Configuration for the outbound traffic policy.
type SidecarSpecOutboundTrafficPolicyPatchArgs struct {
	EgressProxy SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrInput `pulumi:"egressProxy"`
	// Valid Options: REGISTRY_ONLY, ALLOW_ANY
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (SidecarSpecOutboundTrafficPolicyPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecOutboundTrafficPolicyPatch)(nil)).Elem()
}

func (i SidecarSpecOutboundTrafficPolicyPatchArgs) ToSidecarSpecOutboundTrafficPolicyPatchOutput() SidecarSpecOutboundTrafficPolicyPatchOutput {
	return i.ToSidecarSpecOutboundTrafficPolicyPatchOutputWithContext(context.Background())
}

func (i SidecarSpecOutboundTrafficPolicyPatchArgs) ToSidecarSpecOutboundTrafficPolicyPatchOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecOutboundTrafficPolicyPatchOutput)
}

func (i SidecarSpecOutboundTrafficPolicyPatchArgs) ToSidecarSpecOutboundTrafficPolicyPatchPtrOutput() SidecarSpecOutboundTrafficPolicyPatchPtrOutput {
	return i.ToSidecarSpecOutboundTrafficPolicyPatchPtrOutputWithContext(context.Background())
}

func (i SidecarSpecOutboundTrafficPolicyPatchArgs) ToSidecarSpecOutboundTrafficPolicyPatchPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecOutboundTrafficPolicyPatchOutput).ToSidecarSpecOutboundTrafficPolicyPatchPtrOutputWithContext(ctx)
}

// SidecarSpecOutboundTrafficPolicyPatchPtrInput is an input type that accepts SidecarSpecOutboundTrafficPolicyPatchArgs, SidecarSpecOutboundTrafficPolicyPatchPtr and SidecarSpecOutboundTrafficPolicyPatchPtrOutput values.
// You can construct a concrete instance of `SidecarSpecOutboundTrafficPolicyPatchPtrInput` via:
//
//	        SidecarSpecOutboundTrafficPolicyPatchArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecOutboundTrafficPolicyPatchPtrInput interface {
	pulumi.Input

	ToSidecarSpecOutboundTrafficPolicyPatchPtrOutput() SidecarSpecOutboundTrafficPolicyPatchPtrOutput
	ToSidecarSpecOutboundTrafficPolicyPatchPtrOutputWithContext(context.Context) SidecarSpecOutboundTrafficPolicyPatchPtrOutput
}

type sidecarSpecOutboundTrafficPolicyPatchPtrType SidecarSpecOutboundTrafficPolicyPatchArgs

func SidecarSpecOutboundTrafficPolicyPatchPtr(v *SidecarSpecOutboundTrafficPolicyPatchArgs) SidecarSpecOutboundTrafficPolicyPatchPtrInput {
	return (*sidecarSpecOutboundTrafficPolicyPatchPtrType)(v)
}

func (*sidecarSpecOutboundTrafficPolicyPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecOutboundTrafficPolicyPatch)(nil)).Elem()
}

func (i *sidecarSpecOutboundTrafficPolicyPatchPtrType) ToSidecarSpecOutboundTrafficPolicyPatchPtrOutput() SidecarSpecOutboundTrafficPolicyPatchPtrOutput {
	return i.ToSidecarSpecOutboundTrafficPolicyPatchPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecOutboundTrafficPolicyPatchPtrType) ToSidecarSpecOutboundTrafficPolicyPatchPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecOutboundTrafficPolicyPatchPtrOutput)
}

// Configuration for the outbound traffic policy.
type SidecarSpecOutboundTrafficPolicyPatchOutput struct{ *pulumi.OutputState }

func (SidecarSpecOutboundTrafficPolicyPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecOutboundTrafficPolicyPatch)(nil)).Elem()
}

func (o SidecarSpecOutboundTrafficPolicyPatchOutput) ToSidecarSpecOutboundTrafficPolicyPatchOutput() SidecarSpecOutboundTrafficPolicyPatchOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyPatchOutput) ToSidecarSpecOutboundTrafficPolicyPatchOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyPatchOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyPatchOutput) ToSidecarSpecOutboundTrafficPolicyPatchPtrOutput() SidecarSpecOutboundTrafficPolicyPatchPtrOutput {
	return o.ToSidecarSpecOutboundTrafficPolicyPatchPtrOutputWithContext(context.Background())
}

func (o SidecarSpecOutboundTrafficPolicyPatchOutput) ToSidecarSpecOutboundTrafficPolicyPatchPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecOutboundTrafficPolicyPatch) *SidecarSpecOutboundTrafficPolicyPatch {
		return &v
	}).(SidecarSpecOutboundTrafficPolicyPatchPtrOutput)
}

func (o SidecarSpecOutboundTrafficPolicyPatchOutput) EgressProxy() SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput {
	return o.ApplyT(func(v SidecarSpecOutboundTrafficPolicyPatch) *SidecarSpecOutboundTrafficPolicyEgressProxyPatch {
		return v.EgressProxy
	}).(SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput)
}

// Valid Options: REGISTRY_ONLY, ALLOW_ANY
func (o SidecarSpecOutboundTrafficPolicyPatchOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SidecarSpecOutboundTrafficPolicyPatch) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SidecarSpecOutboundTrafficPolicyPatchPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecOutboundTrafficPolicyPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecOutboundTrafficPolicyPatch)(nil)).Elem()
}

func (o SidecarSpecOutboundTrafficPolicyPatchPtrOutput) ToSidecarSpecOutboundTrafficPolicyPatchPtrOutput() SidecarSpecOutboundTrafficPolicyPatchPtrOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyPatchPtrOutput) ToSidecarSpecOutboundTrafficPolicyPatchPtrOutputWithContext(ctx context.Context) SidecarSpecOutboundTrafficPolicyPatchPtrOutput {
	return o
}

func (o SidecarSpecOutboundTrafficPolicyPatchPtrOutput) Elem() SidecarSpecOutboundTrafficPolicyPatchOutput {
	return o.ApplyT(func(v *SidecarSpecOutboundTrafficPolicyPatch) SidecarSpecOutboundTrafficPolicyPatch {
		if v != nil {
			return *v
		}
		var ret SidecarSpecOutboundTrafficPolicyPatch
		return ret
	}).(SidecarSpecOutboundTrafficPolicyPatchOutput)
}

func (o SidecarSpecOutboundTrafficPolicyPatchPtrOutput) EgressProxy() SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput {
	return o.ApplyT(func(v *SidecarSpecOutboundTrafficPolicyPatch) *SidecarSpecOutboundTrafficPolicyEgressProxyPatch {
		if v == nil {
			return nil
		}
		return v.EgressProxy
	}).(SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput)
}

// Valid Options: REGISTRY_ONLY, ALLOW_ANY
func (o SidecarSpecOutboundTrafficPolicyPatchPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SidecarSpecOutboundTrafficPolicyPatch) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Configuration affecting network reachability of a sidecar. See more details at: https://istio.io/docs/reference/config/networking/sidecar.html
type SidecarSpecPatch struct {
	// Egress specifies the configuration of the sidecar for processing outbound traffic from the attached workload instance to other services in the mesh.
	Egress                []SidecarSpecEgressPatch               `pulumi:"egress"`
	InboundConnectionPool *SidecarSpecInboundConnectionPoolPatch `pulumi:"inboundConnectionPool"`
	// Ingress specifies the configuration of the sidecar for processing inbound traffic to the attached workload instance.
	Ingress               []SidecarSpecIngressPatch              `pulumi:"ingress"`
	OutboundTrafficPolicy *SidecarSpecOutboundTrafficPolicyPatch `pulumi:"outboundTrafficPolicy"`
	WorkloadSelector      *SidecarSpecWorkloadSelectorPatch      `pulumi:"workloadSelector"`
}

// SidecarSpecPatchInput is an input type that accepts SidecarSpecPatchArgs and SidecarSpecPatchOutput values.
// You can construct a concrete instance of `SidecarSpecPatchInput` via:
//
//	SidecarSpecPatchArgs{...}
type SidecarSpecPatchInput interface {
	pulumi.Input

	ToSidecarSpecPatchOutput() SidecarSpecPatchOutput
	ToSidecarSpecPatchOutputWithContext(context.Context) SidecarSpecPatchOutput
}

// Configuration affecting network reachability of a sidecar. See more details at: https://istio.io/docs/reference/config/networking/sidecar.html
type SidecarSpecPatchArgs struct {
	// Egress specifies the configuration of the sidecar for processing outbound traffic from the attached workload instance to other services in the mesh.
	Egress                SidecarSpecEgressPatchArrayInput              `pulumi:"egress"`
	InboundConnectionPool SidecarSpecInboundConnectionPoolPatchPtrInput `pulumi:"inboundConnectionPool"`
	// Ingress specifies the configuration of the sidecar for processing inbound traffic to the attached workload instance.
	Ingress               SidecarSpecIngressPatchArrayInput             `pulumi:"ingress"`
	OutboundTrafficPolicy SidecarSpecOutboundTrafficPolicyPatchPtrInput `pulumi:"outboundTrafficPolicy"`
	WorkloadSelector      SidecarSpecWorkloadSelectorPatchPtrInput      `pulumi:"workloadSelector"`
}

func (SidecarSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecPatch)(nil)).Elem()
}

func (i SidecarSpecPatchArgs) ToSidecarSpecPatchOutput() SidecarSpecPatchOutput {
	return i.ToSidecarSpecPatchOutputWithContext(context.Background())
}

func (i SidecarSpecPatchArgs) ToSidecarSpecPatchOutputWithContext(ctx context.Context) SidecarSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecPatchOutput)
}

func (i SidecarSpecPatchArgs) ToSidecarSpecPatchPtrOutput() SidecarSpecPatchPtrOutput {
	return i.ToSidecarSpecPatchPtrOutputWithContext(context.Background())
}

func (i SidecarSpecPatchArgs) ToSidecarSpecPatchPtrOutputWithContext(ctx context.Context) SidecarSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecPatchOutput).ToSidecarSpecPatchPtrOutputWithContext(ctx)
}

// SidecarSpecPatchPtrInput is an input type that accepts SidecarSpecPatchArgs, SidecarSpecPatchPtr and SidecarSpecPatchPtrOutput values.
// You can construct a concrete instance of `SidecarSpecPatchPtrInput` via:
//
//	        SidecarSpecPatchArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecPatchPtrInput interface {
	pulumi.Input

	ToSidecarSpecPatchPtrOutput() SidecarSpecPatchPtrOutput
	ToSidecarSpecPatchPtrOutputWithContext(context.Context) SidecarSpecPatchPtrOutput
}

type sidecarSpecPatchPtrType SidecarSpecPatchArgs

func SidecarSpecPatchPtr(v *SidecarSpecPatchArgs) SidecarSpecPatchPtrInput {
	return (*sidecarSpecPatchPtrType)(v)
}

func (*sidecarSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecPatch)(nil)).Elem()
}

func (i *sidecarSpecPatchPtrType) ToSidecarSpecPatchPtrOutput() SidecarSpecPatchPtrOutput {
	return i.ToSidecarSpecPatchPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecPatchPtrType) ToSidecarSpecPatchPtrOutputWithContext(ctx context.Context) SidecarSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecPatchPtrOutput)
}

// Configuration affecting network reachability of a sidecar. See more details at: https://istio.io/docs/reference/config/networking/sidecar.html
type SidecarSpecPatchOutput struct{ *pulumi.OutputState }

func (SidecarSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecPatch)(nil)).Elem()
}

func (o SidecarSpecPatchOutput) ToSidecarSpecPatchOutput() SidecarSpecPatchOutput {
	return o
}

func (o SidecarSpecPatchOutput) ToSidecarSpecPatchOutputWithContext(ctx context.Context) SidecarSpecPatchOutput {
	return o
}

func (o SidecarSpecPatchOutput) ToSidecarSpecPatchPtrOutput() SidecarSpecPatchPtrOutput {
	return o.ToSidecarSpecPatchPtrOutputWithContext(context.Background())
}

func (o SidecarSpecPatchOutput) ToSidecarSpecPatchPtrOutputWithContext(ctx context.Context) SidecarSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecPatch) *SidecarSpecPatch {
		return &v
	}).(SidecarSpecPatchPtrOutput)
}

// Egress specifies the configuration of the sidecar for processing outbound traffic from the attached workload instance to other services in the mesh.
func (o SidecarSpecPatchOutput) Egress() SidecarSpecEgressPatchArrayOutput {
	return o.ApplyT(func(v SidecarSpecPatch) []SidecarSpecEgressPatch { return v.Egress }).(SidecarSpecEgressPatchArrayOutput)
}

func (o SidecarSpecPatchOutput) InboundConnectionPool() SidecarSpecInboundConnectionPoolPatchPtrOutput {
	return o.ApplyT(func(v SidecarSpecPatch) *SidecarSpecInboundConnectionPoolPatch { return v.InboundConnectionPool }).(SidecarSpecInboundConnectionPoolPatchPtrOutput)
}

// Ingress specifies the configuration of the sidecar for processing inbound traffic to the attached workload instance.
func (o SidecarSpecPatchOutput) Ingress() SidecarSpecIngressPatchArrayOutput {
	return o.ApplyT(func(v SidecarSpecPatch) []SidecarSpecIngressPatch { return v.Ingress }).(SidecarSpecIngressPatchArrayOutput)
}

func (o SidecarSpecPatchOutput) OutboundTrafficPolicy() SidecarSpecOutboundTrafficPolicyPatchPtrOutput {
	return o.ApplyT(func(v SidecarSpecPatch) *SidecarSpecOutboundTrafficPolicyPatch { return v.OutboundTrafficPolicy }).(SidecarSpecOutboundTrafficPolicyPatchPtrOutput)
}

func (o SidecarSpecPatchOutput) WorkloadSelector() SidecarSpecWorkloadSelectorPatchPtrOutput {
	return o.ApplyT(func(v SidecarSpecPatch) *SidecarSpecWorkloadSelectorPatch { return v.WorkloadSelector }).(SidecarSpecWorkloadSelectorPatchPtrOutput)
}

type SidecarSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecPatch)(nil)).Elem()
}

func (o SidecarSpecPatchPtrOutput) ToSidecarSpecPatchPtrOutput() SidecarSpecPatchPtrOutput {
	return o
}

func (o SidecarSpecPatchPtrOutput) ToSidecarSpecPatchPtrOutputWithContext(ctx context.Context) SidecarSpecPatchPtrOutput {
	return o
}

func (o SidecarSpecPatchPtrOutput) Elem() SidecarSpecPatchOutput {
	return o.ApplyT(func(v *SidecarSpecPatch) SidecarSpecPatch {
		if v != nil {
			return *v
		}
		var ret SidecarSpecPatch
		return ret
	}).(SidecarSpecPatchOutput)
}

// Egress specifies the configuration of the sidecar for processing outbound traffic from the attached workload instance to other services in the mesh.
func (o SidecarSpecPatchPtrOutput) Egress() SidecarSpecEgressPatchArrayOutput {
	return o.ApplyT(func(v *SidecarSpecPatch) []SidecarSpecEgressPatch {
		if v == nil {
			return nil
		}
		return v.Egress
	}).(SidecarSpecEgressPatchArrayOutput)
}

func (o SidecarSpecPatchPtrOutput) InboundConnectionPool() SidecarSpecInboundConnectionPoolPatchPtrOutput {
	return o.ApplyT(func(v *SidecarSpecPatch) *SidecarSpecInboundConnectionPoolPatch {
		if v == nil {
			return nil
		}
		return v.InboundConnectionPool
	}).(SidecarSpecInboundConnectionPoolPatchPtrOutput)
}

// Ingress specifies the configuration of the sidecar for processing inbound traffic to the attached workload instance.
func (o SidecarSpecPatchPtrOutput) Ingress() SidecarSpecIngressPatchArrayOutput {
	return o.ApplyT(func(v *SidecarSpecPatch) []SidecarSpecIngressPatch {
		if v == nil {
			return nil
		}
		return v.Ingress
	}).(SidecarSpecIngressPatchArrayOutput)
}

func (o SidecarSpecPatchPtrOutput) OutboundTrafficPolicy() SidecarSpecOutboundTrafficPolicyPatchPtrOutput {
	return o.ApplyT(func(v *SidecarSpecPatch) *SidecarSpecOutboundTrafficPolicyPatch {
		if v == nil {
			return nil
		}
		return v.OutboundTrafficPolicy
	}).(SidecarSpecOutboundTrafficPolicyPatchPtrOutput)
}

func (o SidecarSpecPatchPtrOutput) WorkloadSelector() SidecarSpecWorkloadSelectorPatchPtrOutput {
	return o.ApplyT(func(v *SidecarSpecPatch) *SidecarSpecWorkloadSelectorPatch {
		if v == nil {
			return nil
		}
		return v.WorkloadSelector
	}).(SidecarSpecWorkloadSelectorPatchPtrOutput)
}

// Criteria used to select the specific set of pods/VMs on which this `Sidecar` configuration should be applied.
type SidecarSpecWorkloadSelector struct {
	// One or more labels that indicate a specific set of pods/VMs on which the configuration should be applied.
	Labels map[string]string `pulumi:"labels"`
}

// SidecarSpecWorkloadSelectorInput is an input type that accepts SidecarSpecWorkloadSelectorArgs and SidecarSpecWorkloadSelectorOutput values.
// You can construct a concrete instance of `SidecarSpecWorkloadSelectorInput` via:
//
//	SidecarSpecWorkloadSelectorArgs{...}
type SidecarSpecWorkloadSelectorInput interface {
	pulumi.Input

	ToSidecarSpecWorkloadSelectorOutput() SidecarSpecWorkloadSelectorOutput
	ToSidecarSpecWorkloadSelectorOutputWithContext(context.Context) SidecarSpecWorkloadSelectorOutput
}

// Criteria used to select the specific set of pods/VMs on which this `Sidecar` configuration should be applied.
type SidecarSpecWorkloadSelectorArgs struct {
	// One or more labels that indicate a specific set of pods/VMs on which the configuration should be applied.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (SidecarSpecWorkloadSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecWorkloadSelector)(nil)).Elem()
}

func (i SidecarSpecWorkloadSelectorArgs) ToSidecarSpecWorkloadSelectorOutput() SidecarSpecWorkloadSelectorOutput {
	return i.ToSidecarSpecWorkloadSelectorOutputWithContext(context.Background())
}

func (i SidecarSpecWorkloadSelectorArgs) ToSidecarSpecWorkloadSelectorOutputWithContext(ctx context.Context) SidecarSpecWorkloadSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecWorkloadSelectorOutput)
}

func (i SidecarSpecWorkloadSelectorArgs) ToSidecarSpecWorkloadSelectorPtrOutput() SidecarSpecWorkloadSelectorPtrOutput {
	return i.ToSidecarSpecWorkloadSelectorPtrOutputWithContext(context.Background())
}

func (i SidecarSpecWorkloadSelectorArgs) ToSidecarSpecWorkloadSelectorPtrOutputWithContext(ctx context.Context) SidecarSpecWorkloadSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecWorkloadSelectorOutput).ToSidecarSpecWorkloadSelectorPtrOutputWithContext(ctx)
}

// SidecarSpecWorkloadSelectorPtrInput is an input type that accepts SidecarSpecWorkloadSelectorArgs, SidecarSpecWorkloadSelectorPtr and SidecarSpecWorkloadSelectorPtrOutput values.
// You can construct a concrete instance of `SidecarSpecWorkloadSelectorPtrInput` via:
//
//	        SidecarSpecWorkloadSelectorArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecWorkloadSelectorPtrInput interface {
	pulumi.Input

	ToSidecarSpecWorkloadSelectorPtrOutput() SidecarSpecWorkloadSelectorPtrOutput
	ToSidecarSpecWorkloadSelectorPtrOutputWithContext(context.Context) SidecarSpecWorkloadSelectorPtrOutput
}

type sidecarSpecWorkloadSelectorPtrType SidecarSpecWorkloadSelectorArgs

func SidecarSpecWorkloadSelectorPtr(v *SidecarSpecWorkloadSelectorArgs) SidecarSpecWorkloadSelectorPtrInput {
	return (*sidecarSpecWorkloadSelectorPtrType)(v)
}

func (*sidecarSpecWorkloadSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecWorkloadSelector)(nil)).Elem()
}

func (i *sidecarSpecWorkloadSelectorPtrType) ToSidecarSpecWorkloadSelectorPtrOutput() SidecarSpecWorkloadSelectorPtrOutput {
	return i.ToSidecarSpecWorkloadSelectorPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecWorkloadSelectorPtrType) ToSidecarSpecWorkloadSelectorPtrOutputWithContext(ctx context.Context) SidecarSpecWorkloadSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecWorkloadSelectorPtrOutput)
}

// Criteria used to select the specific set of pods/VMs on which this `Sidecar` configuration should be applied.
type SidecarSpecWorkloadSelectorOutput struct{ *pulumi.OutputState }

func (SidecarSpecWorkloadSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecWorkloadSelector)(nil)).Elem()
}

func (o SidecarSpecWorkloadSelectorOutput) ToSidecarSpecWorkloadSelectorOutput() SidecarSpecWorkloadSelectorOutput {
	return o
}

func (o SidecarSpecWorkloadSelectorOutput) ToSidecarSpecWorkloadSelectorOutputWithContext(ctx context.Context) SidecarSpecWorkloadSelectorOutput {
	return o
}

func (o SidecarSpecWorkloadSelectorOutput) ToSidecarSpecWorkloadSelectorPtrOutput() SidecarSpecWorkloadSelectorPtrOutput {
	return o.ToSidecarSpecWorkloadSelectorPtrOutputWithContext(context.Background())
}

func (o SidecarSpecWorkloadSelectorOutput) ToSidecarSpecWorkloadSelectorPtrOutputWithContext(ctx context.Context) SidecarSpecWorkloadSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecWorkloadSelector) *SidecarSpecWorkloadSelector {
		return &v
	}).(SidecarSpecWorkloadSelectorPtrOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which the configuration should be applied.
func (o SidecarSpecWorkloadSelectorOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v SidecarSpecWorkloadSelector) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type SidecarSpecWorkloadSelectorPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecWorkloadSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecWorkloadSelector)(nil)).Elem()
}

func (o SidecarSpecWorkloadSelectorPtrOutput) ToSidecarSpecWorkloadSelectorPtrOutput() SidecarSpecWorkloadSelectorPtrOutput {
	return o
}

func (o SidecarSpecWorkloadSelectorPtrOutput) ToSidecarSpecWorkloadSelectorPtrOutputWithContext(ctx context.Context) SidecarSpecWorkloadSelectorPtrOutput {
	return o
}

func (o SidecarSpecWorkloadSelectorPtrOutput) Elem() SidecarSpecWorkloadSelectorOutput {
	return o.ApplyT(func(v *SidecarSpecWorkloadSelector) SidecarSpecWorkloadSelector {
		if v != nil {
			return *v
		}
		var ret SidecarSpecWorkloadSelector
		return ret
	}).(SidecarSpecWorkloadSelectorOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which the configuration should be applied.
func (o SidecarSpecWorkloadSelectorPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SidecarSpecWorkloadSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Criteria used to select the specific set of pods/VMs on which this `Sidecar` configuration should be applied.
type SidecarSpecWorkloadSelectorPatch struct {
	// One or more labels that indicate a specific set of pods/VMs on which the configuration should be applied.
	Labels map[string]string `pulumi:"labels"`
}

// SidecarSpecWorkloadSelectorPatchInput is an input type that accepts SidecarSpecWorkloadSelectorPatchArgs and SidecarSpecWorkloadSelectorPatchOutput values.
// You can construct a concrete instance of `SidecarSpecWorkloadSelectorPatchInput` via:
//
//	SidecarSpecWorkloadSelectorPatchArgs{...}
type SidecarSpecWorkloadSelectorPatchInput interface {
	pulumi.Input

	ToSidecarSpecWorkloadSelectorPatchOutput() SidecarSpecWorkloadSelectorPatchOutput
	ToSidecarSpecWorkloadSelectorPatchOutputWithContext(context.Context) SidecarSpecWorkloadSelectorPatchOutput
}

// Criteria used to select the specific set of pods/VMs on which this `Sidecar` configuration should be applied.
type SidecarSpecWorkloadSelectorPatchArgs struct {
	// One or more labels that indicate a specific set of pods/VMs on which the configuration should be applied.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (SidecarSpecWorkloadSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecWorkloadSelectorPatch)(nil)).Elem()
}

func (i SidecarSpecWorkloadSelectorPatchArgs) ToSidecarSpecWorkloadSelectorPatchOutput() SidecarSpecWorkloadSelectorPatchOutput {
	return i.ToSidecarSpecWorkloadSelectorPatchOutputWithContext(context.Background())
}

func (i SidecarSpecWorkloadSelectorPatchArgs) ToSidecarSpecWorkloadSelectorPatchOutputWithContext(ctx context.Context) SidecarSpecWorkloadSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecWorkloadSelectorPatchOutput)
}

func (i SidecarSpecWorkloadSelectorPatchArgs) ToSidecarSpecWorkloadSelectorPatchPtrOutput() SidecarSpecWorkloadSelectorPatchPtrOutput {
	return i.ToSidecarSpecWorkloadSelectorPatchPtrOutputWithContext(context.Background())
}

func (i SidecarSpecWorkloadSelectorPatchArgs) ToSidecarSpecWorkloadSelectorPatchPtrOutputWithContext(ctx context.Context) SidecarSpecWorkloadSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecWorkloadSelectorPatchOutput).ToSidecarSpecWorkloadSelectorPatchPtrOutputWithContext(ctx)
}

// SidecarSpecWorkloadSelectorPatchPtrInput is an input type that accepts SidecarSpecWorkloadSelectorPatchArgs, SidecarSpecWorkloadSelectorPatchPtr and SidecarSpecWorkloadSelectorPatchPtrOutput values.
// You can construct a concrete instance of `SidecarSpecWorkloadSelectorPatchPtrInput` via:
//
//	        SidecarSpecWorkloadSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type SidecarSpecWorkloadSelectorPatchPtrInput interface {
	pulumi.Input

	ToSidecarSpecWorkloadSelectorPatchPtrOutput() SidecarSpecWorkloadSelectorPatchPtrOutput
	ToSidecarSpecWorkloadSelectorPatchPtrOutputWithContext(context.Context) SidecarSpecWorkloadSelectorPatchPtrOutput
}

type sidecarSpecWorkloadSelectorPatchPtrType SidecarSpecWorkloadSelectorPatchArgs

func SidecarSpecWorkloadSelectorPatchPtr(v *SidecarSpecWorkloadSelectorPatchArgs) SidecarSpecWorkloadSelectorPatchPtrInput {
	return (*sidecarSpecWorkloadSelectorPatchPtrType)(v)
}

func (*sidecarSpecWorkloadSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecWorkloadSelectorPatch)(nil)).Elem()
}

func (i *sidecarSpecWorkloadSelectorPatchPtrType) ToSidecarSpecWorkloadSelectorPatchPtrOutput() SidecarSpecWorkloadSelectorPatchPtrOutput {
	return i.ToSidecarSpecWorkloadSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *sidecarSpecWorkloadSelectorPatchPtrType) ToSidecarSpecWorkloadSelectorPatchPtrOutputWithContext(ctx context.Context) SidecarSpecWorkloadSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SidecarSpecWorkloadSelectorPatchPtrOutput)
}

// Criteria used to select the specific set of pods/VMs on which this `Sidecar` configuration should be applied.
type SidecarSpecWorkloadSelectorPatchOutput struct{ *pulumi.OutputState }

func (SidecarSpecWorkloadSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SidecarSpecWorkloadSelectorPatch)(nil)).Elem()
}

func (o SidecarSpecWorkloadSelectorPatchOutput) ToSidecarSpecWorkloadSelectorPatchOutput() SidecarSpecWorkloadSelectorPatchOutput {
	return o
}

func (o SidecarSpecWorkloadSelectorPatchOutput) ToSidecarSpecWorkloadSelectorPatchOutputWithContext(ctx context.Context) SidecarSpecWorkloadSelectorPatchOutput {
	return o
}

func (o SidecarSpecWorkloadSelectorPatchOutput) ToSidecarSpecWorkloadSelectorPatchPtrOutput() SidecarSpecWorkloadSelectorPatchPtrOutput {
	return o.ToSidecarSpecWorkloadSelectorPatchPtrOutputWithContext(context.Background())
}

func (o SidecarSpecWorkloadSelectorPatchOutput) ToSidecarSpecWorkloadSelectorPatchPtrOutputWithContext(ctx context.Context) SidecarSpecWorkloadSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SidecarSpecWorkloadSelectorPatch) *SidecarSpecWorkloadSelectorPatch {
		return &v
	}).(SidecarSpecWorkloadSelectorPatchPtrOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which the configuration should be applied.
func (o SidecarSpecWorkloadSelectorPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v SidecarSpecWorkloadSelectorPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type SidecarSpecWorkloadSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (SidecarSpecWorkloadSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SidecarSpecWorkloadSelectorPatch)(nil)).Elem()
}

func (o SidecarSpecWorkloadSelectorPatchPtrOutput) ToSidecarSpecWorkloadSelectorPatchPtrOutput() SidecarSpecWorkloadSelectorPatchPtrOutput {
	return o
}

func (o SidecarSpecWorkloadSelectorPatchPtrOutput) ToSidecarSpecWorkloadSelectorPatchPtrOutputWithContext(ctx context.Context) SidecarSpecWorkloadSelectorPatchPtrOutput {
	return o
}

func (o SidecarSpecWorkloadSelectorPatchPtrOutput) Elem() SidecarSpecWorkloadSelectorPatchOutput {
	return o.ApplyT(func(v *SidecarSpecWorkloadSelectorPatch) SidecarSpecWorkloadSelectorPatch {
		if v != nil {
			return *v
		}
		var ret SidecarSpecWorkloadSelectorPatch
		return ret
	}).(SidecarSpecWorkloadSelectorPatchOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which the configuration should be applied.
func (o SidecarSpecWorkloadSelectorPatchPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SidecarSpecWorkloadSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

type VirtualServiceType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta     `pulumi:"metadata"`
	Spec     *VirtualServiceSpec    `pulumi:"spec"`
	Status   map[string]interface{} `pulumi:"status"`
}

// VirtualServiceTypeInput is an input type that accepts VirtualServiceTypeArgs and VirtualServiceTypeOutput values.
// You can construct a concrete instance of `VirtualServiceTypeInput` via:
//
//	VirtualServiceTypeArgs{...}
type VirtualServiceTypeInput interface {
	pulumi.Input

	ToVirtualServiceTypeOutput() VirtualServiceTypeOutput
	ToVirtualServiceTypeOutputWithContext(context.Context) VirtualServiceTypeOutput
}

type VirtualServiceTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput  `pulumi:"metadata"`
	Spec     VirtualServiceSpecPtrInput `pulumi:"spec"`
	Status   pulumi.MapInput            `pulumi:"status"`
}

func (VirtualServiceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceType)(nil)).Elem()
}

func (i VirtualServiceTypeArgs) ToVirtualServiceTypeOutput() VirtualServiceTypeOutput {
	return i.ToVirtualServiceTypeOutputWithContext(context.Background())
}

func (i VirtualServiceTypeArgs) ToVirtualServiceTypeOutputWithContext(ctx context.Context) VirtualServiceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceTypeOutput)
}

// VirtualServiceTypeArrayInput is an input type that accepts VirtualServiceTypeArray and VirtualServiceTypeArrayOutput values.
// You can construct a concrete instance of `VirtualServiceTypeArrayInput` via:
//
//	VirtualServiceTypeArray{ VirtualServiceTypeArgs{...} }
type VirtualServiceTypeArrayInput interface {
	pulumi.Input

	ToVirtualServiceTypeArrayOutput() VirtualServiceTypeArrayOutput
	ToVirtualServiceTypeArrayOutputWithContext(context.Context) VirtualServiceTypeArrayOutput
}

type VirtualServiceTypeArray []VirtualServiceTypeInput

func (VirtualServiceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceType)(nil)).Elem()
}

func (i VirtualServiceTypeArray) ToVirtualServiceTypeArrayOutput() VirtualServiceTypeArrayOutput {
	return i.ToVirtualServiceTypeArrayOutputWithContext(context.Background())
}

func (i VirtualServiceTypeArray) ToVirtualServiceTypeArrayOutputWithContext(ctx context.Context) VirtualServiceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceTypeArrayOutput)
}

type VirtualServiceTypeOutput struct{ *pulumi.OutputState }

func (VirtualServiceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceType)(nil)).Elem()
}

func (o VirtualServiceTypeOutput) ToVirtualServiceTypeOutput() VirtualServiceTypeOutput {
	return o
}

func (o VirtualServiceTypeOutput) ToVirtualServiceTypeOutputWithContext(ctx context.Context) VirtualServiceTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o VirtualServiceTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o VirtualServiceTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o VirtualServiceTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v VirtualServiceType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o VirtualServiceTypeOutput) Spec() VirtualServiceSpecPtrOutput {
	return o.ApplyT(func(v VirtualServiceType) *VirtualServiceSpec { return v.Spec }).(VirtualServiceSpecPtrOutput)
}

func (o VirtualServiceTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v VirtualServiceType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

type VirtualServiceTypeArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceType)(nil)).Elem()
}

func (o VirtualServiceTypeArrayOutput) ToVirtualServiceTypeArrayOutput() VirtualServiceTypeArrayOutput {
	return o
}

func (o VirtualServiceTypeArrayOutput) ToVirtualServiceTypeArrayOutputWithContext(ctx context.Context) VirtualServiceTypeArrayOutput {
	return o
}

func (o VirtualServiceTypeArrayOutput) Index(i pulumi.IntInput) VirtualServiceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceType {
		return vs[0].([]VirtualServiceType)[vs[1].(int)]
	}).(VirtualServiceTypeOutput)
}

// VirtualServiceList is a list of VirtualService
type VirtualServiceListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of virtualservices. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []VirtualServiceType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// VirtualServiceListTypeInput is an input type that accepts VirtualServiceListTypeArgs and VirtualServiceListTypeOutput values.
// You can construct a concrete instance of `VirtualServiceListTypeInput` via:
//
//	VirtualServiceListTypeArgs{...}
type VirtualServiceListTypeInput interface {
	pulumi.Input

	ToVirtualServiceListTypeOutput() VirtualServiceListTypeOutput
	ToVirtualServiceListTypeOutputWithContext(context.Context) VirtualServiceListTypeOutput
}

// VirtualServiceList is a list of VirtualService
type VirtualServiceListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of virtualservices. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items VirtualServiceTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (VirtualServiceListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceListType)(nil)).Elem()
}

func (i VirtualServiceListTypeArgs) ToVirtualServiceListTypeOutput() VirtualServiceListTypeOutput {
	return i.ToVirtualServiceListTypeOutputWithContext(context.Background())
}

func (i VirtualServiceListTypeArgs) ToVirtualServiceListTypeOutputWithContext(ctx context.Context) VirtualServiceListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceListTypeOutput)
}

// VirtualServiceList is a list of VirtualService
type VirtualServiceListTypeOutput struct{ *pulumi.OutputState }

func (VirtualServiceListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceListType)(nil)).Elem()
}

func (o VirtualServiceListTypeOutput) ToVirtualServiceListTypeOutput() VirtualServiceListTypeOutput {
	return o
}

func (o VirtualServiceListTypeOutput) ToVirtualServiceListTypeOutputWithContext(ctx context.Context) VirtualServiceListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o VirtualServiceListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of virtualservices. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o VirtualServiceListTypeOutput) Items() VirtualServiceTypeArrayOutput {
	return o.ApplyT(func(v VirtualServiceListType) []VirtualServiceType { return v.Items }).(VirtualServiceTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o VirtualServiceListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o VirtualServiceListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v VirtualServiceListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

type VirtualServicePatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch  `pulumi:"metadata"`
	Spec     *VirtualServiceSpecPatch `pulumi:"spec"`
	Status   map[string]interface{}   `pulumi:"status"`
}

// VirtualServicePatchTypeInput is an input type that accepts VirtualServicePatchTypeArgs and VirtualServicePatchTypeOutput values.
// You can construct a concrete instance of `VirtualServicePatchTypeInput` via:
//
//	VirtualServicePatchTypeArgs{...}
type VirtualServicePatchTypeInput interface {
	pulumi.Input

	ToVirtualServicePatchTypeOutput() VirtualServicePatchTypeOutput
	ToVirtualServicePatchTypeOutputWithContext(context.Context) VirtualServicePatchTypeOutput
}

type VirtualServicePatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput  `pulumi:"metadata"`
	Spec     VirtualServiceSpecPatchPtrInput `pulumi:"spec"`
	Status   pulumi.MapInput                 `pulumi:"status"`
}

func (VirtualServicePatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServicePatchType)(nil)).Elem()
}

func (i VirtualServicePatchTypeArgs) ToVirtualServicePatchTypeOutput() VirtualServicePatchTypeOutput {
	return i.ToVirtualServicePatchTypeOutputWithContext(context.Background())
}

func (i VirtualServicePatchTypeArgs) ToVirtualServicePatchTypeOutputWithContext(ctx context.Context) VirtualServicePatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServicePatchTypeOutput)
}

type VirtualServicePatchTypeOutput struct{ *pulumi.OutputState }

func (VirtualServicePatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServicePatchType)(nil)).Elem()
}

func (o VirtualServicePatchTypeOutput) ToVirtualServicePatchTypeOutput() VirtualServicePatchTypeOutput {
	return o
}

func (o VirtualServicePatchTypeOutput) ToVirtualServicePatchTypeOutputWithContext(ctx context.Context) VirtualServicePatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o VirtualServicePatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServicePatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o VirtualServicePatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServicePatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o VirtualServicePatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v VirtualServicePatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o VirtualServicePatchTypeOutput) Spec() VirtualServiceSpecPatchPtrOutput {
	return o.ApplyT(func(v VirtualServicePatchType) *VirtualServiceSpecPatch { return v.Spec }).(VirtualServiceSpecPatchPtrOutput)
}

func (o VirtualServicePatchTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v VirtualServicePatchType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

// Configuration affecting label/content routing, sni routing, etc. See more details at: https://istio.io/docs/reference/config/networking/virtual-service.html
type VirtualServiceSpec struct {
	// A list of namespaces to which this virtual service is exported.
	ExportTo []string `pulumi:"exportTo"`
	// The names of gateways and sidecars that should apply these routes.
	Gateways []string `pulumi:"gateways"`
	// The destination hosts to which traffic is being sent.
	Hosts []string `pulumi:"hosts"`
	// An ordered list of route rules for HTTP traffic.
	Http []VirtualServiceSpecHttp `pulumi:"http"`
	// An ordered list of route rules for opaque TCP traffic.
	Tcp []VirtualServiceSpecTcp `pulumi:"tcp"`
	// An ordered list of route rule for non-terminated TLS & HTTPS traffic.
	Tls []VirtualServiceSpecTls `pulumi:"tls"`
}

// VirtualServiceSpecInput is an input type that accepts VirtualServiceSpecArgs and VirtualServiceSpecOutput values.
// You can construct a concrete instance of `VirtualServiceSpecInput` via:
//
//	VirtualServiceSpecArgs{...}
type VirtualServiceSpecInput interface {
	pulumi.Input

	ToVirtualServiceSpecOutput() VirtualServiceSpecOutput
	ToVirtualServiceSpecOutputWithContext(context.Context) VirtualServiceSpecOutput
}

// Configuration affecting label/content routing, sni routing, etc. See more details at: https://istio.io/docs/reference/config/networking/virtual-service.html
type VirtualServiceSpecArgs struct {
	// A list of namespaces to which this virtual service is exported.
	ExportTo pulumi.StringArrayInput `pulumi:"exportTo"`
	// The names of gateways and sidecars that should apply these routes.
	Gateways pulumi.StringArrayInput `pulumi:"gateways"`
	// The destination hosts to which traffic is being sent.
	Hosts pulumi.StringArrayInput `pulumi:"hosts"`
	// An ordered list of route rules for HTTP traffic.
	Http VirtualServiceSpecHttpArrayInput `pulumi:"http"`
	// An ordered list of route rules for opaque TCP traffic.
	Tcp VirtualServiceSpecTcpArrayInput `pulumi:"tcp"`
	// An ordered list of route rule for non-terminated TLS & HTTPS traffic.
	Tls VirtualServiceSpecTlsArrayInput `pulumi:"tls"`
}

func (VirtualServiceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpec)(nil)).Elem()
}

func (i VirtualServiceSpecArgs) ToVirtualServiceSpecOutput() VirtualServiceSpecOutput {
	return i.ToVirtualServiceSpecOutputWithContext(context.Background())
}

func (i VirtualServiceSpecArgs) ToVirtualServiceSpecOutputWithContext(ctx context.Context) VirtualServiceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecOutput)
}

func (i VirtualServiceSpecArgs) ToVirtualServiceSpecPtrOutput() VirtualServiceSpecPtrOutput {
	return i.ToVirtualServiceSpecPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecArgs) ToVirtualServiceSpecPtrOutputWithContext(ctx context.Context) VirtualServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecOutput).ToVirtualServiceSpecPtrOutputWithContext(ctx)
}

// VirtualServiceSpecPtrInput is an input type that accepts VirtualServiceSpecArgs, VirtualServiceSpecPtr and VirtualServiceSpecPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecPtrInput` via:
//
//	        VirtualServiceSpecArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecPtrOutput() VirtualServiceSpecPtrOutput
	ToVirtualServiceSpecPtrOutputWithContext(context.Context) VirtualServiceSpecPtrOutput
}

type virtualServiceSpecPtrType VirtualServiceSpecArgs

func VirtualServiceSpecPtr(v *VirtualServiceSpecArgs) VirtualServiceSpecPtrInput {
	return (*virtualServiceSpecPtrType)(v)
}

func (*virtualServiceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpec)(nil)).Elem()
}

func (i *virtualServiceSpecPtrType) ToVirtualServiceSpecPtrOutput() VirtualServiceSpecPtrOutput {
	return i.ToVirtualServiceSpecPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecPtrType) ToVirtualServiceSpecPtrOutputWithContext(ctx context.Context) VirtualServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecPtrOutput)
}

// Configuration affecting label/content routing, sni routing, etc. See more details at: https://istio.io/docs/reference/config/networking/virtual-service.html
type VirtualServiceSpecOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpec)(nil)).Elem()
}

func (o VirtualServiceSpecOutput) ToVirtualServiceSpecOutput() VirtualServiceSpecOutput {
	return o
}

func (o VirtualServiceSpecOutput) ToVirtualServiceSpecOutputWithContext(ctx context.Context) VirtualServiceSpecOutput {
	return o
}

func (o VirtualServiceSpecOutput) ToVirtualServiceSpecPtrOutput() VirtualServiceSpecPtrOutput {
	return o.ToVirtualServiceSpecPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecOutput) ToVirtualServiceSpecPtrOutputWithContext(ctx context.Context) VirtualServiceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpec) *VirtualServiceSpec {
		return &v
	}).(VirtualServiceSpecPtrOutput)
}

// A list of namespaces to which this virtual service is exported.
func (o VirtualServiceSpecOutput) ExportTo() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpec) []string { return v.ExportTo }).(pulumi.StringArrayOutput)
}

// The names of gateways and sidecars that should apply these routes.
func (o VirtualServiceSpecOutput) Gateways() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpec) []string { return v.Gateways }).(pulumi.StringArrayOutput)
}

// The destination hosts to which traffic is being sent.
func (o VirtualServiceSpecOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpec) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// An ordered list of route rules for HTTP traffic.
func (o VirtualServiceSpecOutput) Http() VirtualServiceSpecHttpArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpec) []VirtualServiceSpecHttp { return v.Http }).(VirtualServiceSpecHttpArrayOutput)
}

// An ordered list of route rules for opaque TCP traffic.
func (o VirtualServiceSpecOutput) Tcp() VirtualServiceSpecTcpArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpec) []VirtualServiceSpecTcp { return v.Tcp }).(VirtualServiceSpecTcpArrayOutput)
}

// An ordered list of route rule for non-terminated TLS & HTTPS traffic.
func (o VirtualServiceSpecOutput) Tls() VirtualServiceSpecTlsArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpec) []VirtualServiceSpecTls { return v.Tls }).(VirtualServiceSpecTlsArrayOutput)
}

type VirtualServiceSpecPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpec)(nil)).Elem()
}

func (o VirtualServiceSpecPtrOutput) ToVirtualServiceSpecPtrOutput() VirtualServiceSpecPtrOutput {
	return o
}

func (o VirtualServiceSpecPtrOutput) ToVirtualServiceSpecPtrOutputWithContext(ctx context.Context) VirtualServiceSpecPtrOutput {
	return o
}

func (o VirtualServiceSpecPtrOutput) Elem() VirtualServiceSpecOutput {
	return o.ApplyT(func(v *VirtualServiceSpec) VirtualServiceSpec {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpec
		return ret
	}).(VirtualServiceSpecOutput)
}

// A list of namespaces to which this virtual service is exported.
func (o VirtualServiceSpecPtrOutput) ExportTo() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpec) []string {
		if v == nil {
			return nil
		}
		return v.ExportTo
	}).(pulumi.StringArrayOutput)
}

// The names of gateways and sidecars that should apply these routes.
func (o VirtualServiceSpecPtrOutput) Gateways() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpec) []string {
		if v == nil {
			return nil
		}
		return v.Gateways
	}).(pulumi.StringArrayOutput)
}

// The destination hosts to which traffic is being sent.
func (o VirtualServiceSpecPtrOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpec) []string {
		if v == nil {
			return nil
		}
		return v.Hosts
	}).(pulumi.StringArrayOutput)
}

// An ordered list of route rules for HTTP traffic.
func (o VirtualServiceSpecPtrOutput) Http() VirtualServiceSpecHttpArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpec) []VirtualServiceSpecHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(VirtualServiceSpecHttpArrayOutput)
}

// An ordered list of route rules for opaque TCP traffic.
func (o VirtualServiceSpecPtrOutput) Tcp() VirtualServiceSpecTcpArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpec) []VirtualServiceSpecTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(VirtualServiceSpecTcpArrayOutput)
}

// An ordered list of route rule for non-terminated TLS & HTTPS traffic.
func (o VirtualServiceSpecPtrOutput) Tls() VirtualServiceSpecTlsArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpec) []VirtualServiceSpecTls {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(VirtualServiceSpecTlsArrayOutput)
}

type VirtualServiceSpecHttp struct {
	CorsPolicy     *VirtualServiceSpecHttpCorsPolicy     `pulumi:"corsPolicy"`
	Delegate       *VirtualServiceSpecHttpDelegate       `pulumi:"delegate"`
	DirectResponse *VirtualServiceSpecHttpDirectResponse `pulumi:"directResponse"`
	Fault          *VirtualServiceSpecHttpFault          `pulumi:"fault"`
	Headers        *VirtualServiceSpecHttpHeaders        `pulumi:"headers"`
	// Match conditions to be satisfied for the rule to be activated.
	Match            []VirtualServiceSpecHttpMatch           `pulumi:"match"`
	Mirror           *VirtualServiceSpecHttpMirror           `pulumi:"mirror"`
	MirrorPercent    *int                                    `pulumi:"mirrorPercent"`
	MirrorPercentage *VirtualServiceSpecHttpMirrorPercentage `pulumi:"mirrorPercentage"`
	Mirror_percent   *int                                    `pulumi:"mirror_percent"`
	// Specifies the destinations to mirror HTTP traffic in addition to the original destination.
	Mirrors []VirtualServiceSpecHttpMirrors `pulumi:"mirrors"`
	// The name assigned to the route for debugging purposes.
	Name     *string                         `pulumi:"name"`
	Redirect *VirtualServiceSpecHttpRedirect `pulumi:"redirect"`
	Retries  *VirtualServiceSpecHttpRetries  `pulumi:"retries"`
	Rewrite  *VirtualServiceSpecHttpRewrite  `pulumi:"rewrite"`
	// A HTTP rule can either return a direct_response, redirect or forward (default) traffic.
	Route []VirtualServiceSpecHttpRoute `pulumi:"route"`
	// Timeout for HTTP requests, default is disabled.
	Timeout *string `pulumi:"timeout"`
}

// VirtualServiceSpecHttpInput is an input type that accepts VirtualServiceSpecHttpArgs and VirtualServiceSpecHttpOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpInput` via:
//
//	VirtualServiceSpecHttpArgs{...}
type VirtualServiceSpecHttpInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpOutput() VirtualServiceSpecHttpOutput
	ToVirtualServiceSpecHttpOutputWithContext(context.Context) VirtualServiceSpecHttpOutput
}

type VirtualServiceSpecHttpArgs struct {
	CorsPolicy     VirtualServiceSpecHttpCorsPolicyPtrInput     `pulumi:"corsPolicy"`
	Delegate       VirtualServiceSpecHttpDelegatePtrInput       `pulumi:"delegate"`
	DirectResponse VirtualServiceSpecHttpDirectResponsePtrInput `pulumi:"directResponse"`
	Fault          VirtualServiceSpecHttpFaultPtrInput          `pulumi:"fault"`
	Headers        VirtualServiceSpecHttpHeadersPtrInput        `pulumi:"headers"`
	// Match conditions to be satisfied for the rule to be activated.
	Match            VirtualServiceSpecHttpMatchArrayInput          `pulumi:"match"`
	Mirror           VirtualServiceSpecHttpMirrorPtrInput           `pulumi:"mirror"`
	MirrorPercent    pulumi.IntPtrInput                             `pulumi:"mirrorPercent"`
	MirrorPercentage VirtualServiceSpecHttpMirrorPercentagePtrInput `pulumi:"mirrorPercentage"`
	Mirror_percent   pulumi.IntPtrInput                             `pulumi:"mirror_percent"`
	// Specifies the destinations to mirror HTTP traffic in addition to the original destination.
	Mirrors VirtualServiceSpecHttpMirrorsArrayInput `pulumi:"mirrors"`
	// The name assigned to the route for debugging purposes.
	Name     pulumi.StringPtrInput                  `pulumi:"name"`
	Redirect VirtualServiceSpecHttpRedirectPtrInput `pulumi:"redirect"`
	Retries  VirtualServiceSpecHttpRetriesPtrInput  `pulumi:"retries"`
	Rewrite  VirtualServiceSpecHttpRewritePtrInput  `pulumi:"rewrite"`
	// A HTTP rule can either return a direct_response, redirect or forward (default) traffic.
	Route VirtualServiceSpecHttpRouteArrayInput `pulumi:"route"`
	// Timeout for HTTP requests, default is disabled.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (VirtualServiceSpecHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttp)(nil)).Elem()
}

func (i VirtualServiceSpecHttpArgs) ToVirtualServiceSpecHttpOutput() VirtualServiceSpecHttpOutput {
	return i.ToVirtualServiceSpecHttpOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpArgs) ToVirtualServiceSpecHttpOutputWithContext(ctx context.Context) VirtualServiceSpecHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpOutput)
}

// VirtualServiceSpecHttpArrayInput is an input type that accepts VirtualServiceSpecHttpArray and VirtualServiceSpecHttpArrayOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpArrayInput` via:
//
//	VirtualServiceSpecHttpArray{ VirtualServiceSpecHttpArgs{...} }
type VirtualServiceSpecHttpArrayInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpArrayOutput() VirtualServiceSpecHttpArrayOutput
	ToVirtualServiceSpecHttpArrayOutputWithContext(context.Context) VirtualServiceSpecHttpArrayOutput
}

type VirtualServiceSpecHttpArray []VirtualServiceSpecHttpInput

func (VirtualServiceSpecHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecHttp)(nil)).Elem()
}

func (i VirtualServiceSpecHttpArray) ToVirtualServiceSpecHttpArrayOutput() VirtualServiceSpecHttpArrayOutput {
	return i.ToVirtualServiceSpecHttpArrayOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpArray) ToVirtualServiceSpecHttpArrayOutputWithContext(ctx context.Context) VirtualServiceSpecHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpArrayOutput)
}

type VirtualServiceSpecHttpOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttp)(nil)).Elem()
}

func (o VirtualServiceSpecHttpOutput) ToVirtualServiceSpecHttpOutput() VirtualServiceSpecHttpOutput {
	return o
}

func (o VirtualServiceSpecHttpOutput) ToVirtualServiceSpecHttpOutputWithContext(ctx context.Context) VirtualServiceSpecHttpOutput {
	return o
}

func (o VirtualServiceSpecHttpOutput) CorsPolicy() VirtualServiceSpecHttpCorsPolicyPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttp) *VirtualServiceSpecHttpCorsPolicy { return v.CorsPolicy }).(VirtualServiceSpecHttpCorsPolicyPtrOutput)
}

func (o VirtualServiceSpecHttpOutput) Delegate() VirtualServiceSpecHttpDelegatePtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttp) *VirtualServiceSpecHttpDelegate { return v.Delegate }).(VirtualServiceSpecHttpDelegatePtrOutput)
}

func (o VirtualServiceSpecHttpOutput) DirectResponse() VirtualServiceSpecHttpDirectResponsePtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttp) *VirtualServiceSpecHttpDirectResponse { return v.DirectResponse }).(VirtualServiceSpecHttpDirectResponsePtrOutput)
}

func (o VirtualServiceSpecHttpOutput) Fault() VirtualServiceSpecHttpFaultPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttp) *VirtualServiceSpecHttpFault { return v.Fault }).(VirtualServiceSpecHttpFaultPtrOutput)
}

func (o VirtualServiceSpecHttpOutput) Headers() VirtualServiceSpecHttpHeadersPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttp) *VirtualServiceSpecHttpHeaders { return v.Headers }).(VirtualServiceSpecHttpHeadersPtrOutput)
}

// Match conditions to be satisfied for the rule to be activated.
func (o VirtualServiceSpecHttpOutput) Match() VirtualServiceSpecHttpMatchArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttp) []VirtualServiceSpecHttpMatch { return v.Match }).(VirtualServiceSpecHttpMatchArrayOutput)
}

func (o VirtualServiceSpecHttpOutput) Mirror() VirtualServiceSpecHttpMirrorPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttp) *VirtualServiceSpecHttpMirror { return v.Mirror }).(VirtualServiceSpecHttpMirrorPtrOutput)
}

func (o VirtualServiceSpecHttpOutput) MirrorPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttp) *int { return v.MirrorPercent }).(pulumi.IntPtrOutput)
}

func (o VirtualServiceSpecHttpOutput) MirrorPercentage() VirtualServiceSpecHttpMirrorPercentagePtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttp) *VirtualServiceSpecHttpMirrorPercentage { return v.MirrorPercentage }).(VirtualServiceSpecHttpMirrorPercentagePtrOutput)
}

func (o VirtualServiceSpecHttpOutput) Mirror_percent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttp) *int { return v.Mirror_percent }).(pulumi.IntPtrOutput)
}

// Specifies the destinations to mirror HTTP traffic in addition to the original destination.
func (o VirtualServiceSpecHttpOutput) Mirrors() VirtualServiceSpecHttpMirrorsArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttp) []VirtualServiceSpecHttpMirrors { return v.Mirrors }).(VirtualServiceSpecHttpMirrorsArrayOutput)
}

// The name assigned to the route for debugging purposes.
func (o VirtualServiceSpecHttpOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttp) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpOutput) Redirect() VirtualServiceSpecHttpRedirectPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttp) *VirtualServiceSpecHttpRedirect { return v.Redirect }).(VirtualServiceSpecHttpRedirectPtrOutput)
}

func (o VirtualServiceSpecHttpOutput) Retries() VirtualServiceSpecHttpRetriesPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttp) *VirtualServiceSpecHttpRetries { return v.Retries }).(VirtualServiceSpecHttpRetriesPtrOutput)
}

func (o VirtualServiceSpecHttpOutput) Rewrite() VirtualServiceSpecHttpRewritePtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttp) *VirtualServiceSpecHttpRewrite { return v.Rewrite }).(VirtualServiceSpecHttpRewritePtrOutput)
}

// A HTTP rule can either return a direct_response, redirect or forward (default) traffic.
func (o VirtualServiceSpecHttpOutput) Route() VirtualServiceSpecHttpRouteArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttp) []VirtualServiceSpecHttpRoute { return v.Route }).(VirtualServiceSpecHttpRouteArrayOutput)
}

// Timeout for HTTP requests, default is disabled.
func (o VirtualServiceSpecHttpOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttp) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecHttp)(nil)).Elem()
}

func (o VirtualServiceSpecHttpArrayOutput) ToVirtualServiceSpecHttpArrayOutput() VirtualServiceSpecHttpArrayOutput {
	return o
}

func (o VirtualServiceSpecHttpArrayOutput) ToVirtualServiceSpecHttpArrayOutputWithContext(ctx context.Context) VirtualServiceSpecHttpArrayOutput {
	return o
}

func (o VirtualServiceSpecHttpArrayOutput) Index(i pulumi.IntInput) VirtualServiceSpecHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceSpecHttp {
		return vs[0].([]VirtualServiceSpecHttp)[vs[1].(int)]
	}).(VirtualServiceSpecHttpOutput)
}

// Cross-Origin Resource Sharing policy (CORS).
type VirtualServiceSpecHttpCorsPolicy struct {
	// Indicates whether the caller is allowed to send the actual request (not the preflight) using credentials.
	AllowCredentials *bool `pulumi:"allowCredentials"`
	// List of HTTP headers that can be used when requesting the resource.
	AllowHeaders []string `pulumi:"allowHeaders"`
	// List of HTTP methods allowed to access the resource.
	AllowMethods []string `pulumi:"allowMethods"`
	AllowOrigin  []string `pulumi:"allowOrigin"`
	// String patterns that match allowed origins.
	AllowOrigins []VirtualServiceSpecHttpCorsPolicyAllowOrigins `pulumi:"allowOrigins"`
	// A list of HTTP headers that the browsers are allowed to access.
	ExposeHeaders []string `pulumi:"exposeHeaders"`
	// Specifies how long the results of a preflight request can be cached.
	MaxAge *string `pulumi:"maxAge"`
}

// VirtualServiceSpecHttpCorsPolicyInput is an input type that accepts VirtualServiceSpecHttpCorsPolicyArgs and VirtualServiceSpecHttpCorsPolicyOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpCorsPolicyInput` via:
//
//	VirtualServiceSpecHttpCorsPolicyArgs{...}
type VirtualServiceSpecHttpCorsPolicyInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpCorsPolicyOutput() VirtualServiceSpecHttpCorsPolicyOutput
	ToVirtualServiceSpecHttpCorsPolicyOutputWithContext(context.Context) VirtualServiceSpecHttpCorsPolicyOutput
}

// Cross-Origin Resource Sharing policy (CORS).
type VirtualServiceSpecHttpCorsPolicyArgs struct {
	// Indicates whether the caller is allowed to send the actual request (not the preflight) using credentials.
	AllowCredentials pulumi.BoolPtrInput `pulumi:"allowCredentials"`
	// List of HTTP headers that can be used when requesting the resource.
	AllowHeaders pulumi.StringArrayInput `pulumi:"allowHeaders"`
	// List of HTTP methods allowed to access the resource.
	AllowMethods pulumi.StringArrayInput `pulumi:"allowMethods"`
	AllowOrigin  pulumi.StringArrayInput `pulumi:"allowOrigin"`
	// String patterns that match allowed origins.
	AllowOrigins VirtualServiceSpecHttpCorsPolicyAllowOriginsArrayInput `pulumi:"allowOrigins"`
	// A list of HTTP headers that the browsers are allowed to access.
	ExposeHeaders pulumi.StringArrayInput `pulumi:"exposeHeaders"`
	// Specifies how long the results of a preflight request can be cached.
	MaxAge pulumi.StringPtrInput `pulumi:"maxAge"`
}

func (VirtualServiceSpecHttpCorsPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpCorsPolicy)(nil)).Elem()
}

func (i VirtualServiceSpecHttpCorsPolicyArgs) ToVirtualServiceSpecHttpCorsPolicyOutput() VirtualServiceSpecHttpCorsPolicyOutput {
	return i.ToVirtualServiceSpecHttpCorsPolicyOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpCorsPolicyArgs) ToVirtualServiceSpecHttpCorsPolicyOutputWithContext(ctx context.Context) VirtualServiceSpecHttpCorsPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpCorsPolicyOutput)
}

func (i VirtualServiceSpecHttpCorsPolicyArgs) ToVirtualServiceSpecHttpCorsPolicyPtrOutput() VirtualServiceSpecHttpCorsPolicyPtrOutput {
	return i.ToVirtualServiceSpecHttpCorsPolicyPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpCorsPolicyArgs) ToVirtualServiceSpecHttpCorsPolicyPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpCorsPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpCorsPolicyOutput).ToVirtualServiceSpecHttpCorsPolicyPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpCorsPolicyPtrInput is an input type that accepts VirtualServiceSpecHttpCorsPolicyArgs, VirtualServiceSpecHttpCorsPolicyPtr and VirtualServiceSpecHttpCorsPolicyPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpCorsPolicyPtrInput` via:
//
//	        VirtualServiceSpecHttpCorsPolicyArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpCorsPolicyPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpCorsPolicyPtrOutput() VirtualServiceSpecHttpCorsPolicyPtrOutput
	ToVirtualServiceSpecHttpCorsPolicyPtrOutputWithContext(context.Context) VirtualServiceSpecHttpCorsPolicyPtrOutput
}

type virtualServiceSpecHttpCorsPolicyPtrType VirtualServiceSpecHttpCorsPolicyArgs

func VirtualServiceSpecHttpCorsPolicyPtr(v *VirtualServiceSpecHttpCorsPolicyArgs) VirtualServiceSpecHttpCorsPolicyPtrInput {
	return (*virtualServiceSpecHttpCorsPolicyPtrType)(v)
}

func (*virtualServiceSpecHttpCorsPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpCorsPolicy)(nil)).Elem()
}

func (i *virtualServiceSpecHttpCorsPolicyPtrType) ToVirtualServiceSpecHttpCorsPolicyPtrOutput() VirtualServiceSpecHttpCorsPolicyPtrOutput {
	return i.ToVirtualServiceSpecHttpCorsPolicyPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpCorsPolicyPtrType) ToVirtualServiceSpecHttpCorsPolicyPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpCorsPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpCorsPolicyPtrOutput)
}

// Cross-Origin Resource Sharing policy (CORS).
type VirtualServiceSpecHttpCorsPolicyOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpCorsPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpCorsPolicy)(nil)).Elem()
}

func (o VirtualServiceSpecHttpCorsPolicyOutput) ToVirtualServiceSpecHttpCorsPolicyOutput() VirtualServiceSpecHttpCorsPolicyOutput {
	return o
}

func (o VirtualServiceSpecHttpCorsPolicyOutput) ToVirtualServiceSpecHttpCorsPolicyOutputWithContext(ctx context.Context) VirtualServiceSpecHttpCorsPolicyOutput {
	return o
}

func (o VirtualServiceSpecHttpCorsPolicyOutput) ToVirtualServiceSpecHttpCorsPolicyPtrOutput() VirtualServiceSpecHttpCorsPolicyPtrOutput {
	return o.ToVirtualServiceSpecHttpCorsPolicyPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpCorsPolicyOutput) ToVirtualServiceSpecHttpCorsPolicyPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpCorsPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpCorsPolicy) *VirtualServiceSpecHttpCorsPolicy {
		return &v
	}).(VirtualServiceSpecHttpCorsPolicyPtrOutput)
}

// Indicates whether the caller is allowed to send the actual request (not the preflight) using credentials.
func (o VirtualServiceSpecHttpCorsPolicyOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpCorsPolicy) *bool { return v.AllowCredentials }).(pulumi.BoolPtrOutput)
}

// List of HTTP headers that can be used when requesting the resource.
func (o VirtualServiceSpecHttpCorsPolicyOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpCorsPolicy) []string { return v.AllowHeaders }).(pulumi.StringArrayOutput)
}

// List of HTTP methods allowed to access the resource.
func (o VirtualServiceSpecHttpCorsPolicyOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpCorsPolicy) []string { return v.AllowMethods }).(pulumi.StringArrayOutput)
}

func (o VirtualServiceSpecHttpCorsPolicyOutput) AllowOrigin() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpCorsPolicy) []string { return v.AllowOrigin }).(pulumi.StringArrayOutput)
}

// String patterns that match allowed origins.
func (o VirtualServiceSpecHttpCorsPolicyOutput) AllowOrigins() VirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpCorsPolicy) []VirtualServiceSpecHttpCorsPolicyAllowOrigins {
		return v.AllowOrigins
	}).(VirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutput)
}

// A list of HTTP headers that the browsers are allowed to access.
func (o VirtualServiceSpecHttpCorsPolicyOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpCorsPolicy) []string { return v.ExposeHeaders }).(pulumi.StringArrayOutput)
}

// Specifies how long the results of a preflight request can be cached.
func (o VirtualServiceSpecHttpCorsPolicyOutput) MaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpCorsPolicy) *string { return v.MaxAge }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpCorsPolicyPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpCorsPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpCorsPolicy)(nil)).Elem()
}

func (o VirtualServiceSpecHttpCorsPolicyPtrOutput) ToVirtualServiceSpecHttpCorsPolicyPtrOutput() VirtualServiceSpecHttpCorsPolicyPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpCorsPolicyPtrOutput) ToVirtualServiceSpecHttpCorsPolicyPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpCorsPolicyPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpCorsPolicyPtrOutput) Elem() VirtualServiceSpecHttpCorsPolicyOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpCorsPolicy) VirtualServiceSpecHttpCorsPolicy {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpCorsPolicy
		return ret
	}).(VirtualServiceSpecHttpCorsPolicyOutput)
}

// Indicates whether the caller is allowed to send the actual request (not the preflight) using credentials.
func (o VirtualServiceSpecHttpCorsPolicyPtrOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpCorsPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.AllowCredentials
	}).(pulumi.BoolPtrOutput)
}

// List of HTTP headers that can be used when requesting the resource.
func (o VirtualServiceSpecHttpCorsPolicyPtrOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpCorsPolicy) []string {
		if v == nil {
			return nil
		}
		return v.AllowHeaders
	}).(pulumi.StringArrayOutput)
}

// List of HTTP methods allowed to access the resource.
func (o VirtualServiceSpecHttpCorsPolicyPtrOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpCorsPolicy) []string {
		if v == nil {
			return nil
		}
		return v.AllowMethods
	}).(pulumi.StringArrayOutput)
}

func (o VirtualServiceSpecHttpCorsPolicyPtrOutput) AllowOrigin() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpCorsPolicy) []string {
		if v == nil {
			return nil
		}
		return v.AllowOrigin
	}).(pulumi.StringArrayOutput)
}

// String patterns that match allowed origins.
func (o VirtualServiceSpecHttpCorsPolicyPtrOutput) AllowOrigins() VirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpCorsPolicy) []VirtualServiceSpecHttpCorsPolicyAllowOrigins {
		if v == nil {
			return nil
		}
		return v.AllowOrigins
	}).(VirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutput)
}

// A list of HTTP headers that the browsers are allowed to access.
func (o VirtualServiceSpecHttpCorsPolicyPtrOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpCorsPolicy) []string {
		if v == nil {
			return nil
		}
		return v.ExposeHeaders
	}).(pulumi.StringArrayOutput)
}

// Specifies how long the results of a preflight request can be cached.
func (o VirtualServiceSpecHttpCorsPolicyPtrOutput) MaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpCorsPolicy) *string {
		if v == nil {
			return nil
		}
		return v.MaxAge
	}).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpCorsPolicyAllowOrigins struct {
	Exact  *string `pulumi:"exact"`
	Prefix *string `pulumi:"prefix"`
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Regex *string `pulumi:"regex"`
}

// VirtualServiceSpecHttpCorsPolicyAllowOriginsInput is an input type that accepts VirtualServiceSpecHttpCorsPolicyAllowOriginsArgs and VirtualServiceSpecHttpCorsPolicyAllowOriginsOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpCorsPolicyAllowOriginsInput` via:
//
//	VirtualServiceSpecHttpCorsPolicyAllowOriginsArgs{...}
type VirtualServiceSpecHttpCorsPolicyAllowOriginsInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpCorsPolicyAllowOriginsOutput() VirtualServiceSpecHttpCorsPolicyAllowOriginsOutput
	ToVirtualServiceSpecHttpCorsPolicyAllowOriginsOutputWithContext(context.Context) VirtualServiceSpecHttpCorsPolicyAllowOriginsOutput
}

type VirtualServiceSpecHttpCorsPolicyAllowOriginsArgs struct {
	Exact  pulumi.StringPtrInput `pulumi:"exact"`
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (VirtualServiceSpecHttpCorsPolicyAllowOriginsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpCorsPolicyAllowOrigins)(nil)).Elem()
}

func (i VirtualServiceSpecHttpCorsPolicyAllowOriginsArgs) ToVirtualServiceSpecHttpCorsPolicyAllowOriginsOutput() VirtualServiceSpecHttpCorsPolicyAllowOriginsOutput {
	return i.ToVirtualServiceSpecHttpCorsPolicyAllowOriginsOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpCorsPolicyAllowOriginsArgs) ToVirtualServiceSpecHttpCorsPolicyAllowOriginsOutputWithContext(ctx context.Context) VirtualServiceSpecHttpCorsPolicyAllowOriginsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpCorsPolicyAllowOriginsOutput)
}

// VirtualServiceSpecHttpCorsPolicyAllowOriginsArrayInput is an input type that accepts VirtualServiceSpecHttpCorsPolicyAllowOriginsArray and VirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpCorsPolicyAllowOriginsArrayInput` via:
//
//	VirtualServiceSpecHttpCorsPolicyAllowOriginsArray{ VirtualServiceSpecHttpCorsPolicyAllowOriginsArgs{...} }
type VirtualServiceSpecHttpCorsPolicyAllowOriginsArrayInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutput() VirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutput
	ToVirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutputWithContext(context.Context) VirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutput
}

type VirtualServiceSpecHttpCorsPolicyAllowOriginsArray []VirtualServiceSpecHttpCorsPolicyAllowOriginsInput

func (VirtualServiceSpecHttpCorsPolicyAllowOriginsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecHttpCorsPolicyAllowOrigins)(nil)).Elem()
}

func (i VirtualServiceSpecHttpCorsPolicyAllowOriginsArray) ToVirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutput() VirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutput {
	return i.ToVirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpCorsPolicyAllowOriginsArray) ToVirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutputWithContext(ctx context.Context) VirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutput)
}

type VirtualServiceSpecHttpCorsPolicyAllowOriginsOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpCorsPolicyAllowOriginsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpCorsPolicyAllowOrigins)(nil)).Elem()
}

func (o VirtualServiceSpecHttpCorsPolicyAllowOriginsOutput) ToVirtualServiceSpecHttpCorsPolicyAllowOriginsOutput() VirtualServiceSpecHttpCorsPolicyAllowOriginsOutput {
	return o
}

func (o VirtualServiceSpecHttpCorsPolicyAllowOriginsOutput) ToVirtualServiceSpecHttpCorsPolicyAllowOriginsOutputWithContext(ctx context.Context) VirtualServiceSpecHttpCorsPolicyAllowOriginsOutput {
	return o
}

func (o VirtualServiceSpecHttpCorsPolicyAllowOriginsOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpCorsPolicyAllowOrigins) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpCorsPolicyAllowOriginsOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpCorsPolicyAllowOrigins) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
func (o VirtualServiceSpecHttpCorsPolicyAllowOriginsOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpCorsPolicyAllowOrigins) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecHttpCorsPolicyAllowOrigins)(nil)).Elem()
}

func (o VirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutput) ToVirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutput() VirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutput {
	return o
}

func (o VirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutput) ToVirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutputWithContext(ctx context.Context) VirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutput {
	return o
}

func (o VirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutput) Index(i pulumi.IntInput) VirtualServiceSpecHttpCorsPolicyAllowOriginsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceSpecHttpCorsPolicyAllowOrigins {
		return vs[0].([]VirtualServiceSpecHttpCorsPolicyAllowOrigins)[vs[1].(int)]
	}).(VirtualServiceSpecHttpCorsPolicyAllowOriginsOutput)
}

type VirtualServiceSpecHttpCorsPolicyAllowOriginsPatch struct {
	Exact  *string `pulumi:"exact"`
	Prefix *string `pulumi:"prefix"`
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Regex *string `pulumi:"regex"`
}

// VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchInput is an input type that accepts VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArgs and VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchInput` via:
//
//	VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArgs{...}
type VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutput() VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutput
	ToVirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutputWithContext(context.Context) VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutput
}

type VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArgs struct {
	Exact  pulumi.StringPtrInput `pulumi:"exact"`
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpCorsPolicyAllowOriginsPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArgs) ToVirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutput() VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutput {
	return i.ToVirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArgs) ToVirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutput)
}

// VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayInput is an input type that accepts VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArray and VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayInput` via:
//
//	VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArray{ VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArgs{...} }
type VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutput() VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutput
	ToVirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutputWithContext(context.Context) VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutput
}

type VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArray []VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchInput

func (VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecHttpCorsPolicyAllowOriginsPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArray) ToVirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutput() VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutput {
	return i.ToVirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArray) ToVirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutput)
}

type VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpCorsPolicyAllowOriginsPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutput) ToVirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutput() VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutput) ToVirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpCorsPolicyAllowOriginsPatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpCorsPolicyAllowOriginsPatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
func (o VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpCorsPolicyAllowOriginsPatch) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecHttpCorsPolicyAllowOriginsPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutput) ToVirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutput() VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutput {
	return o
}

func (o VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutput) ToVirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutput {
	return o
}

func (o VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutput) Index(i pulumi.IntInput) VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceSpecHttpCorsPolicyAllowOriginsPatch {
		return vs[0].([]VirtualServiceSpecHttpCorsPolicyAllowOriginsPatch)[vs[1].(int)]
	}).(VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutput)
}

// Cross-Origin Resource Sharing policy (CORS).
type VirtualServiceSpecHttpCorsPolicyPatch struct {
	// Indicates whether the caller is allowed to send the actual request (not the preflight) using credentials.
	AllowCredentials *bool `pulumi:"allowCredentials"`
	// List of HTTP headers that can be used when requesting the resource.
	AllowHeaders []string `pulumi:"allowHeaders"`
	// List of HTTP methods allowed to access the resource.
	AllowMethods []string `pulumi:"allowMethods"`
	AllowOrigin  []string `pulumi:"allowOrigin"`
	// String patterns that match allowed origins.
	AllowOrigins []VirtualServiceSpecHttpCorsPolicyAllowOriginsPatch `pulumi:"allowOrigins"`
	// A list of HTTP headers that the browsers are allowed to access.
	ExposeHeaders []string `pulumi:"exposeHeaders"`
	// Specifies how long the results of a preflight request can be cached.
	MaxAge *string `pulumi:"maxAge"`
}

// VirtualServiceSpecHttpCorsPolicyPatchInput is an input type that accepts VirtualServiceSpecHttpCorsPolicyPatchArgs and VirtualServiceSpecHttpCorsPolicyPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpCorsPolicyPatchInput` via:
//
//	VirtualServiceSpecHttpCorsPolicyPatchArgs{...}
type VirtualServiceSpecHttpCorsPolicyPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpCorsPolicyPatchOutput() VirtualServiceSpecHttpCorsPolicyPatchOutput
	ToVirtualServiceSpecHttpCorsPolicyPatchOutputWithContext(context.Context) VirtualServiceSpecHttpCorsPolicyPatchOutput
}

// Cross-Origin Resource Sharing policy (CORS).
type VirtualServiceSpecHttpCorsPolicyPatchArgs struct {
	// Indicates whether the caller is allowed to send the actual request (not the preflight) using credentials.
	AllowCredentials pulumi.BoolPtrInput `pulumi:"allowCredentials"`
	// List of HTTP headers that can be used when requesting the resource.
	AllowHeaders pulumi.StringArrayInput `pulumi:"allowHeaders"`
	// List of HTTP methods allowed to access the resource.
	AllowMethods pulumi.StringArrayInput `pulumi:"allowMethods"`
	AllowOrigin  pulumi.StringArrayInput `pulumi:"allowOrigin"`
	// String patterns that match allowed origins.
	AllowOrigins VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayInput `pulumi:"allowOrigins"`
	// A list of HTTP headers that the browsers are allowed to access.
	ExposeHeaders pulumi.StringArrayInput `pulumi:"exposeHeaders"`
	// Specifies how long the results of a preflight request can be cached.
	MaxAge pulumi.StringPtrInput `pulumi:"maxAge"`
}

func (VirtualServiceSpecHttpCorsPolicyPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpCorsPolicyPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpCorsPolicyPatchArgs) ToVirtualServiceSpecHttpCorsPolicyPatchOutput() VirtualServiceSpecHttpCorsPolicyPatchOutput {
	return i.ToVirtualServiceSpecHttpCorsPolicyPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpCorsPolicyPatchArgs) ToVirtualServiceSpecHttpCorsPolicyPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpCorsPolicyPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpCorsPolicyPatchOutput)
}

func (i VirtualServiceSpecHttpCorsPolicyPatchArgs) ToVirtualServiceSpecHttpCorsPolicyPatchPtrOutput() VirtualServiceSpecHttpCorsPolicyPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpCorsPolicyPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpCorsPolicyPatchArgs) ToVirtualServiceSpecHttpCorsPolicyPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpCorsPolicyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpCorsPolicyPatchOutput).ToVirtualServiceSpecHttpCorsPolicyPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpCorsPolicyPatchPtrInput is an input type that accepts VirtualServiceSpecHttpCorsPolicyPatchArgs, VirtualServiceSpecHttpCorsPolicyPatchPtr and VirtualServiceSpecHttpCorsPolicyPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpCorsPolicyPatchPtrInput` via:
//
//	        VirtualServiceSpecHttpCorsPolicyPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpCorsPolicyPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpCorsPolicyPatchPtrOutput() VirtualServiceSpecHttpCorsPolicyPatchPtrOutput
	ToVirtualServiceSpecHttpCorsPolicyPatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpCorsPolicyPatchPtrOutput
}

type virtualServiceSpecHttpCorsPolicyPatchPtrType VirtualServiceSpecHttpCorsPolicyPatchArgs

func VirtualServiceSpecHttpCorsPolicyPatchPtr(v *VirtualServiceSpecHttpCorsPolicyPatchArgs) VirtualServiceSpecHttpCorsPolicyPatchPtrInput {
	return (*virtualServiceSpecHttpCorsPolicyPatchPtrType)(v)
}

func (*virtualServiceSpecHttpCorsPolicyPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpCorsPolicyPatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpCorsPolicyPatchPtrType) ToVirtualServiceSpecHttpCorsPolicyPatchPtrOutput() VirtualServiceSpecHttpCorsPolicyPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpCorsPolicyPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpCorsPolicyPatchPtrType) ToVirtualServiceSpecHttpCorsPolicyPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpCorsPolicyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpCorsPolicyPatchPtrOutput)
}

// Cross-Origin Resource Sharing policy (CORS).
type VirtualServiceSpecHttpCorsPolicyPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpCorsPolicyPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpCorsPolicyPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpCorsPolicyPatchOutput) ToVirtualServiceSpecHttpCorsPolicyPatchOutput() VirtualServiceSpecHttpCorsPolicyPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpCorsPolicyPatchOutput) ToVirtualServiceSpecHttpCorsPolicyPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpCorsPolicyPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpCorsPolicyPatchOutput) ToVirtualServiceSpecHttpCorsPolicyPatchPtrOutput() VirtualServiceSpecHttpCorsPolicyPatchPtrOutput {
	return o.ToVirtualServiceSpecHttpCorsPolicyPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpCorsPolicyPatchOutput) ToVirtualServiceSpecHttpCorsPolicyPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpCorsPolicyPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpCorsPolicyPatch) *VirtualServiceSpecHttpCorsPolicyPatch {
		return &v
	}).(VirtualServiceSpecHttpCorsPolicyPatchPtrOutput)
}

// Indicates whether the caller is allowed to send the actual request (not the preflight) using credentials.
func (o VirtualServiceSpecHttpCorsPolicyPatchOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpCorsPolicyPatch) *bool { return v.AllowCredentials }).(pulumi.BoolPtrOutput)
}

// List of HTTP headers that can be used when requesting the resource.
func (o VirtualServiceSpecHttpCorsPolicyPatchOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpCorsPolicyPatch) []string { return v.AllowHeaders }).(pulumi.StringArrayOutput)
}

// List of HTTP methods allowed to access the resource.
func (o VirtualServiceSpecHttpCorsPolicyPatchOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpCorsPolicyPatch) []string { return v.AllowMethods }).(pulumi.StringArrayOutput)
}

func (o VirtualServiceSpecHttpCorsPolicyPatchOutput) AllowOrigin() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpCorsPolicyPatch) []string { return v.AllowOrigin }).(pulumi.StringArrayOutput)
}

// String patterns that match allowed origins.
func (o VirtualServiceSpecHttpCorsPolicyPatchOutput) AllowOrigins() VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpCorsPolicyPatch) []VirtualServiceSpecHttpCorsPolicyAllowOriginsPatch {
		return v.AllowOrigins
	}).(VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutput)
}

// A list of HTTP headers that the browsers are allowed to access.
func (o VirtualServiceSpecHttpCorsPolicyPatchOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpCorsPolicyPatch) []string { return v.ExposeHeaders }).(pulumi.StringArrayOutput)
}

// Specifies how long the results of a preflight request can be cached.
func (o VirtualServiceSpecHttpCorsPolicyPatchOutput) MaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpCorsPolicyPatch) *string { return v.MaxAge }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpCorsPolicyPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpCorsPolicyPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpCorsPolicyPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpCorsPolicyPatchPtrOutput) ToVirtualServiceSpecHttpCorsPolicyPatchPtrOutput() VirtualServiceSpecHttpCorsPolicyPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpCorsPolicyPatchPtrOutput) ToVirtualServiceSpecHttpCorsPolicyPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpCorsPolicyPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpCorsPolicyPatchPtrOutput) Elem() VirtualServiceSpecHttpCorsPolicyPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpCorsPolicyPatch) VirtualServiceSpecHttpCorsPolicyPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpCorsPolicyPatch
		return ret
	}).(VirtualServiceSpecHttpCorsPolicyPatchOutput)
}

// Indicates whether the caller is allowed to send the actual request (not the preflight) using credentials.
func (o VirtualServiceSpecHttpCorsPolicyPatchPtrOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpCorsPolicyPatch) *bool {
		if v == nil {
			return nil
		}
		return v.AllowCredentials
	}).(pulumi.BoolPtrOutput)
}

// List of HTTP headers that can be used when requesting the resource.
func (o VirtualServiceSpecHttpCorsPolicyPatchPtrOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpCorsPolicyPatch) []string {
		if v == nil {
			return nil
		}
		return v.AllowHeaders
	}).(pulumi.StringArrayOutput)
}

// List of HTTP methods allowed to access the resource.
func (o VirtualServiceSpecHttpCorsPolicyPatchPtrOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpCorsPolicyPatch) []string {
		if v == nil {
			return nil
		}
		return v.AllowMethods
	}).(pulumi.StringArrayOutput)
}

func (o VirtualServiceSpecHttpCorsPolicyPatchPtrOutput) AllowOrigin() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpCorsPolicyPatch) []string {
		if v == nil {
			return nil
		}
		return v.AllowOrigin
	}).(pulumi.StringArrayOutput)
}

// String patterns that match allowed origins.
func (o VirtualServiceSpecHttpCorsPolicyPatchPtrOutput) AllowOrigins() VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpCorsPolicyPatch) []VirtualServiceSpecHttpCorsPolicyAllowOriginsPatch {
		if v == nil {
			return nil
		}
		return v.AllowOrigins
	}).(VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutput)
}

// A list of HTTP headers that the browsers are allowed to access.
func (o VirtualServiceSpecHttpCorsPolicyPatchPtrOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpCorsPolicyPatch) []string {
		if v == nil {
			return nil
		}
		return v.ExposeHeaders
	}).(pulumi.StringArrayOutput)
}

// Specifies how long the results of a preflight request can be cached.
func (o VirtualServiceSpecHttpCorsPolicyPatchPtrOutput) MaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpCorsPolicyPatch) *string {
		if v == nil {
			return nil
		}
		return v.MaxAge
	}).(pulumi.StringPtrOutput)
}

// Delegate is used to specify the particular VirtualService which can be used to define delegate HTTPRoute.
type VirtualServiceSpecHttpDelegate struct {
	// Name specifies the name of the delegate VirtualService.
	Name *string `pulumi:"name"`
	// Namespace specifies the namespace where the delegate VirtualService resides.
	Namespace *string `pulumi:"namespace"`
}

// VirtualServiceSpecHttpDelegateInput is an input type that accepts VirtualServiceSpecHttpDelegateArgs and VirtualServiceSpecHttpDelegateOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpDelegateInput` via:
//
//	VirtualServiceSpecHttpDelegateArgs{...}
type VirtualServiceSpecHttpDelegateInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpDelegateOutput() VirtualServiceSpecHttpDelegateOutput
	ToVirtualServiceSpecHttpDelegateOutputWithContext(context.Context) VirtualServiceSpecHttpDelegateOutput
}

// Delegate is used to specify the particular VirtualService which can be used to define delegate HTTPRoute.
type VirtualServiceSpecHttpDelegateArgs struct {
	// Name specifies the name of the delegate VirtualService.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace specifies the namespace where the delegate VirtualService resides.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (VirtualServiceSpecHttpDelegateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpDelegate)(nil)).Elem()
}

func (i VirtualServiceSpecHttpDelegateArgs) ToVirtualServiceSpecHttpDelegateOutput() VirtualServiceSpecHttpDelegateOutput {
	return i.ToVirtualServiceSpecHttpDelegateOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpDelegateArgs) ToVirtualServiceSpecHttpDelegateOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDelegateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpDelegateOutput)
}

func (i VirtualServiceSpecHttpDelegateArgs) ToVirtualServiceSpecHttpDelegatePtrOutput() VirtualServiceSpecHttpDelegatePtrOutput {
	return i.ToVirtualServiceSpecHttpDelegatePtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpDelegateArgs) ToVirtualServiceSpecHttpDelegatePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDelegatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpDelegateOutput).ToVirtualServiceSpecHttpDelegatePtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpDelegatePtrInput is an input type that accepts VirtualServiceSpecHttpDelegateArgs, VirtualServiceSpecHttpDelegatePtr and VirtualServiceSpecHttpDelegatePtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpDelegatePtrInput` via:
//
//	        VirtualServiceSpecHttpDelegateArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpDelegatePtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpDelegatePtrOutput() VirtualServiceSpecHttpDelegatePtrOutput
	ToVirtualServiceSpecHttpDelegatePtrOutputWithContext(context.Context) VirtualServiceSpecHttpDelegatePtrOutput
}

type virtualServiceSpecHttpDelegatePtrType VirtualServiceSpecHttpDelegateArgs

func VirtualServiceSpecHttpDelegatePtr(v *VirtualServiceSpecHttpDelegateArgs) VirtualServiceSpecHttpDelegatePtrInput {
	return (*virtualServiceSpecHttpDelegatePtrType)(v)
}

func (*virtualServiceSpecHttpDelegatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpDelegate)(nil)).Elem()
}

func (i *virtualServiceSpecHttpDelegatePtrType) ToVirtualServiceSpecHttpDelegatePtrOutput() VirtualServiceSpecHttpDelegatePtrOutput {
	return i.ToVirtualServiceSpecHttpDelegatePtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpDelegatePtrType) ToVirtualServiceSpecHttpDelegatePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDelegatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpDelegatePtrOutput)
}

// Delegate is used to specify the particular VirtualService which can be used to define delegate HTTPRoute.
type VirtualServiceSpecHttpDelegateOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpDelegateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpDelegate)(nil)).Elem()
}

func (o VirtualServiceSpecHttpDelegateOutput) ToVirtualServiceSpecHttpDelegateOutput() VirtualServiceSpecHttpDelegateOutput {
	return o
}

func (o VirtualServiceSpecHttpDelegateOutput) ToVirtualServiceSpecHttpDelegateOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDelegateOutput {
	return o
}

func (o VirtualServiceSpecHttpDelegateOutput) ToVirtualServiceSpecHttpDelegatePtrOutput() VirtualServiceSpecHttpDelegatePtrOutput {
	return o.ToVirtualServiceSpecHttpDelegatePtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpDelegateOutput) ToVirtualServiceSpecHttpDelegatePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDelegatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpDelegate) *VirtualServiceSpecHttpDelegate {
		return &v
	}).(VirtualServiceSpecHttpDelegatePtrOutput)
}

// Name specifies the name of the delegate VirtualService.
func (o VirtualServiceSpecHttpDelegateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpDelegate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace specifies the namespace where the delegate VirtualService resides.
func (o VirtualServiceSpecHttpDelegateOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpDelegate) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpDelegatePtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpDelegatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpDelegate)(nil)).Elem()
}

func (o VirtualServiceSpecHttpDelegatePtrOutput) ToVirtualServiceSpecHttpDelegatePtrOutput() VirtualServiceSpecHttpDelegatePtrOutput {
	return o
}

func (o VirtualServiceSpecHttpDelegatePtrOutput) ToVirtualServiceSpecHttpDelegatePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDelegatePtrOutput {
	return o
}

func (o VirtualServiceSpecHttpDelegatePtrOutput) Elem() VirtualServiceSpecHttpDelegateOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpDelegate) VirtualServiceSpecHttpDelegate {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpDelegate
		return ret
	}).(VirtualServiceSpecHttpDelegateOutput)
}

// Name specifies the name of the delegate VirtualService.
func (o VirtualServiceSpecHttpDelegatePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpDelegate) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace specifies the namespace where the delegate VirtualService resides.
func (o VirtualServiceSpecHttpDelegatePtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpDelegate) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Delegate is used to specify the particular VirtualService which can be used to define delegate HTTPRoute.
type VirtualServiceSpecHttpDelegatePatch struct {
	// Name specifies the name of the delegate VirtualService.
	Name *string `pulumi:"name"`
	// Namespace specifies the namespace where the delegate VirtualService resides.
	Namespace *string `pulumi:"namespace"`
}

// VirtualServiceSpecHttpDelegatePatchInput is an input type that accepts VirtualServiceSpecHttpDelegatePatchArgs and VirtualServiceSpecHttpDelegatePatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpDelegatePatchInput` via:
//
//	VirtualServiceSpecHttpDelegatePatchArgs{...}
type VirtualServiceSpecHttpDelegatePatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpDelegatePatchOutput() VirtualServiceSpecHttpDelegatePatchOutput
	ToVirtualServiceSpecHttpDelegatePatchOutputWithContext(context.Context) VirtualServiceSpecHttpDelegatePatchOutput
}

// Delegate is used to specify the particular VirtualService which can be used to define delegate HTTPRoute.
type VirtualServiceSpecHttpDelegatePatchArgs struct {
	// Name specifies the name of the delegate VirtualService.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace specifies the namespace where the delegate VirtualService resides.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (VirtualServiceSpecHttpDelegatePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpDelegatePatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpDelegatePatchArgs) ToVirtualServiceSpecHttpDelegatePatchOutput() VirtualServiceSpecHttpDelegatePatchOutput {
	return i.ToVirtualServiceSpecHttpDelegatePatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpDelegatePatchArgs) ToVirtualServiceSpecHttpDelegatePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDelegatePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpDelegatePatchOutput)
}

func (i VirtualServiceSpecHttpDelegatePatchArgs) ToVirtualServiceSpecHttpDelegatePatchPtrOutput() VirtualServiceSpecHttpDelegatePatchPtrOutput {
	return i.ToVirtualServiceSpecHttpDelegatePatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpDelegatePatchArgs) ToVirtualServiceSpecHttpDelegatePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDelegatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpDelegatePatchOutput).ToVirtualServiceSpecHttpDelegatePatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpDelegatePatchPtrInput is an input type that accepts VirtualServiceSpecHttpDelegatePatchArgs, VirtualServiceSpecHttpDelegatePatchPtr and VirtualServiceSpecHttpDelegatePatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpDelegatePatchPtrInput` via:
//
//	        VirtualServiceSpecHttpDelegatePatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpDelegatePatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpDelegatePatchPtrOutput() VirtualServiceSpecHttpDelegatePatchPtrOutput
	ToVirtualServiceSpecHttpDelegatePatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpDelegatePatchPtrOutput
}

type virtualServiceSpecHttpDelegatePatchPtrType VirtualServiceSpecHttpDelegatePatchArgs

func VirtualServiceSpecHttpDelegatePatchPtr(v *VirtualServiceSpecHttpDelegatePatchArgs) VirtualServiceSpecHttpDelegatePatchPtrInput {
	return (*virtualServiceSpecHttpDelegatePatchPtrType)(v)
}

func (*virtualServiceSpecHttpDelegatePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpDelegatePatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpDelegatePatchPtrType) ToVirtualServiceSpecHttpDelegatePatchPtrOutput() VirtualServiceSpecHttpDelegatePatchPtrOutput {
	return i.ToVirtualServiceSpecHttpDelegatePatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpDelegatePatchPtrType) ToVirtualServiceSpecHttpDelegatePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDelegatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpDelegatePatchPtrOutput)
}

// Delegate is used to specify the particular VirtualService which can be used to define delegate HTTPRoute.
type VirtualServiceSpecHttpDelegatePatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpDelegatePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpDelegatePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpDelegatePatchOutput) ToVirtualServiceSpecHttpDelegatePatchOutput() VirtualServiceSpecHttpDelegatePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpDelegatePatchOutput) ToVirtualServiceSpecHttpDelegatePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDelegatePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpDelegatePatchOutput) ToVirtualServiceSpecHttpDelegatePatchPtrOutput() VirtualServiceSpecHttpDelegatePatchPtrOutput {
	return o.ToVirtualServiceSpecHttpDelegatePatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpDelegatePatchOutput) ToVirtualServiceSpecHttpDelegatePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDelegatePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpDelegatePatch) *VirtualServiceSpecHttpDelegatePatch {
		return &v
	}).(VirtualServiceSpecHttpDelegatePatchPtrOutput)
}

// Name specifies the name of the delegate VirtualService.
func (o VirtualServiceSpecHttpDelegatePatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpDelegatePatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace specifies the namespace where the delegate VirtualService resides.
func (o VirtualServiceSpecHttpDelegatePatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpDelegatePatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpDelegatePatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpDelegatePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpDelegatePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpDelegatePatchPtrOutput) ToVirtualServiceSpecHttpDelegatePatchPtrOutput() VirtualServiceSpecHttpDelegatePatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpDelegatePatchPtrOutput) ToVirtualServiceSpecHttpDelegatePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDelegatePatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpDelegatePatchPtrOutput) Elem() VirtualServiceSpecHttpDelegatePatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpDelegatePatch) VirtualServiceSpecHttpDelegatePatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpDelegatePatch
		return ret
	}).(VirtualServiceSpecHttpDelegatePatchOutput)
}

// Name specifies the name of the delegate VirtualService.
func (o VirtualServiceSpecHttpDelegatePatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpDelegatePatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace specifies the namespace where the delegate VirtualService resides.
func (o VirtualServiceSpecHttpDelegatePatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpDelegatePatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A HTTP rule can either return a direct_response, redirect or forward (default) traffic.
type VirtualServiceSpecHttpDirectResponse struct {
	Body *VirtualServiceSpecHttpDirectResponseBody `pulumi:"body"`
	// Specifies the HTTP response status to be returned.
	Status *int `pulumi:"status"`
}

// VirtualServiceSpecHttpDirectResponseInput is an input type that accepts VirtualServiceSpecHttpDirectResponseArgs and VirtualServiceSpecHttpDirectResponseOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpDirectResponseInput` via:
//
//	VirtualServiceSpecHttpDirectResponseArgs{...}
type VirtualServiceSpecHttpDirectResponseInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpDirectResponseOutput() VirtualServiceSpecHttpDirectResponseOutput
	ToVirtualServiceSpecHttpDirectResponseOutputWithContext(context.Context) VirtualServiceSpecHttpDirectResponseOutput
}

// A HTTP rule can either return a direct_response, redirect or forward (default) traffic.
type VirtualServiceSpecHttpDirectResponseArgs struct {
	Body VirtualServiceSpecHttpDirectResponseBodyPtrInput `pulumi:"body"`
	// Specifies the HTTP response status to be returned.
	Status pulumi.IntPtrInput `pulumi:"status"`
}

func (VirtualServiceSpecHttpDirectResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpDirectResponse)(nil)).Elem()
}

func (i VirtualServiceSpecHttpDirectResponseArgs) ToVirtualServiceSpecHttpDirectResponseOutput() VirtualServiceSpecHttpDirectResponseOutput {
	return i.ToVirtualServiceSpecHttpDirectResponseOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpDirectResponseArgs) ToVirtualServiceSpecHttpDirectResponseOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpDirectResponseOutput)
}

func (i VirtualServiceSpecHttpDirectResponseArgs) ToVirtualServiceSpecHttpDirectResponsePtrOutput() VirtualServiceSpecHttpDirectResponsePtrOutput {
	return i.ToVirtualServiceSpecHttpDirectResponsePtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpDirectResponseArgs) ToVirtualServiceSpecHttpDirectResponsePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpDirectResponseOutput).ToVirtualServiceSpecHttpDirectResponsePtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpDirectResponsePtrInput is an input type that accepts VirtualServiceSpecHttpDirectResponseArgs, VirtualServiceSpecHttpDirectResponsePtr and VirtualServiceSpecHttpDirectResponsePtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpDirectResponsePtrInput` via:
//
//	        VirtualServiceSpecHttpDirectResponseArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpDirectResponsePtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpDirectResponsePtrOutput() VirtualServiceSpecHttpDirectResponsePtrOutput
	ToVirtualServiceSpecHttpDirectResponsePtrOutputWithContext(context.Context) VirtualServiceSpecHttpDirectResponsePtrOutput
}

type virtualServiceSpecHttpDirectResponsePtrType VirtualServiceSpecHttpDirectResponseArgs

func VirtualServiceSpecHttpDirectResponsePtr(v *VirtualServiceSpecHttpDirectResponseArgs) VirtualServiceSpecHttpDirectResponsePtrInput {
	return (*virtualServiceSpecHttpDirectResponsePtrType)(v)
}

func (*virtualServiceSpecHttpDirectResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpDirectResponse)(nil)).Elem()
}

func (i *virtualServiceSpecHttpDirectResponsePtrType) ToVirtualServiceSpecHttpDirectResponsePtrOutput() VirtualServiceSpecHttpDirectResponsePtrOutput {
	return i.ToVirtualServiceSpecHttpDirectResponsePtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpDirectResponsePtrType) ToVirtualServiceSpecHttpDirectResponsePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpDirectResponsePtrOutput)
}

// A HTTP rule can either return a direct_response, redirect or forward (default) traffic.
type VirtualServiceSpecHttpDirectResponseOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpDirectResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpDirectResponse)(nil)).Elem()
}

func (o VirtualServiceSpecHttpDirectResponseOutput) ToVirtualServiceSpecHttpDirectResponseOutput() VirtualServiceSpecHttpDirectResponseOutput {
	return o
}

func (o VirtualServiceSpecHttpDirectResponseOutput) ToVirtualServiceSpecHttpDirectResponseOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponseOutput {
	return o
}

func (o VirtualServiceSpecHttpDirectResponseOutput) ToVirtualServiceSpecHttpDirectResponsePtrOutput() VirtualServiceSpecHttpDirectResponsePtrOutput {
	return o.ToVirtualServiceSpecHttpDirectResponsePtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpDirectResponseOutput) ToVirtualServiceSpecHttpDirectResponsePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpDirectResponse) *VirtualServiceSpecHttpDirectResponse {
		return &v
	}).(VirtualServiceSpecHttpDirectResponsePtrOutput)
}

func (o VirtualServiceSpecHttpDirectResponseOutput) Body() VirtualServiceSpecHttpDirectResponseBodyPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpDirectResponse) *VirtualServiceSpecHttpDirectResponseBody { return v.Body }).(VirtualServiceSpecHttpDirectResponseBodyPtrOutput)
}

// Specifies the HTTP response status to be returned.
func (o VirtualServiceSpecHttpDirectResponseOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpDirectResponse) *int { return v.Status }).(pulumi.IntPtrOutput)
}

type VirtualServiceSpecHttpDirectResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpDirectResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpDirectResponse)(nil)).Elem()
}

func (o VirtualServiceSpecHttpDirectResponsePtrOutput) ToVirtualServiceSpecHttpDirectResponsePtrOutput() VirtualServiceSpecHttpDirectResponsePtrOutput {
	return o
}

func (o VirtualServiceSpecHttpDirectResponsePtrOutput) ToVirtualServiceSpecHttpDirectResponsePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponsePtrOutput {
	return o
}

func (o VirtualServiceSpecHttpDirectResponsePtrOutput) Elem() VirtualServiceSpecHttpDirectResponseOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpDirectResponse) VirtualServiceSpecHttpDirectResponse {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpDirectResponse
		return ret
	}).(VirtualServiceSpecHttpDirectResponseOutput)
}

func (o VirtualServiceSpecHttpDirectResponsePtrOutput) Body() VirtualServiceSpecHttpDirectResponseBodyPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpDirectResponse) *VirtualServiceSpecHttpDirectResponseBody {
		if v == nil {
			return nil
		}
		return v.Body
	}).(VirtualServiceSpecHttpDirectResponseBodyPtrOutput)
}

// Specifies the HTTP response status to be returned.
func (o VirtualServiceSpecHttpDirectResponsePtrOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpDirectResponse) *int {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.IntPtrOutput)
}

// Specifies the content of the response body.
type VirtualServiceSpecHttpDirectResponseBody struct {
	// response body as base64 encoded bytes.
	Bytes  *string `pulumi:"bytes"`
	String *string `pulumi:"string"`
}

// VirtualServiceSpecHttpDirectResponseBodyInput is an input type that accepts VirtualServiceSpecHttpDirectResponseBodyArgs and VirtualServiceSpecHttpDirectResponseBodyOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpDirectResponseBodyInput` via:
//
//	VirtualServiceSpecHttpDirectResponseBodyArgs{...}
type VirtualServiceSpecHttpDirectResponseBodyInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpDirectResponseBodyOutput() VirtualServiceSpecHttpDirectResponseBodyOutput
	ToVirtualServiceSpecHttpDirectResponseBodyOutputWithContext(context.Context) VirtualServiceSpecHttpDirectResponseBodyOutput
}

// Specifies the content of the response body.
type VirtualServiceSpecHttpDirectResponseBodyArgs struct {
	// response body as base64 encoded bytes.
	Bytes  pulumi.StringPtrInput `pulumi:"bytes"`
	String pulumi.StringPtrInput `pulumi:"string"`
}

func (VirtualServiceSpecHttpDirectResponseBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpDirectResponseBody)(nil)).Elem()
}

func (i VirtualServiceSpecHttpDirectResponseBodyArgs) ToVirtualServiceSpecHttpDirectResponseBodyOutput() VirtualServiceSpecHttpDirectResponseBodyOutput {
	return i.ToVirtualServiceSpecHttpDirectResponseBodyOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpDirectResponseBodyArgs) ToVirtualServiceSpecHttpDirectResponseBodyOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponseBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpDirectResponseBodyOutput)
}

func (i VirtualServiceSpecHttpDirectResponseBodyArgs) ToVirtualServiceSpecHttpDirectResponseBodyPtrOutput() VirtualServiceSpecHttpDirectResponseBodyPtrOutput {
	return i.ToVirtualServiceSpecHttpDirectResponseBodyPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpDirectResponseBodyArgs) ToVirtualServiceSpecHttpDirectResponseBodyPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponseBodyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpDirectResponseBodyOutput).ToVirtualServiceSpecHttpDirectResponseBodyPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpDirectResponseBodyPtrInput is an input type that accepts VirtualServiceSpecHttpDirectResponseBodyArgs, VirtualServiceSpecHttpDirectResponseBodyPtr and VirtualServiceSpecHttpDirectResponseBodyPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpDirectResponseBodyPtrInput` via:
//
//	        VirtualServiceSpecHttpDirectResponseBodyArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpDirectResponseBodyPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpDirectResponseBodyPtrOutput() VirtualServiceSpecHttpDirectResponseBodyPtrOutput
	ToVirtualServiceSpecHttpDirectResponseBodyPtrOutputWithContext(context.Context) VirtualServiceSpecHttpDirectResponseBodyPtrOutput
}

type virtualServiceSpecHttpDirectResponseBodyPtrType VirtualServiceSpecHttpDirectResponseBodyArgs

func VirtualServiceSpecHttpDirectResponseBodyPtr(v *VirtualServiceSpecHttpDirectResponseBodyArgs) VirtualServiceSpecHttpDirectResponseBodyPtrInput {
	return (*virtualServiceSpecHttpDirectResponseBodyPtrType)(v)
}

func (*virtualServiceSpecHttpDirectResponseBodyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpDirectResponseBody)(nil)).Elem()
}

func (i *virtualServiceSpecHttpDirectResponseBodyPtrType) ToVirtualServiceSpecHttpDirectResponseBodyPtrOutput() VirtualServiceSpecHttpDirectResponseBodyPtrOutput {
	return i.ToVirtualServiceSpecHttpDirectResponseBodyPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpDirectResponseBodyPtrType) ToVirtualServiceSpecHttpDirectResponseBodyPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponseBodyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpDirectResponseBodyPtrOutput)
}

// Specifies the content of the response body.
type VirtualServiceSpecHttpDirectResponseBodyOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpDirectResponseBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpDirectResponseBody)(nil)).Elem()
}

func (o VirtualServiceSpecHttpDirectResponseBodyOutput) ToVirtualServiceSpecHttpDirectResponseBodyOutput() VirtualServiceSpecHttpDirectResponseBodyOutput {
	return o
}

func (o VirtualServiceSpecHttpDirectResponseBodyOutput) ToVirtualServiceSpecHttpDirectResponseBodyOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponseBodyOutput {
	return o
}

func (o VirtualServiceSpecHttpDirectResponseBodyOutput) ToVirtualServiceSpecHttpDirectResponseBodyPtrOutput() VirtualServiceSpecHttpDirectResponseBodyPtrOutput {
	return o.ToVirtualServiceSpecHttpDirectResponseBodyPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpDirectResponseBodyOutput) ToVirtualServiceSpecHttpDirectResponseBodyPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponseBodyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpDirectResponseBody) *VirtualServiceSpecHttpDirectResponseBody {
		return &v
	}).(VirtualServiceSpecHttpDirectResponseBodyPtrOutput)
}

// response body as base64 encoded bytes.
func (o VirtualServiceSpecHttpDirectResponseBodyOutput) Bytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpDirectResponseBody) *string { return v.Bytes }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpDirectResponseBodyOutput) String() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpDirectResponseBody) *string { return v.String }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpDirectResponseBodyPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpDirectResponseBodyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpDirectResponseBody)(nil)).Elem()
}

func (o VirtualServiceSpecHttpDirectResponseBodyPtrOutput) ToVirtualServiceSpecHttpDirectResponseBodyPtrOutput() VirtualServiceSpecHttpDirectResponseBodyPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpDirectResponseBodyPtrOutput) ToVirtualServiceSpecHttpDirectResponseBodyPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponseBodyPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpDirectResponseBodyPtrOutput) Elem() VirtualServiceSpecHttpDirectResponseBodyOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpDirectResponseBody) VirtualServiceSpecHttpDirectResponseBody {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpDirectResponseBody
		return ret
	}).(VirtualServiceSpecHttpDirectResponseBodyOutput)
}

// response body as base64 encoded bytes.
func (o VirtualServiceSpecHttpDirectResponseBodyPtrOutput) Bytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpDirectResponseBody) *string {
		if v == nil {
			return nil
		}
		return v.Bytes
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpDirectResponseBodyPtrOutput) String() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpDirectResponseBody) *string {
		if v == nil {
			return nil
		}
		return v.String
	}).(pulumi.StringPtrOutput)
}

// Specifies the content of the response body.
type VirtualServiceSpecHttpDirectResponseBodyPatch struct {
	// response body as base64 encoded bytes.
	Bytes  *string `pulumi:"bytes"`
	String *string `pulumi:"string"`
}

// VirtualServiceSpecHttpDirectResponseBodyPatchInput is an input type that accepts VirtualServiceSpecHttpDirectResponseBodyPatchArgs and VirtualServiceSpecHttpDirectResponseBodyPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpDirectResponseBodyPatchInput` via:
//
//	VirtualServiceSpecHttpDirectResponseBodyPatchArgs{...}
type VirtualServiceSpecHttpDirectResponseBodyPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpDirectResponseBodyPatchOutput() VirtualServiceSpecHttpDirectResponseBodyPatchOutput
	ToVirtualServiceSpecHttpDirectResponseBodyPatchOutputWithContext(context.Context) VirtualServiceSpecHttpDirectResponseBodyPatchOutput
}

// Specifies the content of the response body.
type VirtualServiceSpecHttpDirectResponseBodyPatchArgs struct {
	// response body as base64 encoded bytes.
	Bytes  pulumi.StringPtrInput `pulumi:"bytes"`
	String pulumi.StringPtrInput `pulumi:"string"`
}

func (VirtualServiceSpecHttpDirectResponseBodyPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpDirectResponseBodyPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpDirectResponseBodyPatchArgs) ToVirtualServiceSpecHttpDirectResponseBodyPatchOutput() VirtualServiceSpecHttpDirectResponseBodyPatchOutput {
	return i.ToVirtualServiceSpecHttpDirectResponseBodyPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpDirectResponseBodyPatchArgs) ToVirtualServiceSpecHttpDirectResponseBodyPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponseBodyPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpDirectResponseBodyPatchOutput)
}

func (i VirtualServiceSpecHttpDirectResponseBodyPatchArgs) ToVirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput() VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpDirectResponseBodyPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpDirectResponseBodyPatchArgs) ToVirtualServiceSpecHttpDirectResponseBodyPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpDirectResponseBodyPatchOutput).ToVirtualServiceSpecHttpDirectResponseBodyPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpDirectResponseBodyPatchPtrInput is an input type that accepts VirtualServiceSpecHttpDirectResponseBodyPatchArgs, VirtualServiceSpecHttpDirectResponseBodyPatchPtr and VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpDirectResponseBodyPatchPtrInput` via:
//
//	        VirtualServiceSpecHttpDirectResponseBodyPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpDirectResponseBodyPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput() VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput
	ToVirtualServiceSpecHttpDirectResponseBodyPatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput
}

type virtualServiceSpecHttpDirectResponseBodyPatchPtrType VirtualServiceSpecHttpDirectResponseBodyPatchArgs

func VirtualServiceSpecHttpDirectResponseBodyPatchPtr(v *VirtualServiceSpecHttpDirectResponseBodyPatchArgs) VirtualServiceSpecHttpDirectResponseBodyPatchPtrInput {
	return (*virtualServiceSpecHttpDirectResponseBodyPatchPtrType)(v)
}

func (*virtualServiceSpecHttpDirectResponseBodyPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpDirectResponseBodyPatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpDirectResponseBodyPatchPtrType) ToVirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput() VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpDirectResponseBodyPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpDirectResponseBodyPatchPtrType) ToVirtualServiceSpecHttpDirectResponseBodyPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput)
}

// Specifies the content of the response body.
type VirtualServiceSpecHttpDirectResponseBodyPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpDirectResponseBodyPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpDirectResponseBodyPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpDirectResponseBodyPatchOutput) ToVirtualServiceSpecHttpDirectResponseBodyPatchOutput() VirtualServiceSpecHttpDirectResponseBodyPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpDirectResponseBodyPatchOutput) ToVirtualServiceSpecHttpDirectResponseBodyPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponseBodyPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpDirectResponseBodyPatchOutput) ToVirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput() VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput {
	return o.ToVirtualServiceSpecHttpDirectResponseBodyPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpDirectResponseBodyPatchOutput) ToVirtualServiceSpecHttpDirectResponseBodyPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpDirectResponseBodyPatch) *VirtualServiceSpecHttpDirectResponseBodyPatch {
		return &v
	}).(VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput)
}

// response body as base64 encoded bytes.
func (o VirtualServiceSpecHttpDirectResponseBodyPatchOutput) Bytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpDirectResponseBodyPatch) *string { return v.Bytes }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpDirectResponseBodyPatchOutput) String() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpDirectResponseBodyPatch) *string { return v.String }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpDirectResponseBodyPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput) ToVirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput() VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput) ToVirtualServiceSpecHttpDirectResponseBodyPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput) Elem() VirtualServiceSpecHttpDirectResponseBodyPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpDirectResponseBodyPatch) VirtualServiceSpecHttpDirectResponseBodyPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpDirectResponseBodyPatch
		return ret
	}).(VirtualServiceSpecHttpDirectResponseBodyPatchOutput)
}

// response body as base64 encoded bytes.
func (o VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput) Bytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpDirectResponseBodyPatch) *string {
		if v == nil {
			return nil
		}
		return v.Bytes
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput) String() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpDirectResponseBodyPatch) *string {
		if v == nil {
			return nil
		}
		return v.String
	}).(pulumi.StringPtrOutput)
}

// A HTTP rule can either return a direct_response, redirect or forward (default) traffic.
type VirtualServiceSpecHttpDirectResponsePatch struct {
	Body *VirtualServiceSpecHttpDirectResponseBodyPatch `pulumi:"body"`
	// Specifies the HTTP response status to be returned.
	Status *int `pulumi:"status"`
}

// VirtualServiceSpecHttpDirectResponsePatchInput is an input type that accepts VirtualServiceSpecHttpDirectResponsePatchArgs and VirtualServiceSpecHttpDirectResponsePatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpDirectResponsePatchInput` via:
//
//	VirtualServiceSpecHttpDirectResponsePatchArgs{...}
type VirtualServiceSpecHttpDirectResponsePatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpDirectResponsePatchOutput() VirtualServiceSpecHttpDirectResponsePatchOutput
	ToVirtualServiceSpecHttpDirectResponsePatchOutputWithContext(context.Context) VirtualServiceSpecHttpDirectResponsePatchOutput
}

// A HTTP rule can either return a direct_response, redirect or forward (default) traffic.
type VirtualServiceSpecHttpDirectResponsePatchArgs struct {
	Body VirtualServiceSpecHttpDirectResponseBodyPatchPtrInput `pulumi:"body"`
	// Specifies the HTTP response status to be returned.
	Status pulumi.IntPtrInput `pulumi:"status"`
}

func (VirtualServiceSpecHttpDirectResponsePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpDirectResponsePatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpDirectResponsePatchArgs) ToVirtualServiceSpecHttpDirectResponsePatchOutput() VirtualServiceSpecHttpDirectResponsePatchOutput {
	return i.ToVirtualServiceSpecHttpDirectResponsePatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpDirectResponsePatchArgs) ToVirtualServiceSpecHttpDirectResponsePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponsePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpDirectResponsePatchOutput)
}

func (i VirtualServiceSpecHttpDirectResponsePatchArgs) ToVirtualServiceSpecHttpDirectResponsePatchPtrOutput() VirtualServiceSpecHttpDirectResponsePatchPtrOutput {
	return i.ToVirtualServiceSpecHttpDirectResponsePatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpDirectResponsePatchArgs) ToVirtualServiceSpecHttpDirectResponsePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponsePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpDirectResponsePatchOutput).ToVirtualServiceSpecHttpDirectResponsePatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpDirectResponsePatchPtrInput is an input type that accepts VirtualServiceSpecHttpDirectResponsePatchArgs, VirtualServiceSpecHttpDirectResponsePatchPtr and VirtualServiceSpecHttpDirectResponsePatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpDirectResponsePatchPtrInput` via:
//
//	        VirtualServiceSpecHttpDirectResponsePatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpDirectResponsePatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpDirectResponsePatchPtrOutput() VirtualServiceSpecHttpDirectResponsePatchPtrOutput
	ToVirtualServiceSpecHttpDirectResponsePatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpDirectResponsePatchPtrOutput
}

type virtualServiceSpecHttpDirectResponsePatchPtrType VirtualServiceSpecHttpDirectResponsePatchArgs

func VirtualServiceSpecHttpDirectResponsePatchPtr(v *VirtualServiceSpecHttpDirectResponsePatchArgs) VirtualServiceSpecHttpDirectResponsePatchPtrInput {
	return (*virtualServiceSpecHttpDirectResponsePatchPtrType)(v)
}

func (*virtualServiceSpecHttpDirectResponsePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpDirectResponsePatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpDirectResponsePatchPtrType) ToVirtualServiceSpecHttpDirectResponsePatchPtrOutput() VirtualServiceSpecHttpDirectResponsePatchPtrOutput {
	return i.ToVirtualServiceSpecHttpDirectResponsePatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpDirectResponsePatchPtrType) ToVirtualServiceSpecHttpDirectResponsePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponsePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpDirectResponsePatchPtrOutput)
}

// A HTTP rule can either return a direct_response, redirect or forward (default) traffic.
type VirtualServiceSpecHttpDirectResponsePatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpDirectResponsePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpDirectResponsePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpDirectResponsePatchOutput) ToVirtualServiceSpecHttpDirectResponsePatchOutput() VirtualServiceSpecHttpDirectResponsePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpDirectResponsePatchOutput) ToVirtualServiceSpecHttpDirectResponsePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponsePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpDirectResponsePatchOutput) ToVirtualServiceSpecHttpDirectResponsePatchPtrOutput() VirtualServiceSpecHttpDirectResponsePatchPtrOutput {
	return o.ToVirtualServiceSpecHttpDirectResponsePatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpDirectResponsePatchOutput) ToVirtualServiceSpecHttpDirectResponsePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponsePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpDirectResponsePatch) *VirtualServiceSpecHttpDirectResponsePatch {
		return &v
	}).(VirtualServiceSpecHttpDirectResponsePatchPtrOutput)
}

func (o VirtualServiceSpecHttpDirectResponsePatchOutput) Body() VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpDirectResponsePatch) *VirtualServiceSpecHttpDirectResponseBodyPatch {
		return v.Body
	}).(VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput)
}

// Specifies the HTTP response status to be returned.
func (o VirtualServiceSpecHttpDirectResponsePatchOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpDirectResponsePatch) *int { return v.Status }).(pulumi.IntPtrOutput)
}

type VirtualServiceSpecHttpDirectResponsePatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpDirectResponsePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpDirectResponsePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpDirectResponsePatchPtrOutput) ToVirtualServiceSpecHttpDirectResponsePatchPtrOutput() VirtualServiceSpecHttpDirectResponsePatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpDirectResponsePatchPtrOutput) ToVirtualServiceSpecHttpDirectResponsePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpDirectResponsePatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpDirectResponsePatchPtrOutput) Elem() VirtualServiceSpecHttpDirectResponsePatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpDirectResponsePatch) VirtualServiceSpecHttpDirectResponsePatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpDirectResponsePatch
		return ret
	}).(VirtualServiceSpecHttpDirectResponsePatchOutput)
}

func (o VirtualServiceSpecHttpDirectResponsePatchPtrOutput) Body() VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpDirectResponsePatch) *VirtualServiceSpecHttpDirectResponseBodyPatch {
		if v == nil {
			return nil
		}
		return v.Body
	}).(VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput)
}

// Specifies the HTTP response status to be returned.
func (o VirtualServiceSpecHttpDirectResponsePatchPtrOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpDirectResponsePatch) *int {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.IntPtrOutput)
}

// Fault injection policy to apply on HTTP traffic at the client side.
type VirtualServiceSpecHttpFault struct {
	Abort *VirtualServiceSpecHttpFaultAbort `pulumi:"abort"`
	Delay *VirtualServiceSpecHttpFaultDelay `pulumi:"delay"`
}

// VirtualServiceSpecHttpFaultInput is an input type that accepts VirtualServiceSpecHttpFaultArgs and VirtualServiceSpecHttpFaultOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpFaultInput` via:
//
//	VirtualServiceSpecHttpFaultArgs{...}
type VirtualServiceSpecHttpFaultInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpFaultOutput() VirtualServiceSpecHttpFaultOutput
	ToVirtualServiceSpecHttpFaultOutputWithContext(context.Context) VirtualServiceSpecHttpFaultOutput
}

// Fault injection policy to apply on HTTP traffic at the client side.
type VirtualServiceSpecHttpFaultArgs struct {
	Abort VirtualServiceSpecHttpFaultAbortPtrInput `pulumi:"abort"`
	Delay VirtualServiceSpecHttpFaultDelayPtrInput `pulumi:"delay"`
}

func (VirtualServiceSpecHttpFaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpFault)(nil)).Elem()
}

func (i VirtualServiceSpecHttpFaultArgs) ToVirtualServiceSpecHttpFaultOutput() VirtualServiceSpecHttpFaultOutput {
	return i.ToVirtualServiceSpecHttpFaultOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpFaultArgs) ToVirtualServiceSpecHttpFaultOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultOutput)
}

func (i VirtualServiceSpecHttpFaultArgs) ToVirtualServiceSpecHttpFaultPtrOutput() VirtualServiceSpecHttpFaultPtrOutput {
	return i.ToVirtualServiceSpecHttpFaultPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpFaultArgs) ToVirtualServiceSpecHttpFaultPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultOutput).ToVirtualServiceSpecHttpFaultPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpFaultPtrInput is an input type that accepts VirtualServiceSpecHttpFaultArgs, VirtualServiceSpecHttpFaultPtr and VirtualServiceSpecHttpFaultPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpFaultPtrInput` via:
//
//	        VirtualServiceSpecHttpFaultArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpFaultPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpFaultPtrOutput() VirtualServiceSpecHttpFaultPtrOutput
	ToVirtualServiceSpecHttpFaultPtrOutputWithContext(context.Context) VirtualServiceSpecHttpFaultPtrOutput
}

type virtualServiceSpecHttpFaultPtrType VirtualServiceSpecHttpFaultArgs

func VirtualServiceSpecHttpFaultPtr(v *VirtualServiceSpecHttpFaultArgs) VirtualServiceSpecHttpFaultPtrInput {
	return (*virtualServiceSpecHttpFaultPtrType)(v)
}

func (*virtualServiceSpecHttpFaultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpFault)(nil)).Elem()
}

func (i *virtualServiceSpecHttpFaultPtrType) ToVirtualServiceSpecHttpFaultPtrOutput() VirtualServiceSpecHttpFaultPtrOutput {
	return i.ToVirtualServiceSpecHttpFaultPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpFaultPtrType) ToVirtualServiceSpecHttpFaultPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultPtrOutput)
}

// Fault injection policy to apply on HTTP traffic at the client side.
type VirtualServiceSpecHttpFaultOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpFaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpFault)(nil)).Elem()
}

func (o VirtualServiceSpecHttpFaultOutput) ToVirtualServiceSpecHttpFaultOutput() VirtualServiceSpecHttpFaultOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultOutput) ToVirtualServiceSpecHttpFaultOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultOutput) ToVirtualServiceSpecHttpFaultPtrOutput() VirtualServiceSpecHttpFaultPtrOutput {
	return o.ToVirtualServiceSpecHttpFaultPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpFaultOutput) ToVirtualServiceSpecHttpFaultPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpFault) *VirtualServiceSpecHttpFault {
		return &v
	}).(VirtualServiceSpecHttpFaultPtrOutput)
}

func (o VirtualServiceSpecHttpFaultOutput) Abort() VirtualServiceSpecHttpFaultAbortPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFault) *VirtualServiceSpecHttpFaultAbort { return v.Abort }).(VirtualServiceSpecHttpFaultAbortPtrOutput)
}

func (o VirtualServiceSpecHttpFaultOutput) Delay() VirtualServiceSpecHttpFaultDelayPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFault) *VirtualServiceSpecHttpFaultDelay { return v.Delay }).(VirtualServiceSpecHttpFaultDelayPtrOutput)
}

type VirtualServiceSpecHttpFaultPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpFaultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpFault)(nil)).Elem()
}

func (o VirtualServiceSpecHttpFaultPtrOutput) ToVirtualServiceSpecHttpFaultPtrOutput() VirtualServiceSpecHttpFaultPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultPtrOutput) ToVirtualServiceSpecHttpFaultPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultPtrOutput) Elem() VirtualServiceSpecHttpFaultOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFault) VirtualServiceSpecHttpFault {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpFault
		return ret
	}).(VirtualServiceSpecHttpFaultOutput)
}

func (o VirtualServiceSpecHttpFaultPtrOutput) Abort() VirtualServiceSpecHttpFaultAbortPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFault) *VirtualServiceSpecHttpFaultAbort {
		if v == nil {
			return nil
		}
		return v.Abort
	}).(VirtualServiceSpecHttpFaultAbortPtrOutput)
}

func (o VirtualServiceSpecHttpFaultPtrOutput) Delay() VirtualServiceSpecHttpFaultDelayPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFault) *VirtualServiceSpecHttpFaultDelay {
		if v == nil {
			return nil
		}
		return v.Delay
	}).(VirtualServiceSpecHttpFaultDelayPtrOutput)
}

// Abort Http request attempts and return error codes back to downstream service, giving the impression that the upstream service is faulty.
type VirtualServiceSpecHttpFaultAbort struct {
	// GRPC status code to use to abort the request.
	GrpcStatus *string `pulumi:"grpcStatus"`
	Http2Error *string `pulumi:"http2Error"`
	// HTTP status code to use to abort the Http request.
	HttpStatus *int                                        `pulumi:"httpStatus"`
	Percentage *VirtualServiceSpecHttpFaultAbortPercentage `pulumi:"percentage"`
}

// VirtualServiceSpecHttpFaultAbortInput is an input type that accepts VirtualServiceSpecHttpFaultAbortArgs and VirtualServiceSpecHttpFaultAbortOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpFaultAbortInput` via:
//
//	VirtualServiceSpecHttpFaultAbortArgs{...}
type VirtualServiceSpecHttpFaultAbortInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpFaultAbortOutput() VirtualServiceSpecHttpFaultAbortOutput
	ToVirtualServiceSpecHttpFaultAbortOutputWithContext(context.Context) VirtualServiceSpecHttpFaultAbortOutput
}

// Abort Http request attempts and return error codes back to downstream service, giving the impression that the upstream service is faulty.
type VirtualServiceSpecHttpFaultAbortArgs struct {
	// GRPC status code to use to abort the request.
	GrpcStatus pulumi.StringPtrInput `pulumi:"grpcStatus"`
	Http2Error pulumi.StringPtrInput `pulumi:"http2Error"`
	// HTTP status code to use to abort the Http request.
	HttpStatus pulumi.IntPtrInput                                 `pulumi:"httpStatus"`
	Percentage VirtualServiceSpecHttpFaultAbortPercentagePtrInput `pulumi:"percentage"`
}

func (VirtualServiceSpecHttpFaultAbortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpFaultAbort)(nil)).Elem()
}

func (i VirtualServiceSpecHttpFaultAbortArgs) ToVirtualServiceSpecHttpFaultAbortOutput() VirtualServiceSpecHttpFaultAbortOutput {
	return i.ToVirtualServiceSpecHttpFaultAbortOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpFaultAbortArgs) ToVirtualServiceSpecHttpFaultAbortOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultAbortOutput)
}

func (i VirtualServiceSpecHttpFaultAbortArgs) ToVirtualServiceSpecHttpFaultAbortPtrOutput() VirtualServiceSpecHttpFaultAbortPtrOutput {
	return i.ToVirtualServiceSpecHttpFaultAbortPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpFaultAbortArgs) ToVirtualServiceSpecHttpFaultAbortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultAbortOutput).ToVirtualServiceSpecHttpFaultAbortPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpFaultAbortPtrInput is an input type that accepts VirtualServiceSpecHttpFaultAbortArgs, VirtualServiceSpecHttpFaultAbortPtr and VirtualServiceSpecHttpFaultAbortPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpFaultAbortPtrInput` via:
//
//	        VirtualServiceSpecHttpFaultAbortArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpFaultAbortPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpFaultAbortPtrOutput() VirtualServiceSpecHttpFaultAbortPtrOutput
	ToVirtualServiceSpecHttpFaultAbortPtrOutputWithContext(context.Context) VirtualServiceSpecHttpFaultAbortPtrOutput
}

type virtualServiceSpecHttpFaultAbortPtrType VirtualServiceSpecHttpFaultAbortArgs

func VirtualServiceSpecHttpFaultAbortPtr(v *VirtualServiceSpecHttpFaultAbortArgs) VirtualServiceSpecHttpFaultAbortPtrInput {
	return (*virtualServiceSpecHttpFaultAbortPtrType)(v)
}

func (*virtualServiceSpecHttpFaultAbortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpFaultAbort)(nil)).Elem()
}

func (i *virtualServiceSpecHttpFaultAbortPtrType) ToVirtualServiceSpecHttpFaultAbortPtrOutput() VirtualServiceSpecHttpFaultAbortPtrOutput {
	return i.ToVirtualServiceSpecHttpFaultAbortPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpFaultAbortPtrType) ToVirtualServiceSpecHttpFaultAbortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultAbortPtrOutput)
}

// Abort Http request attempts and return error codes back to downstream service, giving the impression that the upstream service is faulty.
type VirtualServiceSpecHttpFaultAbortOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpFaultAbortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpFaultAbort)(nil)).Elem()
}

func (o VirtualServiceSpecHttpFaultAbortOutput) ToVirtualServiceSpecHttpFaultAbortOutput() VirtualServiceSpecHttpFaultAbortOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultAbortOutput) ToVirtualServiceSpecHttpFaultAbortOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultAbortOutput) ToVirtualServiceSpecHttpFaultAbortPtrOutput() VirtualServiceSpecHttpFaultAbortPtrOutput {
	return o.ToVirtualServiceSpecHttpFaultAbortPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpFaultAbortOutput) ToVirtualServiceSpecHttpFaultAbortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpFaultAbort) *VirtualServiceSpecHttpFaultAbort {
		return &v
	}).(VirtualServiceSpecHttpFaultAbortPtrOutput)
}

// GRPC status code to use to abort the request.
func (o VirtualServiceSpecHttpFaultAbortOutput) GrpcStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFaultAbort) *string { return v.GrpcStatus }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpFaultAbortOutput) Http2Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFaultAbort) *string { return v.Http2Error }).(pulumi.StringPtrOutput)
}

// HTTP status code to use to abort the Http request.
func (o VirtualServiceSpecHttpFaultAbortOutput) HttpStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFaultAbort) *int { return v.HttpStatus }).(pulumi.IntPtrOutput)
}

func (o VirtualServiceSpecHttpFaultAbortOutput) Percentage() VirtualServiceSpecHttpFaultAbortPercentagePtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFaultAbort) *VirtualServiceSpecHttpFaultAbortPercentage {
		return v.Percentage
	}).(VirtualServiceSpecHttpFaultAbortPercentagePtrOutput)
}

type VirtualServiceSpecHttpFaultAbortPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpFaultAbortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpFaultAbort)(nil)).Elem()
}

func (o VirtualServiceSpecHttpFaultAbortPtrOutput) ToVirtualServiceSpecHttpFaultAbortPtrOutput() VirtualServiceSpecHttpFaultAbortPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultAbortPtrOutput) ToVirtualServiceSpecHttpFaultAbortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultAbortPtrOutput) Elem() VirtualServiceSpecHttpFaultAbortOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultAbort) VirtualServiceSpecHttpFaultAbort {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpFaultAbort
		return ret
	}).(VirtualServiceSpecHttpFaultAbortOutput)
}

// GRPC status code to use to abort the request.
func (o VirtualServiceSpecHttpFaultAbortPtrOutput) GrpcStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultAbort) *string {
		if v == nil {
			return nil
		}
		return v.GrpcStatus
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpFaultAbortPtrOutput) Http2Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultAbort) *string {
		if v == nil {
			return nil
		}
		return v.Http2Error
	}).(pulumi.StringPtrOutput)
}

// HTTP status code to use to abort the Http request.
func (o VirtualServiceSpecHttpFaultAbortPtrOutput) HttpStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultAbort) *int {
		if v == nil {
			return nil
		}
		return v.HttpStatus
	}).(pulumi.IntPtrOutput)
}

func (o VirtualServiceSpecHttpFaultAbortPtrOutput) Percentage() VirtualServiceSpecHttpFaultAbortPercentagePtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultAbort) *VirtualServiceSpecHttpFaultAbortPercentage {
		if v == nil {
			return nil
		}
		return v.Percentage
	}).(VirtualServiceSpecHttpFaultAbortPercentagePtrOutput)
}

// Abort Http request attempts and return error codes back to downstream service, giving the impression that the upstream service is faulty.
type VirtualServiceSpecHttpFaultAbortPatch struct {
	// GRPC status code to use to abort the request.
	GrpcStatus *string `pulumi:"grpcStatus"`
	Http2Error *string `pulumi:"http2Error"`
	// HTTP status code to use to abort the Http request.
	HttpStatus *int                                             `pulumi:"httpStatus"`
	Percentage *VirtualServiceSpecHttpFaultAbortPercentagePatch `pulumi:"percentage"`
}

// VirtualServiceSpecHttpFaultAbortPatchInput is an input type that accepts VirtualServiceSpecHttpFaultAbortPatchArgs and VirtualServiceSpecHttpFaultAbortPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpFaultAbortPatchInput` via:
//
//	VirtualServiceSpecHttpFaultAbortPatchArgs{...}
type VirtualServiceSpecHttpFaultAbortPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpFaultAbortPatchOutput() VirtualServiceSpecHttpFaultAbortPatchOutput
	ToVirtualServiceSpecHttpFaultAbortPatchOutputWithContext(context.Context) VirtualServiceSpecHttpFaultAbortPatchOutput
}

// Abort Http request attempts and return error codes back to downstream service, giving the impression that the upstream service is faulty.
type VirtualServiceSpecHttpFaultAbortPatchArgs struct {
	// GRPC status code to use to abort the request.
	GrpcStatus pulumi.StringPtrInput `pulumi:"grpcStatus"`
	Http2Error pulumi.StringPtrInput `pulumi:"http2Error"`
	// HTTP status code to use to abort the Http request.
	HttpStatus pulumi.IntPtrInput                                      `pulumi:"httpStatus"`
	Percentage VirtualServiceSpecHttpFaultAbortPercentagePatchPtrInput `pulumi:"percentage"`
}

func (VirtualServiceSpecHttpFaultAbortPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpFaultAbortPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpFaultAbortPatchArgs) ToVirtualServiceSpecHttpFaultAbortPatchOutput() VirtualServiceSpecHttpFaultAbortPatchOutput {
	return i.ToVirtualServiceSpecHttpFaultAbortPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpFaultAbortPatchArgs) ToVirtualServiceSpecHttpFaultAbortPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultAbortPatchOutput)
}

func (i VirtualServiceSpecHttpFaultAbortPatchArgs) ToVirtualServiceSpecHttpFaultAbortPatchPtrOutput() VirtualServiceSpecHttpFaultAbortPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpFaultAbortPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpFaultAbortPatchArgs) ToVirtualServiceSpecHttpFaultAbortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultAbortPatchOutput).ToVirtualServiceSpecHttpFaultAbortPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpFaultAbortPatchPtrInput is an input type that accepts VirtualServiceSpecHttpFaultAbortPatchArgs, VirtualServiceSpecHttpFaultAbortPatchPtr and VirtualServiceSpecHttpFaultAbortPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpFaultAbortPatchPtrInput` via:
//
//	        VirtualServiceSpecHttpFaultAbortPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpFaultAbortPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpFaultAbortPatchPtrOutput() VirtualServiceSpecHttpFaultAbortPatchPtrOutput
	ToVirtualServiceSpecHttpFaultAbortPatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpFaultAbortPatchPtrOutput
}

type virtualServiceSpecHttpFaultAbortPatchPtrType VirtualServiceSpecHttpFaultAbortPatchArgs

func VirtualServiceSpecHttpFaultAbortPatchPtr(v *VirtualServiceSpecHttpFaultAbortPatchArgs) VirtualServiceSpecHttpFaultAbortPatchPtrInput {
	return (*virtualServiceSpecHttpFaultAbortPatchPtrType)(v)
}

func (*virtualServiceSpecHttpFaultAbortPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpFaultAbortPatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpFaultAbortPatchPtrType) ToVirtualServiceSpecHttpFaultAbortPatchPtrOutput() VirtualServiceSpecHttpFaultAbortPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpFaultAbortPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpFaultAbortPatchPtrType) ToVirtualServiceSpecHttpFaultAbortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultAbortPatchPtrOutput)
}

// Abort Http request attempts and return error codes back to downstream service, giving the impression that the upstream service is faulty.
type VirtualServiceSpecHttpFaultAbortPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpFaultAbortPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpFaultAbortPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpFaultAbortPatchOutput) ToVirtualServiceSpecHttpFaultAbortPatchOutput() VirtualServiceSpecHttpFaultAbortPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultAbortPatchOutput) ToVirtualServiceSpecHttpFaultAbortPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultAbortPatchOutput) ToVirtualServiceSpecHttpFaultAbortPatchPtrOutput() VirtualServiceSpecHttpFaultAbortPatchPtrOutput {
	return o.ToVirtualServiceSpecHttpFaultAbortPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpFaultAbortPatchOutput) ToVirtualServiceSpecHttpFaultAbortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpFaultAbortPatch) *VirtualServiceSpecHttpFaultAbortPatch {
		return &v
	}).(VirtualServiceSpecHttpFaultAbortPatchPtrOutput)
}

// GRPC status code to use to abort the request.
func (o VirtualServiceSpecHttpFaultAbortPatchOutput) GrpcStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFaultAbortPatch) *string { return v.GrpcStatus }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpFaultAbortPatchOutput) Http2Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFaultAbortPatch) *string { return v.Http2Error }).(pulumi.StringPtrOutput)
}

// HTTP status code to use to abort the Http request.
func (o VirtualServiceSpecHttpFaultAbortPatchOutput) HttpStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFaultAbortPatch) *int { return v.HttpStatus }).(pulumi.IntPtrOutput)
}

func (o VirtualServiceSpecHttpFaultAbortPatchOutput) Percentage() VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFaultAbortPatch) *VirtualServiceSpecHttpFaultAbortPercentagePatch {
		return v.Percentage
	}).(VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput)
}

type VirtualServiceSpecHttpFaultAbortPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpFaultAbortPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpFaultAbortPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpFaultAbortPatchPtrOutput) ToVirtualServiceSpecHttpFaultAbortPatchPtrOutput() VirtualServiceSpecHttpFaultAbortPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultAbortPatchPtrOutput) ToVirtualServiceSpecHttpFaultAbortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultAbortPatchPtrOutput) Elem() VirtualServiceSpecHttpFaultAbortPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultAbortPatch) VirtualServiceSpecHttpFaultAbortPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpFaultAbortPatch
		return ret
	}).(VirtualServiceSpecHttpFaultAbortPatchOutput)
}

// GRPC status code to use to abort the request.
func (o VirtualServiceSpecHttpFaultAbortPatchPtrOutput) GrpcStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultAbortPatch) *string {
		if v == nil {
			return nil
		}
		return v.GrpcStatus
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpFaultAbortPatchPtrOutput) Http2Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultAbortPatch) *string {
		if v == nil {
			return nil
		}
		return v.Http2Error
	}).(pulumi.StringPtrOutput)
}

// HTTP status code to use to abort the Http request.
func (o VirtualServiceSpecHttpFaultAbortPatchPtrOutput) HttpStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultAbortPatch) *int {
		if v == nil {
			return nil
		}
		return v.HttpStatus
	}).(pulumi.IntPtrOutput)
}

func (o VirtualServiceSpecHttpFaultAbortPatchPtrOutput) Percentage() VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultAbortPatch) *VirtualServiceSpecHttpFaultAbortPercentagePatch {
		if v == nil {
			return nil
		}
		return v.Percentage
	}).(VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput)
}

// Percentage of requests to be aborted with the error code provided.
type VirtualServiceSpecHttpFaultAbortPercentage struct {
	Value *float64 `pulumi:"value"`
}

// VirtualServiceSpecHttpFaultAbortPercentageInput is an input type that accepts VirtualServiceSpecHttpFaultAbortPercentageArgs and VirtualServiceSpecHttpFaultAbortPercentageOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpFaultAbortPercentageInput` via:
//
//	VirtualServiceSpecHttpFaultAbortPercentageArgs{...}
type VirtualServiceSpecHttpFaultAbortPercentageInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpFaultAbortPercentageOutput() VirtualServiceSpecHttpFaultAbortPercentageOutput
	ToVirtualServiceSpecHttpFaultAbortPercentageOutputWithContext(context.Context) VirtualServiceSpecHttpFaultAbortPercentageOutput
}

// Percentage of requests to be aborted with the error code provided.
type VirtualServiceSpecHttpFaultAbortPercentageArgs struct {
	Value pulumi.Float64PtrInput `pulumi:"value"`
}

func (VirtualServiceSpecHttpFaultAbortPercentageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpFaultAbortPercentage)(nil)).Elem()
}

func (i VirtualServiceSpecHttpFaultAbortPercentageArgs) ToVirtualServiceSpecHttpFaultAbortPercentageOutput() VirtualServiceSpecHttpFaultAbortPercentageOutput {
	return i.ToVirtualServiceSpecHttpFaultAbortPercentageOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpFaultAbortPercentageArgs) ToVirtualServiceSpecHttpFaultAbortPercentageOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortPercentageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultAbortPercentageOutput)
}

func (i VirtualServiceSpecHttpFaultAbortPercentageArgs) ToVirtualServiceSpecHttpFaultAbortPercentagePtrOutput() VirtualServiceSpecHttpFaultAbortPercentagePtrOutput {
	return i.ToVirtualServiceSpecHttpFaultAbortPercentagePtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpFaultAbortPercentageArgs) ToVirtualServiceSpecHttpFaultAbortPercentagePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortPercentagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultAbortPercentageOutput).ToVirtualServiceSpecHttpFaultAbortPercentagePtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpFaultAbortPercentagePtrInput is an input type that accepts VirtualServiceSpecHttpFaultAbortPercentageArgs, VirtualServiceSpecHttpFaultAbortPercentagePtr and VirtualServiceSpecHttpFaultAbortPercentagePtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpFaultAbortPercentagePtrInput` via:
//
//	        VirtualServiceSpecHttpFaultAbortPercentageArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpFaultAbortPercentagePtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpFaultAbortPercentagePtrOutput() VirtualServiceSpecHttpFaultAbortPercentagePtrOutput
	ToVirtualServiceSpecHttpFaultAbortPercentagePtrOutputWithContext(context.Context) VirtualServiceSpecHttpFaultAbortPercentagePtrOutput
}

type virtualServiceSpecHttpFaultAbortPercentagePtrType VirtualServiceSpecHttpFaultAbortPercentageArgs

func VirtualServiceSpecHttpFaultAbortPercentagePtr(v *VirtualServiceSpecHttpFaultAbortPercentageArgs) VirtualServiceSpecHttpFaultAbortPercentagePtrInput {
	return (*virtualServiceSpecHttpFaultAbortPercentagePtrType)(v)
}

func (*virtualServiceSpecHttpFaultAbortPercentagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpFaultAbortPercentage)(nil)).Elem()
}

func (i *virtualServiceSpecHttpFaultAbortPercentagePtrType) ToVirtualServiceSpecHttpFaultAbortPercentagePtrOutput() VirtualServiceSpecHttpFaultAbortPercentagePtrOutput {
	return i.ToVirtualServiceSpecHttpFaultAbortPercentagePtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpFaultAbortPercentagePtrType) ToVirtualServiceSpecHttpFaultAbortPercentagePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortPercentagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultAbortPercentagePtrOutput)
}

// Percentage of requests to be aborted with the error code provided.
type VirtualServiceSpecHttpFaultAbortPercentageOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpFaultAbortPercentageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpFaultAbortPercentage)(nil)).Elem()
}

func (o VirtualServiceSpecHttpFaultAbortPercentageOutput) ToVirtualServiceSpecHttpFaultAbortPercentageOutput() VirtualServiceSpecHttpFaultAbortPercentageOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultAbortPercentageOutput) ToVirtualServiceSpecHttpFaultAbortPercentageOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortPercentageOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultAbortPercentageOutput) ToVirtualServiceSpecHttpFaultAbortPercentagePtrOutput() VirtualServiceSpecHttpFaultAbortPercentagePtrOutput {
	return o.ToVirtualServiceSpecHttpFaultAbortPercentagePtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpFaultAbortPercentageOutput) ToVirtualServiceSpecHttpFaultAbortPercentagePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortPercentagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpFaultAbortPercentage) *VirtualServiceSpecHttpFaultAbortPercentage {
		return &v
	}).(VirtualServiceSpecHttpFaultAbortPercentagePtrOutput)
}

func (o VirtualServiceSpecHttpFaultAbortPercentageOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFaultAbortPercentage) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type VirtualServiceSpecHttpFaultAbortPercentagePtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpFaultAbortPercentagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpFaultAbortPercentage)(nil)).Elem()
}

func (o VirtualServiceSpecHttpFaultAbortPercentagePtrOutput) ToVirtualServiceSpecHttpFaultAbortPercentagePtrOutput() VirtualServiceSpecHttpFaultAbortPercentagePtrOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultAbortPercentagePtrOutput) ToVirtualServiceSpecHttpFaultAbortPercentagePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortPercentagePtrOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultAbortPercentagePtrOutput) Elem() VirtualServiceSpecHttpFaultAbortPercentageOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultAbortPercentage) VirtualServiceSpecHttpFaultAbortPercentage {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpFaultAbortPercentage
		return ret
	}).(VirtualServiceSpecHttpFaultAbortPercentageOutput)
}

func (o VirtualServiceSpecHttpFaultAbortPercentagePtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultAbortPercentage) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

// Percentage of requests to be aborted with the error code provided.
type VirtualServiceSpecHttpFaultAbortPercentagePatch struct {
	Value *float64 `pulumi:"value"`
}

// VirtualServiceSpecHttpFaultAbortPercentagePatchInput is an input type that accepts VirtualServiceSpecHttpFaultAbortPercentagePatchArgs and VirtualServiceSpecHttpFaultAbortPercentagePatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpFaultAbortPercentagePatchInput` via:
//
//	VirtualServiceSpecHttpFaultAbortPercentagePatchArgs{...}
type VirtualServiceSpecHttpFaultAbortPercentagePatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpFaultAbortPercentagePatchOutput() VirtualServiceSpecHttpFaultAbortPercentagePatchOutput
	ToVirtualServiceSpecHttpFaultAbortPercentagePatchOutputWithContext(context.Context) VirtualServiceSpecHttpFaultAbortPercentagePatchOutput
}

// Percentage of requests to be aborted with the error code provided.
type VirtualServiceSpecHttpFaultAbortPercentagePatchArgs struct {
	Value pulumi.Float64PtrInput `pulumi:"value"`
}

func (VirtualServiceSpecHttpFaultAbortPercentagePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpFaultAbortPercentagePatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpFaultAbortPercentagePatchArgs) ToVirtualServiceSpecHttpFaultAbortPercentagePatchOutput() VirtualServiceSpecHttpFaultAbortPercentagePatchOutput {
	return i.ToVirtualServiceSpecHttpFaultAbortPercentagePatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpFaultAbortPercentagePatchArgs) ToVirtualServiceSpecHttpFaultAbortPercentagePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortPercentagePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultAbortPercentagePatchOutput)
}

func (i VirtualServiceSpecHttpFaultAbortPercentagePatchArgs) ToVirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput() VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput {
	return i.ToVirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpFaultAbortPercentagePatchArgs) ToVirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultAbortPercentagePatchOutput).ToVirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpFaultAbortPercentagePatchPtrInput is an input type that accepts VirtualServiceSpecHttpFaultAbortPercentagePatchArgs, VirtualServiceSpecHttpFaultAbortPercentagePatchPtr and VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpFaultAbortPercentagePatchPtrInput` via:
//
//	        VirtualServiceSpecHttpFaultAbortPercentagePatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpFaultAbortPercentagePatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput() VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput
	ToVirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput
}

type virtualServiceSpecHttpFaultAbortPercentagePatchPtrType VirtualServiceSpecHttpFaultAbortPercentagePatchArgs

func VirtualServiceSpecHttpFaultAbortPercentagePatchPtr(v *VirtualServiceSpecHttpFaultAbortPercentagePatchArgs) VirtualServiceSpecHttpFaultAbortPercentagePatchPtrInput {
	return (*virtualServiceSpecHttpFaultAbortPercentagePatchPtrType)(v)
}

func (*virtualServiceSpecHttpFaultAbortPercentagePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpFaultAbortPercentagePatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpFaultAbortPercentagePatchPtrType) ToVirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput() VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput {
	return i.ToVirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpFaultAbortPercentagePatchPtrType) ToVirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput)
}

// Percentage of requests to be aborted with the error code provided.
type VirtualServiceSpecHttpFaultAbortPercentagePatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpFaultAbortPercentagePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpFaultAbortPercentagePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpFaultAbortPercentagePatchOutput) ToVirtualServiceSpecHttpFaultAbortPercentagePatchOutput() VirtualServiceSpecHttpFaultAbortPercentagePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultAbortPercentagePatchOutput) ToVirtualServiceSpecHttpFaultAbortPercentagePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortPercentagePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultAbortPercentagePatchOutput) ToVirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput() VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput {
	return o.ToVirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpFaultAbortPercentagePatchOutput) ToVirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpFaultAbortPercentagePatch) *VirtualServiceSpecHttpFaultAbortPercentagePatch {
		return &v
	}).(VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput)
}

func (o VirtualServiceSpecHttpFaultAbortPercentagePatchOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFaultAbortPercentagePatch) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpFaultAbortPercentagePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput) ToVirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput() VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput) ToVirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput) Elem() VirtualServiceSpecHttpFaultAbortPercentagePatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultAbortPercentagePatch) VirtualServiceSpecHttpFaultAbortPercentagePatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpFaultAbortPercentagePatch
		return ret
	}).(VirtualServiceSpecHttpFaultAbortPercentagePatchOutput)
}

func (o VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultAbortPercentagePatch) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

// Delay requests before forwarding, emulating various failures such as network issues, overloaded upstream service, etc.
type VirtualServiceSpecHttpFaultDelay struct {
	ExponentialDelay *string `pulumi:"exponentialDelay"`
	// Add a fixed delay before forwarding the request.
	FixedDelay *string `pulumi:"fixedDelay"`
	// Percentage of requests on which the delay will be injected (0-100).
	Percent    *int                                        `pulumi:"percent"`
	Percentage *VirtualServiceSpecHttpFaultDelayPercentage `pulumi:"percentage"`
}

// VirtualServiceSpecHttpFaultDelayInput is an input type that accepts VirtualServiceSpecHttpFaultDelayArgs and VirtualServiceSpecHttpFaultDelayOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpFaultDelayInput` via:
//
//	VirtualServiceSpecHttpFaultDelayArgs{...}
type VirtualServiceSpecHttpFaultDelayInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpFaultDelayOutput() VirtualServiceSpecHttpFaultDelayOutput
	ToVirtualServiceSpecHttpFaultDelayOutputWithContext(context.Context) VirtualServiceSpecHttpFaultDelayOutput
}

// Delay requests before forwarding, emulating various failures such as network issues, overloaded upstream service, etc.
type VirtualServiceSpecHttpFaultDelayArgs struct {
	ExponentialDelay pulumi.StringPtrInput `pulumi:"exponentialDelay"`
	// Add a fixed delay before forwarding the request.
	FixedDelay pulumi.StringPtrInput `pulumi:"fixedDelay"`
	// Percentage of requests on which the delay will be injected (0-100).
	Percent    pulumi.IntPtrInput                                 `pulumi:"percent"`
	Percentage VirtualServiceSpecHttpFaultDelayPercentagePtrInput `pulumi:"percentage"`
}

func (VirtualServiceSpecHttpFaultDelayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpFaultDelay)(nil)).Elem()
}

func (i VirtualServiceSpecHttpFaultDelayArgs) ToVirtualServiceSpecHttpFaultDelayOutput() VirtualServiceSpecHttpFaultDelayOutput {
	return i.ToVirtualServiceSpecHttpFaultDelayOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpFaultDelayArgs) ToVirtualServiceSpecHttpFaultDelayOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultDelayOutput)
}

func (i VirtualServiceSpecHttpFaultDelayArgs) ToVirtualServiceSpecHttpFaultDelayPtrOutput() VirtualServiceSpecHttpFaultDelayPtrOutput {
	return i.ToVirtualServiceSpecHttpFaultDelayPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpFaultDelayArgs) ToVirtualServiceSpecHttpFaultDelayPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultDelayOutput).ToVirtualServiceSpecHttpFaultDelayPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpFaultDelayPtrInput is an input type that accepts VirtualServiceSpecHttpFaultDelayArgs, VirtualServiceSpecHttpFaultDelayPtr and VirtualServiceSpecHttpFaultDelayPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpFaultDelayPtrInput` via:
//
//	        VirtualServiceSpecHttpFaultDelayArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpFaultDelayPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpFaultDelayPtrOutput() VirtualServiceSpecHttpFaultDelayPtrOutput
	ToVirtualServiceSpecHttpFaultDelayPtrOutputWithContext(context.Context) VirtualServiceSpecHttpFaultDelayPtrOutput
}

type virtualServiceSpecHttpFaultDelayPtrType VirtualServiceSpecHttpFaultDelayArgs

func VirtualServiceSpecHttpFaultDelayPtr(v *VirtualServiceSpecHttpFaultDelayArgs) VirtualServiceSpecHttpFaultDelayPtrInput {
	return (*virtualServiceSpecHttpFaultDelayPtrType)(v)
}

func (*virtualServiceSpecHttpFaultDelayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpFaultDelay)(nil)).Elem()
}

func (i *virtualServiceSpecHttpFaultDelayPtrType) ToVirtualServiceSpecHttpFaultDelayPtrOutput() VirtualServiceSpecHttpFaultDelayPtrOutput {
	return i.ToVirtualServiceSpecHttpFaultDelayPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpFaultDelayPtrType) ToVirtualServiceSpecHttpFaultDelayPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultDelayPtrOutput)
}

// Delay requests before forwarding, emulating various failures such as network issues, overloaded upstream service, etc.
type VirtualServiceSpecHttpFaultDelayOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpFaultDelayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpFaultDelay)(nil)).Elem()
}

func (o VirtualServiceSpecHttpFaultDelayOutput) ToVirtualServiceSpecHttpFaultDelayOutput() VirtualServiceSpecHttpFaultDelayOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultDelayOutput) ToVirtualServiceSpecHttpFaultDelayOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultDelayOutput) ToVirtualServiceSpecHttpFaultDelayPtrOutput() VirtualServiceSpecHttpFaultDelayPtrOutput {
	return o.ToVirtualServiceSpecHttpFaultDelayPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpFaultDelayOutput) ToVirtualServiceSpecHttpFaultDelayPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpFaultDelay) *VirtualServiceSpecHttpFaultDelay {
		return &v
	}).(VirtualServiceSpecHttpFaultDelayPtrOutput)
}

func (o VirtualServiceSpecHttpFaultDelayOutput) ExponentialDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFaultDelay) *string { return v.ExponentialDelay }).(pulumi.StringPtrOutput)
}

// Add a fixed delay before forwarding the request.
func (o VirtualServiceSpecHttpFaultDelayOutput) FixedDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFaultDelay) *string { return v.FixedDelay }).(pulumi.StringPtrOutput)
}

// Percentage of requests on which the delay will be injected (0-100).
func (o VirtualServiceSpecHttpFaultDelayOutput) Percent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFaultDelay) *int { return v.Percent }).(pulumi.IntPtrOutput)
}

func (o VirtualServiceSpecHttpFaultDelayOutput) Percentage() VirtualServiceSpecHttpFaultDelayPercentagePtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFaultDelay) *VirtualServiceSpecHttpFaultDelayPercentage {
		return v.Percentage
	}).(VirtualServiceSpecHttpFaultDelayPercentagePtrOutput)
}

type VirtualServiceSpecHttpFaultDelayPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpFaultDelayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpFaultDelay)(nil)).Elem()
}

func (o VirtualServiceSpecHttpFaultDelayPtrOutput) ToVirtualServiceSpecHttpFaultDelayPtrOutput() VirtualServiceSpecHttpFaultDelayPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultDelayPtrOutput) ToVirtualServiceSpecHttpFaultDelayPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultDelayPtrOutput) Elem() VirtualServiceSpecHttpFaultDelayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultDelay) VirtualServiceSpecHttpFaultDelay {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpFaultDelay
		return ret
	}).(VirtualServiceSpecHttpFaultDelayOutput)
}

func (o VirtualServiceSpecHttpFaultDelayPtrOutput) ExponentialDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultDelay) *string {
		if v == nil {
			return nil
		}
		return v.ExponentialDelay
	}).(pulumi.StringPtrOutput)
}

// Add a fixed delay before forwarding the request.
func (o VirtualServiceSpecHttpFaultDelayPtrOutput) FixedDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultDelay) *string {
		if v == nil {
			return nil
		}
		return v.FixedDelay
	}).(pulumi.StringPtrOutput)
}

// Percentage of requests on which the delay will be injected (0-100).
func (o VirtualServiceSpecHttpFaultDelayPtrOutput) Percent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultDelay) *int {
		if v == nil {
			return nil
		}
		return v.Percent
	}).(pulumi.IntPtrOutput)
}

func (o VirtualServiceSpecHttpFaultDelayPtrOutput) Percentage() VirtualServiceSpecHttpFaultDelayPercentagePtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultDelay) *VirtualServiceSpecHttpFaultDelayPercentage {
		if v == nil {
			return nil
		}
		return v.Percentage
	}).(VirtualServiceSpecHttpFaultDelayPercentagePtrOutput)
}

// Delay requests before forwarding, emulating various failures such as network issues, overloaded upstream service, etc.
type VirtualServiceSpecHttpFaultDelayPatch struct {
	ExponentialDelay *string `pulumi:"exponentialDelay"`
	// Add a fixed delay before forwarding the request.
	FixedDelay *string `pulumi:"fixedDelay"`
	// Percentage of requests on which the delay will be injected (0-100).
	Percent    *int                                             `pulumi:"percent"`
	Percentage *VirtualServiceSpecHttpFaultDelayPercentagePatch `pulumi:"percentage"`
}

// VirtualServiceSpecHttpFaultDelayPatchInput is an input type that accepts VirtualServiceSpecHttpFaultDelayPatchArgs and VirtualServiceSpecHttpFaultDelayPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpFaultDelayPatchInput` via:
//
//	VirtualServiceSpecHttpFaultDelayPatchArgs{...}
type VirtualServiceSpecHttpFaultDelayPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpFaultDelayPatchOutput() VirtualServiceSpecHttpFaultDelayPatchOutput
	ToVirtualServiceSpecHttpFaultDelayPatchOutputWithContext(context.Context) VirtualServiceSpecHttpFaultDelayPatchOutput
}

// Delay requests before forwarding, emulating various failures such as network issues, overloaded upstream service, etc.
type VirtualServiceSpecHttpFaultDelayPatchArgs struct {
	ExponentialDelay pulumi.StringPtrInput `pulumi:"exponentialDelay"`
	// Add a fixed delay before forwarding the request.
	FixedDelay pulumi.StringPtrInput `pulumi:"fixedDelay"`
	// Percentage of requests on which the delay will be injected (0-100).
	Percent    pulumi.IntPtrInput                                      `pulumi:"percent"`
	Percentage VirtualServiceSpecHttpFaultDelayPercentagePatchPtrInput `pulumi:"percentage"`
}

func (VirtualServiceSpecHttpFaultDelayPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpFaultDelayPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpFaultDelayPatchArgs) ToVirtualServiceSpecHttpFaultDelayPatchOutput() VirtualServiceSpecHttpFaultDelayPatchOutput {
	return i.ToVirtualServiceSpecHttpFaultDelayPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpFaultDelayPatchArgs) ToVirtualServiceSpecHttpFaultDelayPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultDelayPatchOutput)
}

func (i VirtualServiceSpecHttpFaultDelayPatchArgs) ToVirtualServiceSpecHttpFaultDelayPatchPtrOutput() VirtualServiceSpecHttpFaultDelayPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpFaultDelayPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpFaultDelayPatchArgs) ToVirtualServiceSpecHttpFaultDelayPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultDelayPatchOutput).ToVirtualServiceSpecHttpFaultDelayPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpFaultDelayPatchPtrInput is an input type that accepts VirtualServiceSpecHttpFaultDelayPatchArgs, VirtualServiceSpecHttpFaultDelayPatchPtr and VirtualServiceSpecHttpFaultDelayPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpFaultDelayPatchPtrInput` via:
//
//	        VirtualServiceSpecHttpFaultDelayPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpFaultDelayPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpFaultDelayPatchPtrOutput() VirtualServiceSpecHttpFaultDelayPatchPtrOutput
	ToVirtualServiceSpecHttpFaultDelayPatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpFaultDelayPatchPtrOutput
}

type virtualServiceSpecHttpFaultDelayPatchPtrType VirtualServiceSpecHttpFaultDelayPatchArgs

func VirtualServiceSpecHttpFaultDelayPatchPtr(v *VirtualServiceSpecHttpFaultDelayPatchArgs) VirtualServiceSpecHttpFaultDelayPatchPtrInput {
	return (*virtualServiceSpecHttpFaultDelayPatchPtrType)(v)
}

func (*virtualServiceSpecHttpFaultDelayPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpFaultDelayPatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpFaultDelayPatchPtrType) ToVirtualServiceSpecHttpFaultDelayPatchPtrOutput() VirtualServiceSpecHttpFaultDelayPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpFaultDelayPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpFaultDelayPatchPtrType) ToVirtualServiceSpecHttpFaultDelayPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultDelayPatchPtrOutput)
}

// Delay requests before forwarding, emulating various failures such as network issues, overloaded upstream service, etc.
type VirtualServiceSpecHttpFaultDelayPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpFaultDelayPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpFaultDelayPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpFaultDelayPatchOutput) ToVirtualServiceSpecHttpFaultDelayPatchOutput() VirtualServiceSpecHttpFaultDelayPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultDelayPatchOutput) ToVirtualServiceSpecHttpFaultDelayPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultDelayPatchOutput) ToVirtualServiceSpecHttpFaultDelayPatchPtrOutput() VirtualServiceSpecHttpFaultDelayPatchPtrOutput {
	return o.ToVirtualServiceSpecHttpFaultDelayPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpFaultDelayPatchOutput) ToVirtualServiceSpecHttpFaultDelayPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpFaultDelayPatch) *VirtualServiceSpecHttpFaultDelayPatch {
		return &v
	}).(VirtualServiceSpecHttpFaultDelayPatchPtrOutput)
}

func (o VirtualServiceSpecHttpFaultDelayPatchOutput) ExponentialDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFaultDelayPatch) *string { return v.ExponentialDelay }).(pulumi.StringPtrOutput)
}

// Add a fixed delay before forwarding the request.
func (o VirtualServiceSpecHttpFaultDelayPatchOutput) FixedDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFaultDelayPatch) *string { return v.FixedDelay }).(pulumi.StringPtrOutput)
}

// Percentage of requests on which the delay will be injected (0-100).
func (o VirtualServiceSpecHttpFaultDelayPatchOutput) Percent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFaultDelayPatch) *int { return v.Percent }).(pulumi.IntPtrOutput)
}

func (o VirtualServiceSpecHttpFaultDelayPatchOutput) Percentage() VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFaultDelayPatch) *VirtualServiceSpecHttpFaultDelayPercentagePatch {
		return v.Percentage
	}).(VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput)
}

type VirtualServiceSpecHttpFaultDelayPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpFaultDelayPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpFaultDelayPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpFaultDelayPatchPtrOutput) ToVirtualServiceSpecHttpFaultDelayPatchPtrOutput() VirtualServiceSpecHttpFaultDelayPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultDelayPatchPtrOutput) ToVirtualServiceSpecHttpFaultDelayPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultDelayPatchPtrOutput) Elem() VirtualServiceSpecHttpFaultDelayPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultDelayPatch) VirtualServiceSpecHttpFaultDelayPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpFaultDelayPatch
		return ret
	}).(VirtualServiceSpecHttpFaultDelayPatchOutput)
}

func (o VirtualServiceSpecHttpFaultDelayPatchPtrOutput) ExponentialDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultDelayPatch) *string {
		if v == nil {
			return nil
		}
		return v.ExponentialDelay
	}).(pulumi.StringPtrOutput)
}

// Add a fixed delay before forwarding the request.
func (o VirtualServiceSpecHttpFaultDelayPatchPtrOutput) FixedDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultDelayPatch) *string {
		if v == nil {
			return nil
		}
		return v.FixedDelay
	}).(pulumi.StringPtrOutput)
}

// Percentage of requests on which the delay will be injected (0-100).
func (o VirtualServiceSpecHttpFaultDelayPatchPtrOutput) Percent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultDelayPatch) *int {
		if v == nil {
			return nil
		}
		return v.Percent
	}).(pulumi.IntPtrOutput)
}

func (o VirtualServiceSpecHttpFaultDelayPatchPtrOutput) Percentage() VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultDelayPatch) *VirtualServiceSpecHttpFaultDelayPercentagePatch {
		if v == nil {
			return nil
		}
		return v.Percentage
	}).(VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput)
}

// Percentage of requests on which the delay will be injected.
type VirtualServiceSpecHttpFaultDelayPercentage struct {
	Value *float64 `pulumi:"value"`
}

// VirtualServiceSpecHttpFaultDelayPercentageInput is an input type that accepts VirtualServiceSpecHttpFaultDelayPercentageArgs and VirtualServiceSpecHttpFaultDelayPercentageOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpFaultDelayPercentageInput` via:
//
//	VirtualServiceSpecHttpFaultDelayPercentageArgs{...}
type VirtualServiceSpecHttpFaultDelayPercentageInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpFaultDelayPercentageOutput() VirtualServiceSpecHttpFaultDelayPercentageOutput
	ToVirtualServiceSpecHttpFaultDelayPercentageOutputWithContext(context.Context) VirtualServiceSpecHttpFaultDelayPercentageOutput
}

// Percentage of requests on which the delay will be injected.
type VirtualServiceSpecHttpFaultDelayPercentageArgs struct {
	Value pulumi.Float64PtrInput `pulumi:"value"`
}

func (VirtualServiceSpecHttpFaultDelayPercentageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpFaultDelayPercentage)(nil)).Elem()
}

func (i VirtualServiceSpecHttpFaultDelayPercentageArgs) ToVirtualServiceSpecHttpFaultDelayPercentageOutput() VirtualServiceSpecHttpFaultDelayPercentageOutput {
	return i.ToVirtualServiceSpecHttpFaultDelayPercentageOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpFaultDelayPercentageArgs) ToVirtualServiceSpecHttpFaultDelayPercentageOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayPercentageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultDelayPercentageOutput)
}

func (i VirtualServiceSpecHttpFaultDelayPercentageArgs) ToVirtualServiceSpecHttpFaultDelayPercentagePtrOutput() VirtualServiceSpecHttpFaultDelayPercentagePtrOutput {
	return i.ToVirtualServiceSpecHttpFaultDelayPercentagePtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpFaultDelayPercentageArgs) ToVirtualServiceSpecHttpFaultDelayPercentagePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayPercentagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultDelayPercentageOutput).ToVirtualServiceSpecHttpFaultDelayPercentagePtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpFaultDelayPercentagePtrInput is an input type that accepts VirtualServiceSpecHttpFaultDelayPercentageArgs, VirtualServiceSpecHttpFaultDelayPercentagePtr and VirtualServiceSpecHttpFaultDelayPercentagePtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpFaultDelayPercentagePtrInput` via:
//
//	        VirtualServiceSpecHttpFaultDelayPercentageArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpFaultDelayPercentagePtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpFaultDelayPercentagePtrOutput() VirtualServiceSpecHttpFaultDelayPercentagePtrOutput
	ToVirtualServiceSpecHttpFaultDelayPercentagePtrOutputWithContext(context.Context) VirtualServiceSpecHttpFaultDelayPercentagePtrOutput
}

type virtualServiceSpecHttpFaultDelayPercentagePtrType VirtualServiceSpecHttpFaultDelayPercentageArgs

func VirtualServiceSpecHttpFaultDelayPercentagePtr(v *VirtualServiceSpecHttpFaultDelayPercentageArgs) VirtualServiceSpecHttpFaultDelayPercentagePtrInput {
	return (*virtualServiceSpecHttpFaultDelayPercentagePtrType)(v)
}

func (*virtualServiceSpecHttpFaultDelayPercentagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpFaultDelayPercentage)(nil)).Elem()
}

func (i *virtualServiceSpecHttpFaultDelayPercentagePtrType) ToVirtualServiceSpecHttpFaultDelayPercentagePtrOutput() VirtualServiceSpecHttpFaultDelayPercentagePtrOutput {
	return i.ToVirtualServiceSpecHttpFaultDelayPercentagePtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpFaultDelayPercentagePtrType) ToVirtualServiceSpecHttpFaultDelayPercentagePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayPercentagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultDelayPercentagePtrOutput)
}

// Percentage of requests on which the delay will be injected.
type VirtualServiceSpecHttpFaultDelayPercentageOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpFaultDelayPercentageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpFaultDelayPercentage)(nil)).Elem()
}

func (o VirtualServiceSpecHttpFaultDelayPercentageOutput) ToVirtualServiceSpecHttpFaultDelayPercentageOutput() VirtualServiceSpecHttpFaultDelayPercentageOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultDelayPercentageOutput) ToVirtualServiceSpecHttpFaultDelayPercentageOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayPercentageOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultDelayPercentageOutput) ToVirtualServiceSpecHttpFaultDelayPercentagePtrOutput() VirtualServiceSpecHttpFaultDelayPercentagePtrOutput {
	return o.ToVirtualServiceSpecHttpFaultDelayPercentagePtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpFaultDelayPercentageOutput) ToVirtualServiceSpecHttpFaultDelayPercentagePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayPercentagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpFaultDelayPercentage) *VirtualServiceSpecHttpFaultDelayPercentage {
		return &v
	}).(VirtualServiceSpecHttpFaultDelayPercentagePtrOutput)
}

func (o VirtualServiceSpecHttpFaultDelayPercentageOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFaultDelayPercentage) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type VirtualServiceSpecHttpFaultDelayPercentagePtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpFaultDelayPercentagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpFaultDelayPercentage)(nil)).Elem()
}

func (o VirtualServiceSpecHttpFaultDelayPercentagePtrOutput) ToVirtualServiceSpecHttpFaultDelayPercentagePtrOutput() VirtualServiceSpecHttpFaultDelayPercentagePtrOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultDelayPercentagePtrOutput) ToVirtualServiceSpecHttpFaultDelayPercentagePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayPercentagePtrOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultDelayPercentagePtrOutput) Elem() VirtualServiceSpecHttpFaultDelayPercentageOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultDelayPercentage) VirtualServiceSpecHttpFaultDelayPercentage {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpFaultDelayPercentage
		return ret
	}).(VirtualServiceSpecHttpFaultDelayPercentageOutput)
}

func (o VirtualServiceSpecHttpFaultDelayPercentagePtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultDelayPercentage) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

// Percentage of requests on which the delay will be injected.
type VirtualServiceSpecHttpFaultDelayPercentagePatch struct {
	Value *float64 `pulumi:"value"`
}

// VirtualServiceSpecHttpFaultDelayPercentagePatchInput is an input type that accepts VirtualServiceSpecHttpFaultDelayPercentagePatchArgs and VirtualServiceSpecHttpFaultDelayPercentagePatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpFaultDelayPercentagePatchInput` via:
//
//	VirtualServiceSpecHttpFaultDelayPercentagePatchArgs{...}
type VirtualServiceSpecHttpFaultDelayPercentagePatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpFaultDelayPercentagePatchOutput() VirtualServiceSpecHttpFaultDelayPercentagePatchOutput
	ToVirtualServiceSpecHttpFaultDelayPercentagePatchOutputWithContext(context.Context) VirtualServiceSpecHttpFaultDelayPercentagePatchOutput
}

// Percentage of requests on which the delay will be injected.
type VirtualServiceSpecHttpFaultDelayPercentagePatchArgs struct {
	Value pulumi.Float64PtrInput `pulumi:"value"`
}

func (VirtualServiceSpecHttpFaultDelayPercentagePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpFaultDelayPercentagePatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpFaultDelayPercentagePatchArgs) ToVirtualServiceSpecHttpFaultDelayPercentagePatchOutput() VirtualServiceSpecHttpFaultDelayPercentagePatchOutput {
	return i.ToVirtualServiceSpecHttpFaultDelayPercentagePatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpFaultDelayPercentagePatchArgs) ToVirtualServiceSpecHttpFaultDelayPercentagePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayPercentagePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultDelayPercentagePatchOutput)
}

func (i VirtualServiceSpecHttpFaultDelayPercentagePatchArgs) ToVirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput() VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput {
	return i.ToVirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpFaultDelayPercentagePatchArgs) ToVirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultDelayPercentagePatchOutput).ToVirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpFaultDelayPercentagePatchPtrInput is an input type that accepts VirtualServiceSpecHttpFaultDelayPercentagePatchArgs, VirtualServiceSpecHttpFaultDelayPercentagePatchPtr and VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpFaultDelayPercentagePatchPtrInput` via:
//
//	        VirtualServiceSpecHttpFaultDelayPercentagePatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpFaultDelayPercentagePatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput() VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput
	ToVirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput
}

type virtualServiceSpecHttpFaultDelayPercentagePatchPtrType VirtualServiceSpecHttpFaultDelayPercentagePatchArgs

func VirtualServiceSpecHttpFaultDelayPercentagePatchPtr(v *VirtualServiceSpecHttpFaultDelayPercentagePatchArgs) VirtualServiceSpecHttpFaultDelayPercentagePatchPtrInput {
	return (*virtualServiceSpecHttpFaultDelayPercentagePatchPtrType)(v)
}

func (*virtualServiceSpecHttpFaultDelayPercentagePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpFaultDelayPercentagePatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpFaultDelayPercentagePatchPtrType) ToVirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput() VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput {
	return i.ToVirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpFaultDelayPercentagePatchPtrType) ToVirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput)
}

// Percentage of requests on which the delay will be injected.
type VirtualServiceSpecHttpFaultDelayPercentagePatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpFaultDelayPercentagePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpFaultDelayPercentagePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpFaultDelayPercentagePatchOutput) ToVirtualServiceSpecHttpFaultDelayPercentagePatchOutput() VirtualServiceSpecHttpFaultDelayPercentagePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultDelayPercentagePatchOutput) ToVirtualServiceSpecHttpFaultDelayPercentagePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayPercentagePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultDelayPercentagePatchOutput) ToVirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput() VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput {
	return o.ToVirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpFaultDelayPercentagePatchOutput) ToVirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpFaultDelayPercentagePatch) *VirtualServiceSpecHttpFaultDelayPercentagePatch {
		return &v
	}).(VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput)
}

func (o VirtualServiceSpecHttpFaultDelayPercentagePatchOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFaultDelayPercentagePatch) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpFaultDelayPercentagePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput) ToVirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput() VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput) ToVirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput) Elem() VirtualServiceSpecHttpFaultDelayPercentagePatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultDelayPercentagePatch) VirtualServiceSpecHttpFaultDelayPercentagePatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpFaultDelayPercentagePatch
		return ret
	}).(VirtualServiceSpecHttpFaultDelayPercentagePatchOutput)
}

func (o VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultDelayPercentagePatch) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

// Fault injection policy to apply on HTTP traffic at the client side.
type VirtualServiceSpecHttpFaultPatch struct {
	Abort *VirtualServiceSpecHttpFaultAbortPatch `pulumi:"abort"`
	Delay *VirtualServiceSpecHttpFaultDelayPatch `pulumi:"delay"`
}

// VirtualServiceSpecHttpFaultPatchInput is an input type that accepts VirtualServiceSpecHttpFaultPatchArgs and VirtualServiceSpecHttpFaultPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpFaultPatchInput` via:
//
//	VirtualServiceSpecHttpFaultPatchArgs{...}
type VirtualServiceSpecHttpFaultPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpFaultPatchOutput() VirtualServiceSpecHttpFaultPatchOutput
	ToVirtualServiceSpecHttpFaultPatchOutputWithContext(context.Context) VirtualServiceSpecHttpFaultPatchOutput
}

// Fault injection policy to apply on HTTP traffic at the client side.
type VirtualServiceSpecHttpFaultPatchArgs struct {
	Abort VirtualServiceSpecHttpFaultAbortPatchPtrInput `pulumi:"abort"`
	Delay VirtualServiceSpecHttpFaultDelayPatchPtrInput `pulumi:"delay"`
}

func (VirtualServiceSpecHttpFaultPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpFaultPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpFaultPatchArgs) ToVirtualServiceSpecHttpFaultPatchOutput() VirtualServiceSpecHttpFaultPatchOutput {
	return i.ToVirtualServiceSpecHttpFaultPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpFaultPatchArgs) ToVirtualServiceSpecHttpFaultPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultPatchOutput)
}

func (i VirtualServiceSpecHttpFaultPatchArgs) ToVirtualServiceSpecHttpFaultPatchPtrOutput() VirtualServiceSpecHttpFaultPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpFaultPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpFaultPatchArgs) ToVirtualServiceSpecHttpFaultPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultPatchOutput).ToVirtualServiceSpecHttpFaultPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpFaultPatchPtrInput is an input type that accepts VirtualServiceSpecHttpFaultPatchArgs, VirtualServiceSpecHttpFaultPatchPtr and VirtualServiceSpecHttpFaultPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpFaultPatchPtrInput` via:
//
//	        VirtualServiceSpecHttpFaultPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpFaultPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpFaultPatchPtrOutput() VirtualServiceSpecHttpFaultPatchPtrOutput
	ToVirtualServiceSpecHttpFaultPatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpFaultPatchPtrOutput
}

type virtualServiceSpecHttpFaultPatchPtrType VirtualServiceSpecHttpFaultPatchArgs

func VirtualServiceSpecHttpFaultPatchPtr(v *VirtualServiceSpecHttpFaultPatchArgs) VirtualServiceSpecHttpFaultPatchPtrInput {
	return (*virtualServiceSpecHttpFaultPatchPtrType)(v)
}

func (*virtualServiceSpecHttpFaultPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpFaultPatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpFaultPatchPtrType) ToVirtualServiceSpecHttpFaultPatchPtrOutput() VirtualServiceSpecHttpFaultPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpFaultPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpFaultPatchPtrType) ToVirtualServiceSpecHttpFaultPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpFaultPatchPtrOutput)
}

// Fault injection policy to apply on HTTP traffic at the client side.
type VirtualServiceSpecHttpFaultPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpFaultPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpFaultPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpFaultPatchOutput) ToVirtualServiceSpecHttpFaultPatchOutput() VirtualServiceSpecHttpFaultPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultPatchOutput) ToVirtualServiceSpecHttpFaultPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultPatchOutput) ToVirtualServiceSpecHttpFaultPatchPtrOutput() VirtualServiceSpecHttpFaultPatchPtrOutput {
	return o.ToVirtualServiceSpecHttpFaultPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpFaultPatchOutput) ToVirtualServiceSpecHttpFaultPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpFaultPatch) *VirtualServiceSpecHttpFaultPatch {
		return &v
	}).(VirtualServiceSpecHttpFaultPatchPtrOutput)
}

func (o VirtualServiceSpecHttpFaultPatchOutput) Abort() VirtualServiceSpecHttpFaultAbortPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFaultPatch) *VirtualServiceSpecHttpFaultAbortPatch { return v.Abort }).(VirtualServiceSpecHttpFaultAbortPatchPtrOutput)
}

func (o VirtualServiceSpecHttpFaultPatchOutput) Delay() VirtualServiceSpecHttpFaultDelayPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpFaultPatch) *VirtualServiceSpecHttpFaultDelayPatch { return v.Delay }).(VirtualServiceSpecHttpFaultDelayPatchPtrOutput)
}

type VirtualServiceSpecHttpFaultPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpFaultPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpFaultPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpFaultPatchPtrOutput) ToVirtualServiceSpecHttpFaultPatchPtrOutput() VirtualServiceSpecHttpFaultPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultPatchPtrOutput) ToVirtualServiceSpecHttpFaultPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpFaultPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpFaultPatchPtrOutput) Elem() VirtualServiceSpecHttpFaultPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultPatch) VirtualServiceSpecHttpFaultPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpFaultPatch
		return ret
	}).(VirtualServiceSpecHttpFaultPatchOutput)
}

func (o VirtualServiceSpecHttpFaultPatchPtrOutput) Abort() VirtualServiceSpecHttpFaultAbortPatchPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultPatch) *VirtualServiceSpecHttpFaultAbortPatch {
		if v == nil {
			return nil
		}
		return v.Abort
	}).(VirtualServiceSpecHttpFaultAbortPatchPtrOutput)
}

func (o VirtualServiceSpecHttpFaultPatchPtrOutput) Delay() VirtualServiceSpecHttpFaultDelayPatchPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpFaultPatch) *VirtualServiceSpecHttpFaultDelayPatch {
		if v == nil {
			return nil
		}
		return v.Delay
	}).(VirtualServiceSpecHttpFaultDelayPatchPtrOutput)
}

type VirtualServiceSpecHttpHeaders struct {
	Request  *VirtualServiceSpecHttpHeadersRequest  `pulumi:"request"`
	Response *VirtualServiceSpecHttpHeadersResponse `pulumi:"response"`
}

// VirtualServiceSpecHttpHeadersInput is an input type that accepts VirtualServiceSpecHttpHeadersArgs and VirtualServiceSpecHttpHeadersOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpHeadersInput` via:
//
//	VirtualServiceSpecHttpHeadersArgs{...}
type VirtualServiceSpecHttpHeadersInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpHeadersOutput() VirtualServiceSpecHttpHeadersOutput
	ToVirtualServiceSpecHttpHeadersOutputWithContext(context.Context) VirtualServiceSpecHttpHeadersOutput
}

type VirtualServiceSpecHttpHeadersArgs struct {
	Request  VirtualServiceSpecHttpHeadersRequestPtrInput  `pulumi:"request"`
	Response VirtualServiceSpecHttpHeadersResponsePtrInput `pulumi:"response"`
}

func (VirtualServiceSpecHttpHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpHeaders)(nil)).Elem()
}

func (i VirtualServiceSpecHttpHeadersArgs) ToVirtualServiceSpecHttpHeadersOutput() VirtualServiceSpecHttpHeadersOutput {
	return i.ToVirtualServiceSpecHttpHeadersOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpHeadersArgs) ToVirtualServiceSpecHttpHeadersOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpHeadersOutput)
}

func (i VirtualServiceSpecHttpHeadersArgs) ToVirtualServiceSpecHttpHeadersPtrOutput() VirtualServiceSpecHttpHeadersPtrOutput {
	return i.ToVirtualServiceSpecHttpHeadersPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpHeadersArgs) ToVirtualServiceSpecHttpHeadersPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpHeadersOutput).ToVirtualServiceSpecHttpHeadersPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpHeadersPtrInput is an input type that accepts VirtualServiceSpecHttpHeadersArgs, VirtualServiceSpecHttpHeadersPtr and VirtualServiceSpecHttpHeadersPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpHeadersPtrInput` via:
//
//	        VirtualServiceSpecHttpHeadersArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpHeadersPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpHeadersPtrOutput() VirtualServiceSpecHttpHeadersPtrOutput
	ToVirtualServiceSpecHttpHeadersPtrOutputWithContext(context.Context) VirtualServiceSpecHttpHeadersPtrOutput
}

type virtualServiceSpecHttpHeadersPtrType VirtualServiceSpecHttpHeadersArgs

func VirtualServiceSpecHttpHeadersPtr(v *VirtualServiceSpecHttpHeadersArgs) VirtualServiceSpecHttpHeadersPtrInput {
	return (*virtualServiceSpecHttpHeadersPtrType)(v)
}

func (*virtualServiceSpecHttpHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpHeaders)(nil)).Elem()
}

func (i *virtualServiceSpecHttpHeadersPtrType) ToVirtualServiceSpecHttpHeadersPtrOutput() VirtualServiceSpecHttpHeadersPtrOutput {
	return i.ToVirtualServiceSpecHttpHeadersPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpHeadersPtrType) ToVirtualServiceSpecHttpHeadersPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpHeadersPtrOutput)
}

type VirtualServiceSpecHttpHeadersOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpHeaders)(nil)).Elem()
}

func (o VirtualServiceSpecHttpHeadersOutput) ToVirtualServiceSpecHttpHeadersOutput() VirtualServiceSpecHttpHeadersOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersOutput) ToVirtualServiceSpecHttpHeadersOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersOutput) ToVirtualServiceSpecHttpHeadersPtrOutput() VirtualServiceSpecHttpHeadersPtrOutput {
	return o.ToVirtualServiceSpecHttpHeadersPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpHeadersOutput) ToVirtualServiceSpecHttpHeadersPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpHeaders) *VirtualServiceSpecHttpHeaders {
		return &v
	}).(VirtualServiceSpecHttpHeadersPtrOutput)
}

func (o VirtualServiceSpecHttpHeadersOutput) Request() VirtualServiceSpecHttpHeadersRequestPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpHeaders) *VirtualServiceSpecHttpHeadersRequest { return v.Request }).(VirtualServiceSpecHttpHeadersRequestPtrOutput)
}

func (o VirtualServiceSpecHttpHeadersOutput) Response() VirtualServiceSpecHttpHeadersResponsePtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpHeaders) *VirtualServiceSpecHttpHeadersResponse { return v.Response }).(VirtualServiceSpecHttpHeadersResponsePtrOutput)
}

type VirtualServiceSpecHttpHeadersPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpHeaders)(nil)).Elem()
}

func (o VirtualServiceSpecHttpHeadersPtrOutput) ToVirtualServiceSpecHttpHeadersPtrOutput() VirtualServiceSpecHttpHeadersPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersPtrOutput) ToVirtualServiceSpecHttpHeadersPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersPtrOutput) Elem() VirtualServiceSpecHttpHeadersOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpHeaders) VirtualServiceSpecHttpHeaders {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpHeaders
		return ret
	}).(VirtualServiceSpecHttpHeadersOutput)
}

func (o VirtualServiceSpecHttpHeadersPtrOutput) Request() VirtualServiceSpecHttpHeadersRequestPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpHeaders) *VirtualServiceSpecHttpHeadersRequest {
		if v == nil {
			return nil
		}
		return v.Request
	}).(VirtualServiceSpecHttpHeadersRequestPtrOutput)
}

func (o VirtualServiceSpecHttpHeadersPtrOutput) Response() VirtualServiceSpecHttpHeadersResponsePtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpHeaders) *VirtualServiceSpecHttpHeadersResponse {
		if v == nil {
			return nil
		}
		return v.Response
	}).(VirtualServiceSpecHttpHeadersResponsePtrOutput)
}

type VirtualServiceSpecHttpHeadersPatch struct {
	Request  *VirtualServiceSpecHttpHeadersRequestPatch  `pulumi:"request"`
	Response *VirtualServiceSpecHttpHeadersResponsePatch `pulumi:"response"`
}

// VirtualServiceSpecHttpHeadersPatchInput is an input type that accepts VirtualServiceSpecHttpHeadersPatchArgs and VirtualServiceSpecHttpHeadersPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpHeadersPatchInput` via:
//
//	VirtualServiceSpecHttpHeadersPatchArgs{...}
type VirtualServiceSpecHttpHeadersPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpHeadersPatchOutput() VirtualServiceSpecHttpHeadersPatchOutput
	ToVirtualServiceSpecHttpHeadersPatchOutputWithContext(context.Context) VirtualServiceSpecHttpHeadersPatchOutput
}

type VirtualServiceSpecHttpHeadersPatchArgs struct {
	Request  VirtualServiceSpecHttpHeadersRequestPatchPtrInput  `pulumi:"request"`
	Response VirtualServiceSpecHttpHeadersResponsePatchPtrInput `pulumi:"response"`
}

func (VirtualServiceSpecHttpHeadersPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpHeadersPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpHeadersPatchArgs) ToVirtualServiceSpecHttpHeadersPatchOutput() VirtualServiceSpecHttpHeadersPatchOutput {
	return i.ToVirtualServiceSpecHttpHeadersPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpHeadersPatchArgs) ToVirtualServiceSpecHttpHeadersPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpHeadersPatchOutput)
}

func (i VirtualServiceSpecHttpHeadersPatchArgs) ToVirtualServiceSpecHttpHeadersPatchPtrOutput() VirtualServiceSpecHttpHeadersPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpHeadersPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpHeadersPatchArgs) ToVirtualServiceSpecHttpHeadersPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpHeadersPatchOutput).ToVirtualServiceSpecHttpHeadersPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpHeadersPatchPtrInput is an input type that accepts VirtualServiceSpecHttpHeadersPatchArgs, VirtualServiceSpecHttpHeadersPatchPtr and VirtualServiceSpecHttpHeadersPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpHeadersPatchPtrInput` via:
//
//	        VirtualServiceSpecHttpHeadersPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpHeadersPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpHeadersPatchPtrOutput() VirtualServiceSpecHttpHeadersPatchPtrOutput
	ToVirtualServiceSpecHttpHeadersPatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpHeadersPatchPtrOutput
}

type virtualServiceSpecHttpHeadersPatchPtrType VirtualServiceSpecHttpHeadersPatchArgs

func VirtualServiceSpecHttpHeadersPatchPtr(v *VirtualServiceSpecHttpHeadersPatchArgs) VirtualServiceSpecHttpHeadersPatchPtrInput {
	return (*virtualServiceSpecHttpHeadersPatchPtrType)(v)
}

func (*virtualServiceSpecHttpHeadersPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpHeadersPatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpHeadersPatchPtrType) ToVirtualServiceSpecHttpHeadersPatchPtrOutput() VirtualServiceSpecHttpHeadersPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpHeadersPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpHeadersPatchPtrType) ToVirtualServiceSpecHttpHeadersPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpHeadersPatchPtrOutput)
}

type VirtualServiceSpecHttpHeadersPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpHeadersPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpHeadersPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpHeadersPatchOutput) ToVirtualServiceSpecHttpHeadersPatchOutput() VirtualServiceSpecHttpHeadersPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersPatchOutput) ToVirtualServiceSpecHttpHeadersPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersPatchOutput) ToVirtualServiceSpecHttpHeadersPatchPtrOutput() VirtualServiceSpecHttpHeadersPatchPtrOutput {
	return o.ToVirtualServiceSpecHttpHeadersPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpHeadersPatchOutput) ToVirtualServiceSpecHttpHeadersPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpHeadersPatch) *VirtualServiceSpecHttpHeadersPatch {
		return &v
	}).(VirtualServiceSpecHttpHeadersPatchPtrOutput)
}

func (o VirtualServiceSpecHttpHeadersPatchOutput) Request() VirtualServiceSpecHttpHeadersRequestPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpHeadersPatch) *VirtualServiceSpecHttpHeadersRequestPatch {
		return v.Request
	}).(VirtualServiceSpecHttpHeadersRequestPatchPtrOutput)
}

func (o VirtualServiceSpecHttpHeadersPatchOutput) Response() VirtualServiceSpecHttpHeadersResponsePatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpHeadersPatch) *VirtualServiceSpecHttpHeadersResponsePatch {
		return v.Response
	}).(VirtualServiceSpecHttpHeadersResponsePatchPtrOutput)
}

type VirtualServiceSpecHttpHeadersPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpHeadersPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpHeadersPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpHeadersPatchPtrOutput) ToVirtualServiceSpecHttpHeadersPatchPtrOutput() VirtualServiceSpecHttpHeadersPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersPatchPtrOutput) ToVirtualServiceSpecHttpHeadersPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersPatchPtrOutput) Elem() VirtualServiceSpecHttpHeadersPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpHeadersPatch) VirtualServiceSpecHttpHeadersPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpHeadersPatch
		return ret
	}).(VirtualServiceSpecHttpHeadersPatchOutput)
}

func (o VirtualServiceSpecHttpHeadersPatchPtrOutput) Request() VirtualServiceSpecHttpHeadersRequestPatchPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpHeadersPatch) *VirtualServiceSpecHttpHeadersRequestPatch {
		if v == nil {
			return nil
		}
		return v.Request
	}).(VirtualServiceSpecHttpHeadersRequestPatchPtrOutput)
}

func (o VirtualServiceSpecHttpHeadersPatchPtrOutput) Response() VirtualServiceSpecHttpHeadersResponsePatchPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpHeadersPatch) *VirtualServiceSpecHttpHeadersResponsePatch {
		if v == nil {
			return nil
		}
		return v.Response
	}).(VirtualServiceSpecHttpHeadersResponsePatchPtrOutput)
}

type VirtualServiceSpecHttpHeadersRequest struct {
	Add    map[string]string `pulumi:"add"`
	Remove []string          `pulumi:"remove"`
	Set    map[string]string `pulumi:"set"`
}

// VirtualServiceSpecHttpHeadersRequestInput is an input type that accepts VirtualServiceSpecHttpHeadersRequestArgs and VirtualServiceSpecHttpHeadersRequestOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpHeadersRequestInput` via:
//
//	VirtualServiceSpecHttpHeadersRequestArgs{...}
type VirtualServiceSpecHttpHeadersRequestInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpHeadersRequestOutput() VirtualServiceSpecHttpHeadersRequestOutput
	ToVirtualServiceSpecHttpHeadersRequestOutputWithContext(context.Context) VirtualServiceSpecHttpHeadersRequestOutput
}

type VirtualServiceSpecHttpHeadersRequestArgs struct {
	Add    pulumi.StringMapInput   `pulumi:"add"`
	Remove pulumi.StringArrayInput `pulumi:"remove"`
	Set    pulumi.StringMapInput   `pulumi:"set"`
}

func (VirtualServiceSpecHttpHeadersRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpHeadersRequest)(nil)).Elem()
}

func (i VirtualServiceSpecHttpHeadersRequestArgs) ToVirtualServiceSpecHttpHeadersRequestOutput() VirtualServiceSpecHttpHeadersRequestOutput {
	return i.ToVirtualServiceSpecHttpHeadersRequestOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpHeadersRequestArgs) ToVirtualServiceSpecHttpHeadersRequestOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpHeadersRequestOutput)
}

func (i VirtualServiceSpecHttpHeadersRequestArgs) ToVirtualServiceSpecHttpHeadersRequestPtrOutput() VirtualServiceSpecHttpHeadersRequestPtrOutput {
	return i.ToVirtualServiceSpecHttpHeadersRequestPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpHeadersRequestArgs) ToVirtualServiceSpecHttpHeadersRequestPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpHeadersRequestOutput).ToVirtualServiceSpecHttpHeadersRequestPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpHeadersRequestPtrInput is an input type that accepts VirtualServiceSpecHttpHeadersRequestArgs, VirtualServiceSpecHttpHeadersRequestPtr and VirtualServiceSpecHttpHeadersRequestPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpHeadersRequestPtrInput` via:
//
//	        VirtualServiceSpecHttpHeadersRequestArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpHeadersRequestPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpHeadersRequestPtrOutput() VirtualServiceSpecHttpHeadersRequestPtrOutput
	ToVirtualServiceSpecHttpHeadersRequestPtrOutputWithContext(context.Context) VirtualServiceSpecHttpHeadersRequestPtrOutput
}

type virtualServiceSpecHttpHeadersRequestPtrType VirtualServiceSpecHttpHeadersRequestArgs

func VirtualServiceSpecHttpHeadersRequestPtr(v *VirtualServiceSpecHttpHeadersRequestArgs) VirtualServiceSpecHttpHeadersRequestPtrInput {
	return (*virtualServiceSpecHttpHeadersRequestPtrType)(v)
}

func (*virtualServiceSpecHttpHeadersRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpHeadersRequest)(nil)).Elem()
}

func (i *virtualServiceSpecHttpHeadersRequestPtrType) ToVirtualServiceSpecHttpHeadersRequestPtrOutput() VirtualServiceSpecHttpHeadersRequestPtrOutput {
	return i.ToVirtualServiceSpecHttpHeadersRequestPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpHeadersRequestPtrType) ToVirtualServiceSpecHttpHeadersRequestPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpHeadersRequestPtrOutput)
}

type VirtualServiceSpecHttpHeadersRequestOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpHeadersRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpHeadersRequest)(nil)).Elem()
}

func (o VirtualServiceSpecHttpHeadersRequestOutput) ToVirtualServiceSpecHttpHeadersRequestOutput() VirtualServiceSpecHttpHeadersRequestOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersRequestOutput) ToVirtualServiceSpecHttpHeadersRequestOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersRequestOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersRequestOutput) ToVirtualServiceSpecHttpHeadersRequestPtrOutput() VirtualServiceSpecHttpHeadersRequestPtrOutput {
	return o.ToVirtualServiceSpecHttpHeadersRequestPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpHeadersRequestOutput) ToVirtualServiceSpecHttpHeadersRequestPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpHeadersRequest) *VirtualServiceSpecHttpHeadersRequest {
		return &v
	}).(VirtualServiceSpecHttpHeadersRequestPtrOutput)
}

func (o VirtualServiceSpecHttpHeadersRequestOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpHeadersRequest) map[string]string { return v.Add }).(pulumi.StringMapOutput)
}

func (o VirtualServiceSpecHttpHeadersRequestOutput) Remove() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpHeadersRequest) []string { return v.Remove }).(pulumi.StringArrayOutput)
}

func (o VirtualServiceSpecHttpHeadersRequestOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpHeadersRequest) map[string]string { return v.Set }).(pulumi.StringMapOutput)
}

type VirtualServiceSpecHttpHeadersRequestPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpHeadersRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpHeadersRequest)(nil)).Elem()
}

func (o VirtualServiceSpecHttpHeadersRequestPtrOutput) ToVirtualServiceSpecHttpHeadersRequestPtrOutput() VirtualServiceSpecHttpHeadersRequestPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersRequestPtrOutput) ToVirtualServiceSpecHttpHeadersRequestPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersRequestPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersRequestPtrOutput) Elem() VirtualServiceSpecHttpHeadersRequestOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpHeadersRequest) VirtualServiceSpecHttpHeadersRequest {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpHeadersRequest
		return ret
	}).(VirtualServiceSpecHttpHeadersRequestOutput)
}

func (o VirtualServiceSpecHttpHeadersRequestPtrOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpHeadersRequest) map[string]string {
		if v == nil {
			return nil
		}
		return v.Add
	}).(pulumi.StringMapOutput)
}

func (o VirtualServiceSpecHttpHeadersRequestPtrOutput) Remove() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpHeadersRequest) []string {
		if v == nil {
			return nil
		}
		return v.Remove
	}).(pulumi.StringArrayOutput)
}

func (o VirtualServiceSpecHttpHeadersRequestPtrOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpHeadersRequest) map[string]string {
		if v == nil {
			return nil
		}
		return v.Set
	}).(pulumi.StringMapOutput)
}

type VirtualServiceSpecHttpHeadersRequestPatch struct {
	Add    map[string]string `pulumi:"add"`
	Remove []string          `pulumi:"remove"`
	Set    map[string]string `pulumi:"set"`
}

// VirtualServiceSpecHttpHeadersRequestPatchInput is an input type that accepts VirtualServiceSpecHttpHeadersRequestPatchArgs and VirtualServiceSpecHttpHeadersRequestPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpHeadersRequestPatchInput` via:
//
//	VirtualServiceSpecHttpHeadersRequestPatchArgs{...}
type VirtualServiceSpecHttpHeadersRequestPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpHeadersRequestPatchOutput() VirtualServiceSpecHttpHeadersRequestPatchOutput
	ToVirtualServiceSpecHttpHeadersRequestPatchOutputWithContext(context.Context) VirtualServiceSpecHttpHeadersRequestPatchOutput
}

type VirtualServiceSpecHttpHeadersRequestPatchArgs struct {
	Add    pulumi.StringMapInput   `pulumi:"add"`
	Remove pulumi.StringArrayInput `pulumi:"remove"`
	Set    pulumi.StringMapInput   `pulumi:"set"`
}

func (VirtualServiceSpecHttpHeadersRequestPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpHeadersRequestPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpHeadersRequestPatchArgs) ToVirtualServiceSpecHttpHeadersRequestPatchOutput() VirtualServiceSpecHttpHeadersRequestPatchOutput {
	return i.ToVirtualServiceSpecHttpHeadersRequestPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpHeadersRequestPatchArgs) ToVirtualServiceSpecHttpHeadersRequestPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersRequestPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpHeadersRequestPatchOutput)
}

func (i VirtualServiceSpecHttpHeadersRequestPatchArgs) ToVirtualServiceSpecHttpHeadersRequestPatchPtrOutput() VirtualServiceSpecHttpHeadersRequestPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpHeadersRequestPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpHeadersRequestPatchArgs) ToVirtualServiceSpecHttpHeadersRequestPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersRequestPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpHeadersRequestPatchOutput).ToVirtualServiceSpecHttpHeadersRequestPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpHeadersRequestPatchPtrInput is an input type that accepts VirtualServiceSpecHttpHeadersRequestPatchArgs, VirtualServiceSpecHttpHeadersRequestPatchPtr and VirtualServiceSpecHttpHeadersRequestPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpHeadersRequestPatchPtrInput` via:
//
//	        VirtualServiceSpecHttpHeadersRequestPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpHeadersRequestPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpHeadersRequestPatchPtrOutput() VirtualServiceSpecHttpHeadersRequestPatchPtrOutput
	ToVirtualServiceSpecHttpHeadersRequestPatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpHeadersRequestPatchPtrOutput
}

type virtualServiceSpecHttpHeadersRequestPatchPtrType VirtualServiceSpecHttpHeadersRequestPatchArgs

func VirtualServiceSpecHttpHeadersRequestPatchPtr(v *VirtualServiceSpecHttpHeadersRequestPatchArgs) VirtualServiceSpecHttpHeadersRequestPatchPtrInput {
	return (*virtualServiceSpecHttpHeadersRequestPatchPtrType)(v)
}

func (*virtualServiceSpecHttpHeadersRequestPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpHeadersRequestPatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpHeadersRequestPatchPtrType) ToVirtualServiceSpecHttpHeadersRequestPatchPtrOutput() VirtualServiceSpecHttpHeadersRequestPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpHeadersRequestPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpHeadersRequestPatchPtrType) ToVirtualServiceSpecHttpHeadersRequestPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersRequestPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpHeadersRequestPatchPtrOutput)
}

type VirtualServiceSpecHttpHeadersRequestPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpHeadersRequestPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpHeadersRequestPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpHeadersRequestPatchOutput) ToVirtualServiceSpecHttpHeadersRequestPatchOutput() VirtualServiceSpecHttpHeadersRequestPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersRequestPatchOutput) ToVirtualServiceSpecHttpHeadersRequestPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersRequestPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersRequestPatchOutput) ToVirtualServiceSpecHttpHeadersRequestPatchPtrOutput() VirtualServiceSpecHttpHeadersRequestPatchPtrOutput {
	return o.ToVirtualServiceSpecHttpHeadersRequestPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpHeadersRequestPatchOutput) ToVirtualServiceSpecHttpHeadersRequestPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersRequestPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpHeadersRequestPatch) *VirtualServiceSpecHttpHeadersRequestPatch {
		return &v
	}).(VirtualServiceSpecHttpHeadersRequestPatchPtrOutput)
}

func (o VirtualServiceSpecHttpHeadersRequestPatchOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpHeadersRequestPatch) map[string]string { return v.Add }).(pulumi.StringMapOutput)
}

func (o VirtualServiceSpecHttpHeadersRequestPatchOutput) Remove() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpHeadersRequestPatch) []string { return v.Remove }).(pulumi.StringArrayOutput)
}

func (o VirtualServiceSpecHttpHeadersRequestPatchOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpHeadersRequestPatch) map[string]string { return v.Set }).(pulumi.StringMapOutput)
}

type VirtualServiceSpecHttpHeadersRequestPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpHeadersRequestPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpHeadersRequestPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpHeadersRequestPatchPtrOutput) ToVirtualServiceSpecHttpHeadersRequestPatchPtrOutput() VirtualServiceSpecHttpHeadersRequestPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersRequestPatchPtrOutput) ToVirtualServiceSpecHttpHeadersRequestPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersRequestPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersRequestPatchPtrOutput) Elem() VirtualServiceSpecHttpHeadersRequestPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpHeadersRequestPatch) VirtualServiceSpecHttpHeadersRequestPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpHeadersRequestPatch
		return ret
	}).(VirtualServiceSpecHttpHeadersRequestPatchOutput)
}

func (o VirtualServiceSpecHttpHeadersRequestPatchPtrOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpHeadersRequestPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Add
	}).(pulumi.StringMapOutput)
}

func (o VirtualServiceSpecHttpHeadersRequestPatchPtrOutput) Remove() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpHeadersRequestPatch) []string {
		if v == nil {
			return nil
		}
		return v.Remove
	}).(pulumi.StringArrayOutput)
}

func (o VirtualServiceSpecHttpHeadersRequestPatchPtrOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpHeadersRequestPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Set
	}).(pulumi.StringMapOutput)
}

type VirtualServiceSpecHttpHeadersResponse struct {
	Add    map[string]string `pulumi:"add"`
	Remove []string          `pulumi:"remove"`
	Set    map[string]string `pulumi:"set"`
}

// VirtualServiceSpecHttpHeadersResponseInput is an input type that accepts VirtualServiceSpecHttpHeadersResponseArgs and VirtualServiceSpecHttpHeadersResponseOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpHeadersResponseInput` via:
//
//	VirtualServiceSpecHttpHeadersResponseArgs{...}
type VirtualServiceSpecHttpHeadersResponseInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpHeadersResponseOutput() VirtualServiceSpecHttpHeadersResponseOutput
	ToVirtualServiceSpecHttpHeadersResponseOutputWithContext(context.Context) VirtualServiceSpecHttpHeadersResponseOutput
}

type VirtualServiceSpecHttpHeadersResponseArgs struct {
	Add    pulumi.StringMapInput   `pulumi:"add"`
	Remove pulumi.StringArrayInput `pulumi:"remove"`
	Set    pulumi.StringMapInput   `pulumi:"set"`
}

func (VirtualServiceSpecHttpHeadersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpHeadersResponse)(nil)).Elem()
}

func (i VirtualServiceSpecHttpHeadersResponseArgs) ToVirtualServiceSpecHttpHeadersResponseOutput() VirtualServiceSpecHttpHeadersResponseOutput {
	return i.ToVirtualServiceSpecHttpHeadersResponseOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpHeadersResponseArgs) ToVirtualServiceSpecHttpHeadersResponseOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpHeadersResponseOutput)
}

func (i VirtualServiceSpecHttpHeadersResponseArgs) ToVirtualServiceSpecHttpHeadersResponsePtrOutput() VirtualServiceSpecHttpHeadersResponsePtrOutput {
	return i.ToVirtualServiceSpecHttpHeadersResponsePtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpHeadersResponseArgs) ToVirtualServiceSpecHttpHeadersResponsePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpHeadersResponseOutput).ToVirtualServiceSpecHttpHeadersResponsePtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpHeadersResponsePtrInput is an input type that accepts VirtualServiceSpecHttpHeadersResponseArgs, VirtualServiceSpecHttpHeadersResponsePtr and VirtualServiceSpecHttpHeadersResponsePtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpHeadersResponsePtrInput` via:
//
//	        VirtualServiceSpecHttpHeadersResponseArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpHeadersResponsePtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpHeadersResponsePtrOutput() VirtualServiceSpecHttpHeadersResponsePtrOutput
	ToVirtualServiceSpecHttpHeadersResponsePtrOutputWithContext(context.Context) VirtualServiceSpecHttpHeadersResponsePtrOutput
}

type virtualServiceSpecHttpHeadersResponsePtrType VirtualServiceSpecHttpHeadersResponseArgs

func VirtualServiceSpecHttpHeadersResponsePtr(v *VirtualServiceSpecHttpHeadersResponseArgs) VirtualServiceSpecHttpHeadersResponsePtrInput {
	return (*virtualServiceSpecHttpHeadersResponsePtrType)(v)
}

func (*virtualServiceSpecHttpHeadersResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpHeadersResponse)(nil)).Elem()
}

func (i *virtualServiceSpecHttpHeadersResponsePtrType) ToVirtualServiceSpecHttpHeadersResponsePtrOutput() VirtualServiceSpecHttpHeadersResponsePtrOutput {
	return i.ToVirtualServiceSpecHttpHeadersResponsePtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpHeadersResponsePtrType) ToVirtualServiceSpecHttpHeadersResponsePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpHeadersResponsePtrOutput)
}

type VirtualServiceSpecHttpHeadersResponseOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpHeadersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpHeadersResponse)(nil)).Elem()
}

func (o VirtualServiceSpecHttpHeadersResponseOutput) ToVirtualServiceSpecHttpHeadersResponseOutput() VirtualServiceSpecHttpHeadersResponseOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersResponseOutput) ToVirtualServiceSpecHttpHeadersResponseOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersResponseOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersResponseOutput) ToVirtualServiceSpecHttpHeadersResponsePtrOutput() VirtualServiceSpecHttpHeadersResponsePtrOutput {
	return o.ToVirtualServiceSpecHttpHeadersResponsePtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpHeadersResponseOutput) ToVirtualServiceSpecHttpHeadersResponsePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpHeadersResponse) *VirtualServiceSpecHttpHeadersResponse {
		return &v
	}).(VirtualServiceSpecHttpHeadersResponsePtrOutput)
}

func (o VirtualServiceSpecHttpHeadersResponseOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpHeadersResponse) map[string]string { return v.Add }).(pulumi.StringMapOutput)
}

func (o VirtualServiceSpecHttpHeadersResponseOutput) Remove() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpHeadersResponse) []string { return v.Remove }).(pulumi.StringArrayOutput)
}

func (o VirtualServiceSpecHttpHeadersResponseOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpHeadersResponse) map[string]string { return v.Set }).(pulumi.StringMapOutput)
}

type VirtualServiceSpecHttpHeadersResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpHeadersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpHeadersResponse)(nil)).Elem()
}

func (o VirtualServiceSpecHttpHeadersResponsePtrOutput) ToVirtualServiceSpecHttpHeadersResponsePtrOutput() VirtualServiceSpecHttpHeadersResponsePtrOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersResponsePtrOutput) ToVirtualServiceSpecHttpHeadersResponsePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersResponsePtrOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersResponsePtrOutput) Elem() VirtualServiceSpecHttpHeadersResponseOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpHeadersResponse) VirtualServiceSpecHttpHeadersResponse {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpHeadersResponse
		return ret
	}).(VirtualServiceSpecHttpHeadersResponseOutput)
}

func (o VirtualServiceSpecHttpHeadersResponsePtrOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpHeadersResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Add
	}).(pulumi.StringMapOutput)
}

func (o VirtualServiceSpecHttpHeadersResponsePtrOutput) Remove() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpHeadersResponse) []string {
		if v == nil {
			return nil
		}
		return v.Remove
	}).(pulumi.StringArrayOutput)
}

func (o VirtualServiceSpecHttpHeadersResponsePtrOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpHeadersResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Set
	}).(pulumi.StringMapOutput)
}

type VirtualServiceSpecHttpHeadersResponsePatch struct {
	Add    map[string]string `pulumi:"add"`
	Remove []string          `pulumi:"remove"`
	Set    map[string]string `pulumi:"set"`
}

// VirtualServiceSpecHttpHeadersResponsePatchInput is an input type that accepts VirtualServiceSpecHttpHeadersResponsePatchArgs and VirtualServiceSpecHttpHeadersResponsePatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpHeadersResponsePatchInput` via:
//
//	VirtualServiceSpecHttpHeadersResponsePatchArgs{...}
type VirtualServiceSpecHttpHeadersResponsePatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpHeadersResponsePatchOutput() VirtualServiceSpecHttpHeadersResponsePatchOutput
	ToVirtualServiceSpecHttpHeadersResponsePatchOutputWithContext(context.Context) VirtualServiceSpecHttpHeadersResponsePatchOutput
}

type VirtualServiceSpecHttpHeadersResponsePatchArgs struct {
	Add    pulumi.StringMapInput   `pulumi:"add"`
	Remove pulumi.StringArrayInput `pulumi:"remove"`
	Set    pulumi.StringMapInput   `pulumi:"set"`
}

func (VirtualServiceSpecHttpHeadersResponsePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpHeadersResponsePatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpHeadersResponsePatchArgs) ToVirtualServiceSpecHttpHeadersResponsePatchOutput() VirtualServiceSpecHttpHeadersResponsePatchOutput {
	return i.ToVirtualServiceSpecHttpHeadersResponsePatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpHeadersResponsePatchArgs) ToVirtualServiceSpecHttpHeadersResponsePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersResponsePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpHeadersResponsePatchOutput)
}

func (i VirtualServiceSpecHttpHeadersResponsePatchArgs) ToVirtualServiceSpecHttpHeadersResponsePatchPtrOutput() VirtualServiceSpecHttpHeadersResponsePatchPtrOutput {
	return i.ToVirtualServiceSpecHttpHeadersResponsePatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpHeadersResponsePatchArgs) ToVirtualServiceSpecHttpHeadersResponsePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersResponsePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpHeadersResponsePatchOutput).ToVirtualServiceSpecHttpHeadersResponsePatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpHeadersResponsePatchPtrInput is an input type that accepts VirtualServiceSpecHttpHeadersResponsePatchArgs, VirtualServiceSpecHttpHeadersResponsePatchPtr and VirtualServiceSpecHttpHeadersResponsePatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpHeadersResponsePatchPtrInput` via:
//
//	        VirtualServiceSpecHttpHeadersResponsePatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpHeadersResponsePatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpHeadersResponsePatchPtrOutput() VirtualServiceSpecHttpHeadersResponsePatchPtrOutput
	ToVirtualServiceSpecHttpHeadersResponsePatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpHeadersResponsePatchPtrOutput
}

type virtualServiceSpecHttpHeadersResponsePatchPtrType VirtualServiceSpecHttpHeadersResponsePatchArgs

func VirtualServiceSpecHttpHeadersResponsePatchPtr(v *VirtualServiceSpecHttpHeadersResponsePatchArgs) VirtualServiceSpecHttpHeadersResponsePatchPtrInput {
	return (*virtualServiceSpecHttpHeadersResponsePatchPtrType)(v)
}

func (*virtualServiceSpecHttpHeadersResponsePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpHeadersResponsePatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpHeadersResponsePatchPtrType) ToVirtualServiceSpecHttpHeadersResponsePatchPtrOutput() VirtualServiceSpecHttpHeadersResponsePatchPtrOutput {
	return i.ToVirtualServiceSpecHttpHeadersResponsePatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpHeadersResponsePatchPtrType) ToVirtualServiceSpecHttpHeadersResponsePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersResponsePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpHeadersResponsePatchPtrOutput)
}

type VirtualServiceSpecHttpHeadersResponsePatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpHeadersResponsePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpHeadersResponsePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpHeadersResponsePatchOutput) ToVirtualServiceSpecHttpHeadersResponsePatchOutput() VirtualServiceSpecHttpHeadersResponsePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersResponsePatchOutput) ToVirtualServiceSpecHttpHeadersResponsePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersResponsePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersResponsePatchOutput) ToVirtualServiceSpecHttpHeadersResponsePatchPtrOutput() VirtualServiceSpecHttpHeadersResponsePatchPtrOutput {
	return o.ToVirtualServiceSpecHttpHeadersResponsePatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpHeadersResponsePatchOutput) ToVirtualServiceSpecHttpHeadersResponsePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersResponsePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpHeadersResponsePatch) *VirtualServiceSpecHttpHeadersResponsePatch {
		return &v
	}).(VirtualServiceSpecHttpHeadersResponsePatchPtrOutput)
}

func (o VirtualServiceSpecHttpHeadersResponsePatchOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpHeadersResponsePatch) map[string]string { return v.Add }).(pulumi.StringMapOutput)
}

func (o VirtualServiceSpecHttpHeadersResponsePatchOutput) Remove() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpHeadersResponsePatch) []string { return v.Remove }).(pulumi.StringArrayOutput)
}

func (o VirtualServiceSpecHttpHeadersResponsePatchOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpHeadersResponsePatch) map[string]string { return v.Set }).(pulumi.StringMapOutput)
}

type VirtualServiceSpecHttpHeadersResponsePatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpHeadersResponsePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpHeadersResponsePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpHeadersResponsePatchPtrOutput) ToVirtualServiceSpecHttpHeadersResponsePatchPtrOutput() VirtualServiceSpecHttpHeadersResponsePatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersResponsePatchPtrOutput) ToVirtualServiceSpecHttpHeadersResponsePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpHeadersResponsePatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpHeadersResponsePatchPtrOutput) Elem() VirtualServiceSpecHttpHeadersResponsePatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpHeadersResponsePatch) VirtualServiceSpecHttpHeadersResponsePatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpHeadersResponsePatch
		return ret
	}).(VirtualServiceSpecHttpHeadersResponsePatchOutput)
}

func (o VirtualServiceSpecHttpHeadersResponsePatchPtrOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpHeadersResponsePatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Add
	}).(pulumi.StringMapOutput)
}

func (o VirtualServiceSpecHttpHeadersResponsePatchPtrOutput) Remove() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpHeadersResponsePatch) []string {
		if v == nil {
			return nil
		}
		return v.Remove
	}).(pulumi.StringArrayOutput)
}

func (o VirtualServiceSpecHttpHeadersResponsePatchPtrOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpHeadersResponsePatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Set
	}).(pulumi.StringMapOutput)
}

type VirtualServiceSpecHttpMatch struct {
	Authority *VirtualServiceSpecHttpMatchAuthority `pulumi:"authority"`
	// Names of gateways where the rule should be applied.
	Gateways []string `pulumi:"gateways"`
	// The header keys must be lowercase and use hyphen as the separator, e.g.
	Headers map[string]map[string]string `pulumi:"headers"`
	// Flag to specify whether the URI matching should be case-insensitive.
	IgnoreUriCase *bool                              `pulumi:"ignoreUriCase"`
	Method        *VirtualServiceSpecHttpMatchMethod `pulumi:"method"`
	// The name assigned to a match.
	Name *string `pulumi:"name"`
	// Specifies the ports on the host that is being addressed.
	Port *int `pulumi:"port"`
	// Query parameters for matching.
	QueryParams map[string]map[string]string       `pulumi:"queryParams"`
	Scheme      *VirtualServiceSpecHttpMatchScheme `pulumi:"scheme"`
	// One or more labels that constrain the applicability of a rule to source (client) workloads with the given labels.
	SourceLabels map[string]string `pulumi:"sourceLabels"`
	// Source namespace constraining the applicability of a rule to workloads in that namespace.
	SourceNamespace *string `pulumi:"sourceNamespace"`
	// The human readable prefix to use when emitting statistics for this route.
	StatPrefix *string                         `pulumi:"statPrefix"`
	Uri        *VirtualServiceSpecHttpMatchUri `pulumi:"uri"`
	// withoutHeader has the same syntax with the header, but has opposite meaning.
	WithoutHeaders map[string]map[string]string `pulumi:"withoutHeaders"`
}

// VirtualServiceSpecHttpMatchInput is an input type that accepts VirtualServiceSpecHttpMatchArgs and VirtualServiceSpecHttpMatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMatchInput` via:
//
//	VirtualServiceSpecHttpMatchArgs{...}
type VirtualServiceSpecHttpMatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMatchOutput() VirtualServiceSpecHttpMatchOutput
	ToVirtualServiceSpecHttpMatchOutputWithContext(context.Context) VirtualServiceSpecHttpMatchOutput
}

type VirtualServiceSpecHttpMatchArgs struct {
	Authority VirtualServiceSpecHttpMatchAuthorityPtrInput `pulumi:"authority"`
	// Names of gateways where the rule should be applied.
	Gateways pulumi.StringArrayInput `pulumi:"gateways"`
	// The header keys must be lowercase and use hyphen as the separator, e.g.
	Headers pulumi.StringMapMapInput `pulumi:"headers"`
	// Flag to specify whether the URI matching should be case-insensitive.
	IgnoreUriCase pulumi.BoolPtrInput                       `pulumi:"ignoreUriCase"`
	Method        VirtualServiceSpecHttpMatchMethodPtrInput `pulumi:"method"`
	// The name assigned to a match.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the ports on the host that is being addressed.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Query parameters for matching.
	QueryParams pulumi.StringMapMapInput                  `pulumi:"queryParams"`
	Scheme      VirtualServiceSpecHttpMatchSchemePtrInput `pulumi:"scheme"`
	// One or more labels that constrain the applicability of a rule to source (client) workloads with the given labels.
	SourceLabels pulumi.StringMapInput `pulumi:"sourceLabels"`
	// Source namespace constraining the applicability of a rule to workloads in that namespace.
	SourceNamespace pulumi.StringPtrInput `pulumi:"sourceNamespace"`
	// The human readable prefix to use when emitting statistics for this route.
	StatPrefix pulumi.StringPtrInput                  `pulumi:"statPrefix"`
	Uri        VirtualServiceSpecHttpMatchUriPtrInput `pulumi:"uri"`
	// withoutHeader has the same syntax with the header, but has opposite meaning.
	WithoutHeaders pulumi.StringMapMapInput `pulumi:"withoutHeaders"`
}

func (VirtualServiceSpecHttpMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMatchArgs) ToVirtualServiceSpecHttpMatchOutput() VirtualServiceSpecHttpMatchOutput {
	return i.ToVirtualServiceSpecHttpMatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMatchArgs) ToVirtualServiceSpecHttpMatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchOutput)
}

// VirtualServiceSpecHttpMatchArrayInput is an input type that accepts VirtualServiceSpecHttpMatchArray and VirtualServiceSpecHttpMatchArrayOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMatchArrayInput` via:
//
//	VirtualServiceSpecHttpMatchArray{ VirtualServiceSpecHttpMatchArgs{...} }
type VirtualServiceSpecHttpMatchArrayInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMatchArrayOutput() VirtualServiceSpecHttpMatchArrayOutput
	ToVirtualServiceSpecHttpMatchArrayOutputWithContext(context.Context) VirtualServiceSpecHttpMatchArrayOutput
}

type VirtualServiceSpecHttpMatchArray []VirtualServiceSpecHttpMatchInput

func (VirtualServiceSpecHttpMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecHttpMatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMatchArray) ToVirtualServiceSpecHttpMatchArrayOutput() VirtualServiceSpecHttpMatchArrayOutput {
	return i.ToVirtualServiceSpecHttpMatchArrayOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMatchArray) ToVirtualServiceSpecHttpMatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchArrayOutput)
}

type VirtualServiceSpecHttpMatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMatchOutput) ToVirtualServiceSpecHttpMatchOutput() VirtualServiceSpecHttpMatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchOutput) ToVirtualServiceSpecHttpMatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchOutput) Authority() VirtualServiceSpecHttpMatchAuthorityPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatch) *VirtualServiceSpecHttpMatchAuthority { return v.Authority }).(VirtualServiceSpecHttpMatchAuthorityPtrOutput)
}

// Names of gateways where the rule should be applied.
func (o VirtualServiceSpecHttpMatchOutput) Gateways() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatch) []string { return v.Gateways }).(pulumi.StringArrayOutput)
}

// The header keys must be lowercase and use hyphen as the separator, e.g.
func (o VirtualServiceSpecHttpMatchOutput) Headers() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatch) map[string]map[string]string { return v.Headers }).(pulumi.StringMapMapOutput)
}

// Flag to specify whether the URI matching should be case-insensitive.
func (o VirtualServiceSpecHttpMatchOutput) IgnoreUriCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatch) *bool { return v.IgnoreUriCase }).(pulumi.BoolPtrOutput)
}

func (o VirtualServiceSpecHttpMatchOutput) Method() VirtualServiceSpecHttpMatchMethodPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatch) *VirtualServiceSpecHttpMatchMethod { return v.Method }).(VirtualServiceSpecHttpMatchMethodPtrOutput)
}

// The name assigned to a match.
func (o VirtualServiceSpecHttpMatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies the ports on the host that is being addressed.
func (o VirtualServiceSpecHttpMatchOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatch) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Query parameters for matching.
func (o VirtualServiceSpecHttpMatchOutput) QueryParams() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatch) map[string]map[string]string { return v.QueryParams }).(pulumi.StringMapMapOutput)
}

func (o VirtualServiceSpecHttpMatchOutput) Scheme() VirtualServiceSpecHttpMatchSchemePtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatch) *VirtualServiceSpecHttpMatchScheme { return v.Scheme }).(VirtualServiceSpecHttpMatchSchemePtrOutput)
}

// One or more labels that constrain the applicability of a rule to source (client) workloads with the given labels.
func (o VirtualServiceSpecHttpMatchOutput) SourceLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatch) map[string]string { return v.SourceLabels }).(pulumi.StringMapOutput)
}

// Source namespace constraining the applicability of a rule to workloads in that namespace.
func (o VirtualServiceSpecHttpMatchOutput) SourceNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatch) *string { return v.SourceNamespace }).(pulumi.StringPtrOutput)
}

// The human readable prefix to use when emitting statistics for this route.
func (o VirtualServiceSpecHttpMatchOutput) StatPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatch) *string { return v.StatPrefix }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMatchOutput) Uri() VirtualServiceSpecHttpMatchUriPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatch) *VirtualServiceSpecHttpMatchUri { return v.Uri }).(VirtualServiceSpecHttpMatchUriPtrOutput)
}

// withoutHeader has the same syntax with the header, but has opposite meaning.
func (o VirtualServiceSpecHttpMatchOutput) WithoutHeaders() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatch) map[string]map[string]string { return v.WithoutHeaders }).(pulumi.StringMapMapOutput)
}

type VirtualServiceSpecHttpMatchArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecHttpMatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMatchArrayOutput) ToVirtualServiceSpecHttpMatchArrayOutput() VirtualServiceSpecHttpMatchArrayOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchArrayOutput) ToVirtualServiceSpecHttpMatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchArrayOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchArrayOutput) Index(i pulumi.IntInput) VirtualServiceSpecHttpMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceSpecHttpMatch {
		return vs[0].([]VirtualServiceSpecHttpMatch)[vs[1].(int)]
	}).(VirtualServiceSpecHttpMatchOutput)
}

// HTTP Authority values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchAuthority struct {
	Exact  *string `pulumi:"exact"`
	Prefix *string `pulumi:"prefix"`
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Regex *string `pulumi:"regex"`
}

// VirtualServiceSpecHttpMatchAuthorityInput is an input type that accepts VirtualServiceSpecHttpMatchAuthorityArgs and VirtualServiceSpecHttpMatchAuthorityOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMatchAuthorityInput` via:
//
//	VirtualServiceSpecHttpMatchAuthorityArgs{...}
type VirtualServiceSpecHttpMatchAuthorityInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMatchAuthorityOutput() VirtualServiceSpecHttpMatchAuthorityOutput
	ToVirtualServiceSpecHttpMatchAuthorityOutputWithContext(context.Context) VirtualServiceSpecHttpMatchAuthorityOutput
}

// HTTP Authority values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchAuthorityArgs struct {
	Exact  pulumi.StringPtrInput `pulumi:"exact"`
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (VirtualServiceSpecHttpMatchAuthorityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMatchAuthority)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMatchAuthorityArgs) ToVirtualServiceSpecHttpMatchAuthorityOutput() VirtualServiceSpecHttpMatchAuthorityOutput {
	return i.ToVirtualServiceSpecHttpMatchAuthorityOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMatchAuthorityArgs) ToVirtualServiceSpecHttpMatchAuthorityOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchAuthorityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchAuthorityOutput)
}

func (i VirtualServiceSpecHttpMatchAuthorityArgs) ToVirtualServiceSpecHttpMatchAuthorityPtrOutput() VirtualServiceSpecHttpMatchAuthorityPtrOutput {
	return i.ToVirtualServiceSpecHttpMatchAuthorityPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMatchAuthorityArgs) ToVirtualServiceSpecHttpMatchAuthorityPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchAuthorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchAuthorityOutput).ToVirtualServiceSpecHttpMatchAuthorityPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpMatchAuthorityPtrInput is an input type that accepts VirtualServiceSpecHttpMatchAuthorityArgs, VirtualServiceSpecHttpMatchAuthorityPtr and VirtualServiceSpecHttpMatchAuthorityPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMatchAuthorityPtrInput` via:
//
//	        VirtualServiceSpecHttpMatchAuthorityArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpMatchAuthorityPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMatchAuthorityPtrOutput() VirtualServiceSpecHttpMatchAuthorityPtrOutput
	ToVirtualServiceSpecHttpMatchAuthorityPtrOutputWithContext(context.Context) VirtualServiceSpecHttpMatchAuthorityPtrOutput
}

type virtualServiceSpecHttpMatchAuthorityPtrType VirtualServiceSpecHttpMatchAuthorityArgs

func VirtualServiceSpecHttpMatchAuthorityPtr(v *VirtualServiceSpecHttpMatchAuthorityArgs) VirtualServiceSpecHttpMatchAuthorityPtrInput {
	return (*virtualServiceSpecHttpMatchAuthorityPtrType)(v)
}

func (*virtualServiceSpecHttpMatchAuthorityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMatchAuthority)(nil)).Elem()
}

func (i *virtualServiceSpecHttpMatchAuthorityPtrType) ToVirtualServiceSpecHttpMatchAuthorityPtrOutput() VirtualServiceSpecHttpMatchAuthorityPtrOutput {
	return i.ToVirtualServiceSpecHttpMatchAuthorityPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpMatchAuthorityPtrType) ToVirtualServiceSpecHttpMatchAuthorityPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchAuthorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchAuthorityPtrOutput)
}

// HTTP Authority values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchAuthorityOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMatchAuthorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMatchAuthority)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMatchAuthorityOutput) ToVirtualServiceSpecHttpMatchAuthorityOutput() VirtualServiceSpecHttpMatchAuthorityOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchAuthorityOutput) ToVirtualServiceSpecHttpMatchAuthorityOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchAuthorityOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchAuthorityOutput) ToVirtualServiceSpecHttpMatchAuthorityPtrOutput() VirtualServiceSpecHttpMatchAuthorityPtrOutput {
	return o.ToVirtualServiceSpecHttpMatchAuthorityPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpMatchAuthorityOutput) ToVirtualServiceSpecHttpMatchAuthorityPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchAuthorityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpMatchAuthority) *VirtualServiceSpecHttpMatchAuthority {
		return &v
	}).(VirtualServiceSpecHttpMatchAuthorityPtrOutput)
}

func (o VirtualServiceSpecHttpMatchAuthorityOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchAuthority) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMatchAuthorityOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchAuthority) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
func (o VirtualServiceSpecHttpMatchAuthorityOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchAuthority) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpMatchAuthorityPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMatchAuthorityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMatchAuthority)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMatchAuthorityPtrOutput) ToVirtualServiceSpecHttpMatchAuthorityPtrOutput() VirtualServiceSpecHttpMatchAuthorityPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchAuthorityPtrOutput) ToVirtualServiceSpecHttpMatchAuthorityPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchAuthorityPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchAuthorityPtrOutput) Elem() VirtualServiceSpecHttpMatchAuthorityOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchAuthority) VirtualServiceSpecHttpMatchAuthority {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpMatchAuthority
		return ret
	}).(VirtualServiceSpecHttpMatchAuthorityOutput)
}

func (o VirtualServiceSpecHttpMatchAuthorityPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchAuthority) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMatchAuthorityPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchAuthority) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
func (o VirtualServiceSpecHttpMatchAuthorityPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchAuthority) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

// HTTP Authority values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchAuthorityPatch struct {
	Exact  *string `pulumi:"exact"`
	Prefix *string `pulumi:"prefix"`
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Regex *string `pulumi:"regex"`
}

// VirtualServiceSpecHttpMatchAuthorityPatchInput is an input type that accepts VirtualServiceSpecHttpMatchAuthorityPatchArgs and VirtualServiceSpecHttpMatchAuthorityPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMatchAuthorityPatchInput` via:
//
//	VirtualServiceSpecHttpMatchAuthorityPatchArgs{...}
type VirtualServiceSpecHttpMatchAuthorityPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMatchAuthorityPatchOutput() VirtualServiceSpecHttpMatchAuthorityPatchOutput
	ToVirtualServiceSpecHttpMatchAuthorityPatchOutputWithContext(context.Context) VirtualServiceSpecHttpMatchAuthorityPatchOutput
}

// HTTP Authority values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchAuthorityPatchArgs struct {
	Exact  pulumi.StringPtrInput `pulumi:"exact"`
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (VirtualServiceSpecHttpMatchAuthorityPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMatchAuthorityPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMatchAuthorityPatchArgs) ToVirtualServiceSpecHttpMatchAuthorityPatchOutput() VirtualServiceSpecHttpMatchAuthorityPatchOutput {
	return i.ToVirtualServiceSpecHttpMatchAuthorityPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMatchAuthorityPatchArgs) ToVirtualServiceSpecHttpMatchAuthorityPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchAuthorityPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchAuthorityPatchOutput)
}

func (i VirtualServiceSpecHttpMatchAuthorityPatchArgs) ToVirtualServiceSpecHttpMatchAuthorityPatchPtrOutput() VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpMatchAuthorityPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMatchAuthorityPatchArgs) ToVirtualServiceSpecHttpMatchAuthorityPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchAuthorityPatchOutput).ToVirtualServiceSpecHttpMatchAuthorityPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpMatchAuthorityPatchPtrInput is an input type that accepts VirtualServiceSpecHttpMatchAuthorityPatchArgs, VirtualServiceSpecHttpMatchAuthorityPatchPtr and VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMatchAuthorityPatchPtrInput` via:
//
//	        VirtualServiceSpecHttpMatchAuthorityPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpMatchAuthorityPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMatchAuthorityPatchPtrOutput() VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput
	ToVirtualServiceSpecHttpMatchAuthorityPatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput
}

type virtualServiceSpecHttpMatchAuthorityPatchPtrType VirtualServiceSpecHttpMatchAuthorityPatchArgs

func VirtualServiceSpecHttpMatchAuthorityPatchPtr(v *VirtualServiceSpecHttpMatchAuthorityPatchArgs) VirtualServiceSpecHttpMatchAuthorityPatchPtrInput {
	return (*virtualServiceSpecHttpMatchAuthorityPatchPtrType)(v)
}

func (*virtualServiceSpecHttpMatchAuthorityPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMatchAuthorityPatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpMatchAuthorityPatchPtrType) ToVirtualServiceSpecHttpMatchAuthorityPatchPtrOutput() VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpMatchAuthorityPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpMatchAuthorityPatchPtrType) ToVirtualServiceSpecHttpMatchAuthorityPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput)
}

// HTTP Authority values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchAuthorityPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMatchAuthorityPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMatchAuthorityPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMatchAuthorityPatchOutput) ToVirtualServiceSpecHttpMatchAuthorityPatchOutput() VirtualServiceSpecHttpMatchAuthorityPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchAuthorityPatchOutput) ToVirtualServiceSpecHttpMatchAuthorityPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchAuthorityPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchAuthorityPatchOutput) ToVirtualServiceSpecHttpMatchAuthorityPatchPtrOutput() VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput {
	return o.ToVirtualServiceSpecHttpMatchAuthorityPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpMatchAuthorityPatchOutput) ToVirtualServiceSpecHttpMatchAuthorityPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpMatchAuthorityPatch) *VirtualServiceSpecHttpMatchAuthorityPatch {
		return &v
	}).(VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput)
}

func (o VirtualServiceSpecHttpMatchAuthorityPatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchAuthorityPatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMatchAuthorityPatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchAuthorityPatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
func (o VirtualServiceSpecHttpMatchAuthorityPatchOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchAuthorityPatch) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMatchAuthorityPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput) ToVirtualServiceSpecHttpMatchAuthorityPatchPtrOutput() VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput) ToVirtualServiceSpecHttpMatchAuthorityPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput) Elem() VirtualServiceSpecHttpMatchAuthorityPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchAuthorityPatch) VirtualServiceSpecHttpMatchAuthorityPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpMatchAuthorityPatch
		return ret
	}).(VirtualServiceSpecHttpMatchAuthorityPatchOutput)
}

func (o VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchAuthorityPatch) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchAuthorityPatch) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
func (o VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchAuthorityPatch) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

// HTTP Method values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchMethod struct {
	Exact  *string `pulumi:"exact"`
	Prefix *string `pulumi:"prefix"`
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Regex *string `pulumi:"regex"`
}

// VirtualServiceSpecHttpMatchMethodInput is an input type that accepts VirtualServiceSpecHttpMatchMethodArgs and VirtualServiceSpecHttpMatchMethodOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMatchMethodInput` via:
//
//	VirtualServiceSpecHttpMatchMethodArgs{...}
type VirtualServiceSpecHttpMatchMethodInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMatchMethodOutput() VirtualServiceSpecHttpMatchMethodOutput
	ToVirtualServiceSpecHttpMatchMethodOutputWithContext(context.Context) VirtualServiceSpecHttpMatchMethodOutput
}

// HTTP Method values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchMethodArgs struct {
	Exact  pulumi.StringPtrInput `pulumi:"exact"`
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (VirtualServiceSpecHttpMatchMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMatchMethod)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMatchMethodArgs) ToVirtualServiceSpecHttpMatchMethodOutput() VirtualServiceSpecHttpMatchMethodOutput {
	return i.ToVirtualServiceSpecHttpMatchMethodOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMatchMethodArgs) ToVirtualServiceSpecHttpMatchMethodOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchMethodOutput)
}

func (i VirtualServiceSpecHttpMatchMethodArgs) ToVirtualServiceSpecHttpMatchMethodPtrOutput() VirtualServiceSpecHttpMatchMethodPtrOutput {
	return i.ToVirtualServiceSpecHttpMatchMethodPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMatchMethodArgs) ToVirtualServiceSpecHttpMatchMethodPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchMethodOutput).ToVirtualServiceSpecHttpMatchMethodPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpMatchMethodPtrInput is an input type that accepts VirtualServiceSpecHttpMatchMethodArgs, VirtualServiceSpecHttpMatchMethodPtr and VirtualServiceSpecHttpMatchMethodPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMatchMethodPtrInput` via:
//
//	        VirtualServiceSpecHttpMatchMethodArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpMatchMethodPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMatchMethodPtrOutput() VirtualServiceSpecHttpMatchMethodPtrOutput
	ToVirtualServiceSpecHttpMatchMethodPtrOutputWithContext(context.Context) VirtualServiceSpecHttpMatchMethodPtrOutput
}

type virtualServiceSpecHttpMatchMethodPtrType VirtualServiceSpecHttpMatchMethodArgs

func VirtualServiceSpecHttpMatchMethodPtr(v *VirtualServiceSpecHttpMatchMethodArgs) VirtualServiceSpecHttpMatchMethodPtrInput {
	return (*virtualServiceSpecHttpMatchMethodPtrType)(v)
}

func (*virtualServiceSpecHttpMatchMethodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMatchMethod)(nil)).Elem()
}

func (i *virtualServiceSpecHttpMatchMethodPtrType) ToVirtualServiceSpecHttpMatchMethodPtrOutput() VirtualServiceSpecHttpMatchMethodPtrOutput {
	return i.ToVirtualServiceSpecHttpMatchMethodPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpMatchMethodPtrType) ToVirtualServiceSpecHttpMatchMethodPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchMethodPtrOutput)
}

// HTTP Method values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchMethodOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMatchMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMatchMethod)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMatchMethodOutput) ToVirtualServiceSpecHttpMatchMethodOutput() VirtualServiceSpecHttpMatchMethodOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchMethodOutput) ToVirtualServiceSpecHttpMatchMethodOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchMethodOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchMethodOutput) ToVirtualServiceSpecHttpMatchMethodPtrOutput() VirtualServiceSpecHttpMatchMethodPtrOutput {
	return o.ToVirtualServiceSpecHttpMatchMethodPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpMatchMethodOutput) ToVirtualServiceSpecHttpMatchMethodPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpMatchMethod) *VirtualServiceSpecHttpMatchMethod {
		return &v
	}).(VirtualServiceSpecHttpMatchMethodPtrOutput)
}

func (o VirtualServiceSpecHttpMatchMethodOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchMethod) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMatchMethodOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchMethod) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
func (o VirtualServiceSpecHttpMatchMethodOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchMethod) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpMatchMethodPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMatchMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMatchMethod)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMatchMethodPtrOutput) ToVirtualServiceSpecHttpMatchMethodPtrOutput() VirtualServiceSpecHttpMatchMethodPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchMethodPtrOutput) ToVirtualServiceSpecHttpMatchMethodPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchMethodPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchMethodPtrOutput) Elem() VirtualServiceSpecHttpMatchMethodOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchMethod) VirtualServiceSpecHttpMatchMethod {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpMatchMethod
		return ret
	}).(VirtualServiceSpecHttpMatchMethodOutput)
}

func (o VirtualServiceSpecHttpMatchMethodPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchMethod) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMatchMethodPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchMethod) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
func (o VirtualServiceSpecHttpMatchMethodPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchMethod) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

// HTTP Method values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchMethodPatch struct {
	Exact  *string `pulumi:"exact"`
	Prefix *string `pulumi:"prefix"`
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Regex *string `pulumi:"regex"`
}

// VirtualServiceSpecHttpMatchMethodPatchInput is an input type that accepts VirtualServiceSpecHttpMatchMethodPatchArgs and VirtualServiceSpecHttpMatchMethodPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMatchMethodPatchInput` via:
//
//	VirtualServiceSpecHttpMatchMethodPatchArgs{...}
type VirtualServiceSpecHttpMatchMethodPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMatchMethodPatchOutput() VirtualServiceSpecHttpMatchMethodPatchOutput
	ToVirtualServiceSpecHttpMatchMethodPatchOutputWithContext(context.Context) VirtualServiceSpecHttpMatchMethodPatchOutput
}

// HTTP Method values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchMethodPatchArgs struct {
	Exact  pulumi.StringPtrInput `pulumi:"exact"`
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (VirtualServiceSpecHttpMatchMethodPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMatchMethodPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMatchMethodPatchArgs) ToVirtualServiceSpecHttpMatchMethodPatchOutput() VirtualServiceSpecHttpMatchMethodPatchOutput {
	return i.ToVirtualServiceSpecHttpMatchMethodPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMatchMethodPatchArgs) ToVirtualServiceSpecHttpMatchMethodPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchMethodPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchMethodPatchOutput)
}

func (i VirtualServiceSpecHttpMatchMethodPatchArgs) ToVirtualServiceSpecHttpMatchMethodPatchPtrOutput() VirtualServiceSpecHttpMatchMethodPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpMatchMethodPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMatchMethodPatchArgs) ToVirtualServiceSpecHttpMatchMethodPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchMethodPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchMethodPatchOutput).ToVirtualServiceSpecHttpMatchMethodPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpMatchMethodPatchPtrInput is an input type that accepts VirtualServiceSpecHttpMatchMethodPatchArgs, VirtualServiceSpecHttpMatchMethodPatchPtr and VirtualServiceSpecHttpMatchMethodPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMatchMethodPatchPtrInput` via:
//
//	        VirtualServiceSpecHttpMatchMethodPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpMatchMethodPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMatchMethodPatchPtrOutput() VirtualServiceSpecHttpMatchMethodPatchPtrOutput
	ToVirtualServiceSpecHttpMatchMethodPatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpMatchMethodPatchPtrOutput
}

type virtualServiceSpecHttpMatchMethodPatchPtrType VirtualServiceSpecHttpMatchMethodPatchArgs

func VirtualServiceSpecHttpMatchMethodPatchPtr(v *VirtualServiceSpecHttpMatchMethodPatchArgs) VirtualServiceSpecHttpMatchMethodPatchPtrInput {
	return (*virtualServiceSpecHttpMatchMethodPatchPtrType)(v)
}

func (*virtualServiceSpecHttpMatchMethodPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMatchMethodPatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpMatchMethodPatchPtrType) ToVirtualServiceSpecHttpMatchMethodPatchPtrOutput() VirtualServiceSpecHttpMatchMethodPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpMatchMethodPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpMatchMethodPatchPtrType) ToVirtualServiceSpecHttpMatchMethodPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchMethodPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchMethodPatchPtrOutput)
}

// HTTP Method values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchMethodPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMatchMethodPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMatchMethodPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMatchMethodPatchOutput) ToVirtualServiceSpecHttpMatchMethodPatchOutput() VirtualServiceSpecHttpMatchMethodPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchMethodPatchOutput) ToVirtualServiceSpecHttpMatchMethodPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchMethodPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchMethodPatchOutput) ToVirtualServiceSpecHttpMatchMethodPatchPtrOutput() VirtualServiceSpecHttpMatchMethodPatchPtrOutput {
	return o.ToVirtualServiceSpecHttpMatchMethodPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpMatchMethodPatchOutput) ToVirtualServiceSpecHttpMatchMethodPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchMethodPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpMatchMethodPatch) *VirtualServiceSpecHttpMatchMethodPatch {
		return &v
	}).(VirtualServiceSpecHttpMatchMethodPatchPtrOutput)
}

func (o VirtualServiceSpecHttpMatchMethodPatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchMethodPatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMatchMethodPatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchMethodPatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
func (o VirtualServiceSpecHttpMatchMethodPatchOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchMethodPatch) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpMatchMethodPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMatchMethodPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMatchMethodPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMatchMethodPatchPtrOutput) ToVirtualServiceSpecHttpMatchMethodPatchPtrOutput() VirtualServiceSpecHttpMatchMethodPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchMethodPatchPtrOutput) ToVirtualServiceSpecHttpMatchMethodPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchMethodPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchMethodPatchPtrOutput) Elem() VirtualServiceSpecHttpMatchMethodPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchMethodPatch) VirtualServiceSpecHttpMatchMethodPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpMatchMethodPatch
		return ret
	}).(VirtualServiceSpecHttpMatchMethodPatchOutput)
}

func (o VirtualServiceSpecHttpMatchMethodPatchPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchMethodPatch) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMatchMethodPatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchMethodPatch) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
func (o VirtualServiceSpecHttpMatchMethodPatchPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchMethodPatch) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpMatchPatch struct {
	Authority *VirtualServiceSpecHttpMatchAuthorityPatch `pulumi:"authority"`
	// Names of gateways where the rule should be applied.
	Gateways []string `pulumi:"gateways"`
	// The header keys must be lowercase and use hyphen as the separator, e.g.
	Headers map[string]map[string]string `pulumi:"headers"`
	// Flag to specify whether the URI matching should be case-insensitive.
	IgnoreUriCase *bool                                   `pulumi:"ignoreUriCase"`
	Method        *VirtualServiceSpecHttpMatchMethodPatch `pulumi:"method"`
	// The name assigned to a match.
	Name *string `pulumi:"name"`
	// Specifies the ports on the host that is being addressed.
	Port *int `pulumi:"port"`
	// Query parameters for matching.
	QueryParams map[string]map[string]string            `pulumi:"queryParams"`
	Scheme      *VirtualServiceSpecHttpMatchSchemePatch `pulumi:"scheme"`
	// One or more labels that constrain the applicability of a rule to source (client) workloads with the given labels.
	SourceLabels map[string]string `pulumi:"sourceLabels"`
	// Source namespace constraining the applicability of a rule to workloads in that namespace.
	SourceNamespace *string `pulumi:"sourceNamespace"`
	// The human readable prefix to use when emitting statistics for this route.
	StatPrefix *string                              `pulumi:"statPrefix"`
	Uri        *VirtualServiceSpecHttpMatchUriPatch `pulumi:"uri"`
	// withoutHeader has the same syntax with the header, but has opposite meaning.
	WithoutHeaders map[string]map[string]string `pulumi:"withoutHeaders"`
}

// VirtualServiceSpecHttpMatchPatchInput is an input type that accepts VirtualServiceSpecHttpMatchPatchArgs and VirtualServiceSpecHttpMatchPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMatchPatchInput` via:
//
//	VirtualServiceSpecHttpMatchPatchArgs{...}
type VirtualServiceSpecHttpMatchPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMatchPatchOutput() VirtualServiceSpecHttpMatchPatchOutput
	ToVirtualServiceSpecHttpMatchPatchOutputWithContext(context.Context) VirtualServiceSpecHttpMatchPatchOutput
}

type VirtualServiceSpecHttpMatchPatchArgs struct {
	Authority VirtualServiceSpecHttpMatchAuthorityPatchPtrInput `pulumi:"authority"`
	// Names of gateways where the rule should be applied.
	Gateways pulumi.StringArrayInput `pulumi:"gateways"`
	// The header keys must be lowercase and use hyphen as the separator, e.g.
	Headers pulumi.StringMapMapInput `pulumi:"headers"`
	// Flag to specify whether the URI matching should be case-insensitive.
	IgnoreUriCase pulumi.BoolPtrInput                            `pulumi:"ignoreUriCase"`
	Method        VirtualServiceSpecHttpMatchMethodPatchPtrInput `pulumi:"method"`
	// The name assigned to a match.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the ports on the host that is being addressed.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Query parameters for matching.
	QueryParams pulumi.StringMapMapInput                       `pulumi:"queryParams"`
	Scheme      VirtualServiceSpecHttpMatchSchemePatchPtrInput `pulumi:"scheme"`
	// One or more labels that constrain the applicability of a rule to source (client) workloads with the given labels.
	SourceLabels pulumi.StringMapInput `pulumi:"sourceLabels"`
	// Source namespace constraining the applicability of a rule to workloads in that namespace.
	SourceNamespace pulumi.StringPtrInput `pulumi:"sourceNamespace"`
	// The human readable prefix to use when emitting statistics for this route.
	StatPrefix pulumi.StringPtrInput                       `pulumi:"statPrefix"`
	Uri        VirtualServiceSpecHttpMatchUriPatchPtrInput `pulumi:"uri"`
	// withoutHeader has the same syntax with the header, but has opposite meaning.
	WithoutHeaders pulumi.StringMapMapInput `pulumi:"withoutHeaders"`
}

func (VirtualServiceSpecHttpMatchPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMatchPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMatchPatchArgs) ToVirtualServiceSpecHttpMatchPatchOutput() VirtualServiceSpecHttpMatchPatchOutput {
	return i.ToVirtualServiceSpecHttpMatchPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMatchPatchArgs) ToVirtualServiceSpecHttpMatchPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchPatchOutput)
}

// VirtualServiceSpecHttpMatchPatchArrayInput is an input type that accepts VirtualServiceSpecHttpMatchPatchArray and VirtualServiceSpecHttpMatchPatchArrayOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMatchPatchArrayInput` via:
//
//	VirtualServiceSpecHttpMatchPatchArray{ VirtualServiceSpecHttpMatchPatchArgs{...} }
type VirtualServiceSpecHttpMatchPatchArrayInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMatchPatchArrayOutput() VirtualServiceSpecHttpMatchPatchArrayOutput
	ToVirtualServiceSpecHttpMatchPatchArrayOutputWithContext(context.Context) VirtualServiceSpecHttpMatchPatchArrayOutput
}

type VirtualServiceSpecHttpMatchPatchArray []VirtualServiceSpecHttpMatchPatchInput

func (VirtualServiceSpecHttpMatchPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecHttpMatchPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMatchPatchArray) ToVirtualServiceSpecHttpMatchPatchArrayOutput() VirtualServiceSpecHttpMatchPatchArrayOutput {
	return i.ToVirtualServiceSpecHttpMatchPatchArrayOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMatchPatchArray) ToVirtualServiceSpecHttpMatchPatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchPatchArrayOutput)
}

type VirtualServiceSpecHttpMatchPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMatchPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMatchPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMatchPatchOutput) ToVirtualServiceSpecHttpMatchPatchOutput() VirtualServiceSpecHttpMatchPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchPatchOutput) ToVirtualServiceSpecHttpMatchPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchPatchOutput) Authority() VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchPatch) *VirtualServiceSpecHttpMatchAuthorityPatch {
		return v.Authority
	}).(VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput)
}

// Names of gateways where the rule should be applied.
func (o VirtualServiceSpecHttpMatchPatchOutput) Gateways() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchPatch) []string { return v.Gateways }).(pulumi.StringArrayOutput)
}

// The header keys must be lowercase and use hyphen as the separator, e.g.
func (o VirtualServiceSpecHttpMatchPatchOutput) Headers() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchPatch) map[string]map[string]string { return v.Headers }).(pulumi.StringMapMapOutput)
}

// Flag to specify whether the URI matching should be case-insensitive.
func (o VirtualServiceSpecHttpMatchPatchOutput) IgnoreUriCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchPatch) *bool { return v.IgnoreUriCase }).(pulumi.BoolPtrOutput)
}

func (o VirtualServiceSpecHttpMatchPatchOutput) Method() VirtualServiceSpecHttpMatchMethodPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchPatch) *VirtualServiceSpecHttpMatchMethodPatch { return v.Method }).(VirtualServiceSpecHttpMatchMethodPatchPtrOutput)
}

// The name assigned to a match.
func (o VirtualServiceSpecHttpMatchPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies the ports on the host that is being addressed.
func (o VirtualServiceSpecHttpMatchPatchOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchPatch) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Query parameters for matching.
func (o VirtualServiceSpecHttpMatchPatchOutput) QueryParams() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchPatch) map[string]map[string]string { return v.QueryParams }).(pulumi.StringMapMapOutput)
}

func (o VirtualServiceSpecHttpMatchPatchOutput) Scheme() VirtualServiceSpecHttpMatchSchemePatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchPatch) *VirtualServiceSpecHttpMatchSchemePatch { return v.Scheme }).(VirtualServiceSpecHttpMatchSchemePatchPtrOutput)
}

// One or more labels that constrain the applicability of a rule to source (client) workloads with the given labels.
func (o VirtualServiceSpecHttpMatchPatchOutput) SourceLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchPatch) map[string]string { return v.SourceLabels }).(pulumi.StringMapOutput)
}

// Source namespace constraining the applicability of a rule to workloads in that namespace.
func (o VirtualServiceSpecHttpMatchPatchOutput) SourceNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchPatch) *string { return v.SourceNamespace }).(pulumi.StringPtrOutput)
}

// The human readable prefix to use when emitting statistics for this route.
func (o VirtualServiceSpecHttpMatchPatchOutput) StatPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchPatch) *string { return v.StatPrefix }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMatchPatchOutput) Uri() VirtualServiceSpecHttpMatchUriPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchPatch) *VirtualServiceSpecHttpMatchUriPatch { return v.Uri }).(VirtualServiceSpecHttpMatchUriPatchPtrOutput)
}

// withoutHeader has the same syntax with the header, but has opposite meaning.
func (o VirtualServiceSpecHttpMatchPatchOutput) WithoutHeaders() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchPatch) map[string]map[string]string { return v.WithoutHeaders }).(pulumi.StringMapMapOutput)
}

type VirtualServiceSpecHttpMatchPatchArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMatchPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecHttpMatchPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMatchPatchArrayOutput) ToVirtualServiceSpecHttpMatchPatchArrayOutput() VirtualServiceSpecHttpMatchPatchArrayOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchPatchArrayOutput) ToVirtualServiceSpecHttpMatchPatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchPatchArrayOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchPatchArrayOutput) Index(i pulumi.IntInput) VirtualServiceSpecHttpMatchPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceSpecHttpMatchPatch {
		return vs[0].([]VirtualServiceSpecHttpMatchPatch)[vs[1].(int)]
	}).(VirtualServiceSpecHttpMatchPatchOutput)
}

// URI Scheme values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchScheme struct {
	Exact  *string `pulumi:"exact"`
	Prefix *string `pulumi:"prefix"`
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Regex *string `pulumi:"regex"`
}

// VirtualServiceSpecHttpMatchSchemeInput is an input type that accepts VirtualServiceSpecHttpMatchSchemeArgs and VirtualServiceSpecHttpMatchSchemeOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMatchSchemeInput` via:
//
//	VirtualServiceSpecHttpMatchSchemeArgs{...}
type VirtualServiceSpecHttpMatchSchemeInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMatchSchemeOutput() VirtualServiceSpecHttpMatchSchemeOutput
	ToVirtualServiceSpecHttpMatchSchemeOutputWithContext(context.Context) VirtualServiceSpecHttpMatchSchemeOutput
}

// URI Scheme values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchSchemeArgs struct {
	Exact  pulumi.StringPtrInput `pulumi:"exact"`
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (VirtualServiceSpecHttpMatchSchemeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMatchScheme)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMatchSchemeArgs) ToVirtualServiceSpecHttpMatchSchemeOutput() VirtualServiceSpecHttpMatchSchemeOutput {
	return i.ToVirtualServiceSpecHttpMatchSchemeOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMatchSchemeArgs) ToVirtualServiceSpecHttpMatchSchemeOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchSchemeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchSchemeOutput)
}

func (i VirtualServiceSpecHttpMatchSchemeArgs) ToVirtualServiceSpecHttpMatchSchemePtrOutput() VirtualServiceSpecHttpMatchSchemePtrOutput {
	return i.ToVirtualServiceSpecHttpMatchSchemePtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMatchSchemeArgs) ToVirtualServiceSpecHttpMatchSchemePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchSchemePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchSchemeOutput).ToVirtualServiceSpecHttpMatchSchemePtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpMatchSchemePtrInput is an input type that accepts VirtualServiceSpecHttpMatchSchemeArgs, VirtualServiceSpecHttpMatchSchemePtr and VirtualServiceSpecHttpMatchSchemePtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMatchSchemePtrInput` via:
//
//	        VirtualServiceSpecHttpMatchSchemeArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpMatchSchemePtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMatchSchemePtrOutput() VirtualServiceSpecHttpMatchSchemePtrOutput
	ToVirtualServiceSpecHttpMatchSchemePtrOutputWithContext(context.Context) VirtualServiceSpecHttpMatchSchemePtrOutput
}

type virtualServiceSpecHttpMatchSchemePtrType VirtualServiceSpecHttpMatchSchemeArgs

func VirtualServiceSpecHttpMatchSchemePtr(v *VirtualServiceSpecHttpMatchSchemeArgs) VirtualServiceSpecHttpMatchSchemePtrInput {
	return (*virtualServiceSpecHttpMatchSchemePtrType)(v)
}

func (*virtualServiceSpecHttpMatchSchemePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMatchScheme)(nil)).Elem()
}

func (i *virtualServiceSpecHttpMatchSchemePtrType) ToVirtualServiceSpecHttpMatchSchemePtrOutput() VirtualServiceSpecHttpMatchSchemePtrOutput {
	return i.ToVirtualServiceSpecHttpMatchSchemePtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpMatchSchemePtrType) ToVirtualServiceSpecHttpMatchSchemePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchSchemePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchSchemePtrOutput)
}

// URI Scheme values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchSchemeOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMatchSchemeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMatchScheme)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMatchSchemeOutput) ToVirtualServiceSpecHttpMatchSchemeOutput() VirtualServiceSpecHttpMatchSchemeOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchSchemeOutput) ToVirtualServiceSpecHttpMatchSchemeOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchSchemeOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchSchemeOutput) ToVirtualServiceSpecHttpMatchSchemePtrOutput() VirtualServiceSpecHttpMatchSchemePtrOutput {
	return o.ToVirtualServiceSpecHttpMatchSchemePtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpMatchSchemeOutput) ToVirtualServiceSpecHttpMatchSchemePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchSchemePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpMatchScheme) *VirtualServiceSpecHttpMatchScheme {
		return &v
	}).(VirtualServiceSpecHttpMatchSchemePtrOutput)
}

func (o VirtualServiceSpecHttpMatchSchemeOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchScheme) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMatchSchemeOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchScheme) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
func (o VirtualServiceSpecHttpMatchSchemeOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchScheme) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpMatchSchemePtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMatchSchemePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMatchScheme)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMatchSchemePtrOutput) ToVirtualServiceSpecHttpMatchSchemePtrOutput() VirtualServiceSpecHttpMatchSchemePtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchSchemePtrOutput) ToVirtualServiceSpecHttpMatchSchemePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchSchemePtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchSchemePtrOutput) Elem() VirtualServiceSpecHttpMatchSchemeOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchScheme) VirtualServiceSpecHttpMatchScheme {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpMatchScheme
		return ret
	}).(VirtualServiceSpecHttpMatchSchemeOutput)
}

func (o VirtualServiceSpecHttpMatchSchemePtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchScheme) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMatchSchemePtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchScheme) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
func (o VirtualServiceSpecHttpMatchSchemePtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchScheme) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

// URI Scheme values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchSchemePatch struct {
	Exact  *string `pulumi:"exact"`
	Prefix *string `pulumi:"prefix"`
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Regex *string `pulumi:"regex"`
}

// VirtualServiceSpecHttpMatchSchemePatchInput is an input type that accepts VirtualServiceSpecHttpMatchSchemePatchArgs and VirtualServiceSpecHttpMatchSchemePatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMatchSchemePatchInput` via:
//
//	VirtualServiceSpecHttpMatchSchemePatchArgs{...}
type VirtualServiceSpecHttpMatchSchemePatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMatchSchemePatchOutput() VirtualServiceSpecHttpMatchSchemePatchOutput
	ToVirtualServiceSpecHttpMatchSchemePatchOutputWithContext(context.Context) VirtualServiceSpecHttpMatchSchemePatchOutput
}

// URI Scheme values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchSchemePatchArgs struct {
	Exact  pulumi.StringPtrInput `pulumi:"exact"`
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (VirtualServiceSpecHttpMatchSchemePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMatchSchemePatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMatchSchemePatchArgs) ToVirtualServiceSpecHttpMatchSchemePatchOutput() VirtualServiceSpecHttpMatchSchemePatchOutput {
	return i.ToVirtualServiceSpecHttpMatchSchemePatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMatchSchemePatchArgs) ToVirtualServiceSpecHttpMatchSchemePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchSchemePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchSchemePatchOutput)
}

func (i VirtualServiceSpecHttpMatchSchemePatchArgs) ToVirtualServiceSpecHttpMatchSchemePatchPtrOutput() VirtualServiceSpecHttpMatchSchemePatchPtrOutput {
	return i.ToVirtualServiceSpecHttpMatchSchemePatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMatchSchemePatchArgs) ToVirtualServiceSpecHttpMatchSchemePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchSchemePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchSchemePatchOutput).ToVirtualServiceSpecHttpMatchSchemePatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpMatchSchemePatchPtrInput is an input type that accepts VirtualServiceSpecHttpMatchSchemePatchArgs, VirtualServiceSpecHttpMatchSchemePatchPtr and VirtualServiceSpecHttpMatchSchemePatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMatchSchemePatchPtrInput` via:
//
//	        VirtualServiceSpecHttpMatchSchemePatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpMatchSchemePatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMatchSchemePatchPtrOutput() VirtualServiceSpecHttpMatchSchemePatchPtrOutput
	ToVirtualServiceSpecHttpMatchSchemePatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpMatchSchemePatchPtrOutput
}

type virtualServiceSpecHttpMatchSchemePatchPtrType VirtualServiceSpecHttpMatchSchemePatchArgs

func VirtualServiceSpecHttpMatchSchemePatchPtr(v *VirtualServiceSpecHttpMatchSchemePatchArgs) VirtualServiceSpecHttpMatchSchemePatchPtrInput {
	return (*virtualServiceSpecHttpMatchSchemePatchPtrType)(v)
}

func (*virtualServiceSpecHttpMatchSchemePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMatchSchemePatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpMatchSchemePatchPtrType) ToVirtualServiceSpecHttpMatchSchemePatchPtrOutput() VirtualServiceSpecHttpMatchSchemePatchPtrOutput {
	return i.ToVirtualServiceSpecHttpMatchSchemePatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpMatchSchemePatchPtrType) ToVirtualServiceSpecHttpMatchSchemePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchSchemePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchSchemePatchPtrOutput)
}

// URI Scheme values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchSchemePatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMatchSchemePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMatchSchemePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMatchSchemePatchOutput) ToVirtualServiceSpecHttpMatchSchemePatchOutput() VirtualServiceSpecHttpMatchSchemePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchSchemePatchOutput) ToVirtualServiceSpecHttpMatchSchemePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchSchemePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchSchemePatchOutput) ToVirtualServiceSpecHttpMatchSchemePatchPtrOutput() VirtualServiceSpecHttpMatchSchemePatchPtrOutput {
	return o.ToVirtualServiceSpecHttpMatchSchemePatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpMatchSchemePatchOutput) ToVirtualServiceSpecHttpMatchSchemePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchSchemePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpMatchSchemePatch) *VirtualServiceSpecHttpMatchSchemePatch {
		return &v
	}).(VirtualServiceSpecHttpMatchSchemePatchPtrOutput)
}

func (o VirtualServiceSpecHttpMatchSchemePatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchSchemePatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMatchSchemePatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchSchemePatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
func (o VirtualServiceSpecHttpMatchSchemePatchOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchSchemePatch) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpMatchSchemePatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMatchSchemePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMatchSchemePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMatchSchemePatchPtrOutput) ToVirtualServiceSpecHttpMatchSchemePatchPtrOutput() VirtualServiceSpecHttpMatchSchemePatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchSchemePatchPtrOutput) ToVirtualServiceSpecHttpMatchSchemePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchSchemePatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchSchemePatchPtrOutput) Elem() VirtualServiceSpecHttpMatchSchemePatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchSchemePatch) VirtualServiceSpecHttpMatchSchemePatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpMatchSchemePatch
		return ret
	}).(VirtualServiceSpecHttpMatchSchemePatchOutput)
}

func (o VirtualServiceSpecHttpMatchSchemePatchPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchSchemePatch) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMatchSchemePatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchSchemePatch) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
func (o VirtualServiceSpecHttpMatchSchemePatchPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchSchemePatch) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

// URI to match values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchUri struct {
	Exact  *string `pulumi:"exact"`
	Prefix *string `pulumi:"prefix"`
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Regex *string `pulumi:"regex"`
}

// VirtualServiceSpecHttpMatchUriInput is an input type that accepts VirtualServiceSpecHttpMatchUriArgs and VirtualServiceSpecHttpMatchUriOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMatchUriInput` via:
//
//	VirtualServiceSpecHttpMatchUriArgs{...}
type VirtualServiceSpecHttpMatchUriInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMatchUriOutput() VirtualServiceSpecHttpMatchUriOutput
	ToVirtualServiceSpecHttpMatchUriOutputWithContext(context.Context) VirtualServiceSpecHttpMatchUriOutput
}

// URI to match values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchUriArgs struct {
	Exact  pulumi.StringPtrInput `pulumi:"exact"`
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (VirtualServiceSpecHttpMatchUriArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMatchUri)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMatchUriArgs) ToVirtualServiceSpecHttpMatchUriOutput() VirtualServiceSpecHttpMatchUriOutput {
	return i.ToVirtualServiceSpecHttpMatchUriOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMatchUriArgs) ToVirtualServiceSpecHttpMatchUriOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchUriOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchUriOutput)
}

func (i VirtualServiceSpecHttpMatchUriArgs) ToVirtualServiceSpecHttpMatchUriPtrOutput() VirtualServiceSpecHttpMatchUriPtrOutput {
	return i.ToVirtualServiceSpecHttpMatchUriPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMatchUriArgs) ToVirtualServiceSpecHttpMatchUriPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchUriPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchUriOutput).ToVirtualServiceSpecHttpMatchUriPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpMatchUriPtrInput is an input type that accepts VirtualServiceSpecHttpMatchUriArgs, VirtualServiceSpecHttpMatchUriPtr and VirtualServiceSpecHttpMatchUriPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMatchUriPtrInput` via:
//
//	        VirtualServiceSpecHttpMatchUriArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpMatchUriPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMatchUriPtrOutput() VirtualServiceSpecHttpMatchUriPtrOutput
	ToVirtualServiceSpecHttpMatchUriPtrOutputWithContext(context.Context) VirtualServiceSpecHttpMatchUriPtrOutput
}

type virtualServiceSpecHttpMatchUriPtrType VirtualServiceSpecHttpMatchUriArgs

func VirtualServiceSpecHttpMatchUriPtr(v *VirtualServiceSpecHttpMatchUriArgs) VirtualServiceSpecHttpMatchUriPtrInput {
	return (*virtualServiceSpecHttpMatchUriPtrType)(v)
}

func (*virtualServiceSpecHttpMatchUriPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMatchUri)(nil)).Elem()
}

func (i *virtualServiceSpecHttpMatchUriPtrType) ToVirtualServiceSpecHttpMatchUriPtrOutput() VirtualServiceSpecHttpMatchUriPtrOutput {
	return i.ToVirtualServiceSpecHttpMatchUriPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpMatchUriPtrType) ToVirtualServiceSpecHttpMatchUriPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchUriPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchUriPtrOutput)
}

// URI to match values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchUriOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMatchUriOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMatchUri)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMatchUriOutput) ToVirtualServiceSpecHttpMatchUriOutput() VirtualServiceSpecHttpMatchUriOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchUriOutput) ToVirtualServiceSpecHttpMatchUriOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchUriOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchUriOutput) ToVirtualServiceSpecHttpMatchUriPtrOutput() VirtualServiceSpecHttpMatchUriPtrOutput {
	return o.ToVirtualServiceSpecHttpMatchUriPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpMatchUriOutput) ToVirtualServiceSpecHttpMatchUriPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchUriPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpMatchUri) *VirtualServiceSpecHttpMatchUri {
		return &v
	}).(VirtualServiceSpecHttpMatchUriPtrOutput)
}

func (o VirtualServiceSpecHttpMatchUriOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchUri) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMatchUriOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchUri) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
func (o VirtualServiceSpecHttpMatchUriOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchUri) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpMatchUriPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMatchUriPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMatchUri)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMatchUriPtrOutput) ToVirtualServiceSpecHttpMatchUriPtrOutput() VirtualServiceSpecHttpMatchUriPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchUriPtrOutput) ToVirtualServiceSpecHttpMatchUriPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchUriPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchUriPtrOutput) Elem() VirtualServiceSpecHttpMatchUriOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchUri) VirtualServiceSpecHttpMatchUri {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpMatchUri
		return ret
	}).(VirtualServiceSpecHttpMatchUriOutput)
}

func (o VirtualServiceSpecHttpMatchUriPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchUri) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMatchUriPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchUri) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
func (o VirtualServiceSpecHttpMatchUriPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchUri) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

// URI to match values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchUriPatch struct {
	Exact  *string `pulumi:"exact"`
	Prefix *string `pulumi:"prefix"`
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Regex *string `pulumi:"regex"`
}

// VirtualServiceSpecHttpMatchUriPatchInput is an input type that accepts VirtualServiceSpecHttpMatchUriPatchArgs and VirtualServiceSpecHttpMatchUriPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMatchUriPatchInput` via:
//
//	VirtualServiceSpecHttpMatchUriPatchArgs{...}
type VirtualServiceSpecHttpMatchUriPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMatchUriPatchOutput() VirtualServiceSpecHttpMatchUriPatchOutput
	ToVirtualServiceSpecHttpMatchUriPatchOutputWithContext(context.Context) VirtualServiceSpecHttpMatchUriPatchOutput
}

// URI to match values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchUriPatchArgs struct {
	Exact  pulumi.StringPtrInput `pulumi:"exact"`
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (VirtualServiceSpecHttpMatchUriPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMatchUriPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMatchUriPatchArgs) ToVirtualServiceSpecHttpMatchUriPatchOutput() VirtualServiceSpecHttpMatchUriPatchOutput {
	return i.ToVirtualServiceSpecHttpMatchUriPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMatchUriPatchArgs) ToVirtualServiceSpecHttpMatchUriPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchUriPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchUriPatchOutput)
}

func (i VirtualServiceSpecHttpMatchUriPatchArgs) ToVirtualServiceSpecHttpMatchUriPatchPtrOutput() VirtualServiceSpecHttpMatchUriPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpMatchUriPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMatchUriPatchArgs) ToVirtualServiceSpecHttpMatchUriPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchUriPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchUriPatchOutput).ToVirtualServiceSpecHttpMatchUriPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpMatchUriPatchPtrInput is an input type that accepts VirtualServiceSpecHttpMatchUriPatchArgs, VirtualServiceSpecHttpMatchUriPatchPtr and VirtualServiceSpecHttpMatchUriPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMatchUriPatchPtrInput` via:
//
//	        VirtualServiceSpecHttpMatchUriPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpMatchUriPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMatchUriPatchPtrOutput() VirtualServiceSpecHttpMatchUriPatchPtrOutput
	ToVirtualServiceSpecHttpMatchUriPatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpMatchUriPatchPtrOutput
}

type virtualServiceSpecHttpMatchUriPatchPtrType VirtualServiceSpecHttpMatchUriPatchArgs

func VirtualServiceSpecHttpMatchUriPatchPtr(v *VirtualServiceSpecHttpMatchUriPatchArgs) VirtualServiceSpecHttpMatchUriPatchPtrInput {
	return (*virtualServiceSpecHttpMatchUriPatchPtrType)(v)
}

func (*virtualServiceSpecHttpMatchUriPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMatchUriPatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpMatchUriPatchPtrType) ToVirtualServiceSpecHttpMatchUriPatchPtrOutput() VirtualServiceSpecHttpMatchUriPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpMatchUriPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpMatchUriPatchPtrType) ToVirtualServiceSpecHttpMatchUriPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchUriPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMatchUriPatchPtrOutput)
}

// URI to match values are case-sensitive and formatted as follows: - `exact: "value"` for exact string match - `prefix: "value"` for prefix-based match - `regex: "value"` for RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
type VirtualServiceSpecHttpMatchUriPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMatchUriPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMatchUriPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMatchUriPatchOutput) ToVirtualServiceSpecHttpMatchUriPatchOutput() VirtualServiceSpecHttpMatchUriPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchUriPatchOutput) ToVirtualServiceSpecHttpMatchUriPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchUriPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchUriPatchOutput) ToVirtualServiceSpecHttpMatchUriPatchPtrOutput() VirtualServiceSpecHttpMatchUriPatchPtrOutput {
	return o.ToVirtualServiceSpecHttpMatchUriPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpMatchUriPatchOutput) ToVirtualServiceSpecHttpMatchUriPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchUriPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpMatchUriPatch) *VirtualServiceSpecHttpMatchUriPatch {
		return &v
	}).(VirtualServiceSpecHttpMatchUriPatchPtrOutput)
}

func (o VirtualServiceSpecHttpMatchUriPatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchUriPatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMatchUriPatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchUriPatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
func (o VirtualServiceSpecHttpMatchUriPatchOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMatchUriPatch) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpMatchUriPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMatchUriPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMatchUriPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMatchUriPatchPtrOutput) ToVirtualServiceSpecHttpMatchUriPatchPtrOutput() VirtualServiceSpecHttpMatchUriPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchUriPatchPtrOutput) ToVirtualServiceSpecHttpMatchUriPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMatchUriPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMatchUriPatchPtrOutput) Elem() VirtualServiceSpecHttpMatchUriPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchUriPatch) VirtualServiceSpecHttpMatchUriPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpMatchUriPatch
		return ret
	}).(VirtualServiceSpecHttpMatchUriPatchOutput)
}

func (o VirtualServiceSpecHttpMatchUriPatchPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchUriPatch) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMatchUriPatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchUriPatch) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
func (o VirtualServiceSpecHttpMatchUriPatchPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMatchUriPatch) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

// Mirror HTTP traffic to a another destination in addition to forwarding the requests to the intended destination.
type VirtualServiceSpecHttpMirror struct {
	// The name of a service from the service registry.
	Host *string                           `pulumi:"host"`
	Port *VirtualServiceSpecHttpMirrorPort `pulumi:"port"`
	// The name of a subset within the service.
	Subset *string `pulumi:"subset"`
}

// VirtualServiceSpecHttpMirrorInput is an input type that accepts VirtualServiceSpecHttpMirrorArgs and VirtualServiceSpecHttpMirrorOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorInput` via:
//
//	VirtualServiceSpecHttpMirrorArgs{...}
type VirtualServiceSpecHttpMirrorInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorOutput() VirtualServiceSpecHttpMirrorOutput
	ToVirtualServiceSpecHttpMirrorOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorOutput
}

// Mirror HTTP traffic to a another destination in addition to forwarding the requests to the intended destination.
type VirtualServiceSpecHttpMirrorArgs struct {
	// The name of a service from the service registry.
	Host pulumi.StringPtrInput                    `pulumi:"host"`
	Port VirtualServiceSpecHttpMirrorPortPtrInput `pulumi:"port"`
	// The name of a subset within the service.
	Subset pulumi.StringPtrInput `pulumi:"subset"`
}

func (VirtualServiceSpecHttpMirrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirror)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMirrorArgs) ToVirtualServiceSpecHttpMirrorOutput() VirtualServiceSpecHttpMirrorOutput {
	return i.ToVirtualServiceSpecHttpMirrorOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorArgs) ToVirtualServiceSpecHttpMirrorOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorOutput)
}

func (i VirtualServiceSpecHttpMirrorArgs) ToVirtualServiceSpecHttpMirrorPtrOutput() VirtualServiceSpecHttpMirrorPtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorArgs) ToVirtualServiceSpecHttpMirrorPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorOutput).ToVirtualServiceSpecHttpMirrorPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpMirrorPtrInput is an input type that accepts VirtualServiceSpecHttpMirrorArgs, VirtualServiceSpecHttpMirrorPtr and VirtualServiceSpecHttpMirrorPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorPtrInput` via:
//
//	        VirtualServiceSpecHttpMirrorArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpMirrorPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorPtrOutput() VirtualServiceSpecHttpMirrorPtrOutput
	ToVirtualServiceSpecHttpMirrorPtrOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorPtrOutput
}

type virtualServiceSpecHttpMirrorPtrType VirtualServiceSpecHttpMirrorArgs

func VirtualServiceSpecHttpMirrorPtr(v *VirtualServiceSpecHttpMirrorArgs) VirtualServiceSpecHttpMirrorPtrInput {
	return (*virtualServiceSpecHttpMirrorPtrType)(v)
}

func (*virtualServiceSpecHttpMirrorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirror)(nil)).Elem()
}

func (i *virtualServiceSpecHttpMirrorPtrType) ToVirtualServiceSpecHttpMirrorPtrOutput() VirtualServiceSpecHttpMirrorPtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpMirrorPtrType) ToVirtualServiceSpecHttpMirrorPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorPtrOutput)
}

// Mirror HTTP traffic to a another destination in addition to forwarding the requests to the intended destination.
type VirtualServiceSpecHttpMirrorOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirror)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorOutput) ToVirtualServiceSpecHttpMirrorOutput() VirtualServiceSpecHttpMirrorOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorOutput) ToVirtualServiceSpecHttpMirrorOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorOutput) ToVirtualServiceSpecHttpMirrorPtrOutput() VirtualServiceSpecHttpMirrorPtrOutput {
	return o.ToVirtualServiceSpecHttpMirrorPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpMirrorOutput) ToVirtualServiceSpecHttpMirrorPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpMirror) *VirtualServiceSpecHttpMirror {
		return &v
	}).(VirtualServiceSpecHttpMirrorPtrOutput)
}

// The name of a service from the service registry.
func (o VirtualServiceSpecHttpMirrorOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirror) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMirrorOutput) Port() VirtualServiceSpecHttpMirrorPortPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirror) *VirtualServiceSpecHttpMirrorPort { return v.Port }).(VirtualServiceSpecHttpMirrorPortPtrOutput)
}

// The name of a subset within the service.
func (o VirtualServiceSpecHttpMirrorOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirror) *string { return v.Subset }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpMirrorPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirror)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorPtrOutput) ToVirtualServiceSpecHttpMirrorPtrOutput() VirtualServiceSpecHttpMirrorPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorPtrOutput) ToVirtualServiceSpecHttpMirrorPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorPtrOutput) Elem() VirtualServiceSpecHttpMirrorOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirror) VirtualServiceSpecHttpMirror {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpMirror
		return ret
	}).(VirtualServiceSpecHttpMirrorOutput)
}

// The name of a service from the service registry.
func (o VirtualServiceSpecHttpMirrorPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirror) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMirrorPtrOutput) Port() VirtualServiceSpecHttpMirrorPortPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirror) *VirtualServiceSpecHttpMirrorPort {
		if v == nil {
			return nil
		}
		return v.Port
	}).(VirtualServiceSpecHttpMirrorPortPtrOutput)
}

// The name of a subset within the service.
func (o VirtualServiceSpecHttpMirrorPtrOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirror) *string {
		if v == nil {
			return nil
		}
		return v.Subset
	}).(pulumi.StringPtrOutput)
}

// Mirror HTTP traffic to a another destination in addition to forwarding the requests to the intended destination.
type VirtualServiceSpecHttpMirrorPatch struct {
	// The name of a service from the service registry.
	Host *string                                `pulumi:"host"`
	Port *VirtualServiceSpecHttpMirrorPortPatch `pulumi:"port"`
	// The name of a subset within the service.
	Subset *string `pulumi:"subset"`
}

// VirtualServiceSpecHttpMirrorPatchInput is an input type that accepts VirtualServiceSpecHttpMirrorPatchArgs and VirtualServiceSpecHttpMirrorPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorPatchInput` via:
//
//	VirtualServiceSpecHttpMirrorPatchArgs{...}
type VirtualServiceSpecHttpMirrorPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorPatchOutput() VirtualServiceSpecHttpMirrorPatchOutput
	ToVirtualServiceSpecHttpMirrorPatchOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorPatchOutput
}

// Mirror HTTP traffic to a another destination in addition to forwarding the requests to the intended destination.
type VirtualServiceSpecHttpMirrorPatchArgs struct {
	// The name of a service from the service registry.
	Host pulumi.StringPtrInput                         `pulumi:"host"`
	Port VirtualServiceSpecHttpMirrorPortPatchPtrInput `pulumi:"port"`
	// The name of a subset within the service.
	Subset pulumi.StringPtrInput `pulumi:"subset"`
}

func (VirtualServiceSpecHttpMirrorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMirrorPatchArgs) ToVirtualServiceSpecHttpMirrorPatchOutput() VirtualServiceSpecHttpMirrorPatchOutput {
	return i.ToVirtualServiceSpecHttpMirrorPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorPatchArgs) ToVirtualServiceSpecHttpMirrorPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorPatchOutput)
}

func (i VirtualServiceSpecHttpMirrorPatchArgs) ToVirtualServiceSpecHttpMirrorPatchPtrOutput() VirtualServiceSpecHttpMirrorPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorPatchArgs) ToVirtualServiceSpecHttpMirrorPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorPatchOutput).ToVirtualServiceSpecHttpMirrorPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpMirrorPatchPtrInput is an input type that accepts VirtualServiceSpecHttpMirrorPatchArgs, VirtualServiceSpecHttpMirrorPatchPtr and VirtualServiceSpecHttpMirrorPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorPatchPtrInput` via:
//
//	        VirtualServiceSpecHttpMirrorPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpMirrorPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorPatchPtrOutput() VirtualServiceSpecHttpMirrorPatchPtrOutput
	ToVirtualServiceSpecHttpMirrorPatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorPatchPtrOutput
}

type virtualServiceSpecHttpMirrorPatchPtrType VirtualServiceSpecHttpMirrorPatchArgs

func VirtualServiceSpecHttpMirrorPatchPtr(v *VirtualServiceSpecHttpMirrorPatchArgs) VirtualServiceSpecHttpMirrorPatchPtrInput {
	return (*virtualServiceSpecHttpMirrorPatchPtrType)(v)
}

func (*virtualServiceSpecHttpMirrorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirrorPatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpMirrorPatchPtrType) ToVirtualServiceSpecHttpMirrorPatchPtrOutput() VirtualServiceSpecHttpMirrorPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpMirrorPatchPtrType) ToVirtualServiceSpecHttpMirrorPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorPatchPtrOutput)
}

// Mirror HTTP traffic to a another destination in addition to forwarding the requests to the intended destination.
type VirtualServiceSpecHttpMirrorPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorPatchOutput) ToVirtualServiceSpecHttpMirrorPatchOutput() VirtualServiceSpecHttpMirrorPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorPatchOutput) ToVirtualServiceSpecHttpMirrorPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorPatchOutput) ToVirtualServiceSpecHttpMirrorPatchPtrOutput() VirtualServiceSpecHttpMirrorPatchPtrOutput {
	return o.ToVirtualServiceSpecHttpMirrorPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpMirrorPatchOutput) ToVirtualServiceSpecHttpMirrorPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpMirrorPatch) *VirtualServiceSpecHttpMirrorPatch {
		return &v
	}).(VirtualServiceSpecHttpMirrorPatchPtrOutput)
}

// The name of a service from the service registry.
func (o VirtualServiceSpecHttpMirrorPatchOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirrorPatch) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMirrorPatchOutput) Port() VirtualServiceSpecHttpMirrorPortPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirrorPatch) *VirtualServiceSpecHttpMirrorPortPatch { return v.Port }).(VirtualServiceSpecHttpMirrorPortPatchPtrOutput)
}

// The name of a subset within the service.
func (o VirtualServiceSpecHttpMirrorPatchOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirrorPatch) *string { return v.Subset }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpMirrorPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirrorPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorPatchPtrOutput) ToVirtualServiceSpecHttpMirrorPatchPtrOutput() VirtualServiceSpecHttpMirrorPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorPatchPtrOutput) ToVirtualServiceSpecHttpMirrorPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorPatchPtrOutput) Elem() VirtualServiceSpecHttpMirrorPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorPatch) VirtualServiceSpecHttpMirrorPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpMirrorPatch
		return ret
	}).(VirtualServiceSpecHttpMirrorPatchOutput)
}

// The name of a service from the service registry.
func (o VirtualServiceSpecHttpMirrorPatchPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorPatch) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMirrorPatchPtrOutput) Port() VirtualServiceSpecHttpMirrorPortPatchPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorPatch) *VirtualServiceSpecHttpMirrorPortPatch {
		if v == nil {
			return nil
		}
		return v.Port
	}).(VirtualServiceSpecHttpMirrorPortPatchPtrOutput)
}

// The name of a subset within the service.
func (o VirtualServiceSpecHttpMirrorPatchPtrOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorPatch) *string {
		if v == nil {
			return nil
		}
		return v.Subset
	}).(pulumi.StringPtrOutput)
}

// Percentage of the traffic to be mirrored by the `mirror` field.
type VirtualServiceSpecHttpMirrorPercentage struct {
	Value *float64 `pulumi:"value"`
}

// VirtualServiceSpecHttpMirrorPercentageInput is an input type that accepts VirtualServiceSpecHttpMirrorPercentageArgs and VirtualServiceSpecHttpMirrorPercentageOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorPercentageInput` via:
//
//	VirtualServiceSpecHttpMirrorPercentageArgs{...}
type VirtualServiceSpecHttpMirrorPercentageInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorPercentageOutput() VirtualServiceSpecHttpMirrorPercentageOutput
	ToVirtualServiceSpecHttpMirrorPercentageOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorPercentageOutput
}

// Percentage of the traffic to be mirrored by the `mirror` field.
type VirtualServiceSpecHttpMirrorPercentageArgs struct {
	Value pulumi.Float64PtrInput `pulumi:"value"`
}

func (VirtualServiceSpecHttpMirrorPercentageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorPercentage)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMirrorPercentageArgs) ToVirtualServiceSpecHttpMirrorPercentageOutput() VirtualServiceSpecHttpMirrorPercentageOutput {
	return i.ToVirtualServiceSpecHttpMirrorPercentageOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorPercentageArgs) ToVirtualServiceSpecHttpMirrorPercentageOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPercentageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorPercentageOutput)
}

func (i VirtualServiceSpecHttpMirrorPercentageArgs) ToVirtualServiceSpecHttpMirrorPercentagePtrOutput() VirtualServiceSpecHttpMirrorPercentagePtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorPercentagePtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorPercentageArgs) ToVirtualServiceSpecHttpMirrorPercentagePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPercentagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorPercentageOutput).ToVirtualServiceSpecHttpMirrorPercentagePtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpMirrorPercentagePtrInput is an input type that accepts VirtualServiceSpecHttpMirrorPercentageArgs, VirtualServiceSpecHttpMirrorPercentagePtr and VirtualServiceSpecHttpMirrorPercentagePtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorPercentagePtrInput` via:
//
//	        VirtualServiceSpecHttpMirrorPercentageArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpMirrorPercentagePtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorPercentagePtrOutput() VirtualServiceSpecHttpMirrorPercentagePtrOutput
	ToVirtualServiceSpecHttpMirrorPercentagePtrOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorPercentagePtrOutput
}

type virtualServiceSpecHttpMirrorPercentagePtrType VirtualServiceSpecHttpMirrorPercentageArgs

func VirtualServiceSpecHttpMirrorPercentagePtr(v *VirtualServiceSpecHttpMirrorPercentageArgs) VirtualServiceSpecHttpMirrorPercentagePtrInput {
	return (*virtualServiceSpecHttpMirrorPercentagePtrType)(v)
}

func (*virtualServiceSpecHttpMirrorPercentagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirrorPercentage)(nil)).Elem()
}

func (i *virtualServiceSpecHttpMirrorPercentagePtrType) ToVirtualServiceSpecHttpMirrorPercentagePtrOutput() VirtualServiceSpecHttpMirrorPercentagePtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorPercentagePtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpMirrorPercentagePtrType) ToVirtualServiceSpecHttpMirrorPercentagePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPercentagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorPercentagePtrOutput)
}

// Percentage of the traffic to be mirrored by the `mirror` field.
type VirtualServiceSpecHttpMirrorPercentageOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorPercentageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorPercentage)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorPercentageOutput) ToVirtualServiceSpecHttpMirrorPercentageOutput() VirtualServiceSpecHttpMirrorPercentageOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorPercentageOutput) ToVirtualServiceSpecHttpMirrorPercentageOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPercentageOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorPercentageOutput) ToVirtualServiceSpecHttpMirrorPercentagePtrOutput() VirtualServiceSpecHttpMirrorPercentagePtrOutput {
	return o.ToVirtualServiceSpecHttpMirrorPercentagePtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpMirrorPercentageOutput) ToVirtualServiceSpecHttpMirrorPercentagePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPercentagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpMirrorPercentage) *VirtualServiceSpecHttpMirrorPercentage {
		return &v
	}).(VirtualServiceSpecHttpMirrorPercentagePtrOutput)
}

func (o VirtualServiceSpecHttpMirrorPercentageOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirrorPercentage) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type VirtualServiceSpecHttpMirrorPercentagePtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorPercentagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirrorPercentage)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorPercentagePtrOutput) ToVirtualServiceSpecHttpMirrorPercentagePtrOutput() VirtualServiceSpecHttpMirrorPercentagePtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorPercentagePtrOutput) ToVirtualServiceSpecHttpMirrorPercentagePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPercentagePtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorPercentagePtrOutput) Elem() VirtualServiceSpecHttpMirrorPercentageOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorPercentage) VirtualServiceSpecHttpMirrorPercentage {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpMirrorPercentage
		return ret
	}).(VirtualServiceSpecHttpMirrorPercentageOutput)
}

func (o VirtualServiceSpecHttpMirrorPercentagePtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorPercentage) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

// Percentage of the traffic to be mirrored by the `mirror` field.
type VirtualServiceSpecHttpMirrorPercentagePatch struct {
	Value *float64 `pulumi:"value"`
}

// VirtualServiceSpecHttpMirrorPercentagePatchInput is an input type that accepts VirtualServiceSpecHttpMirrorPercentagePatchArgs and VirtualServiceSpecHttpMirrorPercentagePatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorPercentagePatchInput` via:
//
//	VirtualServiceSpecHttpMirrorPercentagePatchArgs{...}
type VirtualServiceSpecHttpMirrorPercentagePatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorPercentagePatchOutput() VirtualServiceSpecHttpMirrorPercentagePatchOutput
	ToVirtualServiceSpecHttpMirrorPercentagePatchOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorPercentagePatchOutput
}

// Percentage of the traffic to be mirrored by the `mirror` field.
type VirtualServiceSpecHttpMirrorPercentagePatchArgs struct {
	Value pulumi.Float64PtrInput `pulumi:"value"`
}

func (VirtualServiceSpecHttpMirrorPercentagePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorPercentagePatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMirrorPercentagePatchArgs) ToVirtualServiceSpecHttpMirrorPercentagePatchOutput() VirtualServiceSpecHttpMirrorPercentagePatchOutput {
	return i.ToVirtualServiceSpecHttpMirrorPercentagePatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorPercentagePatchArgs) ToVirtualServiceSpecHttpMirrorPercentagePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPercentagePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorPercentagePatchOutput)
}

func (i VirtualServiceSpecHttpMirrorPercentagePatchArgs) ToVirtualServiceSpecHttpMirrorPercentagePatchPtrOutput() VirtualServiceSpecHttpMirrorPercentagePatchPtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorPercentagePatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorPercentagePatchArgs) ToVirtualServiceSpecHttpMirrorPercentagePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPercentagePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorPercentagePatchOutput).ToVirtualServiceSpecHttpMirrorPercentagePatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpMirrorPercentagePatchPtrInput is an input type that accepts VirtualServiceSpecHttpMirrorPercentagePatchArgs, VirtualServiceSpecHttpMirrorPercentagePatchPtr and VirtualServiceSpecHttpMirrorPercentagePatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorPercentagePatchPtrInput` via:
//
//	        VirtualServiceSpecHttpMirrorPercentagePatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpMirrorPercentagePatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorPercentagePatchPtrOutput() VirtualServiceSpecHttpMirrorPercentagePatchPtrOutput
	ToVirtualServiceSpecHttpMirrorPercentagePatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorPercentagePatchPtrOutput
}

type virtualServiceSpecHttpMirrorPercentagePatchPtrType VirtualServiceSpecHttpMirrorPercentagePatchArgs

func VirtualServiceSpecHttpMirrorPercentagePatchPtr(v *VirtualServiceSpecHttpMirrorPercentagePatchArgs) VirtualServiceSpecHttpMirrorPercentagePatchPtrInput {
	return (*virtualServiceSpecHttpMirrorPercentagePatchPtrType)(v)
}

func (*virtualServiceSpecHttpMirrorPercentagePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirrorPercentagePatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpMirrorPercentagePatchPtrType) ToVirtualServiceSpecHttpMirrorPercentagePatchPtrOutput() VirtualServiceSpecHttpMirrorPercentagePatchPtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorPercentagePatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpMirrorPercentagePatchPtrType) ToVirtualServiceSpecHttpMirrorPercentagePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPercentagePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorPercentagePatchPtrOutput)
}

// Percentage of the traffic to be mirrored by the `mirror` field.
type VirtualServiceSpecHttpMirrorPercentagePatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorPercentagePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorPercentagePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorPercentagePatchOutput) ToVirtualServiceSpecHttpMirrorPercentagePatchOutput() VirtualServiceSpecHttpMirrorPercentagePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorPercentagePatchOutput) ToVirtualServiceSpecHttpMirrorPercentagePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPercentagePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorPercentagePatchOutput) ToVirtualServiceSpecHttpMirrorPercentagePatchPtrOutput() VirtualServiceSpecHttpMirrorPercentagePatchPtrOutput {
	return o.ToVirtualServiceSpecHttpMirrorPercentagePatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpMirrorPercentagePatchOutput) ToVirtualServiceSpecHttpMirrorPercentagePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPercentagePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpMirrorPercentagePatch) *VirtualServiceSpecHttpMirrorPercentagePatch {
		return &v
	}).(VirtualServiceSpecHttpMirrorPercentagePatchPtrOutput)
}

func (o VirtualServiceSpecHttpMirrorPercentagePatchOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirrorPercentagePatch) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type VirtualServiceSpecHttpMirrorPercentagePatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorPercentagePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirrorPercentagePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorPercentagePatchPtrOutput) ToVirtualServiceSpecHttpMirrorPercentagePatchPtrOutput() VirtualServiceSpecHttpMirrorPercentagePatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorPercentagePatchPtrOutput) ToVirtualServiceSpecHttpMirrorPercentagePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPercentagePatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorPercentagePatchPtrOutput) Elem() VirtualServiceSpecHttpMirrorPercentagePatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorPercentagePatch) VirtualServiceSpecHttpMirrorPercentagePatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpMirrorPercentagePatch
		return ret
	}).(VirtualServiceSpecHttpMirrorPercentagePatchOutput)
}

func (o VirtualServiceSpecHttpMirrorPercentagePatchPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorPercentagePatch) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecHttpMirrorPort struct {
	Number *int `pulumi:"number"`
}

// VirtualServiceSpecHttpMirrorPortInput is an input type that accepts VirtualServiceSpecHttpMirrorPortArgs and VirtualServiceSpecHttpMirrorPortOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorPortInput` via:
//
//	VirtualServiceSpecHttpMirrorPortArgs{...}
type VirtualServiceSpecHttpMirrorPortInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorPortOutput() VirtualServiceSpecHttpMirrorPortOutput
	ToVirtualServiceSpecHttpMirrorPortOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorPortOutput
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecHttpMirrorPortArgs struct {
	Number pulumi.IntPtrInput `pulumi:"number"`
}

func (VirtualServiceSpecHttpMirrorPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorPort)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMirrorPortArgs) ToVirtualServiceSpecHttpMirrorPortOutput() VirtualServiceSpecHttpMirrorPortOutput {
	return i.ToVirtualServiceSpecHttpMirrorPortOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorPortArgs) ToVirtualServiceSpecHttpMirrorPortOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorPortOutput)
}

func (i VirtualServiceSpecHttpMirrorPortArgs) ToVirtualServiceSpecHttpMirrorPortPtrOutput() VirtualServiceSpecHttpMirrorPortPtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorPortPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorPortArgs) ToVirtualServiceSpecHttpMirrorPortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorPortOutput).ToVirtualServiceSpecHttpMirrorPortPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpMirrorPortPtrInput is an input type that accepts VirtualServiceSpecHttpMirrorPortArgs, VirtualServiceSpecHttpMirrorPortPtr and VirtualServiceSpecHttpMirrorPortPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorPortPtrInput` via:
//
//	        VirtualServiceSpecHttpMirrorPortArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpMirrorPortPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorPortPtrOutput() VirtualServiceSpecHttpMirrorPortPtrOutput
	ToVirtualServiceSpecHttpMirrorPortPtrOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorPortPtrOutput
}

type virtualServiceSpecHttpMirrorPortPtrType VirtualServiceSpecHttpMirrorPortArgs

func VirtualServiceSpecHttpMirrorPortPtr(v *VirtualServiceSpecHttpMirrorPortArgs) VirtualServiceSpecHttpMirrorPortPtrInput {
	return (*virtualServiceSpecHttpMirrorPortPtrType)(v)
}

func (*virtualServiceSpecHttpMirrorPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirrorPort)(nil)).Elem()
}

func (i *virtualServiceSpecHttpMirrorPortPtrType) ToVirtualServiceSpecHttpMirrorPortPtrOutput() VirtualServiceSpecHttpMirrorPortPtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorPortPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpMirrorPortPtrType) ToVirtualServiceSpecHttpMirrorPortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorPortPtrOutput)
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecHttpMirrorPortOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorPort)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorPortOutput) ToVirtualServiceSpecHttpMirrorPortOutput() VirtualServiceSpecHttpMirrorPortOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorPortOutput) ToVirtualServiceSpecHttpMirrorPortOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPortOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorPortOutput) ToVirtualServiceSpecHttpMirrorPortPtrOutput() VirtualServiceSpecHttpMirrorPortPtrOutput {
	return o.ToVirtualServiceSpecHttpMirrorPortPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpMirrorPortOutput) ToVirtualServiceSpecHttpMirrorPortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpMirrorPort) *VirtualServiceSpecHttpMirrorPort {
		return &v
	}).(VirtualServiceSpecHttpMirrorPortPtrOutput)
}

func (o VirtualServiceSpecHttpMirrorPortOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirrorPort) *int { return v.Number }).(pulumi.IntPtrOutput)
}

type VirtualServiceSpecHttpMirrorPortPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirrorPort)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorPortPtrOutput) ToVirtualServiceSpecHttpMirrorPortPtrOutput() VirtualServiceSpecHttpMirrorPortPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorPortPtrOutput) ToVirtualServiceSpecHttpMirrorPortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPortPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorPortPtrOutput) Elem() VirtualServiceSpecHttpMirrorPortOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorPort) VirtualServiceSpecHttpMirrorPort {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpMirrorPort
		return ret
	}).(VirtualServiceSpecHttpMirrorPortOutput)
}

func (o VirtualServiceSpecHttpMirrorPortPtrOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorPort) *int {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.IntPtrOutput)
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecHttpMirrorPortPatch struct {
	Number *int `pulumi:"number"`
}

// VirtualServiceSpecHttpMirrorPortPatchInput is an input type that accepts VirtualServiceSpecHttpMirrorPortPatchArgs and VirtualServiceSpecHttpMirrorPortPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorPortPatchInput` via:
//
//	VirtualServiceSpecHttpMirrorPortPatchArgs{...}
type VirtualServiceSpecHttpMirrorPortPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorPortPatchOutput() VirtualServiceSpecHttpMirrorPortPatchOutput
	ToVirtualServiceSpecHttpMirrorPortPatchOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorPortPatchOutput
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecHttpMirrorPortPatchArgs struct {
	Number pulumi.IntPtrInput `pulumi:"number"`
}

func (VirtualServiceSpecHttpMirrorPortPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorPortPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMirrorPortPatchArgs) ToVirtualServiceSpecHttpMirrorPortPatchOutput() VirtualServiceSpecHttpMirrorPortPatchOutput {
	return i.ToVirtualServiceSpecHttpMirrorPortPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorPortPatchArgs) ToVirtualServiceSpecHttpMirrorPortPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPortPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorPortPatchOutput)
}

func (i VirtualServiceSpecHttpMirrorPortPatchArgs) ToVirtualServiceSpecHttpMirrorPortPatchPtrOutput() VirtualServiceSpecHttpMirrorPortPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorPortPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorPortPatchArgs) ToVirtualServiceSpecHttpMirrorPortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorPortPatchOutput).ToVirtualServiceSpecHttpMirrorPortPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpMirrorPortPatchPtrInput is an input type that accepts VirtualServiceSpecHttpMirrorPortPatchArgs, VirtualServiceSpecHttpMirrorPortPatchPtr and VirtualServiceSpecHttpMirrorPortPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorPortPatchPtrInput` via:
//
//	        VirtualServiceSpecHttpMirrorPortPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpMirrorPortPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorPortPatchPtrOutput() VirtualServiceSpecHttpMirrorPortPatchPtrOutput
	ToVirtualServiceSpecHttpMirrorPortPatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorPortPatchPtrOutput
}

type virtualServiceSpecHttpMirrorPortPatchPtrType VirtualServiceSpecHttpMirrorPortPatchArgs

func VirtualServiceSpecHttpMirrorPortPatchPtr(v *VirtualServiceSpecHttpMirrorPortPatchArgs) VirtualServiceSpecHttpMirrorPortPatchPtrInput {
	return (*virtualServiceSpecHttpMirrorPortPatchPtrType)(v)
}

func (*virtualServiceSpecHttpMirrorPortPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirrorPortPatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpMirrorPortPatchPtrType) ToVirtualServiceSpecHttpMirrorPortPatchPtrOutput() VirtualServiceSpecHttpMirrorPortPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorPortPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpMirrorPortPatchPtrType) ToVirtualServiceSpecHttpMirrorPortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorPortPatchPtrOutput)
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecHttpMirrorPortPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorPortPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorPortPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorPortPatchOutput) ToVirtualServiceSpecHttpMirrorPortPatchOutput() VirtualServiceSpecHttpMirrorPortPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorPortPatchOutput) ToVirtualServiceSpecHttpMirrorPortPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPortPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorPortPatchOutput) ToVirtualServiceSpecHttpMirrorPortPatchPtrOutput() VirtualServiceSpecHttpMirrorPortPatchPtrOutput {
	return o.ToVirtualServiceSpecHttpMirrorPortPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpMirrorPortPatchOutput) ToVirtualServiceSpecHttpMirrorPortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPortPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpMirrorPortPatch) *VirtualServiceSpecHttpMirrorPortPatch {
		return &v
	}).(VirtualServiceSpecHttpMirrorPortPatchPtrOutput)
}

func (o VirtualServiceSpecHttpMirrorPortPatchOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirrorPortPatch) *int { return v.Number }).(pulumi.IntPtrOutput)
}

type VirtualServiceSpecHttpMirrorPortPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorPortPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirrorPortPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorPortPatchPtrOutput) ToVirtualServiceSpecHttpMirrorPortPatchPtrOutput() VirtualServiceSpecHttpMirrorPortPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorPortPatchPtrOutput) ToVirtualServiceSpecHttpMirrorPortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorPortPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorPortPatchPtrOutput) Elem() VirtualServiceSpecHttpMirrorPortPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorPortPatch) VirtualServiceSpecHttpMirrorPortPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpMirrorPortPatch
		return ret
	}).(VirtualServiceSpecHttpMirrorPortPatchOutput)
}

func (o VirtualServiceSpecHttpMirrorPortPatchPtrOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorPortPatch) *int {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.IntPtrOutput)
}

type VirtualServiceSpecHttpMirrors struct {
	Destination *VirtualServiceSpecHttpMirrorsDestination `pulumi:"destination"`
	Percentage  *VirtualServiceSpecHttpMirrorsPercentage  `pulumi:"percentage"`
}

// VirtualServiceSpecHttpMirrorsInput is an input type that accepts VirtualServiceSpecHttpMirrorsArgs and VirtualServiceSpecHttpMirrorsOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorsInput` via:
//
//	VirtualServiceSpecHttpMirrorsArgs{...}
type VirtualServiceSpecHttpMirrorsInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorsOutput() VirtualServiceSpecHttpMirrorsOutput
	ToVirtualServiceSpecHttpMirrorsOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorsOutput
}

type VirtualServiceSpecHttpMirrorsArgs struct {
	Destination VirtualServiceSpecHttpMirrorsDestinationPtrInput `pulumi:"destination"`
	Percentage  VirtualServiceSpecHttpMirrorsPercentagePtrInput  `pulumi:"percentage"`
}

func (VirtualServiceSpecHttpMirrorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrors)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMirrorsArgs) ToVirtualServiceSpecHttpMirrorsOutput() VirtualServiceSpecHttpMirrorsOutput {
	return i.ToVirtualServiceSpecHttpMirrorsOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorsArgs) ToVirtualServiceSpecHttpMirrorsOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorsOutput)
}

// VirtualServiceSpecHttpMirrorsArrayInput is an input type that accepts VirtualServiceSpecHttpMirrorsArray and VirtualServiceSpecHttpMirrorsArrayOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorsArrayInput` via:
//
//	VirtualServiceSpecHttpMirrorsArray{ VirtualServiceSpecHttpMirrorsArgs{...} }
type VirtualServiceSpecHttpMirrorsArrayInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorsArrayOutput() VirtualServiceSpecHttpMirrorsArrayOutput
	ToVirtualServiceSpecHttpMirrorsArrayOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorsArrayOutput
}

type VirtualServiceSpecHttpMirrorsArray []VirtualServiceSpecHttpMirrorsInput

func (VirtualServiceSpecHttpMirrorsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecHttpMirrors)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMirrorsArray) ToVirtualServiceSpecHttpMirrorsArrayOutput() VirtualServiceSpecHttpMirrorsArrayOutput {
	return i.ToVirtualServiceSpecHttpMirrorsArrayOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorsArray) ToVirtualServiceSpecHttpMirrorsArrayOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorsArrayOutput)
}

type VirtualServiceSpecHttpMirrorsOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrors)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorsOutput) ToVirtualServiceSpecHttpMirrorsOutput() VirtualServiceSpecHttpMirrorsOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsOutput) ToVirtualServiceSpecHttpMirrorsOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsOutput) Destination() VirtualServiceSpecHttpMirrorsDestinationPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirrors) *VirtualServiceSpecHttpMirrorsDestination { return v.Destination }).(VirtualServiceSpecHttpMirrorsDestinationPtrOutput)
}

func (o VirtualServiceSpecHttpMirrorsOutput) Percentage() VirtualServiceSpecHttpMirrorsPercentagePtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirrors) *VirtualServiceSpecHttpMirrorsPercentage { return v.Percentage }).(VirtualServiceSpecHttpMirrorsPercentagePtrOutput)
}

type VirtualServiceSpecHttpMirrorsArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecHttpMirrors)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorsArrayOutput) ToVirtualServiceSpecHttpMirrorsArrayOutput() VirtualServiceSpecHttpMirrorsArrayOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsArrayOutput) ToVirtualServiceSpecHttpMirrorsArrayOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsArrayOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsArrayOutput) Index(i pulumi.IntInput) VirtualServiceSpecHttpMirrorsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceSpecHttpMirrors {
		return vs[0].([]VirtualServiceSpecHttpMirrors)[vs[1].(int)]
	}).(VirtualServiceSpecHttpMirrorsOutput)
}

// Destination specifies the target of the mirror operation.
type VirtualServiceSpecHttpMirrorsDestination struct {
	// The name of a service from the service registry.
	Host *string                                       `pulumi:"host"`
	Port *VirtualServiceSpecHttpMirrorsDestinationPort `pulumi:"port"`
	// The name of a subset within the service.
	Subset *string `pulumi:"subset"`
}

// VirtualServiceSpecHttpMirrorsDestinationInput is an input type that accepts VirtualServiceSpecHttpMirrorsDestinationArgs and VirtualServiceSpecHttpMirrorsDestinationOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorsDestinationInput` via:
//
//	VirtualServiceSpecHttpMirrorsDestinationArgs{...}
type VirtualServiceSpecHttpMirrorsDestinationInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorsDestinationOutput() VirtualServiceSpecHttpMirrorsDestinationOutput
	ToVirtualServiceSpecHttpMirrorsDestinationOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorsDestinationOutput
}

// Destination specifies the target of the mirror operation.
type VirtualServiceSpecHttpMirrorsDestinationArgs struct {
	// The name of a service from the service registry.
	Host pulumi.StringPtrInput                                `pulumi:"host"`
	Port VirtualServiceSpecHttpMirrorsDestinationPortPtrInput `pulumi:"port"`
	// The name of a subset within the service.
	Subset pulumi.StringPtrInput `pulumi:"subset"`
}

func (VirtualServiceSpecHttpMirrorsDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorsDestination)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMirrorsDestinationArgs) ToVirtualServiceSpecHttpMirrorsDestinationOutput() VirtualServiceSpecHttpMirrorsDestinationOutput {
	return i.ToVirtualServiceSpecHttpMirrorsDestinationOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorsDestinationArgs) ToVirtualServiceSpecHttpMirrorsDestinationOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorsDestinationOutput)
}

func (i VirtualServiceSpecHttpMirrorsDestinationArgs) ToVirtualServiceSpecHttpMirrorsDestinationPtrOutput() VirtualServiceSpecHttpMirrorsDestinationPtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorsDestinationPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorsDestinationArgs) ToVirtualServiceSpecHttpMirrorsDestinationPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorsDestinationOutput).ToVirtualServiceSpecHttpMirrorsDestinationPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpMirrorsDestinationPtrInput is an input type that accepts VirtualServiceSpecHttpMirrorsDestinationArgs, VirtualServiceSpecHttpMirrorsDestinationPtr and VirtualServiceSpecHttpMirrorsDestinationPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorsDestinationPtrInput` via:
//
//	        VirtualServiceSpecHttpMirrorsDestinationArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpMirrorsDestinationPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorsDestinationPtrOutput() VirtualServiceSpecHttpMirrorsDestinationPtrOutput
	ToVirtualServiceSpecHttpMirrorsDestinationPtrOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorsDestinationPtrOutput
}

type virtualServiceSpecHttpMirrorsDestinationPtrType VirtualServiceSpecHttpMirrorsDestinationArgs

func VirtualServiceSpecHttpMirrorsDestinationPtr(v *VirtualServiceSpecHttpMirrorsDestinationArgs) VirtualServiceSpecHttpMirrorsDestinationPtrInput {
	return (*virtualServiceSpecHttpMirrorsDestinationPtrType)(v)
}

func (*virtualServiceSpecHttpMirrorsDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirrorsDestination)(nil)).Elem()
}

func (i *virtualServiceSpecHttpMirrorsDestinationPtrType) ToVirtualServiceSpecHttpMirrorsDestinationPtrOutput() VirtualServiceSpecHttpMirrorsDestinationPtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorsDestinationPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpMirrorsDestinationPtrType) ToVirtualServiceSpecHttpMirrorsDestinationPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorsDestinationPtrOutput)
}

// Destination specifies the target of the mirror operation.
type VirtualServiceSpecHttpMirrorsDestinationOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorsDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorsDestination)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorsDestinationOutput) ToVirtualServiceSpecHttpMirrorsDestinationOutput() VirtualServiceSpecHttpMirrorsDestinationOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsDestinationOutput) ToVirtualServiceSpecHttpMirrorsDestinationOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsDestinationOutput) ToVirtualServiceSpecHttpMirrorsDestinationPtrOutput() VirtualServiceSpecHttpMirrorsDestinationPtrOutput {
	return o.ToVirtualServiceSpecHttpMirrorsDestinationPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpMirrorsDestinationOutput) ToVirtualServiceSpecHttpMirrorsDestinationPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpMirrorsDestination) *VirtualServiceSpecHttpMirrorsDestination {
		return &v
	}).(VirtualServiceSpecHttpMirrorsDestinationPtrOutput)
}

// The name of a service from the service registry.
func (o VirtualServiceSpecHttpMirrorsDestinationOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirrorsDestination) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMirrorsDestinationOutput) Port() VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirrorsDestination) *VirtualServiceSpecHttpMirrorsDestinationPort {
		return v.Port
	}).(VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput)
}

// The name of a subset within the service.
func (o VirtualServiceSpecHttpMirrorsDestinationOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirrorsDestination) *string { return v.Subset }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpMirrorsDestinationPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorsDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirrorsDestination)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorsDestinationPtrOutput) ToVirtualServiceSpecHttpMirrorsDestinationPtrOutput() VirtualServiceSpecHttpMirrorsDestinationPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsDestinationPtrOutput) ToVirtualServiceSpecHttpMirrorsDestinationPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsDestinationPtrOutput) Elem() VirtualServiceSpecHttpMirrorsDestinationOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorsDestination) VirtualServiceSpecHttpMirrorsDestination {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpMirrorsDestination
		return ret
	}).(VirtualServiceSpecHttpMirrorsDestinationOutput)
}

// The name of a service from the service registry.
func (o VirtualServiceSpecHttpMirrorsDestinationPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorsDestination) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMirrorsDestinationPtrOutput) Port() VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorsDestination) *VirtualServiceSpecHttpMirrorsDestinationPort {
		if v == nil {
			return nil
		}
		return v.Port
	}).(VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput)
}

// The name of a subset within the service.
func (o VirtualServiceSpecHttpMirrorsDestinationPtrOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorsDestination) *string {
		if v == nil {
			return nil
		}
		return v.Subset
	}).(pulumi.StringPtrOutput)
}

// Destination specifies the target of the mirror operation.
type VirtualServiceSpecHttpMirrorsDestinationPatch struct {
	// The name of a service from the service registry.
	Host *string                                            `pulumi:"host"`
	Port *VirtualServiceSpecHttpMirrorsDestinationPortPatch `pulumi:"port"`
	// The name of a subset within the service.
	Subset *string `pulumi:"subset"`
}

// VirtualServiceSpecHttpMirrorsDestinationPatchInput is an input type that accepts VirtualServiceSpecHttpMirrorsDestinationPatchArgs and VirtualServiceSpecHttpMirrorsDestinationPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorsDestinationPatchInput` via:
//
//	VirtualServiceSpecHttpMirrorsDestinationPatchArgs{...}
type VirtualServiceSpecHttpMirrorsDestinationPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorsDestinationPatchOutput() VirtualServiceSpecHttpMirrorsDestinationPatchOutput
	ToVirtualServiceSpecHttpMirrorsDestinationPatchOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorsDestinationPatchOutput
}

// Destination specifies the target of the mirror operation.
type VirtualServiceSpecHttpMirrorsDestinationPatchArgs struct {
	// The name of a service from the service registry.
	Host pulumi.StringPtrInput                                     `pulumi:"host"`
	Port VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrInput `pulumi:"port"`
	// The name of a subset within the service.
	Subset pulumi.StringPtrInput `pulumi:"subset"`
}

func (VirtualServiceSpecHttpMirrorsDestinationPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorsDestinationPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMirrorsDestinationPatchArgs) ToVirtualServiceSpecHttpMirrorsDestinationPatchOutput() VirtualServiceSpecHttpMirrorsDestinationPatchOutput {
	return i.ToVirtualServiceSpecHttpMirrorsDestinationPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorsDestinationPatchArgs) ToVirtualServiceSpecHttpMirrorsDestinationPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorsDestinationPatchOutput)
}

func (i VirtualServiceSpecHttpMirrorsDestinationPatchArgs) ToVirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput() VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorsDestinationPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorsDestinationPatchArgs) ToVirtualServiceSpecHttpMirrorsDestinationPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorsDestinationPatchOutput).ToVirtualServiceSpecHttpMirrorsDestinationPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpMirrorsDestinationPatchPtrInput is an input type that accepts VirtualServiceSpecHttpMirrorsDestinationPatchArgs, VirtualServiceSpecHttpMirrorsDestinationPatchPtr and VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorsDestinationPatchPtrInput` via:
//
//	        VirtualServiceSpecHttpMirrorsDestinationPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpMirrorsDestinationPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput() VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput
	ToVirtualServiceSpecHttpMirrorsDestinationPatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput
}

type virtualServiceSpecHttpMirrorsDestinationPatchPtrType VirtualServiceSpecHttpMirrorsDestinationPatchArgs

func VirtualServiceSpecHttpMirrorsDestinationPatchPtr(v *VirtualServiceSpecHttpMirrorsDestinationPatchArgs) VirtualServiceSpecHttpMirrorsDestinationPatchPtrInput {
	return (*virtualServiceSpecHttpMirrorsDestinationPatchPtrType)(v)
}

func (*virtualServiceSpecHttpMirrorsDestinationPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirrorsDestinationPatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpMirrorsDestinationPatchPtrType) ToVirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput() VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorsDestinationPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpMirrorsDestinationPatchPtrType) ToVirtualServiceSpecHttpMirrorsDestinationPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput)
}

// Destination specifies the target of the mirror operation.
type VirtualServiceSpecHttpMirrorsDestinationPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorsDestinationPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorsDestinationPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorsDestinationPatchOutput) ToVirtualServiceSpecHttpMirrorsDestinationPatchOutput() VirtualServiceSpecHttpMirrorsDestinationPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsDestinationPatchOutput) ToVirtualServiceSpecHttpMirrorsDestinationPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsDestinationPatchOutput) ToVirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput() VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput {
	return o.ToVirtualServiceSpecHttpMirrorsDestinationPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpMirrorsDestinationPatchOutput) ToVirtualServiceSpecHttpMirrorsDestinationPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpMirrorsDestinationPatch) *VirtualServiceSpecHttpMirrorsDestinationPatch {
		return &v
	}).(VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput)
}

// The name of a service from the service registry.
func (o VirtualServiceSpecHttpMirrorsDestinationPatchOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirrorsDestinationPatch) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMirrorsDestinationPatchOutput) Port() VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirrorsDestinationPatch) *VirtualServiceSpecHttpMirrorsDestinationPortPatch {
		return v.Port
	}).(VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput)
}

// The name of a subset within the service.
func (o VirtualServiceSpecHttpMirrorsDestinationPatchOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirrorsDestinationPatch) *string { return v.Subset }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirrorsDestinationPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput) ToVirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput() VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput) ToVirtualServiceSpecHttpMirrorsDestinationPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput) Elem() VirtualServiceSpecHttpMirrorsDestinationPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorsDestinationPatch) VirtualServiceSpecHttpMirrorsDestinationPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpMirrorsDestinationPatch
		return ret
	}).(VirtualServiceSpecHttpMirrorsDestinationPatchOutput)
}

// The name of a service from the service registry.
func (o VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorsDestinationPatch) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput) Port() VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorsDestinationPatch) *VirtualServiceSpecHttpMirrorsDestinationPortPatch {
		if v == nil {
			return nil
		}
		return v.Port
	}).(VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput)
}

// The name of a subset within the service.
func (o VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorsDestinationPatch) *string {
		if v == nil {
			return nil
		}
		return v.Subset
	}).(pulumi.StringPtrOutput)
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecHttpMirrorsDestinationPort struct {
	Number *int `pulumi:"number"`
}

// VirtualServiceSpecHttpMirrorsDestinationPortInput is an input type that accepts VirtualServiceSpecHttpMirrorsDestinationPortArgs and VirtualServiceSpecHttpMirrorsDestinationPortOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorsDestinationPortInput` via:
//
//	VirtualServiceSpecHttpMirrorsDestinationPortArgs{...}
type VirtualServiceSpecHttpMirrorsDestinationPortInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorsDestinationPortOutput() VirtualServiceSpecHttpMirrorsDestinationPortOutput
	ToVirtualServiceSpecHttpMirrorsDestinationPortOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorsDestinationPortOutput
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecHttpMirrorsDestinationPortArgs struct {
	Number pulumi.IntPtrInput `pulumi:"number"`
}

func (VirtualServiceSpecHttpMirrorsDestinationPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorsDestinationPort)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMirrorsDestinationPortArgs) ToVirtualServiceSpecHttpMirrorsDestinationPortOutput() VirtualServiceSpecHttpMirrorsDestinationPortOutput {
	return i.ToVirtualServiceSpecHttpMirrorsDestinationPortOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorsDestinationPortArgs) ToVirtualServiceSpecHttpMirrorsDestinationPortOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorsDestinationPortOutput)
}

func (i VirtualServiceSpecHttpMirrorsDestinationPortArgs) ToVirtualServiceSpecHttpMirrorsDestinationPortPtrOutput() VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorsDestinationPortPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorsDestinationPortArgs) ToVirtualServiceSpecHttpMirrorsDestinationPortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorsDestinationPortOutput).ToVirtualServiceSpecHttpMirrorsDestinationPortPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpMirrorsDestinationPortPtrInput is an input type that accepts VirtualServiceSpecHttpMirrorsDestinationPortArgs, VirtualServiceSpecHttpMirrorsDestinationPortPtr and VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorsDestinationPortPtrInput` via:
//
//	        VirtualServiceSpecHttpMirrorsDestinationPortArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpMirrorsDestinationPortPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorsDestinationPortPtrOutput() VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput
	ToVirtualServiceSpecHttpMirrorsDestinationPortPtrOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput
}

type virtualServiceSpecHttpMirrorsDestinationPortPtrType VirtualServiceSpecHttpMirrorsDestinationPortArgs

func VirtualServiceSpecHttpMirrorsDestinationPortPtr(v *VirtualServiceSpecHttpMirrorsDestinationPortArgs) VirtualServiceSpecHttpMirrorsDestinationPortPtrInput {
	return (*virtualServiceSpecHttpMirrorsDestinationPortPtrType)(v)
}

func (*virtualServiceSpecHttpMirrorsDestinationPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirrorsDestinationPort)(nil)).Elem()
}

func (i *virtualServiceSpecHttpMirrorsDestinationPortPtrType) ToVirtualServiceSpecHttpMirrorsDestinationPortPtrOutput() VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorsDestinationPortPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpMirrorsDestinationPortPtrType) ToVirtualServiceSpecHttpMirrorsDestinationPortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput)
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecHttpMirrorsDestinationPortOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorsDestinationPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorsDestinationPort)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorsDestinationPortOutput) ToVirtualServiceSpecHttpMirrorsDestinationPortOutput() VirtualServiceSpecHttpMirrorsDestinationPortOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsDestinationPortOutput) ToVirtualServiceSpecHttpMirrorsDestinationPortOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationPortOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsDestinationPortOutput) ToVirtualServiceSpecHttpMirrorsDestinationPortPtrOutput() VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput {
	return o.ToVirtualServiceSpecHttpMirrorsDestinationPortPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpMirrorsDestinationPortOutput) ToVirtualServiceSpecHttpMirrorsDestinationPortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpMirrorsDestinationPort) *VirtualServiceSpecHttpMirrorsDestinationPort {
		return &v
	}).(VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput)
}

func (o VirtualServiceSpecHttpMirrorsDestinationPortOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirrorsDestinationPort) *int { return v.Number }).(pulumi.IntPtrOutput)
}

type VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirrorsDestinationPort)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput) ToVirtualServiceSpecHttpMirrorsDestinationPortPtrOutput() VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput) ToVirtualServiceSpecHttpMirrorsDestinationPortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput) Elem() VirtualServiceSpecHttpMirrorsDestinationPortOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorsDestinationPort) VirtualServiceSpecHttpMirrorsDestinationPort {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpMirrorsDestinationPort
		return ret
	}).(VirtualServiceSpecHttpMirrorsDestinationPortOutput)
}

func (o VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorsDestinationPort) *int {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.IntPtrOutput)
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecHttpMirrorsDestinationPortPatch struct {
	Number *int `pulumi:"number"`
}

// VirtualServiceSpecHttpMirrorsDestinationPortPatchInput is an input type that accepts VirtualServiceSpecHttpMirrorsDestinationPortPatchArgs and VirtualServiceSpecHttpMirrorsDestinationPortPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorsDestinationPortPatchInput` via:
//
//	VirtualServiceSpecHttpMirrorsDestinationPortPatchArgs{...}
type VirtualServiceSpecHttpMirrorsDestinationPortPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorsDestinationPortPatchOutput() VirtualServiceSpecHttpMirrorsDestinationPortPatchOutput
	ToVirtualServiceSpecHttpMirrorsDestinationPortPatchOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorsDestinationPortPatchOutput
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecHttpMirrorsDestinationPortPatchArgs struct {
	Number pulumi.IntPtrInput `pulumi:"number"`
}

func (VirtualServiceSpecHttpMirrorsDestinationPortPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorsDestinationPortPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMirrorsDestinationPortPatchArgs) ToVirtualServiceSpecHttpMirrorsDestinationPortPatchOutput() VirtualServiceSpecHttpMirrorsDestinationPortPatchOutput {
	return i.ToVirtualServiceSpecHttpMirrorsDestinationPortPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorsDestinationPortPatchArgs) ToVirtualServiceSpecHttpMirrorsDestinationPortPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationPortPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorsDestinationPortPatchOutput)
}

func (i VirtualServiceSpecHttpMirrorsDestinationPortPatchArgs) ToVirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput() VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorsDestinationPortPatchArgs) ToVirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorsDestinationPortPatchOutput).ToVirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrInput is an input type that accepts VirtualServiceSpecHttpMirrorsDestinationPortPatchArgs, VirtualServiceSpecHttpMirrorsDestinationPortPatchPtr and VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrInput` via:
//
//	        VirtualServiceSpecHttpMirrorsDestinationPortPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput() VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput
	ToVirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput
}

type virtualServiceSpecHttpMirrorsDestinationPortPatchPtrType VirtualServiceSpecHttpMirrorsDestinationPortPatchArgs

func VirtualServiceSpecHttpMirrorsDestinationPortPatchPtr(v *VirtualServiceSpecHttpMirrorsDestinationPortPatchArgs) VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrInput {
	return (*virtualServiceSpecHttpMirrorsDestinationPortPatchPtrType)(v)
}

func (*virtualServiceSpecHttpMirrorsDestinationPortPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirrorsDestinationPortPatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpMirrorsDestinationPortPatchPtrType) ToVirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput() VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpMirrorsDestinationPortPatchPtrType) ToVirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput)
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecHttpMirrorsDestinationPortPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorsDestinationPortPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorsDestinationPortPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorsDestinationPortPatchOutput) ToVirtualServiceSpecHttpMirrorsDestinationPortPatchOutput() VirtualServiceSpecHttpMirrorsDestinationPortPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsDestinationPortPatchOutput) ToVirtualServiceSpecHttpMirrorsDestinationPortPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationPortPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsDestinationPortPatchOutput) ToVirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput() VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput {
	return o.ToVirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpMirrorsDestinationPortPatchOutput) ToVirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpMirrorsDestinationPortPatch) *VirtualServiceSpecHttpMirrorsDestinationPortPatch {
		return &v
	}).(VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput)
}

func (o VirtualServiceSpecHttpMirrorsDestinationPortPatchOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirrorsDestinationPortPatch) *int { return v.Number }).(pulumi.IntPtrOutput)
}

type VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirrorsDestinationPortPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput) ToVirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput() VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput) ToVirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput) Elem() VirtualServiceSpecHttpMirrorsDestinationPortPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorsDestinationPortPatch) VirtualServiceSpecHttpMirrorsDestinationPortPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpMirrorsDestinationPortPatch
		return ret
	}).(VirtualServiceSpecHttpMirrorsDestinationPortPatchOutput)
}

func (o VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorsDestinationPortPatch) *int {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.IntPtrOutput)
}

type VirtualServiceSpecHttpMirrorsPatch struct {
	Destination *VirtualServiceSpecHttpMirrorsDestinationPatch `pulumi:"destination"`
	Percentage  *VirtualServiceSpecHttpMirrorsPercentagePatch  `pulumi:"percentage"`
}

// VirtualServiceSpecHttpMirrorsPatchInput is an input type that accepts VirtualServiceSpecHttpMirrorsPatchArgs and VirtualServiceSpecHttpMirrorsPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorsPatchInput` via:
//
//	VirtualServiceSpecHttpMirrorsPatchArgs{...}
type VirtualServiceSpecHttpMirrorsPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorsPatchOutput() VirtualServiceSpecHttpMirrorsPatchOutput
	ToVirtualServiceSpecHttpMirrorsPatchOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorsPatchOutput
}

type VirtualServiceSpecHttpMirrorsPatchArgs struct {
	Destination VirtualServiceSpecHttpMirrorsDestinationPatchPtrInput `pulumi:"destination"`
	Percentage  VirtualServiceSpecHttpMirrorsPercentagePatchPtrInput  `pulumi:"percentage"`
}

func (VirtualServiceSpecHttpMirrorsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorsPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMirrorsPatchArgs) ToVirtualServiceSpecHttpMirrorsPatchOutput() VirtualServiceSpecHttpMirrorsPatchOutput {
	return i.ToVirtualServiceSpecHttpMirrorsPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorsPatchArgs) ToVirtualServiceSpecHttpMirrorsPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorsPatchOutput)
}

// VirtualServiceSpecHttpMirrorsPatchArrayInput is an input type that accepts VirtualServiceSpecHttpMirrorsPatchArray and VirtualServiceSpecHttpMirrorsPatchArrayOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorsPatchArrayInput` via:
//
//	VirtualServiceSpecHttpMirrorsPatchArray{ VirtualServiceSpecHttpMirrorsPatchArgs{...} }
type VirtualServiceSpecHttpMirrorsPatchArrayInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorsPatchArrayOutput() VirtualServiceSpecHttpMirrorsPatchArrayOutput
	ToVirtualServiceSpecHttpMirrorsPatchArrayOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorsPatchArrayOutput
}

type VirtualServiceSpecHttpMirrorsPatchArray []VirtualServiceSpecHttpMirrorsPatchInput

func (VirtualServiceSpecHttpMirrorsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecHttpMirrorsPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMirrorsPatchArray) ToVirtualServiceSpecHttpMirrorsPatchArrayOutput() VirtualServiceSpecHttpMirrorsPatchArrayOutput {
	return i.ToVirtualServiceSpecHttpMirrorsPatchArrayOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorsPatchArray) ToVirtualServiceSpecHttpMirrorsPatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorsPatchArrayOutput)
}

type VirtualServiceSpecHttpMirrorsPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorsPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorsPatchOutput) ToVirtualServiceSpecHttpMirrorsPatchOutput() VirtualServiceSpecHttpMirrorsPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsPatchOutput) ToVirtualServiceSpecHttpMirrorsPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsPatchOutput) Destination() VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirrorsPatch) *VirtualServiceSpecHttpMirrorsDestinationPatch {
		return v.Destination
	}).(VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput)
}

func (o VirtualServiceSpecHttpMirrorsPatchOutput) Percentage() VirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirrorsPatch) *VirtualServiceSpecHttpMirrorsPercentagePatch {
		return v.Percentage
	}).(VirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput)
}

type VirtualServiceSpecHttpMirrorsPatchArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecHttpMirrorsPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorsPatchArrayOutput) ToVirtualServiceSpecHttpMirrorsPatchArrayOutput() VirtualServiceSpecHttpMirrorsPatchArrayOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsPatchArrayOutput) ToVirtualServiceSpecHttpMirrorsPatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsPatchArrayOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsPatchArrayOutput) Index(i pulumi.IntInput) VirtualServiceSpecHttpMirrorsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceSpecHttpMirrorsPatch {
		return vs[0].([]VirtualServiceSpecHttpMirrorsPatch)[vs[1].(int)]
	}).(VirtualServiceSpecHttpMirrorsPatchOutput)
}

// Percentage of the traffic to be mirrored by the `destination` field.
type VirtualServiceSpecHttpMirrorsPercentage struct {
	Value *float64 `pulumi:"value"`
}

// VirtualServiceSpecHttpMirrorsPercentageInput is an input type that accepts VirtualServiceSpecHttpMirrorsPercentageArgs and VirtualServiceSpecHttpMirrorsPercentageOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorsPercentageInput` via:
//
//	VirtualServiceSpecHttpMirrorsPercentageArgs{...}
type VirtualServiceSpecHttpMirrorsPercentageInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorsPercentageOutput() VirtualServiceSpecHttpMirrorsPercentageOutput
	ToVirtualServiceSpecHttpMirrorsPercentageOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorsPercentageOutput
}

// Percentage of the traffic to be mirrored by the `destination` field.
type VirtualServiceSpecHttpMirrorsPercentageArgs struct {
	Value pulumi.Float64PtrInput `pulumi:"value"`
}

func (VirtualServiceSpecHttpMirrorsPercentageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorsPercentage)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMirrorsPercentageArgs) ToVirtualServiceSpecHttpMirrorsPercentageOutput() VirtualServiceSpecHttpMirrorsPercentageOutput {
	return i.ToVirtualServiceSpecHttpMirrorsPercentageOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorsPercentageArgs) ToVirtualServiceSpecHttpMirrorsPercentageOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsPercentageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorsPercentageOutput)
}

func (i VirtualServiceSpecHttpMirrorsPercentageArgs) ToVirtualServiceSpecHttpMirrorsPercentagePtrOutput() VirtualServiceSpecHttpMirrorsPercentagePtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorsPercentagePtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorsPercentageArgs) ToVirtualServiceSpecHttpMirrorsPercentagePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsPercentagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorsPercentageOutput).ToVirtualServiceSpecHttpMirrorsPercentagePtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpMirrorsPercentagePtrInput is an input type that accepts VirtualServiceSpecHttpMirrorsPercentageArgs, VirtualServiceSpecHttpMirrorsPercentagePtr and VirtualServiceSpecHttpMirrorsPercentagePtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorsPercentagePtrInput` via:
//
//	        VirtualServiceSpecHttpMirrorsPercentageArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpMirrorsPercentagePtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorsPercentagePtrOutput() VirtualServiceSpecHttpMirrorsPercentagePtrOutput
	ToVirtualServiceSpecHttpMirrorsPercentagePtrOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorsPercentagePtrOutput
}

type virtualServiceSpecHttpMirrorsPercentagePtrType VirtualServiceSpecHttpMirrorsPercentageArgs

func VirtualServiceSpecHttpMirrorsPercentagePtr(v *VirtualServiceSpecHttpMirrorsPercentageArgs) VirtualServiceSpecHttpMirrorsPercentagePtrInput {
	return (*virtualServiceSpecHttpMirrorsPercentagePtrType)(v)
}

func (*virtualServiceSpecHttpMirrorsPercentagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirrorsPercentage)(nil)).Elem()
}

func (i *virtualServiceSpecHttpMirrorsPercentagePtrType) ToVirtualServiceSpecHttpMirrorsPercentagePtrOutput() VirtualServiceSpecHttpMirrorsPercentagePtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorsPercentagePtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpMirrorsPercentagePtrType) ToVirtualServiceSpecHttpMirrorsPercentagePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsPercentagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorsPercentagePtrOutput)
}

// Percentage of the traffic to be mirrored by the `destination` field.
type VirtualServiceSpecHttpMirrorsPercentageOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorsPercentageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorsPercentage)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorsPercentageOutput) ToVirtualServiceSpecHttpMirrorsPercentageOutput() VirtualServiceSpecHttpMirrorsPercentageOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsPercentageOutput) ToVirtualServiceSpecHttpMirrorsPercentageOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsPercentageOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsPercentageOutput) ToVirtualServiceSpecHttpMirrorsPercentagePtrOutput() VirtualServiceSpecHttpMirrorsPercentagePtrOutput {
	return o.ToVirtualServiceSpecHttpMirrorsPercentagePtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpMirrorsPercentageOutput) ToVirtualServiceSpecHttpMirrorsPercentagePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsPercentagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpMirrorsPercentage) *VirtualServiceSpecHttpMirrorsPercentage {
		return &v
	}).(VirtualServiceSpecHttpMirrorsPercentagePtrOutput)
}

func (o VirtualServiceSpecHttpMirrorsPercentageOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirrorsPercentage) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type VirtualServiceSpecHttpMirrorsPercentagePtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorsPercentagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirrorsPercentage)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorsPercentagePtrOutput) ToVirtualServiceSpecHttpMirrorsPercentagePtrOutput() VirtualServiceSpecHttpMirrorsPercentagePtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsPercentagePtrOutput) ToVirtualServiceSpecHttpMirrorsPercentagePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsPercentagePtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsPercentagePtrOutput) Elem() VirtualServiceSpecHttpMirrorsPercentageOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorsPercentage) VirtualServiceSpecHttpMirrorsPercentage {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpMirrorsPercentage
		return ret
	}).(VirtualServiceSpecHttpMirrorsPercentageOutput)
}

func (o VirtualServiceSpecHttpMirrorsPercentagePtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorsPercentage) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

// Percentage of the traffic to be mirrored by the `destination` field.
type VirtualServiceSpecHttpMirrorsPercentagePatch struct {
	Value *float64 `pulumi:"value"`
}

// VirtualServiceSpecHttpMirrorsPercentagePatchInput is an input type that accepts VirtualServiceSpecHttpMirrorsPercentagePatchArgs and VirtualServiceSpecHttpMirrorsPercentagePatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorsPercentagePatchInput` via:
//
//	VirtualServiceSpecHttpMirrorsPercentagePatchArgs{...}
type VirtualServiceSpecHttpMirrorsPercentagePatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorsPercentagePatchOutput() VirtualServiceSpecHttpMirrorsPercentagePatchOutput
	ToVirtualServiceSpecHttpMirrorsPercentagePatchOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorsPercentagePatchOutput
}

// Percentage of the traffic to be mirrored by the `destination` field.
type VirtualServiceSpecHttpMirrorsPercentagePatchArgs struct {
	Value pulumi.Float64PtrInput `pulumi:"value"`
}

func (VirtualServiceSpecHttpMirrorsPercentagePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorsPercentagePatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpMirrorsPercentagePatchArgs) ToVirtualServiceSpecHttpMirrorsPercentagePatchOutput() VirtualServiceSpecHttpMirrorsPercentagePatchOutput {
	return i.ToVirtualServiceSpecHttpMirrorsPercentagePatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorsPercentagePatchArgs) ToVirtualServiceSpecHttpMirrorsPercentagePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsPercentagePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorsPercentagePatchOutput)
}

func (i VirtualServiceSpecHttpMirrorsPercentagePatchArgs) ToVirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput() VirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorsPercentagePatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpMirrorsPercentagePatchArgs) ToVirtualServiceSpecHttpMirrorsPercentagePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorsPercentagePatchOutput).ToVirtualServiceSpecHttpMirrorsPercentagePatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpMirrorsPercentagePatchPtrInput is an input type that accepts VirtualServiceSpecHttpMirrorsPercentagePatchArgs, VirtualServiceSpecHttpMirrorsPercentagePatchPtr and VirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpMirrorsPercentagePatchPtrInput` via:
//
//	        VirtualServiceSpecHttpMirrorsPercentagePatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpMirrorsPercentagePatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput() VirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput
	ToVirtualServiceSpecHttpMirrorsPercentagePatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput
}

type virtualServiceSpecHttpMirrorsPercentagePatchPtrType VirtualServiceSpecHttpMirrorsPercentagePatchArgs

func VirtualServiceSpecHttpMirrorsPercentagePatchPtr(v *VirtualServiceSpecHttpMirrorsPercentagePatchArgs) VirtualServiceSpecHttpMirrorsPercentagePatchPtrInput {
	return (*virtualServiceSpecHttpMirrorsPercentagePatchPtrType)(v)
}

func (*virtualServiceSpecHttpMirrorsPercentagePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirrorsPercentagePatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpMirrorsPercentagePatchPtrType) ToVirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput() VirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput {
	return i.ToVirtualServiceSpecHttpMirrorsPercentagePatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpMirrorsPercentagePatchPtrType) ToVirtualServiceSpecHttpMirrorsPercentagePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput)
}

// Percentage of the traffic to be mirrored by the `destination` field.
type VirtualServiceSpecHttpMirrorsPercentagePatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorsPercentagePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpMirrorsPercentagePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorsPercentagePatchOutput) ToVirtualServiceSpecHttpMirrorsPercentagePatchOutput() VirtualServiceSpecHttpMirrorsPercentagePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsPercentagePatchOutput) ToVirtualServiceSpecHttpMirrorsPercentagePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsPercentagePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsPercentagePatchOutput) ToVirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput() VirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput {
	return o.ToVirtualServiceSpecHttpMirrorsPercentagePatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpMirrorsPercentagePatchOutput) ToVirtualServiceSpecHttpMirrorsPercentagePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpMirrorsPercentagePatch) *VirtualServiceSpecHttpMirrorsPercentagePatch {
		return &v
	}).(VirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput)
}

func (o VirtualServiceSpecHttpMirrorsPercentagePatchOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpMirrorsPercentagePatch) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type VirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpMirrorsPercentagePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput) ToVirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput() VirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput) ToVirtualServiceSpecHttpMirrorsPercentagePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput) Elem() VirtualServiceSpecHttpMirrorsPercentagePatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorsPercentagePatch) VirtualServiceSpecHttpMirrorsPercentagePatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpMirrorsPercentagePatch
		return ret
	}).(VirtualServiceSpecHttpMirrorsPercentagePatchOutput)
}

func (o VirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpMirrorsPercentagePatch) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

type VirtualServiceSpecHttpPatch struct {
	CorsPolicy     *VirtualServiceSpecHttpCorsPolicyPatch     `pulumi:"corsPolicy"`
	Delegate       *VirtualServiceSpecHttpDelegatePatch       `pulumi:"delegate"`
	DirectResponse *VirtualServiceSpecHttpDirectResponsePatch `pulumi:"directResponse"`
	Fault          *VirtualServiceSpecHttpFaultPatch          `pulumi:"fault"`
	Headers        *VirtualServiceSpecHttpHeadersPatch        `pulumi:"headers"`
	// Match conditions to be satisfied for the rule to be activated.
	Match            []VirtualServiceSpecHttpMatchPatch           `pulumi:"match"`
	Mirror           *VirtualServiceSpecHttpMirrorPatch           `pulumi:"mirror"`
	MirrorPercent    *int                                         `pulumi:"mirrorPercent"`
	MirrorPercentage *VirtualServiceSpecHttpMirrorPercentagePatch `pulumi:"mirrorPercentage"`
	Mirror_percent   *int                                         `pulumi:"mirror_percent"`
	// Specifies the destinations to mirror HTTP traffic in addition to the original destination.
	Mirrors []VirtualServiceSpecHttpMirrorsPatch `pulumi:"mirrors"`
	// The name assigned to the route for debugging purposes.
	Name     *string                              `pulumi:"name"`
	Redirect *VirtualServiceSpecHttpRedirectPatch `pulumi:"redirect"`
	Retries  *VirtualServiceSpecHttpRetriesPatch  `pulumi:"retries"`
	Rewrite  *VirtualServiceSpecHttpRewritePatch  `pulumi:"rewrite"`
	// A HTTP rule can either return a direct_response, redirect or forward (default) traffic.
	Route []VirtualServiceSpecHttpRoutePatch `pulumi:"route"`
	// Timeout for HTTP requests, default is disabled.
	Timeout *string `pulumi:"timeout"`
}

// VirtualServiceSpecHttpPatchInput is an input type that accepts VirtualServiceSpecHttpPatchArgs and VirtualServiceSpecHttpPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpPatchInput` via:
//
//	VirtualServiceSpecHttpPatchArgs{...}
type VirtualServiceSpecHttpPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpPatchOutput() VirtualServiceSpecHttpPatchOutput
	ToVirtualServiceSpecHttpPatchOutputWithContext(context.Context) VirtualServiceSpecHttpPatchOutput
}

type VirtualServiceSpecHttpPatchArgs struct {
	CorsPolicy     VirtualServiceSpecHttpCorsPolicyPatchPtrInput     `pulumi:"corsPolicy"`
	Delegate       VirtualServiceSpecHttpDelegatePatchPtrInput       `pulumi:"delegate"`
	DirectResponse VirtualServiceSpecHttpDirectResponsePatchPtrInput `pulumi:"directResponse"`
	Fault          VirtualServiceSpecHttpFaultPatchPtrInput          `pulumi:"fault"`
	Headers        VirtualServiceSpecHttpHeadersPatchPtrInput        `pulumi:"headers"`
	// Match conditions to be satisfied for the rule to be activated.
	Match            VirtualServiceSpecHttpMatchPatchArrayInput          `pulumi:"match"`
	Mirror           VirtualServiceSpecHttpMirrorPatchPtrInput           `pulumi:"mirror"`
	MirrorPercent    pulumi.IntPtrInput                                  `pulumi:"mirrorPercent"`
	MirrorPercentage VirtualServiceSpecHttpMirrorPercentagePatchPtrInput `pulumi:"mirrorPercentage"`
	Mirror_percent   pulumi.IntPtrInput                                  `pulumi:"mirror_percent"`
	// Specifies the destinations to mirror HTTP traffic in addition to the original destination.
	Mirrors VirtualServiceSpecHttpMirrorsPatchArrayInput `pulumi:"mirrors"`
	// The name assigned to the route for debugging purposes.
	Name     pulumi.StringPtrInput                       `pulumi:"name"`
	Redirect VirtualServiceSpecHttpRedirectPatchPtrInput `pulumi:"redirect"`
	Retries  VirtualServiceSpecHttpRetriesPatchPtrInput  `pulumi:"retries"`
	Rewrite  VirtualServiceSpecHttpRewritePatchPtrInput  `pulumi:"rewrite"`
	// A HTTP rule can either return a direct_response, redirect or forward (default) traffic.
	Route VirtualServiceSpecHttpRoutePatchArrayInput `pulumi:"route"`
	// Timeout for HTTP requests, default is disabled.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (VirtualServiceSpecHttpPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpPatchArgs) ToVirtualServiceSpecHttpPatchOutput() VirtualServiceSpecHttpPatchOutput {
	return i.ToVirtualServiceSpecHttpPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpPatchArgs) ToVirtualServiceSpecHttpPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpPatchOutput)
}

// VirtualServiceSpecHttpPatchArrayInput is an input type that accepts VirtualServiceSpecHttpPatchArray and VirtualServiceSpecHttpPatchArrayOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpPatchArrayInput` via:
//
//	VirtualServiceSpecHttpPatchArray{ VirtualServiceSpecHttpPatchArgs{...} }
type VirtualServiceSpecHttpPatchArrayInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpPatchArrayOutput() VirtualServiceSpecHttpPatchArrayOutput
	ToVirtualServiceSpecHttpPatchArrayOutputWithContext(context.Context) VirtualServiceSpecHttpPatchArrayOutput
}

type VirtualServiceSpecHttpPatchArray []VirtualServiceSpecHttpPatchInput

func (VirtualServiceSpecHttpPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecHttpPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpPatchArray) ToVirtualServiceSpecHttpPatchArrayOutput() VirtualServiceSpecHttpPatchArrayOutput {
	return i.ToVirtualServiceSpecHttpPatchArrayOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpPatchArray) ToVirtualServiceSpecHttpPatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecHttpPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpPatchArrayOutput)
}

type VirtualServiceSpecHttpPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpPatchOutput) ToVirtualServiceSpecHttpPatchOutput() VirtualServiceSpecHttpPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpPatchOutput) ToVirtualServiceSpecHttpPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpPatchOutput) CorsPolicy() VirtualServiceSpecHttpCorsPolicyPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpPatch) *VirtualServiceSpecHttpCorsPolicyPatch { return v.CorsPolicy }).(VirtualServiceSpecHttpCorsPolicyPatchPtrOutput)
}

func (o VirtualServiceSpecHttpPatchOutput) Delegate() VirtualServiceSpecHttpDelegatePatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpPatch) *VirtualServiceSpecHttpDelegatePatch { return v.Delegate }).(VirtualServiceSpecHttpDelegatePatchPtrOutput)
}

func (o VirtualServiceSpecHttpPatchOutput) DirectResponse() VirtualServiceSpecHttpDirectResponsePatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpPatch) *VirtualServiceSpecHttpDirectResponsePatch {
		return v.DirectResponse
	}).(VirtualServiceSpecHttpDirectResponsePatchPtrOutput)
}

func (o VirtualServiceSpecHttpPatchOutput) Fault() VirtualServiceSpecHttpFaultPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpPatch) *VirtualServiceSpecHttpFaultPatch { return v.Fault }).(VirtualServiceSpecHttpFaultPatchPtrOutput)
}

func (o VirtualServiceSpecHttpPatchOutput) Headers() VirtualServiceSpecHttpHeadersPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpPatch) *VirtualServiceSpecHttpHeadersPatch { return v.Headers }).(VirtualServiceSpecHttpHeadersPatchPtrOutput)
}

// Match conditions to be satisfied for the rule to be activated.
func (o VirtualServiceSpecHttpPatchOutput) Match() VirtualServiceSpecHttpMatchPatchArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpPatch) []VirtualServiceSpecHttpMatchPatch { return v.Match }).(VirtualServiceSpecHttpMatchPatchArrayOutput)
}

func (o VirtualServiceSpecHttpPatchOutput) Mirror() VirtualServiceSpecHttpMirrorPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpPatch) *VirtualServiceSpecHttpMirrorPatch { return v.Mirror }).(VirtualServiceSpecHttpMirrorPatchPtrOutput)
}

func (o VirtualServiceSpecHttpPatchOutput) MirrorPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpPatch) *int { return v.MirrorPercent }).(pulumi.IntPtrOutput)
}

func (o VirtualServiceSpecHttpPatchOutput) MirrorPercentage() VirtualServiceSpecHttpMirrorPercentagePatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpPatch) *VirtualServiceSpecHttpMirrorPercentagePatch {
		return v.MirrorPercentage
	}).(VirtualServiceSpecHttpMirrorPercentagePatchPtrOutput)
}

func (o VirtualServiceSpecHttpPatchOutput) Mirror_percent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpPatch) *int { return v.Mirror_percent }).(pulumi.IntPtrOutput)
}

// Specifies the destinations to mirror HTTP traffic in addition to the original destination.
func (o VirtualServiceSpecHttpPatchOutput) Mirrors() VirtualServiceSpecHttpMirrorsPatchArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpPatch) []VirtualServiceSpecHttpMirrorsPatch { return v.Mirrors }).(VirtualServiceSpecHttpMirrorsPatchArrayOutput)
}

// The name assigned to the route for debugging purposes.
func (o VirtualServiceSpecHttpPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpPatchOutput) Redirect() VirtualServiceSpecHttpRedirectPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpPatch) *VirtualServiceSpecHttpRedirectPatch { return v.Redirect }).(VirtualServiceSpecHttpRedirectPatchPtrOutput)
}

func (o VirtualServiceSpecHttpPatchOutput) Retries() VirtualServiceSpecHttpRetriesPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpPatch) *VirtualServiceSpecHttpRetriesPatch { return v.Retries }).(VirtualServiceSpecHttpRetriesPatchPtrOutput)
}

func (o VirtualServiceSpecHttpPatchOutput) Rewrite() VirtualServiceSpecHttpRewritePatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpPatch) *VirtualServiceSpecHttpRewritePatch { return v.Rewrite }).(VirtualServiceSpecHttpRewritePatchPtrOutput)
}

// A HTTP rule can either return a direct_response, redirect or forward (default) traffic.
func (o VirtualServiceSpecHttpPatchOutput) Route() VirtualServiceSpecHttpRoutePatchArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpPatch) []VirtualServiceSpecHttpRoutePatch { return v.Route }).(VirtualServiceSpecHttpRoutePatchArrayOutput)
}

// Timeout for HTTP requests, default is disabled.
func (o VirtualServiceSpecHttpPatchOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpPatch) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpPatchArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecHttpPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpPatchArrayOutput) ToVirtualServiceSpecHttpPatchArrayOutput() VirtualServiceSpecHttpPatchArrayOutput {
	return o
}

func (o VirtualServiceSpecHttpPatchArrayOutput) ToVirtualServiceSpecHttpPatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecHttpPatchArrayOutput {
	return o
}

func (o VirtualServiceSpecHttpPatchArrayOutput) Index(i pulumi.IntInput) VirtualServiceSpecHttpPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceSpecHttpPatch {
		return vs[0].([]VirtualServiceSpecHttpPatch)[vs[1].(int)]
	}).(VirtualServiceSpecHttpPatchOutput)
}

// A HTTP rule can either return a direct_response, redirect or forward (default) traffic.
type VirtualServiceSpecHttpRedirect struct {
	// On a redirect, overwrite the Authority/Host portion of the URL with this value.
	Authority *string `pulumi:"authority"`
	// On a redirect, dynamically set the port: * FROM_PROTOCOL_DEFAULT: automatically set to 80 for HTTP and 443 for HTTPS.
	//
	// Valid Options: FROM_PROTOCOL_DEFAULT, FROM_REQUEST_PORT
	DerivePort *string `pulumi:"derivePort"`
	// On a redirect, overwrite the port portion of the URL with this value.
	Port *int `pulumi:"port"`
	// On a redirect, Specifies the HTTP status code to use in the redirect response.
	RedirectCode *int `pulumi:"redirectCode"`
	// On a redirect, overwrite the scheme portion of the URL with this value.
	Scheme *string `pulumi:"scheme"`
	// On a redirect, overwrite the Path portion of the URL with this value.
	Uri *string `pulumi:"uri"`
}

// VirtualServiceSpecHttpRedirectInput is an input type that accepts VirtualServiceSpecHttpRedirectArgs and VirtualServiceSpecHttpRedirectOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRedirectInput` via:
//
//	VirtualServiceSpecHttpRedirectArgs{...}
type VirtualServiceSpecHttpRedirectInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRedirectOutput() VirtualServiceSpecHttpRedirectOutput
	ToVirtualServiceSpecHttpRedirectOutputWithContext(context.Context) VirtualServiceSpecHttpRedirectOutput
}

// A HTTP rule can either return a direct_response, redirect or forward (default) traffic.
type VirtualServiceSpecHttpRedirectArgs struct {
	// On a redirect, overwrite the Authority/Host portion of the URL with this value.
	Authority pulumi.StringPtrInput `pulumi:"authority"`
	// On a redirect, dynamically set the port: * FROM_PROTOCOL_DEFAULT: automatically set to 80 for HTTP and 443 for HTTPS.
	//
	// Valid Options: FROM_PROTOCOL_DEFAULT, FROM_REQUEST_PORT
	DerivePort pulumi.StringPtrInput `pulumi:"derivePort"`
	// On a redirect, overwrite the port portion of the URL with this value.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// On a redirect, Specifies the HTTP status code to use in the redirect response.
	RedirectCode pulumi.IntPtrInput `pulumi:"redirectCode"`
	// On a redirect, overwrite the scheme portion of the URL with this value.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
	// On a redirect, overwrite the Path portion of the URL with this value.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (VirtualServiceSpecHttpRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRedirect)(nil)).Elem()
}

func (i VirtualServiceSpecHttpRedirectArgs) ToVirtualServiceSpecHttpRedirectOutput() VirtualServiceSpecHttpRedirectOutput {
	return i.ToVirtualServiceSpecHttpRedirectOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRedirectArgs) ToVirtualServiceSpecHttpRedirectOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRedirectOutput)
}

func (i VirtualServiceSpecHttpRedirectArgs) ToVirtualServiceSpecHttpRedirectPtrOutput() VirtualServiceSpecHttpRedirectPtrOutput {
	return i.ToVirtualServiceSpecHttpRedirectPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRedirectArgs) ToVirtualServiceSpecHttpRedirectPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRedirectOutput).ToVirtualServiceSpecHttpRedirectPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpRedirectPtrInput is an input type that accepts VirtualServiceSpecHttpRedirectArgs, VirtualServiceSpecHttpRedirectPtr and VirtualServiceSpecHttpRedirectPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRedirectPtrInput` via:
//
//	        VirtualServiceSpecHttpRedirectArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpRedirectPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRedirectPtrOutput() VirtualServiceSpecHttpRedirectPtrOutput
	ToVirtualServiceSpecHttpRedirectPtrOutputWithContext(context.Context) VirtualServiceSpecHttpRedirectPtrOutput
}

type virtualServiceSpecHttpRedirectPtrType VirtualServiceSpecHttpRedirectArgs

func VirtualServiceSpecHttpRedirectPtr(v *VirtualServiceSpecHttpRedirectArgs) VirtualServiceSpecHttpRedirectPtrInput {
	return (*virtualServiceSpecHttpRedirectPtrType)(v)
}

func (*virtualServiceSpecHttpRedirectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRedirect)(nil)).Elem()
}

func (i *virtualServiceSpecHttpRedirectPtrType) ToVirtualServiceSpecHttpRedirectPtrOutput() VirtualServiceSpecHttpRedirectPtrOutput {
	return i.ToVirtualServiceSpecHttpRedirectPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpRedirectPtrType) ToVirtualServiceSpecHttpRedirectPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRedirectPtrOutput)
}

// A HTTP rule can either return a direct_response, redirect or forward (default) traffic.
type VirtualServiceSpecHttpRedirectOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRedirect)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRedirectOutput) ToVirtualServiceSpecHttpRedirectOutput() VirtualServiceSpecHttpRedirectOutput {
	return o
}

func (o VirtualServiceSpecHttpRedirectOutput) ToVirtualServiceSpecHttpRedirectOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRedirectOutput {
	return o
}

func (o VirtualServiceSpecHttpRedirectOutput) ToVirtualServiceSpecHttpRedirectPtrOutput() VirtualServiceSpecHttpRedirectPtrOutput {
	return o.ToVirtualServiceSpecHttpRedirectPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpRedirectOutput) ToVirtualServiceSpecHttpRedirectPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRedirectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpRedirect) *VirtualServiceSpecHttpRedirect {
		return &v
	}).(VirtualServiceSpecHttpRedirectPtrOutput)
}

// On a redirect, overwrite the Authority/Host portion of the URL with this value.
func (o VirtualServiceSpecHttpRedirectOutput) Authority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRedirect) *string { return v.Authority }).(pulumi.StringPtrOutput)
}

// On a redirect, dynamically set the port: * FROM_PROTOCOL_DEFAULT: automatically set to 80 for HTTP and 443 for HTTPS.
//
// Valid Options: FROM_PROTOCOL_DEFAULT, FROM_REQUEST_PORT
func (o VirtualServiceSpecHttpRedirectOutput) DerivePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRedirect) *string { return v.DerivePort }).(pulumi.StringPtrOutput)
}

// On a redirect, overwrite the port portion of the URL with this value.
func (o VirtualServiceSpecHttpRedirectOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRedirect) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// On a redirect, Specifies the HTTP status code to use in the redirect response.
func (o VirtualServiceSpecHttpRedirectOutput) RedirectCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRedirect) *int { return v.RedirectCode }).(pulumi.IntPtrOutput)
}

// On a redirect, overwrite the scheme portion of the URL with this value.
func (o VirtualServiceSpecHttpRedirectOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRedirect) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

// On a redirect, overwrite the Path portion of the URL with this value.
func (o VirtualServiceSpecHttpRedirectOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRedirect) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpRedirectPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRedirectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRedirect)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRedirectPtrOutput) ToVirtualServiceSpecHttpRedirectPtrOutput() VirtualServiceSpecHttpRedirectPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRedirectPtrOutput) ToVirtualServiceSpecHttpRedirectPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRedirectPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRedirectPtrOutput) Elem() VirtualServiceSpecHttpRedirectOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRedirect) VirtualServiceSpecHttpRedirect {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpRedirect
		return ret
	}).(VirtualServiceSpecHttpRedirectOutput)
}

// On a redirect, overwrite the Authority/Host portion of the URL with this value.
func (o VirtualServiceSpecHttpRedirectPtrOutput) Authority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRedirect) *string {
		if v == nil {
			return nil
		}
		return v.Authority
	}).(pulumi.StringPtrOutput)
}

// On a redirect, dynamically set the port: * FROM_PROTOCOL_DEFAULT: automatically set to 80 for HTTP and 443 for HTTPS.
//
// Valid Options: FROM_PROTOCOL_DEFAULT, FROM_REQUEST_PORT
func (o VirtualServiceSpecHttpRedirectPtrOutput) DerivePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRedirect) *string {
		if v == nil {
			return nil
		}
		return v.DerivePort
	}).(pulumi.StringPtrOutput)
}

// On a redirect, overwrite the port portion of the URL with this value.
func (o VirtualServiceSpecHttpRedirectPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRedirect) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// On a redirect, Specifies the HTTP status code to use in the redirect response.
func (o VirtualServiceSpecHttpRedirectPtrOutput) RedirectCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRedirect) *int {
		if v == nil {
			return nil
		}
		return v.RedirectCode
	}).(pulumi.IntPtrOutput)
}

// On a redirect, overwrite the scheme portion of the URL with this value.
func (o VirtualServiceSpecHttpRedirectPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRedirect) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

// On a redirect, overwrite the Path portion of the URL with this value.
func (o VirtualServiceSpecHttpRedirectPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRedirect) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// A HTTP rule can either return a direct_response, redirect or forward (default) traffic.
type VirtualServiceSpecHttpRedirectPatch struct {
	// On a redirect, overwrite the Authority/Host portion of the URL with this value.
	Authority *string `pulumi:"authority"`
	// On a redirect, dynamically set the port: * FROM_PROTOCOL_DEFAULT: automatically set to 80 for HTTP and 443 for HTTPS.
	//
	// Valid Options: FROM_PROTOCOL_DEFAULT, FROM_REQUEST_PORT
	DerivePort *string `pulumi:"derivePort"`
	// On a redirect, overwrite the port portion of the URL with this value.
	Port *int `pulumi:"port"`
	// On a redirect, Specifies the HTTP status code to use in the redirect response.
	RedirectCode *int `pulumi:"redirectCode"`
	// On a redirect, overwrite the scheme portion of the URL with this value.
	Scheme *string `pulumi:"scheme"`
	// On a redirect, overwrite the Path portion of the URL with this value.
	Uri *string `pulumi:"uri"`
}

// VirtualServiceSpecHttpRedirectPatchInput is an input type that accepts VirtualServiceSpecHttpRedirectPatchArgs and VirtualServiceSpecHttpRedirectPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRedirectPatchInput` via:
//
//	VirtualServiceSpecHttpRedirectPatchArgs{...}
type VirtualServiceSpecHttpRedirectPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRedirectPatchOutput() VirtualServiceSpecHttpRedirectPatchOutput
	ToVirtualServiceSpecHttpRedirectPatchOutputWithContext(context.Context) VirtualServiceSpecHttpRedirectPatchOutput
}

// A HTTP rule can either return a direct_response, redirect or forward (default) traffic.
type VirtualServiceSpecHttpRedirectPatchArgs struct {
	// On a redirect, overwrite the Authority/Host portion of the URL with this value.
	Authority pulumi.StringPtrInput `pulumi:"authority"`
	// On a redirect, dynamically set the port: * FROM_PROTOCOL_DEFAULT: automatically set to 80 for HTTP and 443 for HTTPS.
	//
	// Valid Options: FROM_PROTOCOL_DEFAULT, FROM_REQUEST_PORT
	DerivePort pulumi.StringPtrInput `pulumi:"derivePort"`
	// On a redirect, overwrite the port portion of the URL with this value.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// On a redirect, Specifies the HTTP status code to use in the redirect response.
	RedirectCode pulumi.IntPtrInput `pulumi:"redirectCode"`
	// On a redirect, overwrite the scheme portion of the URL with this value.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
	// On a redirect, overwrite the Path portion of the URL with this value.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (VirtualServiceSpecHttpRedirectPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRedirectPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpRedirectPatchArgs) ToVirtualServiceSpecHttpRedirectPatchOutput() VirtualServiceSpecHttpRedirectPatchOutput {
	return i.ToVirtualServiceSpecHttpRedirectPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRedirectPatchArgs) ToVirtualServiceSpecHttpRedirectPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRedirectPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRedirectPatchOutput)
}

func (i VirtualServiceSpecHttpRedirectPatchArgs) ToVirtualServiceSpecHttpRedirectPatchPtrOutput() VirtualServiceSpecHttpRedirectPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpRedirectPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRedirectPatchArgs) ToVirtualServiceSpecHttpRedirectPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRedirectPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRedirectPatchOutput).ToVirtualServiceSpecHttpRedirectPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpRedirectPatchPtrInput is an input type that accepts VirtualServiceSpecHttpRedirectPatchArgs, VirtualServiceSpecHttpRedirectPatchPtr and VirtualServiceSpecHttpRedirectPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRedirectPatchPtrInput` via:
//
//	        VirtualServiceSpecHttpRedirectPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpRedirectPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRedirectPatchPtrOutput() VirtualServiceSpecHttpRedirectPatchPtrOutput
	ToVirtualServiceSpecHttpRedirectPatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpRedirectPatchPtrOutput
}

type virtualServiceSpecHttpRedirectPatchPtrType VirtualServiceSpecHttpRedirectPatchArgs

func VirtualServiceSpecHttpRedirectPatchPtr(v *VirtualServiceSpecHttpRedirectPatchArgs) VirtualServiceSpecHttpRedirectPatchPtrInput {
	return (*virtualServiceSpecHttpRedirectPatchPtrType)(v)
}

func (*virtualServiceSpecHttpRedirectPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRedirectPatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpRedirectPatchPtrType) ToVirtualServiceSpecHttpRedirectPatchPtrOutput() VirtualServiceSpecHttpRedirectPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpRedirectPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpRedirectPatchPtrType) ToVirtualServiceSpecHttpRedirectPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRedirectPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRedirectPatchPtrOutput)
}

// A HTTP rule can either return a direct_response, redirect or forward (default) traffic.
type VirtualServiceSpecHttpRedirectPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRedirectPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRedirectPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRedirectPatchOutput) ToVirtualServiceSpecHttpRedirectPatchOutput() VirtualServiceSpecHttpRedirectPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpRedirectPatchOutput) ToVirtualServiceSpecHttpRedirectPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRedirectPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpRedirectPatchOutput) ToVirtualServiceSpecHttpRedirectPatchPtrOutput() VirtualServiceSpecHttpRedirectPatchPtrOutput {
	return o.ToVirtualServiceSpecHttpRedirectPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpRedirectPatchOutput) ToVirtualServiceSpecHttpRedirectPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRedirectPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpRedirectPatch) *VirtualServiceSpecHttpRedirectPatch {
		return &v
	}).(VirtualServiceSpecHttpRedirectPatchPtrOutput)
}

// On a redirect, overwrite the Authority/Host portion of the URL with this value.
func (o VirtualServiceSpecHttpRedirectPatchOutput) Authority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRedirectPatch) *string { return v.Authority }).(pulumi.StringPtrOutput)
}

// On a redirect, dynamically set the port: * FROM_PROTOCOL_DEFAULT: automatically set to 80 for HTTP and 443 for HTTPS.
//
// Valid Options: FROM_PROTOCOL_DEFAULT, FROM_REQUEST_PORT
func (o VirtualServiceSpecHttpRedirectPatchOutput) DerivePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRedirectPatch) *string { return v.DerivePort }).(pulumi.StringPtrOutput)
}

// On a redirect, overwrite the port portion of the URL with this value.
func (o VirtualServiceSpecHttpRedirectPatchOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRedirectPatch) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// On a redirect, Specifies the HTTP status code to use in the redirect response.
func (o VirtualServiceSpecHttpRedirectPatchOutput) RedirectCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRedirectPatch) *int { return v.RedirectCode }).(pulumi.IntPtrOutput)
}

// On a redirect, overwrite the scheme portion of the URL with this value.
func (o VirtualServiceSpecHttpRedirectPatchOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRedirectPatch) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

// On a redirect, overwrite the Path portion of the URL with this value.
func (o VirtualServiceSpecHttpRedirectPatchOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRedirectPatch) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpRedirectPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRedirectPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRedirectPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRedirectPatchPtrOutput) ToVirtualServiceSpecHttpRedirectPatchPtrOutput() VirtualServiceSpecHttpRedirectPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRedirectPatchPtrOutput) ToVirtualServiceSpecHttpRedirectPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRedirectPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRedirectPatchPtrOutput) Elem() VirtualServiceSpecHttpRedirectPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRedirectPatch) VirtualServiceSpecHttpRedirectPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpRedirectPatch
		return ret
	}).(VirtualServiceSpecHttpRedirectPatchOutput)
}

// On a redirect, overwrite the Authority/Host portion of the URL with this value.
func (o VirtualServiceSpecHttpRedirectPatchPtrOutput) Authority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRedirectPatch) *string {
		if v == nil {
			return nil
		}
		return v.Authority
	}).(pulumi.StringPtrOutput)
}

// On a redirect, dynamically set the port: * FROM_PROTOCOL_DEFAULT: automatically set to 80 for HTTP and 443 for HTTPS.
//
// Valid Options: FROM_PROTOCOL_DEFAULT, FROM_REQUEST_PORT
func (o VirtualServiceSpecHttpRedirectPatchPtrOutput) DerivePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRedirectPatch) *string {
		if v == nil {
			return nil
		}
		return v.DerivePort
	}).(pulumi.StringPtrOutput)
}

// On a redirect, overwrite the port portion of the URL with this value.
func (o VirtualServiceSpecHttpRedirectPatchPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRedirectPatch) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// On a redirect, Specifies the HTTP status code to use in the redirect response.
func (o VirtualServiceSpecHttpRedirectPatchPtrOutput) RedirectCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRedirectPatch) *int {
		if v == nil {
			return nil
		}
		return v.RedirectCode
	}).(pulumi.IntPtrOutput)
}

// On a redirect, overwrite the scheme portion of the URL with this value.
func (o VirtualServiceSpecHttpRedirectPatchPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRedirectPatch) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

// On a redirect, overwrite the Path portion of the URL with this value.
func (o VirtualServiceSpecHttpRedirectPatchPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRedirectPatch) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// Retry policy for HTTP requests.
type VirtualServiceSpecHttpRetries struct {
	// Number of retries to be allowed for a given request.
	Attempts *int `pulumi:"attempts"`
	// Timeout per attempt for a given request, including the initial call and any retries.
	PerTryTimeout *string `pulumi:"perTryTimeout"`
	// Specifies the conditions under which retry takes place.
	RetryOn *string `pulumi:"retryOn"`
	// Flag to specify whether the retries should retry to other localities.
	RetryRemoteLocalities *bool `pulumi:"retryRemoteLocalities"`
}

// VirtualServiceSpecHttpRetriesInput is an input type that accepts VirtualServiceSpecHttpRetriesArgs and VirtualServiceSpecHttpRetriesOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRetriesInput` via:
//
//	VirtualServiceSpecHttpRetriesArgs{...}
type VirtualServiceSpecHttpRetriesInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRetriesOutput() VirtualServiceSpecHttpRetriesOutput
	ToVirtualServiceSpecHttpRetriesOutputWithContext(context.Context) VirtualServiceSpecHttpRetriesOutput
}

// Retry policy for HTTP requests.
type VirtualServiceSpecHttpRetriesArgs struct {
	// Number of retries to be allowed for a given request.
	Attempts pulumi.IntPtrInput `pulumi:"attempts"`
	// Timeout per attempt for a given request, including the initial call and any retries.
	PerTryTimeout pulumi.StringPtrInput `pulumi:"perTryTimeout"`
	// Specifies the conditions under which retry takes place.
	RetryOn pulumi.StringPtrInput `pulumi:"retryOn"`
	// Flag to specify whether the retries should retry to other localities.
	RetryRemoteLocalities pulumi.BoolPtrInput `pulumi:"retryRemoteLocalities"`
}

func (VirtualServiceSpecHttpRetriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRetries)(nil)).Elem()
}

func (i VirtualServiceSpecHttpRetriesArgs) ToVirtualServiceSpecHttpRetriesOutput() VirtualServiceSpecHttpRetriesOutput {
	return i.ToVirtualServiceSpecHttpRetriesOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRetriesArgs) ToVirtualServiceSpecHttpRetriesOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRetriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRetriesOutput)
}

func (i VirtualServiceSpecHttpRetriesArgs) ToVirtualServiceSpecHttpRetriesPtrOutput() VirtualServiceSpecHttpRetriesPtrOutput {
	return i.ToVirtualServiceSpecHttpRetriesPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRetriesArgs) ToVirtualServiceSpecHttpRetriesPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRetriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRetriesOutput).ToVirtualServiceSpecHttpRetriesPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpRetriesPtrInput is an input type that accepts VirtualServiceSpecHttpRetriesArgs, VirtualServiceSpecHttpRetriesPtr and VirtualServiceSpecHttpRetriesPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRetriesPtrInput` via:
//
//	        VirtualServiceSpecHttpRetriesArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpRetriesPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRetriesPtrOutput() VirtualServiceSpecHttpRetriesPtrOutput
	ToVirtualServiceSpecHttpRetriesPtrOutputWithContext(context.Context) VirtualServiceSpecHttpRetriesPtrOutput
}

type virtualServiceSpecHttpRetriesPtrType VirtualServiceSpecHttpRetriesArgs

func VirtualServiceSpecHttpRetriesPtr(v *VirtualServiceSpecHttpRetriesArgs) VirtualServiceSpecHttpRetriesPtrInput {
	return (*virtualServiceSpecHttpRetriesPtrType)(v)
}

func (*virtualServiceSpecHttpRetriesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRetries)(nil)).Elem()
}

func (i *virtualServiceSpecHttpRetriesPtrType) ToVirtualServiceSpecHttpRetriesPtrOutput() VirtualServiceSpecHttpRetriesPtrOutput {
	return i.ToVirtualServiceSpecHttpRetriesPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpRetriesPtrType) ToVirtualServiceSpecHttpRetriesPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRetriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRetriesPtrOutput)
}

// Retry policy for HTTP requests.
type VirtualServiceSpecHttpRetriesOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRetriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRetries)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRetriesOutput) ToVirtualServiceSpecHttpRetriesOutput() VirtualServiceSpecHttpRetriesOutput {
	return o
}

func (o VirtualServiceSpecHttpRetriesOutput) ToVirtualServiceSpecHttpRetriesOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRetriesOutput {
	return o
}

func (o VirtualServiceSpecHttpRetriesOutput) ToVirtualServiceSpecHttpRetriesPtrOutput() VirtualServiceSpecHttpRetriesPtrOutput {
	return o.ToVirtualServiceSpecHttpRetriesPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpRetriesOutput) ToVirtualServiceSpecHttpRetriesPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRetriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpRetries) *VirtualServiceSpecHttpRetries {
		return &v
	}).(VirtualServiceSpecHttpRetriesPtrOutput)
}

// Number of retries to be allowed for a given request.
func (o VirtualServiceSpecHttpRetriesOutput) Attempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRetries) *int { return v.Attempts }).(pulumi.IntPtrOutput)
}

// Timeout per attempt for a given request, including the initial call and any retries.
func (o VirtualServiceSpecHttpRetriesOutput) PerTryTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRetries) *string { return v.PerTryTimeout }).(pulumi.StringPtrOutput)
}

// Specifies the conditions under which retry takes place.
func (o VirtualServiceSpecHttpRetriesOutput) RetryOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRetries) *string { return v.RetryOn }).(pulumi.StringPtrOutput)
}

// Flag to specify whether the retries should retry to other localities.
func (o VirtualServiceSpecHttpRetriesOutput) RetryRemoteLocalities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRetries) *bool { return v.RetryRemoteLocalities }).(pulumi.BoolPtrOutput)
}

type VirtualServiceSpecHttpRetriesPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRetriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRetries)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRetriesPtrOutput) ToVirtualServiceSpecHttpRetriesPtrOutput() VirtualServiceSpecHttpRetriesPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRetriesPtrOutput) ToVirtualServiceSpecHttpRetriesPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRetriesPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRetriesPtrOutput) Elem() VirtualServiceSpecHttpRetriesOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRetries) VirtualServiceSpecHttpRetries {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpRetries
		return ret
	}).(VirtualServiceSpecHttpRetriesOutput)
}

// Number of retries to be allowed for a given request.
func (o VirtualServiceSpecHttpRetriesPtrOutput) Attempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRetries) *int {
		if v == nil {
			return nil
		}
		return v.Attempts
	}).(pulumi.IntPtrOutput)
}

// Timeout per attempt for a given request, including the initial call and any retries.
func (o VirtualServiceSpecHttpRetriesPtrOutput) PerTryTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRetries) *string {
		if v == nil {
			return nil
		}
		return v.PerTryTimeout
	}).(pulumi.StringPtrOutput)
}

// Specifies the conditions under which retry takes place.
func (o VirtualServiceSpecHttpRetriesPtrOutput) RetryOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRetries) *string {
		if v == nil {
			return nil
		}
		return v.RetryOn
	}).(pulumi.StringPtrOutput)
}

// Flag to specify whether the retries should retry to other localities.
func (o VirtualServiceSpecHttpRetriesPtrOutput) RetryRemoteLocalities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRetries) *bool {
		if v == nil {
			return nil
		}
		return v.RetryRemoteLocalities
	}).(pulumi.BoolPtrOutput)
}

// Retry policy for HTTP requests.
type VirtualServiceSpecHttpRetriesPatch struct {
	// Number of retries to be allowed for a given request.
	Attempts *int `pulumi:"attempts"`
	// Timeout per attempt for a given request, including the initial call and any retries.
	PerTryTimeout *string `pulumi:"perTryTimeout"`
	// Specifies the conditions under which retry takes place.
	RetryOn *string `pulumi:"retryOn"`
	// Flag to specify whether the retries should retry to other localities.
	RetryRemoteLocalities *bool `pulumi:"retryRemoteLocalities"`
}

// VirtualServiceSpecHttpRetriesPatchInput is an input type that accepts VirtualServiceSpecHttpRetriesPatchArgs and VirtualServiceSpecHttpRetriesPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRetriesPatchInput` via:
//
//	VirtualServiceSpecHttpRetriesPatchArgs{...}
type VirtualServiceSpecHttpRetriesPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRetriesPatchOutput() VirtualServiceSpecHttpRetriesPatchOutput
	ToVirtualServiceSpecHttpRetriesPatchOutputWithContext(context.Context) VirtualServiceSpecHttpRetriesPatchOutput
}

// Retry policy for HTTP requests.
type VirtualServiceSpecHttpRetriesPatchArgs struct {
	// Number of retries to be allowed for a given request.
	Attempts pulumi.IntPtrInput `pulumi:"attempts"`
	// Timeout per attempt for a given request, including the initial call and any retries.
	PerTryTimeout pulumi.StringPtrInput `pulumi:"perTryTimeout"`
	// Specifies the conditions under which retry takes place.
	RetryOn pulumi.StringPtrInput `pulumi:"retryOn"`
	// Flag to specify whether the retries should retry to other localities.
	RetryRemoteLocalities pulumi.BoolPtrInput `pulumi:"retryRemoteLocalities"`
}

func (VirtualServiceSpecHttpRetriesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRetriesPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpRetriesPatchArgs) ToVirtualServiceSpecHttpRetriesPatchOutput() VirtualServiceSpecHttpRetriesPatchOutput {
	return i.ToVirtualServiceSpecHttpRetriesPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRetriesPatchArgs) ToVirtualServiceSpecHttpRetriesPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRetriesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRetriesPatchOutput)
}

func (i VirtualServiceSpecHttpRetriesPatchArgs) ToVirtualServiceSpecHttpRetriesPatchPtrOutput() VirtualServiceSpecHttpRetriesPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpRetriesPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRetriesPatchArgs) ToVirtualServiceSpecHttpRetriesPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRetriesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRetriesPatchOutput).ToVirtualServiceSpecHttpRetriesPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpRetriesPatchPtrInput is an input type that accepts VirtualServiceSpecHttpRetriesPatchArgs, VirtualServiceSpecHttpRetriesPatchPtr and VirtualServiceSpecHttpRetriesPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRetriesPatchPtrInput` via:
//
//	        VirtualServiceSpecHttpRetriesPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpRetriesPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRetriesPatchPtrOutput() VirtualServiceSpecHttpRetriesPatchPtrOutput
	ToVirtualServiceSpecHttpRetriesPatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpRetriesPatchPtrOutput
}

type virtualServiceSpecHttpRetriesPatchPtrType VirtualServiceSpecHttpRetriesPatchArgs

func VirtualServiceSpecHttpRetriesPatchPtr(v *VirtualServiceSpecHttpRetriesPatchArgs) VirtualServiceSpecHttpRetriesPatchPtrInput {
	return (*virtualServiceSpecHttpRetriesPatchPtrType)(v)
}

func (*virtualServiceSpecHttpRetriesPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRetriesPatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpRetriesPatchPtrType) ToVirtualServiceSpecHttpRetriesPatchPtrOutput() VirtualServiceSpecHttpRetriesPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpRetriesPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpRetriesPatchPtrType) ToVirtualServiceSpecHttpRetriesPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRetriesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRetriesPatchPtrOutput)
}

// Retry policy for HTTP requests.
type VirtualServiceSpecHttpRetriesPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRetriesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRetriesPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRetriesPatchOutput) ToVirtualServiceSpecHttpRetriesPatchOutput() VirtualServiceSpecHttpRetriesPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpRetriesPatchOutput) ToVirtualServiceSpecHttpRetriesPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRetriesPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpRetriesPatchOutput) ToVirtualServiceSpecHttpRetriesPatchPtrOutput() VirtualServiceSpecHttpRetriesPatchPtrOutput {
	return o.ToVirtualServiceSpecHttpRetriesPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpRetriesPatchOutput) ToVirtualServiceSpecHttpRetriesPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRetriesPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpRetriesPatch) *VirtualServiceSpecHttpRetriesPatch {
		return &v
	}).(VirtualServiceSpecHttpRetriesPatchPtrOutput)
}

// Number of retries to be allowed for a given request.
func (o VirtualServiceSpecHttpRetriesPatchOutput) Attempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRetriesPatch) *int { return v.Attempts }).(pulumi.IntPtrOutput)
}

// Timeout per attempt for a given request, including the initial call and any retries.
func (o VirtualServiceSpecHttpRetriesPatchOutput) PerTryTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRetriesPatch) *string { return v.PerTryTimeout }).(pulumi.StringPtrOutput)
}

// Specifies the conditions under which retry takes place.
func (o VirtualServiceSpecHttpRetriesPatchOutput) RetryOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRetriesPatch) *string { return v.RetryOn }).(pulumi.StringPtrOutput)
}

// Flag to specify whether the retries should retry to other localities.
func (o VirtualServiceSpecHttpRetriesPatchOutput) RetryRemoteLocalities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRetriesPatch) *bool { return v.RetryRemoteLocalities }).(pulumi.BoolPtrOutput)
}

type VirtualServiceSpecHttpRetriesPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRetriesPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRetriesPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRetriesPatchPtrOutput) ToVirtualServiceSpecHttpRetriesPatchPtrOutput() VirtualServiceSpecHttpRetriesPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRetriesPatchPtrOutput) ToVirtualServiceSpecHttpRetriesPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRetriesPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRetriesPatchPtrOutput) Elem() VirtualServiceSpecHttpRetriesPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRetriesPatch) VirtualServiceSpecHttpRetriesPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpRetriesPatch
		return ret
	}).(VirtualServiceSpecHttpRetriesPatchOutput)
}

// Number of retries to be allowed for a given request.
func (o VirtualServiceSpecHttpRetriesPatchPtrOutput) Attempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRetriesPatch) *int {
		if v == nil {
			return nil
		}
		return v.Attempts
	}).(pulumi.IntPtrOutput)
}

// Timeout per attempt for a given request, including the initial call and any retries.
func (o VirtualServiceSpecHttpRetriesPatchPtrOutput) PerTryTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRetriesPatch) *string {
		if v == nil {
			return nil
		}
		return v.PerTryTimeout
	}).(pulumi.StringPtrOutput)
}

// Specifies the conditions under which retry takes place.
func (o VirtualServiceSpecHttpRetriesPatchPtrOutput) RetryOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRetriesPatch) *string {
		if v == nil {
			return nil
		}
		return v.RetryOn
	}).(pulumi.StringPtrOutput)
}

// Flag to specify whether the retries should retry to other localities.
func (o VirtualServiceSpecHttpRetriesPatchPtrOutput) RetryRemoteLocalities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRetriesPatch) *bool {
		if v == nil {
			return nil
		}
		return v.RetryRemoteLocalities
	}).(pulumi.BoolPtrOutput)
}

// Rewrite HTTP URIs and Authority headers.
type VirtualServiceSpecHttpRewrite struct {
	// rewrite the Authority/Host header with this value.
	Authority *string `pulumi:"authority"`
	// rewrite the path (or the prefix) portion of the URI with this value.
	Uri             *string                                       `pulumi:"uri"`
	UriRegexRewrite *VirtualServiceSpecHttpRewriteUriRegexRewrite `pulumi:"uriRegexRewrite"`
}

// VirtualServiceSpecHttpRewriteInput is an input type that accepts VirtualServiceSpecHttpRewriteArgs and VirtualServiceSpecHttpRewriteOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRewriteInput` via:
//
//	VirtualServiceSpecHttpRewriteArgs{...}
type VirtualServiceSpecHttpRewriteInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRewriteOutput() VirtualServiceSpecHttpRewriteOutput
	ToVirtualServiceSpecHttpRewriteOutputWithContext(context.Context) VirtualServiceSpecHttpRewriteOutput
}

// Rewrite HTTP URIs and Authority headers.
type VirtualServiceSpecHttpRewriteArgs struct {
	// rewrite the Authority/Host header with this value.
	Authority pulumi.StringPtrInput `pulumi:"authority"`
	// rewrite the path (or the prefix) portion of the URI with this value.
	Uri             pulumi.StringPtrInput                                `pulumi:"uri"`
	UriRegexRewrite VirtualServiceSpecHttpRewriteUriRegexRewritePtrInput `pulumi:"uriRegexRewrite"`
}

func (VirtualServiceSpecHttpRewriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRewrite)(nil)).Elem()
}

func (i VirtualServiceSpecHttpRewriteArgs) ToVirtualServiceSpecHttpRewriteOutput() VirtualServiceSpecHttpRewriteOutput {
	return i.ToVirtualServiceSpecHttpRewriteOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRewriteArgs) ToVirtualServiceSpecHttpRewriteOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRewriteOutput)
}

func (i VirtualServiceSpecHttpRewriteArgs) ToVirtualServiceSpecHttpRewritePtrOutput() VirtualServiceSpecHttpRewritePtrOutput {
	return i.ToVirtualServiceSpecHttpRewritePtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRewriteArgs) ToVirtualServiceSpecHttpRewritePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewritePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRewriteOutput).ToVirtualServiceSpecHttpRewritePtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpRewritePtrInput is an input type that accepts VirtualServiceSpecHttpRewriteArgs, VirtualServiceSpecHttpRewritePtr and VirtualServiceSpecHttpRewritePtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRewritePtrInput` via:
//
//	        VirtualServiceSpecHttpRewriteArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpRewritePtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRewritePtrOutput() VirtualServiceSpecHttpRewritePtrOutput
	ToVirtualServiceSpecHttpRewritePtrOutputWithContext(context.Context) VirtualServiceSpecHttpRewritePtrOutput
}

type virtualServiceSpecHttpRewritePtrType VirtualServiceSpecHttpRewriteArgs

func VirtualServiceSpecHttpRewritePtr(v *VirtualServiceSpecHttpRewriteArgs) VirtualServiceSpecHttpRewritePtrInput {
	return (*virtualServiceSpecHttpRewritePtrType)(v)
}

func (*virtualServiceSpecHttpRewritePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRewrite)(nil)).Elem()
}

func (i *virtualServiceSpecHttpRewritePtrType) ToVirtualServiceSpecHttpRewritePtrOutput() VirtualServiceSpecHttpRewritePtrOutput {
	return i.ToVirtualServiceSpecHttpRewritePtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpRewritePtrType) ToVirtualServiceSpecHttpRewritePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewritePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRewritePtrOutput)
}

// Rewrite HTTP URIs and Authority headers.
type VirtualServiceSpecHttpRewriteOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRewriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRewrite)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRewriteOutput) ToVirtualServiceSpecHttpRewriteOutput() VirtualServiceSpecHttpRewriteOutput {
	return o
}

func (o VirtualServiceSpecHttpRewriteOutput) ToVirtualServiceSpecHttpRewriteOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewriteOutput {
	return o
}

func (o VirtualServiceSpecHttpRewriteOutput) ToVirtualServiceSpecHttpRewritePtrOutput() VirtualServiceSpecHttpRewritePtrOutput {
	return o.ToVirtualServiceSpecHttpRewritePtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpRewriteOutput) ToVirtualServiceSpecHttpRewritePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewritePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpRewrite) *VirtualServiceSpecHttpRewrite {
		return &v
	}).(VirtualServiceSpecHttpRewritePtrOutput)
}

// rewrite the Authority/Host header with this value.
func (o VirtualServiceSpecHttpRewriteOutput) Authority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRewrite) *string { return v.Authority }).(pulumi.StringPtrOutput)
}

// rewrite the path (or the prefix) portion of the URI with this value.
func (o VirtualServiceSpecHttpRewriteOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRewrite) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpRewriteOutput) UriRegexRewrite() VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRewrite) *VirtualServiceSpecHttpRewriteUriRegexRewrite {
		return v.UriRegexRewrite
	}).(VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput)
}

type VirtualServiceSpecHttpRewritePtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRewritePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRewrite)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRewritePtrOutput) ToVirtualServiceSpecHttpRewritePtrOutput() VirtualServiceSpecHttpRewritePtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRewritePtrOutput) ToVirtualServiceSpecHttpRewritePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewritePtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRewritePtrOutput) Elem() VirtualServiceSpecHttpRewriteOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRewrite) VirtualServiceSpecHttpRewrite {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpRewrite
		return ret
	}).(VirtualServiceSpecHttpRewriteOutput)
}

// rewrite the Authority/Host header with this value.
func (o VirtualServiceSpecHttpRewritePtrOutput) Authority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRewrite) *string {
		if v == nil {
			return nil
		}
		return v.Authority
	}).(pulumi.StringPtrOutput)
}

// rewrite the path (or the prefix) portion of the URI with this value.
func (o VirtualServiceSpecHttpRewritePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRewrite) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpRewritePtrOutput) UriRegexRewrite() VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRewrite) *VirtualServiceSpecHttpRewriteUriRegexRewrite {
		if v == nil {
			return nil
		}
		return v.UriRegexRewrite
	}).(VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput)
}

// Rewrite HTTP URIs and Authority headers.
type VirtualServiceSpecHttpRewritePatch struct {
	// rewrite the Authority/Host header with this value.
	Authority *string `pulumi:"authority"`
	// rewrite the path (or the prefix) portion of the URI with this value.
	Uri             *string                                            `pulumi:"uri"`
	UriRegexRewrite *VirtualServiceSpecHttpRewriteUriRegexRewritePatch `pulumi:"uriRegexRewrite"`
}

// VirtualServiceSpecHttpRewritePatchInput is an input type that accepts VirtualServiceSpecHttpRewritePatchArgs and VirtualServiceSpecHttpRewritePatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRewritePatchInput` via:
//
//	VirtualServiceSpecHttpRewritePatchArgs{...}
type VirtualServiceSpecHttpRewritePatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRewritePatchOutput() VirtualServiceSpecHttpRewritePatchOutput
	ToVirtualServiceSpecHttpRewritePatchOutputWithContext(context.Context) VirtualServiceSpecHttpRewritePatchOutput
}

// Rewrite HTTP URIs and Authority headers.
type VirtualServiceSpecHttpRewritePatchArgs struct {
	// rewrite the Authority/Host header with this value.
	Authority pulumi.StringPtrInput `pulumi:"authority"`
	// rewrite the path (or the prefix) portion of the URI with this value.
	Uri             pulumi.StringPtrInput                                     `pulumi:"uri"`
	UriRegexRewrite VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrInput `pulumi:"uriRegexRewrite"`
}

func (VirtualServiceSpecHttpRewritePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRewritePatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpRewritePatchArgs) ToVirtualServiceSpecHttpRewritePatchOutput() VirtualServiceSpecHttpRewritePatchOutput {
	return i.ToVirtualServiceSpecHttpRewritePatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRewritePatchArgs) ToVirtualServiceSpecHttpRewritePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewritePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRewritePatchOutput)
}

func (i VirtualServiceSpecHttpRewritePatchArgs) ToVirtualServiceSpecHttpRewritePatchPtrOutput() VirtualServiceSpecHttpRewritePatchPtrOutput {
	return i.ToVirtualServiceSpecHttpRewritePatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRewritePatchArgs) ToVirtualServiceSpecHttpRewritePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewritePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRewritePatchOutput).ToVirtualServiceSpecHttpRewritePatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpRewritePatchPtrInput is an input type that accepts VirtualServiceSpecHttpRewritePatchArgs, VirtualServiceSpecHttpRewritePatchPtr and VirtualServiceSpecHttpRewritePatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRewritePatchPtrInput` via:
//
//	        VirtualServiceSpecHttpRewritePatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpRewritePatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRewritePatchPtrOutput() VirtualServiceSpecHttpRewritePatchPtrOutput
	ToVirtualServiceSpecHttpRewritePatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpRewritePatchPtrOutput
}

type virtualServiceSpecHttpRewritePatchPtrType VirtualServiceSpecHttpRewritePatchArgs

func VirtualServiceSpecHttpRewritePatchPtr(v *VirtualServiceSpecHttpRewritePatchArgs) VirtualServiceSpecHttpRewritePatchPtrInput {
	return (*virtualServiceSpecHttpRewritePatchPtrType)(v)
}

func (*virtualServiceSpecHttpRewritePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRewritePatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpRewritePatchPtrType) ToVirtualServiceSpecHttpRewritePatchPtrOutput() VirtualServiceSpecHttpRewritePatchPtrOutput {
	return i.ToVirtualServiceSpecHttpRewritePatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpRewritePatchPtrType) ToVirtualServiceSpecHttpRewritePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewritePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRewritePatchPtrOutput)
}

// Rewrite HTTP URIs and Authority headers.
type VirtualServiceSpecHttpRewritePatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRewritePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRewritePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRewritePatchOutput) ToVirtualServiceSpecHttpRewritePatchOutput() VirtualServiceSpecHttpRewritePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpRewritePatchOutput) ToVirtualServiceSpecHttpRewritePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewritePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpRewritePatchOutput) ToVirtualServiceSpecHttpRewritePatchPtrOutput() VirtualServiceSpecHttpRewritePatchPtrOutput {
	return o.ToVirtualServiceSpecHttpRewritePatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpRewritePatchOutput) ToVirtualServiceSpecHttpRewritePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewritePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpRewritePatch) *VirtualServiceSpecHttpRewritePatch {
		return &v
	}).(VirtualServiceSpecHttpRewritePatchPtrOutput)
}

// rewrite the Authority/Host header with this value.
func (o VirtualServiceSpecHttpRewritePatchOutput) Authority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRewritePatch) *string { return v.Authority }).(pulumi.StringPtrOutput)
}

// rewrite the path (or the prefix) portion of the URI with this value.
func (o VirtualServiceSpecHttpRewritePatchOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRewritePatch) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpRewritePatchOutput) UriRegexRewrite() VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRewritePatch) *VirtualServiceSpecHttpRewriteUriRegexRewritePatch {
		return v.UriRegexRewrite
	}).(VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput)
}

type VirtualServiceSpecHttpRewritePatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRewritePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRewritePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRewritePatchPtrOutput) ToVirtualServiceSpecHttpRewritePatchPtrOutput() VirtualServiceSpecHttpRewritePatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRewritePatchPtrOutput) ToVirtualServiceSpecHttpRewritePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewritePatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRewritePatchPtrOutput) Elem() VirtualServiceSpecHttpRewritePatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRewritePatch) VirtualServiceSpecHttpRewritePatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpRewritePatch
		return ret
	}).(VirtualServiceSpecHttpRewritePatchOutput)
}

// rewrite the Authority/Host header with this value.
func (o VirtualServiceSpecHttpRewritePatchPtrOutput) Authority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRewritePatch) *string {
		if v == nil {
			return nil
		}
		return v.Authority
	}).(pulumi.StringPtrOutput)
}

// rewrite the path (or the prefix) portion of the URI with this value.
func (o VirtualServiceSpecHttpRewritePatchPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRewritePatch) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpRewritePatchPtrOutput) UriRegexRewrite() VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRewritePatch) *VirtualServiceSpecHttpRewriteUriRegexRewritePatch {
		if v == nil {
			return nil
		}
		return v.UriRegexRewrite
	}).(VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput)
}

// rewrite the path portion of the URI with the specified regex.
type VirtualServiceSpecHttpRewriteUriRegexRewrite struct {
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Match *string `pulumi:"match"`
	// The string that should replace into matching portions of original URI.
	Rewrite *string `pulumi:"rewrite"`
}

// VirtualServiceSpecHttpRewriteUriRegexRewriteInput is an input type that accepts VirtualServiceSpecHttpRewriteUriRegexRewriteArgs and VirtualServiceSpecHttpRewriteUriRegexRewriteOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRewriteUriRegexRewriteInput` via:
//
//	VirtualServiceSpecHttpRewriteUriRegexRewriteArgs{...}
type VirtualServiceSpecHttpRewriteUriRegexRewriteInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRewriteUriRegexRewriteOutput() VirtualServiceSpecHttpRewriteUriRegexRewriteOutput
	ToVirtualServiceSpecHttpRewriteUriRegexRewriteOutputWithContext(context.Context) VirtualServiceSpecHttpRewriteUriRegexRewriteOutput
}

// rewrite the path portion of the URI with the specified regex.
type VirtualServiceSpecHttpRewriteUriRegexRewriteArgs struct {
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Match pulumi.StringPtrInput `pulumi:"match"`
	// The string that should replace into matching portions of original URI.
	Rewrite pulumi.StringPtrInput `pulumi:"rewrite"`
}

func (VirtualServiceSpecHttpRewriteUriRegexRewriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRewriteUriRegexRewrite)(nil)).Elem()
}

func (i VirtualServiceSpecHttpRewriteUriRegexRewriteArgs) ToVirtualServiceSpecHttpRewriteUriRegexRewriteOutput() VirtualServiceSpecHttpRewriteUriRegexRewriteOutput {
	return i.ToVirtualServiceSpecHttpRewriteUriRegexRewriteOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRewriteUriRegexRewriteArgs) ToVirtualServiceSpecHttpRewriteUriRegexRewriteOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewriteUriRegexRewriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRewriteUriRegexRewriteOutput)
}

func (i VirtualServiceSpecHttpRewriteUriRegexRewriteArgs) ToVirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput() VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput {
	return i.ToVirtualServiceSpecHttpRewriteUriRegexRewritePtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRewriteUriRegexRewriteArgs) ToVirtualServiceSpecHttpRewriteUriRegexRewritePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRewriteUriRegexRewriteOutput).ToVirtualServiceSpecHttpRewriteUriRegexRewritePtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpRewriteUriRegexRewritePtrInput is an input type that accepts VirtualServiceSpecHttpRewriteUriRegexRewriteArgs, VirtualServiceSpecHttpRewriteUriRegexRewritePtr and VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRewriteUriRegexRewritePtrInput` via:
//
//	        VirtualServiceSpecHttpRewriteUriRegexRewriteArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpRewriteUriRegexRewritePtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput() VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput
	ToVirtualServiceSpecHttpRewriteUriRegexRewritePtrOutputWithContext(context.Context) VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput
}

type virtualServiceSpecHttpRewriteUriRegexRewritePtrType VirtualServiceSpecHttpRewriteUriRegexRewriteArgs

func VirtualServiceSpecHttpRewriteUriRegexRewritePtr(v *VirtualServiceSpecHttpRewriteUriRegexRewriteArgs) VirtualServiceSpecHttpRewriteUriRegexRewritePtrInput {
	return (*virtualServiceSpecHttpRewriteUriRegexRewritePtrType)(v)
}

func (*virtualServiceSpecHttpRewriteUriRegexRewritePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRewriteUriRegexRewrite)(nil)).Elem()
}

func (i *virtualServiceSpecHttpRewriteUriRegexRewritePtrType) ToVirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput() VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput {
	return i.ToVirtualServiceSpecHttpRewriteUriRegexRewritePtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpRewriteUriRegexRewritePtrType) ToVirtualServiceSpecHttpRewriteUriRegexRewritePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput)
}

// rewrite the path portion of the URI with the specified regex.
type VirtualServiceSpecHttpRewriteUriRegexRewriteOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRewriteUriRegexRewriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRewriteUriRegexRewrite)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRewriteUriRegexRewriteOutput) ToVirtualServiceSpecHttpRewriteUriRegexRewriteOutput() VirtualServiceSpecHttpRewriteUriRegexRewriteOutput {
	return o
}

func (o VirtualServiceSpecHttpRewriteUriRegexRewriteOutput) ToVirtualServiceSpecHttpRewriteUriRegexRewriteOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewriteUriRegexRewriteOutput {
	return o
}

func (o VirtualServiceSpecHttpRewriteUriRegexRewriteOutput) ToVirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput() VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput {
	return o.ToVirtualServiceSpecHttpRewriteUriRegexRewritePtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpRewriteUriRegexRewriteOutput) ToVirtualServiceSpecHttpRewriteUriRegexRewritePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpRewriteUriRegexRewrite) *VirtualServiceSpecHttpRewriteUriRegexRewrite {
		return &v
	}).(VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput)
}

// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
func (o VirtualServiceSpecHttpRewriteUriRegexRewriteOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRewriteUriRegexRewrite) *string { return v.Match }).(pulumi.StringPtrOutput)
}

// The string that should replace into matching portions of original URI.
func (o VirtualServiceSpecHttpRewriteUriRegexRewriteOutput) Rewrite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRewriteUriRegexRewrite) *string { return v.Rewrite }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRewriteUriRegexRewrite)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput) ToVirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput() VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput) ToVirtualServiceSpecHttpRewriteUriRegexRewritePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput) Elem() VirtualServiceSpecHttpRewriteUriRegexRewriteOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRewriteUriRegexRewrite) VirtualServiceSpecHttpRewriteUriRegexRewrite {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpRewriteUriRegexRewrite
		return ret
	}).(VirtualServiceSpecHttpRewriteUriRegexRewriteOutput)
}

// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
func (o VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRewriteUriRegexRewrite) *string {
		if v == nil {
			return nil
		}
		return v.Match
	}).(pulumi.StringPtrOutput)
}

// The string that should replace into matching portions of original URI.
func (o VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput) Rewrite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRewriteUriRegexRewrite) *string {
		if v == nil {
			return nil
		}
		return v.Rewrite
	}).(pulumi.StringPtrOutput)
}

// rewrite the path portion of the URI with the specified regex.
type VirtualServiceSpecHttpRewriteUriRegexRewritePatch struct {
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Match *string `pulumi:"match"`
	// The string that should replace into matching portions of original URI.
	Rewrite *string `pulumi:"rewrite"`
}

// VirtualServiceSpecHttpRewriteUriRegexRewritePatchInput is an input type that accepts VirtualServiceSpecHttpRewriteUriRegexRewritePatchArgs and VirtualServiceSpecHttpRewriteUriRegexRewritePatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRewriteUriRegexRewritePatchInput` via:
//
//	VirtualServiceSpecHttpRewriteUriRegexRewritePatchArgs{...}
type VirtualServiceSpecHttpRewriteUriRegexRewritePatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRewriteUriRegexRewritePatchOutput() VirtualServiceSpecHttpRewriteUriRegexRewritePatchOutput
	ToVirtualServiceSpecHttpRewriteUriRegexRewritePatchOutputWithContext(context.Context) VirtualServiceSpecHttpRewriteUriRegexRewritePatchOutput
}

// rewrite the path portion of the URI with the specified regex.
type VirtualServiceSpecHttpRewriteUriRegexRewritePatchArgs struct {
	// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
	Match pulumi.StringPtrInput `pulumi:"match"`
	// The string that should replace into matching portions of original URI.
	Rewrite pulumi.StringPtrInput `pulumi:"rewrite"`
}

func (VirtualServiceSpecHttpRewriteUriRegexRewritePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRewriteUriRegexRewritePatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpRewriteUriRegexRewritePatchArgs) ToVirtualServiceSpecHttpRewriteUriRegexRewritePatchOutput() VirtualServiceSpecHttpRewriteUriRegexRewritePatchOutput {
	return i.ToVirtualServiceSpecHttpRewriteUriRegexRewritePatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRewriteUriRegexRewritePatchArgs) ToVirtualServiceSpecHttpRewriteUriRegexRewritePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewriteUriRegexRewritePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRewriteUriRegexRewritePatchOutput)
}

func (i VirtualServiceSpecHttpRewriteUriRegexRewritePatchArgs) ToVirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput() VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput {
	return i.ToVirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRewriteUriRegexRewritePatchArgs) ToVirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRewriteUriRegexRewritePatchOutput).ToVirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrInput is an input type that accepts VirtualServiceSpecHttpRewriteUriRegexRewritePatchArgs, VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtr and VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrInput` via:
//
//	        VirtualServiceSpecHttpRewriteUriRegexRewritePatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput() VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput
	ToVirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput
}

type virtualServiceSpecHttpRewriteUriRegexRewritePatchPtrType VirtualServiceSpecHttpRewriteUriRegexRewritePatchArgs

func VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtr(v *VirtualServiceSpecHttpRewriteUriRegexRewritePatchArgs) VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrInput {
	return (*virtualServiceSpecHttpRewriteUriRegexRewritePatchPtrType)(v)
}

func (*virtualServiceSpecHttpRewriteUriRegexRewritePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRewriteUriRegexRewritePatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpRewriteUriRegexRewritePatchPtrType) ToVirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput() VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput {
	return i.ToVirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpRewriteUriRegexRewritePatchPtrType) ToVirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput)
}

// rewrite the path portion of the URI with the specified regex.
type VirtualServiceSpecHttpRewriteUriRegexRewritePatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRewriteUriRegexRewritePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRewriteUriRegexRewritePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRewriteUriRegexRewritePatchOutput) ToVirtualServiceSpecHttpRewriteUriRegexRewritePatchOutput() VirtualServiceSpecHttpRewriteUriRegexRewritePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpRewriteUriRegexRewritePatchOutput) ToVirtualServiceSpecHttpRewriteUriRegexRewritePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewriteUriRegexRewritePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpRewriteUriRegexRewritePatchOutput) ToVirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput() VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput {
	return o.ToVirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpRewriteUriRegexRewritePatchOutput) ToVirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpRewriteUriRegexRewritePatch) *VirtualServiceSpecHttpRewriteUriRegexRewritePatch {
		return &v
	}).(VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput)
}

// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
func (o VirtualServiceSpecHttpRewriteUriRegexRewritePatchOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRewriteUriRegexRewritePatch) *string { return v.Match }).(pulumi.StringPtrOutput)
}

// The string that should replace into matching portions of original URI.
func (o VirtualServiceSpecHttpRewriteUriRegexRewritePatchOutput) Rewrite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRewriteUriRegexRewritePatch) *string { return v.Rewrite }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRewriteUriRegexRewritePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput) ToVirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput() VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput) ToVirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput) Elem() VirtualServiceSpecHttpRewriteUriRegexRewritePatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRewriteUriRegexRewritePatch) VirtualServiceSpecHttpRewriteUriRegexRewritePatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpRewriteUriRegexRewritePatch
		return ret
	}).(VirtualServiceSpecHttpRewriteUriRegexRewritePatchOutput)
}

// RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
func (o VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRewriteUriRegexRewritePatch) *string {
		if v == nil {
			return nil
		}
		return v.Match
	}).(pulumi.StringPtrOutput)
}

// The string that should replace into matching portions of original URI.
func (o VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput) Rewrite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRewriteUriRegexRewritePatch) *string {
		if v == nil {
			return nil
		}
		return v.Rewrite
	}).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpRoute struct {
	Destination *VirtualServiceSpecHttpRouteDestination `pulumi:"destination"`
	Headers     *VirtualServiceSpecHttpRouteHeaders     `pulumi:"headers"`
	// Weight specifies the relative proportion of traffic to be forwarded to the destination.
	Weight *int `pulumi:"weight"`
}

// VirtualServiceSpecHttpRouteInput is an input type that accepts VirtualServiceSpecHttpRouteArgs and VirtualServiceSpecHttpRouteOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRouteInput` via:
//
//	VirtualServiceSpecHttpRouteArgs{...}
type VirtualServiceSpecHttpRouteInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRouteOutput() VirtualServiceSpecHttpRouteOutput
	ToVirtualServiceSpecHttpRouteOutputWithContext(context.Context) VirtualServiceSpecHttpRouteOutput
}

type VirtualServiceSpecHttpRouteArgs struct {
	Destination VirtualServiceSpecHttpRouteDestinationPtrInput `pulumi:"destination"`
	Headers     VirtualServiceSpecHttpRouteHeadersPtrInput     `pulumi:"headers"`
	// Weight specifies the relative proportion of traffic to be forwarded to the destination.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (VirtualServiceSpecHttpRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRoute)(nil)).Elem()
}

func (i VirtualServiceSpecHttpRouteArgs) ToVirtualServiceSpecHttpRouteOutput() VirtualServiceSpecHttpRouteOutput {
	return i.ToVirtualServiceSpecHttpRouteOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRouteArgs) ToVirtualServiceSpecHttpRouteOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteOutput)
}

// VirtualServiceSpecHttpRouteArrayInput is an input type that accepts VirtualServiceSpecHttpRouteArray and VirtualServiceSpecHttpRouteArrayOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRouteArrayInput` via:
//
//	VirtualServiceSpecHttpRouteArray{ VirtualServiceSpecHttpRouteArgs{...} }
type VirtualServiceSpecHttpRouteArrayInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRouteArrayOutput() VirtualServiceSpecHttpRouteArrayOutput
	ToVirtualServiceSpecHttpRouteArrayOutputWithContext(context.Context) VirtualServiceSpecHttpRouteArrayOutput
}

type VirtualServiceSpecHttpRouteArray []VirtualServiceSpecHttpRouteInput

func (VirtualServiceSpecHttpRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecHttpRoute)(nil)).Elem()
}

func (i VirtualServiceSpecHttpRouteArray) ToVirtualServiceSpecHttpRouteArrayOutput() VirtualServiceSpecHttpRouteArrayOutput {
	return i.ToVirtualServiceSpecHttpRouteArrayOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRouteArray) ToVirtualServiceSpecHttpRouteArrayOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteArrayOutput)
}

type VirtualServiceSpecHttpRouteOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRoute)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRouteOutput) ToVirtualServiceSpecHttpRouteOutput() VirtualServiceSpecHttpRouteOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteOutput) ToVirtualServiceSpecHttpRouteOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteOutput) Destination() VirtualServiceSpecHttpRouteDestinationPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRoute) *VirtualServiceSpecHttpRouteDestination { return v.Destination }).(VirtualServiceSpecHttpRouteDestinationPtrOutput)
}

func (o VirtualServiceSpecHttpRouteOutput) Headers() VirtualServiceSpecHttpRouteHeadersPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRoute) *VirtualServiceSpecHttpRouteHeaders { return v.Headers }).(VirtualServiceSpecHttpRouteHeadersPtrOutput)
}

// Weight specifies the relative proportion of traffic to be forwarded to the destination.
func (o VirtualServiceSpecHttpRouteOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRoute) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type VirtualServiceSpecHttpRouteArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecHttpRoute)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRouteArrayOutput) ToVirtualServiceSpecHttpRouteArrayOutput() VirtualServiceSpecHttpRouteArrayOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteArrayOutput) ToVirtualServiceSpecHttpRouteArrayOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteArrayOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteArrayOutput) Index(i pulumi.IntInput) VirtualServiceSpecHttpRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceSpecHttpRoute {
		return vs[0].([]VirtualServiceSpecHttpRoute)[vs[1].(int)]
	}).(VirtualServiceSpecHttpRouteOutput)
}

// Destination uniquely identifies the instances of a service to which the request/connection should be forwarded to.
type VirtualServiceSpecHttpRouteDestination struct {
	// The name of a service from the service registry.
	Host *string                                     `pulumi:"host"`
	Port *VirtualServiceSpecHttpRouteDestinationPort `pulumi:"port"`
	// The name of a subset within the service.
	Subset *string `pulumi:"subset"`
}

// VirtualServiceSpecHttpRouteDestinationInput is an input type that accepts VirtualServiceSpecHttpRouteDestinationArgs and VirtualServiceSpecHttpRouteDestinationOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRouteDestinationInput` via:
//
//	VirtualServiceSpecHttpRouteDestinationArgs{...}
type VirtualServiceSpecHttpRouteDestinationInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRouteDestinationOutput() VirtualServiceSpecHttpRouteDestinationOutput
	ToVirtualServiceSpecHttpRouteDestinationOutputWithContext(context.Context) VirtualServiceSpecHttpRouteDestinationOutput
}

// Destination uniquely identifies the instances of a service to which the request/connection should be forwarded to.
type VirtualServiceSpecHttpRouteDestinationArgs struct {
	// The name of a service from the service registry.
	Host pulumi.StringPtrInput                              `pulumi:"host"`
	Port VirtualServiceSpecHttpRouteDestinationPortPtrInput `pulumi:"port"`
	// The name of a subset within the service.
	Subset pulumi.StringPtrInput `pulumi:"subset"`
}

func (VirtualServiceSpecHttpRouteDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRouteDestination)(nil)).Elem()
}

func (i VirtualServiceSpecHttpRouteDestinationArgs) ToVirtualServiceSpecHttpRouteDestinationOutput() VirtualServiceSpecHttpRouteDestinationOutput {
	return i.ToVirtualServiceSpecHttpRouteDestinationOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRouteDestinationArgs) ToVirtualServiceSpecHttpRouteDestinationOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteDestinationOutput)
}

func (i VirtualServiceSpecHttpRouteDestinationArgs) ToVirtualServiceSpecHttpRouteDestinationPtrOutput() VirtualServiceSpecHttpRouteDestinationPtrOutput {
	return i.ToVirtualServiceSpecHttpRouteDestinationPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRouteDestinationArgs) ToVirtualServiceSpecHttpRouteDestinationPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteDestinationOutput).ToVirtualServiceSpecHttpRouteDestinationPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpRouteDestinationPtrInput is an input type that accepts VirtualServiceSpecHttpRouteDestinationArgs, VirtualServiceSpecHttpRouteDestinationPtr and VirtualServiceSpecHttpRouteDestinationPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRouteDestinationPtrInput` via:
//
//	        VirtualServiceSpecHttpRouteDestinationArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpRouteDestinationPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRouteDestinationPtrOutput() VirtualServiceSpecHttpRouteDestinationPtrOutput
	ToVirtualServiceSpecHttpRouteDestinationPtrOutputWithContext(context.Context) VirtualServiceSpecHttpRouteDestinationPtrOutput
}

type virtualServiceSpecHttpRouteDestinationPtrType VirtualServiceSpecHttpRouteDestinationArgs

func VirtualServiceSpecHttpRouteDestinationPtr(v *VirtualServiceSpecHttpRouteDestinationArgs) VirtualServiceSpecHttpRouteDestinationPtrInput {
	return (*virtualServiceSpecHttpRouteDestinationPtrType)(v)
}

func (*virtualServiceSpecHttpRouteDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRouteDestination)(nil)).Elem()
}

func (i *virtualServiceSpecHttpRouteDestinationPtrType) ToVirtualServiceSpecHttpRouteDestinationPtrOutput() VirtualServiceSpecHttpRouteDestinationPtrOutput {
	return i.ToVirtualServiceSpecHttpRouteDestinationPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpRouteDestinationPtrType) ToVirtualServiceSpecHttpRouteDestinationPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteDestinationPtrOutput)
}

// Destination uniquely identifies the instances of a service to which the request/connection should be forwarded to.
type VirtualServiceSpecHttpRouteDestinationOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRouteDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRouteDestination)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRouteDestinationOutput) ToVirtualServiceSpecHttpRouteDestinationOutput() VirtualServiceSpecHttpRouteDestinationOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteDestinationOutput) ToVirtualServiceSpecHttpRouteDestinationOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteDestinationOutput) ToVirtualServiceSpecHttpRouteDestinationPtrOutput() VirtualServiceSpecHttpRouteDestinationPtrOutput {
	return o.ToVirtualServiceSpecHttpRouteDestinationPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpRouteDestinationOutput) ToVirtualServiceSpecHttpRouteDestinationPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpRouteDestination) *VirtualServiceSpecHttpRouteDestination {
		return &v
	}).(VirtualServiceSpecHttpRouteDestinationPtrOutput)
}

// The name of a service from the service registry.
func (o VirtualServiceSpecHttpRouteDestinationOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteDestination) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpRouteDestinationOutput) Port() VirtualServiceSpecHttpRouteDestinationPortPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteDestination) *VirtualServiceSpecHttpRouteDestinationPort {
		return v.Port
	}).(VirtualServiceSpecHttpRouteDestinationPortPtrOutput)
}

// The name of a subset within the service.
func (o VirtualServiceSpecHttpRouteDestinationOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteDestination) *string { return v.Subset }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpRouteDestinationPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRouteDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRouteDestination)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRouteDestinationPtrOutput) ToVirtualServiceSpecHttpRouteDestinationPtrOutput() VirtualServiceSpecHttpRouteDestinationPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteDestinationPtrOutput) ToVirtualServiceSpecHttpRouteDestinationPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteDestinationPtrOutput) Elem() VirtualServiceSpecHttpRouteDestinationOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteDestination) VirtualServiceSpecHttpRouteDestination {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpRouteDestination
		return ret
	}).(VirtualServiceSpecHttpRouteDestinationOutput)
}

// The name of a service from the service registry.
func (o VirtualServiceSpecHttpRouteDestinationPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteDestination) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpRouteDestinationPtrOutput) Port() VirtualServiceSpecHttpRouteDestinationPortPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteDestination) *VirtualServiceSpecHttpRouteDestinationPort {
		if v == nil {
			return nil
		}
		return v.Port
	}).(VirtualServiceSpecHttpRouteDestinationPortPtrOutput)
}

// The name of a subset within the service.
func (o VirtualServiceSpecHttpRouteDestinationPtrOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteDestination) *string {
		if v == nil {
			return nil
		}
		return v.Subset
	}).(pulumi.StringPtrOutput)
}

// Destination uniquely identifies the instances of a service to which the request/connection should be forwarded to.
type VirtualServiceSpecHttpRouteDestinationPatch struct {
	// The name of a service from the service registry.
	Host *string                                          `pulumi:"host"`
	Port *VirtualServiceSpecHttpRouteDestinationPortPatch `pulumi:"port"`
	// The name of a subset within the service.
	Subset *string `pulumi:"subset"`
}

// VirtualServiceSpecHttpRouteDestinationPatchInput is an input type that accepts VirtualServiceSpecHttpRouteDestinationPatchArgs and VirtualServiceSpecHttpRouteDestinationPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRouteDestinationPatchInput` via:
//
//	VirtualServiceSpecHttpRouteDestinationPatchArgs{...}
type VirtualServiceSpecHttpRouteDestinationPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRouteDestinationPatchOutput() VirtualServiceSpecHttpRouteDestinationPatchOutput
	ToVirtualServiceSpecHttpRouteDestinationPatchOutputWithContext(context.Context) VirtualServiceSpecHttpRouteDestinationPatchOutput
}

// Destination uniquely identifies the instances of a service to which the request/connection should be forwarded to.
type VirtualServiceSpecHttpRouteDestinationPatchArgs struct {
	// The name of a service from the service registry.
	Host pulumi.StringPtrInput                                   `pulumi:"host"`
	Port VirtualServiceSpecHttpRouteDestinationPortPatchPtrInput `pulumi:"port"`
	// The name of a subset within the service.
	Subset pulumi.StringPtrInput `pulumi:"subset"`
}

func (VirtualServiceSpecHttpRouteDestinationPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRouteDestinationPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpRouteDestinationPatchArgs) ToVirtualServiceSpecHttpRouteDestinationPatchOutput() VirtualServiceSpecHttpRouteDestinationPatchOutput {
	return i.ToVirtualServiceSpecHttpRouteDestinationPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRouteDestinationPatchArgs) ToVirtualServiceSpecHttpRouteDestinationPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteDestinationPatchOutput)
}

func (i VirtualServiceSpecHttpRouteDestinationPatchArgs) ToVirtualServiceSpecHttpRouteDestinationPatchPtrOutput() VirtualServiceSpecHttpRouteDestinationPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpRouteDestinationPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRouteDestinationPatchArgs) ToVirtualServiceSpecHttpRouteDestinationPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteDestinationPatchOutput).ToVirtualServiceSpecHttpRouteDestinationPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpRouteDestinationPatchPtrInput is an input type that accepts VirtualServiceSpecHttpRouteDestinationPatchArgs, VirtualServiceSpecHttpRouteDestinationPatchPtr and VirtualServiceSpecHttpRouteDestinationPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRouteDestinationPatchPtrInput` via:
//
//	        VirtualServiceSpecHttpRouteDestinationPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpRouteDestinationPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRouteDestinationPatchPtrOutput() VirtualServiceSpecHttpRouteDestinationPatchPtrOutput
	ToVirtualServiceSpecHttpRouteDestinationPatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpRouteDestinationPatchPtrOutput
}

type virtualServiceSpecHttpRouteDestinationPatchPtrType VirtualServiceSpecHttpRouteDestinationPatchArgs

func VirtualServiceSpecHttpRouteDestinationPatchPtr(v *VirtualServiceSpecHttpRouteDestinationPatchArgs) VirtualServiceSpecHttpRouteDestinationPatchPtrInput {
	return (*virtualServiceSpecHttpRouteDestinationPatchPtrType)(v)
}

func (*virtualServiceSpecHttpRouteDestinationPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRouteDestinationPatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpRouteDestinationPatchPtrType) ToVirtualServiceSpecHttpRouteDestinationPatchPtrOutput() VirtualServiceSpecHttpRouteDestinationPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpRouteDestinationPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpRouteDestinationPatchPtrType) ToVirtualServiceSpecHttpRouteDestinationPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteDestinationPatchPtrOutput)
}

// Destination uniquely identifies the instances of a service to which the request/connection should be forwarded to.
type VirtualServiceSpecHttpRouteDestinationPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRouteDestinationPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRouteDestinationPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRouteDestinationPatchOutput) ToVirtualServiceSpecHttpRouteDestinationPatchOutput() VirtualServiceSpecHttpRouteDestinationPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteDestinationPatchOutput) ToVirtualServiceSpecHttpRouteDestinationPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteDestinationPatchOutput) ToVirtualServiceSpecHttpRouteDestinationPatchPtrOutput() VirtualServiceSpecHttpRouteDestinationPatchPtrOutput {
	return o.ToVirtualServiceSpecHttpRouteDestinationPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpRouteDestinationPatchOutput) ToVirtualServiceSpecHttpRouteDestinationPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpRouteDestinationPatch) *VirtualServiceSpecHttpRouteDestinationPatch {
		return &v
	}).(VirtualServiceSpecHttpRouteDestinationPatchPtrOutput)
}

// The name of a service from the service registry.
func (o VirtualServiceSpecHttpRouteDestinationPatchOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteDestinationPatch) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpRouteDestinationPatchOutput) Port() VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteDestinationPatch) *VirtualServiceSpecHttpRouteDestinationPortPatch {
		return v.Port
	}).(VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput)
}

// The name of a subset within the service.
func (o VirtualServiceSpecHttpRouteDestinationPatchOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteDestinationPatch) *string { return v.Subset }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecHttpRouteDestinationPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRouteDestinationPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRouteDestinationPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRouteDestinationPatchPtrOutput) ToVirtualServiceSpecHttpRouteDestinationPatchPtrOutput() VirtualServiceSpecHttpRouteDestinationPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteDestinationPatchPtrOutput) ToVirtualServiceSpecHttpRouteDestinationPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteDestinationPatchPtrOutput) Elem() VirtualServiceSpecHttpRouteDestinationPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteDestinationPatch) VirtualServiceSpecHttpRouteDestinationPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpRouteDestinationPatch
		return ret
	}).(VirtualServiceSpecHttpRouteDestinationPatchOutput)
}

// The name of a service from the service registry.
func (o VirtualServiceSpecHttpRouteDestinationPatchPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteDestinationPatch) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecHttpRouteDestinationPatchPtrOutput) Port() VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteDestinationPatch) *VirtualServiceSpecHttpRouteDestinationPortPatch {
		if v == nil {
			return nil
		}
		return v.Port
	}).(VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput)
}

// The name of a subset within the service.
func (o VirtualServiceSpecHttpRouteDestinationPatchPtrOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteDestinationPatch) *string {
		if v == nil {
			return nil
		}
		return v.Subset
	}).(pulumi.StringPtrOutput)
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecHttpRouteDestinationPort struct {
	Number *int `pulumi:"number"`
}

// VirtualServiceSpecHttpRouteDestinationPortInput is an input type that accepts VirtualServiceSpecHttpRouteDestinationPortArgs and VirtualServiceSpecHttpRouteDestinationPortOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRouteDestinationPortInput` via:
//
//	VirtualServiceSpecHttpRouteDestinationPortArgs{...}
type VirtualServiceSpecHttpRouteDestinationPortInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRouteDestinationPortOutput() VirtualServiceSpecHttpRouteDestinationPortOutput
	ToVirtualServiceSpecHttpRouteDestinationPortOutputWithContext(context.Context) VirtualServiceSpecHttpRouteDestinationPortOutput
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecHttpRouteDestinationPortArgs struct {
	Number pulumi.IntPtrInput `pulumi:"number"`
}

func (VirtualServiceSpecHttpRouteDestinationPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRouteDestinationPort)(nil)).Elem()
}

func (i VirtualServiceSpecHttpRouteDestinationPortArgs) ToVirtualServiceSpecHttpRouteDestinationPortOutput() VirtualServiceSpecHttpRouteDestinationPortOutput {
	return i.ToVirtualServiceSpecHttpRouteDestinationPortOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRouteDestinationPortArgs) ToVirtualServiceSpecHttpRouteDestinationPortOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteDestinationPortOutput)
}

func (i VirtualServiceSpecHttpRouteDestinationPortArgs) ToVirtualServiceSpecHttpRouteDestinationPortPtrOutput() VirtualServiceSpecHttpRouteDestinationPortPtrOutput {
	return i.ToVirtualServiceSpecHttpRouteDestinationPortPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRouteDestinationPortArgs) ToVirtualServiceSpecHttpRouteDestinationPortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteDestinationPortOutput).ToVirtualServiceSpecHttpRouteDestinationPortPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpRouteDestinationPortPtrInput is an input type that accepts VirtualServiceSpecHttpRouteDestinationPortArgs, VirtualServiceSpecHttpRouteDestinationPortPtr and VirtualServiceSpecHttpRouteDestinationPortPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRouteDestinationPortPtrInput` via:
//
//	        VirtualServiceSpecHttpRouteDestinationPortArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpRouteDestinationPortPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRouteDestinationPortPtrOutput() VirtualServiceSpecHttpRouteDestinationPortPtrOutput
	ToVirtualServiceSpecHttpRouteDestinationPortPtrOutputWithContext(context.Context) VirtualServiceSpecHttpRouteDestinationPortPtrOutput
}

type virtualServiceSpecHttpRouteDestinationPortPtrType VirtualServiceSpecHttpRouteDestinationPortArgs

func VirtualServiceSpecHttpRouteDestinationPortPtr(v *VirtualServiceSpecHttpRouteDestinationPortArgs) VirtualServiceSpecHttpRouteDestinationPortPtrInput {
	return (*virtualServiceSpecHttpRouteDestinationPortPtrType)(v)
}

func (*virtualServiceSpecHttpRouteDestinationPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRouteDestinationPort)(nil)).Elem()
}

func (i *virtualServiceSpecHttpRouteDestinationPortPtrType) ToVirtualServiceSpecHttpRouteDestinationPortPtrOutput() VirtualServiceSpecHttpRouteDestinationPortPtrOutput {
	return i.ToVirtualServiceSpecHttpRouteDestinationPortPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpRouteDestinationPortPtrType) ToVirtualServiceSpecHttpRouteDestinationPortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteDestinationPortPtrOutput)
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecHttpRouteDestinationPortOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRouteDestinationPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRouteDestinationPort)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRouteDestinationPortOutput) ToVirtualServiceSpecHttpRouteDestinationPortOutput() VirtualServiceSpecHttpRouteDestinationPortOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteDestinationPortOutput) ToVirtualServiceSpecHttpRouteDestinationPortOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationPortOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteDestinationPortOutput) ToVirtualServiceSpecHttpRouteDestinationPortPtrOutput() VirtualServiceSpecHttpRouteDestinationPortPtrOutput {
	return o.ToVirtualServiceSpecHttpRouteDestinationPortPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpRouteDestinationPortOutput) ToVirtualServiceSpecHttpRouteDestinationPortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationPortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpRouteDestinationPort) *VirtualServiceSpecHttpRouteDestinationPort {
		return &v
	}).(VirtualServiceSpecHttpRouteDestinationPortPtrOutput)
}

func (o VirtualServiceSpecHttpRouteDestinationPortOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteDestinationPort) *int { return v.Number }).(pulumi.IntPtrOutput)
}

type VirtualServiceSpecHttpRouteDestinationPortPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRouteDestinationPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRouteDestinationPort)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRouteDestinationPortPtrOutput) ToVirtualServiceSpecHttpRouteDestinationPortPtrOutput() VirtualServiceSpecHttpRouteDestinationPortPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteDestinationPortPtrOutput) ToVirtualServiceSpecHttpRouteDestinationPortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationPortPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteDestinationPortPtrOutput) Elem() VirtualServiceSpecHttpRouteDestinationPortOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteDestinationPort) VirtualServiceSpecHttpRouteDestinationPort {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpRouteDestinationPort
		return ret
	}).(VirtualServiceSpecHttpRouteDestinationPortOutput)
}

func (o VirtualServiceSpecHttpRouteDestinationPortPtrOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteDestinationPort) *int {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.IntPtrOutput)
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecHttpRouteDestinationPortPatch struct {
	Number *int `pulumi:"number"`
}

// VirtualServiceSpecHttpRouteDestinationPortPatchInput is an input type that accepts VirtualServiceSpecHttpRouteDestinationPortPatchArgs and VirtualServiceSpecHttpRouteDestinationPortPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRouteDestinationPortPatchInput` via:
//
//	VirtualServiceSpecHttpRouteDestinationPortPatchArgs{...}
type VirtualServiceSpecHttpRouteDestinationPortPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRouteDestinationPortPatchOutput() VirtualServiceSpecHttpRouteDestinationPortPatchOutput
	ToVirtualServiceSpecHttpRouteDestinationPortPatchOutputWithContext(context.Context) VirtualServiceSpecHttpRouteDestinationPortPatchOutput
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecHttpRouteDestinationPortPatchArgs struct {
	Number pulumi.IntPtrInput `pulumi:"number"`
}

func (VirtualServiceSpecHttpRouteDestinationPortPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRouteDestinationPortPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpRouteDestinationPortPatchArgs) ToVirtualServiceSpecHttpRouteDestinationPortPatchOutput() VirtualServiceSpecHttpRouteDestinationPortPatchOutput {
	return i.ToVirtualServiceSpecHttpRouteDestinationPortPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRouteDestinationPortPatchArgs) ToVirtualServiceSpecHttpRouteDestinationPortPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationPortPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteDestinationPortPatchOutput)
}

func (i VirtualServiceSpecHttpRouteDestinationPortPatchArgs) ToVirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput() VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpRouteDestinationPortPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRouteDestinationPortPatchArgs) ToVirtualServiceSpecHttpRouteDestinationPortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteDestinationPortPatchOutput).ToVirtualServiceSpecHttpRouteDestinationPortPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpRouteDestinationPortPatchPtrInput is an input type that accepts VirtualServiceSpecHttpRouteDestinationPortPatchArgs, VirtualServiceSpecHttpRouteDestinationPortPatchPtr and VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRouteDestinationPortPatchPtrInput` via:
//
//	        VirtualServiceSpecHttpRouteDestinationPortPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpRouteDestinationPortPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput() VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput
	ToVirtualServiceSpecHttpRouteDestinationPortPatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput
}

type virtualServiceSpecHttpRouteDestinationPortPatchPtrType VirtualServiceSpecHttpRouteDestinationPortPatchArgs

func VirtualServiceSpecHttpRouteDestinationPortPatchPtr(v *VirtualServiceSpecHttpRouteDestinationPortPatchArgs) VirtualServiceSpecHttpRouteDestinationPortPatchPtrInput {
	return (*virtualServiceSpecHttpRouteDestinationPortPatchPtrType)(v)
}

func (*virtualServiceSpecHttpRouteDestinationPortPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRouteDestinationPortPatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpRouteDestinationPortPatchPtrType) ToVirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput() VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpRouteDestinationPortPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpRouteDestinationPortPatchPtrType) ToVirtualServiceSpecHttpRouteDestinationPortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput)
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecHttpRouteDestinationPortPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRouteDestinationPortPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRouteDestinationPortPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRouteDestinationPortPatchOutput) ToVirtualServiceSpecHttpRouteDestinationPortPatchOutput() VirtualServiceSpecHttpRouteDestinationPortPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteDestinationPortPatchOutput) ToVirtualServiceSpecHttpRouteDestinationPortPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationPortPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteDestinationPortPatchOutput) ToVirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput() VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput {
	return o.ToVirtualServiceSpecHttpRouteDestinationPortPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpRouteDestinationPortPatchOutput) ToVirtualServiceSpecHttpRouteDestinationPortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpRouteDestinationPortPatch) *VirtualServiceSpecHttpRouteDestinationPortPatch {
		return &v
	}).(VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput)
}

func (o VirtualServiceSpecHttpRouteDestinationPortPatchOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteDestinationPortPatch) *int { return v.Number }).(pulumi.IntPtrOutput)
}

type VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRouteDestinationPortPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput) ToVirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput() VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput) ToVirtualServiceSpecHttpRouteDestinationPortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput) Elem() VirtualServiceSpecHttpRouteDestinationPortPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteDestinationPortPatch) VirtualServiceSpecHttpRouteDestinationPortPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpRouteDestinationPortPatch
		return ret
	}).(VirtualServiceSpecHttpRouteDestinationPortPatchOutput)
}

func (o VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteDestinationPortPatch) *int {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.IntPtrOutput)
}

type VirtualServiceSpecHttpRouteHeaders struct {
	Request  *VirtualServiceSpecHttpRouteHeadersRequest  `pulumi:"request"`
	Response *VirtualServiceSpecHttpRouteHeadersResponse `pulumi:"response"`
}

// VirtualServiceSpecHttpRouteHeadersInput is an input type that accepts VirtualServiceSpecHttpRouteHeadersArgs and VirtualServiceSpecHttpRouteHeadersOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRouteHeadersInput` via:
//
//	VirtualServiceSpecHttpRouteHeadersArgs{...}
type VirtualServiceSpecHttpRouteHeadersInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRouteHeadersOutput() VirtualServiceSpecHttpRouteHeadersOutput
	ToVirtualServiceSpecHttpRouteHeadersOutputWithContext(context.Context) VirtualServiceSpecHttpRouteHeadersOutput
}

type VirtualServiceSpecHttpRouteHeadersArgs struct {
	Request  VirtualServiceSpecHttpRouteHeadersRequestPtrInput  `pulumi:"request"`
	Response VirtualServiceSpecHttpRouteHeadersResponsePtrInput `pulumi:"response"`
}

func (VirtualServiceSpecHttpRouteHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRouteHeaders)(nil)).Elem()
}

func (i VirtualServiceSpecHttpRouteHeadersArgs) ToVirtualServiceSpecHttpRouteHeadersOutput() VirtualServiceSpecHttpRouteHeadersOutput {
	return i.ToVirtualServiceSpecHttpRouteHeadersOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRouteHeadersArgs) ToVirtualServiceSpecHttpRouteHeadersOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteHeadersOutput)
}

func (i VirtualServiceSpecHttpRouteHeadersArgs) ToVirtualServiceSpecHttpRouteHeadersPtrOutput() VirtualServiceSpecHttpRouteHeadersPtrOutput {
	return i.ToVirtualServiceSpecHttpRouteHeadersPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRouteHeadersArgs) ToVirtualServiceSpecHttpRouteHeadersPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteHeadersOutput).ToVirtualServiceSpecHttpRouteHeadersPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpRouteHeadersPtrInput is an input type that accepts VirtualServiceSpecHttpRouteHeadersArgs, VirtualServiceSpecHttpRouteHeadersPtr and VirtualServiceSpecHttpRouteHeadersPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRouteHeadersPtrInput` via:
//
//	        VirtualServiceSpecHttpRouteHeadersArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpRouteHeadersPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRouteHeadersPtrOutput() VirtualServiceSpecHttpRouteHeadersPtrOutput
	ToVirtualServiceSpecHttpRouteHeadersPtrOutputWithContext(context.Context) VirtualServiceSpecHttpRouteHeadersPtrOutput
}

type virtualServiceSpecHttpRouteHeadersPtrType VirtualServiceSpecHttpRouteHeadersArgs

func VirtualServiceSpecHttpRouteHeadersPtr(v *VirtualServiceSpecHttpRouteHeadersArgs) VirtualServiceSpecHttpRouteHeadersPtrInput {
	return (*virtualServiceSpecHttpRouteHeadersPtrType)(v)
}

func (*virtualServiceSpecHttpRouteHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRouteHeaders)(nil)).Elem()
}

func (i *virtualServiceSpecHttpRouteHeadersPtrType) ToVirtualServiceSpecHttpRouteHeadersPtrOutput() VirtualServiceSpecHttpRouteHeadersPtrOutput {
	return i.ToVirtualServiceSpecHttpRouteHeadersPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpRouteHeadersPtrType) ToVirtualServiceSpecHttpRouteHeadersPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteHeadersPtrOutput)
}

type VirtualServiceSpecHttpRouteHeadersOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRouteHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRouteHeaders)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRouteHeadersOutput) ToVirtualServiceSpecHttpRouteHeadersOutput() VirtualServiceSpecHttpRouteHeadersOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersOutput) ToVirtualServiceSpecHttpRouteHeadersOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersOutput) ToVirtualServiceSpecHttpRouteHeadersPtrOutput() VirtualServiceSpecHttpRouteHeadersPtrOutput {
	return o.ToVirtualServiceSpecHttpRouteHeadersPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpRouteHeadersOutput) ToVirtualServiceSpecHttpRouteHeadersPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpRouteHeaders) *VirtualServiceSpecHttpRouteHeaders {
		return &v
	}).(VirtualServiceSpecHttpRouteHeadersPtrOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersOutput) Request() VirtualServiceSpecHttpRouteHeadersRequestPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteHeaders) *VirtualServiceSpecHttpRouteHeadersRequest {
		return v.Request
	}).(VirtualServiceSpecHttpRouteHeadersRequestPtrOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersOutput) Response() VirtualServiceSpecHttpRouteHeadersResponsePtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteHeaders) *VirtualServiceSpecHttpRouteHeadersResponse {
		return v.Response
	}).(VirtualServiceSpecHttpRouteHeadersResponsePtrOutput)
}

type VirtualServiceSpecHttpRouteHeadersPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRouteHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRouteHeaders)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRouteHeadersPtrOutput) ToVirtualServiceSpecHttpRouteHeadersPtrOutput() VirtualServiceSpecHttpRouteHeadersPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersPtrOutput) ToVirtualServiceSpecHttpRouteHeadersPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersPtrOutput) Elem() VirtualServiceSpecHttpRouteHeadersOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteHeaders) VirtualServiceSpecHttpRouteHeaders {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpRouteHeaders
		return ret
	}).(VirtualServiceSpecHttpRouteHeadersOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersPtrOutput) Request() VirtualServiceSpecHttpRouteHeadersRequestPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteHeaders) *VirtualServiceSpecHttpRouteHeadersRequest {
		if v == nil {
			return nil
		}
		return v.Request
	}).(VirtualServiceSpecHttpRouteHeadersRequestPtrOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersPtrOutput) Response() VirtualServiceSpecHttpRouteHeadersResponsePtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteHeaders) *VirtualServiceSpecHttpRouteHeadersResponse {
		if v == nil {
			return nil
		}
		return v.Response
	}).(VirtualServiceSpecHttpRouteHeadersResponsePtrOutput)
}

type VirtualServiceSpecHttpRouteHeadersPatch struct {
	Request  *VirtualServiceSpecHttpRouteHeadersRequestPatch  `pulumi:"request"`
	Response *VirtualServiceSpecHttpRouteHeadersResponsePatch `pulumi:"response"`
}

// VirtualServiceSpecHttpRouteHeadersPatchInput is an input type that accepts VirtualServiceSpecHttpRouteHeadersPatchArgs and VirtualServiceSpecHttpRouteHeadersPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRouteHeadersPatchInput` via:
//
//	VirtualServiceSpecHttpRouteHeadersPatchArgs{...}
type VirtualServiceSpecHttpRouteHeadersPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRouteHeadersPatchOutput() VirtualServiceSpecHttpRouteHeadersPatchOutput
	ToVirtualServiceSpecHttpRouteHeadersPatchOutputWithContext(context.Context) VirtualServiceSpecHttpRouteHeadersPatchOutput
}

type VirtualServiceSpecHttpRouteHeadersPatchArgs struct {
	Request  VirtualServiceSpecHttpRouteHeadersRequestPatchPtrInput  `pulumi:"request"`
	Response VirtualServiceSpecHttpRouteHeadersResponsePatchPtrInput `pulumi:"response"`
}

func (VirtualServiceSpecHttpRouteHeadersPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRouteHeadersPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpRouteHeadersPatchArgs) ToVirtualServiceSpecHttpRouteHeadersPatchOutput() VirtualServiceSpecHttpRouteHeadersPatchOutput {
	return i.ToVirtualServiceSpecHttpRouteHeadersPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRouteHeadersPatchArgs) ToVirtualServiceSpecHttpRouteHeadersPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteHeadersPatchOutput)
}

func (i VirtualServiceSpecHttpRouteHeadersPatchArgs) ToVirtualServiceSpecHttpRouteHeadersPatchPtrOutput() VirtualServiceSpecHttpRouteHeadersPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpRouteHeadersPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRouteHeadersPatchArgs) ToVirtualServiceSpecHttpRouteHeadersPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteHeadersPatchOutput).ToVirtualServiceSpecHttpRouteHeadersPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpRouteHeadersPatchPtrInput is an input type that accepts VirtualServiceSpecHttpRouteHeadersPatchArgs, VirtualServiceSpecHttpRouteHeadersPatchPtr and VirtualServiceSpecHttpRouteHeadersPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRouteHeadersPatchPtrInput` via:
//
//	        VirtualServiceSpecHttpRouteHeadersPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpRouteHeadersPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRouteHeadersPatchPtrOutput() VirtualServiceSpecHttpRouteHeadersPatchPtrOutput
	ToVirtualServiceSpecHttpRouteHeadersPatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpRouteHeadersPatchPtrOutput
}

type virtualServiceSpecHttpRouteHeadersPatchPtrType VirtualServiceSpecHttpRouteHeadersPatchArgs

func VirtualServiceSpecHttpRouteHeadersPatchPtr(v *VirtualServiceSpecHttpRouteHeadersPatchArgs) VirtualServiceSpecHttpRouteHeadersPatchPtrInput {
	return (*virtualServiceSpecHttpRouteHeadersPatchPtrType)(v)
}

func (*virtualServiceSpecHttpRouteHeadersPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRouteHeadersPatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpRouteHeadersPatchPtrType) ToVirtualServiceSpecHttpRouteHeadersPatchPtrOutput() VirtualServiceSpecHttpRouteHeadersPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpRouteHeadersPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpRouteHeadersPatchPtrType) ToVirtualServiceSpecHttpRouteHeadersPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteHeadersPatchPtrOutput)
}

type VirtualServiceSpecHttpRouteHeadersPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRouteHeadersPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRouteHeadersPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRouteHeadersPatchOutput) ToVirtualServiceSpecHttpRouteHeadersPatchOutput() VirtualServiceSpecHttpRouteHeadersPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersPatchOutput) ToVirtualServiceSpecHttpRouteHeadersPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersPatchOutput) ToVirtualServiceSpecHttpRouteHeadersPatchPtrOutput() VirtualServiceSpecHttpRouteHeadersPatchPtrOutput {
	return o.ToVirtualServiceSpecHttpRouteHeadersPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpRouteHeadersPatchOutput) ToVirtualServiceSpecHttpRouteHeadersPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpRouteHeadersPatch) *VirtualServiceSpecHttpRouteHeadersPatch {
		return &v
	}).(VirtualServiceSpecHttpRouteHeadersPatchPtrOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersPatchOutput) Request() VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteHeadersPatch) *VirtualServiceSpecHttpRouteHeadersRequestPatch {
		return v.Request
	}).(VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersPatchOutput) Response() VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteHeadersPatch) *VirtualServiceSpecHttpRouteHeadersResponsePatch {
		return v.Response
	}).(VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput)
}

type VirtualServiceSpecHttpRouteHeadersPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRouteHeadersPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRouteHeadersPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRouteHeadersPatchPtrOutput) ToVirtualServiceSpecHttpRouteHeadersPatchPtrOutput() VirtualServiceSpecHttpRouteHeadersPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersPatchPtrOutput) ToVirtualServiceSpecHttpRouteHeadersPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersPatchPtrOutput) Elem() VirtualServiceSpecHttpRouteHeadersPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteHeadersPatch) VirtualServiceSpecHttpRouteHeadersPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpRouteHeadersPatch
		return ret
	}).(VirtualServiceSpecHttpRouteHeadersPatchOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersPatchPtrOutput) Request() VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteHeadersPatch) *VirtualServiceSpecHttpRouteHeadersRequestPatch {
		if v == nil {
			return nil
		}
		return v.Request
	}).(VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersPatchPtrOutput) Response() VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteHeadersPatch) *VirtualServiceSpecHttpRouteHeadersResponsePatch {
		if v == nil {
			return nil
		}
		return v.Response
	}).(VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput)
}

type VirtualServiceSpecHttpRouteHeadersRequest struct {
	Add    map[string]string `pulumi:"add"`
	Remove []string          `pulumi:"remove"`
	Set    map[string]string `pulumi:"set"`
}

// VirtualServiceSpecHttpRouteHeadersRequestInput is an input type that accepts VirtualServiceSpecHttpRouteHeadersRequestArgs and VirtualServiceSpecHttpRouteHeadersRequestOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRouteHeadersRequestInput` via:
//
//	VirtualServiceSpecHttpRouteHeadersRequestArgs{...}
type VirtualServiceSpecHttpRouteHeadersRequestInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRouteHeadersRequestOutput() VirtualServiceSpecHttpRouteHeadersRequestOutput
	ToVirtualServiceSpecHttpRouteHeadersRequestOutputWithContext(context.Context) VirtualServiceSpecHttpRouteHeadersRequestOutput
}

type VirtualServiceSpecHttpRouteHeadersRequestArgs struct {
	Add    pulumi.StringMapInput   `pulumi:"add"`
	Remove pulumi.StringArrayInput `pulumi:"remove"`
	Set    pulumi.StringMapInput   `pulumi:"set"`
}

func (VirtualServiceSpecHttpRouteHeadersRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRouteHeadersRequest)(nil)).Elem()
}

func (i VirtualServiceSpecHttpRouteHeadersRequestArgs) ToVirtualServiceSpecHttpRouteHeadersRequestOutput() VirtualServiceSpecHttpRouteHeadersRequestOutput {
	return i.ToVirtualServiceSpecHttpRouteHeadersRequestOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRouteHeadersRequestArgs) ToVirtualServiceSpecHttpRouteHeadersRequestOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteHeadersRequestOutput)
}

func (i VirtualServiceSpecHttpRouteHeadersRequestArgs) ToVirtualServiceSpecHttpRouteHeadersRequestPtrOutput() VirtualServiceSpecHttpRouteHeadersRequestPtrOutput {
	return i.ToVirtualServiceSpecHttpRouteHeadersRequestPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRouteHeadersRequestArgs) ToVirtualServiceSpecHttpRouteHeadersRequestPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteHeadersRequestOutput).ToVirtualServiceSpecHttpRouteHeadersRequestPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpRouteHeadersRequestPtrInput is an input type that accepts VirtualServiceSpecHttpRouteHeadersRequestArgs, VirtualServiceSpecHttpRouteHeadersRequestPtr and VirtualServiceSpecHttpRouteHeadersRequestPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRouteHeadersRequestPtrInput` via:
//
//	        VirtualServiceSpecHttpRouteHeadersRequestArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpRouteHeadersRequestPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRouteHeadersRequestPtrOutput() VirtualServiceSpecHttpRouteHeadersRequestPtrOutput
	ToVirtualServiceSpecHttpRouteHeadersRequestPtrOutputWithContext(context.Context) VirtualServiceSpecHttpRouteHeadersRequestPtrOutput
}

type virtualServiceSpecHttpRouteHeadersRequestPtrType VirtualServiceSpecHttpRouteHeadersRequestArgs

func VirtualServiceSpecHttpRouteHeadersRequestPtr(v *VirtualServiceSpecHttpRouteHeadersRequestArgs) VirtualServiceSpecHttpRouteHeadersRequestPtrInput {
	return (*virtualServiceSpecHttpRouteHeadersRequestPtrType)(v)
}

func (*virtualServiceSpecHttpRouteHeadersRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRouteHeadersRequest)(nil)).Elem()
}

func (i *virtualServiceSpecHttpRouteHeadersRequestPtrType) ToVirtualServiceSpecHttpRouteHeadersRequestPtrOutput() VirtualServiceSpecHttpRouteHeadersRequestPtrOutput {
	return i.ToVirtualServiceSpecHttpRouteHeadersRequestPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpRouteHeadersRequestPtrType) ToVirtualServiceSpecHttpRouteHeadersRequestPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteHeadersRequestPtrOutput)
}

type VirtualServiceSpecHttpRouteHeadersRequestOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRouteHeadersRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRouteHeadersRequest)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRouteHeadersRequestOutput) ToVirtualServiceSpecHttpRouteHeadersRequestOutput() VirtualServiceSpecHttpRouteHeadersRequestOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersRequestOutput) ToVirtualServiceSpecHttpRouteHeadersRequestOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersRequestOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersRequestOutput) ToVirtualServiceSpecHttpRouteHeadersRequestPtrOutput() VirtualServiceSpecHttpRouteHeadersRequestPtrOutput {
	return o.ToVirtualServiceSpecHttpRouteHeadersRequestPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpRouteHeadersRequestOutput) ToVirtualServiceSpecHttpRouteHeadersRequestPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpRouteHeadersRequest) *VirtualServiceSpecHttpRouteHeadersRequest {
		return &v
	}).(VirtualServiceSpecHttpRouteHeadersRequestPtrOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersRequestOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteHeadersRequest) map[string]string { return v.Add }).(pulumi.StringMapOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersRequestOutput) Remove() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteHeadersRequest) []string { return v.Remove }).(pulumi.StringArrayOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersRequestOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteHeadersRequest) map[string]string { return v.Set }).(pulumi.StringMapOutput)
}

type VirtualServiceSpecHttpRouteHeadersRequestPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRouteHeadersRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRouteHeadersRequest)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRouteHeadersRequestPtrOutput) ToVirtualServiceSpecHttpRouteHeadersRequestPtrOutput() VirtualServiceSpecHttpRouteHeadersRequestPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersRequestPtrOutput) ToVirtualServiceSpecHttpRouteHeadersRequestPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersRequestPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersRequestPtrOutput) Elem() VirtualServiceSpecHttpRouteHeadersRequestOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteHeadersRequest) VirtualServiceSpecHttpRouteHeadersRequest {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpRouteHeadersRequest
		return ret
	}).(VirtualServiceSpecHttpRouteHeadersRequestOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersRequestPtrOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteHeadersRequest) map[string]string {
		if v == nil {
			return nil
		}
		return v.Add
	}).(pulumi.StringMapOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersRequestPtrOutput) Remove() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteHeadersRequest) []string {
		if v == nil {
			return nil
		}
		return v.Remove
	}).(pulumi.StringArrayOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersRequestPtrOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteHeadersRequest) map[string]string {
		if v == nil {
			return nil
		}
		return v.Set
	}).(pulumi.StringMapOutput)
}

type VirtualServiceSpecHttpRouteHeadersRequestPatch struct {
	Add    map[string]string `pulumi:"add"`
	Remove []string          `pulumi:"remove"`
	Set    map[string]string `pulumi:"set"`
}

// VirtualServiceSpecHttpRouteHeadersRequestPatchInput is an input type that accepts VirtualServiceSpecHttpRouteHeadersRequestPatchArgs and VirtualServiceSpecHttpRouteHeadersRequestPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRouteHeadersRequestPatchInput` via:
//
//	VirtualServiceSpecHttpRouteHeadersRequestPatchArgs{...}
type VirtualServiceSpecHttpRouteHeadersRequestPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRouteHeadersRequestPatchOutput() VirtualServiceSpecHttpRouteHeadersRequestPatchOutput
	ToVirtualServiceSpecHttpRouteHeadersRequestPatchOutputWithContext(context.Context) VirtualServiceSpecHttpRouteHeadersRequestPatchOutput
}

type VirtualServiceSpecHttpRouteHeadersRequestPatchArgs struct {
	Add    pulumi.StringMapInput   `pulumi:"add"`
	Remove pulumi.StringArrayInput `pulumi:"remove"`
	Set    pulumi.StringMapInput   `pulumi:"set"`
}

func (VirtualServiceSpecHttpRouteHeadersRequestPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRouteHeadersRequestPatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpRouteHeadersRequestPatchArgs) ToVirtualServiceSpecHttpRouteHeadersRequestPatchOutput() VirtualServiceSpecHttpRouteHeadersRequestPatchOutput {
	return i.ToVirtualServiceSpecHttpRouteHeadersRequestPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRouteHeadersRequestPatchArgs) ToVirtualServiceSpecHttpRouteHeadersRequestPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersRequestPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteHeadersRequestPatchOutput)
}

func (i VirtualServiceSpecHttpRouteHeadersRequestPatchArgs) ToVirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput() VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRouteHeadersRequestPatchArgs) ToVirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteHeadersRequestPatchOutput).ToVirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpRouteHeadersRequestPatchPtrInput is an input type that accepts VirtualServiceSpecHttpRouteHeadersRequestPatchArgs, VirtualServiceSpecHttpRouteHeadersRequestPatchPtr and VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRouteHeadersRequestPatchPtrInput` via:
//
//	        VirtualServiceSpecHttpRouteHeadersRequestPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpRouteHeadersRequestPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput() VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput
	ToVirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput
}

type virtualServiceSpecHttpRouteHeadersRequestPatchPtrType VirtualServiceSpecHttpRouteHeadersRequestPatchArgs

func VirtualServiceSpecHttpRouteHeadersRequestPatchPtr(v *VirtualServiceSpecHttpRouteHeadersRequestPatchArgs) VirtualServiceSpecHttpRouteHeadersRequestPatchPtrInput {
	return (*virtualServiceSpecHttpRouteHeadersRequestPatchPtrType)(v)
}

func (*virtualServiceSpecHttpRouteHeadersRequestPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRouteHeadersRequestPatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpRouteHeadersRequestPatchPtrType) ToVirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput() VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput {
	return i.ToVirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpRouteHeadersRequestPatchPtrType) ToVirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput)
}

type VirtualServiceSpecHttpRouteHeadersRequestPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRouteHeadersRequestPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRouteHeadersRequestPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRouteHeadersRequestPatchOutput) ToVirtualServiceSpecHttpRouteHeadersRequestPatchOutput() VirtualServiceSpecHttpRouteHeadersRequestPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersRequestPatchOutput) ToVirtualServiceSpecHttpRouteHeadersRequestPatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersRequestPatchOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersRequestPatchOutput) ToVirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput() VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput {
	return o.ToVirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpRouteHeadersRequestPatchOutput) ToVirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpRouteHeadersRequestPatch) *VirtualServiceSpecHttpRouteHeadersRequestPatch {
		return &v
	}).(VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersRequestPatchOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteHeadersRequestPatch) map[string]string { return v.Add }).(pulumi.StringMapOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersRequestPatchOutput) Remove() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteHeadersRequestPatch) []string { return v.Remove }).(pulumi.StringArrayOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersRequestPatchOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteHeadersRequestPatch) map[string]string { return v.Set }).(pulumi.StringMapOutput)
}

type VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRouteHeadersRequestPatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput) ToVirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput() VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput) ToVirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput) Elem() VirtualServiceSpecHttpRouteHeadersRequestPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteHeadersRequestPatch) VirtualServiceSpecHttpRouteHeadersRequestPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpRouteHeadersRequestPatch
		return ret
	}).(VirtualServiceSpecHttpRouteHeadersRequestPatchOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteHeadersRequestPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Add
	}).(pulumi.StringMapOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput) Remove() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteHeadersRequestPatch) []string {
		if v == nil {
			return nil
		}
		return v.Remove
	}).(pulumi.StringArrayOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteHeadersRequestPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Set
	}).(pulumi.StringMapOutput)
}

type VirtualServiceSpecHttpRouteHeadersResponse struct {
	Add    map[string]string `pulumi:"add"`
	Remove []string          `pulumi:"remove"`
	Set    map[string]string `pulumi:"set"`
}

// VirtualServiceSpecHttpRouteHeadersResponseInput is an input type that accepts VirtualServiceSpecHttpRouteHeadersResponseArgs and VirtualServiceSpecHttpRouteHeadersResponseOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRouteHeadersResponseInput` via:
//
//	VirtualServiceSpecHttpRouteHeadersResponseArgs{...}
type VirtualServiceSpecHttpRouteHeadersResponseInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRouteHeadersResponseOutput() VirtualServiceSpecHttpRouteHeadersResponseOutput
	ToVirtualServiceSpecHttpRouteHeadersResponseOutputWithContext(context.Context) VirtualServiceSpecHttpRouteHeadersResponseOutput
}

type VirtualServiceSpecHttpRouteHeadersResponseArgs struct {
	Add    pulumi.StringMapInput   `pulumi:"add"`
	Remove pulumi.StringArrayInput `pulumi:"remove"`
	Set    pulumi.StringMapInput   `pulumi:"set"`
}

func (VirtualServiceSpecHttpRouteHeadersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRouteHeadersResponse)(nil)).Elem()
}

func (i VirtualServiceSpecHttpRouteHeadersResponseArgs) ToVirtualServiceSpecHttpRouteHeadersResponseOutput() VirtualServiceSpecHttpRouteHeadersResponseOutput {
	return i.ToVirtualServiceSpecHttpRouteHeadersResponseOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRouteHeadersResponseArgs) ToVirtualServiceSpecHttpRouteHeadersResponseOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteHeadersResponseOutput)
}

func (i VirtualServiceSpecHttpRouteHeadersResponseArgs) ToVirtualServiceSpecHttpRouteHeadersResponsePtrOutput() VirtualServiceSpecHttpRouteHeadersResponsePtrOutput {
	return i.ToVirtualServiceSpecHttpRouteHeadersResponsePtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRouteHeadersResponseArgs) ToVirtualServiceSpecHttpRouteHeadersResponsePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteHeadersResponseOutput).ToVirtualServiceSpecHttpRouteHeadersResponsePtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpRouteHeadersResponsePtrInput is an input type that accepts VirtualServiceSpecHttpRouteHeadersResponseArgs, VirtualServiceSpecHttpRouteHeadersResponsePtr and VirtualServiceSpecHttpRouteHeadersResponsePtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRouteHeadersResponsePtrInput` via:
//
//	        VirtualServiceSpecHttpRouteHeadersResponseArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpRouteHeadersResponsePtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRouteHeadersResponsePtrOutput() VirtualServiceSpecHttpRouteHeadersResponsePtrOutput
	ToVirtualServiceSpecHttpRouteHeadersResponsePtrOutputWithContext(context.Context) VirtualServiceSpecHttpRouteHeadersResponsePtrOutput
}

type virtualServiceSpecHttpRouteHeadersResponsePtrType VirtualServiceSpecHttpRouteHeadersResponseArgs

func VirtualServiceSpecHttpRouteHeadersResponsePtr(v *VirtualServiceSpecHttpRouteHeadersResponseArgs) VirtualServiceSpecHttpRouteHeadersResponsePtrInput {
	return (*virtualServiceSpecHttpRouteHeadersResponsePtrType)(v)
}

func (*virtualServiceSpecHttpRouteHeadersResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRouteHeadersResponse)(nil)).Elem()
}

func (i *virtualServiceSpecHttpRouteHeadersResponsePtrType) ToVirtualServiceSpecHttpRouteHeadersResponsePtrOutput() VirtualServiceSpecHttpRouteHeadersResponsePtrOutput {
	return i.ToVirtualServiceSpecHttpRouteHeadersResponsePtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpRouteHeadersResponsePtrType) ToVirtualServiceSpecHttpRouteHeadersResponsePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteHeadersResponsePtrOutput)
}

type VirtualServiceSpecHttpRouteHeadersResponseOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRouteHeadersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRouteHeadersResponse)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRouteHeadersResponseOutput) ToVirtualServiceSpecHttpRouteHeadersResponseOutput() VirtualServiceSpecHttpRouteHeadersResponseOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersResponseOutput) ToVirtualServiceSpecHttpRouteHeadersResponseOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersResponseOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersResponseOutput) ToVirtualServiceSpecHttpRouteHeadersResponsePtrOutput() VirtualServiceSpecHttpRouteHeadersResponsePtrOutput {
	return o.ToVirtualServiceSpecHttpRouteHeadersResponsePtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpRouteHeadersResponseOutput) ToVirtualServiceSpecHttpRouteHeadersResponsePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpRouteHeadersResponse) *VirtualServiceSpecHttpRouteHeadersResponse {
		return &v
	}).(VirtualServiceSpecHttpRouteHeadersResponsePtrOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersResponseOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteHeadersResponse) map[string]string { return v.Add }).(pulumi.StringMapOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersResponseOutput) Remove() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteHeadersResponse) []string { return v.Remove }).(pulumi.StringArrayOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersResponseOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteHeadersResponse) map[string]string { return v.Set }).(pulumi.StringMapOutput)
}

type VirtualServiceSpecHttpRouteHeadersResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRouteHeadersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRouteHeadersResponse)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRouteHeadersResponsePtrOutput) ToVirtualServiceSpecHttpRouteHeadersResponsePtrOutput() VirtualServiceSpecHttpRouteHeadersResponsePtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersResponsePtrOutput) ToVirtualServiceSpecHttpRouteHeadersResponsePtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersResponsePtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersResponsePtrOutput) Elem() VirtualServiceSpecHttpRouteHeadersResponseOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteHeadersResponse) VirtualServiceSpecHttpRouteHeadersResponse {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpRouteHeadersResponse
		return ret
	}).(VirtualServiceSpecHttpRouteHeadersResponseOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersResponsePtrOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteHeadersResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Add
	}).(pulumi.StringMapOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersResponsePtrOutput) Remove() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteHeadersResponse) []string {
		if v == nil {
			return nil
		}
		return v.Remove
	}).(pulumi.StringArrayOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersResponsePtrOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteHeadersResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Set
	}).(pulumi.StringMapOutput)
}

type VirtualServiceSpecHttpRouteHeadersResponsePatch struct {
	Add    map[string]string `pulumi:"add"`
	Remove []string          `pulumi:"remove"`
	Set    map[string]string `pulumi:"set"`
}

// VirtualServiceSpecHttpRouteHeadersResponsePatchInput is an input type that accepts VirtualServiceSpecHttpRouteHeadersResponsePatchArgs and VirtualServiceSpecHttpRouteHeadersResponsePatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRouteHeadersResponsePatchInput` via:
//
//	VirtualServiceSpecHttpRouteHeadersResponsePatchArgs{...}
type VirtualServiceSpecHttpRouteHeadersResponsePatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRouteHeadersResponsePatchOutput() VirtualServiceSpecHttpRouteHeadersResponsePatchOutput
	ToVirtualServiceSpecHttpRouteHeadersResponsePatchOutputWithContext(context.Context) VirtualServiceSpecHttpRouteHeadersResponsePatchOutput
}

type VirtualServiceSpecHttpRouteHeadersResponsePatchArgs struct {
	Add    pulumi.StringMapInput   `pulumi:"add"`
	Remove pulumi.StringArrayInput `pulumi:"remove"`
	Set    pulumi.StringMapInput   `pulumi:"set"`
}

func (VirtualServiceSpecHttpRouteHeadersResponsePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRouteHeadersResponsePatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpRouteHeadersResponsePatchArgs) ToVirtualServiceSpecHttpRouteHeadersResponsePatchOutput() VirtualServiceSpecHttpRouteHeadersResponsePatchOutput {
	return i.ToVirtualServiceSpecHttpRouteHeadersResponsePatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRouteHeadersResponsePatchArgs) ToVirtualServiceSpecHttpRouteHeadersResponsePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersResponsePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteHeadersResponsePatchOutput)
}

func (i VirtualServiceSpecHttpRouteHeadersResponsePatchArgs) ToVirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput() VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput {
	return i.ToVirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRouteHeadersResponsePatchArgs) ToVirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteHeadersResponsePatchOutput).ToVirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecHttpRouteHeadersResponsePatchPtrInput is an input type that accepts VirtualServiceSpecHttpRouteHeadersResponsePatchArgs, VirtualServiceSpecHttpRouteHeadersResponsePatchPtr and VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRouteHeadersResponsePatchPtrInput` via:
//
//	        VirtualServiceSpecHttpRouteHeadersResponsePatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecHttpRouteHeadersResponsePatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput() VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput
	ToVirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutputWithContext(context.Context) VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput
}

type virtualServiceSpecHttpRouteHeadersResponsePatchPtrType VirtualServiceSpecHttpRouteHeadersResponsePatchArgs

func VirtualServiceSpecHttpRouteHeadersResponsePatchPtr(v *VirtualServiceSpecHttpRouteHeadersResponsePatchArgs) VirtualServiceSpecHttpRouteHeadersResponsePatchPtrInput {
	return (*virtualServiceSpecHttpRouteHeadersResponsePatchPtrType)(v)
}

func (*virtualServiceSpecHttpRouteHeadersResponsePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRouteHeadersResponsePatch)(nil)).Elem()
}

func (i *virtualServiceSpecHttpRouteHeadersResponsePatchPtrType) ToVirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput() VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput {
	return i.ToVirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecHttpRouteHeadersResponsePatchPtrType) ToVirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput)
}

type VirtualServiceSpecHttpRouteHeadersResponsePatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRouteHeadersResponsePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRouteHeadersResponsePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRouteHeadersResponsePatchOutput) ToVirtualServiceSpecHttpRouteHeadersResponsePatchOutput() VirtualServiceSpecHttpRouteHeadersResponsePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersResponsePatchOutput) ToVirtualServiceSpecHttpRouteHeadersResponsePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersResponsePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersResponsePatchOutput) ToVirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput() VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput {
	return o.ToVirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecHttpRouteHeadersResponsePatchOutput) ToVirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecHttpRouteHeadersResponsePatch) *VirtualServiceSpecHttpRouteHeadersResponsePatch {
		return &v
	}).(VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersResponsePatchOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteHeadersResponsePatch) map[string]string { return v.Add }).(pulumi.StringMapOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersResponsePatchOutput) Remove() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteHeadersResponsePatch) []string { return v.Remove }).(pulumi.StringArrayOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersResponsePatchOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRouteHeadersResponsePatch) map[string]string { return v.Set }).(pulumi.StringMapOutput)
}

type VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecHttpRouteHeadersResponsePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput) ToVirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput() VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput) ToVirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput {
	return o
}

func (o VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput) Elem() VirtualServiceSpecHttpRouteHeadersResponsePatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteHeadersResponsePatch) VirtualServiceSpecHttpRouteHeadersResponsePatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecHttpRouteHeadersResponsePatch
		return ret
	}).(VirtualServiceSpecHttpRouteHeadersResponsePatchOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteHeadersResponsePatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Add
	}).(pulumi.StringMapOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput) Remove() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteHeadersResponsePatch) []string {
		if v == nil {
			return nil
		}
		return v.Remove
	}).(pulumi.StringArrayOutput)
}

func (o VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualServiceSpecHttpRouteHeadersResponsePatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Set
	}).(pulumi.StringMapOutput)
}

type VirtualServiceSpecHttpRoutePatch struct {
	Destination *VirtualServiceSpecHttpRouteDestinationPatch `pulumi:"destination"`
	Headers     *VirtualServiceSpecHttpRouteHeadersPatch     `pulumi:"headers"`
	// Weight specifies the relative proportion of traffic to be forwarded to the destination.
	Weight *int `pulumi:"weight"`
}

// VirtualServiceSpecHttpRoutePatchInput is an input type that accepts VirtualServiceSpecHttpRoutePatchArgs and VirtualServiceSpecHttpRoutePatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRoutePatchInput` via:
//
//	VirtualServiceSpecHttpRoutePatchArgs{...}
type VirtualServiceSpecHttpRoutePatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRoutePatchOutput() VirtualServiceSpecHttpRoutePatchOutput
	ToVirtualServiceSpecHttpRoutePatchOutputWithContext(context.Context) VirtualServiceSpecHttpRoutePatchOutput
}

type VirtualServiceSpecHttpRoutePatchArgs struct {
	Destination VirtualServiceSpecHttpRouteDestinationPatchPtrInput `pulumi:"destination"`
	Headers     VirtualServiceSpecHttpRouteHeadersPatchPtrInput     `pulumi:"headers"`
	// Weight specifies the relative proportion of traffic to be forwarded to the destination.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (VirtualServiceSpecHttpRoutePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRoutePatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpRoutePatchArgs) ToVirtualServiceSpecHttpRoutePatchOutput() VirtualServiceSpecHttpRoutePatchOutput {
	return i.ToVirtualServiceSpecHttpRoutePatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRoutePatchArgs) ToVirtualServiceSpecHttpRoutePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRoutePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRoutePatchOutput)
}

// VirtualServiceSpecHttpRoutePatchArrayInput is an input type that accepts VirtualServiceSpecHttpRoutePatchArray and VirtualServiceSpecHttpRoutePatchArrayOutput values.
// You can construct a concrete instance of `VirtualServiceSpecHttpRoutePatchArrayInput` via:
//
//	VirtualServiceSpecHttpRoutePatchArray{ VirtualServiceSpecHttpRoutePatchArgs{...} }
type VirtualServiceSpecHttpRoutePatchArrayInput interface {
	pulumi.Input

	ToVirtualServiceSpecHttpRoutePatchArrayOutput() VirtualServiceSpecHttpRoutePatchArrayOutput
	ToVirtualServiceSpecHttpRoutePatchArrayOutputWithContext(context.Context) VirtualServiceSpecHttpRoutePatchArrayOutput
}

type VirtualServiceSpecHttpRoutePatchArray []VirtualServiceSpecHttpRoutePatchInput

func (VirtualServiceSpecHttpRoutePatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecHttpRoutePatch)(nil)).Elem()
}

func (i VirtualServiceSpecHttpRoutePatchArray) ToVirtualServiceSpecHttpRoutePatchArrayOutput() VirtualServiceSpecHttpRoutePatchArrayOutput {
	return i.ToVirtualServiceSpecHttpRoutePatchArrayOutputWithContext(context.Background())
}

func (i VirtualServiceSpecHttpRoutePatchArray) ToVirtualServiceSpecHttpRoutePatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRoutePatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecHttpRoutePatchArrayOutput)
}

type VirtualServiceSpecHttpRoutePatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRoutePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecHttpRoutePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRoutePatchOutput) ToVirtualServiceSpecHttpRoutePatchOutput() VirtualServiceSpecHttpRoutePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpRoutePatchOutput) ToVirtualServiceSpecHttpRoutePatchOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRoutePatchOutput {
	return o
}

func (o VirtualServiceSpecHttpRoutePatchOutput) Destination() VirtualServiceSpecHttpRouteDestinationPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRoutePatch) *VirtualServiceSpecHttpRouteDestinationPatch {
		return v.Destination
	}).(VirtualServiceSpecHttpRouteDestinationPatchPtrOutput)
}

func (o VirtualServiceSpecHttpRoutePatchOutput) Headers() VirtualServiceSpecHttpRouteHeadersPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRoutePatch) *VirtualServiceSpecHttpRouteHeadersPatch { return v.Headers }).(VirtualServiceSpecHttpRouteHeadersPatchPtrOutput)
}

// Weight specifies the relative proportion of traffic to be forwarded to the destination.
func (o VirtualServiceSpecHttpRoutePatchOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecHttpRoutePatch) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type VirtualServiceSpecHttpRoutePatchArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecHttpRoutePatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecHttpRoutePatch)(nil)).Elem()
}

func (o VirtualServiceSpecHttpRoutePatchArrayOutput) ToVirtualServiceSpecHttpRoutePatchArrayOutput() VirtualServiceSpecHttpRoutePatchArrayOutput {
	return o
}

func (o VirtualServiceSpecHttpRoutePatchArrayOutput) ToVirtualServiceSpecHttpRoutePatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecHttpRoutePatchArrayOutput {
	return o
}

func (o VirtualServiceSpecHttpRoutePatchArrayOutput) Index(i pulumi.IntInput) VirtualServiceSpecHttpRoutePatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceSpecHttpRoutePatch {
		return vs[0].([]VirtualServiceSpecHttpRoutePatch)[vs[1].(int)]
	}).(VirtualServiceSpecHttpRoutePatchOutput)
}

// Configuration affecting label/content routing, sni routing, etc. See more details at: https://istio.io/docs/reference/config/networking/virtual-service.html
type VirtualServiceSpecPatch struct {
	// A list of namespaces to which this virtual service is exported.
	ExportTo []string `pulumi:"exportTo"`
	// The names of gateways and sidecars that should apply these routes.
	Gateways []string `pulumi:"gateways"`
	// The destination hosts to which traffic is being sent.
	Hosts []string `pulumi:"hosts"`
	// An ordered list of route rules for HTTP traffic.
	Http []VirtualServiceSpecHttpPatch `pulumi:"http"`
	// An ordered list of route rules for opaque TCP traffic.
	Tcp []VirtualServiceSpecTcpPatch `pulumi:"tcp"`
	// An ordered list of route rule for non-terminated TLS & HTTPS traffic.
	Tls []VirtualServiceSpecTlsPatch `pulumi:"tls"`
}

// VirtualServiceSpecPatchInput is an input type that accepts VirtualServiceSpecPatchArgs and VirtualServiceSpecPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecPatchInput` via:
//
//	VirtualServiceSpecPatchArgs{...}
type VirtualServiceSpecPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecPatchOutput() VirtualServiceSpecPatchOutput
	ToVirtualServiceSpecPatchOutputWithContext(context.Context) VirtualServiceSpecPatchOutput
}

// Configuration affecting label/content routing, sni routing, etc. See more details at: https://istio.io/docs/reference/config/networking/virtual-service.html
type VirtualServiceSpecPatchArgs struct {
	// A list of namespaces to which this virtual service is exported.
	ExportTo pulumi.StringArrayInput `pulumi:"exportTo"`
	// The names of gateways and sidecars that should apply these routes.
	Gateways pulumi.StringArrayInput `pulumi:"gateways"`
	// The destination hosts to which traffic is being sent.
	Hosts pulumi.StringArrayInput `pulumi:"hosts"`
	// An ordered list of route rules for HTTP traffic.
	Http VirtualServiceSpecHttpPatchArrayInput `pulumi:"http"`
	// An ordered list of route rules for opaque TCP traffic.
	Tcp VirtualServiceSpecTcpPatchArrayInput `pulumi:"tcp"`
	// An ordered list of route rule for non-terminated TLS & HTTPS traffic.
	Tls VirtualServiceSpecTlsPatchArrayInput `pulumi:"tls"`
}

func (VirtualServiceSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecPatch)(nil)).Elem()
}

func (i VirtualServiceSpecPatchArgs) ToVirtualServiceSpecPatchOutput() VirtualServiceSpecPatchOutput {
	return i.ToVirtualServiceSpecPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecPatchArgs) ToVirtualServiceSpecPatchOutputWithContext(ctx context.Context) VirtualServiceSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecPatchOutput)
}

func (i VirtualServiceSpecPatchArgs) ToVirtualServiceSpecPatchPtrOutput() VirtualServiceSpecPatchPtrOutput {
	return i.ToVirtualServiceSpecPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecPatchArgs) ToVirtualServiceSpecPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecPatchOutput).ToVirtualServiceSpecPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecPatchPtrInput is an input type that accepts VirtualServiceSpecPatchArgs, VirtualServiceSpecPatchPtr and VirtualServiceSpecPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecPatchPtrInput` via:
//
//	        VirtualServiceSpecPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecPatchPtrOutput() VirtualServiceSpecPatchPtrOutput
	ToVirtualServiceSpecPatchPtrOutputWithContext(context.Context) VirtualServiceSpecPatchPtrOutput
}

type virtualServiceSpecPatchPtrType VirtualServiceSpecPatchArgs

func VirtualServiceSpecPatchPtr(v *VirtualServiceSpecPatchArgs) VirtualServiceSpecPatchPtrInput {
	return (*virtualServiceSpecPatchPtrType)(v)
}

func (*virtualServiceSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecPatch)(nil)).Elem()
}

func (i *virtualServiceSpecPatchPtrType) ToVirtualServiceSpecPatchPtrOutput() VirtualServiceSpecPatchPtrOutput {
	return i.ToVirtualServiceSpecPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecPatchPtrType) ToVirtualServiceSpecPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecPatchPtrOutput)
}

// Configuration affecting label/content routing, sni routing, etc. See more details at: https://istio.io/docs/reference/config/networking/virtual-service.html
type VirtualServiceSpecPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecPatch)(nil)).Elem()
}

func (o VirtualServiceSpecPatchOutput) ToVirtualServiceSpecPatchOutput() VirtualServiceSpecPatchOutput {
	return o
}

func (o VirtualServiceSpecPatchOutput) ToVirtualServiceSpecPatchOutputWithContext(ctx context.Context) VirtualServiceSpecPatchOutput {
	return o
}

func (o VirtualServiceSpecPatchOutput) ToVirtualServiceSpecPatchPtrOutput() VirtualServiceSpecPatchPtrOutput {
	return o.ToVirtualServiceSpecPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecPatchOutput) ToVirtualServiceSpecPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecPatch) *VirtualServiceSpecPatch {
		return &v
	}).(VirtualServiceSpecPatchPtrOutput)
}

// A list of namespaces to which this virtual service is exported.
func (o VirtualServiceSpecPatchOutput) ExportTo() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecPatch) []string { return v.ExportTo }).(pulumi.StringArrayOutput)
}

// The names of gateways and sidecars that should apply these routes.
func (o VirtualServiceSpecPatchOutput) Gateways() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecPatch) []string { return v.Gateways }).(pulumi.StringArrayOutput)
}

// The destination hosts to which traffic is being sent.
func (o VirtualServiceSpecPatchOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecPatch) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// An ordered list of route rules for HTTP traffic.
func (o VirtualServiceSpecPatchOutput) Http() VirtualServiceSpecHttpPatchArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecPatch) []VirtualServiceSpecHttpPatch { return v.Http }).(VirtualServiceSpecHttpPatchArrayOutput)
}

// An ordered list of route rules for opaque TCP traffic.
func (o VirtualServiceSpecPatchOutput) Tcp() VirtualServiceSpecTcpPatchArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecPatch) []VirtualServiceSpecTcpPatch { return v.Tcp }).(VirtualServiceSpecTcpPatchArrayOutput)
}

// An ordered list of route rule for non-terminated TLS & HTTPS traffic.
func (o VirtualServiceSpecPatchOutput) Tls() VirtualServiceSpecTlsPatchArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecPatch) []VirtualServiceSpecTlsPatch { return v.Tls }).(VirtualServiceSpecTlsPatchArrayOutput)
}

type VirtualServiceSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecPatch)(nil)).Elem()
}

func (o VirtualServiceSpecPatchPtrOutput) ToVirtualServiceSpecPatchPtrOutput() VirtualServiceSpecPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecPatchPtrOutput) ToVirtualServiceSpecPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecPatchPtrOutput) Elem() VirtualServiceSpecPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecPatch) VirtualServiceSpecPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecPatch
		return ret
	}).(VirtualServiceSpecPatchOutput)
}

// A list of namespaces to which this virtual service is exported.
func (o VirtualServiceSpecPatchPtrOutput) ExportTo() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecPatch) []string {
		if v == nil {
			return nil
		}
		return v.ExportTo
	}).(pulumi.StringArrayOutput)
}

// The names of gateways and sidecars that should apply these routes.
func (o VirtualServiceSpecPatchPtrOutput) Gateways() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecPatch) []string {
		if v == nil {
			return nil
		}
		return v.Gateways
	}).(pulumi.StringArrayOutput)
}

// The destination hosts to which traffic is being sent.
func (o VirtualServiceSpecPatchPtrOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecPatch) []string {
		if v == nil {
			return nil
		}
		return v.Hosts
	}).(pulumi.StringArrayOutput)
}

// An ordered list of route rules for HTTP traffic.
func (o VirtualServiceSpecPatchPtrOutput) Http() VirtualServiceSpecHttpPatchArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecPatch) []VirtualServiceSpecHttpPatch {
		if v == nil {
			return nil
		}
		return v.Http
	}).(VirtualServiceSpecHttpPatchArrayOutput)
}

// An ordered list of route rules for opaque TCP traffic.
func (o VirtualServiceSpecPatchPtrOutput) Tcp() VirtualServiceSpecTcpPatchArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecPatch) []VirtualServiceSpecTcpPatch {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(VirtualServiceSpecTcpPatchArrayOutput)
}

// An ordered list of route rule for non-terminated TLS & HTTPS traffic.
func (o VirtualServiceSpecPatchPtrOutput) Tls() VirtualServiceSpecTlsPatchArrayOutput {
	return o.ApplyT(func(v *VirtualServiceSpecPatch) []VirtualServiceSpecTlsPatch {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(VirtualServiceSpecTlsPatchArrayOutput)
}

type VirtualServiceSpecTcp struct {
	// Match conditions to be satisfied for the rule to be activated.
	Match []VirtualServiceSpecTcpMatch `pulumi:"match"`
	// The destination to which the connection should be forwarded to.
	Route []VirtualServiceSpecTcpRoute `pulumi:"route"`
}

// VirtualServiceSpecTcpInput is an input type that accepts VirtualServiceSpecTcpArgs and VirtualServiceSpecTcpOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTcpInput` via:
//
//	VirtualServiceSpecTcpArgs{...}
type VirtualServiceSpecTcpInput interface {
	pulumi.Input

	ToVirtualServiceSpecTcpOutput() VirtualServiceSpecTcpOutput
	ToVirtualServiceSpecTcpOutputWithContext(context.Context) VirtualServiceSpecTcpOutput
}

type VirtualServiceSpecTcpArgs struct {
	// Match conditions to be satisfied for the rule to be activated.
	Match VirtualServiceSpecTcpMatchArrayInput `pulumi:"match"`
	// The destination to which the connection should be forwarded to.
	Route VirtualServiceSpecTcpRouteArrayInput `pulumi:"route"`
}

func (VirtualServiceSpecTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTcp)(nil)).Elem()
}

func (i VirtualServiceSpecTcpArgs) ToVirtualServiceSpecTcpOutput() VirtualServiceSpecTcpOutput {
	return i.ToVirtualServiceSpecTcpOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTcpArgs) ToVirtualServiceSpecTcpOutputWithContext(ctx context.Context) VirtualServiceSpecTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpOutput)
}

// VirtualServiceSpecTcpArrayInput is an input type that accepts VirtualServiceSpecTcpArray and VirtualServiceSpecTcpArrayOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTcpArrayInput` via:
//
//	VirtualServiceSpecTcpArray{ VirtualServiceSpecTcpArgs{...} }
type VirtualServiceSpecTcpArrayInput interface {
	pulumi.Input

	ToVirtualServiceSpecTcpArrayOutput() VirtualServiceSpecTcpArrayOutput
	ToVirtualServiceSpecTcpArrayOutputWithContext(context.Context) VirtualServiceSpecTcpArrayOutput
}

type VirtualServiceSpecTcpArray []VirtualServiceSpecTcpInput

func (VirtualServiceSpecTcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTcp)(nil)).Elem()
}

func (i VirtualServiceSpecTcpArray) ToVirtualServiceSpecTcpArrayOutput() VirtualServiceSpecTcpArrayOutput {
	return i.ToVirtualServiceSpecTcpArrayOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTcpArray) ToVirtualServiceSpecTcpArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpArrayOutput)
}

type VirtualServiceSpecTcpOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTcp)(nil)).Elem()
}

func (o VirtualServiceSpecTcpOutput) ToVirtualServiceSpecTcpOutput() VirtualServiceSpecTcpOutput {
	return o
}

func (o VirtualServiceSpecTcpOutput) ToVirtualServiceSpecTcpOutputWithContext(ctx context.Context) VirtualServiceSpecTcpOutput {
	return o
}

// Match conditions to be satisfied for the rule to be activated.
func (o VirtualServiceSpecTcpOutput) Match() VirtualServiceSpecTcpMatchArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcp) []VirtualServiceSpecTcpMatch { return v.Match }).(VirtualServiceSpecTcpMatchArrayOutput)
}

// The destination to which the connection should be forwarded to.
func (o VirtualServiceSpecTcpOutput) Route() VirtualServiceSpecTcpRouteArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcp) []VirtualServiceSpecTcpRoute { return v.Route }).(VirtualServiceSpecTcpRouteArrayOutput)
}

type VirtualServiceSpecTcpArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTcp)(nil)).Elem()
}

func (o VirtualServiceSpecTcpArrayOutput) ToVirtualServiceSpecTcpArrayOutput() VirtualServiceSpecTcpArrayOutput {
	return o
}

func (o VirtualServiceSpecTcpArrayOutput) ToVirtualServiceSpecTcpArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTcpArrayOutput {
	return o
}

func (o VirtualServiceSpecTcpArrayOutput) Index(i pulumi.IntInput) VirtualServiceSpecTcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceSpecTcp {
		return vs[0].([]VirtualServiceSpecTcp)[vs[1].(int)]
	}).(VirtualServiceSpecTcpOutput)
}

type VirtualServiceSpecTcpMatch struct {
	// IPv4 or IPv6 ip addresses of destination with optional subnet.
	DestinationSubnets []string `pulumi:"destinationSubnets"`
	// Names of gateways where the rule should be applied.
	Gateways []string `pulumi:"gateways"`
	// Specifies the port on the host that is being addressed.
	Port *int `pulumi:"port"`
	// One or more labels that constrain the applicability of a rule to workloads with the given labels.
	SourceLabels map[string]string `pulumi:"sourceLabels"`
	// Source namespace constraining the applicability of a rule to workloads in that namespace.
	SourceNamespace *string `pulumi:"sourceNamespace"`
	SourceSubnet    *string `pulumi:"sourceSubnet"`
}

// VirtualServiceSpecTcpMatchInput is an input type that accepts VirtualServiceSpecTcpMatchArgs and VirtualServiceSpecTcpMatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTcpMatchInput` via:
//
//	VirtualServiceSpecTcpMatchArgs{...}
type VirtualServiceSpecTcpMatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecTcpMatchOutput() VirtualServiceSpecTcpMatchOutput
	ToVirtualServiceSpecTcpMatchOutputWithContext(context.Context) VirtualServiceSpecTcpMatchOutput
}

type VirtualServiceSpecTcpMatchArgs struct {
	// IPv4 or IPv6 ip addresses of destination with optional subnet.
	DestinationSubnets pulumi.StringArrayInput `pulumi:"destinationSubnets"`
	// Names of gateways where the rule should be applied.
	Gateways pulumi.StringArrayInput `pulumi:"gateways"`
	// Specifies the port on the host that is being addressed.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// One or more labels that constrain the applicability of a rule to workloads with the given labels.
	SourceLabels pulumi.StringMapInput `pulumi:"sourceLabels"`
	// Source namespace constraining the applicability of a rule to workloads in that namespace.
	SourceNamespace pulumi.StringPtrInput `pulumi:"sourceNamespace"`
	SourceSubnet    pulumi.StringPtrInput `pulumi:"sourceSubnet"`
}

func (VirtualServiceSpecTcpMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTcpMatch)(nil)).Elem()
}

func (i VirtualServiceSpecTcpMatchArgs) ToVirtualServiceSpecTcpMatchOutput() VirtualServiceSpecTcpMatchOutput {
	return i.ToVirtualServiceSpecTcpMatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTcpMatchArgs) ToVirtualServiceSpecTcpMatchOutputWithContext(ctx context.Context) VirtualServiceSpecTcpMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpMatchOutput)
}

// VirtualServiceSpecTcpMatchArrayInput is an input type that accepts VirtualServiceSpecTcpMatchArray and VirtualServiceSpecTcpMatchArrayOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTcpMatchArrayInput` via:
//
//	VirtualServiceSpecTcpMatchArray{ VirtualServiceSpecTcpMatchArgs{...} }
type VirtualServiceSpecTcpMatchArrayInput interface {
	pulumi.Input

	ToVirtualServiceSpecTcpMatchArrayOutput() VirtualServiceSpecTcpMatchArrayOutput
	ToVirtualServiceSpecTcpMatchArrayOutputWithContext(context.Context) VirtualServiceSpecTcpMatchArrayOutput
}

type VirtualServiceSpecTcpMatchArray []VirtualServiceSpecTcpMatchInput

func (VirtualServiceSpecTcpMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTcpMatch)(nil)).Elem()
}

func (i VirtualServiceSpecTcpMatchArray) ToVirtualServiceSpecTcpMatchArrayOutput() VirtualServiceSpecTcpMatchArrayOutput {
	return i.ToVirtualServiceSpecTcpMatchArrayOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTcpMatchArray) ToVirtualServiceSpecTcpMatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTcpMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpMatchArrayOutput)
}

type VirtualServiceSpecTcpMatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTcpMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTcpMatch)(nil)).Elem()
}

func (o VirtualServiceSpecTcpMatchOutput) ToVirtualServiceSpecTcpMatchOutput() VirtualServiceSpecTcpMatchOutput {
	return o
}

func (o VirtualServiceSpecTcpMatchOutput) ToVirtualServiceSpecTcpMatchOutputWithContext(ctx context.Context) VirtualServiceSpecTcpMatchOutput {
	return o
}

// IPv4 or IPv6 ip addresses of destination with optional subnet.
func (o VirtualServiceSpecTcpMatchOutput) DestinationSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpMatch) []string { return v.DestinationSubnets }).(pulumi.StringArrayOutput)
}

// Names of gateways where the rule should be applied.
func (o VirtualServiceSpecTcpMatchOutput) Gateways() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpMatch) []string { return v.Gateways }).(pulumi.StringArrayOutput)
}

// Specifies the port on the host that is being addressed.
func (o VirtualServiceSpecTcpMatchOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpMatch) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// One or more labels that constrain the applicability of a rule to workloads with the given labels.
func (o VirtualServiceSpecTcpMatchOutput) SourceLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpMatch) map[string]string { return v.SourceLabels }).(pulumi.StringMapOutput)
}

// Source namespace constraining the applicability of a rule to workloads in that namespace.
func (o VirtualServiceSpecTcpMatchOutput) SourceNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpMatch) *string { return v.SourceNamespace }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecTcpMatchOutput) SourceSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpMatch) *string { return v.SourceSubnet }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecTcpMatchArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTcpMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTcpMatch)(nil)).Elem()
}

func (o VirtualServiceSpecTcpMatchArrayOutput) ToVirtualServiceSpecTcpMatchArrayOutput() VirtualServiceSpecTcpMatchArrayOutput {
	return o
}

func (o VirtualServiceSpecTcpMatchArrayOutput) ToVirtualServiceSpecTcpMatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTcpMatchArrayOutput {
	return o
}

func (o VirtualServiceSpecTcpMatchArrayOutput) Index(i pulumi.IntInput) VirtualServiceSpecTcpMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceSpecTcpMatch {
		return vs[0].([]VirtualServiceSpecTcpMatch)[vs[1].(int)]
	}).(VirtualServiceSpecTcpMatchOutput)
}

type VirtualServiceSpecTcpMatchPatch struct {
	// IPv4 or IPv6 ip addresses of destination with optional subnet.
	DestinationSubnets []string `pulumi:"destinationSubnets"`
	// Names of gateways where the rule should be applied.
	Gateways []string `pulumi:"gateways"`
	// Specifies the port on the host that is being addressed.
	Port *int `pulumi:"port"`
	// One or more labels that constrain the applicability of a rule to workloads with the given labels.
	SourceLabels map[string]string `pulumi:"sourceLabels"`
	// Source namespace constraining the applicability of a rule to workloads in that namespace.
	SourceNamespace *string `pulumi:"sourceNamespace"`
	SourceSubnet    *string `pulumi:"sourceSubnet"`
}

// VirtualServiceSpecTcpMatchPatchInput is an input type that accepts VirtualServiceSpecTcpMatchPatchArgs and VirtualServiceSpecTcpMatchPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTcpMatchPatchInput` via:
//
//	VirtualServiceSpecTcpMatchPatchArgs{...}
type VirtualServiceSpecTcpMatchPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecTcpMatchPatchOutput() VirtualServiceSpecTcpMatchPatchOutput
	ToVirtualServiceSpecTcpMatchPatchOutputWithContext(context.Context) VirtualServiceSpecTcpMatchPatchOutput
}

type VirtualServiceSpecTcpMatchPatchArgs struct {
	// IPv4 or IPv6 ip addresses of destination with optional subnet.
	DestinationSubnets pulumi.StringArrayInput `pulumi:"destinationSubnets"`
	// Names of gateways where the rule should be applied.
	Gateways pulumi.StringArrayInput `pulumi:"gateways"`
	// Specifies the port on the host that is being addressed.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// One or more labels that constrain the applicability of a rule to workloads with the given labels.
	SourceLabels pulumi.StringMapInput `pulumi:"sourceLabels"`
	// Source namespace constraining the applicability of a rule to workloads in that namespace.
	SourceNamespace pulumi.StringPtrInput `pulumi:"sourceNamespace"`
	SourceSubnet    pulumi.StringPtrInput `pulumi:"sourceSubnet"`
}

func (VirtualServiceSpecTcpMatchPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTcpMatchPatch)(nil)).Elem()
}

func (i VirtualServiceSpecTcpMatchPatchArgs) ToVirtualServiceSpecTcpMatchPatchOutput() VirtualServiceSpecTcpMatchPatchOutput {
	return i.ToVirtualServiceSpecTcpMatchPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTcpMatchPatchArgs) ToVirtualServiceSpecTcpMatchPatchOutputWithContext(ctx context.Context) VirtualServiceSpecTcpMatchPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpMatchPatchOutput)
}

// VirtualServiceSpecTcpMatchPatchArrayInput is an input type that accepts VirtualServiceSpecTcpMatchPatchArray and VirtualServiceSpecTcpMatchPatchArrayOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTcpMatchPatchArrayInput` via:
//
//	VirtualServiceSpecTcpMatchPatchArray{ VirtualServiceSpecTcpMatchPatchArgs{...} }
type VirtualServiceSpecTcpMatchPatchArrayInput interface {
	pulumi.Input

	ToVirtualServiceSpecTcpMatchPatchArrayOutput() VirtualServiceSpecTcpMatchPatchArrayOutput
	ToVirtualServiceSpecTcpMatchPatchArrayOutputWithContext(context.Context) VirtualServiceSpecTcpMatchPatchArrayOutput
}

type VirtualServiceSpecTcpMatchPatchArray []VirtualServiceSpecTcpMatchPatchInput

func (VirtualServiceSpecTcpMatchPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTcpMatchPatch)(nil)).Elem()
}

func (i VirtualServiceSpecTcpMatchPatchArray) ToVirtualServiceSpecTcpMatchPatchArrayOutput() VirtualServiceSpecTcpMatchPatchArrayOutput {
	return i.ToVirtualServiceSpecTcpMatchPatchArrayOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTcpMatchPatchArray) ToVirtualServiceSpecTcpMatchPatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTcpMatchPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpMatchPatchArrayOutput)
}

type VirtualServiceSpecTcpMatchPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTcpMatchPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTcpMatchPatch)(nil)).Elem()
}

func (o VirtualServiceSpecTcpMatchPatchOutput) ToVirtualServiceSpecTcpMatchPatchOutput() VirtualServiceSpecTcpMatchPatchOutput {
	return o
}

func (o VirtualServiceSpecTcpMatchPatchOutput) ToVirtualServiceSpecTcpMatchPatchOutputWithContext(ctx context.Context) VirtualServiceSpecTcpMatchPatchOutput {
	return o
}

// IPv4 or IPv6 ip addresses of destination with optional subnet.
func (o VirtualServiceSpecTcpMatchPatchOutput) DestinationSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpMatchPatch) []string { return v.DestinationSubnets }).(pulumi.StringArrayOutput)
}

// Names of gateways where the rule should be applied.
func (o VirtualServiceSpecTcpMatchPatchOutput) Gateways() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpMatchPatch) []string { return v.Gateways }).(pulumi.StringArrayOutput)
}

// Specifies the port on the host that is being addressed.
func (o VirtualServiceSpecTcpMatchPatchOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpMatchPatch) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// One or more labels that constrain the applicability of a rule to workloads with the given labels.
func (o VirtualServiceSpecTcpMatchPatchOutput) SourceLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpMatchPatch) map[string]string { return v.SourceLabels }).(pulumi.StringMapOutput)
}

// Source namespace constraining the applicability of a rule to workloads in that namespace.
func (o VirtualServiceSpecTcpMatchPatchOutput) SourceNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpMatchPatch) *string { return v.SourceNamespace }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecTcpMatchPatchOutput) SourceSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpMatchPatch) *string { return v.SourceSubnet }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecTcpMatchPatchArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTcpMatchPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTcpMatchPatch)(nil)).Elem()
}

func (o VirtualServiceSpecTcpMatchPatchArrayOutput) ToVirtualServiceSpecTcpMatchPatchArrayOutput() VirtualServiceSpecTcpMatchPatchArrayOutput {
	return o
}

func (o VirtualServiceSpecTcpMatchPatchArrayOutput) ToVirtualServiceSpecTcpMatchPatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTcpMatchPatchArrayOutput {
	return o
}

func (o VirtualServiceSpecTcpMatchPatchArrayOutput) Index(i pulumi.IntInput) VirtualServiceSpecTcpMatchPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceSpecTcpMatchPatch {
		return vs[0].([]VirtualServiceSpecTcpMatchPatch)[vs[1].(int)]
	}).(VirtualServiceSpecTcpMatchPatchOutput)
}

type VirtualServiceSpecTcpPatch struct {
	// Match conditions to be satisfied for the rule to be activated.
	Match []VirtualServiceSpecTcpMatchPatch `pulumi:"match"`
	// The destination to which the connection should be forwarded to.
	Route []VirtualServiceSpecTcpRoutePatch `pulumi:"route"`
}

// VirtualServiceSpecTcpPatchInput is an input type that accepts VirtualServiceSpecTcpPatchArgs and VirtualServiceSpecTcpPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTcpPatchInput` via:
//
//	VirtualServiceSpecTcpPatchArgs{...}
type VirtualServiceSpecTcpPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecTcpPatchOutput() VirtualServiceSpecTcpPatchOutput
	ToVirtualServiceSpecTcpPatchOutputWithContext(context.Context) VirtualServiceSpecTcpPatchOutput
}

type VirtualServiceSpecTcpPatchArgs struct {
	// Match conditions to be satisfied for the rule to be activated.
	Match VirtualServiceSpecTcpMatchPatchArrayInput `pulumi:"match"`
	// The destination to which the connection should be forwarded to.
	Route VirtualServiceSpecTcpRoutePatchArrayInput `pulumi:"route"`
}

func (VirtualServiceSpecTcpPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTcpPatch)(nil)).Elem()
}

func (i VirtualServiceSpecTcpPatchArgs) ToVirtualServiceSpecTcpPatchOutput() VirtualServiceSpecTcpPatchOutput {
	return i.ToVirtualServiceSpecTcpPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTcpPatchArgs) ToVirtualServiceSpecTcpPatchOutputWithContext(ctx context.Context) VirtualServiceSpecTcpPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpPatchOutput)
}

// VirtualServiceSpecTcpPatchArrayInput is an input type that accepts VirtualServiceSpecTcpPatchArray and VirtualServiceSpecTcpPatchArrayOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTcpPatchArrayInput` via:
//
//	VirtualServiceSpecTcpPatchArray{ VirtualServiceSpecTcpPatchArgs{...} }
type VirtualServiceSpecTcpPatchArrayInput interface {
	pulumi.Input

	ToVirtualServiceSpecTcpPatchArrayOutput() VirtualServiceSpecTcpPatchArrayOutput
	ToVirtualServiceSpecTcpPatchArrayOutputWithContext(context.Context) VirtualServiceSpecTcpPatchArrayOutput
}

type VirtualServiceSpecTcpPatchArray []VirtualServiceSpecTcpPatchInput

func (VirtualServiceSpecTcpPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTcpPatch)(nil)).Elem()
}

func (i VirtualServiceSpecTcpPatchArray) ToVirtualServiceSpecTcpPatchArrayOutput() VirtualServiceSpecTcpPatchArrayOutput {
	return i.ToVirtualServiceSpecTcpPatchArrayOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTcpPatchArray) ToVirtualServiceSpecTcpPatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTcpPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpPatchArrayOutput)
}

type VirtualServiceSpecTcpPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTcpPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTcpPatch)(nil)).Elem()
}

func (o VirtualServiceSpecTcpPatchOutput) ToVirtualServiceSpecTcpPatchOutput() VirtualServiceSpecTcpPatchOutput {
	return o
}

func (o VirtualServiceSpecTcpPatchOutput) ToVirtualServiceSpecTcpPatchOutputWithContext(ctx context.Context) VirtualServiceSpecTcpPatchOutput {
	return o
}

// Match conditions to be satisfied for the rule to be activated.
func (o VirtualServiceSpecTcpPatchOutput) Match() VirtualServiceSpecTcpMatchPatchArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpPatch) []VirtualServiceSpecTcpMatchPatch { return v.Match }).(VirtualServiceSpecTcpMatchPatchArrayOutput)
}

// The destination to which the connection should be forwarded to.
func (o VirtualServiceSpecTcpPatchOutput) Route() VirtualServiceSpecTcpRoutePatchArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpPatch) []VirtualServiceSpecTcpRoutePatch { return v.Route }).(VirtualServiceSpecTcpRoutePatchArrayOutput)
}

type VirtualServiceSpecTcpPatchArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTcpPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTcpPatch)(nil)).Elem()
}

func (o VirtualServiceSpecTcpPatchArrayOutput) ToVirtualServiceSpecTcpPatchArrayOutput() VirtualServiceSpecTcpPatchArrayOutput {
	return o
}

func (o VirtualServiceSpecTcpPatchArrayOutput) ToVirtualServiceSpecTcpPatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTcpPatchArrayOutput {
	return o
}

func (o VirtualServiceSpecTcpPatchArrayOutput) Index(i pulumi.IntInput) VirtualServiceSpecTcpPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceSpecTcpPatch {
		return vs[0].([]VirtualServiceSpecTcpPatch)[vs[1].(int)]
	}).(VirtualServiceSpecTcpPatchOutput)
}

type VirtualServiceSpecTcpRoute struct {
	Destination *VirtualServiceSpecTcpRouteDestination `pulumi:"destination"`
	// Weight specifies the relative proportion of traffic to be forwarded to the destination.
	Weight *int `pulumi:"weight"`
}

// VirtualServiceSpecTcpRouteInput is an input type that accepts VirtualServiceSpecTcpRouteArgs and VirtualServiceSpecTcpRouteOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTcpRouteInput` via:
//
//	VirtualServiceSpecTcpRouteArgs{...}
type VirtualServiceSpecTcpRouteInput interface {
	pulumi.Input

	ToVirtualServiceSpecTcpRouteOutput() VirtualServiceSpecTcpRouteOutput
	ToVirtualServiceSpecTcpRouteOutputWithContext(context.Context) VirtualServiceSpecTcpRouteOutput
}

type VirtualServiceSpecTcpRouteArgs struct {
	Destination VirtualServiceSpecTcpRouteDestinationPtrInput `pulumi:"destination"`
	// Weight specifies the relative proportion of traffic to be forwarded to the destination.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (VirtualServiceSpecTcpRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTcpRoute)(nil)).Elem()
}

func (i VirtualServiceSpecTcpRouteArgs) ToVirtualServiceSpecTcpRouteOutput() VirtualServiceSpecTcpRouteOutput {
	return i.ToVirtualServiceSpecTcpRouteOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTcpRouteArgs) ToVirtualServiceSpecTcpRouteOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpRouteOutput)
}

// VirtualServiceSpecTcpRouteArrayInput is an input type that accepts VirtualServiceSpecTcpRouteArray and VirtualServiceSpecTcpRouteArrayOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTcpRouteArrayInput` via:
//
//	VirtualServiceSpecTcpRouteArray{ VirtualServiceSpecTcpRouteArgs{...} }
type VirtualServiceSpecTcpRouteArrayInput interface {
	pulumi.Input

	ToVirtualServiceSpecTcpRouteArrayOutput() VirtualServiceSpecTcpRouteArrayOutput
	ToVirtualServiceSpecTcpRouteArrayOutputWithContext(context.Context) VirtualServiceSpecTcpRouteArrayOutput
}

type VirtualServiceSpecTcpRouteArray []VirtualServiceSpecTcpRouteInput

func (VirtualServiceSpecTcpRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTcpRoute)(nil)).Elem()
}

func (i VirtualServiceSpecTcpRouteArray) ToVirtualServiceSpecTcpRouteArrayOutput() VirtualServiceSpecTcpRouteArrayOutput {
	return i.ToVirtualServiceSpecTcpRouteArrayOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTcpRouteArray) ToVirtualServiceSpecTcpRouteArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpRouteArrayOutput)
}

type VirtualServiceSpecTcpRouteOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTcpRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTcpRoute)(nil)).Elem()
}

func (o VirtualServiceSpecTcpRouteOutput) ToVirtualServiceSpecTcpRouteOutput() VirtualServiceSpecTcpRouteOutput {
	return o
}

func (o VirtualServiceSpecTcpRouteOutput) ToVirtualServiceSpecTcpRouteOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteOutput {
	return o
}

func (o VirtualServiceSpecTcpRouteOutput) Destination() VirtualServiceSpecTcpRouteDestinationPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpRoute) *VirtualServiceSpecTcpRouteDestination { return v.Destination }).(VirtualServiceSpecTcpRouteDestinationPtrOutput)
}

// Weight specifies the relative proportion of traffic to be forwarded to the destination.
func (o VirtualServiceSpecTcpRouteOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpRoute) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type VirtualServiceSpecTcpRouteArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTcpRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTcpRoute)(nil)).Elem()
}

func (o VirtualServiceSpecTcpRouteArrayOutput) ToVirtualServiceSpecTcpRouteArrayOutput() VirtualServiceSpecTcpRouteArrayOutput {
	return o
}

func (o VirtualServiceSpecTcpRouteArrayOutput) ToVirtualServiceSpecTcpRouteArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteArrayOutput {
	return o
}

func (o VirtualServiceSpecTcpRouteArrayOutput) Index(i pulumi.IntInput) VirtualServiceSpecTcpRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceSpecTcpRoute {
		return vs[0].([]VirtualServiceSpecTcpRoute)[vs[1].(int)]
	}).(VirtualServiceSpecTcpRouteOutput)
}

// Destination uniquely identifies the instances of a service to which the request/connection should be forwarded to.
type VirtualServiceSpecTcpRouteDestination struct {
	// The name of a service from the service registry.
	Host *string                                    `pulumi:"host"`
	Port *VirtualServiceSpecTcpRouteDestinationPort `pulumi:"port"`
	// The name of a subset within the service.
	Subset *string `pulumi:"subset"`
}

// VirtualServiceSpecTcpRouteDestinationInput is an input type that accepts VirtualServiceSpecTcpRouteDestinationArgs and VirtualServiceSpecTcpRouteDestinationOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTcpRouteDestinationInput` via:
//
//	VirtualServiceSpecTcpRouteDestinationArgs{...}
type VirtualServiceSpecTcpRouteDestinationInput interface {
	pulumi.Input

	ToVirtualServiceSpecTcpRouteDestinationOutput() VirtualServiceSpecTcpRouteDestinationOutput
	ToVirtualServiceSpecTcpRouteDestinationOutputWithContext(context.Context) VirtualServiceSpecTcpRouteDestinationOutput
}

// Destination uniquely identifies the instances of a service to which the request/connection should be forwarded to.
type VirtualServiceSpecTcpRouteDestinationArgs struct {
	// The name of a service from the service registry.
	Host pulumi.StringPtrInput                             `pulumi:"host"`
	Port VirtualServiceSpecTcpRouteDestinationPortPtrInput `pulumi:"port"`
	// The name of a subset within the service.
	Subset pulumi.StringPtrInput `pulumi:"subset"`
}

func (VirtualServiceSpecTcpRouteDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTcpRouteDestination)(nil)).Elem()
}

func (i VirtualServiceSpecTcpRouteDestinationArgs) ToVirtualServiceSpecTcpRouteDestinationOutput() VirtualServiceSpecTcpRouteDestinationOutput {
	return i.ToVirtualServiceSpecTcpRouteDestinationOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTcpRouteDestinationArgs) ToVirtualServiceSpecTcpRouteDestinationOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpRouteDestinationOutput)
}

func (i VirtualServiceSpecTcpRouteDestinationArgs) ToVirtualServiceSpecTcpRouteDestinationPtrOutput() VirtualServiceSpecTcpRouteDestinationPtrOutput {
	return i.ToVirtualServiceSpecTcpRouteDestinationPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTcpRouteDestinationArgs) ToVirtualServiceSpecTcpRouteDestinationPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpRouteDestinationOutput).ToVirtualServiceSpecTcpRouteDestinationPtrOutputWithContext(ctx)
}

// VirtualServiceSpecTcpRouteDestinationPtrInput is an input type that accepts VirtualServiceSpecTcpRouteDestinationArgs, VirtualServiceSpecTcpRouteDestinationPtr and VirtualServiceSpecTcpRouteDestinationPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTcpRouteDestinationPtrInput` via:
//
//	        VirtualServiceSpecTcpRouteDestinationArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecTcpRouteDestinationPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecTcpRouteDestinationPtrOutput() VirtualServiceSpecTcpRouteDestinationPtrOutput
	ToVirtualServiceSpecTcpRouteDestinationPtrOutputWithContext(context.Context) VirtualServiceSpecTcpRouteDestinationPtrOutput
}

type virtualServiceSpecTcpRouteDestinationPtrType VirtualServiceSpecTcpRouteDestinationArgs

func VirtualServiceSpecTcpRouteDestinationPtr(v *VirtualServiceSpecTcpRouteDestinationArgs) VirtualServiceSpecTcpRouteDestinationPtrInput {
	return (*virtualServiceSpecTcpRouteDestinationPtrType)(v)
}

func (*virtualServiceSpecTcpRouteDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecTcpRouteDestination)(nil)).Elem()
}

func (i *virtualServiceSpecTcpRouteDestinationPtrType) ToVirtualServiceSpecTcpRouteDestinationPtrOutput() VirtualServiceSpecTcpRouteDestinationPtrOutput {
	return i.ToVirtualServiceSpecTcpRouteDestinationPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecTcpRouteDestinationPtrType) ToVirtualServiceSpecTcpRouteDestinationPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpRouteDestinationPtrOutput)
}

// Destination uniquely identifies the instances of a service to which the request/connection should be forwarded to.
type VirtualServiceSpecTcpRouteDestinationOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTcpRouteDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTcpRouteDestination)(nil)).Elem()
}

func (o VirtualServiceSpecTcpRouteDestinationOutput) ToVirtualServiceSpecTcpRouteDestinationOutput() VirtualServiceSpecTcpRouteDestinationOutput {
	return o
}

func (o VirtualServiceSpecTcpRouteDestinationOutput) ToVirtualServiceSpecTcpRouteDestinationOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationOutput {
	return o
}

func (o VirtualServiceSpecTcpRouteDestinationOutput) ToVirtualServiceSpecTcpRouteDestinationPtrOutput() VirtualServiceSpecTcpRouteDestinationPtrOutput {
	return o.ToVirtualServiceSpecTcpRouteDestinationPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecTcpRouteDestinationOutput) ToVirtualServiceSpecTcpRouteDestinationPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecTcpRouteDestination) *VirtualServiceSpecTcpRouteDestination {
		return &v
	}).(VirtualServiceSpecTcpRouteDestinationPtrOutput)
}

// The name of a service from the service registry.
func (o VirtualServiceSpecTcpRouteDestinationOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpRouteDestination) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecTcpRouteDestinationOutput) Port() VirtualServiceSpecTcpRouteDestinationPortPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpRouteDestination) *VirtualServiceSpecTcpRouteDestinationPort {
		return v.Port
	}).(VirtualServiceSpecTcpRouteDestinationPortPtrOutput)
}

// The name of a subset within the service.
func (o VirtualServiceSpecTcpRouteDestinationOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpRouteDestination) *string { return v.Subset }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecTcpRouteDestinationPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTcpRouteDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecTcpRouteDestination)(nil)).Elem()
}

func (o VirtualServiceSpecTcpRouteDestinationPtrOutput) ToVirtualServiceSpecTcpRouteDestinationPtrOutput() VirtualServiceSpecTcpRouteDestinationPtrOutput {
	return o
}

func (o VirtualServiceSpecTcpRouteDestinationPtrOutput) ToVirtualServiceSpecTcpRouteDestinationPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationPtrOutput {
	return o
}

func (o VirtualServiceSpecTcpRouteDestinationPtrOutput) Elem() VirtualServiceSpecTcpRouteDestinationOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTcpRouteDestination) VirtualServiceSpecTcpRouteDestination {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecTcpRouteDestination
		return ret
	}).(VirtualServiceSpecTcpRouteDestinationOutput)
}

// The name of a service from the service registry.
func (o VirtualServiceSpecTcpRouteDestinationPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTcpRouteDestination) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecTcpRouteDestinationPtrOutput) Port() VirtualServiceSpecTcpRouteDestinationPortPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTcpRouteDestination) *VirtualServiceSpecTcpRouteDestinationPort {
		if v == nil {
			return nil
		}
		return v.Port
	}).(VirtualServiceSpecTcpRouteDestinationPortPtrOutput)
}

// The name of a subset within the service.
func (o VirtualServiceSpecTcpRouteDestinationPtrOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTcpRouteDestination) *string {
		if v == nil {
			return nil
		}
		return v.Subset
	}).(pulumi.StringPtrOutput)
}

// Destination uniquely identifies the instances of a service to which the request/connection should be forwarded to.
type VirtualServiceSpecTcpRouteDestinationPatch struct {
	// The name of a service from the service registry.
	Host *string                                         `pulumi:"host"`
	Port *VirtualServiceSpecTcpRouteDestinationPortPatch `pulumi:"port"`
	// The name of a subset within the service.
	Subset *string `pulumi:"subset"`
}

// VirtualServiceSpecTcpRouteDestinationPatchInput is an input type that accepts VirtualServiceSpecTcpRouteDestinationPatchArgs and VirtualServiceSpecTcpRouteDestinationPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTcpRouteDestinationPatchInput` via:
//
//	VirtualServiceSpecTcpRouteDestinationPatchArgs{...}
type VirtualServiceSpecTcpRouteDestinationPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecTcpRouteDestinationPatchOutput() VirtualServiceSpecTcpRouteDestinationPatchOutput
	ToVirtualServiceSpecTcpRouteDestinationPatchOutputWithContext(context.Context) VirtualServiceSpecTcpRouteDestinationPatchOutput
}

// Destination uniquely identifies the instances of a service to which the request/connection should be forwarded to.
type VirtualServiceSpecTcpRouteDestinationPatchArgs struct {
	// The name of a service from the service registry.
	Host pulumi.StringPtrInput                                  `pulumi:"host"`
	Port VirtualServiceSpecTcpRouteDestinationPortPatchPtrInput `pulumi:"port"`
	// The name of a subset within the service.
	Subset pulumi.StringPtrInput `pulumi:"subset"`
}

func (VirtualServiceSpecTcpRouteDestinationPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTcpRouteDestinationPatch)(nil)).Elem()
}

func (i VirtualServiceSpecTcpRouteDestinationPatchArgs) ToVirtualServiceSpecTcpRouteDestinationPatchOutput() VirtualServiceSpecTcpRouteDestinationPatchOutput {
	return i.ToVirtualServiceSpecTcpRouteDestinationPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTcpRouteDestinationPatchArgs) ToVirtualServiceSpecTcpRouteDestinationPatchOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpRouteDestinationPatchOutput)
}

func (i VirtualServiceSpecTcpRouteDestinationPatchArgs) ToVirtualServiceSpecTcpRouteDestinationPatchPtrOutput() VirtualServiceSpecTcpRouteDestinationPatchPtrOutput {
	return i.ToVirtualServiceSpecTcpRouteDestinationPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTcpRouteDestinationPatchArgs) ToVirtualServiceSpecTcpRouteDestinationPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpRouteDestinationPatchOutput).ToVirtualServiceSpecTcpRouteDestinationPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecTcpRouteDestinationPatchPtrInput is an input type that accepts VirtualServiceSpecTcpRouteDestinationPatchArgs, VirtualServiceSpecTcpRouteDestinationPatchPtr and VirtualServiceSpecTcpRouteDestinationPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTcpRouteDestinationPatchPtrInput` via:
//
//	        VirtualServiceSpecTcpRouteDestinationPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecTcpRouteDestinationPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecTcpRouteDestinationPatchPtrOutput() VirtualServiceSpecTcpRouteDestinationPatchPtrOutput
	ToVirtualServiceSpecTcpRouteDestinationPatchPtrOutputWithContext(context.Context) VirtualServiceSpecTcpRouteDestinationPatchPtrOutput
}

type virtualServiceSpecTcpRouteDestinationPatchPtrType VirtualServiceSpecTcpRouteDestinationPatchArgs

func VirtualServiceSpecTcpRouteDestinationPatchPtr(v *VirtualServiceSpecTcpRouteDestinationPatchArgs) VirtualServiceSpecTcpRouteDestinationPatchPtrInput {
	return (*virtualServiceSpecTcpRouteDestinationPatchPtrType)(v)
}

func (*virtualServiceSpecTcpRouteDestinationPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecTcpRouteDestinationPatch)(nil)).Elem()
}

func (i *virtualServiceSpecTcpRouteDestinationPatchPtrType) ToVirtualServiceSpecTcpRouteDestinationPatchPtrOutput() VirtualServiceSpecTcpRouteDestinationPatchPtrOutput {
	return i.ToVirtualServiceSpecTcpRouteDestinationPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecTcpRouteDestinationPatchPtrType) ToVirtualServiceSpecTcpRouteDestinationPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpRouteDestinationPatchPtrOutput)
}

// Destination uniquely identifies the instances of a service to which the request/connection should be forwarded to.
type VirtualServiceSpecTcpRouteDestinationPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTcpRouteDestinationPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTcpRouteDestinationPatch)(nil)).Elem()
}

func (o VirtualServiceSpecTcpRouteDestinationPatchOutput) ToVirtualServiceSpecTcpRouteDestinationPatchOutput() VirtualServiceSpecTcpRouteDestinationPatchOutput {
	return o
}

func (o VirtualServiceSpecTcpRouteDestinationPatchOutput) ToVirtualServiceSpecTcpRouteDestinationPatchOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationPatchOutput {
	return o
}

func (o VirtualServiceSpecTcpRouteDestinationPatchOutput) ToVirtualServiceSpecTcpRouteDestinationPatchPtrOutput() VirtualServiceSpecTcpRouteDestinationPatchPtrOutput {
	return o.ToVirtualServiceSpecTcpRouteDestinationPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecTcpRouteDestinationPatchOutput) ToVirtualServiceSpecTcpRouteDestinationPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecTcpRouteDestinationPatch) *VirtualServiceSpecTcpRouteDestinationPatch {
		return &v
	}).(VirtualServiceSpecTcpRouteDestinationPatchPtrOutput)
}

// The name of a service from the service registry.
func (o VirtualServiceSpecTcpRouteDestinationPatchOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpRouteDestinationPatch) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecTcpRouteDestinationPatchOutput) Port() VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpRouteDestinationPatch) *VirtualServiceSpecTcpRouteDestinationPortPatch {
		return v.Port
	}).(VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput)
}

// The name of a subset within the service.
func (o VirtualServiceSpecTcpRouteDestinationPatchOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpRouteDestinationPatch) *string { return v.Subset }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecTcpRouteDestinationPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTcpRouteDestinationPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecTcpRouteDestinationPatch)(nil)).Elem()
}

func (o VirtualServiceSpecTcpRouteDestinationPatchPtrOutput) ToVirtualServiceSpecTcpRouteDestinationPatchPtrOutput() VirtualServiceSpecTcpRouteDestinationPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecTcpRouteDestinationPatchPtrOutput) ToVirtualServiceSpecTcpRouteDestinationPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecTcpRouteDestinationPatchPtrOutput) Elem() VirtualServiceSpecTcpRouteDestinationPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTcpRouteDestinationPatch) VirtualServiceSpecTcpRouteDestinationPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecTcpRouteDestinationPatch
		return ret
	}).(VirtualServiceSpecTcpRouteDestinationPatchOutput)
}

// The name of a service from the service registry.
func (o VirtualServiceSpecTcpRouteDestinationPatchPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTcpRouteDestinationPatch) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecTcpRouteDestinationPatchPtrOutput) Port() VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTcpRouteDestinationPatch) *VirtualServiceSpecTcpRouteDestinationPortPatch {
		if v == nil {
			return nil
		}
		return v.Port
	}).(VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput)
}

// The name of a subset within the service.
func (o VirtualServiceSpecTcpRouteDestinationPatchPtrOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTcpRouteDestinationPatch) *string {
		if v == nil {
			return nil
		}
		return v.Subset
	}).(pulumi.StringPtrOutput)
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecTcpRouteDestinationPort struct {
	Number *int `pulumi:"number"`
}

// VirtualServiceSpecTcpRouteDestinationPortInput is an input type that accepts VirtualServiceSpecTcpRouteDestinationPortArgs and VirtualServiceSpecTcpRouteDestinationPortOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTcpRouteDestinationPortInput` via:
//
//	VirtualServiceSpecTcpRouteDestinationPortArgs{...}
type VirtualServiceSpecTcpRouteDestinationPortInput interface {
	pulumi.Input

	ToVirtualServiceSpecTcpRouteDestinationPortOutput() VirtualServiceSpecTcpRouteDestinationPortOutput
	ToVirtualServiceSpecTcpRouteDestinationPortOutputWithContext(context.Context) VirtualServiceSpecTcpRouteDestinationPortOutput
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecTcpRouteDestinationPortArgs struct {
	Number pulumi.IntPtrInput `pulumi:"number"`
}

func (VirtualServiceSpecTcpRouteDestinationPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTcpRouteDestinationPort)(nil)).Elem()
}

func (i VirtualServiceSpecTcpRouteDestinationPortArgs) ToVirtualServiceSpecTcpRouteDestinationPortOutput() VirtualServiceSpecTcpRouteDestinationPortOutput {
	return i.ToVirtualServiceSpecTcpRouteDestinationPortOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTcpRouteDestinationPortArgs) ToVirtualServiceSpecTcpRouteDestinationPortOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpRouteDestinationPortOutput)
}

func (i VirtualServiceSpecTcpRouteDestinationPortArgs) ToVirtualServiceSpecTcpRouteDestinationPortPtrOutput() VirtualServiceSpecTcpRouteDestinationPortPtrOutput {
	return i.ToVirtualServiceSpecTcpRouteDestinationPortPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTcpRouteDestinationPortArgs) ToVirtualServiceSpecTcpRouteDestinationPortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpRouteDestinationPortOutput).ToVirtualServiceSpecTcpRouteDestinationPortPtrOutputWithContext(ctx)
}

// VirtualServiceSpecTcpRouteDestinationPortPtrInput is an input type that accepts VirtualServiceSpecTcpRouteDestinationPortArgs, VirtualServiceSpecTcpRouteDestinationPortPtr and VirtualServiceSpecTcpRouteDestinationPortPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTcpRouteDestinationPortPtrInput` via:
//
//	        VirtualServiceSpecTcpRouteDestinationPortArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecTcpRouteDestinationPortPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecTcpRouteDestinationPortPtrOutput() VirtualServiceSpecTcpRouteDestinationPortPtrOutput
	ToVirtualServiceSpecTcpRouteDestinationPortPtrOutputWithContext(context.Context) VirtualServiceSpecTcpRouteDestinationPortPtrOutput
}

type virtualServiceSpecTcpRouteDestinationPortPtrType VirtualServiceSpecTcpRouteDestinationPortArgs

func VirtualServiceSpecTcpRouteDestinationPortPtr(v *VirtualServiceSpecTcpRouteDestinationPortArgs) VirtualServiceSpecTcpRouteDestinationPortPtrInput {
	return (*virtualServiceSpecTcpRouteDestinationPortPtrType)(v)
}

func (*virtualServiceSpecTcpRouteDestinationPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecTcpRouteDestinationPort)(nil)).Elem()
}

func (i *virtualServiceSpecTcpRouteDestinationPortPtrType) ToVirtualServiceSpecTcpRouteDestinationPortPtrOutput() VirtualServiceSpecTcpRouteDestinationPortPtrOutput {
	return i.ToVirtualServiceSpecTcpRouteDestinationPortPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecTcpRouteDestinationPortPtrType) ToVirtualServiceSpecTcpRouteDestinationPortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpRouteDestinationPortPtrOutput)
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecTcpRouteDestinationPortOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTcpRouteDestinationPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTcpRouteDestinationPort)(nil)).Elem()
}

func (o VirtualServiceSpecTcpRouteDestinationPortOutput) ToVirtualServiceSpecTcpRouteDestinationPortOutput() VirtualServiceSpecTcpRouteDestinationPortOutput {
	return o
}

func (o VirtualServiceSpecTcpRouteDestinationPortOutput) ToVirtualServiceSpecTcpRouteDestinationPortOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationPortOutput {
	return o
}

func (o VirtualServiceSpecTcpRouteDestinationPortOutput) ToVirtualServiceSpecTcpRouteDestinationPortPtrOutput() VirtualServiceSpecTcpRouteDestinationPortPtrOutput {
	return o.ToVirtualServiceSpecTcpRouteDestinationPortPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecTcpRouteDestinationPortOutput) ToVirtualServiceSpecTcpRouteDestinationPortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationPortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecTcpRouteDestinationPort) *VirtualServiceSpecTcpRouteDestinationPort {
		return &v
	}).(VirtualServiceSpecTcpRouteDestinationPortPtrOutput)
}

func (o VirtualServiceSpecTcpRouteDestinationPortOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpRouteDestinationPort) *int { return v.Number }).(pulumi.IntPtrOutput)
}

type VirtualServiceSpecTcpRouteDestinationPortPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTcpRouteDestinationPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecTcpRouteDestinationPort)(nil)).Elem()
}

func (o VirtualServiceSpecTcpRouteDestinationPortPtrOutput) ToVirtualServiceSpecTcpRouteDestinationPortPtrOutput() VirtualServiceSpecTcpRouteDestinationPortPtrOutput {
	return o
}

func (o VirtualServiceSpecTcpRouteDestinationPortPtrOutput) ToVirtualServiceSpecTcpRouteDestinationPortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationPortPtrOutput {
	return o
}

func (o VirtualServiceSpecTcpRouteDestinationPortPtrOutput) Elem() VirtualServiceSpecTcpRouteDestinationPortOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTcpRouteDestinationPort) VirtualServiceSpecTcpRouteDestinationPort {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecTcpRouteDestinationPort
		return ret
	}).(VirtualServiceSpecTcpRouteDestinationPortOutput)
}

func (o VirtualServiceSpecTcpRouteDestinationPortPtrOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTcpRouteDestinationPort) *int {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.IntPtrOutput)
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecTcpRouteDestinationPortPatch struct {
	Number *int `pulumi:"number"`
}

// VirtualServiceSpecTcpRouteDestinationPortPatchInput is an input type that accepts VirtualServiceSpecTcpRouteDestinationPortPatchArgs and VirtualServiceSpecTcpRouteDestinationPortPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTcpRouteDestinationPortPatchInput` via:
//
//	VirtualServiceSpecTcpRouteDestinationPortPatchArgs{...}
type VirtualServiceSpecTcpRouteDestinationPortPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecTcpRouteDestinationPortPatchOutput() VirtualServiceSpecTcpRouteDestinationPortPatchOutput
	ToVirtualServiceSpecTcpRouteDestinationPortPatchOutputWithContext(context.Context) VirtualServiceSpecTcpRouteDestinationPortPatchOutput
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecTcpRouteDestinationPortPatchArgs struct {
	Number pulumi.IntPtrInput `pulumi:"number"`
}

func (VirtualServiceSpecTcpRouteDestinationPortPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTcpRouteDestinationPortPatch)(nil)).Elem()
}

func (i VirtualServiceSpecTcpRouteDestinationPortPatchArgs) ToVirtualServiceSpecTcpRouteDestinationPortPatchOutput() VirtualServiceSpecTcpRouteDestinationPortPatchOutput {
	return i.ToVirtualServiceSpecTcpRouteDestinationPortPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTcpRouteDestinationPortPatchArgs) ToVirtualServiceSpecTcpRouteDestinationPortPatchOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationPortPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpRouteDestinationPortPatchOutput)
}

func (i VirtualServiceSpecTcpRouteDestinationPortPatchArgs) ToVirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput() VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput {
	return i.ToVirtualServiceSpecTcpRouteDestinationPortPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTcpRouteDestinationPortPatchArgs) ToVirtualServiceSpecTcpRouteDestinationPortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpRouteDestinationPortPatchOutput).ToVirtualServiceSpecTcpRouteDestinationPortPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecTcpRouteDestinationPortPatchPtrInput is an input type that accepts VirtualServiceSpecTcpRouteDestinationPortPatchArgs, VirtualServiceSpecTcpRouteDestinationPortPatchPtr and VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTcpRouteDestinationPortPatchPtrInput` via:
//
//	        VirtualServiceSpecTcpRouteDestinationPortPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecTcpRouteDestinationPortPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput() VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput
	ToVirtualServiceSpecTcpRouteDestinationPortPatchPtrOutputWithContext(context.Context) VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput
}

type virtualServiceSpecTcpRouteDestinationPortPatchPtrType VirtualServiceSpecTcpRouteDestinationPortPatchArgs

func VirtualServiceSpecTcpRouteDestinationPortPatchPtr(v *VirtualServiceSpecTcpRouteDestinationPortPatchArgs) VirtualServiceSpecTcpRouteDestinationPortPatchPtrInput {
	return (*virtualServiceSpecTcpRouteDestinationPortPatchPtrType)(v)
}

func (*virtualServiceSpecTcpRouteDestinationPortPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecTcpRouteDestinationPortPatch)(nil)).Elem()
}

func (i *virtualServiceSpecTcpRouteDestinationPortPatchPtrType) ToVirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput() VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput {
	return i.ToVirtualServiceSpecTcpRouteDestinationPortPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecTcpRouteDestinationPortPatchPtrType) ToVirtualServiceSpecTcpRouteDestinationPortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput)
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecTcpRouteDestinationPortPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTcpRouteDestinationPortPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTcpRouteDestinationPortPatch)(nil)).Elem()
}

func (o VirtualServiceSpecTcpRouteDestinationPortPatchOutput) ToVirtualServiceSpecTcpRouteDestinationPortPatchOutput() VirtualServiceSpecTcpRouteDestinationPortPatchOutput {
	return o
}

func (o VirtualServiceSpecTcpRouteDestinationPortPatchOutput) ToVirtualServiceSpecTcpRouteDestinationPortPatchOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationPortPatchOutput {
	return o
}

func (o VirtualServiceSpecTcpRouteDestinationPortPatchOutput) ToVirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput() VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput {
	return o.ToVirtualServiceSpecTcpRouteDestinationPortPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecTcpRouteDestinationPortPatchOutput) ToVirtualServiceSpecTcpRouteDestinationPortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecTcpRouteDestinationPortPatch) *VirtualServiceSpecTcpRouteDestinationPortPatch {
		return &v
	}).(VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput)
}

func (o VirtualServiceSpecTcpRouteDestinationPortPatchOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpRouteDestinationPortPatch) *int { return v.Number }).(pulumi.IntPtrOutput)
}

type VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecTcpRouteDestinationPortPatch)(nil)).Elem()
}

func (o VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput) ToVirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput() VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput) ToVirtualServiceSpecTcpRouteDestinationPortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput) Elem() VirtualServiceSpecTcpRouteDestinationPortPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTcpRouteDestinationPortPatch) VirtualServiceSpecTcpRouteDestinationPortPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecTcpRouteDestinationPortPatch
		return ret
	}).(VirtualServiceSpecTcpRouteDestinationPortPatchOutput)
}

func (o VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTcpRouteDestinationPortPatch) *int {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.IntPtrOutput)
}

type VirtualServiceSpecTcpRoutePatch struct {
	Destination *VirtualServiceSpecTcpRouteDestinationPatch `pulumi:"destination"`
	// Weight specifies the relative proportion of traffic to be forwarded to the destination.
	Weight *int `pulumi:"weight"`
}

// VirtualServiceSpecTcpRoutePatchInput is an input type that accepts VirtualServiceSpecTcpRoutePatchArgs and VirtualServiceSpecTcpRoutePatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTcpRoutePatchInput` via:
//
//	VirtualServiceSpecTcpRoutePatchArgs{...}
type VirtualServiceSpecTcpRoutePatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecTcpRoutePatchOutput() VirtualServiceSpecTcpRoutePatchOutput
	ToVirtualServiceSpecTcpRoutePatchOutputWithContext(context.Context) VirtualServiceSpecTcpRoutePatchOutput
}

type VirtualServiceSpecTcpRoutePatchArgs struct {
	Destination VirtualServiceSpecTcpRouteDestinationPatchPtrInput `pulumi:"destination"`
	// Weight specifies the relative proportion of traffic to be forwarded to the destination.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (VirtualServiceSpecTcpRoutePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTcpRoutePatch)(nil)).Elem()
}

func (i VirtualServiceSpecTcpRoutePatchArgs) ToVirtualServiceSpecTcpRoutePatchOutput() VirtualServiceSpecTcpRoutePatchOutput {
	return i.ToVirtualServiceSpecTcpRoutePatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTcpRoutePatchArgs) ToVirtualServiceSpecTcpRoutePatchOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRoutePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpRoutePatchOutput)
}

// VirtualServiceSpecTcpRoutePatchArrayInput is an input type that accepts VirtualServiceSpecTcpRoutePatchArray and VirtualServiceSpecTcpRoutePatchArrayOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTcpRoutePatchArrayInput` via:
//
//	VirtualServiceSpecTcpRoutePatchArray{ VirtualServiceSpecTcpRoutePatchArgs{...} }
type VirtualServiceSpecTcpRoutePatchArrayInput interface {
	pulumi.Input

	ToVirtualServiceSpecTcpRoutePatchArrayOutput() VirtualServiceSpecTcpRoutePatchArrayOutput
	ToVirtualServiceSpecTcpRoutePatchArrayOutputWithContext(context.Context) VirtualServiceSpecTcpRoutePatchArrayOutput
}

type VirtualServiceSpecTcpRoutePatchArray []VirtualServiceSpecTcpRoutePatchInput

func (VirtualServiceSpecTcpRoutePatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTcpRoutePatch)(nil)).Elem()
}

func (i VirtualServiceSpecTcpRoutePatchArray) ToVirtualServiceSpecTcpRoutePatchArrayOutput() VirtualServiceSpecTcpRoutePatchArrayOutput {
	return i.ToVirtualServiceSpecTcpRoutePatchArrayOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTcpRoutePatchArray) ToVirtualServiceSpecTcpRoutePatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRoutePatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTcpRoutePatchArrayOutput)
}

type VirtualServiceSpecTcpRoutePatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTcpRoutePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTcpRoutePatch)(nil)).Elem()
}

func (o VirtualServiceSpecTcpRoutePatchOutput) ToVirtualServiceSpecTcpRoutePatchOutput() VirtualServiceSpecTcpRoutePatchOutput {
	return o
}

func (o VirtualServiceSpecTcpRoutePatchOutput) ToVirtualServiceSpecTcpRoutePatchOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRoutePatchOutput {
	return o
}

func (o VirtualServiceSpecTcpRoutePatchOutput) Destination() VirtualServiceSpecTcpRouteDestinationPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpRoutePatch) *VirtualServiceSpecTcpRouteDestinationPatch {
		return v.Destination
	}).(VirtualServiceSpecTcpRouteDestinationPatchPtrOutput)
}

// Weight specifies the relative proportion of traffic to be forwarded to the destination.
func (o VirtualServiceSpecTcpRoutePatchOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTcpRoutePatch) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type VirtualServiceSpecTcpRoutePatchArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTcpRoutePatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTcpRoutePatch)(nil)).Elem()
}

func (o VirtualServiceSpecTcpRoutePatchArrayOutput) ToVirtualServiceSpecTcpRoutePatchArrayOutput() VirtualServiceSpecTcpRoutePatchArrayOutput {
	return o
}

func (o VirtualServiceSpecTcpRoutePatchArrayOutput) ToVirtualServiceSpecTcpRoutePatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTcpRoutePatchArrayOutput {
	return o
}

func (o VirtualServiceSpecTcpRoutePatchArrayOutput) Index(i pulumi.IntInput) VirtualServiceSpecTcpRoutePatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceSpecTcpRoutePatch {
		return vs[0].([]VirtualServiceSpecTcpRoutePatch)[vs[1].(int)]
	}).(VirtualServiceSpecTcpRoutePatchOutput)
}

type VirtualServiceSpecTls struct {
	// Match conditions to be satisfied for the rule to be activated.
	Match []VirtualServiceSpecTlsMatch `pulumi:"match"`
	// The destination to which the connection should be forwarded to.
	Route []VirtualServiceSpecTlsRoute `pulumi:"route"`
}

// VirtualServiceSpecTlsInput is an input type that accepts VirtualServiceSpecTlsArgs and VirtualServiceSpecTlsOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTlsInput` via:
//
//	VirtualServiceSpecTlsArgs{...}
type VirtualServiceSpecTlsInput interface {
	pulumi.Input

	ToVirtualServiceSpecTlsOutput() VirtualServiceSpecTlsOutput
	ToVirtualServiceSpecTlsOutputWithContext(context.Context) VirtualServiceSpecTlsOutput
}

type VirtualServiceSpecTlsArgs struct {
	// Match conditions to be satisfied for the rule to be activated.
	Match VirtualServiceSpecTlsMatchArrayInput `pulumi:"match"`
	// The destination to which the connection should be forwarded to.
	Route VirtualServiceSpecTlsRouteArrayInput `pulumi:"route"`
}

func (VirtualServiceSpecTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTls)(nil)).Elem()
}

func (i VirtualServiceSpecTlsArgs) ToVirtualServiceSpecTlsOutput() VirtualServiceSpecTlsOutput {
	return i.ToVirtualServiceSpecTlsOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTlsArgs) ToVirtualServiceSpecTlsOutputWithContext(ctx context.Context) VirtualServiceSpecTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsOutput)
}

// VirtualServiceSpecTlsArrayInput is an input type that accepts VirtualServiceSpecTlsArray and VirtualServiceSpecTlsArrayOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTlsArrayInput` via:
//
//	VirtualServiceSpecTlsArray{ VirtualServiceSpecTlsArgs{...} }
type VirtualServiceSpecTlsArrayInput interface {
	pulumi.Input

	ToVirtualServiceSpecTlsArrayOutput() VirtualServiceSpecTlsArrayOutput
	ToVirtualServiceSpecTlsArrayOutputWithContext(context.Context) VirtualServiceSpecTlsArrayOutput
}

type VirtualServiceSpecTlsArray []VirtualServiceSpecTlsInput

func (VirtualServiceSpecTlsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTls)(nil)).Elem()
}

func (i VirtualServiceSpecTlsArray) ToVirtualServiceSpecTlsArrayOutput() VirtualServiceSpecTlsArrayOutput {
	return i.ToVirtualServiceSpecTlsArrayOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTlsArray) ToVirtualServiceSpecTlsArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTlsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsArrayOutput)
}

type VirtualServiceSpecTlsOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTls)(nil)).Elem()
}

func (o VirtualServiceSpecTlsOutput) ToVirtualServiceSpecTlsOutput() VirtualServiceSpecTlsOutput {
	return o
}

func (o VirtualServiceSpecTlsOutput) ToVirtualServiceSpecTlsOutputWithContext(ctx context.Context) VirtualServiceSpecTlsOutput {
	return o
}

// Match conditions to be satisfied for the rule to be activated.
func (o VirtualServiceSpecTlsOutput) Match() VirtualServiceSpecTlsMatchArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecTls) []VirtualServiceSpecTlsMatch { return v.Match }).(VirtualServiceSpecTlsMatchArrayOutput)
}

// The destination to which the connection should be forwarded to.
func (o VirtualServiceSpecTlsOutput) Route() VirtualServiceSpecTlsRouteArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecTls) []VirtualServiceSpecTlsRoute { return v.Route }).(VirtualServiceSpecTlsRouteArrayOutput)
}

type VirtualServiceSpecTlsArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTlsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTls)(nil)).Elem()
}

func (o VirtualServiceSpecTlsArrayOutput) ToVirtualServiceSpecTlsArrayOutput() VirtualServiceSpecTlsArrayOutput {
	return o
}

func (o VirtualServiceSpecTlsArrayOutput) ToVirtualServiceSpecTlsArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTlsArrayOutput {
	return o
}

func (o VirtualServiceSpecTlsArrayOutput) Index(i pulumi.IntInput) VirtualServiceSpecTlsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceSpecTls {
		return vs[0].([]VirtualServiceSpecTls)[vs[1].(int)]
	}).(VirtualServiceSpecTlsOutput)
}

type VirtualServiceSpecTlsMatch struct {
	// IPv4 or IPv6 ip addresses of destination with optional subnet.
	DestinationSubnets []string `pulumi:"destinationSubnets"`
	// Names of gateways where the rule should be applied.
	Gateways []string `pulumi:"gateways"`
	// Specifies the port on the host that is being addressed.
	Port *int `pulumi:"port"`
	// SNI (server name indicator) to match on.
	SniHosts []string `pulumi:"sniHosts"`
	// One or more labels that constrain the applicability of a rule to workloads with the given labels.
	SourceLabels map[string]string `pulumi:"sourceLabels"`
	// Source namespace constraining the applicability of a rule to workloads in that namespace.
	SourceNamespace *string `pulumi:"sourceNamespace"`
}

// VirtualServiceSpecTlsMatchInput is an input type that accepts VirtualServiceSpecTlsMatchArgs and VirtualServiceSpecTlsMatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTlsMatchInput` via:
//
//	VirtualServiceSpecTlsMatchArgs{...}
type VirtualServiceSpecTlsMatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecTlsMatchOutput() VirtualServiceSpecTlsMatchOutput
	ToVirtualServiceSpecTlsMatchOutputWithContext(context.Context) VirtualServiceSpecTlsMatchOutput
}

type VirtualServiceSpecTlsMatchArgs struct {
	// IPv4 or IPv6 ip addresses of destination with optional subnet.
	DestinationSubnets pulumi.StringArrayInput `pulumi:"destinationSubnets"`
	// Names of gateways where the rule should be applied.
	Gateways pulumi.StringArrayInput `pulumi:"gateways"`
	// Specifies the port on the host that is being addressed.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// SNI (server name indicator) to match on.
	SniHosts pulumi.StringArrayInput `pulumi:"sniHosts"`
	// One or more labels that constrain the applicability of a rule to workloads with the given labels.
	SourceLabels pulumi.StringMapInput `pulumi:"sourceLabels"`
	// Source namespace constraining the applicability of a rule to workloads in that namespace.
	SourceNamespace pulumi.StringPtrInput `pulumi:"sourceNamespace"`
}

func (VirtualServiceSpecTlsMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTlsMatch)(nil)).Elem()
}

func (i VirtualServiceSpecTlsMatchArgs) ToVirtualServiceSpecTlsMatchOutput() VirtualServiceSpecTlsMatchOutput {
	return i.ToVirtualServiceSpecTlsMatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTlsMatchArgs) ToVirtualServiceSpecTlsMatchOutputWithContext(ctx context.Context) VirtualServiceSpecTlsMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsMatchOutput)
}

// VirtualServiceSpecTlsMatchArrayInput is an input type that accepts VirtualServiceSpecTlsMatchArray and VirtualServiceSpecTlsMatchArrayOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTlsMatchArrayInput` via:
//
//	VirtualServiceSpecTlsMatchArray{ VirtualServiceSpecTlsMatchArgs{...} }
type VirtualServiceSpecTlsMatchArrayInput interface {
	pulumi.Input

	ToVirtualServiceSpecTlsMatchArrayOutput() VirtualServiceSpecTlsMatchArrayOutput
	ToVirtualServiceSpecTlsMatchArrayOutputWithContext(context.Context) VirtualServiceSpecTlsMatchArrayOutput
}

type VirtualServiceSpecTlsMatchArray []VirtualServiceSpecTlsMatchInput

func (VirtualServiceSpecTlsMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTlsMatch)(nil)).Elem()
}

func (i VirtualServiceSpecTlsMatchArray) ToVirtualServiceSpecTlsMatchArrayOutput() VirtualServiceSpecTlsMatchArrayOutput {
	return i.ToVirtualServiceSpecTlsMatchArrayOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTlsMatchArray) ToVirtualServiceSpecTlsMatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTlsMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsMatchArrayOutput)
}

type VirtualServiceSpecTlsMatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTlsMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTlsMatch)(nil)).Elem()
}

func (o VirtualServiceSpecTlsMatchOutput) ToVirtualServiceSpecTlsMatchOutput() VirtualServiceSpecTlsMatchOutput {
	return o
}

func (o VirtualServiceSpecTlsMatchOutput) ToVirtualServiceSpecTlsMatchOutputWithContext(ctx context.Context) VirtualServiceSpecTlsMatchOutput {
	return o
}

// IPv4 or IPv6 ip addresses of destination with optional subnet.
func (o VirtualServiceSpecTlsMatchOutput) DestinationSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsMatch) []string { return v.DestinationSubnets }).(pulumi.StringArrayOutput)
}

// Names of gateways where the rule should be applied.
func (o VirtualServiceSpecTlsMatchOutput) Gateways() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsMatch) []string { return v.Gateways }).(pulumi.StringArrayOutput)
}

// Specifies the port on the host that is being addressed.
func (o VirtualServiceSpecTlsMatchOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsMatch) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// SNI (server name indicator) to match on.
func (o VirtualServiceSpecTlsMatchOutput) SniHosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsMatch) []string { return v.SniHosts }).(pulumi.StringArrayOutput)
}

// One or more labels that constrain the applicability of a rule to workloads with the given labels.
func (o VirtualServiceSpecTlsMatchOutput) SourceLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsMatch) map[string]string { return v.SourceLabels }).(pulumi.StringMapOutput)
}

// Source namespace constraining the applicability of a rule to workloads in that namespace.
func (o VirtualServiceSpecTlsMatchOutput) SourceNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsMatch) *string { return v.SourceNamespace }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecTlsMatchArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTlsMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTlsMatch)(nil)).Elem()
}

func (o VirtualServiceSpecTlsMatchArrayOutput) ToVirtualServiceSpecTlsMatchArrayOutput() VirtualServiceSpecTlsMatchArrayOutput {
	return o
}

func (o VirtualServiceSpecTlsMatchArrayOutput) ToVirtualServiceSpecTlsMatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTlsMatchArrayOutput {
	return o
}

func (o VirtualServiceSpecTlsMatchArrayOutput) Index(i pulumi.IntInput) VirtualServiceSpecTlsMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceSpecTlsMatch {
		return vs[0].([]VirtualServiceSpecTlsMatch)[vs[1].(int)]
	}).(VirtualServiceSpecTlsMatchOutput)
}

type VirtualServiceSpecTlsMatchPatch struct {
	// IPv4 or IPv6 ip addresses of destination with optional subnet.
	DestinationSubnets []string `pulumi:"destinationSubnets"`
	// Names of gateways where the rule should be applied.
	Gateways []string `pulumi:"gateways"`
	// Specifies the port on the host that is being addressed.
	Port *int `pulumi:"port"`
	// SNI (server name indicator) to match on.
	SniHosts []string `pulumi:"sniHosts"`
	// One or more labels that constrain the applicability of a rule to workloads with the given labels.
	SourceLabels map[string]string `pulumi:"sourceLabels"`
	// Source namespace constraining the applicability of a rule to workloads in that namespace.
	SourceNamespace *string `pulumi:"sourceNamespace"`
}

// VirtualServiceSpecTlsMatchPatchInput is an input type that accepts VirtualServiceSpecTlsMatchPatchArgs and VirtualServiceSpecTlsMatchPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTlsMatchPatchInput` via:
//
//	VirtualServiceSpecTlsMatchPatchArgs{...}
type VirtualServiceSpecTlsMatchPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecTlsMatchPatchOutput() VirtualServiceSpecTlsMatchPatchOutput
	ToVirtualServiceSpecTlsMatchPatchOutputWithContext(context.Context) VirtualServiceSpecTlsMatchPatchOutput
}

type VirtualServiceSpecTlsMatchPatchArgs struct {
	// IPv4 or IPv6 ip addresses of destination with optional subnet.
	DestinationSubnets pulumi.StringArrayInput `pulumi:"destinationSubnets"`
	// Names of gateways where the rule should be applied.
	Gateways pulumi.StringArrayInput `pulumi:"gateways"`
	// Specifies the port on the host that is being addressed.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// SNI (server name indicator) to match on.
	SniHosts pulumi.StringArrayInput `pulumi:"sniHosts"`
	// One or more labels that constrain the applicability of a rule to workloads with the given labels.
	SourceLabels pulumi.StringMapInput `pulumi:"sourceLabels"`
	// Source namespace constraining the applicability of a rule to workloads in that namespace.
	SourceNamespace pulumi.StringPtrInput `pulumi:"sourceNamespace"`
}

func (VirtualServiceSpecTlsMatchPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTlsMatchPatch)(nil)).Elem()
}

func (i VirtualServiceSpecTlsMatchPatchArgs) ToVirtualServiceSpecTlsMatchPatchOutput() VirtualServiceSpecTlsMatchPatchOutput {
	return i.ToVirtualServiceSpecTlsMatchPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTlsMatchPatchArgs) ToVirtualServiceSpecTlsMatchPatchOutputWithContext(ctx context.Context) VirtualServiceSpecTlsMatchPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsMatchPatchOutput)
}

// VirtualServiceSpecTlsMatchPatchArrayInput is an input type that accepts VirtualServiceSpecTlsMatchPatchArray and VirtualServiceSpecTlsMatchPatchArrayOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTlsMatchPatchArrayInput` via:
//
//	VirtualServiceSpecTlsMatchPatchArray{ VirtualServiceSpecTlsMatchPatchArgs{...} }
type VirtualServiceSpecTlsMatchPatchArrayInput interface {
	pulumi.Input

	ToVirtualServiceSpecTlsMatchPatchArrayOutput() VirtualServiceSpecTlsMatchPatchArrayOutput
	ToVirtualServiceSpecTlsMatchPatchArrayOutputWithContext(context.Context) VirtualServiceSpecTlsMatchPatchArrayOutput
}

type VirtualServiceSpecTlsMatchPatchArray []VirtualServiceSpecTlsMatchPatchInput

func (VirtualServiceSpecTlsMatchPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTlsMatchPatch)(nil)).Elem()
}

func (i VirtualServiceSpecTlsMatchPatchArray) ToVirtualServiceSpecTlsMatchPatchArrayOutput() VirtualServiceSpecTlsMatchPatchArrayOutput {
	return i.ToVirtualServiceSpecTlsMatchPatchArrayOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTlsMatchPatchArray) ToVirtualServiceSpecTlsMatchPatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTlsMatchPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsMatchPatchArrayOutput)
}

type VirtualServiceSpecTlsMatchPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTlsMatchPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTlsMatchPatch)(nil)).Elem()
}

func (o VirtualServiceSpecTlsMatchPatchOutput) ToVirtualServiceSpecTlsMatchPatchOutput() VirtualServiceSpecTlsMatchPatchOutput {
	return o
}

func (o VirtualServiceSpecTlsMatchPatchOutput) ToVirtualServiceSpecTlsMatchPatchOutputWithContext(ctx context.Context) VirtualServiceSpecTlsMatchPatchOutput {
	return o
}

// IPv4 or IPv6 ip addresses of destination with optional subnet.
func (o VirtualServiceSpecTlsMatchPatchOutput) DestinationSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsMatchPatch) []string { return v.DestinationSubnets }).(pulumi.StringArrayOutput)
}

// Names of gateways where the rule should be applied.
func (o VirtualServiceSpecTlsMatchPatchOutput) Gateways() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsMatchPatch) []string { return v.Gateways }).(pulumi.StringArrayOutput)
}

// Specifies the port on the host that is being addressed.
func (o VirtualServiceSpecTlsMatchPatchOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsMatchPatch) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// SNI (server name indicator) to match on.
func (o VirtualServiceSpecTlsMatchPatchOutput) SniHosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsMatchPatch) []string { return v.SniHosts }).(pulumi.StringArrayOutput)
}

// One or more labels that constrain the applicability of a rule to workloads with the given labels.
func (o VirtualServiceSpecTlsMatchPatchOutput) SourceLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsMatchPatch) map[string]string { return v.SourceLabels }).(pulumi.StringMapOutput)
}

// Source namespace constraining the applicability of a rule to workloads in that namespace.
func (o VirtualServiceSpecTlsMatchPatchOutput) SourceNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsMatchPatch) *string { return v.SourceNamespace }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecTlsMatchPatchArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTlsMatchPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTlsMatchPatch)(nil)).Elem()
}

func (o VirtualServiceSpecTlsMatchPatchArrayOutput) ToVirtualServiceSpecTlsMatchPatchArrayOutput() VirtualServiceSpecTlsMatchPatchArrayOutput {
	return o
}

func (o VirtualServiceSpecTlsMatchPatchArrayOutput) ToVirtualServiceSpecTlsMatchPatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTlsMatchPatchArrayOutput {
	return o
}

func (o VirtualServiceSpecTlsMatchPatchArrayOutput) Index(i pulumi.IntInput) VirtualServiceSpecTlsMatchPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceSpecTlsMatchPatch {
		return vs[0].([]VirtualServiceSpecTlsMatchPatch)[vs[1].(int)]
	}).(VirtualServiceSpecTlsMatchPatchOutput)
}

type VirtualServiceSpecTlsPatch struct {
	// Match conditions to be satisfied for the rule to be activated.
	Match []VirtualServiceSpecTlsMatchPatch `pulumi:"match"`
	// The destination to which the connection should be forwarded to.
	Route []VirtualServiceSpecTlsRoutePatch `pulumi:"route"`
}

// VirtualServiceSpecTlsPatchInput is an input type that accepts VirtualServiceSpecTlsPatchArgs and VirtualServiceSpecTlsPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTlsPatchInput` via:
//
//	VirtualServiceSpecTlsPatchArgs{...}
type VirtualServiceSpecTlsPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecTlsPatchOutput() VirtualServiceSpecTlsPatchOutput
	ToVirtualServiceSpecTlsPatchOutputWithContext(context.Context) VirtualServiceSpecTlsPatchOutput
}

type VirtualServiceSpecTlsPatchArgs struct {
	// Match conditions to be satisfied for the rule to be activated.
	Match VirtualServiceSpecTlsMatchPatchArrayInput `pulumi:"match"`
	// The destination to which the connection should be forwarded to.
	Route VirtualServiceSpecTlsRoutePatchArrayInput `pulumi:"route"`
}

func (VirtualServiceSpecTlsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTlsPatch)(nil)).Elem()
}

func (i VirtualServiceSpecTlsPatchArgs) ToVirtualServiceSpecTlsPatchOutput() VirtualServiceSpecTlsPatchOutput {
	return i.ToVirtualServiceSpecTlsPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTlsPatchArgs) ToVirtualServiceSpecTlsPatchOutputWithContext(ctx context.Context) VirtualServiceSpecTlsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsPatchOutput)
}

// VirtualServiceSpecTlsPatchArrayInput is an input type that accepts VirtualServiceSpecTlsPatchArray and VirtualServiceSpecTlsPatchArrayOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTlsPatchArrayInput` via:
//
//	VirtualServiceSpecTlsPatchArray{ VirtualServiceSpecTlsPatchArgs{...} }
type VirtualServiceSpecTlsPatchArrayInput interface {
	pulumi.Input

	ToVirtualServiceSpecTlsPatchArrayOutput() VirtualServiceSpecTlsPatchArrayOutput
	ToVirtualServiceSpecTlsPatchArrayOutputWithContext(context.Context) VirtualServiceSpecTlsPatchArrayOutput
}

type VirtualServiceSpecTlsPatchArray []VirtualServiceSpecTlsPatchInput

func (VirtualServiceSpecTlsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTlsPatch)(nil)).Elem()
}

func (i VirtualServiceSpecTlsPatchArray) ToVirtualServiceSpecTlsPatchArrayOutput() VirtualServiceSpecTlsPatchArrayOutput {
	return i.ToVirtualServiceSpecTlsPatchArrayOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTlsPatchArray) ToVirtualServiceSpecTlsPatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTlsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsPatchArrayOutput)
}

type VirtualServiceSpecTlsPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTlsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTlsPatch)(nil)).Elem()
}

func (o VirtualServiceSpecTlsPatchOutput) ToVirtualServiceSpecTlsPatchOutput() VirtualServiceSpecTlsPatchOutput {
	return o
}

func (o VirtualServiceSpecTlsPatchOutput) ToVirtualServiceSpecTlsPatchOutputWithContext(ctx context.Context) VirtualServiceSpecTlsPatchOutput {
	return o
}

// Match conditions to be satisfied for the rule to be activated.
func (o VirtualServiceSpecTlsPatchOutput) Match() VirtualServiceSpecTlsMatchPatchArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsPatch) []VirtualServiceSpecTlsMatchPatch { return v.Match }).(VirtualServiceSpecTlsMatchPatchArrayOutput)
}

// The destination to which the connection should be forwarded to.
func (o VirtualServiceSpecTlsPatchOutput) Route() VirtualServiceSpecTlsRoutePatchArrayOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsPatch) []VirtualServiceSpecTlsRoutePatch { return v.Route }).(VirtualServiceSpecTlsRoutePatchArrayOutput)
}

type VirtualServiceSpecTlsPatchArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTlsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTlsPatch)(nil)).Elem()
}

func (o VirtualServiceSpecTlsPatchArrayOutput) ToVirtualServiceSpecTlsPatchArrayOutput() VirtualServiceSpecTlsPatchArrayOutput {
	return o
}

func (o VirtualServiceSpecTlsPatchArrayOutput) ToVirtualServiceSpecTlsPatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTlsPatchArrayOutput {
	return o
}

func (o VirtualServiceSpecTlsPatchArrayOutput) Index(i pulumi.IntInput) VirtualServiceSpecTlsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceSpecTlsPatch {
		return vs[0].([]VirtualServiceSpecTlsPatch)[vs[1].(int)]
	}).(VirtualServiceSpecTlsPatchOutput)
}

type VirtualServiceSpecTlsRoute struct {
	Destination *VirtualServiceSpecTlsRouteDestination `pulumi:"destination"`
	// Weight specifies the relative proportion of traffic to be forwarded to the destination.
	Weight *int `pulumi:"weight"`
}

// VirtualServiceSpecTlsRouteInput is an input type that accepts VirtualServiceSpecTlsRouteArgs and VirtualServiceSpecTlsRouteOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTlsRouteInput` via:
//
//	VirtualServiceSpecTlsRouteArgs{...}
type VirtualServiceSpecTlsRouteInput interface {
	pulumi.Input

	ToVirtualServiceSpecTlsRouteOutput() VirtualServiceSpecTlsRouteOutput
	ToVirtualServiceSpecTlsRouteOutputWithContext(context.Context) VirtualServiceSpecTlsRouteOutput
}

type VirtualServiceSpecTlsRouteArgs struct {
	Destination VirtualServiceSpecTlsRouteDestinationPtrInput `pulumi:"destination"`
	// Weight specifies the relative proportion of traffic to be forwarded to the destination.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (VirtualServiceSpecTlsRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTlsRoute)(nil)).Elem()
}

func (i VirtualServiceSpecTlsRouteArgs) ToVirtualServiceSpecTlsRouteOutput() VirtualServiceSpecTlsRouteOutput {
	return i.ToVirtualServiceSpecTlsRouteOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTlsRouteArgs) ToVirtualServiceSpecTlsRouteOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsRouteOutput)
}

// VirtualServiceSpecTlsRouteArrayInput is an input type that accepts VirtualServiceSpecTlsRouteArray and VirtualServiceSpecTlsRouteArrayOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTlsRouteArrayInput` via:
//
//	VirtualServiceSpecTlsRouteArray{ VirtualServiceSpecTlsRouteArgs{...} }
type VirtualServiceSpecTlsRouteArrayInput interface {
	pulumi.Input

	ToVirtualServiceSpecTlsRouteArrayOutput() VirtualServiceSpecTlsRouteArrayOutput
	ToVirtualServiceSpecTlsRouteArrayOutputWithContext(context.Context) VirtualServiceSpecTlsRouteArrayOutput
}

type VirtualServiceSpecTlsRouteArray []VirtualServiceSpecTlsRouteInput

func (VirtualServiceSpecTlsRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTlsRoute)(nil)).Elem()
}

func (i VirtualServiceSpecTlsRouteArray) ToVirtualServiceSpecTlsRouteArrayOutput() VirtualServiceSpecTlsRouteArrayOutput {
	return i.ToVirtualServiceSpecTlsRouteArrayOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTlsRouteArray) ToVirtualServiceSpecTlsRouteArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsRouteArrayOutput)
}

type VirtualServiceSpecTlsRouteOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTlsRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTlsRoute)(nil)).Elem()
}

func (o VirtualServiceSpecTlsRouteOutput) ToVirtualServiceSpecTlsRouteOutput() VirtualServiceSpecTlsRouteOutput {
	return o
}

func (o VirtualServiceSpecTlsRouteOutput) ToVirtualServiceSpecTlsRouteOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteOutput {
	return o
}

func (o VirtualServiceSpecTlsRouteOutput) Destination() VirtualServiceSpecTlsRouteDestinationPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsRoute) *VirtualServiceSpecTlsRouteDestination { return v.Destination }).(VirtualServiceSpecTlsRouteDestinationPtrOutput)
}

// Weight specifies the relative proportion of traffic to be forwarded to the destination.
func (o VirtualServiceSpecTlsRouteOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsRoute) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type VirtualServiceSpecTlsRouteArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTlsRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTlsRoute)(nil)).Elem()
}

func (o VirtualServiceSpecTlsRouteArrayOutput) ToVirtualServiceSpecTlsRouteArrayOutput() VirtualServiceSpecTlsRouteArrayOutput {
	return o
}

func (o VirtualServiceSpecTlsRouteArrayOutput) ToVirtualServiceSpecTlsRouteArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteArrayOutput {
	return o
}

func (o VirtualServiceSpecTlsRouteArrayOutput) Index(i pulumi.IntInput) VirtualServiceSpecTlsRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceSpecTlsRoute {
		return vs[0].([]VirtualServiceSpecTlsRoute)[vs[1].(int)]
	}).(VirtualServiceSpecTlsRouteOutput)
}

// Destination uniquely identifies the instances of a service to which the request/connection should be forwarded to.
type VirtualServiceSpecTlsRouteDestination struct {
	// The name of a service from the service registry.
	Host *string                                    `pulumi:"host"`
	Port *VirtualServiceSpecTlsRouteDestinationPort `pulumi:"port"`
	// The name of a subset within the service.
	Subset *string `pulumi:"subset"`
}

// VirtualServiceSpecTlsRouteDestinationInput is an input type that accepts VirtualServiceSpecTlsRouteDestinationArgs and VirtualServiceSpecTlsRouteDestinationOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTlsRouteDestinationInput` via:
//
//	VirtualServiceSpecTlsRouteDestinationArgs{...}
type VirtualServiceSpecTlsRouteDestinationInput interface {
	pulumi.Input

	ToVirtualServiceSpecTlsRouteDestinationOutput() VirtualServiceSpecTlsRouteDestinationOutput
	ToVirtualServiceSpecTlsRouteDestinationOutputWithContext(context.Context) VirtualServiceSpecTlsRouteDestinationOutput
}

// Destination uniquely identifies the instances of a service to which the request/connection should be forwarded to.
type VirtualServiceSpecTlsRouteDestinationArgs struct {
	// The name of a service from the service registry.
	Host pulumi.StringPtrInput                             `pulumi:"host"`
	Port VirtualServiceSpecTlsRouteDestinationPortPtrInput `pulumi:"port"`
	// The name of a subset within the service.
	Subset pulumi.StringPtrInput `pulumi:"subset"`
}

func (VirtualServiceSpecTlsRouteDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTlsRouteDestination)(nil)).Elem()
}

func (i VirtualServiceSpecTlsRouteDestinationArgs) ToVirtualServiceSpecTlsRouteDestinationOutput() VirtualServiceSpecTlsRouteDestinationOutput {
	return i.ToVirtualServiceSpecTlsRouteDestinationOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTlsRouteDestinationArgs) ToVirtualServiceSpecTlsRouteDestinationOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsRouteDestinationOutput)
}

func (i VirtualServiceSpecTlsRouteDestinationArgs) ToVirtualServiceSpecTlsRouteDestinationPtrOutput() VirtualServiceSpecTlsRouteDestinationPtrOutput {
	return i.ToVirtualServiceSpecTlsRouteDestinationPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTlsRouteDestinationArgs) ToVirtualServiceSpecTlsRouteDestinationPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsRouteDestinationOutput).ToVirtualServiceSpecTlsRouteDestinationPtrOutputWithContext(ctx)
}

// VirtualServiceSpecTlsRouteDestinationPtrInput is an input type that accepts VirtualServiceSpecTlsRouteDestinationArgs, VirtualServiceSpecTlsRouteDestinationPtr and VirtualServiceSpecTlsRouteDestinationPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTlsRouteDestinationPtrInput` via:
//
//	        VirtualServiceSpecTlsRouteDestinationArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecTlsRouteDestinationPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecTlsRouteDestinationPtrOutput() VirtualServiceSpecTlsRouteDestinationPtrOutput
	ToVirtualServiceSpecTlsRouteDestinationPtrOutputWithContext(context.Context) VirtualServiceSpecTlsRouteDestinationPtrOutput
}

type virtualServiceSpecTlsRouteDestinationPtrType VirtualServiceSpecTlsRouteDestinationArgs

func VirtualServiceSpecTlsRouteDestinationPtr(v *VirtualServiceSpecTlsRouteDestinationArgs) VirtualServiceSpecTlsRouteDestinationPtrInput {
	return (*virtualServiceSpecTlsRouteDestinationPtrType)(v)
}

func (*virtualServiceSpecTlsRouteDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecTlsRouteDestination)(nil)).Elem()
}

func (i *virtualServiceSpecTlsRouteDestinationPtrType) ToVirtualServiceSpecTlsRouteDestinationPtrOutput() VirtualServiceSpecTlsRouteDestinationPtrOutput {
	return i.ToVirtualServiceSpecTlsRouteDestinationPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecTlsRouteDestinationPtrType) ToVirtualServiceSpecTlsRouteDestinationPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsRouteDestinationPtrOutput)
}

// Destination uniquely identifies the instances of a service to which the request/connection should be forwarded to.
type VirtualServiceSpecTlsRouteDestinationOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTlsRouteDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTlsRouteDestination)(nil)).Elem()
}

func (o VirtualServiceSpecTlsRouteDestinationOutput) ToVirtualServiceSpecTlsRouteDestinationOutput() VirtualServiceSpecTlsRouteDestinationOutput {
	return o
}

func (o VirtualServiceSpecTlsRouteDestinationOutput) ToVirtualServiceSpecTlsRouteDestinationOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationOutput {
	return o
}

func (o VirtualServiceSpecTlsRouteDestinationOutput) ToVirtualServiceSpecTlsRouteDestinationPtrOutput() VirtualServiceSpecTlsRouteDestinationPtrOutput {
	return o.ToVirtualServiceSpecTlsRouteDestinationPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecTlsRouteDestinationOutput) ToVirtualServiceSpecTlsRouteDestinationPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecTlsRouteDestination) *VirtualServiceSpecTlsRouteDestination {
		return &v
	}).(VirtualServiceSpecTlsRouteDestinationPtrOutput)
}

// The name of a service from the service registry.
func (o VirtualServiceSpecTlsRouteDestinationOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsRouteDestination) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecTlsRouteDestinationOutput) Port() VirtualServiceSpecTlsRouteDestinationPortPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsRouteDestination) *VirtualServiceSpecTlsRouteDestinationPort {
		return v.Port
	}).(VirtualServiceSpecTlsRouteDestinationPortPtrOutput)
}

// The name of a subset within the service.
func (o VirtualServiceSpecTlsRouteDestinationOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsRouteDestination) *string { return v.Subset }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecTlsRouteDestinationPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTlsRouteDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecTlsRouteDestination)(nil)).Elem()
}

func (o VirtualServiceSpecTlsRouteDestinationPtrOutput) ToVirtualServiceSpecTlsRouteDestinationPtrOutput() VirtualServiceSpecTlsRouteDestinationPtrOutput {
	return o
}

func (o VirtualServiceSpecTlsRouteDestinationPtrOutput) ToVirtualServiceSpecTlsRouteDestinationPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationPtrOutput {
	return o
}

func (o VirtualServiceSpecTlsRouteDestinationPtrOutput) Elem() VirtualServiceSpecTlsRouteDestinationOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTlsRouteDestination) VirtualServiceSpecTlsRouteDestination {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecTlsRouteDestination
		return ret
	}).(VirtualServiceSpecTlsRouteDestinationOutput)
}

// The name of a service from the service registry.
func (o VirtualServiceSpecTlsRouteDestinationPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTlsRouteDestination) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecTlsRouteDestinationPtrOutput) Port() VirtualServiceSpecTlsRouteDestinationPortPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTlsRouteDestination) *VirtualServiceSpecTlsRouteDestinationPort {
		if v == nil {
			return nil
		}
		return v.Port
	}).(VirtualServiceSpecTlsRouteDestinationPortPtrOutput)
}

// The name of a subset within the service.
func (o VirtualServiceSpecTlsRouteDestinationPtrOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTlsRouteDestination) *string {
		if v == nil {
			return nil
		}
		return v.Subset
	}).(pulumi.StringPtrOutput)
}

// Destination uniquely identifies the instances of a service to which the request/connection should be forwarded to.
type VirtualServiceSpecTlsRouteDestinationPatch struct {
	// The name of a service from the service registry.
	Host *string                                         `pulumi:"host"`
	Port *VirtualServiceSpecTlsRouteDestinationPortPatch `pulumi:"port"`
	// The name of a subset within the service.
	Subset *string `pulumi:"subset"`
}

// VirtualServiceSpecTlsRouteDestinationPatchInput is an input type that accepts VirtualServiceSpecTlsRouteDestinationPatchArgs and VirtualServiceSpecTlsRouteDestinationPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTlsRouteDestinationPatchInput` via:
//
//	VirtualServiceSpecTlsRouteDestinationPatchArgs{...}
type VirtualServiceSpecTlsRouteDestinationPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecTlsRouteDestinationPatchOutput() VirtualServiceSpecTlsRouteDestinationPatchOutput
	ToVirtualServiceSpecTlsRouteDestinationPatchOutputWithContext(context.Context) VirtualServiceSpecTlsRouteDestinationPatchOutput
}

// Destination uniquely identifies the instances of a service to which the request/connection should be forwarded to.
type VirtualServiceSpecTlsRouteDestinationPatchArgs struct {
	// The name of a service from the service registry.
	Host pulumi.StringPtrInput                                  `pulumi:"host"`
	Port VirtualServiceSpecTlsRouteDestinationPortPatchPtrInput `pulumi:"port"`
	// The name of a subset within the service.
	Subset pulumi.StringPtrInput `pulumi:"subset"`
}

func (VirtualServiceSpecTlsRouteDestinationPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTlsRouteDestinationPatch)(nil)).Elem()
}

func (i VirtualServiceSpecTlsRouteDestinationPatchArgs) ToVirtualServiceSpecTlsRouteDestinationPatchOutput() VirtualServiceSpecTlsRouteDestinationPatchOutput {
	return i.ToVirtualServiceSpecTlsRouteDestinationPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTlsRouteDestinationPatchArgs) ToVirtualServiceSpecTlsRouteDestinationPatchOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsRouteDestinationPatchOutput)
}

func (i VirtualServiceSpecTlsRouteDestinationPatchArgs) ToVirtualServiceSpecTlsRouteDestinationPatchPtrOutput() VirtualServiceSpecTlsRouteDestinationPatchPtrOutput {
	return i.ToVirtualServiceSpecTlsRouteDestinationPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTlsRouteDestinationPatchArgs) ToVirtualServiceSpecTlsRouteDestinationPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsRouteDestinationPatchOutput).ToVirtualServiceSpecTlsRouteDestinationPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecTlsRouteDestinationPatchPtrInput is an input type that accepts VirtualServiceSpecTlsRouteDestinationPatchArgs, VirtualServiceSpecTlsRouteDestinationPatchPtr and VirtualServiceSpecTlsRouteDestinationPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTlsRouteDestinationPatchPtrInput` via:
//
//	        VirtualServiceSpecTlsRouteDestinationPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecTlsRouteDestinationPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecTlsRouteDestinationPatchPtrOutput() VirtualServiceSpecTlsRouteDestinationPatchPtrOutput
	ToVirtualServiceSpecTlsRouteDestinationPatchPtrOutputWithContext(context.Context) VirtualServiceSpecTlsRouteDestinationPatchPtrOutput
}

type virtualServiceSpecTlsRouteDestinationPatchPtrType VirtualServiceSpecTlsRouteDestinationPatchArgs

func VirtualServiceSpecTlsRouteDestinationPatchPtr(v *VirtualServiceSpecTlsRouteDestinationPatchArgs) VirtualServiceSpecTlsRouteDestinationPatchPtrInput {
	return (*virtualServiceSpecTlsRouteDestinationPatchPtrType)(v)
}

func (*virtualServiceSpecTlsRouteDestinationPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecTlsRouteDestinationPatch)(nil)).Elem()
}

func (i *virtualServiceSpecTlsRouteDestinationPatchPtrType) ToVirtualServiceSpecTlsRouteDestinationPatchPtrOutput() VirtualServiceSpecTlsRouteDestinationPatchPtrOutput {
	return i.ToVirtualServiceSpecTlsRouteDestinationPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecTlsRouteDestinationPatchPtrType) ToVirtualServiceSpecTlsRouteDestinationPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsRouteDestinationPatchPtrOutput)
}

// Destination uniquely identifies the instances of a service to which the request/connection should be forwarded to.
type VirtualServiceSpecTlsRouteDestinationPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTlsRouteDestinationPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTlsRouteDestinationPatch)(nil)).Elem()
}

func (o VirtualServiceSpecTlsRouteDestinationPatchOutput) ToVirtualServiceSpecTlsRouteDestinationPatchOutput() VirtualServiceSpecTlsRouteDestinationPatchOutput {
	return o
}

func (o VirtualServiceSpecTlsRouteDestinationPatchOutput) ToVirtualServiceSpecTlsRouteDestinationPatchOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationPatchOutput {
	return o
}

func (o VirtualServiceSpecTlsRouteDestinationPatchOutput) ToVirtualServiceSpecTlsRouteDestinationPatchPtrOutput() VirtualServiceSpecTlsRouteDestinationPatchPtrOutput {
	return o.ToVirtualServiceSpecTlsRouteDestinationPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecTlsRouteDestinationPatchOutput) ToVirtualServiceSpecTlsRouteDestinationPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecTlsRouteDestinationPatch) *VirtualServiceSpecTlsRouteDestinationPatch {
		return &v
	}).(VirtualServiceSpecTlsRouteDestinationPatchPtrOutput)
}

// The name of a service from the service registry.
func (o VirtualServiceSpecTlsRouteDestinationPatchOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsRouteDestinationPatch) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecTlsRouteDestinationPatchOutput) Port() VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsRouteDestinationPatch) *VirtualServiceSpecTlsRouteDestinationPortPatch {
		return v.Port
	}).(VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput)
}

// The name of a subset within the service.
func (o VirtualServiceSpecTlsRouteDestinationPatchOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsRouteDestinationPatch) *string { return v.Subset }).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecTlsRouteDestinationPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTlsRouteDestinationPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecTlsRouteDestinationPatch)(nil)).Elem()
}

func (o VirtualServiceSpecTlsRouteDestinationPatchPtrOutput) ToVirtualServiceSpecTlsRouteDestinationPatchPtrOutput() VirtualServiceSpecTlsRouteDestinationPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecTlsRouteDestinationPatchPtrOutput) ToVirtualServiceSpecTlsRouteDestinationPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecTlsRouteDestinationPatchPtrOutput) Elem() VirtualServiceSpecTlsRouteDestinationPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTlsRouteDestinationPatch) VirtualServiceSpecTlsRouteDestinationPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecTlsRouteDestinationPatch
		return ret
	}).(VirtualServiceSpecTlsRouteDestinationPatchOutput)
}

// The name of a service from the service registry.
func (o VirtualServiceSpecTlsRouteDestinationPatchPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTlsRouteDestinationPatch) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o VirtualServiceSpecTlsRouteDestinationPatchPtrOutput) Port() VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTlsRouteDestinationPatch) *VirtualServiceSpecTlsRouteDestinationPortPatch {
		if v == nil {
			return nil
		}
		return v.Port
	}).(VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput)
}

// The name of a subset within the service.
func (o VirtualServiceSpecTlsRouteDestinationPatchPtrOutput) Subset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTlsRouteDestinationPatch) *string {
		if v == nil {
			return nil
		}
		return v.Subset
	}).(pulumi.StringPtrOutput)
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecTlsRouteDestinationPort struct {
	Number *int `pulumi:"number"`
}

// VirtualServiceSpecTlsRouteDestinationPortInput is an input type that accepts VirtualServiceSpecTlsRouteDestinationPortArgs and VirtualServiceSpecTlsRouteDestinationPortOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTlsRouteDestinationPortInput` via:
//
//	VirtualServiceSpecTlsRouteDestinationPortArgs{...}
type VirtualServiceSpecTlsRouteDestinationPortInput interface {
	pulumi.Input

	ToVirtualServiceSpecTlsRouteDestinationPortOutput() VirtualServiceSpecTlsRouteDestinationPortOutput
	ToVirtualServiceSpecTlsRouteDestinationPortOutputWithContext(context.Context) VirtualServiceSpecTlsRouteDestinationPortOutput
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecTlsRouteDestinationPortArgs struct {
	Number pulumi.IntPtrInput `pulumi:"number"`
}

func (VirtualServiceSpecTlsRouteDestinationPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTlsRouteDestinationPort)(nil)).Elem()
}

func (i VirtualServiceSpecTlsRouteDestinationPortArgs) ToVirtualServiceSpecTlsRouteDestinationPortOutput() VirtualServiceSpecTlsRouteDestinationPortOutput {
	return i.ToVirtualServiceSpecTlsRouteDestinationPortOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTlsRouteDestinationPortArgs) ToVirtualServiceSpecTlsRouteDestinationPortOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsRouteDestinationPortOutput)
}

func (i VirtualServiceSpecTlsRouteDestinationPortArgs) ToVirtualServiceSpecTlsRouteDestinationPortPtrOutput() VirtualServiceSpecTlsRouteDestinationPortPtrOutput {
	return i.ToVirtualServiceSpecTlsRouteDestinationPortPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTlsRouteDestinationPortArgs) ToVirtualServiceSpecTlsRouteDestinationPortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsRouteDestinationPortOutput).ToVirtualServiceSpecTlsRouteDestinationPortPtrOutputWithContext(ctx)
}

// VirtualServiceSpecTlsRouteDestinationPortPtrInput is an input type that accepts VirtualServiceSpecTlsRouteDestinationPortArgs, VirtualServiceSpecTlsRouteDestinationPortPtr and VirtualServiceSpecTlsRouteDestinationPortPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTlsRouteDestinationPortPtrInput` via:
//
//	        VirtualServiceSpecTlsRouteDestinationPortArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecTlsRouteDestinationPortPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecTlsRouteDestinationPortPtrOutput() VirtualServiceSpecTlsRouteDestinationPortPtrOutput
	ToVirtualServiceSpecTlsRouteDestinationPortPtrOutputWithContext(context.Context) VirtualServiceSpecTlsRouteDestinationPortPtrOutput
}

type virtualServiceSpecTlsRouteDestinationPortPtrType VirtualServiceSpecTlsRouteDestinationPortArgs

func VirtualServiceSpecTlsRouteDestinationPortPtr(v *VirtualServiceSpecTlsRouteDestinationPortArgs) VirtualServiceSpecTlsRouteDestinationPortPtrInput {
	return (*virtualServiceSpecTlsRouteDestinationPortPtrType)(v)
}

func (*virtualServiceSpecTlsRouteDestinationPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecTlsRouteDestinationPort)(nil)).Elem()
}

func (i *virtualServiceSpecTlsRouteDestinationPortPtrType) ToVirtualServiceSpecTlsRouteDestinationPortPtrOutput() VirtualServiceSpecTlsRouteDestinationPortPtrOutput {
	return i.ToVirtualServiceSpecTlsRouteDestinationPortPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecTlsRouteDestinationPortPtrType) ToVirtualServiceSpecTlsRouteDestinationPortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsRouteDestinationPortPtrOutput)
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecTlsRouteDestinationPortOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTlsRouteDestinationPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTlsRouteDestinationPort)(nil)).Elem()
}

func (o VirtualServiceSpecTlsRouteDestinationPortOutput) ToVirtualServiceSpecTlsRouteDestinationPortOutput() VirtualServiceSpecTlsRouteDestinationPortOutput {
	return o
}

func (o VirtualServiceSpecTlsRouteDestinationPortOutput) ToVirtualServiceSpecTlsRouteDestinationPortOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationPortOutput {
	return o
}

func (o VirtualServiceSpecTlsRouteDestinationPortOutput) ToVirtualServiceSpecTlsRouteDestinationPortPtrOutput() VirtualServiceSpecTlsRouteDestinationPortPtrOutput {
	return o.ToVirtualServiceSpecTlsRouteDestinationPortPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecTlsRouteDestinationPortOutput) ToVirtualServiceSpecTlsRouteDestinationPortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationPortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecTlsRouteDestinationPort) *VirtualServiceSpecTlsRouteDestinationPort {
		return &v
	}).(VirtualServiceSpecTlsRouteDestinationPortPtrOutput)
}

func (o VirtualServiceSpecTlsRouteDestinationPortOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsRouteDestinationPort) *int { return v.Number }).(pulumi.IntPtrOutput)
}

type VirtualServiceSpecTlsRouteDestinationPortPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTlsRouteDestinationPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecTlsRouteDestinationPort)(nil)).Elem()
}

func (o VirtualServiceSpecTlsRouteDestinationPortPtrOutput) ToVirtualServiceSpecTlsRouteDestinationPortPtrOutput() VirtualServiceSpecTlsRouteDestinationPortPtrOutput {
	return o
}

func (o VirtualServiceSpecTlsRouteDestinationPortPtrOutput) ToVirtualServiceSpecTlsRouteDestinationPortPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationPortPtrOutput {
	return o
}

func (o VirtualServiceSpecTlsRouteDestinationPortPtrOutput) Elem() VirtualServiceSpecTlsRouteDestinationPortOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTlsRouteDestinationPort) VirtualServiceSpecTlsRouteDestinationPort {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecTlsRouteDestinationPort
		return ret
	}).(VirtualServiceSpecTlsRouteDestinationPortOutput)
}

func (o VirtualServiceSpecTlsRouteDestinationPortPtrOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTlsRouteDestinationPort) *int {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.IntPtrOutput)
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecTlsRouteDestinationPortPatch struct {
	Number *int `pulumi:"number"`
}

// VirtualServiceSpecTlsRouteDestinationPortPatchInput is an input type that accepts VirtualServiceSpecTlsRouteDestinationPortPatchArgs and VirtualServiceSpecTlsRouteDestinationPortPatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTlsRouteDestinationPortPatchInput` via:
//
//	VirtualServiceSpecTlsRouteDestinationPortPatchArgs{...}
type VirtualServiceSpecTlsRouteDestinationPortPatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecTlsRouteDestinationPortPatchOutput() VirtualServiceSpecTlsRouteDestinationPortPatchOutput
	ToVirtualServiceSpecTlsRouteDestinationPortPatchOutputWithContext(context.Context) VirtualServiceSpecTlsRouteDestinationPortPatchOutput
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecTlsRouteDestinationPortPatchArgs struct {
	Number pulumi.IntPtrInput `pulumi:"number"`
}

func (VirtualServiceSpecTlsRouteDestinationPortPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTlsRouteDestinationPortPatch)(nil)).Elem()
}

func (i VirtualServiceSpecTlsRouteDestinationPortPatchArgs) ToVirtualServiceSpecTlsRouteDestinationPortPatchOutput() VirtualServiceSpecTlsRouteDestinationPortPatchOutput {
	return i.ToVirtualServiceSpecTlsRouteDestinationPortPatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTlsRouteDestinationPortPatchArgs) ToVirtualServiceSpecTlsRouteDestinationPortPatchOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationPortPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsRouteDestinationPortPatchOutput)
}

func (i VirtualServiceSpecTlsRouteDestinationPortPatchArgs) ToVirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput() VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput {
	return i.ToVirtualServiceSpecTlsRouteDestinationPortPatchPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTlsRouteDestinationPortPatchArgs) ToVirtualServiceSpecTlsRouteDestinationPortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsRouteDestinationPortPatchOutput).ToVirtualServiceSpecTlsRouteDestinationPortPatchPtrOutputWithContext(ctx)
}

// VirtualServiceSpecTlsRouteDestinationPortPatchPtrInput is an input type that accepts VirtualServiceSpecTlsRouteDestinationPortPatchArgs, VirtualServiceSpecTlsRouteDestinationPortPatchPtr and VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTlsRouteDestinationPortPatchPtrInput` via:
//
//	        VirtualServiceSpecTlsRouteDestinationPortPatchArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecTlsRouteDestinationPortPatchPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput() VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput
	ToVirtualServiceSpecTlsRouteDestinationPortPatchPtrOutputWithContext(context.Context) VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput
}

type virtualServiceSpecTlsRouteDestinationPortPatchPtrType VirtualServiceSpecTlsRouteDestinationPortPatchArgs

func VirtualServiceSpecTlsRouteDestinationPortPatchPtr(v *VirtualServiceSpecTlsRouteDestinationPortPatchArgs) VirtualServiceSpecTlsRouteDestinationPortPatchPtrInput {
	return (*virtualServiceSpecTlsRouteDestinationPortPatchPtrType)(v)
}

func (*virtualServiceSpecTlsRouteDestinationPortPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecTlsRouteDestinationPortPatch)(nil)).Elem()
}

func (i *virtualServiceSpecTlsRouteDestinationPortPatchPtrType) ToVirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput() VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput {
	return i.ToVirtualServiceSpecTlsRouteDestinationPortPatchPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecTlsRouteDestinationPortPatchPtrType) ToVirtualServiceSpecTlsRouteDestinationPortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput)
}

// Specifies the port on the host that is being addressed.
type VirtualServiceSpecTlsRouteDestinationPortPatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTlsRouteDestinationPortPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTlsRouteDestinationPortPatch)(nil)).Elem()
}

func (o VirtualServiceSpecTlsRouteDestinationPortPatchOutput) ToVirtualServiceSpecTlsRouteDestinationPortPatchOutput() VirtualServiceSpecTlsRouteDestinationPortPatchOutput {
	return o
}

func (o VirtualServiceSpecTlsRouteDestinationPortPatchOutput) ToVirtualServiceSpecTlsRouteDestinationPortPatchOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationPortPatchOutput {
	return o
}

func (o VirtualServiceSpecTlsRouteDestinationPortPatchOutput) ToVirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput() VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput {
	return o.ToVirtualServiceSpecTlsRouteDestinationPortPatchPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecTlsRouteDestinationPortPatchOutput) ToVirtualServiceSpecTlsRouteDestinationPortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecTlsRouteDestinationPortPatch) *VirtualServiceSpecTlsRouteDestinationPortPatch {
		return &v
	}).(VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput)
}

func (o VirtualServiceSpecTlsRouteDestinationPortPatchOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsRouteDestinationPortPatch) *int { return v.Number }).(pulumi.IntPtrOutput)
}

type VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecTlsRouteDestinationPortPatch)(nil)).Elem()
}

func (o VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput) ToVirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput() VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput) ToVirtualServiceSpecTlsRouteDestinationPortPatchPtrOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput {
	return o
}

func (o VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput) Elem() VirtualServiceSpecTlsRouteDestinationPortPatchOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTlsRouteDestinationPortPatch) VirtualServiceSpecTlsRouteDestinationPortPatch {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecTlsRouteDestinationPortPatch
		return ret
	}).(VirtualServiceSpecTlsRouteDestinationPortPatchOutput)
}

func (o VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecTlsRouteDestinationPortPatch) *int {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.IntPtrOutput)
}

type VirtualServiceSpecTlsRoutePatch struct {
	Destination *VirtualServiceSpecTlsRouteDestinationPatch `pulumi:"destination"`
	// Weight specifies the relative proportion of traffic to be forwarded to the destination.
	Weight *int `pulumi:"weight"`
}

// VirtualServiceSpecTlsRoutePatchInput is an input type that accepts VirtualServiceSpecTlsRoutePatchArgs and VirtualServiceSpecTlsRoutePatchOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTlsRoutePatchInput` via:
//
//	VirtualServiceSpecTlsRoutePatchArgs{...}
type VirtualServiceSpecTlsRoutePatchInput interface {
	pulumi.Input

	ToVirtualServiceSpecTlsRoutePatchOutput() VirtualServiceSpecTlsRoutePatchOutput
	ToVirtualServiceSpecTlsRoutePatchOutputWithContext(context.Context) VirtualServiceSpecTlsRoutePatchOutput
}

type VirtualServiceSpecTlsRoutePatchArgs struct {
	Destination VirtualServiceSpecTlsRouteDestinationPatchPtrInput `pulumi:"destination"`
	// Weight specifies the relative proportion of traffic to be forwarded to the destination.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (VirtualServiceSpecTlsRoutePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTlsRoutePatch)(nil)).Elem()
}

func (i VirtualServiceSpecTlsRoutePatchArgs) ToVirtualServiceSpecTlsRoutePatchOutput() VirtualServiceSpecTlsRoutePatchOutput {
	return i.ToVirtualServiceSpecTlsRoutePatchOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTlsRoutePatchArgs) ToVirtualServiceSpecTlsRoutePatchOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRoutePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsRoutePatchOutput)
}

// VirtualServiceSpecTlsRoutePatchArrayInput is an input type that accepts VirtualServiceSpecTlsRoutePatchArray and VirtualServiceSpecTlsRoutePatchArrayOutput values.
// You can construct a concrete instance of `VirtualServiceSpecTlsRoutePatchArrayInput` via:
//
//	VirtualServiceSpecTlsRoutePatchArray{ VirtualServiceSpecTlsRoutePatchArgs{...} }
type VirtualServiceSpecTlsRoutePatchArrayInput interface {
	pulumi.Input

	ToVirtualServiceSpecTlsRoutePatchArrayOutput() VirtualServiceSpecTlsRoutePatchArrayOutput
	ToVirtualServiceSpecTlsRoutePatchArrayOutputWithContext(context.Context) VirtualServiceSpecTlsRoutePatchArrayOutput
}

type VirtualServiceSpecTlsRoutePatchArray []VirtualServiceSpecTlsRoutePatchInput

func (VirtualServiceSpecTlsRoutePatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTlsRoutePatch)(nil)).Elem()
}

func (i VirtualServiceSpecTlsRoutePatchArray) ToVirtualServiceSpecTlsRoutePatchArrayOutput() VirtualServiceSpecTlsRoutePatchArrayOutput {
	return i.ToVirtualServiceSpecTlsRoutePatchArrayOutputWithContext(context.Background())
}

func (i VirtualServiceSpecTlsRoutePatchArray) ToVirtualServiceSpecTlsRoutePatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRoutePatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecTlsRoutePatchArrayOutput)
}

type VirtualServiceSpecTlsRoutePatchOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTlsRoutePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecTlsRoutePatch)(nil)).Elem()
}

func (o VirtualServiceSpecTlsRoutePatchOutput) ToVirtualServiceSpecTlsRoutePatchOutput() VirtualServiceSpecTlsRoutePatchOutput {
	return o
}

func (o VirtualServiceSpecTlsRoutePatchOutput) ToVirtualServiceSpecTlsRoutePatchOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRoutePatchOutput {
	return o
}

func (o VirtualServiceSpecTlsRoutePatchOutput) Destination() VirtualServiceSpecTlsRouteDestinationPatchPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsRoutePatch) *VirtualServiceSpecTlsRouteDestinationPatch {
		return v.Destination
	}).(VirtualServiceSpecTlsRouteDestinationPatchPtrOutput)
}

// Weight specifies the relative proportion of traffic to be forwarded to the destination.
func (o VirtualServiceSpecTlsRoutePatchOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecTlsRoutePatch) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type VirtualServiceSpecTlsRoutePatchArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecTlsRoutePatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceSpecTlsRoutePatch)(nil)).Elem()
}

func (o VirtualServiceSpecTlsRoutePatchArrayOutput) ToVirtualServiceSpecTlsRoutePatchArrayOutput() VirtualServiceSpecTlsRoutePatchArrayOutput {
	return o
}

func (o VirtualServiceSpecTlsRoutePatchArrayOutput) ToVirtualServiceSpecTlsRoutePatchArrayOutputWithContext(ctx context.Context) VirtualServiceSpecTlsRoutePatchArrayOutput {
	return o
}

func (o VirtualServiceSpecTlsRoutePatchArrayOutput) Index(i pulumi.IntInput) VirtualServiceSpecTlsRoutePatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceSpecTlsRoutePatch {
		return vs[0].([]VirtualServiceSpecTlsRoutePatch)[vs[1].(int)]
	}).(VirtualServiceSpecTlsRoutePatchOutput)
}

type WorkloadEntryType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta     `pulumi:"metadata"`
	Spec     *WorkloadEntrySpec     `pulumi:"spec"`
	Status   map[string]interface{} `pulumi:"status"`
}

// WorkloadEntryTypeInput is an input type that accepts WorkloadEntryTypeArgs and WorkloadEntryTypeOutput values.
// You can construct a concrete instance of `WorkloadEntryTypeInput` via:
//
//	WorkloadEntryTypeArgs{...}
type WorkloadEntryTypeInput interface {
	pulumi.Input

	ToWorkloadEntryTypeOutput() WorkloadEntryTypeOutput
	ToWorkloadEntryTypeOutputWithContext(context.Context) WorkloadEntryTypeOutput
}

type WorkloadEntryTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec     WorkloadEntrySpecPtrInput `pulumi:"spec"`
	Status   pulumi.MapInput           `pulumi:"status"`
}

func (WorkloadEntryTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadEntryType)(nil)).Elem()
}

func (i WorkloadEntryTypeArgs) ToWorkloadEntryTypeOutput() WorkloadEntryTypeOutput {
	return i.ToWorkloadEntryTypeOutputWithContext(context.Background())
}

func (i WorkloadEntryTypeArgs) ToWorkloadEntryTypeOutputWithContext(ctx context.Context) WorkloadEntryTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadEntryTypeOutput)
}

// WorkloadEntryTypeArrayInput is an input type that accepts WorkloadEntryTypeArray and WorkloadEntryTypeArrayOutput values.
// You can construct a concrete instance of `WorkloadEntryTypeArrayInput` via:
//
//	WorkloadEntryTypeArray{ WorkloadEntryTypeArgs{...} }
type WorkloadEntryTypeArrayInput interface {
	pulumi.Input

	ToWorkloadEntryTypeArrayOutput() WorkloadEntryTypeArrayOutput
	ToWorkloadEntryTypeArrayOutputWithContext(context.Context) WorkloadEntryTypeArrayOutput
}

type WorkloadEntryTypeArray []WorkloadEntryTypeInput

func (WorkloadEntryTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadEntryType)(nil)).Elem()
}

func (i WorkloadEntryTypeArray) ToWorkloadEntryTypeArrayOutput() WorkloadEntryTypeArrayOutput {
	return i.ToWorkloadEntryTypeArrayOutputWithContext(context.Background())
}

func (i WorkloadEntryTypeArray) ToWorkloadEntryTypeArrayOutputWithContext(ctx context.Context) WorkloadEntryTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadEntryTypeArrayOutput)
}

type WorkloadEntryTypeOutput struct{ *pulumi.OutputState }

func (WorkloadEntryTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadEntryType)(nil)).Elem()
}

func (o WorkloadEntryTypeOutput) ToWorkloadEntryTypeOutput() WorkloadEntryTypeOutput {
	return o
}

func (o WorkloadEntryTypeOutput) ToWorkloadEntryTypeOutputWithContext(ctx context.Context) WorkloadEntryTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o WorkloadEntryTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadEntryType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o WorkloadEntryTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadEntryType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o WorkloadEntryTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v WorkloadEntryType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o WorkloadEntryTypeOutput) Spec() WorkloadEntrySpecPtrOutput {
	return o.ApplyT(func(v WorkloadEntryType) *WorkloadEntrySpec { return v.Spec }).(WorkloadEntrySpecPtrOutput)
}

func (o WorkloadEntryTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v WorkloadEntryType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

type WorkloadEntryTypeArrayOutput struct{ *pulumi.OutputState }

func (WorkloadEntryTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadEntryType)(nil)).Elem()
}

func (o WorkloadEntryTypeArrayOutput) ToWorkloadEntryTypeArrayOutput() WorkloadEntryTypeArrayOutput {
	return o
}

func (o WorkloadEntryTypeArrayOutput) ToWorkloadEntryTypeArrayOutputWithContext(ctx context.Context) WorkloadEntryTypeArrayOutput {
	return o
}

func (o WorkloadEntryTypeArrayOutput) Index(i pulumi.IntInput) WorkloadEntryTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadEntryType {
		return vs[0].([]WorkloadEntryType)[vs[1].(int)]
	}).(WorkloadEntryTypeOutput)
}

// WorkloadEntryList is a list of WorkloadEntry
type WorkloadEntryListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of workloadentries. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []WorkloadEntryType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// WorkloadEntryListTypeInput is an input type that accepts WorkloadEntryListTypeArgs and WorkloadEntryListTypeOutput values.
// You can construct a concrete instance of `WorkloadEntryListTypeInput` via:
//
//	WorkloadEntryListTypeArgs{...}
type WorkloadEntryListTypeInput interface {
	pulumi.Input

	ToWorkloadEntryListTypeOutput() WorkloadEntryListTypeOutput
	ToWorkloadEntryListTypeOutputWithContext(context.Context) WorkloadEntryListTypeOutput
}

// WorkloadEntryList is a list of WorkloadEntry
type WorkloadEntryListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of workloadentries. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items WorkloadEntryTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (WorkloadEntryListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadEntryListType)(nil)).Elem()
}

func (i WorkloadEntryListTypeArgs) ToWorkloadEntryListTypeOutput() WorkloadEntryListTypeOutput {
	return i.ToWorkloadEntryListTypeOutputWithContext(context.Background())
}

func (i WorkloadEntryListTypeArgs) ToWorkloadEntryListTypeOutputWithContext(ctx context.Context) WorkloadEntryListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadEntryListTypeOutput)
}

// WorkloadEntryList is a list of WorkloadEntry
type WorkloadEntryListTypeOutput struct{ *pulumi.OutputState }

func (WorkloadEntryListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadEntryListType)(nil)).Elem()
}

func (o WorkloadEntryListTypeOutput) ToWorkloadEntryListTypeOutput() WorkloadEntryListTypeOutput {
	return o
}

func (o WorkloadEntryListTypeOutput) ToWorkloadEntryListTypeOutputWithContext(ctx context.Context) WorkloadEntryListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o WorkloadEntryListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadEntryListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of workloadentries. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o WorkloadEntryListTypeOutput) Items() WorkloadEntryTypeArrayOutput {
	return o.ApplyT(func(v WorkloadEntryListType) []WorkloadEntryType { return v.Items }).(WorkloadEntryTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o WorkloadEntryListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadEntryListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o WorkloadEntryListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v WorkloadEntryListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

type WorkloadEntryPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *WorkloadEntrySpecPatch `pulumi:"spec"`
	Status   map[string]interface{}  `pulumi:"status"`
}

// WorkloadEntryPatchTypeInput is an input type that accepts WorkloadEntryPatchTypeArgs and WorkloadEntryPatchTypeOutput values.
// You can construct a concrete instance of `WorkloadEntryPatchTypeInput` via:
//
//	WorkloadEntryPatchTypeArgs{...}
type WorkloadEntryPatchTypeInput interface {
	pulumi.Input

	ToWorkloadEntryPatchTypeOutput() WorkloadEntryPatchTypeOutput
	ToWorkloadEntryPatchTypeOutputWithContext(context.Context) WorkloadEntryPatchTypeOutput
}

type WorkloadEntryPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
	Spec     WorkloadEntrySpecPatchPtrInput `pulumi:"spec"`
	Status   pulumi.MapInput                `pulumi:"status"`
}

func (WorkloadEntryPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadEntryPatchType)(nil)).Elem()
}

func (i WorkloadEntryPatchTypeArgs) ToWorkloadEntryPatchTypeOutput() WorkloadEntryPatchTypeOutput {
	return i.ToWorkloadEntryPatchTypeOutputWithContext(context.Background())
}

func (i WorkloadEntryPatchTypeArgs) ToWorkloadEntryPatchTypeOutputWithContext(ctx context.Context) WorkloadEntryPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadEntryPatchTypeOutput)
}

type WorkloadEntryPatchTypeOutput struct{ *pulumi.OutputState }

func (WorkloadEntryPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadEntryPatchType)(nil)).Elem()
}

func (o WorkloadEntryPatchTypeOutput) ToWorkloadEntryPatchTypeOutput() WorkloadEntryPatchTypeOutput {
	return o
}

func (o WorkloadEntryPatchTypeOutput) ToWorkloadEntryPatchTypeOutputWithContext(ctx context.Context) WorkloadEntryPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o WorkloadEntryPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadEntryPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o WorkloadEntryPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadEntryPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o WorkloadEntryPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v WorkloadEntryPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o WorkloadEntryPatchTypeOutput) Spec() WorkloadEntrySpecPatchPtrOutput {
	return o.ApplyT(func(v WorkloadEntryPatchType) *WorkloadEntrySpecPatch { return v.Spec }).(WorkloadEntrySpecPatchPtrOutput)
}

func (o WorkloadEntryPatchTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v WorkloadEntryPatchType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

// Configuration affecting VMs onboarded into the mesh. See more details at: https://istio.io/docs/reference/config/networking/workload-entry.html
type WorkloadEntrySpec struct {
	// Address associated with the network endpoint without the port.
	Address *string `pulumi:"address"`
	// One or more labels associated with the endpoint.
	Labels map[string]string `pulumi:"labels"`
	// The locality associated with the endpoint.
	Locality *string `pulumi:"locality"`
	// Network enables Istio to group endpoints resident in the same L3 domain/network.
	Network *string `pulumi:"network"`
	// Set of ports associated with the endpoint.
	Ports map[string]int `pulumi:"ports"`
	// The service account associated with the workload if a sidecar is present in the workload.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// The load balancing weight associated with the endpoint.
	Weight *int `pulumi:"weight"`
}

// WorkloadEntrySpecInput is an input type that accepts WorkloadEntrySpecArgs and WorkloadEntrySpecOutput values.
// You can construct a concrete instance of `WorkloadEntrySpecInput` via:
//
//	WorkloadEntrySpecArgs{...}
type WorkloadEntrySpecInput interface {
	pulumi.Input

	ToWorkloadEntrySpecOutput() WorkloadEntrySpecOutput
	ToWorkloadEntrySpecOutputWithContext(context.Context) WorkloadEntrySpecOutput
}

// Configuration affecting VMs onboarded into the mesh. See more details at: https://istio.io/docs/reference/config/networking/workload-entry.html
type WorkloadEntrySpecArgs struct {
	// Address associated with the network endpoint without the port.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// One or more labels associated with the endpoint.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The locality associated with the endpoint.
	Locality pulumi.StringPtrInput `pulumi:"locality"`
	// Network enables Istio to group endpoints resident in the same L3 domain/network.
	Network pulumi.StringPtrInput `pulumi:"network"`
	// Set of ports associated with the endpoint.
	Ports pulumi.IntMapInput `pulumi:"ports"`
	// The service account associated with the workload if a sidecar is present in the workload.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
	// The load balancing weight associated with the endpoint.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (WorkloadEntrySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadEntrySpec)(nil)).Elem()
}

func (i WorkloadEntrySpecArgs) ToWorkloadEntrySpecOutput() WorkloadEntrySpecOutput {
	return i.ToWorkloadEntrySpecOutputWithContext(context.Background())
}

func (i WorkloadEntrySpecArgs) ToWorkloadEntrySpecOutputWithContext(ctx context.Context) WorkloadEntrySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadEntrySpecOutput)
}

func (i WorkloadEntrySpecArgs) ToWorkloadEntrySpecPtrOutput() WorkloadEntrySpecPtrOutput {
	return i.ToWorkloadEntrySpecPtrOutputWithContext(context.Background())
}

func (i WorkloadEntrySpecArgs) ToWorkloadEntrySpecPtrOutputWithContext(ctx context.Context) WorkloadEntrySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadEntrySpecOutput).ToWorkloadEntrySpecPtrOutputWithContext(ctx)
}

// WorkloadEntrySpecPtrInput is an input type that accepts WorkloadEntrySpecArgs, WorkloadEntrySpecPtr and WorkloadEntrySpecPtrOutput values.
// You can construct a concrete instance of `WorkloadEntrySpecPtrInput` via:
//
//	        WorkloadEntrySpecArgs{...}
//
//	or:
//
//	        nil
type WorkloadEntrySpecPtrInput interface {
	pulumi.Input

	ToWorkloadEntrySpecPtrOutput() WorkloadEntrySpecPtrOutput
	ToWorkloadEntrySpecPtrOutputWithContext(context.Context) WorkloadEntrySpecPtrOutput
}

type workloadEntrySpecPtrType WorkloadEntrySpecArgs

func WorkloadEntrySpecPtr(v *WorkloadEntrySpecArgs) WorkloadEntrySpecPtrInput {
	return (*workloadEntrySpecPtrType)(v)
}

func (*workloadEntrySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadEntrySpec)(nil)).Elem()
}

func (i *workloadEntrySpecPtrType) ToWorkloadEntrySpecPtrOutput() WorkloadEntrySpecPtrOutput {
	return i.ToWorkloadEntrySpecPtrOutputWithContext(context.Background())
}

func (i *workloadEntrySpecPtrType) ToWorkloadEntrySpecPtrOutputWithContext(ctx context.Context) WorkloadEntrySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadEntrySpecPtrOutput)
}

// Configuration affecting VMs onboarded into the mesh. See more details at: https://istio.io/docs/reference/config/networking/workload-entry.html
type WorkloadEntrySpecOutput struct{ *pulumi.OutputState }

func (WorkloadEntrySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadEntrySpec)(nil)).Elem()
}

func (o WorkloadEntrySpecOutput) ToWorkloadEntrySpecOutput() WorkloadEntrySpecOutput {
	return o
}

func (o WorkloadEntrySpecOutput) ToWorkloadEntrySpecOutputWithContext(ctx context.Context) WorkloadEntrySpecOutput {
	return o
}

func (o WorkloadEntrySpecOutput) ToWorkloadEntrySpecPtrOutput() WorkloadEntrySpecPtrOutput {
	return o.ToWorkloadEntrySpecPtrOutputWithContext(context.Background())
}

func (o WorkloadEntrySpecOutput) ToWorkloadEntrySpecPtrOutputWithContext(ctx context.Context) WorkloadEntrySpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadEntrySpec) *WorkloadEntrySpec {
		return &v
	}).(WorkloadEntrySpecPtrOutput)
}

// Address associated with the network endpoint without the port.
func (o WorkloadEntrySpecOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadEntrySpec) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// One or more labels associated with the endpoint.
func (o WorkloadEntrySpecOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkloadEntrySpec) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The locality associated with the endpoint.
func (o WorkloadEntrySpecOutput) Locality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadEntrySpec) *string { return v.Locality }).(pulumi.StringPtrOutput)
}

// Network enables Istio to group endpoints resident in the same L3 domain/network.
func (o WorkloadEntrySpecOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadEntrySpec) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// Set of ports associated with the endpoint.
func (o WorkloadEntrySpecOutput) Ports() pulumi.IntMapOutput {
	return o.ApplyT(func(v WorkloadEntrySpec) map[string]int { return v.Ports }).(pulumi.IntMapOutput)
}

// The service account associated with the workload if a sidecar is present in the workload.
func (o WorkloadEntrySpecOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadEntrySpec) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// The load balancing weight associated with the endpoint.
func (o WorkloadEntrySpecOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadEntrySpec) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type WorkloadEntrySpecPtrOutput struct{ *pulumi.OutputState }

func (WorkloadEntrySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadEntrySpec)(nil)).Elem()
}

func (o WorkloadEntrySpecPtrOutput) ToWorkloadEntrySpecPtrOutput() WorkloadEntrySpecPtrOutput {
	return o
}

func (o WorkloadEntrySpecPtrOutput) ToWorkloadEntrySpecPtrOutputWithContext(ctx context.Context) WorkloadEntrySpecPtrOutput {
	return o
}

func (o WorkloadEntrySpecPtrOutput) Elem() WorkloadEntrySpecOutput {
	return o.ApplyT(func(v *WorkloadEntrySpec) WorkloadEntrySpec {
		if v != nil {
			return *v
		}
		var ret WorkloadEntrySpec
		return ret
	}).(WorkloadEntrySpecOutput)
}

// Address associated with the network endpoint without the port.
func (o WorkloadEntrySpecPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadEntrySpec) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// One or more labels associated with the endpoint.
func (o WorkloadEntrySpecPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkloadEntrySpec) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The locality associated with the endpoint.
func (o WorkloadEntrySpecPtrOutput) Locality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadEntrySpec) *string {
		if v == nil {
			return nil
		}
		return v.Locality
	}).(pulumi.StringPtrOutput)
}

// Network enables Istio to group endpoints resident in the same L3 domain/network.
func (o WorkloadEntrySpecPtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadEntrySpec) *string {
		if v == nil {
			return nil
		}
		return v.Network
	}).(pulumi.StringPtrOutput)
}

// Set of ports associated with the endpoint.
func (o WorkloadEntrySpecPtrOutput) Ports() pulumi.IntMapOutput {
	return o.ApplyT(func(v *WorkloadEntrySpec) map[string]int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntMapOutput)
}

// The service account associated with the workload if a sidecar is present in the workload.
func (o WorkloadEntrySpecPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadEntrySpec) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(pulumi.StringPtrOutput)
}

// The load balancing weight associated with the endpoint.
func (o WorkloadEntrySpecPtrOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadEntrySpec) *int {
		if v == nil {
			return nil
		}
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

// Configuration affecting VMs onboarded into the mesh. See more details at: https://istio.io/docs/reference/config/networking/workload-entry.html
type WorkloadEntrySpecPatch struct {
	// Address associated with the network endpoint without the port.
	Address *string `pulumi:"address"`
	// One or more labels associated with the endpoint.
	Labels map[string]string `pulumi:"labels"`
	// The locality associated with the endpoint.
	Locality *string `pulumi:"locality"`
	// Network enables Istio to group endpoints resident in the same L3 domain/network.
	Network *string `pulumi:"network"`
	// Set of ports associated with the endpoint.
	Ports map[string]int `pulumi:"ports"`
	// The service account associated with the workload if a sidecar is present in the workload.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// The load balancing weight associated with the endpoint.
	Weight *int `pulumi:"weight"`
}

// WorkloadEntrySpecPatchInput is an input type that accepts WorkloadEntrySpecPatchArgs and WorkloadEntrySpecPatchOutput values.
// You can construct a concrete instance of `WorkloadEntrySpecPatchInput` via:
//
//	WorkloadEntrySpecPatchArgs{...}
type WorkloadEntrySpecPatchInput interface {
	pulumi.Input

	ToWorkloadEntrySpecPatchOutput() WorkloadEntrySpecPatchOutput
	ToWorkloadEntrySpecPatchOutputWithContext(context.Context) WorkloadEntrySpecPatchOutput
}

// Configuration affecting VMs onboarded into the mesh. See more details at: https://istio.io/docs/reference/config/networking/workload-entry.html
type WorkloadEntrySpecPatchArgs struct {
	// Address associated with the network endpoint without the port.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// One or more labels associated with the endpoint.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The locality associated with the endpoint.
	Locality pulumi.StringPtrInput `pulumi:"locality"`
	// Network enables Istio to group endpoints resident in the same L3 domain/network.
	Network pulumi.StringPtrInput `pulumi:"network"`
	// Set of ports associated with the endpoint.
	Ports pulumi.IntMapInput `pulumi:"ports"`
	// The service account associated with the workload if a sidecar is present in the workload.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
	// The load balancing weight associated with the endpoint.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (WorkloadEntrySpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadEntrySpecPatch)(nil)).Elem()
}

func (i WorkloadEntrySpecPatchArgs) ToWorkloadEntrySpecPatchOutput() WorkloadEntrySpecPatchOutput {
	return i.ToWorkloadEntrySpecPatchOutputWithContext(context.Background())
}

func (i WorkloadEntrySpecPatchArgs) ToWorkloadEntrySpecPatchOutputWithContext(ctx context.Context) WorkloadEntrySpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadEntrySpecPatchOutput)
}

func (i WorkloadEntrySpecPatchArgs) ToWorkloadEntrySpecPatchPtrOutput() WorkloadEntrySpecPatchPtrOutput {
	return i.ToWorkloadEntrySpecPatchPtrOutputWithContext(context.Background())
}

func (i WorkloadEntrySpecPatchArgs) ToWorkloadEntrySpecPatchPtrOutputWithContext(ctx context.Context) WorkloadEntrySpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadEntrySpecPatchOutput).ToWorkloadEntrySpecPatchPtrOutputWithContext(ctx)
}

// WorkloadEntrySpecPatchPtrInput is an input type that accepts WorkloadEntrySpecPatchArgs, WorkloadEntrySpecPatchPtr and WorkloadEntrySpecPatchPtrOutput values.
// You can construct a concrete instance of `WorkloadEntrySpecPatchPtrInput` via:
//
//	        WorkloadEntrySpecPatchArgs{...}
//
//	or:
//
//	        nil
type WorkloadEntrySpecPatchPtrInput interface {
	pulumi.Input

	ToWorkloadEntrySpecPatchPtrOutput() WorkloadEntrySpecPatchPtrOutput
	ToWorkloadEntrySpecPatchPtrOutputWithContext(context.Context) WorkloadEntrySpecPatchPtrOutput
}

type workloadEntrySpecPatchPtrType WorkloadEntrySpecPatchArgs

func WorkloadEntrySpecPatchPtr(v *WorkloadEntrySpecPatchArgs) WorkloadEntrySpecPatchPtrInput {
	return (*workloadEntrySpecPatchPtrType)(v)
}

func (*workloadEntrySpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadEntrySpecPatch)(nil)).Elem()
}

func (i *workloadEntrySpecPatchPtrType) ToWorkloadEntrySpecPatchPtrOutput() WorkloadEntrySpecPatchPtrOutput {
	return i.ToWorkloadEntrySpecPatchPtrOutputWithContext(context.Background())
}

func (i *workloadEntrySpecPatchPtrType) ToWorkloadEntrySpecPatchPtrOutputWithContext(ctx context.Context) WorkloadEntrySpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadEntrySpecPatchPtrOutput)
}

// Configuration affecting VMs onboarded into the mesh. See more details at: https://istio.io/docs/reference/config/networking/workload-entry.html
type WorkloadEntrySpecPatchOutput struct{ *pulumi.OutputState }

func (WorkloadEntrySpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadEntrySpecPatch)(nil)).Elem()
}

func (o WorkloadEntrySpecPatchOutput) ToWorkloadEntrySpecPatchOutput() WorkloadEntrySpecPatchOutput {
	return o
}

func (o WorkloadEntrySpecPatchOutput) ToWorkloadEntrySpecPatchOutputWithContext(ctx context.Context) WorkloadEntrySpecPatchOutput {
	return o
}

func (o WorkloadEntrySpecPatchOutput) ToWorkloadEntrySpecPatchPtrOutput() WorkloadEntrySpecPatchPtrOutput {
	return o.ToWorkloadEntrySpecPatchPtrOutputWithContext(context.Background())
}

func (o WorkloadEntrySpecPatchOutput) ToWorkloadEntrySpecPatchPtrOutputWithContext(ctx context.Context) WorkloadEntrySpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadEntrySpecPatch) *WorkloadEntrySpecPatch {
		return &v
	}).(WorkloadEntrySpecPatchPtrOutput)
}

// Address associated with the network endpoint without the port.
func (o WorkloadEntrySpecPatchOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadEntrySpecPatch) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// One or more labels associated with the endpoint.
func (o WorkloadEntrySpecPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkloadEntrySpecPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The locality associated with the endpoint.
func (o WorkloadEntrySpecPatchOutput) Locality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadEntrySpecPatch) *string { return v.Locality }).(pulumi.StringPtrOutput)
}

// Network enables Istio to group endpoints resident in the same L3 domain/network.
func (o WorkloadEntrySpecPatchOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadEntrySpecPatch) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// Set of ports associated with the endpoint.
func (o WorkloadEntrySpecPatchOutput) Ports() pulumi.IntMapOutput {
	return o.ApplyT(func(v WorkloadEntrySpecPatch) map[string]int { return v.Ports }).(pulumi.IntMapOutput)
}

// The service account associated with the workload if a sidecar is present in the workload.
func (o WorkloadEntrySpecPatchOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadEntrySpecPatch) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// The load balancing weight associated with the endpoint.
func (o WorkloadEntrySpecPatchOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadEntrySpecPatch) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type WorkloadEntrySpecPatchPtrOutput struct{ *pulumi.OutputState }

func (WorkloadEntrySpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadEntrySpecPatch)(nil)).Elem()
}

func (o WorkloadEntrySpecPatchPtrOutput) ToWorkloadEntrySpecPatchPtrOutput() WorkloadEntrySpecPatchPtrOutput {
	return o
}

func (o WorkloadEntrySpecPatchPtrOutput) ToWorkloadEntrySpecPatchPtrOutputWithContext(ctx context.Context) WorkloadEntrySpecPatchPtrOutput {
	return o
}

func (o WorkloadEntrySpecPatchPtrOutput) Elem() WorkloadEntrySpecPatchOutput {
	return o.ApplyT(func(v *WorkloadEntrySpecPatch) WorkloadEntrySpecPatch {
		if v != nil {
			return *v
		}
		var ret WorkloadEntrySpecPatch
		return ret
	}).(WorkloadEntrySpecPatchOutput)
}

// Address associated with the network endpoint without the port.
func (o WorkloadEntrySpecPatchPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadEntrySpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// One or more labels associated with the endpoint.
func (o WorkloadEntrySpecPatchPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkloadEntrySpecPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The locality associated with the endpoint.
func (o WorkloadEntrySpecPatchPtrOutput) Locality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadEntrySpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Locality
	}).(pulumi.StringPtrOutput)
}

// Network enables Istio to group endpoints resident in the same L3 domain/network.
func (o WorkloadEntrySpecPatchPtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadEntrySpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Network
	}).(pulumi.StringPtrOutput)
}

// Set of ports associated with the endpoint.
func (o WorkloadEntrySpecPatchPtrOutput) Ports() pulumi.IntMapOutput {
	return o.ApplyT(func(v *WorkloadEntrySpecPatch) map[string]int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntMapOutput)
}

// The service account associated with the workload if a sidecar is present in the workload.
func (o WorkloadEntrySpecPatchPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadEntrySpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(pulumi.StringPtrOutput)
}

// The load balancing weight associated with the endpoint.
func (o WorkloadEntrySpecPatchPtrOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadEntrySpecPatch) *int {
		if v == nil {
			return nil
		}
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

type WorkloadGroupType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta     `pulumi:"metadata"`
	Spec     *WorkloadGroupSpec     `pulumi:"spec"`
	Status   map[string]interface{} `pulumi:"status"`
}

// WorkloadGroupTypeInput is an input type that accepts WorkloadGroupTypeArgs and WorkloadGroupTypeOutput values.
// You can construct a concrete instance of `WorkloadGroupTypeInput` via:
//
//	WorkloadGroupTypeArgs{...}
type WorkloadGroupTypeInput interface {
	pulumi.Input

	ToWorkloadGroupTypeOutput() WorkloadGroupTypeOutput
	ToWorkloadGroupTypeOutputWithContext(context.Context) WorkloadGroupTypeOutput
}

type WorkloadGroupTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec     WorkloadGroupSpecPtrInput `pulumi:"spec"`
	Status   pulumi.MapInput           `pulumi:"status"`
}

func (WorkloadGroupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupType)(nil)).Elem()
}

func (i WorkloadGroupTypeArgs) ToWorkloadGroupTypeOutput() WorkloadGroupTypeOutput {
	return i.ToWorkloadGroupTypeOutputWithContext(context.Background())
}

func (i WorkloadGroupTypeArgs) ToWorkloadGroupTypeOutputWithContext(ctx context.Context) WorkloadGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupTypeOutput)
}

// WorkloadGroupTypeArrayInput is an input type that accepts WorkloadGroupTypeArray and WorkloadGroupTypeArrayOutput values.
// You can construct a concrete instance of `WorkloadGroupTypeArrayInput` via:
//
//	WorkloadGroupTypeArray{ WorkloadGroupTypeArgs{...} }
type WorkloadGroupTypeArrayInput interface {
	pulumi.Input

	ToWorkloadGroupTypeArrayOutput() WorkloadGroupTypeArrayOutput
	ToWorkloadGroupTypeArrayOutputWithContext(context.Context) WorkloadGroupTypeArrayOutput
}

type WorkloadGroupTypeArray []WorkloadGroupTypeInput

func (WorkloadGroupTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadGroupType)(nil)).Elem()
}

func (i WorkloadGroupTypeArray) ToWorkloadGroupTypeArrayOutput() WorkloadGroupTypeArrayOutput {
	return i.ToWorkloadGroupTypeArrayOutputWithContext(context.Background())
}

func (i WorkloadGroupTypeArray) ToWorkloadGroupTypeArrayOutputWithContext(ctx context.Context) WorkloadGroupTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupTypeArrayOutput)
}

type WorkloadGroupTypeOutput struct{ *pulumi.OutputState }

func (WorkloadGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupType)(nil)).Elem()
}

func (o WorkloadGroupTypeOutput) ToWorkloadGroupTypeOutput() WorkloadGroupTypeOutput {
	return o
}

func (o WorkloadGroupTypeOutput) ToWorkloadGroupTypeOutputWithContext(ctx context.Context) WorkloadGroupTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o WorkloadGroupTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o WorkloadGroupTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o WorkloadGroupTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v WorkloadGroupType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o WorkloadGroupTypeOutput) Spec() WorkloadGroupSpecPtrOutput {
	return o.ApplyT(func(v WorkloadGroupType) *WorkloadGroupSpec { return v.Spec }).(WorkloadGroupSpecPtrOutput)
}

func (o WorkloadGroupTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v WorkloadGroupType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

type WorkloadGroupTypeArrayOutput struct{ *pulumi.OutputState }

func (WorkloadGroupTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadGroupType)(nil)).Elem()
}

func (o WorkloadGroupTypeArrayOutput) ToWorkloadGroupTypeArrayOutput() WorkloadGroupTypeArrayOutput {
	return o
}

func (o WorkloadGroupTypeArrayOutput) ToWorkloadGroupTypeArrayOutputWithContext(ctx context.Context) WorkloadGroupTypeArrayOutput {
	return o
}

func (o WorkloadGroupTypeArrayOutput) Index(i pulumi.IntInput) WorkloadGroupTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadGroupType {
		return vs[0].([]WorkloadGroupType)[vs[1].(int)]
	}).(WorkloadGroupTypeOutput)
}

// WorkloadGroupList is a list of WorkloadGroup
type WorkloadGroupListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of workloadgroups. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []WorkloadGroupType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// WorkloadGroupListTypeInput is an input type that accepts WorkloadGroupListTypeArgs and WorkloadGroupListTypeOutput values.
// You can construct a concrete instance of `WorkloadGroupListTypeInput` via:
//
//	WorkloadGroupListTypeArgs{...}
type WorkloadGroupListTypeInput interface {
	pulumi.Input

	ToWorkloadGroupListTypeOutput() WorkloadGroupListTypeOutput
	ToWorkloadGroupListTypeOutputWithContext(context.Context) WorkloadGroupListTypeOutput
}

// WorkloadGroupList is a list of WorkloadGroup
type WorkloadGroupListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of workloadgroups. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items WorkloadGroupTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (WorkloadGroupListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupListType)(nil)).Elem()
}

func (i WorkloadGroupListTypeArgs) ToWorkloadGroupListTypeOutput() WorkloadGroupListTypeOutput {
	return i.ToWorkloadGroupListTypeOutputWithContext(context.Background())
}

func (i WorkloadGroupListTypeArgs) ToWorkloadGroupListTypeOutputWithContext(ctx context.Context) WorkloadGroupListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupListTypeOutput)
}

// WorkloadGroupList is a list of WorkloadGroup
type WorkloadGroupListTypeOutput struct{ *pulumi.OutputState }

func (WorkloadGroupListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupListType)(nil)).Elem()
}

func (o WorkloadGroupListTypeOutput) ToWorkloadGroupListTypeOutput() WorkloadGroupListTypeOutput {
	return o
}

func (o WorkloadGroupListTypeOutput) ToWorkloadGroupListTypeOutputWithContext(ctx context.Context) WorkloadGroupListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o WorkloadGroupListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of workloadgroups. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o WorkloadGroupListTypeOutput) Items() WorkloadGroupTypeArrayOutput {
	return o.ApplyT(func(v WorkloadGroupListType) []WorkloadGroupType { return v.Items }).(WorkloadGroupTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o WorkloadGroupListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o WorkloadGroupListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v WorkloadGroupListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

type WorkloadGroupPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *WorkloadGroupSpecPatch `pulumi:"spec"`
	Status   map[string]interface{}  `pulumi:"status"`
}

// WorkloadGroupPatchTypeInput is an input type that accepts WorkloadGroupPatchTypeArgs and WorkloadGroupPatchTypeOutput values.
// You can construct a concrete instance of `WorkloadGroupPatchTypeInput` via:
//
//	WorkloadGroupPatchTypeArgs{...}
type WorkloadGroupPatchTypeInput interface {
	pulumi.Input

	ToWorkloadGroupPatchTypeOutput() WorkloadGroupPatchTypeOutput
	ToWorkloadGroupPatchTypeOutputWithContext(context.Context) WorkloadGroupPatchTypeOutput
}

type WorkloadGroupPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
	Spec     WorkloadGroupSpecPatchPtrInput `pulumi:"spec"`
	Status   pulumi.MapInput                `pulumi:"status"`
}

func (WorkloadGroupPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupPatchType)(nil)).Elem()
}

func (i WorkloadGroupPatchTypeArgs) ToWorkloadGroupPatchTypeOutput() WorkloadGroupPatchTypeOutput {
	return i.ToWorkloadGroupPatchTypeOutputWithContext(context.Background())
}

func (i WorkloadGroupPatchTypeArgs) ToWorkloadGroupPatchTypeOutputWithContext(ctx context.Context) WorkloadGroupPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupPatchTypeOutput)
}

type WorkloadGroupPatchTypeOutput struct{ *pulumi.OutputState }

func (WorkloadGroupPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupPatchType)(nil)).Elem()
}

func (o WorkloadGroupPatchTypeOutput) ToWorkloadGroupPatchTypeOutput() WorkloadGroupPatchTypeOutput {
	return o
}

func (o WorkloadGroupPatchTypeOutput) ToWorkloadGroupPatchTypeOutputWithContext(ctx context.Context) WorkloadGroupPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o WorkloadGroupPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o WorkloadGroupPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o WorkloadGroupPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v WorkloadGroupPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o WorkloadGroupPatchTypeOutput) Spec() WorkloadGroupSpecPatchPtrOutput {
	return o.ApplyT(func(v WorkloadGroupPatchType) *WorkloadGroupSpecPatch { return v.Spec }).(WorkloadGroupSpecPatchPtrOutput)
}

func (o WorkloadGroupPatchTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v WorkloadGroupPatchType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

// `WorkloadGroup` enables specifying the properties of a single workload for bootstrap and provides a template for `WorkloadEntry`, similar to how `Deployment` specifies properties of workloads via `Pod` templates.
type WorkloadGroupSpec struct {
	Metadata *WorkloadGroupSpecMetadata `pulumi:"metadata"`
	Probe    *WorkloadGroupSpecProbe    `pulumi:"probe"`
	Template *WorkloadGroupSpecTemplate `pulumi:"template"`
}

// WorkloadGroupSpecInput is an input type that accepts WorkloadGroupSpecArgs and WorkloadGroupSpecOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecInput` via:
//
//	WorkloadGroupSpecArgs{...}
type WorkloadGroupSpecInput interface {
	pulumi.Input

	ToWorkloadGroupSpecOutput() WorkloadGroupSpecOutput
	ToWorkloadGroupSpecOutputWithContext(context.Context) WorkloadGroupSpecOutput
}

// `WorkloadGroup` enables specifying the properties of a single workload for bootstrap and provides a template for `WorkloadEntry`, similar to how `Deployment` specifies properties of workloads via `Pod` templates.
type WorkloadGroupSpecArgs struct {
	Metadata WorkloadGroupSpecMetadataPtrInput `pulumi:"metadata"`
	Probe    WorkloadGroupSpecProbePtrInput    `pulumi:"probe"`
	Template WorkloadGroupSpecTemplatePtrInput `pulumi:"template"`
}

func (WorkloadGroupSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpec)(nil)).Elem()
}

func (i WorkloadGroupSpecArgs) ToWorkloadGroupSpecOutput() WorkloadGroupSpecOutput {
	return i.ToWorkloadGroupSpecOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecArgs) ToWorkloadGroupSpecOutputWithContext(ctx context.Context) WorkloadGroupSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecOutput)
}

func (i WorkloadGroupSpecArgs) ToWorkloadGroupSpecPtrOutput() WorkloadGroupSpecPtrOutput {
	return i.ToWorkloadGroupSpecPtrOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecArgs) ToWorkloadGroupSpecPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecOutput).ToWorkloadGroupSpecPtrOutputWithContext(ctx)
}

// WorkloadGroupSpecPtrInput is an input type that accepts WorkloadGroupSpecArgs, WorkloadGroupSpecPtr and WorkloadGroupSpecPtrOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecPtrInput` via:
//
//	        WorkloadGroupSpecArgs{...}
//
//	or:
//
//	        nil
type WorkloadGroupSpecPtrInput interface {
	pulumi.Input

	ToWorkloadGroupSpecPtrOutput() WorkloadGroupSpecPtrOutput
	ToWorkloadGroupSpecPtrOutputWithContext(context.Context) WorkloadGroupSpecPtrOutput
}

type workloadGroupSpecPtrType WorkloadGroupSpecArgs

func WorkloadGroupSpecPtr(v *WorkloadGroupSpecArgs) WorkloadGroupSpecPtrInput {
	return (*workloadGroupSpecPtrType)(v)
}

func (*workloadGroupSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpec)(nil)).Elem()
}

func (i *workloadGroupSpecPtrType) ToWorkloadGroupSpecPtrOutput() WorkloadGroupSpecPtrOutput {
	return i.ToWorkloadGroupSpecPtrOutputWithContext(context.Background())
}

func (i *workloadGroupSpecPtrType) ToWorkloadGroupSpecPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecPtrOutput)
}

// `WorkloadGroup` enables specifying the properties of a single workload for bootstrap and provides a template for `WorkloadEntry`, similar to how `Deployment` specifies properties of workloads via `Pod` templates.
type WorkloadGroupSpecOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpec)(nil)).Elem()
}

func (o WorkloadGroupSpecOutput) ToWorkloadGroupSpecOutput() WorkloadGroupSpecOutput {
	return o
}

func (o WorkloadGroupSpecOutput) ToWorkloadGroupSpecOutputWithContext(ctx context.Context) WorkloadGroupSpecOutput {
	return o
}

func (o WorkloadGroupSpecOutput) ToWorkloadGroupSpecPtrOutput() WorkloadGroupSpecPtrOutput {
	return o.ToWorkloadGroupSpecPtrOutputWithContext(context.Background())
}

func (o WorkloadGroupSpecOutput) ToWorkloadGroupSpecPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadGroupSpec) *WorkloadGroupSpec {
		return &v
	}).(WorkloadGroupSpecPtrOutput)
}

func (o WorkloadGroupSpecOutput) Metadata() WorkloadGroupSpecMetadataPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpec) *WorkloadGroupSpecMetadata { return v.Metadata }).(WorkloadGroupSpecMetadataPtrOutput)
}

func (o WorkloadGroupSpecOutput) Probe() WorkloadGroupSpecProbePtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpec) *WorkloadGroupSpecProbe { return v.Probe }).(WorkloadGroupSpecProbePtrOutput)
}

func (o WorkloadGroupSpecOutput) Template() WorkloadGroupSpecTemplatePtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpec) *WorkloadGroupSpecTemplate { return v.Template }).(WorkloadGroupSpecTemplatePtrOutput)
}

type WorkloadGroupSpecPtrOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpec)(nil)).Elem()
}

func (o WorkloadGroupSpecPtrOutput) ToWorkloadGroupSpecPtrOutput() WorkloadGroupSpecPtrOutput {
	return o
}

func (o WorkloadGroupSpecPtrOutput) ToWorkloadGroupSpecPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecPtrOutput {
	return o
}

func (o WorkloadGroupSpecPtrOutput) Elem() WorkloadGroupSpecOutput {
	return o.ApplyT(func(v *WorkloadGroupSpec) WorkloadGroupSpec {
		if v != nil {
			return *v
		}
		var ret WorkloadGroupSpec
		return ret
	}).(WorkloadGroupSpecOutput)
}

func (o WorkloadGroupSpecPtrOutput) Metadata() WorkloadGroupSpecMetadataPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpec) *WorkloadGroupSpecMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(WorkloadGroupSpecMetadataPtrOutput)
}

func (o WorkloadGroupSpecPtrOutput) Probe() WorkloadGroupSpecProbePtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpec) *WorkloadGroupSpecProbe {
		if v == nil {
			return nil
		}
		return v.Probe
	}).(WorkloadGroupSpecProbePtrOutput)
}

func (o WorkloadGroupSpecPtrOutput) Template() WorkloadGroupSpecTemplatePtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpec) *WorkloadGroupSpecTemplate {
		if v == nil {
			return nil
		}
		return v.Template
	}).(WorkloadGroupSpecTemplatePtrOutput)
}

// Metadata that will be used for all corresponding `WorkloadEntries`.
type WorkloadGroupSpecMetadata struct {
	Annotations map[string]string `pulumi:"annotations"`
	Labels      map[string]string `pulumi:"labels"`
}

// WorkloadGroupSpecMetadataInput is an input type that accepts WorkloadGroupSpecMetadataArgs and WorkloadGroupSpecMetadataOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecMetadataInput` via:
//
//	WorkloadGroupSpecMetadataArgs{...}
type WorkloadGroupSpecMetadataInput interface {
	pulumi.Input

	ToWorkloadGroupSpecMetadataOutput() WorkloadGroupSpecMetadataOutput
	ToWorkloadGroupSpecMetadataOutputWithContext(context.Context) WorkloadGroupSpecMetadataOutput
}

// Metadata that will be used for all corresponding `WorkloadEntries`.
type WorkloadGroupSpecMetadataArgs struct {
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	Labels      pulumi.StringMapInput `pulumi:"labels"`
}

func (WorkloadGroupSpecMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecMetadata)(nil)).Elem()
}

func (i WorkloadGroupSpecMetadataArgs) ToWorkloadGroupSpecMetadataOutput() WorkloadGroupSpecMetadataOutput {
	return i.ToWorkloadGroupSpecMetadataOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecMetadataArgs) ToWorkloadGroupSpecMetadataOutputWithContext(ctx context.Context) WorkloadGroupSpecMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecMetadataOutput)
}

func (i WorkloadGroupSpecMetadataArgs) ToWorkloadGroupSpecMetadataPtrOutput() WorkloadGroupSpecMetadataPtrOutput {
	return i.ToWorkloadGroupSpecMetadataPtrOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecMetadataArgs) ToWorkloadGroupSpecMetadataPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecMetadataOutput).ToWorkloadGroupSpecMetadataPtrOutputWithContext(ctx)
}

// WorkloadGroupSpecMetadataPtrInput is an input type that accepts WorkloadGroupSpecMetadataArgs, WorkloadGroupSpecMetadataPtr and WorkloadGroupSpecMetadataPtrOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecMetadataPtrInput` via:
//
//	        WorkloadGroupSpecMetadataArgs{...}
//
//	or:
//
//	        nil
type WorkloadGroupSpecMetadataPtrInput interface {
	pulumi.Input

	ToWorkloadGroupSpecMetadataPtrOutput() WorkloadGroupSpecMetadataPtrOutput
	ToWorkloadGroupSpecMetadataPtrOutputWithContext(context.Context) WorkloadGroupSpecMetadataPtrOutput
}

type workloadGroupSpecMetadataPtrType WorkloadGroupSpecMetadataArgs

func WorkloadGroupSpecMetadataPtr(v *WorkloadGroupSpecMetadataArgs) WorkloadGroupSpecMetadataPtrInput {
	return (*workloadGroupSpecMetadataPtrType)(v)
}

func (*workloadGroupSpecMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecMetadata)(nil)).Elem()
}

func (i *workloadGroupSpecMetadataPtrType) ToWorkloadGroupSpecMetadataPtrOutput() WorkloadGroupSpecMetadataPtrOutput {
	return i.ToWorkloadGroupSpecMetadataPtrOutputWithContext(context.Background())
}

func (i *workloadGroupSpecMetadataPtrType) ToWorkloadGroupSpecMetadataPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecMetadataPtrOutput)
}

// Metadata that will be used for all corresponding `WorkloadEntries`.
type WorkloadGroupSpecMetadataOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecMetadata)(nil)).Elem()
}

func (o WorkloadGroupSpecMetadataOutput) ToWorkloadGroupSpecMetadataOutput() WorkloadGroupSpecMetadataOutput {
	return o
}

func (o WorkloadGroupSpecMetadataOutput) ToWorkloadGroupSpecMetadataOutputWithContext(ctx context.Context) WorkloadGroupSpecMetadataOutput {
	return o
}

func (o WorkloadGroupSpecMetadataOutput) ToWorkloadGroupSpecMetadataPtrOutput() WorkloadGroupSpecMetadataPtrOutput {
	return o.ToWorkloadGroupSpecMetadataPtrOutputWithContext(context.Background())
}

func (o WorkloadGroupSpecMetadataOutput) ToWorkloadGroupSpecMetadataPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadGroupSpecMetadata) *WorkloadGroupSpecMetadata {
		return &v
	}).(WorkloadGroupSpecMetadataPtrOutput)
}

func (o WorkloadGroupSpecMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkloadGroupSpecMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

func (o WorkloadGroupSpecMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkloadGroupSpecMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type WorkloadGroupSpecMetadataPtrOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecMetadata)(nil)).Elem()
}

func (o WorkloadGroupSpecMetadataPtrOutput) ToWorkloadGroupSpecMetadataPtrOutput() WorkloadGroupSpecMetadataPtrOutput {
	return o
}

func (o WorkloadGroupSpecMetadataPtrOutput) ToWorkloadGroupSpecMetadataPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecMetadataPtrOutput {
	return o
}

func (o WorkloadGroupSpecMetadataPtrOutput) Elem() WorkloadGroupSpecMetadataOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecMetadata) WorkloadGroupSpecMetadata {
		if v != nil {
			return *v
		}
		var ret WorkloadGroupSpecMetadata
		return ret
	}).(WorkloadGroupSpecMetadataOutput)
}

func (o WorkloadGroupSpecMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

func (o WorkloadGroupSpecMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Metadata that will be used for all corresponding `WorkloadEntries`.
type WorkloadGroupSpecMetadataPatch struct {
	Annotations map[string]string `pulumi:"annotations"`
	Labels      map[string]string `pulumi:"labels"`
}

// WorkloadGroupSpecMetadataPatchInput is an input type that accepts WorkloadGroupSpecMetadataPatchArgs and WorkloadGroupSpecMetadataPatchOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecMetadataPatchInput` via:
//
//	WorkloadGroupSpecMetadataPatchArgs{...}
type WorkloadGroupSpecMetadataPatchInput interface {
	pulumi.Input

	ToWorkloadGroupSpecMetadataPatchOutput() WorkloadGroupSpecMetadataPatchOutput
	ToWorkloadGroupSpecMetadataPatchOutputWithContext(context.Context) WorkloadGroupSpecMetadataPatchOutput
}

// Metadata that will be used for all corresponding `WorkloadEntries`.
type WorkloadGroupSpecMetadataPatchArgs struct {
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	Labels      pulumi.StringMapInput `pulumi:"labels"`
}

func (WorkloadGroupSpecMetadataPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecMetadataPatch)(nil)).Elem()
}

func (i WorkloadGroupSpecMetadataPatchArgs) ToWorkloadGroupSpecMetadataPatchOutput() WorkloadGroupSpecMetadataPatchOutput {
	return i.ToWorkloadGroupSpecMetadataPatchOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecMetadataPatchArgs) ToWorkloadGroupSpecMetadataPatchOutputWithContext(ctx context.Context) WorkloadGroupSpecMetadataPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecMetadataPatchOutput)
}

func (i WorkloadGroupSpecMetadataPatchArgs) ToWorkloadGroupSpecMetadataPatchPtrOutput() WorkloadGroupSpecMetadataPatchPtrOutput {
	return i.ToWorkloadGroupSpecMetadataPatchPtrOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecMetadataPatchArgs) ToWorkloadGroupSpecMetadataPatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecMetadataPatchOutput).ToWorkloadGroupSpecMetadataPatchPtrOutputWithContext(ctx)
}

// WorkloadGroupSpecMetadataPatchPtrInput is an input type that accepts WorkloadGroupSpecMetadataPatchArgs, WorkloadGroupSpecMetadataPatchPtr and WorkloadGroupSpecMetadataPatchPtrOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecMetadataPatchPtrInput` via:
//
//	        WorkloadGroupSpecMetadataPatchArgs{...}
//
//	or:
//
//	        nil
type WorkloadGroupSpecMetadataPatchPtrInput interface {
	pulumi.Input

	ToWorkloadGroupSpecMetadataPatchPtrOutput() WorkloadGroupSpecMetadataPatchPtrOutput
	ToWorkloadGroupSpecMetadataPatchPtrOutputWithContext(context.Context) WorkloadGroupSpecMetadataPatchPtrOutput
}

type workloadGroupSpecMetadataPatchPtrType WorkloadGroupSpecMetadataPatchArgs

func WorkloadGroupSpecMetadataPatchPtr(v *WorkloadGroupSpecMetadataPatchArgs) WorkloadGroupSpecMetadataPatchPtrInput {
	return (*workloadGroupSpecMetadataPatchPtrType)(v)
}

func (*workloadGroupSpecMetadataPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecMetadataPatch)(nil)).Elem()
}

func (i *workloadGroupSpecMetadataPatchPtrType) ToWorkloadGroupSpecMetadataPatchPtrOutput() WorkloadGroupSpecMetadataPatchPtrOutput {
	return i.ToWorkloadGroupSpecMetadataPatchPtrOutputWithContext(context.Background())
}

func (i *workloadGroupSpecMetadataPatchPtrType) ToWorkloadGroupSpecMetadataPatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecMetadataPatchPtrOutput)
}

// Metadata that will be used for all corresponding `WorkloadEntries`.
type WorkloadGroupSpecMetadataPatchOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecMetadataPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecMetadataPatch)(nil)).Elem()
}

func (o WorkloadGroupSpecMetadataPatchOutput) ToWorkloadGroupSpecMetadataPatchOutput() WorkloadGroupSpecMetadataPatchOutput {
	return o
}

func (o WorkloadGroupSpecMetadataPatchOutput) ToWorkloadGroupSpecMetadataPatchOutputWithContext(ctx context.Context) WorkloadGroupSpecMetadataPatchOutput {
	return o
}

func (o WorkloadGroupSpecMetadataPatchOutput) ToWorkloadGroupSpecMetadataPatchPtrOutput() WorkloadGroupSpecMetadataPatchPtrOutput {
	return o.ToWorkloadGroupSpecMetadataPatchPtrOutputWithContext(context.Background())
}

func (o WorkloadGroupSpecMetadataPatchOutput) ToWorkloadGroupSpecMetadataPatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecMetadataPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadGroupSpecMetadataPatch) *WorkloadGroupSpecMetadataPatch {
		return &v
	}).(WorkloadGroupSpecMetadataPatchPtrOutput)
}

func (o WorkloadGroupSpecMetadataPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkloadGroupSpecMetadataPatch) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

func (o WorkloadGroupSpecMetadataPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkloadGroupSpecMetadataPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type WorkloadGroupSpecMetadataPatchPtrOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecMetadataPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecMetadataPatch)(nil)).Elem()
}

func (o WorkloadGroupSpecMetadataPatchPtrOutput) ToWorkloadGroupSpecMetadataPatchPtrOutput() WorkloadGroupSpecMetadataPatchPtrOutput {
	return o
}

func (o WorkloadGroupSpecMetadataPatchPtrOutput) ToWorkloadGroupSpecMetadataPatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecMetadataPatchPtrOutput {
	return o
}

func (o WorkloadGroupSpecMetadataPatchPtrOutput) Elem() WorkloadGroupSpecMetadataPatchOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecMetadataPatch) WorkloadGroupSpecMetadataPatch {
		if v != nil {
			return *v
		}
		var ret WorkloadGroupSpecMetadataPatch
		return ret
	}).(WorkloadGroupSpecMetadataPatchOutput)
}

func (o WorkloadGroupSpecMetadataPatchPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

func (o WorkloadGroupSpecMetadataPatchPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// `WorkloadGroup` enables specifying the properties of a single workload for bootstrap and provides a template for `WorkloadEntry`, similar to how `Deployment` specifies properties of workloads via `Pod` templates.
type WorkloadGroupSpecPatch struct {
	Metadata *WorkloadGroupSpecMetadataPatch `pulumi:"metadata"`
	Probe    *WorkloadGroupSpecProbePatch    `pulumi:"probe"`
	Template *WorkloadGroupSpecTemplatePatch `pulumi:"template"`
}

// WorkloadGroupSpecPatchInput is an input type that accepts WorkloadGroupSpecPatchArgs and WorkloadGroupSpecPatchOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecPatchInput` via:
//
//	WorkloadGroupSpecPatchArgs{...}
type WorkloadGroupSpecPatchInput interface {
	pulumi.Input

	ToWorkloadGroupSpecPatchOutput() WorkloadGroupSpecPatchOutput
	ToWorkloadGroupSpecPatchOutputWithContext(context.Context) WorkloadGroupSpecPatchOutput
}

// `WorkloadGroup` enables specifying the properties of a single workload for bootstrap and provides a template for `WorkloadEntry`, similar to how `Deployment` specifies properties of workloads via `Pod` templates.
type WorkloadGroupSpecPatchArgs struct {
	Metadata WorkloadGroupSpecMetadataPatchPtrInput `pulumi:"metadata"`
	Probe    WorkloadGroupSpecProbePatchPtrInput    `pulumi:"probe"`
	Template WorkloadGroupSpecTemplatePatchPtrInput `pulumi:"template"`
}

func (WorkloadGroupSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecPatch)(nil)).Elem()
}

func (i WorkloadGroupSpecPatchArgs) ToWorkloadGroupSpecPatchOutput() WorkloadGroupSpecPatchOutput {
	return i.ToWorkloadGroupSpecPatchOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecPatchArgs) ToWorkloadGroupSpecPatchOutputWithContext(ctx context.Context) WorkloadGroupSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecPatchOutput)
}

func (i WorkloadGroupSpecPatchArgs) ToWorkloadGroupSpecPatchPtrOutput() WorkloadGroupSpecPatchPtrOutput {
	return i.ToWorkloadGroupSpecPatchPtrOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecPatchArgs) ToWorkloadGroupSpecPatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecPatchOutput).ToWorkloadGroupSpecPatchPtrOutputWithContext(ctx)
}

// WorkloadGroupSpecPatchPtrInput is an input type that accepts WorkloadGroupSpecPatchArgs, WorkloadGroupSpecPatchPtr and WorkloadGroupSpecPatchPtrOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecPatchPtrInput` via:
//
//	        WorkloadGroupSpecPatchArgs{...}
//
//	or:
//
//	        nil
type WorkloadGroupSpecPatchPtrInput interface {
	pulumi.Input

	ToWorkloadGroupSpecPatchPtrOutput() WorkloadGroupSpecPatchPtrOutput
	ToWorkloadGroupSpecPatchPtrOutputWithContext(context.Context) WorkloadGroupSpecPatchPtrOutput
}

type workloadGroupSpecPatchPtrType WorkloadGroupSpecPatchArgs

func WorkloadGroupSpecPatchPtr(v *WorkloadGroupSpecPatchArgs) WorkloadGroupSpecPatchPtrInput {
	return (*workloadGroupSpecPatchPtrType)(v)
}

func (*workloadGroupSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecPatch)(nil)).Elem()
}

func (i *workloadGroupSpecPatchPtrType) ToWorkloadGroupSpecPatchPtrOutput() WorkloadGroupSpecPatchPtrOutput {
	return i.ToWorkloadGroupSpecPatchPtrOutputWithContext(context.Background())
}

func (i *workloadGroupSpecPatchPtrType) ToWorkloadGroupSpecPatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecPatchPtrOutput)
}

// `WorkloadGroup` enables specifying the properties of a single workload for bootstrap and provides a template for `WorkloadEntry`, similar to how `Deployment` specifies properties of workloads via `Pod` templates.
type WorkloadGroupSpecPatchOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecPatch)(nil)).Elem()
}

func (o WorkloadGroupSpecPatchOutput) ToWorkloadGroupSpecPatchOutput() WorkloadGroupSpecPatchOutput {
	return o
}

func (o WorkloadGroupSpecPatchOutput) ToWorkloadGroupSpecPatchOutputWithContext(ctx context.Context) WorkloadGroupSpecPatchOutput {
	return o
}

func (o WorkloadGroupSpecPatchOutput) ToWorkloadGroupSpecPatchPtrOutput() WorkloadGroupSpecPatchPtrOutput {
	return o.ToWorkloadGroupSpecPatchPtrOutputWithContext(context.Background())
}

func (o WorkloadGroupSpecPatchOutput) ToWorkloadGroupSpecPatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadGroupSpecPatch) *WorkloadGroupSpecPatch {
		return &v
	}).(WorkloadGroupSpecPatchPtrOutput)
}

func (o WorkloadGroupSpecPatchOutput) Metadata() WorkloadGroupSpecMetadataPatchPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecPatch) *WorkloadGroupSpecMetadataPatch { return v.Metadata }).(WorkloadGroupSpecMetadataPatchPtrOutput)
}

func (o WorkloadGroupSpecPatchOutput) Probe() WorkloadGroupSpecProbePatchPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecPatch) *WorkloadGroupSpecProbePatch { return v.Probe }).(WorkloadGroupSpecProbePatchPtrOutput)
}

func (o WorkloadGroupSpecPatchOutput) Template() WorkloadGroupSpecTemplatePatchPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecPatch) *WorkloadGroupSpecTemplatePatch { return v.Template }).(WorkloadGroupSpecTemplatePatchPtrOutput)
}

type WorkloadGroupSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecPatch)(nil)).Elem()
}

func (o WorkloadGroupSpecPatchPtrOutput) ToWorkloadGroupSpecPatchPtrOutput() WorkloadGroupSpecPatchPtrOutput {
	return o
}

func (o WorkloadGroupSpecPatchPtrOutput) ToWorkloadGroupSpecPatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecPatchPtrOutput {
	return o
}

func (o WorkloadGroupSpecPatchPtrOutput) Elem() WorkloadGroupSpecPatchOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecPatch) WorkloadGroupSpecPatch {
		if v != nil {
			return *v
		}
		var ret WorkloadGroupSpecPatch
		return ret
	}).(WorkloadGroupSpecPatchOutput)
}

func (o WorkloadGroupSpecPatchPtrOutput) Metadata() WorkloadGroupSpecMetadataPatchPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecPatch) *WorkloadGroupSpecMetadataPatch {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(WorkloadGroupSpecMetadataPatchPtrOutput)
}

func (o WorkloadGroupSpecPatchPtrOutput) Probe() WorkloadGroupSpecProbePatchPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecPatch) *WorkloadGroupSpecProbePatch {
		if v == nil {
			return nil
		}
		return v.Probe
	}).(WorkloadGroupSpecProbePatchPtrOutput)
}

func (o WorkloadGroupSpecPatchPtrOutput) Template() WorkloadGroupSpecTemplatePatchPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecPatch) *WorkloadGroupSpecTemplatePatch {
		if v == nil {
			return nil
		}
		return v.Template
	}).(WorkloadGroupSpecTemplatePatchPtrOutput)
}

// `ReadinessProbe` describes the configuration the user must provide for healthchecking on their workload.
type WorkloadGroupSpecProbe struct {
	Exec *WorkloadGroupSpecProbeExec `pulumi:"exec"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded.
	FailureThreshold *int                           `pulumi:"failureThreshold"`
	HttpGet          *WorkloadGroupSpecProbeHttpGet `pulumi:"httpGet"`
	// Number of seconds after the container has started before readiness probes are initiated.
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed.
	SuccessThreshold *int                             `pulumi:"successThreshold"`
	TcpSocket        *WorkloadGroupSpecProbeTcpSocket `pulumi:"tcpSocket"`
	// Number of seconds after which the probe times out.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// WorkloadGroupSpecProbeInput is an input type that accepts WorkloadGroupSpecProbeArgs and WorkloadGroupSpecProbeOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecProbeInput` via:
//
//	WorkloadGroupSpecProbeArgs{...}
type WorkloadGroupSpecProbeInput interface {
	pulumi.Input

	ToWorkloadGroupSpecProbeOutput() WorkloadGroupSpecProbeOutput
	ToWorkloadGroupSpecProbeOutputWithContext(context.Context) WorkloadGroupSpecProbeOutput
}

// `ReadinessProbe` describes the configuration the user must provide for healthchecking on their workload.
type WorkloadGroupSpecProbeArgs struct {
	Exec WorkloadGroupSpecProbeExecPtrInput `pulumi:"exec"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded.
	FailureThreshold pulumi.IntPtrInput                    `pulumi:"failureThreshold"`
	HttpGet          WorkloadGroupSpecProbeHttpGetPtrInput `pulumi:"httpGet"`
	// Number of seconds after the container has started before readiness probes are initiated.
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed.
	SuccessThreshold pulumi.IntPtrInput                      `pulumi:"successThreshold"`
	TcpSocket        WorkloadGroupSpecProbeTcpSocketPtrInput `pulumi:"tcpSocket"`
	// Number of seconds after which the probe times out.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (WorkloadGroupSpecProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecProbe)(nil)).Elem()
}

func (i WorkloadGroupSpecProbeArgs) ToWorkloadGroupSpecProbeOutput() WorkloadGroupSpecProbeOutput {
	return i.ToWorkloadGroupSpecProbeOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecProbeArgs) ToWorkloadGroupSpecProbeOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeOutput)
}

func (i WorkloadGroupSpecProbeArgs) ToWorkloadGroupSpecProbePtrOutput() WorkloadGroupSpecProbePtrOutput {
	return i.ToWorkloadGroupSpecProbePtrOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecProbeArgs) ToWorkloadGroupSpecProbePtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeOutput).ToWorkloadGroupSpecProbePtrOutputWithContext(ctx)
}

// WorkloadGroupSpecProbePtrInput is an input type that accepts WorkloadGroupSpecProbeArgs, WorkloadGroupSpecProbePtr and WorkloadGroupSpecProbePtrOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecProbePtrInput` via:
//
//	        WorkloadGroupSpecProbeArgs{...}
//
//	or:
//
//	        nil
type WorkloadGroupSpecProbePtrInput interface {
	pulumi.Input

	ToWorkloadGroupSpecProbePtrOutput() WorkloadGroupSpecProbePtrOutput
	ToWorkloadGroupSpecProbePtrOutputWithContext(context.Context) WorkloadGroupSpecProbePtrOutput
}

type workloadGroupSpecProbePtrType WorkloadGroupSpecProbeArgs

func WorkloadGroupSpecProbePtr(v *WorkloadGroupSpecProbeArgs) WorkloadGroupSpecProbePtrInput {
	return (*workloadGroupSpecProbePtrType)(v)
}

func (*workloadGroupSpecProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecProbe)(nil)).Elem()
}

func (i *workloadGroupSpecProbePtrType) ToWorkloadGroupSpecProbePtrOutput() WorkloadGroupSpecProbePtrOutput {
	return i.ToWorkloadGroupSpecProbePtrOutputWithContext(context.Background())
}

func (i *workloadGroupSpecProbePtrType) ToWorkloadGroupSpecProbePtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbePtrOutput)
}

// `ReadinessProbe` describes the configuration the user must provide for healthchecking on their workload.
type WorkloadGroupSpecProbeOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecProbe)(nil)).Elem()
}

func (o WorkloadGroupSpecProbeOutput) ToWorkloadGroupSpecProbeOutput() WorkloadGroupSpecProbeOutput {
	return o
}

func (o WorkloadGroupSpecProbeOutput) ToWorkloadGroupSpecProbeOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeOutput {
	return o
}

func (o WorkloadGroupSpecProbeOutput) ToWorkloadGroupSpecProbePtrOutput() WorkloadGroupSpecProbePtrOutput {
	return o.ToWorkloadGroupSpecProbePtrOutputWithContext(context.Background())
}

func (o WorkloadGroupSpecProbeOutput) ToWorkloadGroupSpecProbePtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadGroupSpecProbe) *WorkloadGroupSpecProbe {
		return &v
	}).(WorkloadGroupSpecProbePtrOutput)
}

func (o WorkloadGroupSpecProbeOutput) Exec() WorkloadGroupSpecProbeExecPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbe) *WorkloadGroupSpecProbeExec { return v.Exec }).(WorkloadGroupSpecProbeExecPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded.
func (o WorkloadGroupSpecProbeOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbe) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

func (o WorkloadGroupSpecProbeOutput) HttpGet() WorkloadGroupSpecProbeHttpGetPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbe) *WorkloadGroupSpecProbeHttpGet { return v.HttpGet }).(WorkloadGroupSpecProbeHttpGetPtrOutput)
}

// Number of seconds after the container has started before readiness probes are initiated.
func (o WorkloadGroupSpecProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe.
func (o WorkloadGroupSpecProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed.
func (o WorkloadGroupSpecProbeOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbe) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

func (o WorkloadGroupSpecProbeOutput) TcpSocket() WorkloadGroupSpecProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbe) *WorkloadGroupSpecProbeTcpSocket { return v.TcpSocket }).(WorkloadGroupSpecProbeTcpSocketPtrOutput)
}

// Number of seconds after which the probe times out.
func (o WorkloadGroupSpecProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type WorkloadGroupSpecProbePtrOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecProbe)(nil)).Elem()
}

func (o WorkloadGroupSpecProbePtrOutput) ToWorkloadGroupSpecProbePtrOutput() WorkloadGroupSpecProbePtrOutput {
	return o
}

func (o WorkloadGroupSpecProbePtrOutput) ToWorkloadGroupSpecProbePtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbePtrOutput {
	return o
}

func (o WorkloadGroupSpecProbePtrOutput) Elem() WorkloadGroupSpecProbeOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbe) WorkloadGroupSpecProbe {
		if v != nil {
			return *v
		}
		var ret WorkloadGroupSpecProbe
		return ret
	}).(WorkloadGroupSpecProbeOutput)
}

func (o WorkloadGroupSpecProbePtrOutput) Exec() WorkloadGroupSpecProbeExecPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbe) *WorkloadGroupSpecProbeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(WorkloadGroupSpecProbeExecPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded.
func (o WorkloadGroupSpecProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbe) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadGroupSpecProbePtrOutput) HttpGet() WorkloadGroupSpecProbeHttpGetPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbe) *WorkloadGroupSpecProbeHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGet
	}).(WorkloadGroupSpecProbeHttpGetPtrOutput)
}

// Number of seconds after the container has started before readiness probes are initiated.
func (o WorkloadGroupSpecProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe.
func (o WorkloadGroupSpecProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed.
func (o WorkloadGroupSpecProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbe) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadGroupSpecProbePtrOutput) TcpSocket() WorkloadGroupSpecProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbe) *WorkloadGroupSpecProbeTcpSocket {
		if v == nil {
			return nil
		}
		return v.TcpSocket
	}).(WorkloadGroupSpecProbeTcpSocketPtrOutput)
}

// Number of seconds after which the probe times out.
func (o WorkloadGroupSpecProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Health is determined by how the command that is executed exited.
type WorkloadGroupSpecProbeExec struct {
	// Command to run.
	Command []string `pulumi:"command"`
}

// WorkloadGroupSpecProbeExecInput is an input type that accepts WorkloadGroupSpecProbeExecArgs and WorkloadGroupSpecProbeExecOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecProbeExecInput` via:
//
//	WorkloadGroupSpecProbeExecArgs{...}
type WorkloadGroupSpecProbeExecInput interface {
	pulumi.Input

	ToWorkloadGroupSpecProbeExecOutput() WorkloadGroupSpecProbeExecOutput
	ToWorkloadGroupSpecProbeExecOutputWithContext(context.Context) WorkloadGroupSpecProbeExecOutput
}

// Health is determined by how the command that is executed exited.
type WorkloadGroupSpecProbeExecArgs struct {
	// Command to run.
	Command pulumi.StringArrayInput `pulumi:"command"`
}

func (WorkloadGroupSpecProbeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecProbeExec)(nil)).Elem()
}

func (i WorkloadGroupSpecProbeExecArgs) ToWorkloadGroupSpecProbeExecOutput() WorkloadGroupSpecProbeExecOutput {
	return i.ToWorkloadGroupSpecProbeExecOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecProbeExecArgs) ToWorkloadGroupSpecProbeExecOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeExecOutput)
}

func (i WorkloadGroupSpecProbeExecArgs) ToWorkloadGroupSpecProbeExecPtrOutput() WorkloadGroupSpecProbeExecPtrOutput {
	return i.ToWorkloadGroupSpecProbeExecPtrOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecProbeExecArgs) ToWorkloadGroupSpecProbeExecPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeExecOutput).ToWorkloadGroupSpecProbeExecPtrOutputWithContext(ctx)
}

// WorkloadGroupSpecProbeExecPtrInput is an input type that accepts WorkloadGroupSpecProbeExecArgs, WorkloadGroupSpecProbeExecPtr and WorkloadGroupSpecProbeExecPtrOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecProbeExecPtrInput` via:
//
//	        WorkloadGroupSpecProbeExecArgs{...}
//
//	or:
//
//	        nil
type WorkloadGroupSpecProbeExecPtrInput interface {
	pulumi.Input

	ToWorkloadGroupSpecProbeExecPtrOutput() WorkloadGroupSpecProbeExecPtrOutput
	ToWorkloadGroupSpecProbeExecPtrOutputWithContext(context.Context) WorkloadGroupSpecProbeExecPtrOutput
}

type workloadGroupSpecProbeExecPtrType WorkloadGroupSpecProbeExecArgs

func WorkloadGroupSpecProbeExecPtr(v *WorkloadGroupSpecProbeExecArgs) WorkloadGroupSpecProbeExecPtrInput {
	return (*workloadGroupSpecProbeExecPtrType)(v)
}

func (*workloadGroupSpecProbeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecProbeExec)(nil)).Elem()
}

func (i *workloadGroupSpecProbeExecPtrType) ToWorkloadGroupSpecProbeExecPtrOutput() WorkloadGroupSpecProbeExecPtrOutput {
	return i.ToWorkloadGroupSpecProbeExecPtrOutputWithContext(context.Background())
}

func (i *workloadGroupSpecProbeExecPtrType) ToWorkloadGroupSpecProbeExecPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeExecPtrOutput)
}

// Health is determined by how the command that is executed exited.
type WorkloadGroupSpecProbeExecOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecProbeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecProbeExec)(nil)).Elem()
}

func (o WorkloadGroupSpecProbeExecOutput) ToWorkloadGroupSpecProbeExecOutput() WorkloadGroupSpecProbeExecOutput {
	return o
}

func (o WorkloadGroupSpecProbeExecOutput) ToWorkloadGroupSpecProbeExecOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeExecOutput {
	return o
}

func (o WorkloadGroupSpecProbeExecOutput) ToWorkloadGroupSpecProbeExecPtrOutput() WorkloadGroupSpecProbeExecPtrOutput {
	return o.ToWorkloadGroupSpecProbeExecPtrOutputWithContext(context.Background())
}

func (o WorkloadGroupSpecProbeExecOutput) ToWorkloadGroupSpecProbeExecPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadGroupSpecProbeExec) *WorkloadGroupSpecProbeExec {
		return &v
	}).(WorkloadGroupSpecProbeExecPtrOutput)
}

// Command to run.
func (o WorkloadGroupSpecProbeExecOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbeExec) []string { return v.Command }).(pulumi.StringArrayOutput)
}

type WorkloadGroupSpecProbeExecPtrOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecProbeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecProbeExec)(nil)).Elem()
}

func (o WorkloadGroupSpecProbeExecPtrOutput) ToWorkloadGroupSpecProbeExecPtrOutput() WorkloadGroupSpecProbeExecPtrOutput {
	return o
}

func (o WorkloadGroupSpecProbeExecPtrOutput) ToWorkloadGroupSpecProbeExecPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeExecPtrOutput {
	return o
}

func (o WorkloadGroupSpecProbeExecPtrOutput) Elem() WorkloadGroupSpecProbeExecOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbeExec) WorkloadGroupSpecProbeExec {
		if v != nil {
			return *v
		}
		var ret WorkloadGroupSpecProbeExec
		return ret
	}).(WorkloadGroupSpecProbeExecOutput)
}

// Command to run.
func (o WorkloadGroupSpecProbeExecPtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbeExec) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

// Health is determined by how the command that is executed exited.
type WorkloadGroupSpecProbeExecPatch struct {
	// Command to run.
	Command []string `pulumi:"command"`
}

// WorkloadGroupSpecProbeExecPatchInput is an input type that accepts WorkloadGroupSpecProbeExecPatchArgs and WorkloadGroupSpecProbeExecPatchOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecProbeExecPatchInput` via:
//
//	WorkloadGroupSpecProbeExecPatchArgs{...}
type WorkloadGroupSpecProbeExecPatchInput interface {
	pulumi.Input

	ToWorkloadGroupSpecProbeExecPatchOutput() WorkloadGroupSpecProbeExecPatchOutput
	ToWorkloadGroupSpecProbeExecPatchOutputWithContext(context.Context) WorkloadGroupSpecProbeExecPatchOutput
}

// Health is determined by how the command that is executed exited.
type WorkloadGroupSpecProbeExecPatchArgs struct {
	// Command to run.
	Command pulumi.StringArrayInput `pulumi:"command"`
}

func (WorkloadGroupSpecProbeExecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecProbeExecPatch)(nil)).Elem()
}

func (i WorkloadGroupSpecProbeExecPatchArgs) ToWorkloadGroupSpecProbeExecPatchOutput() WorkloadGroupSpecProbeExecPatchOutput {
	return i.ToWorkloadGroupSpecProbeExecPatchOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecProbeExecPatchArgs) ToWorkloadGroupSpecProbeExecPatchOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeExecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeExecPatchOutput)
}

func (i WorkloadGroupSpecProbeExecPatchArgs) ToWorkloadGroupSpecProbeExecPatchPtrOutput() WorkloadGroupSpecProbeExecPatchPtrOutput {
	return i.ToWorkloadGroupSpecProbeExecPatchPtrOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecProbeExecPatchArgs) ToWorkloadGroupSpecProbeExecPatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeExecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeExecPatchOutput).ToWorkloadGroupSpecProbeExecPatchPtrOutputWithContext(ctx)
}

// WorkloadGroupSpecProbeExecPatchPtrInput is an input type that accepts WorkloadGroupSpecProbeExecPatchArgs, WorkloadGroupSpecProbeExecPatchPtr and WorkloadGroupSpecProbeExecPatchPtrOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecProbeExecPatchPtrInput` via:
//
//	        WorkloadGroupSpecProbeExecPatchArgs{...}
//
//	or:
//
//	        nil
type WorkloadGroupSpecProbeExecPatchPtrInput interface {
	pulumi.Input

	ToWorkloadGroupSpecProbeExecPatchPtrOutput() WorkloadGroupSpecProbeExecPatchPtrOutput
	ToWorkloadGroupSpecProbeExecPatchPtrOutputWithContext(context.Context) WorkloadGroupSpecProbeExecPatchPtrOutput
}

type workloadGroupSpecProbeExecPatchPtrType WorkloadGroupSpecProbeExecPatchArgs

func WorkloadGroupSpecProbeExecPatchPtr(v *WorkloadGroupSpecProbeExecPatchArgs) WorkloadGroupSpecProbeExecPatchPtrInput {
	return (*workloadGroupSpecProbeExecPatchPtrType)(v)
}

func (*workloadGroupSpecProbeExecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecProbeExecPatch)(nil)).Elem()
}

func (i *workloadGroupSpecProbeExecPatchPtrType) ToWorkloadGroupSpecProbeExecPatchPtrOutput() WorkloadGroupSpecProbeExecPatchPtrOutput {
	return i.ToWorkloadGroupSpecProbeExecPatchPtrOutputWithContext(context.Background())
}

func (i *workloadGroupSpecProbeExecPatchPtrType) ToWorkloadGroupSpecProbeExecPatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeExecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeExecPatchPtrOutput)
}

// Health is determined by how the command that is executed exited.
type WorkloadGroupSpecProbeExecPatchOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecProbeExecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecProbeExecPatch)(nil)).Elem()
}

func (o WorkloadGroupSpecProbeExecPatchOutput) ToWorkloadGroupSpecProbeExecPatchOutput() WorkloadGroupSpecProbeExecPatchOutput {
	return o
}

func (o WorkloadGroupSpecProbeExecPatchOutput) ToWorkloadGroupSpecProbeExecPatchOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeExecPatchOutput {
	return o
}

func (o WorkloadGroupSpecProbeExecPatchOutput) ToWorkloadGroupSpecProbeExecPatchPtrOutput() WorkloadGroupSpecProbeExecPatchPtrOutput {
	return o.ToWorkloadGroupSpecProbeExecPatchPtrOutputWithContext(context.Background())
}

func (o WorkloadGroupSpecProbeExecPatchOutput) ToWorkloadGroupSpecProbeExecPatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeExecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadGroupSpecProbeExecPatch) *WorkloadGroupSpecProbeExecPatch {
		return &v
	}).(WorkloadGroupSpecProbeExecPatchPtrOutput)
}

// Command to run.
func (o WorkloadGroupSpecProbeExecPatchOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbeExecPatch) []string { return v.Command }).(pulumi.StringArrayOutput)
}

type WorkloadGroupSpecProbeExecPatchPtrOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecProbeExecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecProbeExecPatch)(nil)).Elem()
}

func (o WorkloadGroupSpecProbeExecPatchPtrOutput) ToWorkloadGroupSpecProbeExecPatchPtrOutput() WorkloadGroupSpecProbeExecPatchPtrOutput {
	return o
}

func (o WorkloadGroupSpecProbeExecPatchPtrOutput) ToWorkloadGroupSpecProbeExecPatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeExecPatchPtrOutput {
	return o
}

func (o WorkloadGroupSpecProbeExecPatchPtrOutput) Elem() WorkloadGroupSpecProbeExecPatchOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbeExecPatch) WorkloadGroupSpecProbeExecPatch {
		if v != nil {
			return *v
		}
		var ret WorkloadGroupSpecProbeExecPatch
		return ret
	}).(WorkloadGroupSpecProbeExecPatchOutput)
}

// Command to run.
func (o WorkloadGroupSpecProbeExecPatchPtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbeExecPatch) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

// `httpGet` is performed to a given endpoint and the status/able to connect determines health.
type WorkloadGroupSpecProbeHttpGet struct {
	// Host name to connect to, defaults to the pod IP.
	Host *string `pulumi:"host"`
	// Headers the proxy will pass on to make the request.
	HttpHeaders []WorkloadGroupSpecProbeHttpGetHttpHeaders `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path *string `pulumi:"path"`
	// Port on which the endpoint lives.
	Port   *int    `pulumi:"port"`
	Scheme *string `pulumi:"scheme"`
}

// WorkloadGroupSpecProbeHttpGetInput is an input type that accepts WorkloadGroupSpecProbeHttpGetArgs and WorkloadGroupSpecProbeHttpGetOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecProbeHttpGetInput` via:
//
//	WorkloadGroupSpecProbeHttpGetArgs{...}
type WorkloadGroupSpecProbeHttpGetInput interface {
	pulumi.Input

	ToWorkloadGroupSpecProbeHttpGetOutput() WorkloadGroupSpecProbeHttpGetOutput
	ToWorkloadGroupSpecProbeHttpGetOutputWithContext(context.Context) WorkloadGroupSpecProbeHttpGetOutput
}

// `httpGet` is performed to a given endpoint and the status/able to connect determines health.
type WorkloadGroupSpecProbeHttpGetArgs struct {
	// Host name to connect to, defaults to the pod IP.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Headers the proxy will pass on to make the request.
	HttpHeaders WorkloadGroupSpecProbeHttpGetHttpHeadersArrayInput `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Port on which the endpoint lives.
	Port   pulumi.IntPtrInput    `pulumi:"port"`
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (WorkloadGroupSpecProbeHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecProbeHttpGet)(nil)).Elem()
}

func (i WorkloadGroupSpecProbeHttpGetArgs) ToWorkloadGroupSpecProbeHttpGetOutput() WorkloadGroupSpecProbeHttpGetOutput {
	return i.ToWorkloadGroupSpecProbeHttpGetOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecProbeHttpGetArgs) ToWorkloadGroupSpecProbeHttpGetOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeHttpGetOutput)
}

func (i WorkloadGroupSpecProbeHttpGetArgs) ToWorkloadGroupSpecProbeHttpGetPtrOutput() WorkloadGroupSpecProbeHttpGetPtrOutput {
	return i.ToWorkloadGroupSpecProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecProbeHttpGetArgs) ToWorkloadGroupSpecProbeHttpGetPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeHttpGetOutput).ToWorkloadGroupSpecProbeHttpGetPtrOutputWithContext(ctx)
}

// WorkloadGroupSpecProbeHttpGetPtrInput is an input type that accepts WorkloadGroupSpecProbeHttpGetArgs, WorkloadGroupSpecProbeHttpGetPtr and WorkloadGroupSpecProbeHttpGetPtrOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecProbeHttpGetPtrInput` via:
//
//	        WorkloadGroupSpecProbeHttpGetArgs{...}
//
//	or:
//
//	        nil
type WorkloadGroupSpecProbeHttpGetPtrInput interface {
	pulumi.Input

	ToWorkloadGroupSpecProbeHttpGetPtrOutput() WorkloadGroupSpecProbeHttpGetPtrOutput
	ToWorkloadGroupSpecProbeHttpGetPtrOutputWithContext(context.Context) WorkloadGroupSpecProbeHttpGetPtrOutput
}

type workloadGroupSpecProbeHttpGetPtrType WorkloadGroupSpecProbeHttpGetArgs

func WorkloadGroupSpecProbeHttpGetPtr(v *WorkloadGroupSpecProbeHttpGetArgs) WorkloadGroupSpecProbeHttpGetPtrInput {
	return (*workloadGroupSpecProbeHttpGetPtrType)(v)
}

func (*workloadGroupSpecProbeHttpGetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecProbeHttpGet)(nil)).Elem()
}

func (i *workloadGroupSpecProbeHttpGetPtrType) ToWorkloadGroupSpecProbeHttpGetPtrOutput() WorkloadGroupSpecProbeHttpGetPtrOutput {
	return i.ToWorkloadGroupSpecProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i *workloadGroupSpecProbeHttpGetPtrType) ToWorkloadGroupSpecProbeHttpGetPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeHttpGetPtrOutput)
}

// `httpGet` is performed to a given endpoint and the status/able to connect determines health.
type WorkloadGroupSpecProbeHttpGetOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecProbeHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecProbeHttpGet)(nil)).Elem()
}

func (o WorkloadGroupSpecProbeHttpGetOutput) ToWorkloadGroupSpecProbeHttpGetOutput() WorkloadGroupSpecProbeHttpGetOutput {
	return o
}

func (o WorkloadGroupSpecProbeHttpGetOutput) ToWorkloadGroupSpecProbeHttpGetOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeHttpGetOutput {
	return o
}

func (o WorkloadGroupSpecProbeHttpGetOutput) ToWorkloadGroupSpecProbeHttpGetPtrOutput() WorkloadGroupSpecProbeHttpGetPtrOutput {
	return o.ToWorkloadGroupSpecProbeHttpGetPtrOutputWithContext(context.Background())
}

func (o WorkloadGroupSpecProbeHttpGetOutput) ToWorkloadGroupSpecProbeHttpGetPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeHttpGetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadGroupSpecProbeHttpGet) *WorkloadGroupSpecProbeHttpGet {
		return &v
	}).(WorkloadGroupSpecProbeHttpGetPtrOutput)
}

// Host name to connect to, defaults to the pod IP.
func (o WorkloadGroupSpecProbeHttpGetOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbeHttpGet) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Headers the proxy will pass on to make the request.
func (o WorkloadGroupSpecProbeHttpGetOutput) HttpHeaders() WorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbeHttpGet) []WorkloadGroupSpecProbeHttpGetHttpHeaders { return v.HttpHeaders }).(WorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o WorkloadGroupSpecProbeHttpGetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbeHttpGet) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Port on which the endpoint lives.
func (o WorkloadGroupSpecProbeHttpGetOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbeHttpGet) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o WorkloadGroupSpecProbeHttpGetOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbeHttpGet) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type WorkloadGroupSpecProbeHttpGetPtrOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecProbeHttpGetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecProbeHttpGet)(nil)).Elem()
}

func (o WorkloadGroupSpecProbeHttpGetPtrOutput) ToWorkloadGroupSpecProbeHttpGetPtrOutput() WorkloadGroupSpecProbeHttpGetPtrOutput {
	return o
}

func (o WorkloadGroupSpecProbeHttpGetPtrOutput) ToWorkloadGroupSpecProbeHttpGetPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeHttpGetPtrOutput {
	return o
}

func (o WorkloadGroupSpecProbeHttpGetPtrOutput) Elem() WorkloadGroupSpecProbeHttpGetOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbeHttpGet) WorkloadGroupSpecProbeHttpGet {
		if v != nil {
			return *v
		}
		var ret WorkloadGroupSpecProbeHttpGet
		return ret
	}).(WorkloadGroupSpecProbeHttpGetOutput)
}

// Host name to connect to, defaults to the pod IP.
func (o WorkloadGroupSpecProbeHttpGetPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Headers the proxy will pass on to make the request.
func (o WorkloadGroupSpecProbeHttpGetPtrOutput) HttpHeaders() WorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbeHttpGet) []WorkloadGroupSpecProbeHttpGetHttpHeaders {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(WorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o WorkloadGroupSpecProbeHttpGetPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Port on which the endpoint lives.
func (o WorkloadGroupSpecProbeHttpGetPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbeHttpGet) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadGroupSpecProbeHttpGetPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

type WorkloadGroupSpecProbeHttpGetHttpHeaders struct {
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// WorkloadGroupSpecProbeHttpGetHttpHeadersInput is an input type that accepts WorkloadGroupSpecProbeHttpGetHttpHeadersArgs and WorkloadGroupSpecProbeHttpGetHttpHeadersOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecProbeHttpGetHttpHeadersInput` via:
//
//	WorkloadGroupSpecProbeHttpGetHttpHeadersArgs{...}
type WorkloadGroupSpecProbeHttpGetHttpHeadersInput interface {
	pulumi.Input

	ToWorkloadGroupSpecProbeHttpGetHttpHeadersOutput() WorkloadGroupSpecProbeHttpGetHttpHeadersOutput
	ToWorkloadGroupSpecProbeHttpGetHttpHeadersOutputWithContext(context.Context) WorkloadGroupSpecProbeHttpGetHttpHeadersOutput
}

type WorkloadGroupSpecProbeHttpGetHttpHeadersArgs struct {
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (WorkloadGroupSpecProbeHttpGetHttpHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i WorkloadGroupSpecProbeHttpGetHttpHeadersArgs) ToWorkloadGroupSpecProbeHttpGetHttpHeadersOutput() WorkloadGroupSpecProbeHttpGetHttpHeadersOutput {
	return i.ToWorkloadGroupSpecProbeHttpGetHttpHeadersOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecProbeHttpGetHttpHeadersArgs) ToWorkloadGroupSpecProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeHttpGetHttpHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeHttpGetHttpHeadersOutput)
}

// WorkloadGroupSpecProbeHttpGetHttpHeadersArrayInput is an input type that accepts WorkloadGroupSpecProbeHttpGetHttpHeadersArray and WorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecProbeHttpGetHttpHeadersArrayInput` via:
//
//	WorkloadGroupSpecProbeHttpGetHttpHeadersArray{ WorkloadGroupSpecProbeHttpGetHttpHeadersArgs{...} }
type WorkloadGroupSpecProbeHttpGetHttpHeadersArrayInput interface {
	pulumi.Input

	ToWorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutput() WorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutput
	ToWorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutputWithContext(context.Context) WorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutput
}

type WorkloadGroupSpecProbeHttpGetHttpHeadersArray []WorkloadGroupSpecProbeHttpGetHttpHeadersInput

func (WorkloadGroupSpecProbeHttpGetHttpHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadGroupSpecProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i WorkloadGroupSpecProbeHttpGetHttpHeadersArray) ToWorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutput() WorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutput {
	return i.ToWorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecProbeHttpGetHttpHeadersArray) ToWorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutput)
}

type WorkloadGroupSpecProbeHttpGetHttpHeadersOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecProbeHttpGetHttpHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o WorkloadGroupSpecProbeHttpGetHttpHeadersOutput) ToWorkloadGroupSpecProbeHttpGetHttpHeadersOutput() WorkloadGroupSpecProbeHttpGetHttpHeadersOutput {
	return o
}

func (o WorkloadGroupSpecProbeHttpGetHttpHeadersOutput) ToWorkloadGroupSpecProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeHttpGetHttpHeadersOutput {
	return o
}

func (o WorkloadGroupSpecProbeHttpGetHttpHeadersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbeHttpGetHttpHeaders) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o WorkloadGroupSpecProbeHttpGetHttpHeadersOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbeHttpGetHttpHeaders) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type WorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadGroupSpecProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o WorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutput) ToWorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutput() WorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o WorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutput) ToWorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o WorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutput) Index(i pulumi.IntInput) WorkloadGroupSpecProbeHttpGetHttpHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadGroupSpecProbeHttpGetHttpHeaders {
		return vs[0].([]WorkloadGroupSpecProbeHttpGetHttpHeaders)[vs[1].(int)]
	}).(WorkloadGroupSpecProbeHttpGetHttpHeadersOutput)
}

type WorkloadGroupSpecProbeHttpGetHttpHeadersPatch struct {
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// WorkloadGroupSpecProbeHttpGetHttpHeadersPatchInput is an input type that accepts WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArgs and WorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecProbeHttpGetHttpHeadersPatchInput` via:
//
//	WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArgs{...}
type WorkloadGroupSpecProbeHttpGetHttpHeadersPatchInput interface {
	pulumi.Input

	ToWorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutput() WorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutput
	ToWorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutputWithContext(context.Context) WorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutput
}

type WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArgs struct {
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecProbeHttpGetHttpHeadersPatch)(nil)).Elem()
}

func (i WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArgs) ToWorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutput() WorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutput {
	return i.ToWorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArgs) ToWorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutput)
}

// WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayInput is an input type that accepts WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArray and WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayInput` via:
//
//	WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArray{ WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArgs{...} }
type WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayInput interface {
	pulumi.Input

	ToWorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutput() WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutput
	ToWorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutputWithContext(context.Context) WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutput
}

type WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArray []WorkloadGroupSpecProbeHttpGetHttpHeadersPatchInput

func (WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadGroupSpecProbeHttpGetHttpHeadersPatch)(nil)).Elem()
}

func (i WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArray) ToWorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutput() WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutput {
	return i.ToWorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArray) ToWorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutput)
}

type WorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecProbeHttpGetHttpHeadersPatch)(nil)).Elem()
}

func (o WorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutput) ToWorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutput() WorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutput {
	return o
}

func (o WorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutput) ToWorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutput {
	return o
}

func (o WorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbeHttpGetHttpHeadersPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o WorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbeHttpGetHttpHeadersPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadGroupSpecProbeHttpGetHttpHeadersPatch)(nil)).Elem()
}

func (o WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutput) ToWorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutput() WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutput {
	return o
}

func (o WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutput) ToWorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutput {
	return o
}

func (o WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutput) Index(i pulumi.IntInput) WorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadGroupSpecProbeHttpGetHttpHeadersPatch {
		return vs[0].([]WorkloadGroupSpecProbeHttpGetHttpHeadersPatch)[vs[1].(int)]
	}).(WorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutput)
}

// `httpGet` is performed to a given endpoint and the status/able to connect determines health.
type WorkloadGroupSpecProbeHttpGetPatch struct {
	// Host name to connect to, defaults to the pod IP.
	Host *string `pulumi:"host"`
	// Headers the proxy will pass on to make the request.
	HttpHeaders []WorkloadGroupSpecProbeHttpGetHttpHeadersPatch `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path *string `pulumi:"path"`
	// Port on which the endpoint lives.
	Port   *int    `pulumi:"port"`
	Scheme *string `pulumi:"scheme"`
}

// WorkloadGroupSpecProbeHttpGetPatchInput is an input type that accepts WorkloadGroupSpecProbeHttpGetPatchArgs and WorkloadGroupSpecProbeHttpGetPatchOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecProbeHttpGetPatchInput` via:
//
//	WorkloadGroupSpecProbeHttpGetPatchArgs{...}
type WorkloadGroupSpecProbeHttpGetPatchInput interface {
	pulumi.Input

	ToWorkloadGroupSpecProbeHttpGetPatchOutput() WorkloadGroupSpecProbeHttpGetPatchOutput
	ToWorkloadGroupSpecProbeHttpGetPatchOutputWithContext(context.Context) WorkloadGroupSpecProbeHttpGetPatchOutput
}

// `httpGet` is performed to a given endpoint and the status/able to connect determines health.
type WorkloadGroupSpecProbeHttpGetPatchArgs struct {
	// Host name to connect to, defaults to the pod IP.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Headers the proxy will pass on to make the request.
	HttpHeaders WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayInput `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Port on which the endpoint lives.
	Port   pulumi.IntPtrInput    `pulumi:"port"`
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (WorkloadGroupSpecProbeHttpGetPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecProbeHttpGetPatch)(nil)).Elem()
}

func (i WorkloadGroupSpecProbeHttpGetPatchArgs) ToWorkloadGroupSpecProbeHttpGetPatchOutput() WorkloadGroupSpecProbeHttpGetPatchOutput {
	return i.ToWorkloadGroupSpecProbeHttpGetPatchOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecProbeHttpGetPatchArgs) ToWorkloadGroupSpecProbeHttpGetPatchOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeHttpGetPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeHttpGetPatchOutput)
}

func (i WorkloadGroupSpecProbeHttpGetPatchArgs) ToWorkloadGroupSpecProbeHttpGetPatchPtrOutput() WorkloadGroupSpecProbeHttpGetPatchPtrOutput {
	return i.ToWorkloadGroupSpecProbeHttpGetPatchPtrOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecProbeHttpGetPatchArgs) ToWorkloadGroupSpecProbeHttpGetPatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeHttpGetPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeHttpGetPatchOutput).ToWorkloadGroupSpecProbeHttpGetPatchPtrOutputWithContext(ctx)
}

// WorkloadGroupSpecProbeHttpGetPatchPtrInput is an input type that accepts WorkloadGroupSpecProbeHttpGetPatchArgs, WorkloadGroupSpecProbeHttpGetPatchPtr and WorkloadGroupSpecProbeHttpGetPatchPtrOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecProbeHttpGetPatchPtrInput` via:
//
//	        WorkloadGroupSpecProbeHttpGetPatchArgs{...}
//
//	or:
//
//	        nil
type WorkloadGroupSpecProbeHttpGetPatchPtrInput interface {
	pulumi.Input

	ToWorkloadGroupSpecProbeHttpGetPatchPtrOutput() WorkloadGroupSpecProbeHttpGetPatchPtrOutput
	ToWorkloadGroupSpecProbeHttpGetPatchPtrOutputWithContext(context.Context) WorkloadGroupSpecProbeHttpGetPatchPtrOutput
}

type workloadGroupSpecProbeHttpGetPatchPtrType WorkloadGroupSpecProbeHttpGetPatchArgs

func WorkloadGroupSpecProbeHttpGetPatchPtr(v *WorkloadGroupSpecProbeHttpGetPatchArgs) WorkloadGroupSpecProbeHttpGetPatchPtrInput {
	return (*workloadGroupSpecProbeHttpGetPatchPtrType)(v)
}

func (*workloadGroupSpecProbeHttpGetPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecProbeHttpGetPatch)(nil)).Elem()
}

func (i *workloadGroupSpecProbeHttpGetPatchPtrType) ToWorkloadGroupSpecProbeHttpGetPatchPtrOutput() WorkloadGroupSpecProbeHttpGetPatchPtrOutput {
	return i.ToWorkloadGroupSpecProbeHttpGetPatchPtrOutputWithContext(context.Background())
}

func (i *workloadGroupSpecProbeHttpGetPatchPtrType) ToWorkloadGroupSpecProbeHttpGetPatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeHttpGetPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeHttpGetPatchPtrOutput)
}

// `httpGet` is performed to a given endpoint and the status/able to connect determines health.
type WorkloadGroupSpecProbeHttpGetPatchOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecProbeHttpGetPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecProbeHttpGetPatch)(nil)).Elem()
}

func (o WorkloadGroupSpecProbeHttpGetPatchOutput) ToWorkloadGroupSpecProbeHttpGetPatchOutput() WorkloadGroupSpecProbeHttpGetPatchOutput {
	return o
}

func (o WorkloadGroupSpecProbeHttpGetPatchOutput) ToWorkloadGroupSpecProbeHttpGetPatchOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeHttpGetPatchOutput {
	return o
}

func (o WorkloadGroupSpecProbeHttpGetPatchOutput) ToWorkloadGroupSpecProbeHttpGetPatchPtrOutput() WorkloadGroupSpecProbeHttpGetPatchPtrOutput {
	return o.ToWorkloadGroupSpecProbeHttpGetPatchPtrOutputWithContext(context.Background())
}

func (o WorkloadGroupSpecProbeHttpGetPatchOutput) ToWorkloadGroupSpecProbeHttpGetPatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeHttpGetPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadGroupSpecProbeHttpGetPatch) *WorkloadGroupSpecProbeHttpGetPatch {
		return &v
	}).(WorkloadGroupSpecProbeHttpGetPatchPtrOutput)
}

// Host name to connect to, defaults to the pod IP.
func (o WorkloadGroupSpecProbeHttpGetPatchOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbeHttpGetPatch) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Headers the proxy will pass on to make the request.
func (o WorkloadGroupSpecProbeHttpGetPatchOutput) HttpHeaders() WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbeHttpGetPatch) []WorkloadGroupSpecProbeHttpGetHttpHeadersPatch {
		return v.HttpHeaders
	}).(WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutput)
}

// Path to access on the HTTP server.
func (o WorkloadGroupSpecProbeHttpGetPatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbeHttpGetPatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Port on which the endpoint lives.
func (o WorkloadGroupSpecProbeHttpGetPatchOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbeHttpGetPatch) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o WorkloadGroupSpecProbeHttpGetPatchOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbeHttpGetPatch) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type WorkloadGroupSpecProbeHttpGetPatchPtrOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecProbeHttpGetPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecProbeHttpGetPatch)(nil)).Elem()
}

func (o WorkloadGroupSpecProbeHttpGetPatchPtrOutput) ToWorkloadGroupSpecProbeHttpGetPatchPtrOutput() WorkloadGroupSpecProbeHttpGetPatchPtrOutput {
	return o
}

func (o WorkloadGroupSpecProbeHttpGetPatchPtrOutput) ToWorkloadGroupSpecProbeHttpGetPatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeHttpGetPatchPtrOutput {
	return o
}

func (o WorkloadGroupSpecProbeHttpGetPatchPtrOutput) Elem() WorkloadGroupSpecProbeHttpGetPatchOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbeHttpGetPatch) WorkloadGroupSpecProbeHttpGetPatch {
		if v != nil {
			return *v
		}
		var ret WorkloadGroupSpecProbeHttpGetPatch
		return ret
	}).(WorkloadGroupSpecProbeHttpGetPatchOutput)
}

// Host name to connect to, defaults to the pod IP.
func (o WorkloadGroupSpecProbeHttpGetPatchPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbeHttpGetPatch) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Headers the proxy will pass on to make the request.
func (o WorkloadGroupSpecProbeHttpGetPatchPtrOutput) HttpHeaders() WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbeHttpGetPatch) []WorkloadGroupSpecProbeHttpGetHttpHeadersPatch {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutput)
}

// Path to access on the HTTP server.
func (o WorkloadGroupSpecProbeHttpGetPatchPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbeHttpGetPatch) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Port on which the endpoint lives.
func (o WorkloadGroupSpecProbeHttpGetPatchPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbeHttpGetPatch) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadGroupSpecProbeHttpGetPatchPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbeHttpGetPatch) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

// `ReadinessProbe` describes the configuration the user must provide for healthchecking on their workload.
type WorkloadGroupSpecProbePatch struct {
	Exec *WorkloadGroupSpecProbeExecPatch `pulumi:"exec"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded.
	FailureThreshold *int                                `pulumi:"failureThreshold"`
	HttpGet          *WorkloadGroupSpecProbeHttpGetPatch `pulumi:"httpGet"`
	// Number of seconds after the container has started before readiness probes are initiated.
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed.
	SuccessThreshold *int                                  `pulumi:"successThreshold"`
	TcpSocket        *WorkloadGroupSpecProbeTcpSocketPatch `pulumi:"tcpSocket"`
	// Number of seconds after which the probe times out.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// WorkloadGroupSpecProbePatchInput is an input type that accepts WorkloadGroupSpecProbePatchArgs and WorkloadGroupSpecProbePatchOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecProbePatchInput` via:
//
//	WorkloadGroupSpecProbePatchArgs{...}
type WorkloadGroupSpecProbePatchInput interface {
	pulumi.Input

	ToWorkloadGroupSpecProbePatchOutput() WorkloadGroupSpecProbePatchOutput
	ToWorkloadGroupSpecProbePatchOutputWithContext(context.Context) WorkloadGroupSpecProbePatchOutput
}

// `ReadinessProbe` describes the configuration the user must provide for healthchecking on their workload.
type WorkloadGroupSpecProbePatchArgs struct {
	Exec WorkloadGroupSpecProbeExecPatchPtrInput `pulumi:"exec"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded.
	FailureThreshold pulumi.IntPtrInput                         `pulumi:"failureThreshold"`
	HttpGet          WorkloadGroupSpecProbeHttpGetPatchPtrInput `pulumi:"httpGet"`
	// Number of seconds after the container has started before readiness probes are initiated.
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed.
	SuccessThreshold pulumi.IntPtrInput                           `pulumi:"successThreshold"`
	TcpSocket        WorkloadGroupSpecProbeTcpSocketPatchPtrInput `pulumi:"tcpSocket"`
	// Number of seconds after which the probe times out.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (WorkloadGroupSpecProbePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecProbePatch)(nil)).Elem()
}

func (i WorkloadGroupSpecProbePatchArgs) ToWorkloadGroupSpecProbePatchOutput() WorkloadGroupSpecProbePatchOutput {
	return i.ToWorkloadGroupSpecProbePatchOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecProbePatchArgs) ToWorkloadGroupSpecProbePatchOutputWithContext(ctx context.Context) WorkloadGroupSpecProbePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbePatchOutput)
}

func (i WorkloadGroupSpecProbePatchArgs) ToWorkloadGroupSpecProbePatchPtrOutput() WorkloadGroupSpecProbePatchPtrOutput {
	return i.ToWorkloadGroupSpecProbePatchPtrOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecProbePatchArgs) ToWorkloadGroupSpecProbePatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbePatchOutput).ToWorkloadGroupSpecProbePatchPtrOutputWithContext(ctx)
}

// WorkloadGroupSpecProbePatchPtrInput is an input type that accepts WorkloadGroupSpecProbePatchArgs, WorkloadGroupSpecProbePatchPtr and WorkloadGroupSpecProbePatchPtrOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecProbePatchPtrInput` via:
//
//	        WorkloadGroupSpecProbePatchArgs{...}
//
//	or:
//
//	        nil
type WorkloadGroupSpecProbePatchPtrInput interface {
	pulumi.Input

	ToWorkloadGroupSpecProbePatchPtrOutput() WorkloadGroupSpecProbePatchPtrOutput
	ToWorkloadGroupSpecProbePatchPtrOutputWithContext(context.Context) WorkloadGroupSpecProbePatchPtrOutput
}

type workloadGroupSpecProbePatchPtrType WorkloadGroupSpecProbePatchArgs

func WorkloadGroupSpecProbePatchPtr(v *WorkloadGroupSpecProbePatchArgs) WorkloadGroupSpecProbePatchPtrInput {
	return (*workloadGroupSpecProbePatchPtrType)(v)
}

func (*workloadGroupSpecProbePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecProbePatch)(nil)).Elem()
}

func (i *workloadGroupSpecProbePatchPtrType) ToWorkloadGroupSpecProbePatchPtrOutput() WorkloadGroupSpecProbePatchPtrOutput {
	return i.ToWorkloadGroupSpecProbePatchPtrOutputWithContext(context.Background())
}

func (i *workloadGroupSpecProbePatchPtrType) ToWorkloadGroupSpecProbePatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbePatchPtrOutput)
}

// `ReadinessProbe` describes the configuration the user must provide for healthchecking on their workload.
type WorkloadGroupSpecProbePatchOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecProbePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecProbePatch)(nil)).Elem()
}

func (o WorkloadGroupSpecProbePatchOutput) ToWorkloadGroupSpecProbePatchOutput() WorkloadGroupSpecProbePatchOutput {
	return o
}

func (o WorkloadGroupSpecProbePatchOutput) ToWorkloadGroupSpecProbePatchOutputWithContext(ctx context.Context) WorkloadGroupSpecProbePatchOutput {
	return o
}

func (o WorkloadGroupSpecProbePatchOutput) ToWorkloadGroupSpecProbePatchPtrOutput() WorkloadGroupSpecProbePatchPtrOutput {
	return o.ToWorkloadGroupSpecProbePatchPtrOutputWithContext(context.Background())
}

func (o WorkloadGroupSpecProbePatchOutput) ToWorkloadGroupSpecProbePatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadGroupSpecProbePatch) *WorkloadGroupSpecProbePatch {
		return &v
	}).(WorkloadGroupSpecProbePatchPtrOutput)
}

func (o WorkloadGroupSpecProbePatchOutput) Exec() WorkloadGroupSpecProbeExecPatchPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbePatch) *WorkloadGroupSpecProbeExecPatch { return v.Exec }).(WorkloadGroupSpecProbeExecPatchPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded.
func (o WorkloadGroupSpecProbePatchOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbePatch) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

func (o WorkloadGroupSpecProbePatchOutput) HttpGet() WorkloadGroupSpecProbeHttpGetPatchPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbePatch) *WorkloadGroupSpecProbeHttpGetPatch { return v.HttpGet }).(WorkloadGroupSpecProbeHttpGetPatchPtrOutput)
}

// Number of seconds after the container has started before readiness probes are initiated.
func (o WorkloadGroupSpecProbePatchOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbePatch) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe.
func (o WorkloadGroupSpecProbePatchOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbePatch) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed.
func (o WorkloadGroupSpecProbePatchOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbePatch) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

func (o WorkloadGroupSpecProbePatchOutput) TcpSocket() WorkloadGroupSpecProbeTcpSocketPatchPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbePatch) *WorkloadGroupSpecProbeTcpSocketPatch { return v.TcpSocket }).(WorkloadGroupSpecProbeTcpSocketPatchPtrOutput)
}

// Number of seconds after which the probe times out.
func (o WorkloadGroupSpecProbePatchOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbePatch) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type WorkloadGroupSpecProbePatchPtrOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecProbePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecProbePatch)(nil)).Elem()
}

func (o WorkloadGroupSpecProbePatchPtrOutput) ToWorkloadGroupSpecProbePatchPtrOutput() WorkloadGroupSpecProbePatchPtrOutput {
	return o
}

func (o WorkloadGroupSpecProbePatchPtrOutput) ToWorkloadGroupSpecProbePatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbePatchPtrOutput {
	return o
}

func (o WorkloadGroupSpecProbePatchPtrOutput) Elem() WorkloadGroupSpecProbePatchOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbePatch) WorkloadGroupSpecProbePatch {
		if v != nil {
			return *v
		}
		var ret WorkloadGroupSpecProbePatch
		return ret
	}).(WorkloadGroupSpecProbePatchOutput)
}

func (o WorkloadGroupSpecProbePatchPtrOutput) Exec() WorkloadGroupSpecProbeExecPatchPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbePatch) *WorkloadGroupSpecProbeExecPatch {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(WorkloadGroupSpecProbeExecPatchPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded.
func (o WorkloadGroupSpecProbePatchPtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbePatch) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadGroupSpecProbePatchPtrOutput) HttpGet() WorkloadGroupSpecProbeHttpGetPatchPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbePatch) *WorkloadGroupSpecProbeHttpGetPatch {
		if v == nil {
			return nil
		}
		return v.HttpGet
	}).(WorkloadGroupSpecProbeHttpGetPatchPtrOutput)
}

// Number of seconds after the container has started before readiness probes are initiated.
func (o WorkloadGroupSpecProbePatchPtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbePatch) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe.
func (o WorkloadGroupSpecProbePatchPtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbePatch) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed.
func (o WorkloadGroupSpecProbePatchPtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbePatch) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadGroupSpecProbePatchPtrOutput) TcpSocket() WorkloadGroupSpecProbeTcpSocketPatchPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbePatch) *WorkloadGroupSpecProbeTcpSocketPatch {
		if v == nil {
			return nil
		}
		return v.TcpSocket
	}).(WorkloadGroupSpecProbeTcpSocketPatchPtrOutput)
}

// Number of seconds after which the probe times out.
func (o WorkloadGroupSpecProbePatchPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbePatch) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Health is determined by if the proxy is able to connect.
type WorkloadGroupSpecProbeTcpSocket struct {
	Host *string `pulumi:"host"`
	Port *int    `pulumi:"port"`
}

// WorkloadGroupSpecProbeTcpSocketInput is an input type that accepts WorkloadGroupSpecProbeTcpSocketArgs and WorkloadGroupSpecProbeTcpSocketOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecProbeTcpSocketInput` via:
//
//	WorkloadGroupSpecProbeTcpSocketArgs{...}
type WorkloadGroupSpecProbeTcpSocketInput interface {
	pulumi.Input

	ToWorkloadGroupSpecProbeTcpSocketOutput() WorkloadGroupSpecProbeTcpSocketOutput
	ToWorkloadGroupSpecProbeTcpSocketOutputWithContext(context.Context) WorkloadGroupSpecProbeTcpSocketOutput
}

// Health is determined by if the proxy is able to connect.
type WorkloadGroupSpecProbeTcpSocketArgs struct {
	Host pulumi.StringPtrInput `pulumi:"host"`
	Port pulumi.IntPtrInput    `pulumi:"port"`
}

func (WorkloadGroupSpecProbeTcpSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecProbeTcpSocket)(nil)).Elem()
}

func (i WorkloadGroupSpecProbeTcpSocketArgs) ToWorkloadGroupSpecProbeTcpSocketOutput() WorkloadGroupSpecProbeTcpSocketOutput {
	return i.ToWorkloadGroupSpecProbeTcpSocketOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecProbeTcpSocketArgs) ToWorkloadGroupSpecProbeTcpSocketOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeTcpSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeTcpSocketOutput)
}

func (i WorkloadGroupSpecProbeTcpSocketArgs) ToWorkloadGroupSpecProbeTcpSocketPtrOutput() WorkloadGroupSpecProbeTcpSocketPtrOutput {
	return i.ToWorkloadGroupSpecProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecProbeTcpSocketArgs) ToWorkloadGroupSpecProbeTcpSocketPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeTcpSocketOutput).ToWorkloadGroupSpecProbeTcpSocketPtrOutputWithContext(ctx)
}

// WorkloadGroupSpecProbeTcpSocketPtrInput is an input type that accepts WorkloadGroupSpecProbeTcpSocketArgs, WorkloadGroupSpecProbeTcpSocketPtr and WorkloadGroupSpecProbeTcpSocketPtrOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecProbeTcpSocketPtrInput` via:
//
//	        WorkloadGroupSpecProbeTcpSocketArgs{...}
//
//	or:
//
//	        nil
type WorkloadGroupSpecProbeTcpSocketPtrInput interface {
	pulumi.Input

	ToWorkloadGroupSpecProbeTcpSocketPtrOutput() WorkloadGroupSpecProbeTcpSocketPtrOutput
	ToWorkloadGroupSpecProbeTcpSocketPtrOutputWithContext(context.Context) WorkloadGroupSpecProbeTcpSocketPtrOutput
}

type workloadGroupSpecProbeTcpSocketPtrType WorkloadGroupSpecProbeTcpSocketArgs

func WorkloadGroupSpecProbeTcpSocketPtr(v *WorkloadGroupSpecProbeTcpSocketArgs) WorkloadGroupSpecProbeTcpSocketPtrInput {
	return (*workloadGroupSpecProbeTcpSocketPtrType)(v)
}

func (*workloadGroupSpecProbeTcpSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecProbeTcpSocket)(nil)).Elem()
}

func (i *workloadGroupSpecProbeTcpSocketPtrType) ToWorkloadGroupSpecProbeTcpSocketPtrOutput() WorkloadGroupSpecProbeTcpSocketPtrOutput {
	return i.ToWorkloadGroupSpecProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i *workloadGroupSpecProbeTcpSocketPtrType) ToWorkloadGroupSpecProbeTcpSocketPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeTcpSocketPtrOutput)
}

// Health is determined by if the proxy is able to connect.
type WorkloadGroupSpecProbeTcpSocketOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecProbeTcpSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecProbeTcpSocket)(nil)).Elem()
}

func (o WorkloadGroupSpecProbeTcpSocketOutput) ToWorkloadGroupSpecProbeTcpSocketOutput() WorkloadGroupSpecProbeTcpSocketOutput {
	return o
}

func (o WorkloadGroupSpecProbeTcpSocketOutput) ToWorkloadGroupSpecProbeTcpSocketOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeTcpSocketOutput {
	return o
}

func (o WorkloadGroupSpecProbeTcpSocketOutput) ToWorkloadGroupSpecProbeTcpSocketPtrOutput() WorkloadGroupSpecProbeTcpSocketPtrOutput {
	return o.ToWorkloadGroupSpecProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (o WorkloadGroupSpecProbeTcpSocketOutput) ToWorkloadGroupSpecProbeTcpSocketPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeTcpSocketPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadGroupSpecProbeTcpSocket) *WorkloadGroupSpecProbeTcpSocket {
		return &v
	}).(WorkloadGroupSpecProbeTcpSocketPtrOutput)
}

func (o WorkloadGroupSpecProbeTcpSocketOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbeTcpSocket) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o WorkloadGroupSpecProbeTcpSocketOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbeTcpSocket) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type WorkloadGroupSpecProbeTcpSocketPtrOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecProbeTcpSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecProbeTcpSocket)(nil)).Elem()
}

func (o WorkloadGroupSpecProbeTcpSocketPtrOutput) ToWorkloadGroupSpecProbeTcpSocketPtrOutput() WorkloadGroupSpecProbeTcpSocketPtrOutput {
	return o
}

func (o WorkloadGroupSpecProbeTcpSocketPtrOutput) ToWorkloadGroupSpecProbeTcpSocketPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeTcpSocketPtrOutput {
	return o
}

func (o WorkloadGroupSpecProbeTcpSocketPtrOutput) Elem() WorkloadGroupSpecProbeTcpSocketOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbeTcpSocket) WorkloadGroupSpecProbeTcpSocket {
		if v != nil {
			return *v
		}
		var ret WorkloadGroupSpecProbeTcpSocket
		return ret
	}).(WorkloadGroupSpecProbeTcpSocketOutput)
}

func (o WorkloadGroupSpecProbeTcpSocketPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbeTcpSocket) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadGroupSpecProbeTcpSocketPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbeTcpSocket) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Health is determined by if the proxy is able to connect.
type WorkloadGroupSpecProbeTcpSocketPatch struct {
	Host *string `pulumi:"host"`
	Port *int    `pulumi:"port"`
}

// WorkloadGroupSpecProbeTcpSocketPatchInput is an input type that accepts WorkloadGroupSpecProbeTcpSocketPatchArgs and WorkloadGroupSpecProbeTcpSocketPatchOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecProbeTcpSocketPatchInput` via:
//
//	WorkloadGroupSpecProbeTcpSocketPatchArgs{...}
type WorkloadGroupSpecProbeTcpSocketPatchInput interface {
	pulumi.Input

	ToWorkloadGroupSpecProbeTcpSocketPatchOutput() WorkloadGroupSpecProbeTcpSocketPatchOutput
	ToWorkloadGroupSpecProbeTcpSocketPatchOutputWithContext(context.Context) WorkloadGroupSpecProbeTcpSocketPatchOutput
}

// Health is determined by if the proxy is able to connect.
type WorkloadGroupSpecProbeTcpSocketPatchArgs struct {
	Host pulumi.StringPtrInput `pulumi:"host"`
	Port pulumi.IntPtrInput    `pulumi:"port"`
}

func (WorkloadGroupSpecProbeTcpSocketPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecProbeTcpSocketPatch)(nil)).Elem()
}

func (i WorkloadGroupSpecProbeTcpSocketPatchArgs) ToWorkloadGroupSpecProbeTcpSocketPatchOutput() WorkloadGroupSpecProbeTcpSocketPatchOutput {
	return i.ToWorkloadGroupSpecProbeTcpSocketPatchOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecProbeTcpSocketPatchArgs) ToWorkloadGroupSpecProbeTcpSocketPatchOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeTcpSocketPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeTcpSocketPatchOutput)
}

func (i WorkloadGroupSpecProbeTcpSocketPatchArgs) ToWorkloadGroupSpecProbeTcpSocketPatchPtrOutput() WorkloadGroupSpecProbeTcpSocketPatchPtrOutput {
	return i.ToWorkloadGroupSpecProbeTcpSocketPatchPtrOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecProbeTcpSocketPatchArgs) ToWorkloadGroupSpecProbeTcpSocketPatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeTcpSocketPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeTcpSocketPatchOutput).ToWorkloadGroupSpecProbeTcpSocketPatchPtrOutputWithContext(ctx)
}

// WorkloadGroupSpecProbeTcpSocketPatchPtrInput is an input type that accepts WorkloadGroupSpecProbeTcpSocketPatchArgs, WorkloadGroupSpecProbeTcpSocketPatchPtr and WorkloadGroupSpecProbeTcpSocketPatchPtrOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecProbeTcpSocketPatchPtrInput` via:
//
//	        WorkloadGroupSpecProbeTcpSocketPatchArgs{...}
//
//	or:
//
//	        nil
type WorkloadGroupSpecProbeTcpSocketPatchPtrInput interface {
	pulumi.Input

	ToWorkloadGroupSpecProbeTcpSocketPatchPtrOutput() WorkloadGroupSpecProbeTcpSocketPatchPtrOutput
	ToWorkloadGroupSpecProbeTcpSocketPatchPtrOutputWithContext(context.Context) WorkloadGroupSpecProbeTcpSocketPatchPtrOutput
}

type workloadGroupSpecProbeTcpSocketPatchPtrType WorkloadGroupSpecProbeTcpSocketPatchArgs

func WorkloadGroupSpecProbeTcpSocketPatchPtr(v *WorkloadGroupSpecProbeTcpSocketPatchArgs) WorkloadGroupSpecProbeTcpSocketPatchPtrInput {
	return (*workloadGroupSpecProbeTcpSocketPatchPtrType)(v)
}

func (*workloadGroupSpecProbeTcpSocketPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecProbeTcpSocketPatch)(nil)).Elem()
}

func (i *workloadGroupSpecProbeTcpSocketPatchPtrType) ToWorkloadGroupSpecProbeTcpSocketPatchPtrOutput() WorkloadGroupSpecProbeTcpSocketPatchPtrOutput {
	return i.ToWorkloadGroupSpecProbeTcpSocketPatchPtrOutputWithContext(context.Background())
}

func (i *workloadGroupSpecProbeTcpSocketPatchPtrType) ToWorkloadGroupSpecProbeTcpSocketPatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeTcpSocketPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecProbeTcpSocketPatchPtrOutput)
}

// Health is determined by if the proxy is able to connect.
type WorkloadGroupSpecProbeTcpSocketPatchOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecProbeTcpSocketPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecProbeTcpSocketPatch)(nil)).Elem()
}

func (o WorkloadGroupSpecProbeTcpSocketPatchOutput) ToWorkloadGroupSpecProbeTcpSocketPatchOutput() WorkloadGroupSpecProbeTcpSocketPatchOutput {
	return o
}

func (o WorkloadGroupSpecProbeTcpSocketPatchOutput) ToWorkloadGroupSpecProbeTcpSocketPatchOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeTcpSocketPatchOutput {
	return o
}

func (o WorkloadGroupSpecProbeTcpSocketPatchOutput) ToWorkloadGroupSpecProbeTcpSocketPatchPtrOutput() WorkloadGroupSpecProbeTcpSocketPatchPtrOutput {
	return o.ToWorkloadGroupSpecProbeTcpSocketPatchPtrOutputWithContext(context.Background())
}

func (o WorkloadGroupSpecProbeTcpSocketPatchOutput) ToWorkloadGroupSpecProbeTcpSocketPatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeTcpSocketPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadGroupSpecProbeTcpSocketPatch) *WorkloadGroupSpecProbeTcpSocketPatch {
		return &v
	}).(WorkloadGroupSpecProbeTcpSocketPatchPtrOutput)
}

func (o WorkloadGroupSpecProbeTcpSocketPatchOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbeTcpSocketPatch) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o WorkloadGroupSpecProbeTcpSocketPatchOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecProbeTcpSocketPatch) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type WorkloadGroupSpecProbeTcpSocketPatchPtrOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecProbeTcpSocketPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecProbeTcpSocketPatch)(nil)).Elem()
}

func (o WorkloadGroupSpecProbeTcpSocketPatchPtrOutput) ToWorkloadGroupSpecProbeTcpSocketPatchPtrOutput() WorkloadGroupSpecProbeTcpSocketPatchPtrOutput {
	return o
}

func (o WorkloadGroupSpecProbeTcpSocketPatchPtrOutput) ToWorkloadGroupSpecProbeTcpSocketPatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecProbeTcpSocketPatchPtrOutput {
	return o
}

func (o WorkloadGroupSpecProbeTcpSocketPatchPtrOutput) Elem() WorkloadGroupSpecProbeTcpSocketPatchOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbeTcpSocketPatch) WorkloadGroupSpecProbeTcpSocketPatch {
		if v != nil {
			return *v
		}
		var ret WorkloadGroupSpecProbeTcpSocketPatch
		return ret
	}).(WorkloadGroupSpecProbeTcpSocketPatchOutput)
}

func (o WorkloadGroupSpecProbeTcpSocketPatchPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbeTcpSocketPatch) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadGroupSpecProbeTcpSocketPatchPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecProbeTcpSocketPatch) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Template to be used for the generation of `WorkloadEntry` resources that belong to this `WorkloadGroup`.
type WorkloadGroupSpecTemplate struct {
	// Address associated with the network endpoint without the port.
	Address *string `pulumi:"address"`
	// One or more labels associated with the endpoint.
	Labels map[string]string `pulumi:"labels"`
	// The locality associated with the endpoint.
	Locality *string `pulumi:"locality"`
	// Network enables Istio to group endpoints resident in the same L3 domain/network.
	Network *string `pulumi:"network"`
	// Set of ports associated with the endpoint.
	Ports map[string]int `pulumi:"ports"`
	// The service account associated with the workload if a sidecar is present in the workload.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// The load balancing weight associated with the endpoint.
	Weight *int `pulumi:"weight"`
}

// WorkloadGroupSpecTemplateInput is an input type that accepts WorkloadGroupSpecTemplateArgs and WorkloadGroupSpecTemplateOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecTemplateInput` via:
//
//	WorkloadGroupSpecTemplateArgs{...}
type WorkloadGroupSpecTemplateInput interface {
	pulumi.Input

	ToWorkloadGroupSpecTemplateOutput() WorkloadGroupSpecTemplateOutput
	ToWorkloadGroupSpecTemplateOutputWithContext(context.Context) WorkloadGroupSpecTemplateOutput
}

// Template to be used for the generation of `WorkloadEntry` resources that belong to this `WorkloadGroup`.
type WorkloadGroupSpecTemplateArgs struct {
	// Address associated with the network endpoint without the port.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// One or more labels associated with the endpoint.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The locality associated with the endpoint.
	Locality pulumi.StringPtrInput `pulumi:"locality"`
	// Network enables Istio to group endpoints resident in the same L3 domain/network.
	Network pulumi.StringPtrInput `pulumi:"network"`
	// Set of ports associated with the endpoint.
	Ports pulumi.IntMapInput `pulumi:"ports"`
	// The service account associated with the workload if a sidecar is present in the workload.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
	// The load balancing weight associated with the endpoint.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (WorkloadGroupSpecTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecTemplate)(nil)).Elem()
}

func (i WorkloadGroupSpecTemplateArgs) ToWorkloadGroupSpecTemplateOutput() WorkloadGroupSpecTemplateOutput {
	return i.ToWorkloadGroupSpecTemplateOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecTemplateArgs) ToWorkloadGroupSpecTemplateOutputWithContext(ctx context.Context) WorkloadGroupSpecTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecTemplateOutput)
}

func (i WorkloadGroupSpecTemplateArgs) ToWorkloadGroupSpecTemplatePtrOutput() WorkloadGroupSpecTemplatePtrOutput {
	return i.ToWorkloadGroupSpecTemplatePtrOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecTemplateArgs) ToWorkloadGroupSpecTemplatePtrOutputWithContext(ctx context.Context) WorkloadGroupSpecTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecTemplateOutput).ToWorkloadGroupSpecTemplatePtrOutputWithContext(ctx)
}

// WorkloadGroupSpecTemplatePtrInput is an input type that accepts WorkloadGroupSpecTemplateArgs, WorkloadGroupSpecTemplatePtr and WorkloadGroupSpecTemplatePtrOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecTemplatePtrInput` via:
//
//	        WorkloadGroupSpecTemplateArgs{...}
//
//	or:
//
//	        nil
type WorkloadGroupSpecTemplatePtrInput interface {
	pulumi.Input

	ToWorkloadGroupSpecTemplatePtrOutput() WorkloadGroupSpecTemplatePtrOutput
	ToWorkloadGroupSpecTemplatePtrOutputWithContext(context.Context) WorkloadGroupSpecTemplatePtrOutput
}

type workloadGroupSpecTemplatePtrType WorkloadGroupSpecTemplateArgs

func WorkloadGroupSpecTemplatePtr(v *WorkloadGroupSpecTemplateArgs) WorkloadGroupSpecTemplatePtrInput {
	return (*workloadGroupSpecTemplatePtrType)(v)
}

func (*workloadGroupSpecTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecTemplate)(nil)).Elem()
}

func (i *workloadGroupSpecTemplatePtrType) ToWorkloadGroupSpecTemplatePtrOutput() WorkloadGroupSpecTemplatePtrOutput {
	return i.ToWorkloadGroupSpecTemplatePtrOutputWithContext(context.Background())
}

func (i *workloadGroupSpecTemplatePtrType) ToWorkloadGroupSpecTemplatePtrOutputWithContext(ctx context.Context) WorkloadGroupSpecTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecTemplatePtrOutput)
}

// Template to be used for the generation of `WorkloadEntry` resources that belong to this `WorkloadGroup`.
type WorkloadGroupSpecTemplateOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecTemplate)(nil)).Elem()
}

func (o WorkloadGroupSpecTemplateOutput) ToWorkloadGroupSpecTemplateOutput() WorkloadGroupSpecTemplateOutput {
	return o
}

func (o WorkloadGroupSpecTemplateOutput) ToWorkloadGroupSpecTemplateOutputWithContext(ctx context.Context) WorkloadGroupSpecTemplateOutput {
	return o
}

func (o WorkloadGroupSpecTemplateOutput) ToWorkloadGroupSpecTemplatePtrOutput() WorkloadGroupSpecTemplatePtrOutput {
	return o.ToWorkloadGroupSpecTemplatePtrOutputWithContext(context.Background())
}

func (o WorkloadGroupSpecTemplateOutput) ToWorkloadGroupSpecTemplatePtrOutputWithContext(ctx context.Context) WorkloadGroupSpecTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadGroupSpecTemplate) *WorkloadGroupSpecTemplate {
		return &v
	}).(WorkloadGroupSpecTemplatePtrOutput)
}

// Address associated with the network endpoint without the port.
func (o WorkloadGroupSpecTemplateOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecTemplate) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// One or more labels associated with the endpoint.
func (o WorkloadGroupSpecTemplateOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkloadGroupSpecTemplate) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The locality associated with the endpoint.
func (o WorkloadGroupSpecTemplateOutput) Locality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecTemplate) *string { return v.Locality }).(pulumi.StringPtrOutput)
}

// Network enables Istio to group endpoints resident in the same L3 domain/network.
func (o WorkloadGroupSpecTemplateOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecTemplate) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// Set of ports associated with the endpoint.
func (o WorkloadGroupSpecTemplateOutput) Ports() pulumi.IntMapOutput {
	return o.ApplyT(func(v WorkloadGroupSpecTemplate) map[string]int { return v.Ports }).(pulumi.IntMapOutput)
}

// The service account associated with the workload if a sidecar is present in the workload.
func (o WorkloadGroupSpecTemplateOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecTemplate) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// The load balancing weight associated with the endpoint.
func (o WorkloadGroupSpecTemplateOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecTemplate) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type WorkloadGroupSpecTemplatePtrOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecTemplate)(nil)).Elem()
}

func (o WorkloadGroupSpecTemplatePtrOutput) ToWorkloadGroupSpecTemplatePtrOutput() WorkloadGroupSpecTemplatePtrOutput {
	return o
}

func (o WorkloadGroupSpecTemplatePtrOutput) ToWorkloadGroupSpecTemplatePtrOutputWithContext(ctx context.Context) WorkloadGroupSpecTemplatePtrOutput {
	return o
}

func (o WorkloadGroupSpecTemplatePtrOutput) Elem() WorkloadGroupSpecTemplateOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecTemplate) WorkloadGroupSpecTemplate {
		if v != nil {
			return *v
		}
		var ret WorkloadGroupSpecTemplate
		return ret
	}).(WorkloadGroupSpecTemplateOutput)
}

// Address associated with the network endpoint without the port.
func (o WorkloadGroupSpecTemplatePtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// One or more labels associated with the endpoint.
func (o WorkloadGroupSpecTemplatePtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecTemplate) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The locality associated with the endpoint.
func (o WorkloadGroupSpecTemplatePtrOutput) Locality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Locality
	}).(pulumi.StringPtrOutput)
}

// Network enables Istio to group endpoints resident in the same L3 domain/network.
func (o WorkloadGroupSpecTemplatePtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Network
	}).(pulumi.StringPtrOutput)
}

// Set of ports associated with the endpoint.
func (o WorkloadGroupSpecTemplatePtrOutput) Ports() pulumi.IntMapOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecTemplate) map[string]int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntMapOutput)
}

// The service account associated with the workload if a sidecar is present in the workload.
func (o WorkloadGroupSpecTemplatePtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecTemplate) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(pulumi.StringPtrOutput)
}

// The load balancing weight associated with the endpoint.
func (o WorkloadGroupSpecTemplatePtrOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecTemplate) *int {
		if v == nil {
			return nil
		}
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

// Template to be used for the generation of `WorkloadEntry` resources that belong to this `WorkloadGroup`.
type WorkloadGroupSpecTemplatePatch struct {
	// Address associated with the network endpoint without the port.
	Address *string `pulumi:"address"`
	// One or more labels associated with the endpoint.
	Labels map[string]string `pulumi:"labels"`
	// The locality associated with the endpoint.
	Locality *string `pulumi:"locality"`
	// Network enables Istio to group endpoints resident in the same L3 domain/network.
	Network *string `pulumi:"network"`
	// Set of ports associated with the endpoint.
	Ports map[string]int `pulumi:"ports"`
	// The service account associated with the workload if a sidecar is present in the workload.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// The load balancing weight associated with the endpoint.
	Weight *int `pulumi:"weight"`
}

// WorkloadGroupSpecTemplatePatchInput is an input type that accepts WorkloadGroupSpecTemplatePatchArgs and WorkloadGroupSpecTemplatePatchOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecTemplatePatchInput` via:
//
//	WorkloadGroupSpecTemplatePatchArgs{...}
type WorkloadGroupSpecTemplatePatchInput interface {
	pulumi.Input

	ToWorkloadGroupSpecTemplatePatchOutput() WorkloadGroupSpecTemplatePatchOutput
	ToWorkloadGroupSpecTemplatePatchOutputWithContext(context.Context) WorkloadGroupSpecTemplatePatchOutput
}

// Template to be used for the generation of `WorkloadEntry` resources that belong to this `WorkloadGroup`.
type WorkloadGroupSpecTemplatePatchArgs struct {
	// Address associated with the network endpoint without the port.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// One or more labels associated with the endpoint.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The locality associated with the endpoint.
	Locality pulumi.StringPtrInput `pulumi:"locality"`
	// Network enables Istio to group endpoints resident in the same L3 domain/network.
	Network pulumi.StringPtrInput `pulumi:"network"`
	// Set of ports associated with the endpoint.
	Ports pulumi.IntMapInput `pulumi:"ports"`
	// The service account associated with the workload if a sidecar is present in the workload.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
	// The load balancing weight associated with the endpoint.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (WorkloadGroupSpecTemplatePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecTemplatePatch)(nil)).Elem()
}

func (i WorkloadGroupSpecTemplatePatchArgs) ToWorkloadGroupSpecTemplatePatchOutput() WorkloadGroupSpecTemplatePatchOutput {
	return i.ToWorkloadGroupSpecTemplatePatchOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecTemplatePatchArgs) ToWorkloadGroupSpecTemplatePatchOutputWithContext(ctx context.Context) WorkloadGroupSpecTemplatePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecTemplatePatchOutput)
}

func (i WorkloadGroupSpecTemplatePatchArgs) ToWorkloadGroupSpecTemplatePatchPtrOutput() WorkloadGroupSpecTemplatePatchPtrOutput {
	return i.ToWorkloadGroupSpecTemplatePatchPtrOutputWithContext(context.Background())
}

func (i WorkloadGroupSpecTemplatePatchArgs) ToWorkloadGroupSpecTemplatePatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecTemplatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecTemplatePatchOutput).ToWorkloadGroupSpecTemplatePatchPtrOutputWithContext(ctx)
}

// WorkloadGroupSpecTemplatePatchPtrInput is an input type that accepts WorkloadGroupSpecTemplatePatchArgs, WorkloadGroupSpecTemplatePatchPtr and WorkloadGroupSpecTemplatePatchPtrOutput values.
// You can construct a concrete instance of `WorkloadGroupSpecTemplatePatchPtrInput` via:
//
//	        WorkloadGroupSpecTemplatePatchArgs{...}
//
//	or:
//
//	        nil
type WorkloadGroupSpecTemplatePatchPtrInput interface {
	pulumi.Input

	ToWorkloadGroupSpecTemplatePatchPtrOutput() WorkloadGroupSpecTemplatePatchPtrOutput
	ToWorkloadGroupSpecTemplatePatchPtrOutputWithContext(context.Context) WorkloadGroupSpecTemplatePatchPtrOutput
}

type workloadGroupSpecTemplatePatchPtrType WorkloadGroupSpecTemplatePatchArgs

func WorkloadGroupSpecTemplatePatchPtr(v *WorkloadGroupSpecTemplatePatchArgs) WorkloadGroupSpecTemplatePatchPtrInput {
	return (*workloadGroupSpecTemplatePatchPtrType)(v)
}

func (*workloadGroupSpecTemplatePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecTemplatePatch)(nil)).Elem()
}

func (i *workloadGroupSpecTemplatePatchPtrType) ToWorkloadGroupSpecTemplatePatchPtrOutput() WorkloadGroupSpecTemplatePatchPtrOutput {
	return i.ToWorkloadGroupSpecTemplatePatchPtrOutputWithContext(context.Background())
}

func (i *workloadGroupSpecTemplatePatchPtrType) ToWorkloadGroupSpecTemplatePatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecTemplatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupSpecTemplatePatchPtrOutput)
}

// Template to be used for the generation of `WorkloadEntry` resources that belong to this `WorkloadGroup`.
type WorkloadGroupSpecTemplatePatchOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecTemplatePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupSpecTemplatePatch)(nil)).Elem()
}

func (o WorkloadGroupSpecTemplatePatchOutput) ToWorkloadGroupSpecTemplatePatchOutput() WorkloadGroupSpecTemplatePatchOutput {
	return o
}

func (o WorkloadGroupSpecTemplatePatchOutput) ToWorkloadGroupSpecTemplatePatchOutputWithContext(ctx context.Context) WorkloadGroupSpecTemplatePatchOutput {
	return o
}

func (o WorkloadGroupSpecTemplatePatchOutput) ToWorkloadGroupSpecTemplatePatchPtrOutput() WorkloadGroupSpecTemplatePatchPtrOutput {
	return o.ToWorkloadGroupSpecTemplatePatchPtrOutputWithContext(context.Background())
}

func (o WorkloadGroupSpecTemplatePatchOutput) ToWorkloadGroupSpecTemplatePatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecTemplatePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadGroupSpecTemplatePatch) *WorkloadGroupSpecTemplatePatch {
		return &v
	}).(WorkloadGroupSpecTemplatePatchPtrOutput)
}

// Address associated with the network endpoint without the port.
func (o WorkloadGroupSpecTemplatePatchOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecTemplatePatch) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// One or more labels associated with the endpoint.
func (o WorkloadGroupSpecTemplatePatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkloadGroupSpecTemplatePatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The locality associated with the endpoint.
func (o WorkloadGroupSpecTemplatePatchOutput) Locality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecTemplatePatch) *string { return v.Locality }).(pulumi.StringPtrOutput)
}

// Network enables Istio to group endpoints resident in the same L3 domain/network.
func (o WorkloadGroupSpecTemplatePatchOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecTemplatePatch) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// Set of ports associated with the endpoint.
func (o WorkloadGroupSpecTemplatePatchOutput) Ports() pulumi.IntMapOutput {
	return o.ApplyT(func(v WorkloadGroupSpecTemplatePatch) map[string]int { return v.Ports }).(pulumi.IntMapOutput)
}

// The service account associated with the workload if a sidecar is present in the workload.
func (o WorkloadGroupSpecTemplatePatchOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecTemplatePatch) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// The load balancing weight associated with the endpoint.
func (o WorkloadGroupSpecTemplatePatchOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadGroupSpecTemplatePatch) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type WorkloadGroupSpecTemplatePatchPtrOutput struct{ *pulumi.OutputState }

func (WorkloadGroupSpecTemplatePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupSpecTemplatePatch)(nil)).Elem()
}

func (o WorkloadGroupSpecTemplatePatchPtrOutput) ToWorkloadGroupSpecTemplatePatchPtrOutput() WorkloadGroupSpecTemplatePatchPtrOutput {
	return o
}

func (o WorkloadGroupSpecTemplatePatchPtrOutput) ToWorkloadGroupSpecTemplatePatchPtrOutputWithContext(ctx context.Context) WorkloadGroupSpecTemplatePatchPtrOutput {
	return o
}

func (o WorkloadGroupSpecTemplatePatchPtrOutput) Elem() WorkloadGroupSpecTemplatePatchOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecTemplatePatch) WorkloadGroupSpecTemplatePatch {
		if v != nil {
			return *v
		}
		var ret WorkloadGroupSpecTemplatePatch
		return ret
	}).(WorkloadGroupSpecTemplatePatchOutput)
}

// Address associated with the network endpoint without the port.
func (o WorkloadGroupSpecTemplatePatchPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecTemplatePatch) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// One or more labels associated with the endpoint.
func (o WorkloadGroupSpecTemplatePatchPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecTemplatePatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The locality associated with the endpoint.
func (o WorkloadGroupSpecTemplatePatchPtrOutput) Locality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecTemplatePatch) *string {
		if v == nil {
			return nil
		}
		return v.Locality
	}).(pulumi.StringPtrOutput)
}

// Network enables Istio to group endpoints resident in the same L3 domain/network.
func (o WorkloadGroupSpecTemplatePatchPtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecTemplatePatch) *string {
		if v == nil {
			return nil
		}
		return v.Network
	}).(pulumi.StringPtrOutput)
}

// Set of ports associated with the endpoint.
func (o WorkloadGroupSpecTemplatePatchPtrOutput) Ports() pulumi.IntMapOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecTemplatePatch) map[string]int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntMapOutput)
}

// The service account associated with the workload if a sidecar is present in the workload.
func (o WorkloadGroupSpecTemplatePatchPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecTemplatePatch) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(pulumi.StringPtrOutput)
}

// The load balancing weight associated with the endpoint.
func (o WorkloadGroupSpecTemplatePatchPtrOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupSpecTemplatePatch) *int {
		if v == nil {
			return nil
		}
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleTypeInput)(nil)).Elem(), DestinationRuleTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleTypeArrayInput)(nil)).Elem(), DestinationRuleTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleListTypeInput)(nil)).Elem(), DestinationRuleListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRulePatchTypeInput)(nil)).Elem(), DestinationRulePatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecInput)(nil)).Elem(), DestinationRuleSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecPtrInput)(nil)).Elem(), DestinationRuleSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecPatchInput)(nil)).Elem(), DestinationRuleSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecPatchPtrInput)(nil)).Elem(), DestinationRuleSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsInput)(nil)).Elem(), DestinationRuleSpecSubsetsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsArrayInput)(nil)).Elem(), DestinationRuleSpecSubsetsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsPatchArrayInput)(nil)).Elem(), DestinationRuleSpecSubsetsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyTlsInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyTlsPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyTlsPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyTlsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyTlsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyTunnelInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyTunnelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyTunnelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrInput)(nil)).Elem(), DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolHttpInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyConnectionPoolHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyConnectionPoolHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyConnectionPoolPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyConnectionPoolPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolTcpInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyConnectionPoolTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyConnectionPoolTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyLoadBalancerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyOutlierDetectionInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyOutlierDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyOutlierDetectionPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyOutlierDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyOutlierDetectionPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyOutlierDetectionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyOutlierDetectionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsArrayInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsPortInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyProxyProtocolInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyProxyProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyProxyProtocolPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyProxyProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyProxyProtocolPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyProxyProtocolPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyProxyProtocolPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyTlsInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyTlsPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyTlsPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyTlsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyTlsPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyTlsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyTunnelInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyTunnelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyTunnelPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyTunnelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyTunnelPatchInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyTunnelPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecTrafficPolicyTunnelPatchPtrInput)(nil)).Elem(), DestinationRuleSpecTrafficPolicyTunnelPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecWorkloadSelectorInput)(nil)).Elem(), DestinationRuleSpecWorkloadSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecWorkloadSelectorPtrInput)(nil)).Elem(), DestinationRuleSpecWorkloadSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecWorkloadSelectorPatchInput)(nil)).Elem(), DestinationRuleSpecWorkloadSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleSpecWorkloadSelectorPatchPtrInput)(nil)).Elem(), DestinationRuleSpecWorkloadSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTypeInput)(nil)).Elem(), GatewayTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTypeArrayInput)(nil)).Elem(), GatewayTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayListTypeInput)(nil)).Elem(), GatewayListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPatchTypeInput)(nil)).Elem(), GatewayPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaySpecInput)(nil)).Elem(), GatewaySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaySpecPtrInput)(nil)).Elem(), GatewaySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaySpecPatchInput)(nil)).Elem(), GatewaySpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaySpecPatchPtrInput)(nil)).Elem(), GatewaySpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaySpecServersInput)(nil)).Elem(), GatewaySpecServersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaySpecServersArrayInput)(nil)).Elem(), GatewaySpecServersArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaySpecServersPatchInput)(nil)).Elem(), GatewaySpecServersPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaySpecServersPatchArrayInput)(nil)).Elem(), GatewaySpecServersPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaySpecServersPortInput)(nil)).Elem(), GatewaySpecServersPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaySpecServersPortPtrInput)(nil)).Elem(), GatewaySpecServersPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaySpecServersPortPatchInput)(nil)).Elem(), GatewaySpecServersPortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaySpecServersPortPatchPtrInput)(nil)).Elem(), GatewaySpecServersPortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaySpecServersTlsInput)(nil)).Elem(), GatewaySpecServersTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaySpecServersTlsPtrInput)(nil)).Elem(), GatewaySpecServersTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaySpecServersTlsPatchInput)(nil)).Elem(), GatewaySpecServersTlsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaySpecServersTlsPatchPtrInput)(nil)).Elem(), GatewaySpecServersTlsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyConfigTypeInput)(nil)).Elem(), ProxyConfigTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyConfigTypeArrayInput)(nil)).Elem(), ProxyConfigTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyConfigListTypeInput)(nil)).Elem(), ProxyConfigListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyConfigPatchTypeInput)(nil)).Elem(), ProxyConfigPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyConfigSpecInput)(nil)).Elem(), ProxyConfigSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyConfigSpecPtrInput)(nil)).Elem(), ProxyConfigSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyConfigSpecImageInput)(nil)).Elem(), ProxyConfigSpecImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyConfigSpecImagePtrInput)(nil)).Elem(), ProxyConfigSpecImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyConfigSpecImagePatchInput)(nil)).Elem(), ProxyConfigSpecImagePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyConfigSpecImagePatchPtrInput)(nil)).Elem(), ProxyConfigSpecImagePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyConfigSpecPatchInput)(nil)).Elem(), ProxyConfigSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyConfigSpecPatchPtrInput)(nil)).Elem(), ProxyConfigSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyConfigSpecSelectorInput)(nil)).Elem(), ProxyConfigSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyConfigSpecSelectorPtrInput)(nil)).Elem(), ProxyConfigSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyConfigSpecSelectorPatchInput)(nil)).Elem(), ProxyConfigSpecSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyConfigSpecSelectorPatchPtrInput)(nil)).Elem(), ProxyConfigSpecSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntryTypeInput)(nil)).Elem(), ServiceEntryTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntryTypeArrayInput)(nil)).Elem(), ServiceEntryTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntryListTypeInput)(nil)).Elem(), ServiceEntryListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntryPatchTypeInput)(nil)).Elem(), ServiceEntryPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntrySpecInput)(nil)).Elem(), ServiceEntrySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntrySpecPtrInput)(nil)).Elem(), ServiceEntrySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntrySpecEndpointsInput)(nil)).Elem(), ServiceEntrySpecEndpointsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntrySpecEndpointsArrayInput)(nil)).Elem(), ServiceEntrySpecEndpointsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntrySpecEndpointsPatchInput)(nil)).Elem(), ServiceEntrySpecEndpointsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntrySpecEndpointsPatchArrayInput)(nil)).Elem(), ServiceEntrySpecEndpointsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntrySpecPatchInput)(nil)).Elem(), ServiceEntrySpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntrySpecPatchPtrInput)(nil)).Elem(), ServiceEntrySpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntrySpecPortsInput)(nil)).Elem(), ServiceEntrySpecPortsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntrySpecPortsArrayInput)(nil)).Elem(), ServiceEntrySpecPortsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntrySpecPortsPatchInput)(nil)).Elem(), ServiceEntrySpecPortsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntrySpecPortsPatchArrayInput)(nil)).Elem(), ServiceEntrySpecPortsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntrySpecWorkloadSelectorInput)(nil)).Elem(), ServiceEntrySpecWorkloadSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntrySpecWorkloadSelectorPtrInput)(nil)).Elem(), ServiceEntrySpecWorkloadSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntrySpecWorkloadSelectorPatchInput)(nil)).Elem(), ServiceEntrySpecWorkloadSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntrySpecWorkloadSelectorPatchPtrInput)(nil)).Elem(), ServiceEntrySpecWorkloadSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarTypeInput)(nil)).Elem(), SidecarTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarTypeArrayInput)(nil)).Elem(), SidecarTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarListTypeInput)(nil)).Elem(), SidecarListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarPatchTypeInput)(nil)).Elem(), SidecarPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecInput)(nil)).Elem(), SidecarSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecPtrInput)(nil)).Elem(), SidecarSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecEgressInput)(nil)).Elem(), SidecarSpecEgressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecEgressArrayInput)(nil)).Elem(), SidecarSpecEgressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecEgressPatchInput)(nil)).Elem(), SidecarSpecEgressPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecEgressPatchArrayInput)(nil)).Elem(), SidecarSpecEgressPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecEgressPortInput)(nil)).Elem(), SidecarSpecEgressPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecEgressPortPtrInput)(nil)).Elem(), SidecarSpecEgressPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecEgressPortPatchInput)(nil)).Elem(), SidecarSpecEgressPortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecEgressPortPatchPtrInput)(nil)).Elem(), SidecarSpecEgressPortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecInboundConnectionPoolInput)(nil)).Elem(), SidecarSpecInboundConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecInboundConnectionPoolPtrInput)(nil)).Elem(), SidecarSpecInboundConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecInboundConnectionPoolHttpInput)(nil)).Elem(), SidecarSpecInboundConnectionPoolHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecInboundConnectionPoolHttpPtrInput)(nil)).Elem(), SidecarSpecInboundConnectionPoolHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecInboundConnectionPoolHttpPatchInput)(nil)).Elem(), SidecarSpecInboundConnectionPoolHttpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecInboundConnectionPoolHttpPatchPtrInput)(nil)).Elem(), SidecarSpecInboundConnectionPoolHttpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecInboundConnectionPoolPatchInput)(nil)).Elem(), SidecarSpecInboundConnectionPoolPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecInboundConnectionPoolPatchPtrInput)(nil)).Elem(), SidecarSpecInboundConnectionPoolPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecInboundConnectionPoolTcpInput)(nil)).Elem(), SidecarSpecInboundConnectionPoolTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecInboundConnectionPoolTcpPtrInput)(nil)).Elem(), SidecarSpecInboundConnectionPoolTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecInboundConnectionPoolTcpPatchInput)(nil)).Elem(), SidecarSpecInboundConnectionPoolTcpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecInboundConnectionPoolTcpPatchPtrInput)(nil)).Elem(), SidecarSpecInboundConnectionPoolTcpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecInboundConnectionPoolTcpTcpKeepaliveInput)(nil)).Elem(), SidecarSpecInboundConnectionPoolTcpTcpKeepaliveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrInput)(nil)).Elem(), SidecarSpecInboundConnectionPoolTcpTcpKeepaliveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchInput)(nil)).Elem(), SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrInput)(nil)).Elem(), SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressInput)(nil)).Elem(), SidecarSpecIngressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressArrayInput)(nil)).Elem(), SidecarSpecIngressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressConnectionPoolInput)(nil)).Elem(), SidecarSpecIngressConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressConnectionPoolPtrInput)(nil)).Elem(), SidecarSpecIngressConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressConnectionPoolHttpInput)(nil)).Elem(), SidecarSpecIngressConnectionPoolHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressConnectionPoolHttpPtrInput)(nil)).Elem(), SidecarSpecIngressConnectionPoolHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressConnectionPoolHttpPatchInput)(nil)).Elem(), SidecarSpecIngressConnectionPoolHttpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressConnectionPoolHttpPatchPtrInput)(nil)).Elem(), SidecarSpecIngressConnectionPoolHttpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressConnectionPoolPatchInput)(nil)).Elem(), SidecarSpecIngressConnectionPoolPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressConnectionPoolPatchPtrInput)(nil)).Elem(), SidecarSpecIngressConnectionPoolPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressConnectionPoolTcpInput)(nil)).Elem(), SidecarSpecIngressConnectionPoolTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressConnectionPoolTcpPtrInput)(nil)).Elem(), SidecarSpecIngressConnectionPoolTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressConnectionPoolTcpPatchInput)(nil)).Elem(), SidecarSpecIngressConnectionPoolTcpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressConnectionPoolTcpPatchPtrInput)(nil)).Elem(), SidecarSpecIngressConnectionPoolTcpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressConnectionPoolTcpTcpKeepaliveInput)(nil)).Elem(), SidecarSpecIngressConnectionPoolTcpTcpKeepaliveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrInput)(nil)).Elem(), SidecarSpecIngressConnectionPoolTcpTcpKeepaliveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchInput)(nil)).Elem(), SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrInput)(nil)).Elem(), SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressPatchInput)(nil)).Elem(), SidecarSpecIngressPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressPatchArrayInput)(nil)).Elem(), SidecarSpecIngressPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressPortInput)(nil)).Elem(), SidecarSpecIngressPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressPortPtrInput)(nil)).Elem(), SidecarSpecIngressPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressPortPatchInput)(nil)).Elem(), SidecarSpecIngressPortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressPortPatchPtrInput)(nil)).Elem(), SidecarSpecIngressPortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressTlsInput)(nil)).Elem(), SidecarSpecIngressTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressTlsPtrInput)(nil)).Elem(), SidecarSpecIngressTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressTlsPatchInput)(nil)).Elem(), SidecarSpecIngressTlsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecIngressTlsPatchPtrInput)(nil)).Elem(), SidecarSpecIngressTlsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecOutboundTrafficPolicyInput)(nil)).Elem(), SidecarSpecOutboundTrafficPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecOutboundTrafficPolicyPtrInput)(nil)).Elem(), SidecarSpecOutboundTrafficPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecOutboundTrafficPolicyEgressProxyInput)(nil)).Elem(), SidecarSpecOutboundTrafficPolicyEgressProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecOutboundTrafficPolicyEgressProxyPtrInput)(nil)).Elem(), SidecarSpecOutboundTrafficPolicyEgressProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecOutboundTrafficPolicyEgressProxyPatchInput)(nil)).Elem(), SidecarSpecOutboundTrafficPolicyEgressProxyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrInput)(nil)).Elem(), SidecarSpecOutboundTrafficPolicyEgressProxyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecOutboundTrafficPolicyEgressProxyPortInput)(nil)).Elem(), SidecarSpecOutboundTrafficPolicyEgressProxyPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrInput)(nil)).Elem(), SidecarSpecOutboundTrafficPolicyEgressProxyPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchInput)(nil)).Elem(), SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrInput)(nil)).Elem(), SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecOutboundTrafficPolicyPatchInput)(nil)).Elem(), SidecarSpecOutboundTrafficPolicyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecOutboundTrafficPolicyPatchPtrInput)(nil)).Elem(), SidecarSpecOutboundTrafficPolicyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecPatchInput)(nil)).Elem(), SidecarSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecPatchPtrInput)(nil)).Elem(), SidecarSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecWorkloadSelectorInput)(nil)).Elem(), SidecarSpecWorkloadSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecWorkloadSelectorPtrInput)(nil)).Elem(), SidecarSpecWorkloadSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecWorkloadSelectorPatchInput)(nil)).Elem(), SidecarSpecWorkloadSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SidecarSpecWorkloadSelectorPatchPtrInput)(nil)).Elem(), SidecarSpecWorkloadSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceTypeInput)(nil)).Elem(), VirtualServiceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceTypeArrayInput)(nil)).Elem(), VirtualServiceTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceListTypeInput)(nil)).Elem(), VirtualServiceListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServicePatchTypeInput)(nil)).Elem(), VirtualServicePatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecInput)(nil)).Elem(), VirtualServiceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecPtrInput)(nil)).Elem(), VirtualServiceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpInput)(nil)).Elem(), VirtualServiceSpecHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpArrayInput)(nil)).Elem(), VirtualServiceSpecHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpCorsPolicyInput)(nil)).Elem(), VirtualServiceSpecHttpCorsPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpCorsPolicyPtrInput)(nil)).Elem(), VirtualServiceSpecHttpCorsPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpCorsPolicyAllowOriginsInput)(nil)).Elem(), VirtualServiceSpecHttpCorsPolicyAllowOriginsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpCorsPolicyAllowOriginsArrayInput)(nil)).Elem(), VirtualServiceSpecHttpCorsPolicyAllowOriginsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchInput)(nil)).Elem(), VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayInput)(nil)).Elem(), VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpCorsPolicyPatchInput)(nil)).Elem(), VirtualServiceSpecHttpCorsPolicyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpCorsPolicyPatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpCorsPolicyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpDelegateInput)(nil)).Elem(), VirtualServiceSpecHttpDelegateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpDelegatePtrInput)(nil)).Elem(), VirtualServiceSpecHttpDelegateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpDelegatePatchInput)(nil)).Elem(), VirtualServiceSpecHttpDelegatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpDelegatePatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpDelegatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpDirectResponseInput)(nil)).Elem(), VirtualServiceSpecHttpDirectResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpDirectResponsePtrInput)(nil)).Elem(), VirtualServiceSpecHttpDirectResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpDirectResponseBodyInput)(nil)).Elem(), VirtualServiceSpecHttpDirectResponseBodyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpDirectResponseBodyPtrInput)(nil)).Elem(), VirtualServiceSpecHttpDirectResponseBodyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpDirectResponseBodyPatchInput)(nil)).Elem(), VirtualServiceSpecHttpDirectResponseBodyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpDirectResponseBodyPatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpDirectResponseBodyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpDirectResponsePatchInput)(nil)).Elem(), VirtualServiceSpecHttpDirectResponsePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpDirectResponsePatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpDirectResponsePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpFaultInput)(nil)).Elem(), VirtualServiceSpecHttpFaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpFaultPtrInput)(nil)).Elem(), VirtualServiceSpecHttpFaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpFaultAbortInput)(nil)).Elem(), VirtualServiceSpecHttpFaultAbortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpFaultAbortPtrInput)(nil)).Elem(), VirtualServiceSpecHttpFaultAbortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpFaultAbortPatchInput)(nil)).Elem(), VirtualServiceSpecHttpFaultAbortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpFaultAbortPatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpFaultAbortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpFaultAbortPercentageInput)(nil)).Elem(), VirtualServiceSpecHttpFaultAbortPercentageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpFaultAbortPercentagePtrInput)(nil)).Elem(), VirtualServiceSpecHttpFaultAbortPercentageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpFaultAbortPercentagePatchInput)(nil)).Elem(), VirtualServiceSpecHttpFaultAbortPercentagePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpFaultAbortPercentagePatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpFaultAbortPercentagePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpFaultDelayInput)(nil)).Elem(), VirtualServiceSpecHttpFaultDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpFaultDelayPtrInput)(nil)).Elem(), VirtualServiceSpecHttpFaultDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpFaultDelayPatchInput)(nil)).Elem(), VirtualServiceSpecHttpFaultDelayPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpFaultDelayPatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpFaultDelayPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpFaultDelayPercentageInput)(nil)).Elem(), VirtualServiceSpecHttpFaultDelayPercentageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpFaultDelayPercentagePtrInput)(nil)).Elem(), VirtualServiceSpecHttpFaultDelayPercentageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpFaultDelayPercentagePatchInput)(nil)).Elem(), VirtualServiceSpecHttpFaultDelayPercentagePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpFaultDelayPercentagePatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpFaultDelayPercentagePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpFaultPatchInput)(nil)).Elem(), VirtualServiceSpecHttpFaultPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpFaultPatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpFaultPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpHeadersInput)(nil)).Elem(), VirtualServiceSpecHttpHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpHeadersPtrInput)(nil)).Elem(), VirtualServiceSpecHttpHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpHeadersPatchInput)(nil)).Elem(), VirtualServiceSpecHttpHeadersPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpHeadersPatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpHeadersPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpHeadersRequestInput)(nil)).Elem(), VirtualServiceSpecHttpHeadersRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpHeadersRequestPtrInput)(nil)).Elem(), VirtualServiceSpecHttpHeadersRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpHeadersRequestPatchInput)(nil)).Elem(), VirtualServiceSpecHttpHeadersRequestPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpHeadersRequestPatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpHeadersRequestPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpHeadersResponseInput)(nil)).Elem(), VirtualServiceSpecHttpHeadersResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpHeadersResponsePtrInput)(nil)).Elem(), VirtualServiceSpecHttpHeadersResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpHeadersResponsePatchInput)(nil)).Elem(), VirtualServiceSpecHttpHeadersResponsePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpHeadersResponsePatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpHeadersResponsePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMatchInput)(nil)).Elem(), VirtualServiceSpecHttpMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMatchArrayInput)(nil)).Elem(), VirtualServiceSpecHttpMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMatchAuthorityInput)(nil)).Elem(), VirtualServiceSpecHttpMatchAuthorityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMatchAuthorityPtrInput)(nil)).Elem(), VirtualServiceSpecHttpMatchAuthorityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMatchAuthorityPatchInput)(nil)).Elem(), VirtualServiceSpecHttpMatchAuthorityPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMatchAuthorityPatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpMatchAuthorityPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMatchMethodInput)(nil)).Elem(), VirtualServiceSpecHttpMatchMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMatchMethodPtrInput)(nil)).Elem(), VirtualServiceSpecHttpMatchMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMatchMethodPatchInput)(nil)).Elem(), VirtualServiceSpecHttpMatchMethodPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMatchMethodPatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpMatchMethodPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMatchPatchInput)(nil)).Elem(), VirtualServiceSpecHttpMatchPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMatchPatchArrayInput)(nil)).Elem(), VirtualServiceSpecHttpMatchPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMatchSchemeInput)(nil)).Elem(), VirtualServiceSpecHttpMatchSchemeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMatchSchemePtrInput)(nil)).Elem(), VirtualServiceSpecHttpMatchSchemeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMatchSchemePatchInput)(nil)).Elem(), VirtualServiceSpecHttpMatchSchemePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMatchSchemePatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpMatchSchemePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMatchUriInput)(nil)).Elem(), VirtualServiceSpecHttpMatchUriArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMatchUriPtrInput)(nil)).Elem(), VirtualServiceSpecHttpMatchUriArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMatchUriPatchInput)(nil)).Elem(), VirtualServiceSpecHttpMatchUriPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMatchUriPatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpMatchUriPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorPtrInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorPatchInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorPatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorPercentageInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorPercentageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorPercentagePtrInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorPercentageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorPercentagePatchInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorPercentagePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorPercentagePatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorPercentagePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorPortInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorPortPtrInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorPortPatchInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorPortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorPortPatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorPortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorsInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorsArrayInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorsDestinationInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorsDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorsDestinationPtrInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorsDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorsDestinationPatchInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorsDestinationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorsDestinationPatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorsDestinationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorsDestinationPortInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorsDestinationPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorsDestinationPortPtrInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorsDestinationPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorsDestinationPortPatchInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorsDestinationPortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorsDestinationPortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorsPatchInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorsPatchArrayInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorsPercentageInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorsPercentageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorsPercentagePtrInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorsPercentageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorsPercentagePatchInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorsPercentagePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpMirrorsPercentagePatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpMirrorsPercentagePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpPatchInput)(nil)).Elem(), VirtualServiceSpecHttpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpPatchArrayInput)(nil)).Elem(), VirtualServiceSpecHttpPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRedirectInput)(nil)).Elem(), VirtualServiceSpecHttpRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRedirectPtrInput)(nil)).Elem(), VirtualServiceSpecHttpRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRedirectPatchInput)(nil)).Elem(), VirtualServiceSpecHttpRedirectPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRedirectPatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpRedirectPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRetriesInput)(nil)).Elem(), VirtualServiceSpecHttpRetriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRetriesPtrInput)(nil)).Elem(), VirtualServiceSpecHttpRetriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRetriesPatchInput)(nil)).Elem(), VirtualServiceSpecHttpRetriesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRetriesPatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpRetriesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRewriteInput)(nil)).Elem(), VirtualServiceSpecHttpRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRewritePtrInput)(nil)).Elem(), VirtualServiceSpecHttpRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRewritePatchInput)(nil)).Elem(), VirtualServiceSpecHttpRewritePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRewritePatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpRewritePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRewriteUriRegexRewriteInput)(nil)).Elem(), VirtualServiceSpecHttpRewriteUriRegexRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRewriteUriRegexRewritePtrInput)(nil)).Elem(), VirtualServiceSpecHttpRewriteUriRegexRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRewriteUriRegexRewritePatchInput)(nil)).Elem(), VirtualServiceSpecHttpRewriteUriRegexRewritePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpRewriteUriRegexRewritePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRouteInput)(nil)).Elem(), VirtualServiceSpecHttpRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRouteArrayInput)(nil)).Elem(), VirtualServiceSpecHttpRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRouteDestinationInput)(nil)).Elem(), VirtualServiceSpecHttpRouteDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRouteDestinationPtrInput)(nil)).Elem(), VirtualServiceSpecHttpRouteDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRouteDestinationPatchInput)(nil)).Elem(), VirtualServiceSpecHttpRouteDestinationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRouteDestinationPatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpRouteDestinationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRouteDestinationPortInput)(nil)).Elem(), VirtualServiceSpecHttpRouteDestinationPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRouteDestinationPortPtrInput)(nil)).Elem(), VirtualServiceSpecHttpRouteDestinationPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRouteDestinationPortPatchInput)(nil)).Elem(), VirtualServiceSpecHttpRouteDestinationPortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRouteDestinationPortPatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpRouteDestinationPortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRouteHeadersInput)(nil)).Elem(), VirtualServiceSpecHttpRouteHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRouteHeadersPtrInput)(nil)).Elem(), VirtualServiceSpecHttpRouteHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRouteHeadersPatchInput)(nil)).Elem(), VirtualServiceSpecHttpRouteHeadersPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRouteHeadersPatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpRouteHeadersPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRouteHeadersRequestInput)(nil)).Elem(), VirtualServiceSpecHttpRouteHeadersRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRouteHeadersRequestPtrInput)(nil)).Elem(), VirtualServiceSpecHttpRouteHeadersRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRouteHeadersRequestPatchInput)(nil)).Elem(), VirtualServiceSpecHttpRouteHeadersRequestPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRouteHeadersRequestPatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpRouteHeadersRequestPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRouteHeadersResponseInput)(nil)).Elem(), VirtualServiceSpecHttpRouteHeadersResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRouteHeadersResponsePtrInput)(nil)).Elem(), VirtualServiceSpecHttpRouteHeadersResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRouteHeadersResponsePatchInput)(nil)).Elem(), VirtualServiceSpecHttpRouteHeadersResponsePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRouteHeadersResponsePatchPtrInput)(nil)).Elem(), VirtualServiceSpecHttpRouteHeadersResponsePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRoutePatchInput)(nil)).Elem(), VirtualServiceSpecHttpRoutePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecHttpRoutePatchArrayInput)(nil)).Elem(), VirtualServiceSpecHttpRoutePatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecPatchInput)(nil)).Elem(), VirtualServiceSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecPatchPtrInput)(nil)).Elem(), VirtualServiceSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTcpInput)(nil)).Elem(), VirtualServiceSpecTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTcpArrayInput)(nil)).Elem(), VirtualServiceSpecTcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTcpMatchInput)(nil)).Elem(), VirtualServiceSpecTcpMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTcpMatchArrayInput)(nil)).Elem(), VirtualServiceSpecTcpMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTcpMatchPatchInput)(nil)).Elem(), VirtualServiceSpecTcpMatchPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTcpMatchPatchArrayInput)(nil)).Elem(), VirtualServiceSpecTcpMatchPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTcpPatchInput)(nil)).Elem(), VirtualServiceSpecTcpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTcpPatchArrayInput)(nil)).Elem(), VirtualServiceSpecTcpPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTcpRouteInput)(nil)).Elem(), VirtualServiceSpecTcpRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTcpRouteArrayInput)(nil)).Elem(), VirtualServiceSpecTcpRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTcpRouteDestinationInput)(nil)).Elem(), VirtualServiceSpecTcpRouteDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTcpRouteDestinationPtrInput)(nil)).Elem(), VirtualServiceSpecTcpRouteDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTcpRouteDestinationPatchInput)(nil)).Elem(), VirtualServiceSpecTcpRouteDestinationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTcpRouteDestinationPatchPtrInput)(nil)).Elem(), VirtualServiceSpecTcpRouteDestinationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTcpRouteDestinationPortInput)(nil)).Elem(), VirtualServiceSpecTcpRouteDestinationPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTcpRouteDestinationPortPtrInput)(nil)).Elem(), VirtualServiceSpecTcpRouteDestinationPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTcpRouteDestinationPortPatchInput)(nil)).Elem(), VirtualServiceSpecTcpRouteDestinationPortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTcpRouteDestinationPortPatchPtrInput)(nil)).Elem(), VirtualServiceSpecTcpRouteDestinationPortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTcpRoutePatchInput)(nil)).Elem(), VirtualServiceSpecTcpRoutePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTcpRoutePatchArrayInput)(nil)).Elem(), VirtualServiceSpecTcpRoutePatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTlsInput)(nil)).Elem(), VirtualServiceSpecTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTlsArrayInput)(nil)).Elem(), VirtualServiceSpecTlsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTlsMatchInput)(nil)).Elem(), VirtualServiceSpecTlsMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTlsMatchArrayInput)(nil)).Elem(), VirtualServiceSpecTlsMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTlsMatchPatchInput)(nil)).Elem(), VirtualServiceSpecTlsMatchPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTlsMatchPatchArrayInput)(nil)).Elem(), VirtualServiceSpecTlsMatchPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTlsPatchInput)(nil)).Elem(), VirtualServiceSpecTlsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTlsPatchArrayInput)(nil)).Elem(), VirtualServiceSpecTlsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTlsRouteInput)(nil)).Elem(), VirtualServiceSpecTlsRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTlsRouteArrayInput)(nil)).Elem(), VirtualServiceSpecTlsRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTlsRouteDestinationInput)(nil)).Elem(), VirtualServiceSpecTlsRouteDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTlsRouteDestinationPtrInput)(nil)).Elem(), VirtualServiceSpecTlsRouteDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTlsRouteDestinationPatchInput)(nil)).Elem(), VirtualServiceSpecTlsRouteDestinationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTlsRouteDestinationPatchPtrInput)(nil)).Elem(), VirtualServiceSpecTlsRouteDestinationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTlsRouteDestinationPortInput)(nil)).Elem(), VirtualServiceSpecTlsRouteDestinationPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTlsRouteDestinationPortPtrInput)(nil)).Elem(), VirtualServiceSpecTlsRouteDestinationPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTlsRouteDestinationPortPatchInput)(nil)).Elem(), VirtualServiceSpecTlsRouteDestinationPortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTlsRouteDestinationPortPatchPtrInput)(nil)).Elem(), VirtualServiceSpecTlsRouteDestinationPortPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTlsRoutePatchInput)(nil)).Elem(), VirtualServiceSpecTlsRoutePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecTlsRoutePatchArrayInput)(nil)).Elem(), VirtualServiceSpecTlsRoutePatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadEntryTypeInput)(nil)).Elem(), WorkloadEntryTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadEntryTypeArrayInput)(nil)).Elem(), WorkloadEntryTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadEntryListTypeInput)(nil)).Elem(), WorkloadEntryListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadEntryPatchTypeInput)(nil)).Elem(), WorkloadEntryPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadEntrySpecInput)(nil)).Elem(), WorkloadEntrySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadEntrySpecPtrInput)(nil)).Elem(), WorkloadEntrySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadEntrySpecPatchInput)(nil)).Elem(), WorkloadEntrySpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadEntrySpecPatchPtrInput)(nil)).Elem(), WorkloadEntrySpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupTypeInput)(nil)).Elem(), WorkloadGroupTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupTypeArrayInput)(nil)).Elem(), WorkloadGroupTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupListTypeInput)(nil)).Elem(), WorkloadGroupListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupPatchTypeInput)(nil)).Elem(), WorkloadGroupPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecInput)(nil)).Elem(), WorkloadGroupSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecPtrInput)(nil)).Elem(), WorkloadGroupSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecMetadataInput)(nil)).Elem(), WorkloadGroupSpecMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecMetadataPtrInput)(nil)).Elem(), WorkloadGroupSpecMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecMetadataPatchInput)(nil)).Elem(), WorkloadGroupSpecMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecMetadataPatchPtrInput)(nil)).Elem(), WorkloadGroupSpecMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecPatchInput)(nil)).Elem(), WorkloadGroupSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecPatchPtrInput)(nil)).Elem(), WorkloadGroupSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecProbeInput)(nil)).Elem(), WorkloadGroupSpecProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecProbePtrInput)(nil)).Elem(), WorkloadGroupSpecProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecProbeExecInput)(nil)).Elem(), WorkloadGroupSpecProbeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecProbeExecPtrInput)(nil)).Elem(), WorkloadGroupSpecProbeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecProbeExecPatchInput)(nil)).Elem(), WorkloadGroupSpecProbeExecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecProbeExecPatchPtrInput)(nil)).Elem(), WorkloadGroupSpecProbeExecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecProbeHttpGetInput)(nil)).Elem(), WorkloadGroupSpecProbeHttpGetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecProbeHttpGetPtrInput)(nil)).Elem(), WorkloadGroupSpecProbeHttpGetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecProbeHttpGetHttpHeadersInput)(nil)).Elem(), WorkloadGroupSpecProbeHttpGetHttpHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecProbeHttpGetHttpHeadersArrayInput)(nil)).Elem(), WorkloadGroupSpecProbeHttpGetHttpHeadersArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecProbeHttpGetHttpHeadersPatchInput)(nil)).Elem(), WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayInput)(nil)).Elem(), WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecProbeHttpGetPatchInput)(nil)).Elem(), WorkloadGroupSpecProbeHttpGetPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecProbeHttpGetPatchPtrInput)(nil)).Elem(), WorkloadGroupSpecProbeHttpGetPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecProbePatchInput)(nil)).Elem(), WorkloadGroupSpecProbePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecProbePatchPtrInput)(nil)).Elem(), WorkloadGroupSpecProbePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecProbeTcpSocketInput)(nil)).Elem(), WorkloadGroupSpecProbeTcpSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecProbeTcpSocketPtrInput)(nil)).Elem(), WorkloadGroupSpecProbeTcpSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecProbeTcpSocketPatchInput)(nil)).Elem(), WorkloadGroupSpecProbeTcpSocketPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecProbeTcpSocketPatchPtrInput)(nil)).Elem(), WorkloadGroupSpecProbeTcpSocketPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecTemplateInput)(nil)).Elem(), WorkloadGroupSpecTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecTemplatePtrInput)(nil)).Elem(), WorkloadGroupSpecTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecTemplatePatchInput)(nil)).Elem(), WorkloadGroupSpecTemplatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupSpecTemplatePatchPtrInput)(nil)).Elem(), WorkloadGroupSpecTemplatePatchArgs{})
	pulumi.RegisterOutputType(DestinationRuleTypeOutput{})
	pulumi.RegisterOutputType(DestinationRuleTypeArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleListTypeOutput{})
	pulumi.RegisterOutputType(DestinationRulePatchTypeOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsPatchArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolHttpPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyLoadBalancerPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyOutlierDetectionPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPatchArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsPortPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyPortLevelSettingsTlsPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyProxyProtocolPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyTlsOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyTlsPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyTlsPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyTlsPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyTunnelOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyTunnelPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecSubsetsTrafficPolicyTunnelPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyConnectionPoolOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyConnectionPoolPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyConnectionPoolHttpOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyConnectionPoolHttpPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyConnectionPoolHttpPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyConnectionPoolPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyConnectionPoolPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyConnectionPoolTcpOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyConnectionPoolTcpPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyConnectionPoolTcpPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepaliveOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyConnectionPoolTcpTcpKeepalivePatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookieOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashHttpCookiePatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashMaglevPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerConsistentHashRingHashPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributeArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingDistributePatchArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingFailoverPatchArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerLocalityLbSettingPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyLoadBalancerPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyOutlierDetectionOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyOutlierDetectionPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyOutlierDetectionPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyOutlierDetectionPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolHttpPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepaliveOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsConnectionPoolTcpTcpKeepalivePatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookieOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashHttpCookiePatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashMaglevPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerConsistentHashRingHashPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributeArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingDistributePatchArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingFailoverPatchArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerLocalityLbSettingPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsLoadBalancerPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsOutlierDetectionPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsPatchArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsPortOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsPortPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyPortLevelSettingsTlsPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyProxyProtocolOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyProxyProtocolPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyProxyProtocolPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyProxyProtocolPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyTlsOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyTlsPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyTlsPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyTlsPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyTunnelOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyTunnelPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyTunnelPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecTrafficPolicyTunnelPatchPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecWorkloadSelectorOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecWorkloadSelectorPtrOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecWorkloadSelectorPatchOutput{})
	pulumi.RegisterOutputType(DestinationRuleSpecWorkloadSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(GatewayTypeOutput{})
	pulumi.RegisterOutputType(GatewayTypeArrayOutput{})
	pulumi.RegisterOutputType(GatewayListTypeOutput{})
	pulumi.RegisterOutputType(GatewayPatchTypeOutput{})
	pulumi.RegisterOutputType(GatewaySpecOutput{})
	pulumi.RegisterOutputType(GatewaySpecPtrOutput{})
	pulumi.RegisterOutputType(GatewaySpecPatchOutput{})
	pulumi.RegisterOutputType(GatewaySpecPatchPtrOutput{})
	pulumi.RegisterOutputType(GatewaySpecServersOutput{})
	pulumi.RegisterOutputType(GatewaySpecServersArrayOutput{})
	pulumi.RegisterOutputType(GatewaySpecServersPatchOutput{})
	pulumi.RegisterOutputType(GatewaySpecServersPatchArrayOutput{})
	pulumi.RegisterOutputType(GatewaySpecServersPortOutput{})
	pulumi.RegisterOutputType(GatewaySpecServersPortPtrOutput{})
	pulumi.RegisterOutputType(GatewaySpecServersPortPatchOutput{})
	pulumi.RegisterOutputType(GatewaySpecServersPortPatchPtrOutput{})
	pulumi.RegisterOutputType(GatewaySpecServersTlsOutput{})
	pulumi.RegisterOutputType(GatewaySpecServersTlsPtrOutput{})
	pulumi.RegisterOutputType(GatewaySpecServersTlsPatchOutput{})
	pulumi.RegisterOutputType(GatewaySpecServersTlsPatchPtrOutput{})
	pulumi.RegisterOutputType(ProxyConfigTypeOutput{})
	pulumi.RegisterOutputType(ProxyConfigTypeArrayOutput{})
	pulumi.RegisterOutputType(ProxyConfigListTypeOutput{})
	pulumi.RegisterOutputType(ProxyConfigPatchTypeOutput{})
	pulumi.RegisterOutputType(ProxyConfigSpecOutput{})
	pulumi.RegisterOutputType(ProxyConfigSpecPtrOutput{})
	pulumi.RegisterOutputType(ProxyConfigSpecImageOutput{})
	pulumi.RegisterOutputType(ProxyConfigSpecImagePtrOutput{})
	pulumi.RegisterOutputType(ProxyConfigSpecImagePatchOutput{})
	pulumi.RegisterOutputType(ProxyConfigSpecImagePatchPtrOutput{})
	pulumi.RegisterOutputType(ProxyConfigSpecPatchOutput{})
	pulumi.RegisterOutputType(ProxyConfigSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(ProxyConfigSpecSelectorOutput{})
	pulumi.RegisterOutputType(ProxyConfigSpecSelectorPtrOutput{})
	pulumi.RegisterOutputType(ProxyConfigSpecSelectorPatchOutput{})
	pulumi.RegisterOutputType(ProxyConfigSpecSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(ServiceEntryTypeOutput{})
	pulumi.RegisterOutputType(ServiceEntryTypeArrayOutput{})
	pulumi.RegisterOutputType(ServiceEntryListTypeOutput{})
	pulumi.RegisterOutputType(ServiceEntryPatchTypeOutput{})
	pulumi.RegisterOutputType(ServiceEntrySpecOutput{})
	pulumi.RegisterOutputType(ServiceEntrySpecPtrOutput{})
	pulumi.RegisterOutputType(ServiceEntrySpecEndpointsOutput{})
	pulumi.RegisterOutputType(ServiceEntrySpecEndpointsArrayOutput{})
	pulumi.RegisterOutputType(ServiceEntrySpecEndpointsPatchOutput{})
	pulumi.RegisterOutputType(ServiceEntrySpecEndpointsPatchArrayOutput{})
	pulumi.RegisterOutputType(ServiceEntrySpecPatchOutput{})
	pulumi.RegisterOutputType(ServiceEntrySpecPatchPtrOutput{})
	pulumi.RegisterOutputType(ServiceEntrySpecPortsOutput{})
	pulumi.RegisterOutputType(ServiceEntrySpecPortsArrayOutput{})
	pulumi.RegisterOutputType(ServiceEntrySpecPortsPatchOutput{})
	pulumi.RegisterOutputType(ServiceEntrySpecPortsPatchArrayOutput{})
	pulumi.RegisterOutputType(ServiceEntrySpecWorkloadSelectorOutput{})
	pulumi.RegisterOutputType(ServiceEntrySpecWorkloadSelectorPtrOutput{})
	pulumi.RegisterOutputType(ServiceEntrySpecWorkloadSelectorPatchOutput{})
	pulumi.RegisterOutputType(ServiceEntrySpecWorkloadSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(SidecarTypeOutput{})
	pulumi.RegisterOutputType(SidecarTypeArrayOutput{})
	pulumi.RegisterOutputType(SidecarListTypeOutput{})
	pulumi.RegisterOutputType(SidecarPatchTypeOutput{})
	pulumi.RegisterOutputType(SidecarSpecOutput{})
	pulumi.RegisterOutputType(SidecarSpecPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecEgressOutput{})
	pulumi.RegisterOutputType(SidecarSpecEgressArrayOutput{})
	pulumi.RegisterOutputType(SidecarSpecEgressPatchOutput{})
	pulumi.RegisterOutputType(SidecarSpecEgressPatchArrayOutput{})
	pulumi.RegisterOutputType(SidecarSpecEgressPortOutput{})
	pulumi.RegisterOutputType(SidecarSpecEgressPortPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecEgressPortPatchOutput{})
	pulumi.RegisterOutputType(SidecarSpecEgressPortPatchPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecInboundConnectionPoolOutput{})
	pulumi.RegisterOutputType(SidecarSpecInboundConnectionPoolPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecInboundConnectionPoolHttpOutput{})
	pulumi.RegisterOutputType(SidecarSpecInboundConnectionPoolHttpPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecInboundConnectionPoolHttpPatchOutput{})
	pulumi.RegisterOutputType(SidecarSpecInboundConnectionPoolHttpPatchPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecInboundConnectionPoolPatchOutput{})
	pulumi.RegisterOutputType(SidecarSpecInboundConnectionPoolPatchPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecInboundConnectionPoolTcpOutput{})
	pulumi.RegisterOutputType(SidecarSpecInboundConnectionPoolTcpPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecInboundConnectionPoolTcpPatchOutput{})
	pulumi.RegisterOutputType(SidecarSpecInboundConnectionPoolTcpPatchPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecInboundConnectionPoolTcpTcpKeepaliveOutput{})
	pulumi.RegisterOutputType(SidecarSpecInboundConnectionPoolTcpTcpKeepalivePtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchOutput{})
	pulumi.RegisterOutputType(SidecarSpecInboundConnectionPoolTcpTcpKeepalivePatchPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressArrayOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressConnectionPoolOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressConnectionPoolPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressConnectionPoolHttpOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressConnectionPoolHttpPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressConnectionPoolHttpPatchOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressConnectionPoolHttpPatchPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressConnectionPoolPatchOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressConnectionPoolPatchPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressConnectionPoolTcpOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressConnectionPoolTcpPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressConnectionPoolTcpPatchOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressConnectionPoolTcpPatchPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressConnectionPoolTcpTcpKeepaliveOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressConnectionPoolTcpTcpKeepalivePtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressConnectionPoolTcpTcpKeepalivePatchPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressPatchOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressPatchArrayOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressPortOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressPortPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressPortPatchOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressPortPatchPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressTlsOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressTlsPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressTlsPatchOutput{})
	pulumi.RegisterOutputType(SidecarSpecIngressTlsPatchPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecOutboundTrafficPolicyOutput{})
	pulumi.RegisterOutputType(SidecarSpecOutboundTrafficPolicyPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecOutboundTrafficPolicyEgressProxyOutput{})
	pulumi.RegisterOutputType(SidecarSpecOutboundTrafficPolicyEgressProxyPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecOutboundTrafficPolicyEgressProxyPatchOutput{})
	pulumi.RegisterOutputType(SidecarSpecOutboundTrafficPolicyEgressProxyPatchPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecOutboundTrafficPolicyEgressProxyPortOutput{})
	pulumi.RegisterOutputType(SidecarSpecOutboundTrafficPolicyEgressProxyPortPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchOutput{})
	pulumi.RegisterOutputType(SidecarSpecOutboundTrafficPolicyEgressProxyPortPatchPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecOutboundTrafficPolicyPatchOutput{})
	pulumi.RegisterOutputType(SidecarSpecOutboundTrafficPolicyPatchPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecPatchOutput{})
	pulumi.RegisterOutputType(SidecarSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecWorkloadSelectorOutput{})
	pulumi.RegisterOutputType(SidecarSpecWorkloadSelectorPtrOutput{})
	pulumi.RegisterOutputType(SidecarSpecWorkloadSelectorPatchOutput{})
	pulumi.RegisterOutputType(SidecarSpecWorkloadSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceTypeOutput{})
	pulumi.RegisterOutputType(VirtualServiceTypeArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceListTypeOutput{})
	pulumi.RegisterOutputType(VirtualServicePatchTypeOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpCorsPolicyOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpCorsPolicyPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpCorsPolicyAllowOriginsOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpCorsPolicyAllowOriginsArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpCorsPolicyAllowOriginsPatchArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpCorsPolicyPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpCorsPolicyPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpDelegateOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpDelegatePtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpDelegatePatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpDelegatePatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpDirectResponseOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpDirectResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpDirectResponseBodyOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpDirectResponseBodyPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpDirectResponseBodyPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpDirectResponseBodyPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpDirectResponsePatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpDirectResponsePatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpFaultOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpFaultPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpFaultAbortOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpFaultAbortPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpFaultAbortPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpFaultAbortPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpFaultAbortPercentageOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpFaultAbortPercentagePtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpFaultAbortPercentagePatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpFaultAbortPercentagePatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpFaultDelayOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpFaultDelayPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpFaultDelayPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpFaultDelayPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpFaultDelayPercentageOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpFaultDelayPercentagePtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpFaultDelayPercentagePatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpFaultDelayPercentagePatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpFaultPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpFaultPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpHeadersOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpHeadersPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpHeadersPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpHeadersPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpHeadersRequestOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpHeadersRequestPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpHeadersRequestPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpHeadersRequestPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpHeadersResponseOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpHeadersResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpHeadersResponsePatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpHeadersResponsePatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMatchArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMatchAuthorityOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMatchAuthorityPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMatchAuthorityPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMatchAuthorityPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMatchMethodOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMatchMethodPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMatchMethodPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMatchMethodPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMatchPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMatchPatchArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMatchSchemeOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMatchSchemePtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMatchSchemePatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMatchSchemePatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMatchUriOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMatchUriPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMatchUriPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMatchUriPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorPercentageOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorPercentagePtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorPercentagePatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorPercentagePatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorPortOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorPortPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorPortPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorPortPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorsOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorsArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorsDestinationOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorsDestinationPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorsDestinationPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorsDestinationPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorsDestinationPortOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorsDestinationPortPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorsDestinationPortPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorsDestinationPortPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorsPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorsPatchArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorsPercentageOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorsPercentagePtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorsPercentagePatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpMirrorsPercentagePatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpPatchArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRedirectOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRedirectPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRedirectPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRedirectPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRetriesOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRetriesPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRetriesPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRetriesPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRewriteOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRewritePtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRewritePatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRewritePatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRewriteUriRegexRewriteOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRewriteUriRegexRewritePtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRewriteUriRegexRewritePatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRewriteUriRegexRewritePatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRouteOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRouteArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRouteDestinationOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRouteDestinationPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRouteDestinationPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRouteDestinationPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRouteDestinationPortOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRouteDestinationPortPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRouteDestinationPortPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRouteDestinationPortPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRouteHeadersOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRouteHeadersPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRouteHeadersPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRouteHeadersPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRouteHeadersRequestOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRouteHeadersRequestPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRouteHeadersRequestPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRouteHeadersRequestPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRouteHeadersResponseOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRouteHeadersResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRouteHeadersResponsePatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRouteHeadersResponsePatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRoutePatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecHttpRoutePatchArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTcpOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTcpArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTcpMatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTcpMatchArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTcpMatchPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTcpMatchPatchArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTcpPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTcpPatchArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTcpRouteOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTcpRouteArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTcpRouteDestinationOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTcpRouteDestinationPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTcpRouteDestinationPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTcpRouteDestinationPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTcpRouteDestinationPortOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTcpRouteDestinationPortPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTcpRouteDestinationPortPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTcpRouteDestinationPortPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTcpRoutePatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTcpRoutePatchArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTlsOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTlsArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTlsMatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTlsMatchArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTlsMatchPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTlsMatchPatchArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTlsPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTlsPatchArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTlsRouteOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTlsRouteArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTlsRouteDestinationOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTlsRouteDestinationPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTlsRouteDestinationPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTlsRouteDestinationPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTlsRouteDestinationPortOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTlsRouteDestinationPortPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTlsRouteDestinationPortPatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTlsRouteDestinationPortPatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTlsRoutePatchOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecTlsRoutePatchArrayOutput{})
	pulumi.RegisterOutputType(WorkloadEntryTypeOutput{})
	pulumi.RegisterOutputType(WorkloadEntryTypeArrayOutput{})
	pulumi.RegisterOutputType(WorkloadEntryListTypeOutput{})
	pulumi.RegisterOutputType(WorkloadEntryPatchTypeOutput{})
	pulumi.RegisterOutputType(WorkloadEntrySpecOutput{})
	pulumi.RegisterOutputType(WorkloadEntrySpecPtrOutput{})
	pulumi.RegisterOutputType(WorkloadEntrySpecPatchOutput{})
	pulumi.RegisterOutputType(WorkloadEntrySpecPatchPtrOutput{})
	pulumi.RegisterOutputType(WorkloadGroupTypeOutput{})
	pulumi.RegisterOutputType(WorkloadGroupTypeArrayOutput{})
	pulumi.RegisterOutputType(WorkloadGroupListTypeOutput{})
	pulumi.RegisterOutputType(WorkloadGroupPatchTypeOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecPtrOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecMetadataOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecMetadataPtrOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecMetadataPatchOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecMetadataPatchPtrOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecPatchOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecProbeOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecProbePtrOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecProbeExecOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecProbeExecPtrOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecProbeExecPatchOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecProbeExecPatchPtrOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecProbeHttpGetOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecProbeHttpGetPtrOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecProbeHttpGetHttpHeadersOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecProbeHttpGetHttpHeadersArrayOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecProbeHttpGetHttpHeadersPatchOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecProbeHttpGetHttpHeadersPatchArrayOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecProbeHttpGetPatchOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecProbeHttpGetPatchPtrOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecProbePatchOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecProbePatchPtrOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecProbeTcpSocketOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecProbeTcpSocketPtrOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecProbeTcpSocketPatchOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecProbeTcpSocketPatchPtrOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecTemplateOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecTemplatePtrOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecTemplatePatchOutput{})
	pulumi.RegisterOutputType(WorkloadGroupSpecTemplatePatchPtrOutput{})
}
