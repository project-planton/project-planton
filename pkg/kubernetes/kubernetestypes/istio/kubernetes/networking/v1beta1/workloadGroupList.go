// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// WorkloadGroupList is a list of WorkloadGroup
type WorkloadGroupList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of workloadgroups. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items WorkloadGroupTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewWorkloadGroupList registers a new resource with the given unique name, arguments, and options.
func NewWorkloadGroupList(ctx *pulumi.Context,
	name string, args *WorkloadGroupListArgs, opts ...pulumi.ResourceOption) (*WorkloadGroupList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("networking.istio.io/v1beta1")
	args.Kind = pulumi.StringPtr("WorkloadGroupList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource WorkloadGroupList
	err := ctx.RegisterResource("kubernetes:networking.istio.io/v1beta1:WorkloadGroupList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkloadGroupList gets an existing WorkloadGroupList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkloadGroupList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkloadGroupListState, opts ...pulumi.ResourceOption) (*WorkloadGroupList, error) {
	var resource WorkloadGroupList
	err := ctx.ReadResource("kubernetes:networking.istio.io/v1beta1:WorkloadGroupList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkloadGroupList resources.
type workloadGroupListState struct {
}

type WorkloadGroupListState struct {
}

func (WorkloadGroupListState) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadGroupListState)(nil)).Elem()
}

type workloadGroupListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of workloadgroups. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []WorkloadGroupType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a WorkloadGroupList resource.
type WorkloadGroupListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of workloadgroups. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items WorkloadGroupTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (WorkloadGroupListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadGroupListArgs)(nil)).Elem()
}

type WorkloadGroupListInput interface {
	pulumi.Input

	ToWorkloadGroupListOutput() WorkloadGroupListOutput
	ToWorkloadGroupListOutputWithContext(ctx context.Context) WorkloadGroupListOutput
}

func (*WorkloadGroupList) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupList)(nil)).Elem()
}

func (i *WorkloadGroupList) ToWorkloadGroupListOutput() WorkloadGroupListOutput {
	return i.ToWorkloadGroupListOutputWithContext(context.Background())
}

func (i *WorkloadGroupList) ToWorkloadGroupListOutputWithContext(ctx context.Context) WorkloadGroupListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupListOutput)
}

// WorkloadGroupListArrayInput is an input type that accepts WorkloadGroupListArray and WorkloadGroupListArrayOutput values.
// You can construct a concrete instance of `WorkloadGroupListArrayInput` via:
//
//	WorkloadGroupListArray{ WorkloadGroupListArgs{...} }
type WorkloadGroupListArrayInput interface {
	pulumi.Input

	ToWorkloadGroupListArrayOutput() WorkloadGroupListArrayOutput
	ToWorkloadGroupListArrayOutputWithContext(context.Context) WorkloadGroupListArrayOutput
}

type WorkloadGroupListArray []WorkloadGroupListInput

func (WorkloadGroupListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkloadGroupList)(nil)).Elem()
}

func (i WorkloadGroupListArray) ToWorkloadGroupListArrayOutput() WorkloadGroupListArrayOutput {
	return i.ToWorkloadGroupListArrayOutputWithContext(context.Background())
}

func (i WorkloadGroupListArray) ToWorkloadGroupListArrayOutputWithContext(ctx context.Context) WorkloadGroupListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupListArrayOutput)
}

// WorkloadGroupListMapInput is an input type that accepts WorkloadGroupListMap and WorkloadGroupListMapOutput values.
// You can construct a concrete instance of `WorkloadGroupListMapInput` via:
//
//	WorkloadGroupListMap{ "key": WorkloadGroupListArgs{...} }
type WorkloadGroupListMapInput interface {
	pulumi.Input

	ToWorkloadGroupListMapOutput() WorkloadGroupListMapOutput
	ToWorkloadGroupListMapOutputWithContext(context.Context) WorkloadGroupListMapOutput
}

type WorkloadGroupListMap map[string]WorkloadGroupListInput

func (WorkloadGroupListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkloadGroupList)(nil)).Elem()
}

func (i WorkloadGroupListMap) ToWorkloadGroupListMapOutput() WorkloadGroupListMapOutput {
	return i.ToWorkloadGroupListMapOutputWithContext(context.Background())
}

func (i WorkloadGroupListMap) ToWorkloadGroupListMapOutputWithContext(ctx context.Context) WorkloadGroupListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupListMapOutput)
}

type WorkloadGroupListOutput struct{ *pulumi.OutputState }

func (WorkloadGroupListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupList)(nil)).Elem()
}

func (o WorkloadGroupListOutput) ToWorkloadGroupListOutput() WorkloadGroupListOutput {
	return o
}

func (o WorkloadGroupListOutput) ToWorkloadGroupListOutputWithContext(ctx context.Context) WorkloadGroupListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o WorkloadGroupListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadGroupList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of workloadgroups. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o WorkloadGroupListOutput) Items() WorkloadGroupTypeArrayOutput {
	return o.ApplyT(func(v *WorkloadGroupList) WorkloadGroupTypeArrayOutput { return v.Items }).(WorkloadGroupTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o WorkloadGroupListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadGroupList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o WorkloadGroupListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *WorkloadGroupList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type WorkloadGroupListArrayOutput struct{ *pulumi.OutputState }

func (WorkloadGroupListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkloadGroupList)(nil)).Elem()
}

func (o WorkloadGroupListArrayOutput) ToWorkloadGroupListArrayOutput() WorkloadGroupListArrayOutput {
	return o
}

func (o WorkloadGroupListArrayOutput) ToWorkloadGroupListArrayOutputWithContext(ctx context.Context) WorkloadGroupListArrayOutput {
	return o
}

func (o WorkloadGroupListArrayOutput) Index(i pulumi.IntInput) WorkloadGroupListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkloadGroupList {
		return vs[0].([]*WorkloadGroupList)[vs[1].(int)]
	}).(WorkloadGroupListOutput)
}

type WorkloadGroupListMapOutput struct{ *pulumi.OutputState }

func (WorkloadGroupListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkloadGroupList)(nil)).Elem()
}

func (o WorkloadGroupListMapOutput) ToWorkloadGroupListMapOutput() WorkloadGroupListMapOutput {
	return o
}

func (o WorkloadGroupListMapOutput) ToWorkloadGroupListMapOutputWithContext(ctx context.Context) WorkloadGroupListMapOutput {
	return o
}

func (o WorkloadGroupListMapOutput) MapIndex(k pulumi.StringInput) WorkloadGroupListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkloadGroupList {
		return vs[0].(map[string]*WorkloadGroupList)[vs[1].(string)]
	}).(WorkloadGroupListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupListInput)(nil)).Elem(), &WorkloadGroupList{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupListArrayInput)(nil)).Elem(), WorkloadGroupListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupListMapInput)(nil)).Elem(), WorkloadGroupListMap{})
	pulumi.RegisterOutputType(WorkloadGroupListOutput{})
	pulumi.RegisterOutputType(WorkloadGroupListArrayOutput{})
	pulumi.RegisterOutputType(WorkloadGroupListMapOutput{})
}
