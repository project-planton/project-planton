// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha3

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
type ServiceEntryPatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput `pulumi:"metadata"`
	Spec     ServiceEntrySpecPatchPtrOutput  `pulumi:"spec"`
	Status   pulumi.MapOutput                `pulumi:"status"`
}

// NewServiceEntryPatch registers a new resource with the given unique name, arguments, and options.
func NewServiceEntryPatch(ctx *pulumi.Context,
	name string, args *ServiceEntryPatchArgs, opts ...pulumi.ResourceOption) (*ServiceEntryPatch, error) {
	if args == nil {
		args = &ServiceEntryPatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("networking.istio.io/v1alpha3")
	args.Kind = pulumi.StringPtr("ServiceEntry")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("kubernetes:networking.istio.io/v1:ServiceEntryPatch"),
		},
		{
			Type: pulumi.String("kubernetes:networking.istio.io/v1beta1:ServiceEntryPatch"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ServiceEntryPatch
	err := ctx.RegisterResource("kubernetes:networking.istio.io/v1alpha3:ServiceEntryPatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceEntryPatch gets an existing ServiceEntryPatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceEntryPatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceEntryPatchState, opts ...pulumi.ResourceOption) (*ServiceEntryPatch, error) {
	var resource ServiceEntryPatch
	err := ctx.ReadResource("kubernetes:networking.istio.io/v1alpha3:ServiceEntryPatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceEntryPatch resources.
type serviceEntryPatchState struct {
}

type ServiceEntryPatchState struct {
}

func (ServiceEntryPatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceEntryPatchState)(nil)).Elem()
}

type serviceEntryPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *ServiceEntrySpecPatch  `pulumi:"spec"`
}

// The set of arguments for constructing a ServiceEntryPatch resource.
type ServiceEntryPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     ServiceEntrySpecPatchPtrInput
}

func (ServiceEntryPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceEntryPatchArgs)(nil)).Elem()
}

type ServiceEntryPatchInput interface {
	pulumi.Input

	ToServiceEntryPatchOutput() ServiceEntryPatchOutput
	ToServiceEntryPatchOutputWithContext(ctx context.Context) ServiceEntryPatchOutput
}

func (*ServiceEntryPatch) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEntryPatch)(nil)).Elem()
}

func (i *ServiceEntryPatch) ToServiceEntryPatchOutput() ServiceEntryPatchOutput {
	return i.ToServiceEntryPatchOutputWithContext(context.Background())
}

func (i *ServiceEntryPatch) ToServiceEntryPatchOutputWithContext(ctx context.Context) ServiceEntryPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntryPatchOutput)
}

// ServiceEntryPatchArrayInput is an input type that accepts ServiceEntryPatchArray and ServiceEntryPatchArrayOutput values.
// You can construct a concrete instance of `ServiceEntryPatchArrayInput` via:
//
//	ServiceEntryPatchArray{ ServiceEntryPatchArgs{...} }
type ServiceEntryPatchArrayInput interface {
	pulumi.Input

	ToServiceEntryPatchArrayOutput() ServiceEntryPatchArrayOutput
	ToServiceEntryPatchArrayOutputWithContext(context.Context) ServiceEntryPatchArrayOutput
}

type ServiceEntryPatchArray []ServiceEntryPatchInput

func (ServiceEntryPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceEntryPatch)(nil)).Elem()
}

func (i ServiceEntryPatchArray) ToServiceEntryPatchArrayOutput() ServiceEntryPatchArrayOutput {
	return i.ToServiceEntryPatchArrayOutputWithContext(context.Background())
}

func (i ServiceEntryPatchArray) ToServiceEntryPatchArrayOutputWithContext(ctx context.Context) ServiceEntryPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntryPatchArrayOutput)
}

// ServiceEntryPatchMapInput is an input type that accepts ServiceEntryPatchMap and ServiceEntryPatchMapOutput values.
// You can construct a concrete instance of `ServiceEntryPatchMapInput` via:
//
//	ServiceEntryPatchMap{ "key": ServiceEntryPatchArgs{...} }
type ServiceEntryPatchMapInput interface {
	pulumi.Input

	ToServiceEntryPatchMapOutput() ServiceEntryPatchMapOutput
	ToServiceEntryPatchMapOutputWithContext(context.Context) ServiceEntryPatchMapOutput
}

type ServiceEntryPatchMap map[string]ServiceEntryPatchInput

func (ServiceEntryPatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceEntryPatch)(nil)).Elem()
}

func (i ServiceEntryPatchMap) ToServiceEntryPatchMapOutput() ServiceEntryPatchMapOutput {
	return i.ToServiceEntryPatchMapOutputWithContext(context.Background())
}

func (i ServiceEntryPatchMap) ToServiceEntryPatchMapOutputWithContext(ctx context.Context) ServiceEntryPatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntryPatchMapOutput)
}

type ServiceEntryPatchOutput struct{ *pulumi.OutputState }

func (ServiceEntryPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEntryPatch)(nil)).Elem()
}

func (o ServiceEntryPatchOutput) ToServiceEntryPatchOutput() ServiceEntryPatchOutput {
	return o
}

func (o ServiceEntryPatchOutput) ToServiceEntryPatchOutputWithContext(ctx context.Context) ServiceEntryPatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ServiceEntryPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceEntryPatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ServiceEntryPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceEntryPatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ServiceEntryPatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *ServiceEntryPatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o ServiceEntryPatchOutput) Spec() ServiceEntrySpecPatchPtrOutput {
	return o.ApplyT(func(v *ServiceEntryPatch) ServiceEntrySpecPatchPtrOutput { return v.Spec }).(ServiceEntrySpecPatchPtrOutput)
}

func (o ServiceEntryPatchOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v *ServiceEntryPatch) pulumi.MapOutput { return v.Status }).(pulumi.MapOutput)
}

type ServiceEntryPatchArrayOutput struct{ *pulumi.OutputState }

func (ServiceEntryPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceEntryPatch)(nil)).Elem()
}

func (o ServiceEntryPatchArrayOutput) ToServiceEntryPatchArrayOutput() ServiceEntryPatchArrayOutput {
	return o
}

func (o ServiceEntryPatchArrayOutput) ToServiceEntryPatchArrayOutputWithContext(ctx context.Context) ServiceEntryPatchArrayOutput {
	return o
}

func (o ServiceEntryPatchArrayOutput) Index(i pulumi.IntInput) ServiceEntryPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceEntryPatch {
		return vs[0].([]*ServiceEntryPatch)[vs[1].(int)]
	}).(ServiceEntryPatchOutput)
}

type ServiceEntryPatchMapOutput struct{ *pulumi.OutputState }

func (ServiceEntryPatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceEntryPatch)(nil)).Elem()
}

func (o ServiceEntryPatchMapOutput) ToServiceEntryPatchMapOutput() ServiceEntryPatchMapOutput {
	return o
}

func (o ServiceEntryPatchMapOutput) ToServiceEntryPatchMapOutputWithContext(ctx context.Context) ServiceEntryPatchMapOutput {
	return o
}

func (o ServiceEntryPatchMapOutput) MapIndex(k pulumi.StringInput) ServiceEntryPatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceEntryPatch {
		return vs[0].(map[string]*ServiceEntryPatch)[vs[1].(string)]
	}).(ServiceEntryPatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntryPatchInput)(nil)).Elem(), &ServiceEntryPatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntryPatchArrayInput)(nil)).Elem(), ServiceEntryPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntryPatchMapInput)(nil)).Elem(), ServiceEntryPatchMap{})
	pulumi.RegisterOutputType(ServiceEntryPatchOutput{})
	pulumi.RegisterOutputType(ServiceEntryPatchArrayOutput{})
	pulumi.RegisterOutputType(ServiceEntryPatchMapOutput{})
}
