// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

type AuthorizationPolicyType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta       `pulumi:"metadata"`
	Spec     *AuthorizationPolicySpec `pulumi:"spec"`
	Status   map[string]interface{}   `pulumi:"status"`
}

// AuthorizationPolicyTypeInput is an input type that accepts AuthorizationPolicyTypeArgs and AuthorizationPolicyTypeOutput values.
// You can construct a concrete instance of `AuthorizationPolicyTypeInput` via:
//
//	AuthorizationPolicyTypeArgs{...}
type AuthorizationPolicyTypeInput interface {
	pulumi.Input

	ToAuthorizationPolicyTypeOutput() AuthorizationPolicyTypeOutput
	ToAuthorizationPolicyTypeOutputWithContext(context.Context) AuthorizationPolicyTypeOutput
}

type AuthorizationPolicyTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput       `pulumi:"metadata"`
	Spec     AuthorizationPolicySpecPtrInput `pulumi:"spec"`
	Status   pulumi.MapInput                 `pulumi:"status"`
}

func (AuthorizationPolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicyType)(nil)).Elem()
}

func (i AuthorizationPolicyTypeArgs) ToAuthorizationPolicyTypeOutput() AuthorizationPolicyTypeOutput {
	return i.ToAuthorizationPolicyTypeOutputWithContext(context.Background())
}

func (i AuthorizationPolicyTypeArgs) ToAuthorizationPolicyTypeOutputWithContext(ctx context.Context) AuthorizationPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicyTypeOutput)
}

// AuthorizationPolicyTypeArrayInput is an input type that accepts AuthorizationPolicyTypeArray and AuthorizationPolicyTypeArrayOutput values.
// You can construct a concrete instance of `AuthorizationPolicyTypeArrayInput` via:
//
//	AuthorizationPolicyTypeArray{ AuthorizationPolicyTypeArgs{...} }
type AuthorizationPolicyTypeArrayInput interface {
	pulumi.Input

	ToAuthorizationPolicyTypeArrayOutput() AuthorizationPolicyTypeArrayOutput
	ToAuthorizationPolicyTypeArrayOutputWithContext(context.Context) AuthorizationPolicyTypeArrayOutput
}

type AuthorizationPolicyTypeArray []AuthorizationPolicyTypeInput

func (AuthorizationPolicyTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPolicyType)(nil)).Elem()
}

func (i AuthorizationPolicyTypeArray) ToAuthorizationPolicyTypeArrayOutput() AuthorizationPolicyTypeArrayOutput {
	return i.ToAuthorizationPolicyTypeArrayOutputWithContext(context.Background())
}

func (i AuthorizationPolicyTypeArray) ToAuthorizationPolicyTypeArrayOutputWithContext(ctx context.Context) AuthorizationPolicyTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicyTypeArrayOutput)
}

type AuthorizationPolicyTypeOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicyType)(nil)).Elem()
}

func (o AuthorizationPolicyTypeOutput) ToAuthorizationPolicyTypeOutput() AuthorizationPolicyTypeOutput {
	return o
}

func (o AuthorizationPolicyTypeOutput) ToAuthorizationPolicyTypeOutputWithContext(ctx context.Context) AuthorizationPolicyTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o AuthorizationPolicyTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AuthorizationPolicyTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o AuthorizationPolicyTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o AuthorizationPolicyTypeOutput) Spec() AuthorizationPolicySpecPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyType) *AuthorizationPolicySpec { return v.Spec }).(AuthorizationPolicySpecPtrOutput)
}

func (o AuthorizationPolicyTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v AuthorizationPolicyType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

type AuthorizationPolicyTypeArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicyTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPolicyType)(nil)).Elem()
}

func (o AuthorizationPolicyTypeArrayOutput) ToAuthorizationPolicyTypeArrayOutput() AuthorizationPolicyTypeArrayOutput {
	return o
}

func (o AuthorizationPolicyTypeArrayOutput) ToAuthorizationPolicyTypeArrayOutputWithContext(ctx context.Context) AuthorizationPolicyTypeArrayOutput {
	return o
}

func (o AuthorizationPolicyTypeArrayOutput) Index(i pulumi.IntInput) AuthorizationPolicyTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorizationPolicyType {
		return vs[0].([]AuthorizationPolicyType)[vs[1].(int)]
	}).(AuthorizationPolicyTypeOutput)
}

// AuthorizationPolicyList is a list of AuthorizationPolicy
type AuthorizationPolicyListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of authorizationpolicies. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []AuthorizationPolicyType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// AuthorizationPolicyListTypeInput is an input type that accepts AuthorizationPolicyListTypeArgs and AuthorizationPolicyListTypeOutput values.
// You can construct a concrete instance of `AuthorizationPolicyListTypeInput` via:
//
//	AuthorizationPolicyListTypeArgs{...}
type AuthorizationPolicyListTypeInput interface {
	pulumi.Input

	ToAuthorizationPolicyListTypeOutput() AuthorizationPolicyListTypeOutput
	ToAuthorizationPolicyListTypeOutputWithContext(context.Context) AuthorizationPolicyListTypeOutput
}

// AuthorizationPolicyList is a list of AuthorizationPolicy
type AuthorizationPolicyListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of authorizationpolicies. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items AuthorizationPolicyTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (AuthorizationPolicyListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicyListType)(nil)).Elem()
}

func (i AuthorizationPolicyListTypeArgs) ToAuthorizationPolicyListTypeOutput() AuthorizationPolicyListTypeOutput {
	return i.ToAuthorizationPolicyListTypeOutputWithContext(context.Background())
}

func (i AuthorizationPolicyListTypeArgs) ToAuthorizationPolicyListTypeOutputWithContext(ctx context.Context) AuthorizationPolicyListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicyListTypeOutput)
}

// AuthorizationPolicyList is a list of AuthorizationPolicy
type AuthorizationPolicyListTypeOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicyListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicyListType)(nil)).Elem()
}

func (o AuthorizationPolicyListTypeOutput) ToAuthorizationPolicyListTypeOutput() AuthorizationPolicyListTypeOutput {
	return o
}

func (o AuthorizationPolicyListTypeOutput) ToAuthorizationPolicyListTypeOutputWithContext(ctx context.Context) AuthorizationPolicyListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o AuthorizationPolicyListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of authorizationpolicies. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o AuthorizationPolicyListTypeOutput) Items() AuthorizationPolicyTypeArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicyListType) []AuthorizationPolicyType { return v.Items }).(AuthorizationPolicyTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AuthorizationPolicyListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AuthorizationPolicyListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

type AuthorizationPolicyPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch       `pulumi:"metadata"`
	Spec     *AuthorizationPolicySpecPatch `pulumi:"spec"`
	Status   map[string]interface{}        `pulumi:"status"`
}

// AuthorizationPolicyPatchTypeInput is an input type that accepts AuthorizationPolicyPatchTypeArgs and AuthorizationPolicyPatchTypeOutput values.
// You can construct a concrete instance of `AuthorizationPolicyPatchTypeInput` via:
//
//	AuthorizationPolicyPatchTypeArgs{...}
type AuthorizationPolicyPatchTypeInput interface {
	pulumi.Input

	ToAuthorizationPolicyPatchTypeOutput() AuthorizationPolicyPatchTypeOutput
	ToAuthorizationPolicyPatchTypeOutputWithContext(context.Context) AuthorizationPolicyPatchTypeOutput
}

type AuthorizationPolicyPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput       `pulumi:"metadata"`
	Spec     AuthorizationPolicySpecPatchPtrInput `pulumi:"spec"`
	Status   pulumi.MapInput                      `pulumi:"status"`
}

func (AuthorizationPolicyPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicyPatchType)(nil)).Elem()
}

func (i AuthorizationPolicyPatchTypeArgs) ToAuthorizationPolicyPatchTypeOutput() AuthorizationPolicyPatchTypeOutput {
	return i.ToAuthorizationPolicyPatchTypeOutputWithContext(context.Background())
}

func (i AuthorizationPolicyPatchTypeArgs) ToAuthorizationPolicyPatchTypeOutputWithContext(ctx context.Context) AuthorizationPolicyPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicyPatchTypeOutput)
}

type AuthorizationPolicyPatchTypeOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicyPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicyPatchType)(nil)).Elem()
}

func (o AuthorizationPolicyPatchTypeOutput) ToAuthorizationPolicyPatchTypeOutput() AuthorizationPolicyPatchTypeOutput {
	return o
}

func (o AuthorizationPolicyPatchTypeOutput) ToAuthorizationPolicyPatchTypeOutputWithContext(ctx context.Context) AuthorizationPolicyPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o AuthorizationPolicyPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AuthorizationPolicyPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o AuthorizationPolicyPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o AuthorizationPolicyPatchTypeOutput) Spec() AuthorizationPolicySpecPatchPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyPatchType) *AuthorizationPolicySpecPatch { return v.Spec }).(AuthorizationPolicySpecPatchPtrOutput)
}

func (o AuthorizationPolicyPatchTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v AuthorizationPolicyPatchType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

// Configuration for access control on workloads. See more details at: https://istio.io/docs/reference/config/security/authorization-policy.html
type AuthorizationPolicySpec struct {
	// Optional.
	//
	// Valid Options: ALLOW, DENY, AUDIT, CUSTOM
	Action   *string                          `pulumi:"action"`
	Provider *AuthorizationPolicySpecProvider `pulumi:"provider"`
	// Optional.
	Rules     []AuthorizationPolicySpecRules    `pulumi:"rules"`
	Selector  *AuthorizationPolicySpecSelector  `pulumi:"selector"`
	TargetRef *AuthorizationPolicySpecTargetRef `pulumi:"targetRef"`
	// Optional.
	TargetRefs []AuthorizationPolicySpecTargetRefs `pulumi:"targetRefs"`
}

// AuthorizationPolicySpecInput is an input type that accepts AuthorizationPolicySpecArgs and AuthorizationPolicySpecOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecInput` via:
//
//	AuthorizationPolicySpecArgs{...}
type AuthorizationPolicySpecInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecOutput() AuthorizationPolicySpecOutput
	ToAuthorizationPolicySpecOutputWithContext(context.Context) AuthorizationPolicySpecOutput
}

// Configuration for access control on workloads. See more details at: https://istio.io/docs/reference/config/security/authorization-policy.html
type AuthorizationPolicySpecArgs struct {
	// Optional.
	//
	// Valid Options: ALLOW, DENY, AUDIT, CUSTOM
	Action   pulumi.StringPtrInput                   `pulumi:"action"`
	Provider AuthorizationPolicySpecProviderPtrInput `pulumi:"provider"`
	// Optional.
	Rules     AuthorizationPolicySpecRulesArrayInput   `pulumi:"rules"`
	Selector  AuthorizationPolicySpecSelectorPtrInput  `pulumi:"selector"`
	TargetRef AuthorizationPolicySpecTargetRefPtrInput `pulumi:"targetRef"`
	// Optional.
	TargetRefs AuthorizationPolicySpecTargetRefsArrayInput `pulumi:"targetRefs"`
}

func (AuthorizationPolicySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpec)(nil)).Elem()
}

func (i AuthorizationPolicySpecArgs) ToAuthorizationPolicySpecOutput() AuthorizationPolicySpecOutput {
	return i.ToAuthorizationPolicySpecOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecArgs) ToAuthorizationPolicySpecOutputWithContext(ctx context.Context) AuthorizationPolicySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecOutput)
}

func (i AuthorizationPolicySpecArgs) ToAuthorizationPolicySpecPtrOutput() AuthorizationPolicySpecPtrOutput {
	return i.ToAuthorizationPolicySpecPtrOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecArgs) ToAuthorizationPolicySpecPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecOutput).ToAuthorizationPolicySpecPtrOutputWithContext(ctx)
}

// AuthorizationPolicySpecPtrInput is an input type that accepts AuthorizationPolicySpecArgs, AuthorizationPolicySpecPtr and AuthorizationPolicySpecPtrOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecPtrInput` via:
//
//	        AuthorizationPolicySpecArgs{...}
//
//	or:
//
//	        nil
type AuthorizationPolicySpecPtrInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecPtrOutput() AuthorizationPolicySpecPtrOutput
	ToAuthorizationPolicySpecPtrOutputWithContext(context.Context) AuthorizationPolicySpecPtrOutput
}

type authorizationPolicySpecPtrType AuthorizationPolicySpecArgs

func AuthorizationPolicySpecPtr(v *AuthorizationPolicySpecArgs) AuthorizationPolicySpecPtrInput {
	return (*authorizationPolicySpecPtrType)(v)
}

func (*authorizationPolicySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpec)(nil)).Elem()
}

func (i *authorizationPolicySpecPtrType) ToAuthorizationPolicySpecPtrOutput() AuthorizationPolicySpecPtrOutput {
	return i.ToAuthorizationPolicySpecPtrOutputWithContext(context.Background())
}

func (i *authorizationPolicySpecPtrType) ToAuthorizationPolicySpecPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecPtrOutput)
}

// Configuration for access control on workloads. See more details at: https://istio.io/docs/reference/config/security/authorization-policy.html
type AuthorizationPolicySpecOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpec)(nil)).Elem()
}

func (o AuthorizationPolicySpecOutput) ToAuthorizationPolicySpecOutput() AuthorizationPolicySpecOutput {
	return o
}

func (o AuthorizationPolicySpecOutput) ToAuthorizationPolicySpecOutputWithContext(ctx context.Context) AuthorizationPolicySpecOutput {
	return o
}

func (o AuthorizationPolicySpecOutput) ToAuthorizationPolicySpecPtrOutput() AuthorizationPolicySpecPtrOutput {
	return o.ToAuthorizationPolicySpecPtrOutputWithContext(context.Background())
}

func (o AuthorizationPolicySpecOutput) ToAuthorizationPolicySpecPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorizationPolicySpec) *AuthorizationPolicySpec {
		return &v
	}).(AuthorizationPolicySpecPtrOutput)
}

// Optional.
//
// Valid Options: ALLOW, DENY, AUDIT, CUSTOM
func (o AuthorizationPolicySpecOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpec) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecOutput) Provider() AuthorizationPolicySpecProviderPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpec) *AuthorizationPolicySpecProvider { return v.Provider }).(AuthorizationPolicySpecProviderPtrOutput)
}

// Optional.
func (o AuthorizationPolicySpecOutput) Rules() AuthorizationPolicySpecRulesArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpec) []AuthorizationPolicySpecRules { return v.Rules }).(AuthorizationPolicySpecRulesArrayOutput)
}

func (o AuthorizationPolicySpecOutput) Selector() AuthorizationPolicySpecSelectorPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpec) *AuthorizationPolicySpecSelector { return v.Selector }).(AuthorizationPolicySpecSelectorPtrOutput)
}

func (o AuthorizationPolicySpecOutput) TargetRef() AuthorizationPolicySpecTargetRefPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpec) *AuthorizationPolicySpecTargetRef { return v.TargetRef }).(AuthorizationPolicySpecTargetRefPtrOutput)
}

// Optional.
func (o AuthorizationPolicySpecOutput) TargetRefs() AuthorizationPolicySpecTargetRefsArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpec) []AuthorizationPolicySpecTargetRefs { return v.TargetRefs }).(AuthorizationPolicySpecTargetRefsArrayOutput)
}

type AuthorizationPolicySpecPtrOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpec)(nil)).Elem()
}

func (o AuthorizationPolicySpecPtrOutput) ToAuthorizationPolicySpecPtrOutput() AuthorizationPolicySpecPtrOutput {
	return o
}

func (o AuthorizationPolicySpecPtrOutput) ToAuthorizationPolicySpecPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecPtrOutput {
	return o
}

func (o AuthorizationPolicySpecPtrOutput) Elem() AuthorizationPolicySpecOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpec) AuthorizationPolicySpec {
		if v != nil {
			return *v
		}
		var ret AuthorizationPolicySpec
		return ret
	}).(AuthorizationPolicySpecOutput)
}

// Optional.
//
// Valid Options: ALLOW, DENY, AUDIT, CUSTOM
func (o AuthorizationPolicySpecPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpec) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecPtrOutput) Provider() AuthorizationPolicySpecProviderPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpec) *AuthorizationPolicySpecProvider {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(AuthorizationPolicySpecProviderPtrOutput)
}

// Optional.
func (o AuthorizationPolicySpecPtrOutput) Rules() AuthorizationPolicySpecRulesArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpec) []AuthorizationPolicySpecRules {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(AuthorizationPolicySpecRulesArrayOutput)
}

func (o AuthorizationPolicySpecPtrOutput) Selector() AuthorizationPolicySpecSelectorPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpec) *AuthorizationPolicySpecSelector {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(AuthorizationPolicySpecSelectorPtrOutput)
}

func (o AuthorizationPolicySpecPtrOutput) TargetRef() AuthorizationPolicySpecTargetRefPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpec) *AuthorizationPolicySpecTargetRef {
		if v == nil {
			return nil
		}
		return v.TargetRef
	}).(AuthorizationPolicySpecTargetRefPtrOutput)
}

// Optional.
func (o AuthorizationPolicySpecPtrOutput) TargetRefs() AuthorizationPolicySpecTargetRefsArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpec) []AuthorizationPolicySpecTargetRefs {
		if v == nil {
			return nil
		}
		return v.TargetRefs
	}).(AuthorizationPolicySpecTargetRefsArrayOutput)
}

// Configuration for access control on workloads. See more details at: https://istio.io/docs/reference/config/security/authorization-policy.html
type AuthorizationPolicySpecPatch struct {
	// Optional.
	//
	// Valid Options: ALLOW, DENY, AUDIT, CUSTOM
	Action   *string                               `pulumi:"action"`
	Provider *AuthorizationPolicySpecProviderPatch `pulumi:"provider"`
	// Optional.
	Rules     []AuthorizationPolicySpecRulesPatch    `pulumi:"rules"`
	Selector  *AuthorizationPolicySpecSelectorPatch  `pulumi:"selector"`
	TargetRef *AuthorizationPolicySpecTargetRefPatch `pulumi:"targetRef"`
	// Optional.
	TargetRefs []AuthorizationPolicySpecTargetRefsPatch `pulumi:"targetRefs"`
}

// AuthorizationPolicySpecPatchInput is an input type that accepts AuthorizationPolicySpecPatchArgs and AuthorizationPolicySpecPatchOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecPatchInput` via:
//
//	AuthorizationPolicySpecPatchArgs{...}
type AuthorizationPolicySpecPatchInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecPatchOutput() AuthorizationPolicySpecPatchOutput
	ToAuthorizationPolicySpecPatchOutputWithContext(context.Context) AuthorizationPolicySpecPatchOutput
}

// Configuration for access control on workloads. See more details at: https://istio.io/docs/reference/config/security/authorization-policy.html
type AuthorizationPolicySpecPatchArgs struct {
	// Optional.
	//
	// Valid Options: ALLOW, DENY, AUDIT, CUSTOM
	Action   pulumi.StringPtrInput                        `pulumi:"action"`
	Provider AuthorizationPolicySpecProviderPatchPtrInput `pulumi:"provider"`
	// Optional.
	Rules     AuthorizationPolicySpecRulesPatchArrayInput   `pulumi:"rules"`
	Selector  AuthorizationPolicySpecSelectorPatchPtrInput  `pulumi:"selector"`
	TargetRef AuthorizationPolicySpecTargetRefPatchPtrInput `pulumi:"targetRef"`
	// Optional.
	TargetRefs AuthorizationPolicySpecTargetRefsPatchArrayInput `pulumi:"targetRefs"`
}

func (AuthorizationPolicySpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecPatch)(nil)).Elem()
}

func (i AuthorizationPolicySpecPatchArgs) ToAuthorizationPolicySpecPatchOutput() AuthorizationPolicySpecPatchOutput {
	return i.ToAuthorizationPolicySpecPatchOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecPatchArgs) ToAuthorizationPolicySpecPatchOutputWithContext(ctx context.Context) AuthorizationPolicySpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecPatchOutput)
}

func (i AuthorizationPolicySpecPatchArgs) ToAuthorizationPolicySpecPatchPtrOutput() AuthorizationPolicySpecPatchPtrOutput {
	return i.ToAuthorizationPolicySpecPatchPtrOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecPatchArgs) ToAuthorizationPolicySpecPatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecPatchOutput).ToAuthorizationPolicySpecPatchPtrOutputWithContext(ctx)
}

// AuthorizationPolicySpecPatchPtrInput is an input type that accepts AuthorizationPolicySpecPatchArgs, AuthorizationPolicySpecPatchPtr and AuthorizationPolicySpecPatchPtrOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecPatchPtrInput` via:
//
//	        AuthorizationPolicySpecPatchArgs{...}
//
//	or:
//
//	        nil
type AuthorizationPolicySpecPatchPtrInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecPatchPtrOutput() AuthorizationPolicySpecPatchPtrOutput
	ToAuthorizationPolicySpecPatchPtrOutputWithContext(context.Context) AuthorizationPolicySpecPatchPtrOutput
}

type authorizationPolicySpecPatchPtrType AuthorizationPolicySpecPatchArgs

func AuthorizationPolicySpecPatchPtr(v *AuthorizationPolicySpecPatchArgs) AuthorizationPolicySpecPatchPtrInput {
	return (*authorizationPolicySpecPatchPtrType)(v)
}

func (*authorizationPolicySpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecPatch)(nil)).Elem()
}

func (i *authorizationPolicySpecPatchPtrType) ToAuthorizationPolicySpecPatchPtrOutput() AuthorizationPolicySpecPatchPtrOutput {
	return i.ToAuthorizationPolicySpecPatchPtrOutputWithContext(context.Background())
}

func (i *authorizationPolicySpecPatchPtrType) ToAuthorizationPolicySpecPatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecPatchPtrOutput)
}

// Configuration for access control on workloads. See more details at: https://istio.io/docs/reference/config/security/authorization-policy.html
type AuthorizationPolicySpecPatchOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecPatch)(nil)).Elem()
}

func (o AuthorizationPolicySpecPatchOutput) ToAuthorizationPolicySpecPatchOutput() AuthorizationPolicySpecPatchOutput {
	return o
}

func (o AuthorizationPolicySpecPatchOutput) ToAuthorizationPolicySpecPatchOutputWithContext(ctx context.Context) AuthorizationPolicySpecPatchOutput {
	return o
}

func (o AuthorizationPolicySpecPatchOutput) ToAuthorizationPolicySpecPatchPtrOutput() AuthorizationPolicySpecPatchPtrOutput {
	return o.ToAuthorizationPolicySpecPatchPtrOutputWithContext(context.Background())
}

func (o AuthorizationPolicySpecPatchOutput) ToAuthorizationPolicySpecPatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorizationPolicySpecPatch) *AuthorizationPolicySpecPatch {
		return &v
	}).(AuthorizationPolicySpecPatchPtrOutput)
}

// Optional.
//
// Valid Options: ALLOW, DENY, AUDIT, CUSTOM
func (o AuthorizationPolicySpecPatchOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecPatch) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecPatchOutput) Provider() AuthorizationPolicySpecProviderPatchPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecPatch) *AuthorizationPolicySpecProviderPatch { return v.Provider }).(AuthorizationPolicySpecProviderPatchPtrOutput)
}

// Optional.
func (o AuthorizationPolicySpecPatchOutput) Rules() AuthorizationPolicySpecRulesPatchArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecPatch) []AuthorizationPolicySpecRulesPatch { return v.Rules }).(AuthorizationPolicySpecRulesPatchArrayOutput)
}

func (o AuthorizationPolicySpecPatchOutput) Selector() AuthorizationPolicySpecSelectorPatchPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecPatch) *AuthorizationPolicySpecSelectorPatch { return v.Selector }).(AuthorizationPolicySpecSelectorPatchPtrOutput)
}

func (o AuthorizationPolicySpecPatchOutput) TargetRef() AuthorizationPolicySpecTargetRefPatchPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecPatch) *AuthorizationPolicySpecTargetRefPatch { return v.TargetRef }).(AuthorizationPolicySpecTargetRefPatchPtrOutput)
}

// Optional.
func (o AuthorizationPolicySpecPatchOutput) TargetRefs() AuthorizationPolicySpecTargetRefsPatchArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecPatch) []AuthorizationPolicySpecTargetRefsPatch { return v.TargetRefs }).(AuthorizationPolicySpecTargetRefsPatchArrayOutput)
}

type AuthorizationPolicySpecPatchPtrOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecPatch)(nil)).Elem()
}

func (o AuthorizationPolicySpecPatchPtrOutput) ToAuthorizationPolicySpecPatchPtrOutput() AuthorizationPolicySpecPatchPtrOutput {
	return o
}

func (o AuthorizationPolicySpecPatchPtrOutput) ToAuthorizationPolicySpecPatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecPatchPtrOutput {
	return o
}

func (o AuthorizationPolicySpecPatchPtrOutput) Elem() AuthorizationPolicySpecPatchOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecPatch) AuthorizationPolicySpecPatch {
		if v != nil {
			return *v
		}
		var ret AuthorizationPolicySpecPatch
		return ret
	}).(AuthorizationPolicySpecPatchOutput)
}

// Optional.
//
// Valid Options: ALLOW, DENY, AUDIT, CUSTOM
func (o AuthorizationPolicySpecPatchPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecPatchPtrOutput) Provider() AuthorizationPolicySpecProviderPatchPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecPatch) *AuthorizationPolicySpecProviderPatch {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(AuthorizationPolicySpecProviderPatchPtrOutput)
}

// Optional.
func (o AuthorizationPolicySpecPatchPtrOutput) Rules() AuthorizationPolicySpecRulesPatchArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecPatch) []AuthorizationPolicySpecRulesPatch {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(AuthorizationPolicySpecRulesPatchArrayOutput)
}

func (o AuthorizationPolicySpecPatchPtrOutput) Selector() AuthorizationPolicySpecSelectorPatchPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecPatch) *AuthorizationPolicySpecSelectorPatch {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(AuthorizationPolicySpecSelectorPatchPtrOutput)
}

func (o AuthorizationPolicySpecPatchPtrOutput) TargetRef() AuthorizationPolicySpecTargetRefPatchPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecPatch) *AuthorizationPolicySpecTargetRefPatch {
		if v == nil {
			return nil
		}
		return v.TargetRef
	}).(AuthorizationPolicySpecTargetRefPatchPtrOutput)
}

// Optional.
func (o AuthorizationPolicySpecPatchPtrOutput) TargetRefs() AuthorizationPolicySpecTargetRefsPatchArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecPatch) []AuthorizationPolicySpecTargetRefsPatch {
		if v == nil {
			return nil
		}
		return v.TargetRefs
	}).(AuthorizationPolicySpecTargetRefsPatchArrayOutput)
}

// Specifies detailed configuration of the CUSTOM action.
type AuthorizationPolicySpecProvider struct {
	// Specifies the name of the extension provider.
	Name *string `pulumi:"name"`
}

// AuthorizationPolicySpecProviderInput is an input type that accepts AuthorizationPolicySpecProviderArgs and AuthorizationPolicySpecProviderOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecProviderInput` via:
//
//	AuthorizationPolicySpecProviderArgs{...}
type AuthorizationPolicySpecProviderInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecProviderOutput() AuthorizationPolicySpecProviderOutput
	ToAuthorizationPolicySpecProviderOutputWithContext(context.Context) AuthorizationPolicySpecProviderOutput
}

// Specifies detailed configuration of the CUSTOM action.
type AuthorizationPolicySpecProviderArgs struct {
	// Specifies the name of the extension provider.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AuthorizationPolicySpecProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecProvider)(nil)).Elem()
}

func (i AuthorizationPolicySpecProviderArgs) ToAuthorizationPolicySpecProviderOutput() AuthorizationPolicySpecProviderOutput {
	return i.ToAuthorizationPolicySpecProviderOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecProviderArgs) ToAuthorizationPolicySpecProviderOutputWithContext(ctx context.Context) AuthorizationPolicySpecProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecProviderOutput)
}

func (i AuthorizationPolicySpecProviderArgs) ToAuthorizationPolicySpecProviderPtrOutput() AuthorizationPolicySpecProviderPtrOutput {
	return i.ToAuthorizationPolicySpecProviderPtrOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecProviderArgs) ToAuthorizationPolicySpecProviderPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecProviderOutput).ToAuthorizationPolicySpecProviderPtrOutputWithContext(ctx)
}

// AuthorizationPolicySpecProviderPtrInput is an input type that accepts AuthorizationPolicySpecProviderArgs, AuthorizationPolicySpecProviderPtr and AuthorizationPolicySpecProviderPtrOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecProviderPtrInput` via:
//
//	        AuthorizationPolicySpecProviderArgs{...}
//
//	or:
//
//	        nil
type AuthorizationPolicySpecProviderPtrInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecProviderPtrOutput() AuthorizationPolicySpecProviderPtrOutput
	ToAuthorizationPolicySpecProviderPtrOutputWithContext(context.Context) AuthorizationPolicySpecProviderPtrOutput
}

type authorizationPolicySpecProviderPtrType AuthorizationPolicySpecProviderArgs

func AuthorizationPolicySpecProviderPtr(v *AuthorizationPolicySpecProviderArgs) AuthorizationPolicySpecProviderPtrInput {
	return (*authorizationPolicySpecProviderPtrType)(v)
}

func (*authorizationPolicySpecProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecProvider)(nil)).Elem()
}

func (i *authorizationPolicySpecProviderPtrType) ToAuthorizationPolicySpecProviderPtrOutput() AuthorizationPolicySpecProviderPtrOutput {
	return i.ToAuthorizationPolicySpecProviderPtrOutputWithContext(context.Background())
}

func (i *authorizationPolicySpecProviderPtrType) ToAuthorizationPolicySpecProviderPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecProviderPtrOutput)
}

// Specifies detailed configuration of the CUSTOM action.
type AuthorizationPolicySpecProviderOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecProvider)(nil)).Elem()
}

func (o AuthorizationPolicySpecProviderOutput) ToAuthorizationPolicySpecProviderOutput() AuthorizationPolicySpecProviderOutput {
	return o
}

func (o AuthorizationPolicySpecProviderOutput) ToAuthorizationPolicySpecProviderOutputWithContext(ctx context.Context) AuthorizationPolicySpecProviderOutput {
	return o
}

func (o AuthorizationPolicySpecProviderOutput) ToAuthorizationPolicySpecProviderPtrOutput() AuthorizationPolicySpecProviderPtrOutput {
	return o.ToAuthorizationPolicySpecProviderPtrOutputWithContext(context.Background())
}

func (o AuthorizationPolicySpecProviderOutput) ToAuthorizationPolicySpecProviderPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorizationPolicySpecProvider) *AuthorizationPolicySpecProvider {
		return &v
	}).(AuthorizationPolicySpecProviderPtrOutput)
}

// Specifies the name of the extension provider.
func (o AuthorizationPolicySpecProviderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecProvider) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AuthorizationPolicySpecProviderPtrOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecProvider)(nil)).Elem()
}

func (o AuthorizationPolicySpecProviderPtrOutput) ToAuthorizationPolicySpecProviderPtrOutput() AuthorizationPolicySpecProviderPtrOutput {
	return o
}

func (o AuthorizationPolicySpecProviderPtrOutput) ToAuthorizationPolicySpecProviderPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecProviderPtrOutput {
	return o
}

func (o AuthorizationPolicySpecProviderPtrOutput) Elem() AuthorizationPolicySpecProviderOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecProvider) AuthorizationPolicySpecProvider {
		if v != nil {
			return *v
		}
		var ret AuthorizationPolicySpecProvider
		return ret
	}).(AuthorizationPolicySpecProviderOutput)
}

// Specifies the name of the extension provider.
func (o AuthorizationPolicySpecProviderPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecProvider) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies detailed configuration of the CUSTOM action.
type AuthorizationPolicySpecProviderPatch struct {
	// Specifies the name of the extension provider.
	Name *string `pulumi:"name"`
}

// AuthorizationPolicySpecProviderPatchInput is an input type that accepts AuthorizationPolicySpecProviderPatchArgs and AuthorizationPolicySpecProviderPatchOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecProviderPatchInput` via:
//
//	AuthorizationPolicySpecProviderPatchArgs{...}
type AuthorizationPolicySpecProviderPatchInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecProviderPatchOutput() AuthorizationPolicySpecProviderPatchOutput
	ToAuthorizationPolicySpecProviderPatchOutputWithContext(context.Context) AuthorizationPolicySpecProviderPatchOutput
}

// Specifies detailed configuration of the CUSTOM action.
type AuthorizationPolicySpecProviderPatchArgs struct {
	// Specifies the name of the extension provider.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AuthorizationPolicySpecProviderPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecProviderPatch)(nil)).Elem()
}

func (i AuthorizationPolicySpecProviderPatchArgs) ToAuthorizationPolicySpecProviderPatchOutput() AuthorizationPolicySpecProviderPatchOutput {
	return i.ToAuthorizationPolicySpecProviderPatchOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecProviderPatchArgs) ToAuthorizationPolicySpecProviderPatchOutputWithContext(ctx context.Context) AuthorizationPolicySpecProviderPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecProviderPatchOutput)
}

func (i AuthorizationPolicySpecProviderPatchArgs) ToAuthorizationPolicySpecProviderPatchPtrOutput() AuthorizationPolicySpecProviderPatchPtrOutput {
	return i.ToAuthorizationPolicySpecProviderPatchPtrOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecProviderPatchArgs) ToAuthorizationPolicySpecProviderPatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecProviderPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecProviderPatchOutput).ToAuthorizationPolicySpecProviderPatchPtrOutputWithContext(ctx)
}

// AuthorizationPolicySpecProviderPatchPtrInput is an input type that accepts AuthorizationPolicySpecProviderPatchArgs, AuthorizationPolicySpecProviderPatchPtr and AuthorizationPolicySpecProviderPatchPtrOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecProviderPatchPtrInput` via:
//
//	        AuthorizationPolicySpecProviderPatchArgs{...}
//
//	or:
//
//	        nil
type AuthorizationPolicySpecProviderPatchPtrInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecProviderPatchPtrOutput() AuthorizationPolicySpecProviderPatchPtrOutput
	ToAuthorizationPolicySpecProviderPatchPtrOutputWithContext(context.Context) AuthorizationPolicySpecProviderPatchPtrOutput
}

type authorizationPolicySpecProviderPatchPtrType AuthorizationPolicySpecProviderPatchArgs

func AuthorizationPolicySpecProviderPatchPtr(v *AuthorizationPolicySpecProviderPatchArgs) AuthorizationPolicySpecProviderPatchPtrInput {
	return (*authorizationPolicySpecProviderPatchPtrType)(v)
}

func (*authorizationPolicySpecProviderPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecProviderPatch)(nil)).Elem()
}

func (i *authorizationPolicySpecProviderPatchPtrType) ToAuthorizationPolicySpecProviderPatchPtrOutput() AuthorizationPolicySpecProviderPatchPtrOutput {
	return i.ToAuthorizationPolicySpecProviderPatchPtrOutputWithContext(context.Background())
}

func (i *authorizationPolicySpecProviderPatchPtrType) ToAuthorizationPolicySpecProviderPatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecProviderPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecProviderPatchPtrOutput)
}

// Specifies detailed configuration of the CUSTOM action.
type AuthorizationPolicySpecProviderPatchOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecProviderPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecProviderPatch)(nil)).Elem()
}

func (o AuthorizationPolicySpecProviderPatchOutput) ToAuthorizationPolicySpecProviderPatchOutput() AuthorizationPolicySpecProviderPatchOutput {
	return o
}

func (o AuthorizationPolicySpecProviderPatchOutput) ToAuthorizationPolicySpecProviderPatchOutputWithContext(ctx context.Context) AuthorizationPolicySpecProviderPatchOutput {
	return o
}

func (o AuthorizationPolicySpecProviderPatchOutput) ToAuthorizationPolicySpecProviderPatchPtrOutput() AuthorizationPolicySpecProviderPatchPtrOutput {
	return o.ToAuthorizationPolicySpecProviderPatchPtrOutputWithContext(context.Background())
}

func (o AuthorizationPolicySpecProviderPatchOutput) ToAuthorizationPolicySpecProviderPatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecProviderPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorizationPolicySpecProviderPatch) *AuthorizationPolicySpecProviderPatch {
		return &v
	}).(AuthorizationPolicySpecProviderPatchPtrOutput)
}

// Specifies the name of the extension provider.
func (o AuthorizationPolicySpecProviderPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecProviderPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AuthorizationPolicySpecProviderPatchPtrOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecProviderPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecProviderPatch)(nil)).Elem()
}

func (o AuthorizationPolicySpecProviderPatchPtrOutput) ToAuthorizationPolicySpecProviderPatchPtrOutput() AuthorizationPolicySpecProviderPatchPtrOutput {
	return o
}

func (o AuthorizationPolicySpecProviderPatchPtrOutput) ToAuthorizationPolicySpecProviderPatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecProviderPatchPtrOutput {
	return o
}

func (o AuthorizationPolicySpecProviderPatchPtrOutput) Elem() AuthorizationPolicySpecProviderPatchOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecProviderPatch) AuthorizationPolicySpecProviderPatch {
		if v != nil {
			return *v
		}
		var ret AuthorizationPolicySpecProviderPatch
		return ret
	}).(AuthorizationPolicySpecProviderPatchOutput)
}

// Specifies the name of the extension provider.
func (o AuthorizationPolicySpecProviderPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecProviderPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type AuthorizationPolicySpecRules struct {
	// Optional.
	From []AuthorizationPolicySpecRulesFrom `pulumi:"from"`
	// Optional.
	To []AuthorizationPolicySpecRulesTo `pulumi:"to"`
	// Optional.
	When []AuthorizationPolicySpecRulesWhen `pulumi:"when"`
}

// AuthorizationPolicySpecRulesInput is an input type that accepts AuthorizationPolicySpecRulesArgs and AuthorizationPolicySpecRulesOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesInput` via:
//
//	AuthorizationPolicySpecRulesArgs{...}
type AuthorizationPolicySpecRulesInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesOutput() AuthorizationPolicySpecRulesOutput
	ToAuthorizationPolicySpecRulesOutputWithContext(context.Context) AuthorizationPolicySpecRulesOutput
}

type AuthorizationPolicySpecRulesArgs struct {
	// Optional.
	From AuthorizationPolicySpecRulesFromArrayInput `pulumi:"from"`
	// Optional.
	To AuthorizationPolicySpecRulesToArrayInput `pulumi:"to"`
	// Optional.
	When AuthorizationPolicySpecRulesWhenArrayInput `pulumi:"when"`
}

func (AuthorizationPolicySpecRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRules)(nil)).Elem()
}

func (i AuthorizationPolicySpecRulesArgs) ToAuthorizationPolicySpecRulesOutput() AuthorizationPolicySpecRulesOutput {
	return i.ToAuthorizationPolicySpecRulesOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesArgs) ToAuthorizationPolicySpecRulesOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesOutput)
}

// AuthorizationPolicySpecRulesArrayInput is an input type that accepts AuthorizationPolicySpecRulesArray and AuthorizationPolicySpecRulesArrayOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesArrayInput` via:
//
//	AuthorizationPolicySpecRulesArray{ AuthorizationPolicySpecRulesArgs{...} }
type AuthorizationPolicySpecRulesArrayInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesArrayOutput() AuthorizationPolicySpecRulesArrayOutput
	ToAuthorizationPolicySpecRulesArrayOutputWithContext(context.Context) AuthorizationPolicySpecRulesArrayOutput
}

type AuthorizationPolicySpecRulesArray []AuthorizationPolicySpecRulesInput

func (AuthorizationPolicySpecRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPolicySpecRules)(nil)).Elem()
}

func (i AuthorizationPolicySpecRulesArray) ToAuthorizationPolicySpecRulesArrayOutput() AuthorizationPolicySpecRulesArrayOutput {
	return i.ToAuthorizationPolicySpecRulesArrayOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesArray) ToAuthorizationPolicySpecRulesArrayOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesArrayOutput)
}

type AuthorizationPolicySpecRulesOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRules)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesOutput) ToAuthorizationPolicySpecRulesOutput() AuthorizationPolicySpecRulesOutput {
	return o
}

func (o AuthorizationPolicySpecRulesOutput) ToAuthorizationPolicySpecRulesOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesOutput {
	return o
}

// Optional.
func (o AuthorizationPolicySpecRulesOutput) From() AuthorizationPolicySpecRulesFromArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRules) []AuthorizationPolicySpecRulesFrom { return v.From }).(AuthorizationPolicySpecRulesFromArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesOutput) To() AuthorizationPolicySpecRulesToArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRules) []AuthorizationPolicySpecRulesTo { return v.To }).(AuthorizationPolicySpecRulesToArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesOutput) When() AuthorizationPolicySpecRulesWhenArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRules) []AuthorizationPolicySpecRulesWhen { return v.When }).(AuthorizationPolicySpecRulesWhenArrayOutput)
}

type AuthorizationPolicySpecRulesArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPolicySpecRules)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesArrayOutput) ToAuthorizationPolicySpecRulesArrayOutput() AuthorizationPolicySpecRulesArrayOutput {
	return o
}

func (o AuthorizationPolicySpecRulesArrayOutput) ToAuthorizationPolicySpecRulesArrayOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesArrayOutput {
	return o
}

func (o AuthorizationPolicySpecRulesArrayOutput) Index(i pulumi.IntInput) AuthorizationPolicySpecRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorizationPolicySpecRules {
		return vs[0].([]AuthorizationPolicySpecRules)[vs[1].(int)]
	}).(AuthorizationPolicySpecRulesOutput)
}

type AuthorizationPolicySpecRulesFrom struct {
	Source *AuthorizationPolicySpecRulesFromSource `pulumi:"source"`
}

// AuthorizationPolicySpecRulesFromInput is an input type that accepts AuthorizationPolicySpecRulesFromArgs and AuthorizationPolicySpecRulesFromOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesFromInput` via:
//
//	AuthorizationPolicySpecRulesFromArgs{...}
type AuthorizationPolicySpecRulesFromInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesFromOutput() AuthorizationPolicySpecRulesFromOutput
	ToAuthorizationPolicySpecRulesFromOutputWithContext(context.Context) AuthorizationPolicySpecRulesFromOutput
}

type AuthorizationPolicySpecRulesFromArgs struct {
	Source AuthorizationPolicySpecRulesFromSourcePtrInput `pulumi:"source"`
}

func (AuthorizationPolicySpecRulesFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRulesFrom)(nil)).Elem()
}

func (i AuthorizationPolicySpecRulesFromArgs) ToAuthorizationPolicySpecRulesFromOutput() AuthorizationPolicySpecRulesFromOutput {
	return i.ToAuthorizationPolicySpecRulesFromOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesFromArgs) ToAuthorizationPolicySpecRulesFromOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesFromOutput)
}

// AuthorizationPolicySpecRulesFromArrayInput is an input type that accepts AuthorizationPolicySpecRulesFromArray and AuthorizationPolicySpecRulesFromArrayOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesFromArrayInput` via:
//
//	AuthorizationPolicySpecRulesFromArray{ AuthorizationPolicySpecRulesFromArgs{...} }
type AuthorizationPolicySpecRulesFromArrayInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesFromArrayOutput() AuthorizationPolicySpecRulesFromArrayOutput
	ToAuthorizationPolicySpecRulesFromArrayOutputWithContext(context.Context) AuthorizationPolicySpecRulesFromArrayOutput
}

type AuthorizationPolicySpecRulesFromArray []AuthorizationPolicySpecRulesFromInput

func (AuthorizationPolicySpecRulesFromArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPolicySpecRulesFrom)(nil)).Elem()
}

func (i AuthorizationPolicySpecRulesFromArray) ToAuthorizationPolicySpecRulesFromArrayOutput() AuthorizationPolicySpecRulesFromArrayOutput {
	return i.ToAuthorizationPolicySpecRulesFromArrayOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesFromArray) ToAuthorizationPolicySpecRulesFromArrayOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesFromArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesFromArrayOutput)
}

type AuthorizationPolicySpecRulesFromOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRulesFrom)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesFromOutput) ToAuthorizationPolicySpecRulesFromOutput() AuthorizationPolicySpecRulesFromOutput {
	return o
}

func (o AuthorizationPolicySpecRulesFromOutput) ToAuthorizationPolicySpecRulesFromOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesFromOutput {
	return o
}

func (o AuthorizationPolicySpecRulesFromOutput) Source() AuthorizationPolicySpecRulesFromSourcePtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesFrom) *AuthorizationPolicySpecRulesFromSource { return v.Source }).(AuthorizationPolicySpecRulesFromSourcePtrOutput)
}

type AuthorizationPolicySpecRulesFromArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesFromArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPolicySpecRulesFrom)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesFromArrayOutput) ToAuthorizationPolicySpecRulesFromArrayOutput() AuthorizationPolicySpecRulesFromArrayOutput {
	return o
}

func (o AuthorizationPolicySpecRulesFromArrayOutput) ToAuthorizationPolicySpecRulesFromArrayOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesFromArrayOutput {
	return o
}

func (o AuthorizationPolicySpecRulesFromArrayOutput) Index(i pulumi.IntInput) AuthorizationPolicySpecRulesFromOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorizationPolicySpecRulesFrom {
		return vs[0].([]AuthorizationPolicySpecRulesFrom)[vs[1].(int)]
	}).(AuthorizationPolicySpecRulesFromOutput)
}

type AuthorizationPolicySpecRulesFromPatch struct {
	Source *AuthorizationPolicySpecRulesFromSourcePatch `pulumi:"source"`
}

// AuthorizationPolicySpecRulesFromPatchInput is an input type that accepts AuthorizationPolicySpecRulesFromPatchArgs and AuthorizationPolicySpecRulesFromPatchOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesFromPatchInput` via:
//
//	AuthorizationPolicySpecRulesFromPatchArgs{...}
type AuthorizationPolicySpecRulesFromPatchInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesFromPatchOutput() AuthorizationPolicySpecRulesFromPatchOutput
	ToAuthorizationPolicySpecRulesFromPatchOutputWithContext(context.Context) AuthorizationPolicySpecRulesFromPatchOutput
}

type AuthorizationPolicySpecRulesFromPatchArgs struct {
	Source AuthorizationPolicySpecRulesFromSourcePatchPtrInput `pulumi:"source"`
}

func (AuthorizationPolicySpecRulesFromPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRulesFromPatch)(nil)).Elem()
}

func (i AuthorizationPolicySpecRulesFromPatchArgs) ToAuthorizationPolicySpecRulesFromPatchOutput() AuthorizationPolicySpecRulesFromPatchOutput {
	return i.ToAuthorizationPolicySpecRulesFromPatchOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesFromPatchArgs) ToAuthorizationPolicySpecRulesFromPatchOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesFromPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesFromPatchOutput)
}

// AuthorizationPolicySpecRulesFromPatchArrayInput is an input type that accepts AuthorizationPolicySpecRulesFromPatchArray and AuthorizationPolicySpecRulesFromPatchArrayOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesFromPatchArrayInput` via:
//
//	AuthorizationPolicySpecRulesFromPatchArray{ AuthorizationPolicySpecRulesFromPatchArgs{...} }
type AuthorizationPolicySpecRulesFromPatchArrayInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesFromPatchArrayOutput() AuthorizationPolicySpecRulesFromPatchArrayOutput
	ToAuthorizationPolicySpecRulesFromPatchArrayOutputWithContext(context.Context) AuthorizationPolicySpecRulesFromPatchArrayOutput
}

type AuthorizationPolicySpecRulesFromPatchArray []AuthorizationPolicySpecRulesFromPatchInput

func (AuthorizationPolicySpecRulesFromPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPolicySpecRulesFromPatch)(nil)).Elem()
}

func (i AuthorizationPolicySpecRulesFromPatchArray) ToAuthorizationPolicySpecRulesFromPatchArrayOutput() AuthorizationPolicySpecRulesFromPatchArrayOutput {
	return i.ToAuthorizationPolicySpecRulesFromPatchArrayOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesFromPatchArray) ToAuthorizationPolicySpecRulesFromPatchArrayOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesFromPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesFromPatchArrayOutput)
}

type AuthorizationPolicySpecRulesFromPatchOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesFromPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRulesFromPatch)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesFromPatchOutput) ToAuthorizationPolicySpecRulesFromPatchOutput() AuthorizationPolicySpecRulesFromPatchOutput {
	return o
}

func (o AuthorizationPolicySpecRulesFromPatchOutput) ToAuthorizationPolicySpecRulesFromPatchOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesFromPatchOutput {
	return o
}

func (o AuthorizationPolicySpecRulesFromPatchOutput) Source() AuthorizationPolicySpecRulesFromSourcePatchPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesFromPatch) *AuthorizationPolicySpecRulesFromSourcePatch {
		return v.Source
	}).(AuthorizationPolicySpecRulesFromSourcePatchPtrOutput)
}

type AuthorizationPolicySpecRulesFromPatchArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesFromPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPolicySpecRulesFromPatch)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesFromPatchArrayOutput) ToAuthorizationPolicySpecRulesFromPatchArrayOutput() AuthorizationPolicySpecRulesFromPatchArrayOutput {
	return o
}

func (o AuthorizationPolicySpecRulesFromPatchArrayOutput) ToAuthorizationPolicySpecRulesFromPatchArrayOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesFromPatchArrayOutput {
	return o
}

func (o AuthorizationPolicySpecRulesFromPatchArrayOutput) Index(i pulumi.IntInput) AuthorizationPolicySpecRulesFromPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorizationPolicySpecRulesFromPatch {
		return vs[0].([]AuthorizationPolicySpecRulesFromPatch)[vs[1].(int)]
	}).(AuthorizationPolicySpecRulesFromPatchOutput)
}

// Source specifies the source of a request.
type AuthorizationPolicySpecRulesFromSource struct {
	// Optional.
	IpBlocks []string `pulumi:"ipBlocks"`
	// Optional.
	Namespaces []string `pulumi:"namespaces"`
	// Optional.
	NotIpBlocks []string `pulumi:"notIpBlocks"`
	// Optional.
	NotNamespaces []string `pulumi:"notNamespaces"`
	// Optional.
	NotPrincipals []string `pulumi:"notPrincipals"`
	// Optional.
	NotRemoteIpBlocks []string `pulumi:"notRemoteIpBlocks"`
	// Optional.
	NotRequestPrincipals []string `pulumi:"notRequestPrincipals"`
	// Optional.
	Principals []string `pulumi:"principals"`
	// Optional.
	RemoteIpBlocks []string `pulumi:"remoteIpBlocks"`
	// Optional.
	RequestPrincipals []string `pulumi:"requestPrincipals"`
}

// AuthorizationPolicySpecRulesFromSourceInput is an input type that accepts AuthorizationPolicySpecRulesFromSourceArgs and AuthorizationPolicySpecRulesFromSourceOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesFromSourceInput` via:
//
//	AuthorizationPolicySpecRulesFromSourceArgs{...}
type AuthorizationPolicySpecRulesFromSourceInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesFromSourceOutput() AuthorizationPolicySpecRulesFromSourceOutput
	ToAuthorizationPolicySpecRulesFromSourceOutputWithContext(context.Context) AuthorizationPolicySpecRulesFromSourceOutput
}

// Source specifies the source of a request.
type AuthorizationPolicySpecRulesFromSourceArgs struct {
	// Optional.
	IpBlocks pulumi.StringArrayInput `pulumi:"ipBlocks"`
	// Optional.
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// Optional.
	NotIpBlocks pulumi.StringArrayInput `pulumi:"notIpBlocks"`
	// Optional.
	NotNamespaces pulumi.StringArrayInput `pulumi:"notNamespaces"`
	// Optional.
	NotPrincipals pulumi.StringArrayInput `pulumi:"notPrincipals"`
	// Optional.
	NotRemoteIpBlocks pulumi.StringArrayInput `pulumi:"notRemoteIpBlocks"`
	// Optional.
	NotRequestPrincipals pulumi.StringArrayInput `pulumi:"notRequestPrincipals"`
	// Optional.
	Principals pulumi.StringArrayInput `pulumi:"principals"`
	// Optional.
	RemoteIpBlocks pulumi.StringArrayInput `pulumi:"remoteIpBlocks"`
	// Optional.
	RequestPrincipals pulumi.StringArrayInput `pulumi:"requestPrincipals"`
}

func (AuthorizationPolicySpecRulesFromSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRulesFromSource)(nil)).Elem()
}

func (i AuthorizationPolicySpecRulesFromSourceArgs) ToAuthorizationPolicySpecRulesFromSourceOutput() AuthorizationPolicySpecRulesFromSourceOutput {
	return i.ToAuthorizationPolicySpecRulesFromSourceOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesFromSourceArgs) ToAuthorizationPolicySpecRulesFromSourceOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesFromSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesFromSourceOutput)
}

func (i AuthorizationPolicySpecRulesFromSourceArgs) ToAuthorizationPolicySpecRulesFromSourcePtrOutput() AuthorizationPolicySpecRulesFromSourcePtrOutput {
	return i.ToAuthorizationPolicySpecRulesFromSourcePtrOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesFromSourceArgs) ToAuthorizationPolicySpecRulesFromSourcePtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesFromSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesFromSourceOutput).ToAuthorizationPolicySpecRulesFromSourcePtrOutputWithContext(ctx)
}

// AuthorizationPolicySpecRulesFromSourcePtrInput is an input type that accepts AuthorizationPolicySpecRulesFromSourceArgs, AuthorizationPolicySpecRulesFromSourcePtr and AuthorizationPolicySpecRulesFromSourcePtrOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesFromSourcePtrInput` via:
//
//	        AuthorizationPolicySpecRulesFromSourceArgs{...}
//
//	or:
//
//	        nil
type AuthorizationPolicySpecRulesFromSourcePtrInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesFromSourcePtrOutput() AuthorizationPolicySpecRulesFromSourcePtrOutput
	ToAuthorizationPolicySpecRulesFromSourcePtrOutputWithContext(context.Context) AuthorizationPolicySpecRulesFromSourcePtrOutput
}

type authorizationPolicySpecRulesFromSourcePtrType AuthorizationPolicySpecRulesFromSourceArgs

func AuthorizationPolicySpecRulesFromSourcePtr(v *AuthorizationPolicySpecRulesFromSourceArgs) AuthorizationPolicySpecRulesFromSourcePtrInput {
	return (*authorizationPolicySpecRulesFromSourcePtrType)(v)
}

func (*authorizationPolicySpecRulesFromSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecRulesFromSource)(nil)).Elem()
}

func (i *authorizationPolicySpecRulesFromSourcePtrType) ToAuthorizationPolicySpecRulesFromSourcePtrOutput() AuthorizationPolicySpecRulesFromSourcePtrOutput {
	return i.ToAuthorizationPolicySpecRulesFromSourcePtrOutputWithContext(context.Background())
}

func (i *authorizationPolicySpecRulesFromSourcePtrType) ToAuthorizationPolicySpecRulesFromSourcePtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesFromSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesFromSourcePtrOutput)
}

// Source specifies the source of a request.
type AuthorizationPolicySpecRulesFromSourceOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesFromSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRulesFromSource)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesFromSourceOutput) ToAuthorizationPolicySpecRulesFromSourceOutput() AuthorizationPolicySpecRulesFromSourceOutput {
	return o
}

func (o AuthorizationPolicySpecRulesFromSourceOutput) ToAuthorizationPolicySpecRulesFromSourceOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesFromSourceOutput {
	return o
}

func (o AuthorizationPolicySpecRulesFromSourceOutput) ToAuthorizationPolicySpecRulesFromSourcePtrOutput() AuthorizationPolicySpecRulesFromSourcePtrOutput {
	return o.ToAuthorizationPolicySpecRulesFromSourcePtrOutputWithContext(context.Background())
}

func (o AuthorizationPolicySpecRulesFromSourceOutput) ToAuthorizationPolicySpecRulesFromSourcePtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesFromSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorizationPolicySpecRulesFromSource) *AuthorizationPolicySpecRulesFromSource {
		return &v
	}).(AuthorizationPolicySpecRulesFromSourcePtrOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourceOutput) IpBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesFromSource) []string { return v.IpBlocks }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourceOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesFromSource) []string { return v.Namespaces }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourceOutput) NotIpBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesFromSource) []string { return v.NotIpBlocks }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourceOutput) NotNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesFromSource) []string { return v.NotNamespaces }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourceOutput) NotPrincipals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesFromSource) []string { return v.NotPrincipals }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourceOutput) NotRemoteIpBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesFromSource) []string { return v.NotRemoteIpBlocks }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourceOutput) NotRequestPrincipals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesFromSource) []string { return v.NotRequestPrincipals }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourceOutput) Principals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesFromSource) []string { return v.Principals }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourceOutput) RemoteIpBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesFromSource) []string { return v.RemoteIpBlocks }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourceOutput) RequestPrincipals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesFromSource) []string { return v.RequestPrincipals }).(pulumi.StringArrayOutput)
}

type AuthorizationPolicySpecRulesFromSourcePtrOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesFromSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecRulesFromSource)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesFromSourcePtrOutput) ToAuthorizationPolicySpecRulesFromSourcePtrOutput() AuthorizationPolicySpecRulesFromSourcePtrOutput {
	return o
}

func (o AuthorizationPolicySpecRulesFromSourcePtrOutput) ToAuthorizationPolicySpecRulesFromSourcePtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesFromSourcePtrOutput {
	return o
}

func (o AuthorizationPolicySpecRulesFromSourcePtrOutput) Elem() AuthorizationPolicySpecRulesFromSourceOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesFromSource) AuthorizationPolicySpecRulesFromSource {
		if v != nil {
			return *v
		}
		var ret AuthorizationPolicySpecRulesFromSource
		return ret
	}).(AuthorizationPolicySpecRulesFromSourceOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePtrOutput) IpBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesFromSource) []string {
		if v == nil {
			return nil
		}
		return v.IpBlocks
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePtrOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesFromSource) []string {
		if v == nil {
			return nil
		}
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePtrOutput) NotIpBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesFromSource) []string {
		if v == nil {
			return nil
		}
		return v.NotIpBlocks
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePtrOutput) NotNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesFromSource) []string {
		if v == nil {
			return nil
		}
		return v.NotNamespaces
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePtrOutput) NotPrincipals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesFromSource) []string {
		if v == nil {
			return nil
		}
		return v.NotPrincipals
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePtrOutput) NotRemoteIpBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesFromSource) []string {
		if v == nil {
			return nil
		}
		return v.NotRemoteIpBlocks
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePtrOutput) NotRequestPrincipals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesFromSource) []string {
		if v == nil {
			return nil
		}
		return v.NotRequestPrincipals
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePtrOutput) Principals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesFromSource) []string {
		if v == nil {
			return nil
		}
		return v.Principals
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePtrOutput) RemoteIpBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesFromSource) []string {
		if v == nil {
			return nil
		}
		return v.RemoteIpBlocks
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePtrOutput) RequestPrincipals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesFromSource) []string {
		if v == nil {
			return nil
		}
		return v.RequestPrincipals
	}).(pulumi.StringArrayOutput)
}

// Source specifies the source of a request.
type AuthorizationPolicySpecRulesFromSourcePatch struct {
	// Optional.
	IpBlocks []string `pulumi:"ipBlocks"`
	// Optional.
	Namespaces []string `pulumi:"namespaces"`
	// Optional.
	NotIpBlocks []string `pulumi:"notIpBlocks"`
	// Optional.
	NotNamespaces []string `pulumi:"notNamespaces"`
	// Optional.
	NotPrincipals []string `pulumi:"notPrincipals"`
	// Optional.
	NotRemoteIpBlocks []string `pulumi:"notRemoteIpBlocks"`
	// Optional.
	NotRequestPrincipals []string `pulumi:"notRequestPrincipals"`
	// Optional.
	Principals []string `pulumi:"principals"`
	// Optional.
	RemoteIpBlocks []string `pulumi:"remoteIpBlocks"`
	// Optional.
	RequestPrincipals []string `pulumi:"requestPrincipals"`
}

// AuthorizationPolicySpecRulesFromSourcePatchInput is an input type that accepts AuthorizationPolicySpecRulesFromSourcePatchArgs and AuthorizationPolicySpecRulesFromSourcePatchOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesFromSourcePatchInput` via:
//
//	AuthorizationPolicySpecRulesFromSourcePatchArgs{...}
type AuthorizationPolicySpecRulesFromSourcePatchInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesFromSourcePatchOutput() AuthorizationPolicySpecRulesFromSourcePatchOutput
	ToAuthorizationPolicySpecRulesFromSourcePatchOutputWithContext(context.Context) AuthorizationPolicySpecRulesFromSourcePatchOutput
}

// Source specifies the source of a request.
type AuthorizationPolicySpecRulesFromSourcePatchArgs struct {
	// Optional.
	IpBlocks pulumi.StringArrayInput `pulumi:"ipBlocks"`
	// Optional.
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// Optional.
	NotIpBlocks pulumi.StringArrayInput `pulumi:"notIpBlocks"`
	// Optional.
	NotNamespaces pulumi.StringArrayInput `pulumi:"notNamespaces"`
	// Optional.
	NotPrincipals pulumi.StringArrayInput `pulumi:"notPrincipals"`
	// Optional.
	NotRemoteIpBlocks pulumi.StringArrayInput `pulumi:"notRemoteIpBlocks"`
	// Optional.
	NotRequestPrincipals pulumi.StringArrayInput `pulumi:"notRequestPrincipals"`
	// Optional.
	Principals pulumi.StringArrayInput `pulumi:"principals"`
	// Optional.
	RemoteIpBlocks pulumi.StringArrayInput `pulumi:"remoteIpBlocks"`
	// Optional.
	RequestPrincipals pulumi.StringArrayInput `pulumi:"requestPrincipals"`
}

func (AuthorizationPolicySpecRulesFromSourcePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRulesFromSourcePatch)(nil)).Elem()
}

func (i AuthorizationPolicySpecRulesFromSourcePatchArgs) ToAuthorizationPolicySpecRulesFromSourcePatchOutput() AuthorizationPolicySpecRulesFromSourcePatchOutput {
	return i.ToAuthorizationPolicySpecRulesFromSourcePatchOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesFromSourcePatchArgs) ToAuthorizationPolicySpecRulesFromSourcePatchOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesFromSourcePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesFromSourcePatchOutput)
}

func (i AuthorizationPolicySpecRulesFromSourcePatchArgs) ToAuthorizationPolicySpecRulesFromSourcePatchPtrOutput() AuthorizationPolicySpecRulesFromSourcePatchPtrOutput {
	return i.ToAuthorizationPolicySpecRulesFromSourcePatchPtrOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesFromSourcePatchArgs) ToAuthorizationPolicySpecRulesFromSourcePatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesFromSourcePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesFromSourcePatchOutput).ToAuthorizationPolicySpecRulesFromSourcePatchPtrOutputWithContext(ctx)
}

// AuthorizationPolicySpecRulesFromSourcePatchPtrInput is an input type that accepts AuthorizationPolicySpecRulesFromSourcePatchArgs, AuthorizationPolicySpecRulesFromSourcePatchPtr and AuthorizationPolicySpecRulesFromSourcePatchPtrOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesFromSourcePatchPtrInput` via:
//
//	        AuthorizationPolicySpecRulesFromSourcePatchArgs{...}
//
//	or:
//
//	        nil
type AuthorizationPolicySpecRulesFromSourcePatchPtrInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesFromSourcePatchPtrOutput() AuthorizationPolicySpecRulesFromSourcePatchPtrOutput
	ToAuthorizationPolicySpecRulesFromSourcePatchPtrOutputWithContext(context.Context) AuthorizationPolicySpecRulesFromSourcePatchPtrOutput
}

type authorizationPolicySpecRulesFromSourcePatchPtrType AuthorizationPolicySpecRulesFromSourcePatchArgs

func AuthorizationPolicySpecRulesFromSourcePatchPtr(v *AuthorizationPolicySpecRulesFromSourcePatchArgs) AuthorizationPolicySpecRulesFromSourcePatchPtrInput {
	return (*authorizationPolicySpecRulesFromSourcePatchPtrType)(v)
}

func (*authorizationPolicySpecRulesFromSourcePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecRulesFromSourcePatch)(nil)).Elem()
}

func (i *authorizationPolicySpecRulesFromSourcePatchPtrType) ToAuthorizationPolicySpecRulesFromSourcePatchPtrOutput() AuthorizationPolicySpecRulesFromSourcePatchPtrOutput {
	return i.ToAuthorizationPolicySpecRulesFromSourcePatchPtrOutputWithContext(context.Background())
}

func (i *authorizationPolicySpecRulesFromSourcePatchPtrType) ToAuthorizationPolicySpecRulesFromSourcePatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesFromSourcePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesFromSourcePatchPtrOutput)
}

// Source specifies the source of a request.
type AuthorizationPolicySpecRulesFromSourcePatchOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesFromSourcePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRulesFromSourcePatch)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesFromSourcePatchOutput) ToAuthorizationPolicySpecRulesFromSourcePatchOutput() AuthorizationPolicySpecRulesFromSourcePatchOutput {
	return o
}

func (o AuthorizationPolicySpecRulesFromSourcePatchOutput) ToAuthorizationPolicySpecRulesFromSourcePatchOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesFromSourcePatchOutput {
	return o
}

func (o AuthorizationPolicySpecRulesFromSourcePatchOutput) ToAuthorizationPolicySpecRulesFromSourcePatchPtrOutput() AuthorizationPolicySpecRulesFromSourcePatchPtrOutput {
	return o.ToAuthorizationPolicySpecRulesFromSourcePatchPtrOutputWithContext(context.Background())
}

func (o AuthorizationPolicySpecRulesFromSourcePatchOutput) ToAuthorizationPolicySpecRulesFromSourcePatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesFromSourcePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorizationPolicySpecRulesFromSourcePatch) *AuthorizationPolicySpecRulesFromSourcePatch {
		return &v
	}).(AuthorizationPolicySpecRulesFromSourcePatchPtrOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePatchOutput) IpBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesFromSourcePatch) []string { return v.IpBlocks }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePatchOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesFromSourcePatch) []string { return v.Namespaces }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePatchOutput) NotIpBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesFromSourcePatch) []string { return v.NotIpBlocks }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePatchOutput) NotNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesFromSourcePatch) []string { return v.NotNamespaces }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePatchOutput) NotPrincipals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesFromSourcePatch) []string { return v.NotPrincipals }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePatchOutput) NotRemoteIpBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesFromSourcePatch) []string { return v.NotRemoteIpBlocks }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePatchOutput) NotRequestPrincipals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesFromSourcePatch) []string { return v.NotRequestPrincipals }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePatchOutput) Principals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesFromSourcePatch) []string { return v.Principals }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePatchOutput) RemoteIpBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesFromSourcePatch) []string { return v.RemoteIpBlocks }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePatchOutput) RequestPrincipals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesFromSourcePatch) []string { return v.RequestPrincipals }).(pulumi.StringArrayOutput)
}

type AuthorizationPolicySpecRulesFromSourcePatchPtrOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesFromSourcePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecRulesFromSourcePatch)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesFromSourcePatchPtrOutput) ToAuthorizationPolicySpecRulesFromSourcePatchPtrOutput() AuthorizationPolicySpecRulesFromSourcePatchPtrOutput {
	return o
}

func (o AuthorizationPolicySpecRulesFromSourcePatchPtrOutput) ToAuthorizationPolicySpecRulesFromSourcePatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesFromSourcePatchPtrOutput {
	return o
}

func (o AuthorizationPolicySpecRulesFromSourcePatchPtrOutput) Elem() AuthorizationPolicySpecRulesFromSourcePatchOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesFromSourcePatch) AuthorizationPolicySpecRulesFromSourcePatch {
		if v != nil {
			return *v
		}
		var ret AuthorizationPolicySpecRulesFromSourcePatch
		return ret
	}).(AuthorizationPolicySpecRulesFromSourcePatchOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePatchPtrOutput) IpBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesFromSourcePatch) []string {
		if v == nil {
			return nil
		}
		return v.IpBlocks
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePatchPtrOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesFromSourcePatch) []string {
		if v == nil {
			return nil
		}
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePatchPtrOutput) NotIpBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesFromSourcePatch) []string {
		if v == nil {
			return nil
		}
		return v.NotIpBlocks
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePatchPtrOutput) NotNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesFromSourcePatch) []string {
		if v == nil {
			return nil
		}
		return v.NotNamespaces
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePatchPtrOutput) NotPrincipals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesFromSourcePatch) []string {
		if v == nil {
			return nil
		}
		return v.NotPrincipals
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePatchPtrOutput) NotRemoteIpBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesFromSourcePatch) []string {
		if v == nil {
			return nil
		}
		return v.NotRemoteIpBlocks
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePatchPtrOutput) NotRequestPrincipals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesFromSourcePatch) []string {
		if v == nil {
			return nil
		}
		return v.NotRequestPrincipals
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePatchPtrOutput) Principals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesFromSourcePatch) []string {
		if v == nil {
			return nil
		}
		return v.Principals
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePatchPtrOutput) RemoteIpBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesFromSourcePatch) []string {
		if v == nil {
			return nil
		}
		return v.RemoteIpBlocks
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesFromSourcePatchPtrOutput) RequestPrincipals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesFromSourcePatch) []string {
		if v == nil {
			return nil
		}
		return v.RequestPrincipals
	}).(pulumi.StringArrayOutput)
}

type AuthorizationPolicySpecRulesPatch struct {
	// Optional.
	From []AuthorizationPolicySpecRulesFromPatch `pulumi:"from"`
	// Optional.
	To []AuthorizationPolicySpecRulesToPatch `pulumi:"to"`
	// Optional.
	When []AuthorizationPolicySpecRulesWhenPatch `pulumi:"when"`
}

// AuthorizationPolicySpecRulesPatchInput is an input type that accepts AuthorizationPolicySpecRulesPatchArgs and AuthorizationPolicySpecRulesPatchOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesPatchInput` via:
//
//	AuthorizationPolicySpecRulesPatchArgs{...}
type AuthorizationPolicySpecRulesPatchInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesPatchOutput() AuthorizationPolicySpecRulesPatchOutput
	ToAuthorizationPolicySpecRulesPatchOutputWithContext(context.Context) AuthorizationPolicySpecRulesPatchOutput
}

type AuthorizationPolicySpecRulesPatchArgs struct {
	// Optional.
	From AuthorizationPolicySpecRulesFromPatchArrayInput `pulumi:"from"`
	// Optional.
	To AuthorizationPolicySpecRulesToPatchArrayInput `pulumi:"to"`
	// Optional.
	When AuthorizationPolicySpecRulesWhenPatchArrayInput `pulumi:"when"`
}

func (AuthorizationPolicySpecRulesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRulesPatch)(nil)).Elem()
}

func (i AuthorizationPolicySpecRulesPatchArgs) ToAuthorizationPolicySpecRulesPatchOutput() AuthorizationPolicySpecRulesPatchOutput {
	return i.ToAuthorizationPolicySpecRulesPatchOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesPatchArgs) ToAuthorizationPolicySpecRulesPatchOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesPatchOutput)
}

// AuthorizationPolicySpecRulesPatchArrayInput is an input type that accepts AuthorizationPolicySpecRulesPatchArray and AuthorizationPolicySpecRulesPatchArrayOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesPatchArrayInput` via:
//
//	AuthorizationPolicySpecRulesPatchArray{ AuthorizationPolicySpecRulesPatchArgs{...} }
type AuthorizationPolicySpecRulesPatchArrayInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesPatchArrayOutput() AuthorizationPolicySpecRulesPatchArrayOutput
	ToAuthorizationPolicySpecRulesPatchArrayOutputWithContext(context.Context) AuthorizationPolicySpecRulesPatchArrayOutput
}

type AuthorizationPolicySpecRulesPatchArray []AuthorizationPolicySpecRulesPatchInput

func (AuthorizationPolicySpecRulesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPolicySpecRulesPatch)(nil)).Elem()
}

func (i AuthorizationPolicySpecRulesPatchArray) ToAuthorizationPolicySpecRulesPatchArrayOutput() AuthorizationPolicySpecRulesPatchArrayOutput {
	return i.ToAuthorizationPolicySpecRulesPatchArrayOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesPatchArray) ToAuthorizationPolicySpecRulesPatchArrayOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesPatchArrayOutput)
}

type AuthorizationPolicySpecRulesPatchOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRulesPatch)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesPatchOutput) ToAuthorizationPolicySpecRulesPatchOutput() AuthorizationPolicySpecRulesPatchOutput {
	return o
}

func (o AuthorizationPolicySpecRulesPatchOutput) ToAuthorizationPolicySpecRulesPatchOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesPatchOutput {
	return o
}

// Optional.
func (o AuthorizationPolicySpecRulesPatchOutput) From() AuthorizationPolicySpecRulesFromPatchArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesPatch) []AuthorizationPolicySpecRulesFromPatch { return v.From }).(AuthorizationPolicySpecRulesFromPatchArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesPatchOutput) To() AuthorizationPolicySpecRulesToPatchArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesPatch) []AuthorizationPolicySpecRulesToPatch { return v.To }).(AuthorizationPolicySpecRulesToPatchArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesPatchOutput) When() AuthorizationPolicySpecRulesWhenPatchArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesPatch) []AuthorizationPolicySpecRulesWhenPatch { return v.When }).(AuthorizationPolicySpecRulesWhenPatchArrayOutput)
}

type AuthorizationPolicySpecRulesPatchArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPolicySpecRulesPatch)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesPatchArrayOutput) ToAuthorizationPolicySpecRulesPatchArrayOutput() AuthorizationPolicySpecRulesPatchArrayOutput {
	return o
}

func (o AuthorizationPolicySpecRulesPatchArrayOutput) ToAuthorizationPolicySpecRulesPatchArrayOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesPatchArrayOutput {
	return o
}

func (o AuthorizationPolicySpecRulesPatchArrayOutput) Index(i pulumi.IntInput) AuthorizationPolicySpecRulesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorizationPolicySpecRulesPatch {
		return vs[0].([]AuthorizationPolicySpecRulesPatch)[vs[1].(int)]
	}).(AuthorizationPolicySpecRulesPatchOutput)
}

type AuthorizationPolicySpecRulesTo struct {
	Operation *AuthorizationPolicySpecRulesToOperation `pulumi:"operation"`
}

// AuthorizationPolicySpecRulesToInput is an input type that accepts AuthorizationPolicySpecRulesToArgs and AuthorizationPolicySpecRulesToOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesToInput` via:
//
//	AuthorizationPolicySpecRulesToArgs{...}
type AuthorizationPolicySpecRulesToInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesToOutput() AuthorizationPolicySpecRulesToOutput
	ToAuthorizationPolicySpecRulesToOutputWithContext(context.Context) AuthorizationPolicySpecRulesToOutput
}

type AuthorizationPolicySpecRulesToArgs struct {
	Operation AuthorizationPolicySpecRulesToOperationPtrInput `pulumi:"operation"`
}

func (AuthorizationPolicySpecRulesToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRulesTo)(nil)).Elem()
}

func (i AuthorizationPolicySpecRulesToArgs) ToAuthorizationPolicySpecRulesToOutput() AuthorizationPolicySpecRulesToOutput {
	return i.ToAuthorizationPolicySpecRulesToOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesToArgs) ToAuthorizationPolicySpecRulesToOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesToOutput)
}

// AuthorizationPolicySpecRulesToArrayInput is an input type that accepts AuthorizationPolicySpecRulesToArray and AuthorizationPolicySpecRulesToArrayOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesToArrayInput` via:
//
//	AuthorizationPolicySpecRulesToArray{ AuthorizationPolicySpecRulesToArgs{...} }
type AuthorizationPolicySpecRulesToArrayInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesToArrayOutput() AuthorizationPolicySpecRulesToArrayOutput
	ToAuthorizationPolicySpecRulesToArrayOutputWithContext(context.Context) AuthorizationPolicySpecRulesToArrayOutput
}

type AuthorizationPolicySpecRulesToArray []AuthorizationPolicySpecRulesToInput

func (AuthorizationPolicySpecRulesToArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPolicySpecRulesTo)(nil)).Elem()
}

func (i AuthorizationPolicySpecRulesToArray) ToAuthorizationPolicySpecRulesToArrayOutput() AuthorizationPolicySpecRulesToArrayOutput {
	return i.ToAuthorizationPolicySpecRulesToArrayOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesToArray) ToAuthorizationPolicySpecRulesToArrayOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesToArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesToArrayOutput)
}

type AuthorizationPolicySpecRulesToOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRulesTo)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesToOutput) ToAuthorizationPolicySpecRulesToOutput() AuthorizationPolicySpecRulesToOutput {
	return o
}

func (o AuthorizationPolicySpecRulesToOutput) ToAuthorizationPolicySpecRulesToOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesToOutput {
	return o
}

func (o AuthorizationPolicySpecRulesToOutput) Operation() AuthorizationPolicySpecRulesToOperationPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesTo) *AuthorizationPolicySpecRulesToOperation { return v.Operation }).(AuthorizationPolicySpecRulesToOperationPtrOutput)
}

type AuthorizationPolicySpecRulesToArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesToArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPolicySpecRulesTo)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesToArrayOutput) ToAuthorizationPolicySpecRulesToArrayOutput() AuthorizationPolicySpecRulesToArrayOutput {
	return o
}

func (o AuthorizationPolicySpecRulesToArrayOutput) ToAuthorizationPolicySpecRulesToArrayOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesToArrayOutput {
	return o
}

func (o AuthorizationPolicySpecRulesToArrayOutput) Index(i pulumi.IntInput) AuthorizationPolicySpecRulesToOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorizationPolicySpecRulesTo {
		return vs[0].([]AuthorizationPolicySpecRulesTo)[vs[1].(int)]
	}).(AuthorizationPolicySpecRulesToOutput)
}

// Operation specifies the operation of a request.
type AuthorizationPolicySpecRulesToOperation struct {
	// Optional.
	Hosts []string `pulumi:"hosts"`
	// Optional.
	Methods []string `pulumi:"methods"`
	// Optional.
	NotHosts []string `pulumi:"notHosts"`
	// Optional.
	NotMethods []string `pulumi:"notMethods"`
	// Optional.
	NotPaths []string `pulumi:"notPaths"`
	// Optional.
	NotPorts []string `pulumi:"notPorts"`
	// Optional.
	Paths []string `pulumi:"paths"`
	// Optional.
	Ports []string `pulumi:"ports"`
}

// AuthorizationPolicySpecRulesToOperationInput is an input type that accepts AuthorizationPolicySpecRulesToOperationArgs and AuthorizationPolicySpecRulesToOperationOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesToOperationInput` via:
//
//	AuthorizationPolicySpecRulesToOperationArgs{...}
type AuthorizationPolicySpecRulesToOperationInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesToOperationOutput() AuthorizationPolicySpecRulesToOperationOutput
	ToAuthorizationPolicySpecRulesToOperationOutputWithContext(context.Context) AuthorizationPolicySpecRulesToOperationOutput
}

// Operation specifies the operation of a request.
type AuthorizationPolicySpecRulesToOperationArgs struct {
	// Optional.
	Hosts pulumi.StringArrayInput `pulumi:"hosts"`
	// Optional.
	Methods pulumi.StringArrayInput `pulumi:"methods"`
	// Optional.
	NotHosts pulumi.StringArrayInput `pulumi:"notHosts"`
	// Optional.
	NotMethods pulumi.StringArrayInput `pulumi:"notMethods"`
	// Optional.
	NotPaths pulumi.StringArrayInput `pulumi:"notPaths"`
	// Optional.
	NotPorts pulumi.StringArrayInput `pulumi:"notPorts"`
	// Optional.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// Optional.
	Ports pulumi.StringArrayInput `pulumi:"ports"`
}

func (AuthorizationPolicySpecRulesToOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRulesToOperation)(nil)).Elem()
}

func (i AuthorizationPolicySpecRulesToOperationArgs) ToAuthorizationPolicySpecRulesToOperationOutput() AuthorizationPolicySpecRulesToOperationOutput {
	return i.ToAuthorizationPolicySpecRulesToOperationOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesToOperationArgs) ToAuthorizationPolicySpecRulesToOperationOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesToOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesToOperationOutput)
}

func (i AuthorizationPolicySpecRulesToOperationArgs) ToAuthorizationPolicySpecRulesToOperationPtrOutput() AuthorizationPolicySpecRulesToOperationPtrOutput {
	return i.ToAuthorizationPolicySpecRulesToOperationPtrOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesToOperationArgs) ToAuthorizationPolicySpecRulesToOperationPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesToOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesToOperationOutput).ToAuthorizationPolicySpecRulesToOperationPtrOutputWithContext(ctx)
}

// AuthorizationPolicySpecRulesToOperationPtrInput is an input type that accepts AuthorizationPolicySpecRulesToOperationArgs, AuthorizationPolicySpecRulesToOperationPtr and AuthorizationPolicySpecRulesToOperationPtrOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesToOperationPtrInput` via:
//
//	        AuthorizationPolicySpecRulesToOperationArgs{...}
//
//	or:
//
//	        nil
type AuthorizationPolicySpecRulesToOperationPtrInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesToOperationPtrOutput() AuthorizationPolicySpecRulesToOperationPtrOutput
	ToAuthorizationPolicySpecRulesToOperationPtrOutputWithContext(context.Context) AuthorizationPolicySpecRulesToOperationPtrOutput
}

type authorizationPolicySpecRulesToOperationPtrType AuthorizationPolicySpecRulesToOperationArgs

func AuthorizationPolicySpecRulesToOperationPtr(v *AuthorizationPolicySpecRulesToOperationArgs) AuthorizationPolicySpecRulesToOperationPtrInput {
	return (*authorizationPolicySpecRulesToOperationPtrType)(v)
}

func (*authorizationPolicySpecRulesToOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecRulesToOperation)(nil)).Elem()
}

func (i *authorizationPolicySpecRulesToOperationPtrType) ToAuthorizationPolicySpecRulesToOperationPtrOutput() AuthorizationPolicySpecRulesToOperationPtrOutput {
	return i.ToAuthorizationPolicySpecRulesToOperationPtrOutputWithContext(context.Background())
}

func (i *authorizationPolicySpecRulesToOperationPtrType) ToAuthorizationPolicySpecRulesToOperationPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesToOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesToOperationPtrOutput)
}

// Operation specifies the operation of a request.
type AuthorizationPolicySpecRulesToOperationOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesToOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRulesToOperation)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesToOperationOutput) ToAuthorizationPolicySpecRulesToOperationOutput() AuthorizationPolicySpecRulesToOperationOutput {
	return o
}

func (o AuthorizationPolicySpecRulesToOperationOutput) ToAuthorizationPolicySpecRulesToOperationOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesToOperationOutput {
	return o
}

func (o AuthorizationPolicySpecRulesToOperationOutput) ToAuthorizationPolicySpecRulesToOperationPtrOutput() AuthorizationPolicySpecRulesToOperationPtrOutput {
	return o.ToAuthorizationPolicySpecRulesToOperationPtrOutputWithContext(context.Background())
}

func (o AuthorizationPolicySpecRulesToOperationOutput) ToAuthorizationPolicySpecRulesToOperationPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesToOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorizationPolicySpecRulesToOperation) *AuthorizationPolicySpecRulesToOperation {
		return &v
	}).(AuthorizationPolicySpecRulesToOperationPtrOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesToOperation) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesToOperation) []string { return v.Methods }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationOutput) NotHosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesToOperation) []string { return v.NotHosts }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationOutput) NotMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesToOperation) []string { return v.NotMethods }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationOutput) NotPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesToOperation) []string { return v.NotPaths }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationOutput) NotPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesToOperation) []string { return v.NotPorts }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesToOperation) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesToOperation) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

type AuthorizationPolicySpecRulesToOperationPtrOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesToOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecRulesToOperation)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesToOperationPtrOutput) ToAuthorizationPolicySpecRulesToOperationPtrOutput() AuthorizationPolicySpecRulesToOperationPtrOutput {
	return o
}

func (o AuthorizationPolicySpecRulesToOperationPtrOutput) ToAuthorizationPolicySpecRulesToOperationPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesToOperationPtrOutput {
	return o
}

func (o AuthorizationPolicySpecRulesToOperationPtrOutput) Elem() AuthorizationPolicySpecRulesToOperationOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesToOperation) AuthorizationPolicySpecRulesToOperation {
		if v != nil {
			return *v
		}
		var ret AuthorizationPolicySpecRulesToOperation
		return ret
	}).(AuthorizationPolicySpecRulesToOperationOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPtrOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesToOperation) []string {
		if v == nil {
			return nil
		}
		return v.Hosts
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPtrOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesToOperation) []string {
		if v == nil {
			return nil
		}
		return v.Methods
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPtrOutput) NotHosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesToOperation) []string {
		if v == nil {
			return nil
		}
		return v.NotHosts
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPtrOutput) NotMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesToOperation) []string {
		if v == nil {
			return nil
		}
		return v.NotMethods
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPtrOutput) NotPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesToOperation) []string {
		if v == nil {
			return nil
		}
		return v.NotPaths
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPtrOutput) NotPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesToOperation) []string {
		if v == nil {
			return nil
		}
		return v.NotPorts
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPtrOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesToOperation) []string {
		if v == nil {
			return nil
		}
		return v.Paths
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPtrOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesToOperation) []string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringArrayOutput)
}

// Operation specifies the operation of a request.
type AuthorizationPolicySpecRulesToOperationPatch struct {
	// Optional.
	Hosts []string `pulumi:"hosts"`
	// Optional.
	Methods []string `pulumi:"methods"`
	// Optional.
	NotHosts []string `pulumi:"notHosts"`
	// Optional.
	NotMethods []string `pulumi:"notMethods"`
	// Optional.
	NotPaths []string `pulumi:"notPaths"`
	// Optional.
	NotPorts []string `pulumi:"notPorts"`
	// Optional.
	Paths []string `pulumi:"paths"`
	// Optional.
	Ports []string `pulumi:"ports"`
}

// AuthorizationPolicySpecRulesToOperationPatchInput is an input type that accepts AuthorizationPolicySpecRulesToOperationPatchArgs and AuthorizationPolicySpecRulesToOperationPatchOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesToOperationPatchInput` via:
//
//	AuthorizationPolicySpecRulesToOperationPatchArgs{...}
type AuthorizationPolicySpecRulesToOperationPatchInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesToOperationPatchOutput() AuthorizationPolicySpecRulesToOperationPatchOutput
	ToAuthorizationPolicySpecRulesToOperationPatchOutputWithContext(context.Context) AuthorizationPolicySpecRulesToOperationPatchOutput
}

// Operation specifies the operation of a request.
type AuthorizationPolicySpecRulesToOperationPatchArgs struct {
	// Optional.
	Hosts pulumi.StringArrayInput `pulumi:"hosts"`
	// Optional.
	Methods pulumi.StringArrayInput `pulumi:"methods"`
	// Optional.
	NotHosts pulumi.StringArrayInput `pulumi:"notHosts"`
	// Optional.
	NotMethods pulumi.StringArrayInput `pulumi:"notMethods"`
	// Optional.
	NotPaths pulumi.StringArrayInput `pulumi:"notPaths"`
	// Optional.
	NotPorts pulumi.StringArrayInput `pulumi:"notPorts"`
	// Optional.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// Optional.
	Ports pulumi.StringArrayInput `pulumi:"ports"`
}

func (AuthorizationPolicySpecRulesToOperationPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRulesToOperationPatch)(nil)).Elem()
}

func (i AuthorizationPolicySpecRulesToOperationPatchArgs) ToAuthorizationPolicySpecRulesToOperationPatchOutput() AuthorizationPolicySpecRulesToOperationPatchOutput {
	return i.ToAuthorizationPolicySpecRulesToOperationPatchOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesToOperationPatchArgs) ToAuthorizationPolicySpecRulesToOperationPatchOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesToOperationPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesToOperationPatchOutput)
}

func (i AuthorizationPolicySpecRulesToOperationPatchArgs) ToAuthorizationPolicySpecRulesToOperationPatchPtrOutput() AuthorizationPolicySpecRulesToOperationPatchPtrOutput {
	return i.ToAuthorizationPolicySpecRulesToOperationPatchPtrOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesToOperationPatchArgs) ToAuthorizationPolicySpecRulesToOperationPatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesToOperationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesToOperationPatchOutput).ToAuthorizationPolicySpecRulesToOperationPatchPtrOutputWithContext(ctx)
}

// AuthorizationPolicySpecRulesToOperationPatchPtrInput is an input type that accepts AuthorizationPolicySpecRulesToOperationPatchArgs, AuthorizationPolicySpecRulesToOperationPatchPtr and AuthorizationPolicySpecRulesToOperationPatchPtrOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesToOperationPatchPtrInput` via:
//
//	        AuthorizationPolicySpecRulesToOperationPatchArgs{...}
//
//	or:
//
//	        nil
type AuthorizationPolicySpecRulesToOperationPatchPtrInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesToOperationPatchPtrOutput() AuthorizationPolicySpecRulesToOperationPatchPtrOutput
	ToAuthorizationPolicySpecRulesToOperationPatchPtrOutputWithContext(context.Context) AuthorizationPolicySpecRulesToOperationPatchPtrOutput
}

type authorizationPolicySpecRulesToOperationPatchPtrType AuthorizationPolicySpecRulesToOperationPatchArgs

func AuthorizationPolicySpecRulesToOperationPatchPtr(v *AuthorizationPolicySpecRulesToOperationPatchArgs) AuthorizationPolicySpecRulesToOperationPatchPtrInput {
	return (*authorizationPolicySpecRulesToOperationPatchPtrType)(v)
}

func (*authorizationPolicySpecRulesToOperationPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecRulesToOperationPatch)(nil)).Elem()
}

func (i *authorizationPolicySpecRulesToOperationPatchPtrType) ToAuthorizationPolicySpecRulesToOperationPatchPtrOutput() AuthorizationPolicySpecRulesToOperationPatchPtrOutput {
	return i.ToAuthorizationPolicySpecRulesToOperationPatchPtrOutputWithContext(context.Background())
}

func (i *authorizationPolicySpecRulesToOperationPatchPtrType) ToAuthorizationPolicySpecRulesToOperationPatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesToOperationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesToOperationPatchPtrOutput)
}

// Operation specifies the operation of a request.
type AuthorizationPolicySpecRulesToOperationPatchOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesToOperationPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRulesToOperationPatch)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesToOperationPatchOutput) ToAuthorizationPolicySpecRulesToOperationPatchOutput() AuthorizationPolicySpecRulesToOperationPatchOutput {
	return o
}

func (o AuthorizationPolicySpecRulesToOperationPatchOutput) ToAuthorizationPolicySpecRulesToOperationPatchOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesToOperationPatchOutput {
	return o
}

func (o AuthorizationPolicySpecRulesToOperationPatchOutput) ToAuthorizationPolicySpecRulesToOperationPatchPtrOutput() AuthorizationPolicySpecRulesToOperationPatchPtrOutput {
	return o.ToAuthorizationPolicySpecRulesToOperationPatchPtrOutputWithContext(context.Background())
}

func (o AuthorizationPolicySpecRulesToOperationPatchOutput) ToAuthorizationPolicySpecRulesToOperationPatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesToOperationPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorizationPolicySpecRulesToOperationPatch) *AuthorizationPolicySpecRulesToOperationPatch {
		return &v
	}).(AuthorizationPolicySpecRulesToOperationPatchPtrOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPatchOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesToOperationPatch) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPatchOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesToOperationPatch) []string { return v.Methods }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPatchOutput) NotHosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesToOperationPatch) []string { return v.NotHosts }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPatchOutput) NotMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesToOperationPatch) []string { return v.NotMethods }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPatchOutput) NotPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesToOperationPatch) []string { return v.NotPaths }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPatchOutput) NotPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesToOperationPatch) []string { return v.NotPorts }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPatchOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesToOperationPatch) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPatchOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesToOperationPatch) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

type AuthorizationPolicySpecRulesToOperationPatchPtrOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesToOperationPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecRulesToOperationPatch)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesToOperationPatchPtrOutput) ToAuthorizationPolicySpecRulesToOperationPatchPtrOutput() AuthorizationPolicySpecRulesToOperationPatchPtrOutput {
	return o
}

func (o AuthorizationPolicySpecRulesToOperationPatchPtrOutput) ToAuthorizationPolicySpecRulesToOperationPatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesToOperationPatchPtrOutput {
	return o
}

func (o AuthorizationPolicySpecRulesToOperationPatchPtrOutput) Elem() AuthorizationPolicySpecRulesToOperationPatchOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesToOperationPatch) AuthorizationPolicySpecRulesToOperationPatch {
		if v != nil {
			return *v
		}
		var ret AuthorizationPolicySpecRulesToOperationPatch
		return ret
	}).(AuthorizationPolicySpecRulesToOperationPatchOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPatchPtrOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesToOperationPatch) []string {
		if v == nil {
			return nil
		}
		return v.Hosts
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPatchPtrOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesToOperationPatch) []string {
		if v == nil {
			return nil
		}
		return v.Methods
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPatchPtrOutput) NotHosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesToOperationPatch) []string {
		if v == nil {
			return nil
		}
		return v.NotHosts
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPatchPtrOutput) NotMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesToOperationPatch) []string {
		if v == nil {
			return nil
		}
		return v.NotMethods
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPatchPtrOutput) NotPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesToOperationPatch) []string {
		if v == nil {
			return nil
		}
		return v.NotPaths
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPatchPtrOutput) NotPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesToOperationPatch) []string {
		if v == nil {
			return nil
		}
		return v.NotPorts
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPatchPtrOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesToOperationPatch) []string {
		if v == nil {
			return nil
		}
		return v.Paths
	}).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesToOperationPatchPtrOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecRulesToOperationPatch) []string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringArrayOutput)
}

type AuthorizationPolicySpecRulesToPatch struct {
	Operation *AuthorizationPolicySpecRulesToOperationPatch `pulumi:"operation"`
}

// AuthorizationPolicySpecRulesToPatchInput is an input type that accepts AuthorizationPolicySpecRulesToPatchArgs and AuthorizationPolicySpecRulesToPatchOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesToPatchInput` via:
//
//	AuthorizationPolicySpecRulesToPatchArgs{...}
type AuthorizationPolicySpecRulesToPatchInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesToPatchOutput() AuthorizationPolicySpecRulesToPatchOutput
	ToAuthorizationPolicySpecRulesToPatchOutputWithContext(context.Context) AuthorizationPolicySpecRulesToPatchOutput
}

type AuthorizationPolicySpecRulesToPatchArgs struct {
	Operation AuthorizationPolicySpecRulesToOperationPatchPtrInput `pulumi:"operation"`
}

func (AuthorizationPolicySpecRulesToPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRulesToPatch)(nil)).Elem()
}

func (i AuthorizationPolicySpecRulesToPatchArgs) ToAuthorizationPolicySpecRulesToPatchOutput() AuthorizationPolicySpecRulesToPatchOutput {
	return i.ToAuthorizationPolicySpecRulesToPatchOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesToPatchArgs) ToAuthorizationPolicySpecRulesToPatchOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesToPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesToPatchOutput)
}

// AuthorizationPolicySpecRulesToPatchArrayInput is an input type that accepts AuthorizationPolicySpecRulesToPatchArray and AuthorizationPolicySpecRulesToPatchArrayOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesToPatchArrayInput` via:
//
//	AuthorizationPolicySpecRulesToPatchArray{ AuthorizationPolicySpecRulesToPatchArgs{...} }
type AuthorizationPolicySpecRulesToPatchArrayInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesToPatchArrayOutput() AuthorizationPolicySpecRulesToPatchArrayOutput
	ToAuthorizationPolicySpecRulesToPatchArrayOutputWithContext(context.Context) AuthorizationPolicySpecRulesToPatchArrayOutput
}

type AuthorizationPolicySpecRulesToPatchArray []AuthorizationPolicySpecRulesToPatchInput

func (AuthorizationPolicySpecRulesToPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPolicySpecRulesToPatch)(nil)).Elem()
}

func (i AuthorizationPolicySpecRulesToPatchArray) ToAuthorizationPolicySpecRulesToPatchArrayOutput() AuthorizationPolicySpecRulesToPatchArrayOutput {
	return i.ToAuthorizationPolicySpecRulesToPatchArrayOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesToPatchArray) ToAuthorizationPolicySpecRulesToPatchArrayOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesToPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesToPatchArrayOutput)
}

type AuthorizationPolicySpecRulesToPatchOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesToPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRulesToPatch)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesToPatchOutput) ToAuthorizationPolicySpecRulesToPatchOutput() AuthorizationPolicySpecRulesToPatchOutput {
	return o
}

func (o AuthorizationPolicySpecRulesToPatchOutput) ToAuthorizationPolicySpecRulesToPatchOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesToPatchOutput {
	return o
}

func (o AuthorizationPolicySpecRulesToPatchOutput) Operation() AuthorizationPolicySpecRulesToOperationPatchPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesToPatch) *AuthorizationPolicySpecRulesToOperationPatch {
		return v.Operation
	}).(AuthorizationPolicySpecRulesToOperationPatchPtrOutput)
}

type AuthorizationPolicySpecRulesToPatchArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesToPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPolicySpecRulesToPatch)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesToPatchArrayOutput) ToAuthorizationPolicySpecRulesToPatchArrayOutput() AuthorizationPolicySpecRulesToPatchArrayOutput {
	return o
}

func (o AuthorizationPolicySpecRulesToPatchArrayOutput) ToAuthorizationPolicySpecRulesToPatchArrayOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesToPatchArrayOutput {
	return o
}

func (o AuthorizationPolicySpecRulesToPatchArrayOutput) Index(i pulumi.IntInput) AuthorizationPolicySpecRulesToPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorizationPolicySpecRulesToPatch {
		return vs[0].([]AuthorizationPolicySpecRulesToPatch)[vs[1].(int)]
	}).(AuthorizationPolicySpecRulesToPatchOutput)
}

type AuthorizationPolicySpecRulesWhen struct {
	// The name of an Istio attribute.
	Key *string `pulumi:"key"`
	// Optional.
	NotValues []string `pulumi:"notValues"`
	// Optional.
	Values []string `pulumi:"values"`
}

// AuthorizationPolicySpecRulesWhenInput is an input type that accepts AuthorizationPolicySpecRulesWhenArgs and AuthorizationPolicySpecRulesWhenOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesWhenInput` via:
//
//	AuthorizationPolicySpecRulesWhenArgs{...}
type AuthorizationPolicySpecRulesWhenInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesWhenOutput() AuthorizationPolicySpecRulesWhenOutput
	ToAuthorizationPolicySpecRulesWhenOutputWithContext(context.Context) AuthorizationPolicySpecRulesWhenOutput
}

type AuthorizationPolicySpecRulesWhenArgs struct {
	// The name of an Istio attribute.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Optional.
	NotValues pulumi.StringArrayInput `pulumi:"notValues"`
	// Optional.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (AuthorizationPolicySpecRulesWhenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRulesWhen)(nil)).Elem()
}

func (i AuthorizationPolicySpecRulesWhenArgs) ToAuthorizationPolicySpecRulesWhenOutput() AuthorizationPolicySpecRulesWhenOutput {
	return i.ToAuthorizationPolicySpecRulesWhenOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesWhenArgs) ToAuthorizationPolicySpecRulesWhenOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesWhenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesWhenOutput)
}

// AuthorizationPolicySpecRulesWhenArrayInput is an input type that accepts AuthorizationPolicySpecRulesWhenArray and AuthorizationPolicySpecRulesWhenArrayOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesWhenArrayInput` via:
//
//	AuthorizationPolicySpecRulesWhenArray{ AuthorizationPolicySpecRulesWhenArgs{...} }
type AuthorizationPolicySpecRulesWhenArrayInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesWhenArrayOutput() AuthorizationPolicySpecRulesWhenArrayOutput
	ToAuthorizationPolicySpecRulesWhenArrayOutputWithContext(context.Context) AuthorizationPolicySpecRulesWhenArrayOutput
}

type AuthorizationPolicySpecRulesWhenArray []AuthorizationPolicySpecRulesWhenInput

func (AuthorizationPolicySpecRulesWhenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPolicySpecRulesWhen)(nil)).Elem()
}

func (i AuthorizationPolicySpecRulesWhenArray) ToAuthorizationPolicySpecRulesWhenArrayOutput() AuthorizationPolicySpecRulesWhenArrayOutput {
	return i.ToAuthorizationPolicySpecRulesWhenArrayOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesWhenArray) ToAuthorizationPolicySpecRulesWhenArrayOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesWhenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesWhenArrayOutput)
}

type AuthorizationPolicySpecRulesWhenOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesWhenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRulesWhen)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesWhenOutput) ToAuthorizationPolicySpecRulesWhenOutput() AuthorizationPolicySpecRulesWhenOutput {
	return o
}

func (o AuthorizationPolicySpecRulesWhenOutput) ToAuthorizationPolicySpecRulesWhenOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesWhenOutput {
	return o
}

// The name of an Istio attribute.
func (o AuthorizationPolicySpecRulesWhenOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesWhen) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesWhenOutput) NotValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesWhen) []string { return v.NotValues }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesWhenOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesWhen) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type AuthorizationPolicySpecRulesWhenArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesWhenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPolicySpecRulesWhen)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesWhenArrayOutput) ToAuthorizationPolicySpecRulesWhenArrayOutput() AuthorizationPolicySpecRulesWhenArrayOutput {
	return o
}

func (o AuthorizationPolicySpecRulesWhenArrayOutput) ToAuthorizationPolicySpecRulesWhenArrayOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesWhenArrayOutput {
	return o
}

func (o AuthorizationPolicySpecRulesWhenArrayOutput) Index(i pulumi.IntInput) AuthorizationPolicySpecRulesWhenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorizationPolicySpecRulesWhen {
		return vs[0].([]AuthorizationPolicySpecRulesWhen)[vs[1].(int)]
	}).(AuthorizationPolicySpecRulesWhenOutput)
}

type AuthorizationPolicySpecRulesWhenPatch struct {
	// The name of an Istio attribute.
	Key *string `pulumi:"key"`
	// Optional.
	NotValues []string `pulumi:"notValues"`
	// Optional.
	Values []string `pulumi:"values"`
}

// AuthorizationPolicySpecRulesWhenPatchInput is an input type that accepts AuthorizationPolicySpecRulesWhenPatchArgs and AuthorizationPolicySpecRulesWhenPatchOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesWhenPatchInput` via:
//
//	AuthorizationPolicySpecRulesWhenPatchArgs{...}
type AuthorizationPolicySpecRulesWhenPatchInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesWhenPatchOutput() AuthorizationPolicySpecRulesWhenPatchOutput
	ToAuthorizationPolicySpecRulesWhenPatchOutputWithContext(context.Context) AuthorizationPolicySpecRulesWhenPatchOutput
}

type AuthorizationPolicySpecRulesWhenPatchArgs struct {
	// The name of an Istio attribute.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Optional.
	NotValues pulumi.StringArrayInput `pulumi:"notValues"`
	// Optional.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (AuthorizationPolicySpecRulesWhenPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRulesWhenPatch)(nil)).Elem()
}

func (i AuthorizationPolicySpecRulesWhenPatchArgs) ToAuthorizationPolicySpecRulesWhenPatchOutput() AuthorizationPolicySpecRulesWhenPatchOutput {
	return i.ToAuthorizationPolicySpecRulesWhenPatchOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesWhenPatchArgs) ToAuthorizationPolicySpecRulesWhenPatchOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesWhenPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesWhenPatchOutput)
}

// AuthorizationPolicySpecRulesWhenPatchArrayInput is an input type that accepts AuthorizationPolicySpecRulesWhenPatchArray and AuthorizationPolicySpecRulesWhenPatchArrayOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecRulesWhenPatchArrayInput` via:
//
//	AuthorizationPolicySpecRulesWhenPatchArray{ AuthorizationPolicySpecRulesWhenPatchArgs{...} }
type AuthorizationPolicySpecRulesWhenPatchArrayInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecRulesWhenPatchArrayOutput() AuthorizationPolicySpecRulesWhenPatchArrayOutput
	ToAuthorizationPolicySpecRulesWhenPatchArrayOutputWithContext(context.Context) AuthorizationPolicySpecRulesWhenPatchArrayOutput
}

type AuthorizationPolicySpecRulesWhenPatchArray []AuthorizationPolicySpecRulesWhenPatchInput

func (AuthorizationPolicySpecRulesWhenPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPolicySpecRulesWhenPatch)(nil)).Elem()
}

func (i AuthorizationPolicySpecRulesWhenPatchArray) ToAuthorizationPolicySpecRulesWhenPatchArrayOutput() AuthorizationPolicySpecRulesWhenPatchArrayOutput {
	return i.ToAuthorizationPolicySpecRulesWhenPatchArrayOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecRulesWhenPatchArray) ToAuthorizationPolicySpecRulesWhenPatchArrayOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesWhenPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecRulesWhenPatchArrayOutput)
}

type AuthorizationPolicySpecRulesWhenPatchOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesWhenPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecRulesWhenPatch)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesWhenPatchOutput) ToAuthorizationPolicySpecRulesWhenPatchOutput() AuthorizationPolicySpecRulesWhenPatchOutput {
	return o
}

func (o AuthorizationPolicySpecRulesWhenPatchOutput) ToAuthorizationPolicySpecRulesWhenPatchOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesWhenPatchOutput {
	return o
}

// The name of an Istio attribute.
func (o AuthorizationPolicySpecRulesWhenPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesWhenPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesWhenPatchOutput) NotValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesWhenPatch) []string { return v.NotValues }).(pulumi.StringArrayOutput)
}

// Optional.
func (o AuthorizationPolicySpecRulesWhenPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecRulesWhenPatch) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type AuthorizationPolicySpecRulesWhenPatchArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecRulesWhenPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPolicySpecRulesWhenPatch)(nil)).Elem()
}

func (o AuthorizationPolicySpecRulesWhenPatchArrayOutput) ToAuthorizationPolicySpecRulesWhenPatchArrayOutput() AuthorizationPolicySpecRulesWhenPatchArrayOutput {
	return o
}

func (o AuthorizationPolicySpecRulesWhenPatchArrayOutput) ToAuthorizationPolicySpecRulesWhenPatchArrayOutputWithContext(ctx context.Context) AuthorizationPolicySpecRulesWhenPatchArrayOutput {
	return o
}

func (o AuthorizationPolicySpecRulesWhenPatchArrayOutput) Index(i pulumi.IntInput) AuthorizationPolicySpecRulesWhenPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorizationPolicySpecRulesWhenPatch {
		return vs[0].([]AuthorizationPolicySpecRulesWhenPatch)[vs[1].(int)]
	}).(AuthorizationPolicySpecRulesWhenPatchOutput)
}

// Optional.
type AuthorizationPolicySpecSelector struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// AuthorizationPolicySpecSelectorInput is an input type that accepts AuthorizationPolicySpecSelectorArgs and AuthorizationPolicySpecSelectorOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecSelectorInput` via:
//
//	AuthorizationPolicySpecSelectorArgs{...}
type AuthorizationPolicySpecSelectorInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecSelectorOutput() AuthorizationPolicySpecSelectorOutput
	ToAuthorizationPolicySpecSelectorOutputWithContext(context.Context) AuthorizationPolicySpecSelectorOutput
}

// Optional.
type AuthorizationPolicySpecSelectorArgs struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (AuthorizationPolicySpecSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecSelector)(nil)).Elem()
}

func (i AuthorizationPolicySpecSelectorArgs) ToAuthorizationPolicySpecSelectorOutput() AuthorizationPolicySpecSelectorOutput {
	return i.ToAuthorizationPolicySpecSelectorOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecSelectorArgs) ToAuthorizationPolicySpecSelectorOutputWithContext(ctx context.Context) AuthorizationPolicySpecSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecSelectorOutput)
}

func (i AuthorizationPolicySpecSelectorArgs) ToAuthorizationPolicySpecSelectorPtrOutput() AuthorizationPolicySpecSelectorPtrOutput {
	return i.ToAuthorizationPolicySpecSelectorPtrOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecSelectorArgs) ToAuthorizationPolicySpecSelectorPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecSelectorOutput).ToAuthorizationPolicySpecSelectorPtrOutputWithContext(ctx)
}

// AuthorizationPolicySpecSelectorPtrInput is an input type that accepts AuthorizationPolicySpecSelectorArgs, AuthorizationPolicySpecSelectorPtr and AuthorizationPolicySpecSelectorPtrOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecSelectorPtrInput` via:
//
//	        AuthorizationPolicySpecSelectorArgs{...}
//
//	or:
//
//	        nil
type AuthorizationPolicySpecSelectorPtrInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecSelectorPtrOutput() AuthorizationPolicySpecSelectorPtrOutput
	ToAuthorizationPolicySpecSelectorPtrOutputWithContext(context.Context) AuthorizationPolicySpecSelectorPtrOutput
}

type authorizationPolicySpecSelectorPtrType AuthorizationPolicySpecSelectorArgs

func AuthorizationPolicySpecSelectorPtr(v *AuthorizationPolicySpecSelectorArgs) AuthorizationPolicySpecSelectorPtrInput {
	return (*authorizationPolicySpecSelectorPtrType)(v)
}

func (*authorizationPolicySpecSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecSelector)(nil)).Elem()
}

func (i *authorizationPolicySpecSelectorPtrType) ToAuthorizationPolicySpecSelectorPtrOutput() AuthorizationPolicySpecSelectorPtrOutput {
	return i.ToAuthorizationPolicySpecSelectorPtrOutputWithContext(context.Background())
}

func (i *authorizationPolicySpecSelectorPtrType) ToAuthorizationPolicySpecSelectorPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecSelectorPtrOutput)
}

// Optional.
type AuthorizationPolicySpecSelectorOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecSelector)(nil)).Elem()
}

func (o AuthorizationPolicySpecSelectorOutput) ToAuthorizationPolicySpecSelectorOutput() AuthorizationPolicySpecSelectorOutput {
	return o
}

func (o AuthorizationPolicySpecSelectorOutput) ToAuthorizationPolicySpecSelectorOutputWithContext(ctx context.Context) AuthorizationPolicySpecSelectorOutput {
	return o
}

func (o AuthorizationPolicySpecSelectorOutput) ToAuthorizationPolicySpecSelectorPtrOutput() AuthorizationPolicySpecSelectorPtrOutput {
	return o.ToAuthorizationPolicySpecSelectorPtrOutputWithContext(context.Background())
}

func (o AuthorizationPolicySpecSelectorOutput) ToAuthorizationPolicySpecSelectorPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorizationPolicySpecSelector) *AuthorizationPolicySpecSelector {
		return &v
	}).(AuthorizationPolicySpecSelectorPtrOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o AuthorizationPolicySpecSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type AuthorizationPolicySpecSelectorPtrOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecSelector)(nil)).Elem()
}

func (o AuthorizationPolicySpecSelectorPtrOutput) ToAuthorizationPolicySpecSelectorPtrOutput() AuthorizationPolicySpecSelectorPtrOutput {
	return o
}

func (o AuthorizationPolicySpecSelectorPtrOutput) ToAuthorizationPolicySpecSelectorPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecSelectorPtrOutput {
	return o
}

func (o AuthorizationPolicySpecSelectorPtrOutput) Elem() AuthorizationPolicySpecSelectorOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecSelector) AuthorizationPolicySpecSelector {
		if v != nil {
			return *v
		}
		var ret AuthorizationPolicySpecSelector
		return ret
	}).(AuthorizationPolicySpecSelectorOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o AuthorizationPolicySpecSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// Optional.
type AuthorizationPolicySpecSelectorPatch struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// AuthorizationPolicySpecSelectorPatchInput is an input type that accepts AuthorizationPolicySpecSelectorPatchArgs and AuthorizationPolicySpecSelectorPatchOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecSelectorPatchInput` via:
//
//	AuthorizationPolicySpecSelectorPatchArgs{...}
type AuthorizationPolicySpecSelectorPatchInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecSelectorPatchOutput() AuthorizationPolicySpecSelectorPatchOutput
	ToAuthorizationPolicySpecSelectorPatchOutputWithContext(context.Context) AuthorizationPolicySpecSelectorPatchOutput
}

// Optional.
type AuthorizationPolicySpecSelectorPatchArgs struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (AuthorizationPolicySpecSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecSelectorPatch)(nil)).Elem()
}

func (i AuthorizationPolicySpecSelectorPatchArgs) ToAuthorizationPolicySpecSelectorPatchOutput() AuthorizationPolicySpecSelectorPatchOutput {
	return i.ToAuthorizationPolicySpecSelectorPatchOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecSelectorPatchArgs) ToAuthorizationPolicySpecSelectorPatchOutputWithContext(ctx context.Context) AuthorizationPolicySpecSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecSelectorPatchOutput)
}

func (i AuthorizationPolicySpecSelectorPatchArgs) ToAuthorizationPolicySpecSelectorPatchPtrOutput() AuthorizationPolicySpecSelectorPatchPtrOutput {
	return i.ToAuthorizationPolicySpecSelectorPatchPtrOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecSelectorPatchArgs) ToAuthorizationPolicySpecSelectorPatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecSelectorPatchOutput).ToAuthorizationPolicySpecSelectorPatchPtrOutputWithContext(ctx)
}

// AuthorizationPolicySpecSelectorPatchPtrInput is an input type that accepts AuthorizationPolicySpecSelectorPatchArgs, AuthorizationPolicySpecSelectorPatchPtr and AuthorizationPolicySpecSelectorPatchPtrOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecSelectorPatchPtrInput` via:
//
//	        AuthorizationPolicySpecSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type AuthorizationPolicySpecSelectorPatchPtrInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecSelectorPatchPtrOutput() AuthorizationPolicySpecSelectorPatchPtrOutput
	ToAuthorizationPolicySpecSelectorPatchPtrOutputWithContext(context.Context) AuthorizationPolicySpecSelectorPatchPtrOutput
}

type authorizationPolicySpecSelectorPatchPtrType AuthorizationPolicySpecSelectorPatchArgs

func AuthorizationPolicySpecSelectorPatchPtr(v *AuthorizationPolicySpecSelectorPatchArgs) AuthorizationPolicySpecSelectorPatchPtrInput {
	return (*authorizationPolicySpecSelectorPatchPtrType)(v)
}

func (*authorizationPolicySpecSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecSelectorPatch)(nil)).Elem()
}

func (i *authorizationPolicySpecSelectorPatchPtrType) ToAuthorizationPolicySpecSelectorPatchPtrOutput() AuthorizationPolicySpecSelectorPatchPtrOutput {
	return i.ToAuthorizationPolicySpecSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *authorizationPolicySpecSelectorPatchPtrType) ToAuthorizationPolicySpecSelectorPatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecSelectorPatchPtrOutput)
}

// Optional.
type AuthorizationPolicySpecSelectorPatchOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecSelectorPatch)(nil)).Elem()
}

func (o AuthorizationPolicySpecSelectorPatchOutput) ToAuthorizationPolicySpecSelectorPatchOutput() AuthorizationPolicySpecSelectorPatchOutput {
	return o
}

func (o AuthorizationPolicySpecSelectorPatchOutput) ToAuthorizationPolicySpecSelectorPatchOutputWithContext(ctx context.Context) AuthorizationPolicySpecSelectorPatchOutput {
	return o
}

func (o AuthorizationPolicySpecSelectorPatchOutput) ToAuthorizationPolicySpecSelectorPatchPtrOutput() AuthorizationPolicySpecSelectorPatchPtrOutput {
	return o.ToAuthorizationPolicySpecSelectorPatchPtrOutputWithContext(context.Background())
}

func (o AuthorizationPolicySpecSelectorPatchOutput) ToAuthorizationPolicySpecSelectorPatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorizationPolicySpecSelectorPatch) *AuthorizationPolicySpecSelectorPatch {
		return &v
	}).(AuthorizationPolicySpecSelectorPatchPtrOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o AuthorizationPolicySpecSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecSelectorPatch) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type AuthorizationPolicySpecSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecSelectorPatch)(nil)).Elem()
}

func (o AuthorizationPolicySpecSelectorPatchPtrOutput) ToAuthorizationPolicySpecSelectorPatchPtrOutput() AuthorizationPolicySpecSelectorPatchPtrOutput {
	return o
}

func (o AuthorizationPolicySpecSelectorPatchPtrOutput) ToAuthorizationPolicySpecSelectorPatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecSelectorPatchPtrOutput {
	return o
}

func (o AuthorizationPolicySpecSelectorPatchPtrOutput) Elem() AuthorizationPolicySpecSelectorPatchOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecSelectorPatch) AuthorizationPolicySpecSelectorPatch {
		if v != nil {
			return *v
		}
		var ret AuthorizationPolicySpecSelectorPatch
		return ret
	}).(AuthorizationPolicySpecSelectorPatchOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o AuthorizationPolicySpecSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type AuthorizationPolicySpecTargetRef struct {
	// group is the group of the target resource.
	Group *string `pulumi:"group"`
	// kind is kind of the target resource.
	Kind *string `pulumi:"kind"`
	// name is the name of the target resource.
	Name *string `pulumi:"name"`
	// namespace is the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// AuthorizationPolicySpecTargetRefInput is an input type that accepts AuthorizationPolicySpecTargetRefArgs and AuthorizationPolicySpecTargetRefOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecTargetRefInput` via:
//
//	AuthorizationPolicySpecTargetRefArgs{...}
type AuthorizationPolicySpecTargetRefInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecTargetRefOutput() AuthorizationPolicySpecTargetRefOutput
	ToAuthorizationPolicySpecTargetRefOutputWithContext(context.Context) AuthorizationPolicySpecTargetRefOutput
}

type AuthorizationPolicySpecTargetRefArgs struct {
	// group is the group of the target resource.
	Group pulumi.StringPtrInput `pulumi:"group"`
	// kind is kind of the target resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// name is the name of the target resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// namespace is the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (AuthorizationPolicySpecTargetRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecTargetRef)(nil)).Elem()
}

func (i AuthorizationPolicySpecTargetRefArgs) ToAuthorizationPolicySpecTargetRefOutput() AuthorizationPolicySpecTargetRefOutput {
	return i.ToAuthorizationPolicySpecTargetRefOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecTargetRefArgs) ToAuthorizationPolicySpecTargetRefOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecTargetRefOutput)
}

func (i AuthorizationPolicySpecTargetRefArgs) ToAuthorizationPolicySpecTargetRefPtrOutput() AuthorizationPolicySpecTargetRefPtrOutput {
	return i.ToAuthorizationPolicySpecTargetRefPtrOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecTargetRefArgs) ToAuthorizationPolicySpecTargetRefPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecTargetRefOutput).ToAuthorizationPolicySpecTargetRefPtrOutputWithContext(ctx)
}

// AuthorizationPolicySpecTargetRefPtrInput is an input type that accepts AuthorizationPolicySpecTargetRefArgs, AuthorizationPolicySpecTargetRefPtr and AuthorizationPolicySpecTargetRefPtrOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecTargetRefPtrInput` via:
//
//	        AuthorizationPolicySpecTargetRefArgs{...}
//
//	or:
//
//	        nil
type AuthorizationPolicySpecTargetRefPtrInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecTargetRefPtrOutput() AuthorizationPolicySpecTargetRefPtrOutput
	ToAuthorizationPolicySpecTargetRefPtrOutputWithContext(context.Context) AuthorizationPolicySpecTargetRefPtrOutput
}

type authorizationPolicySpecTargetRefPtrType AuthorizationPolicySpecTargetRefArgs

func AuthorizationPolicySpecTargetRefPtr(v *AuthorizationPolicySpecTargetRefArgs) AuthorizationPolicySpecTargetRefPtrInput {
	return (*authorizationPolicySpecTargetRefPtrType)(v)
}

func (*authorizationPolicySpecTargetRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecTargetRef)(nil)).Elem()
}

func (i *authorizationPolicySpecTargetRefPtrType) ToAuthorizationPolicySpecTargetRefPtrOutput() AuthorizationPolicySpecTargetRefPtrOutput {
	return i.ToAuthorizationPolicySpecTargetRefPtrOutputWithContext(context.Background())
}

func (i *authorizationPolicySpecTargetRefPtrType) ToAuthorizationPolicySpecTargetRefPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecTargetRefPtrOutput)
}

type AuthorizationPolicySpecTargetRefOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecTargetRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecTargetRef)(nil)).Elem()
}

func (o AuthorizationPolicySpecTargetRefOutput) ToAuthorizationPolicySpecTargetRefOutput() AuthorizationPolicySpecTargetRefOutput {
	return o
}

func (o AuthorizationPolicySpecTargetRefOutput) ToAuthorizationPolicySpecTargetRefOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetRefOutput {
	return o
}

func (o AuthorizationPolicySpecTargetRefOutput) ToAuthorizationPolicySpecTargetRefPtrOutput() AuthorizationPolicySpecTargetRefPtrOutput {
	return o.ToAuthorizationPolicySpecTargetRefPtrOutputWithContext(context.Background())
}

func (o AuthorizationPolicySpecTargetRefOutput) ToAuthorizationPolicySpecTargetRefPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorizationPolicySpecTargetRef) *AuthorizationPolicySpecTargetRef {
		return &v
	}).(AuthorizationPolicySpecTargetRefPtrOutput)
}

// group is the group of the target resource.
func (o AuthorizationPolicySpecTargetRefOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTargetRef) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// kind is kind of the target resource.
func (o AuthorizationPolicySpecTargetRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTargetRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// name is the name of the target resource.
func (o AuthorizationPolicySpecTargetRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTargetRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// namespace is the namespace of the referent.
func (o AuthorizationPolicySpecTargetRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTargetRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type AuthorizationPolicySpecTargetRefPtrOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecTargetRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecTargetRef)(nil)).Elem()
}

func (o AuthorizationPolicySpecTargetRefPtrOutput) ToAuthorizationPolicySpecTargetRefPtrOutput() AuthorizationPolicySpecTargetRefPtrOutput {
	return o
}

func (o AuthorizationPolicySpecTargetRefPtrOutput) ToAuthorizationPolicySpecTargetRefPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetRefPtrOutput {
	return o
}

func (o AuthorizationPolicySpecTargetRefPtrOutput) Elem() AuthorizationPolicySpecTargetRefOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecTargetRef) AuthorizationPolicySpecTargetRef {
		if v != nil {
			return *v
		}
		var ret AuthorizationPolicySpecTargetRef
		return ret
	}).(AuthorizationPolicySpecTargetRefOutput)
}

// group is the group of the target resource.
func (o AuthorizationPolicySpecTargetRefPtrOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecTargetRef) *string {
		if v == nil {
			return nil
		}
		return v.Group
	}).(pulumi.StringPtrOutput)
}

// kind is kind of the target resource.
func (o AuthorizationPolicySpecTargetRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecTargetRef) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// name is the name of the target resource.
func (o AuthorizationPolicySpecTargetRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecTargetRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// namespace is the namespace of the referent.
func (o AuthorizationPolicySpecTargetRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecTargetRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type AuthorizationPolicySpecTargetRefPatch struct {
	// group is the group of the target resource.
	Group *string `pulumi:"group"`
	// kind is kind of the target resource.
	Kind *string `pulumi:"kind"`
	// name is the name of the target resource.
	Name *string `pulumi:"name"`
	// namespace is the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// AuthorizationPolicySpecTargetRefPatchInput is an input type that accepts AuthorizationPolicySpecTargetRefPatchArgs and AuthorizationPolicySpecTargetRefPatchOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecTargetRefPatchInput` via:
//
//	AuthorizationPolicySpecTargetRefPatchArgs{...}
type AuthorizationPolicySpecTargetRefPatchInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecTargetRefPatchOutput() AuthorizationPolicySpecTargetRefPatchOutput
	ToAuthorizationPolicySpecTargetRefPatchOutputWithContext(context.Context) AuthorizationPolicySpecTargetRefPatchOutput
}

type AuthorizationPolicySpecTargetRefPatchArgs struct {
	// group is the group of the target resource.
	Group pulumi.StringPtrInput `pulumi:"group"`
	// kind is kind of the target resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// name is the name of the target resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// namespace is the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (AuthorizationPolicySpecTargetRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecTargetRefPatch)(nil)).Elem()
}

func (i AuthorizationPolicySpecTargetRefPatchArgs) ToAuthorizationPolicySpecTargetRefPatchOutput() AuthorizationPolicySpecTargetRefPatchOutput {
	return i.ToAuthorizationPolicySpecTargetRefPatchOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecTargetRefPatchArgs) ToAuthorizationPolicySpecTargetRefPatchOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecTargetRefPatchOutput)
}

func (i AuthorizationPolicySpecTargetRefPatchArgs) ToAuthorizationPolicySpecTargetRefPatchPtrOutput() AuthorizationPolicySpecTargetRefPatchPtrOutput {
	return i.ToAuthorizationPolicySpecTargetRefPatchPtrOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecTargetRefPatchArgs) ToAuthorizationPolicySpecTargetRefPatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecTargetRefPatchOutput).ToAuthorizationPolicySpecTargetRefPatchPtrOutputWithContext(ctx)
}

// AuthorizationPolicySpecTargetRefPatchPtrInput is an input type that accepts AuthorizationPolicySpecTargetRefPatchArgs, AuthorizationPolicySpecTargetRefPatchPtr and AuthorizationPolicySpecTargetRefPatchPtrOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecTargetRefPatchPtrInput` via:
//
//	        AuthorizationPolicySpecTargetRefPatchArgs{...}
//
//	or:
//
//	        nil
type AuthorizationPolicySpecTargetRefPatchPtrInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecTargetRefPatchPtrOutput() AuthorizationPolicySpecTargetRefPatchPtrOutput
	ToAuthorizationPolicySpecTargetRefPatchPtrOutputWithContext(context.Context) AuthorizationPolicySpecTargetRefPatchPtrOutput
}

type authorizationPolicySpecTargetRefPatchPtrType AuthorizationPolicySpecTargetRefPatchArgs

func AuthorizationPolicySpecTargetRefPatchPtr(v *AuthorizationPolicySpecTargetRefPatchArgs) AuthorizationPolicySpecTargetRefPatchPtrInput {
	return (*authorizationPolicySpecTargetRefPatchPtrType)(v)
}

func (*authorizationPolicySpecTargetRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecTargetRefPatch)(nil)).Elem()
}

func (i *authorizationPolicySpecTargetRefPatchPtrType) ToAuthorizationPolicySpecTargetRefPatchPtrOutput() AuthorizationPolicySpecTargetRefPatchPtrOutput {
	return i.ToAuthorizationPolicySpecTargetRefPatchPtrOutputWithContext(context.Background())
}

func (i *authorizationPolicySpecTargetRefPatchPtrType) ToAuthorizationPolicySpecTargetRefPatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecTargetRefPatchPtrOutput)
}

type AuthorizationPolicySpecTargetRefPatchOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecTargetRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecTargetRefPatch)(nil)).Elem()
}

func (o AuthorizationPolicySpecTargetRefPatchOutput) ToAuthorizationPolicySpecTargetRefPatchOutput() AuthorizationPolicySpecTargetRefPatchOutput {
	return o
}

func (o AuthorizationPolicySpecTargetRefPatchOutput) ToAuthorizationPolicySpecTargetRefPatchOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetRefPatchOutput {
	return o
}

func (o AuthorizationPolicySpecTargetRefPatchOutput) ToAuthorizationPolicySpecTargetRefPatchPtrOutput() AuthorizationPolicySpecTargetRefPatchPtrOutput {
	return o.ToAuthorizationPolicySpecTargetRefPatchPtrOutputWithContext(context.Background())
}

func (o AuthorizationPolicySpecTargetRefPatchOutput) ToAuthorizationPolicySpecTargetRefPatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorizationPolicySpecTargetRefPatch) *AuthorizationPolicySpecTargetRefPatch {
		return &v
	}).(AuthorizationPolicySpecTargetRefPatchPtrOutput)
}

// group is the group of the target resource.
func (o AuthorizationPolicySpecTargetRefPatchOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTargetRefPatch) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// kind is kind of the target resource.
func (o AuthorizationPolicySpecTargetRefPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTargetRefPatch) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// name is the name of the target resource.
func (o AuthorizationPolicySpecTargetRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTargetRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// namespace is the namespace of the referent.
func (o AuthorizationPolicySpecTargetRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTargetRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type AuthorizationPolicySpecTargetRefPatchPtrOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecTargetRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecTargetRefPatch)(nil)).Elem()
}

func (o AuthorizationPolicySpecTargetRefPatchPtrOutput) ToAuthorizationPolicySpecTargetRefPatchPtrOutput() AuthorizationPolicySpecTargetRefPatchPtrOutput {
	return o
}

func (o AuthorizationPolicySpecTargetRefPatchPtrOutput) ToAuthorizationPolicySpecTargetRefPatchPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetRefPatchPtrOutput {
	return o
}

func (o AuthorizationPolicySpecTargetRefPatchPtrOutput) Elem() AuthorizationPolicySpecTargetRefPatchOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecTargetRefPatch) AuthorizationPolicySpecTargetRefPatch {
		if v != nil {
			return *v
		}
		var ret AuthorizationPolicySpecTargetRefPatch
		return ret
	}).(AuthorizationPolicySpecTargetRefPatchOutput)
}

// group is the group of the target resource.
func (o AuthorizationPolicySpecTargetRefPatchPtrOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecTargetRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Group
	}).(pulumi.StringPtrOutput)
}

// kind is kind of the target resource.
func (o AuthorizationPolicySpecTargetRefPatchPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecTargetRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// name is the name of the target resource.
func (o AuthorizationPolicySpecTargetRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecTargetRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// namespace is the namespace of the referent.
func (o AuthorizationPolicySpecTargetRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecTargetRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type AuthorizationPolicySpecTargetRefs struct {
	// group is the group of the target resource.
	Group *string `pulumi:"group"`
	// kind is kind of the target resource.
	Kind *string `pulumi:"kind"`
	// name is the name of the target resource.
	Name *string `pulumi:"name"`
	// namespace is the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// AuthorizationPolicySpecTargetRefsInput is an input type that accepts AuthorizationPolicySpecTargetRefsArgs and AuthorizationPolicySpecTargetRefsOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecTargetRefsInput` via:
//
//	AuthorizationPolicySpecTargetRefsArgs{...}
type AuthorizationPolicySpecTargetRefsInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecTargetRefsOutput() AuthorizationPolicySpecTargetRefsOutput
	ToAuthorizationPolicySpecTargetRefsOutputWithContext(context.Context) AuthorizationPolicySpecTargetRefsOutput
}

type AuthorizationPolicySpecTargetRefsArgs struct {
	// group is the group of the target resource.
	Group pulumi.StringPtrInput `pulumi:"group"`
	// kind is kind of the target resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// name is the name of the target resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// namespace is the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (AuthorizationPolicySpecTargetRefsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecTargetRefs)(nil)).Elem()
}

func (i AuthorizationPolicySpecTargetRefsArgs) ToAuthorizationPolicySpecTargetRefsOutput() AuthorizationPolicySpecTargetRefsOutput {
	return i.ToAuthorizationPolicySpecTargetRefsOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecTargetRefsArgs) ToAuthorizationPolicySpecTargetRefsOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetRefsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecTargetRefsOutput)
}

// AuthorizationPolicySpecTargetRefsArrayInput is an input type that accepts AuthorizationPolicySpecTargetRefsArray and AuthorizationPolicySpecTargetRefsArrayOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecTargetRefsArrayInput` via:
//
//	AuthorizationPolicySpecTargetRefsArray{ AuthorizationPolicySpecTargetRefsArgs{...} }
type AuthorizationPolicySpecTargetRefsArrayInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecTargetRefsArrayOutput() AuthorizationPolicySpecTargetRefsArrayOutput
	ToAuthorizationPolicySpecTargetRefsArrayOutputWithContext(context.Context) AuthorizationPolicySpecTargetRefsArrayOutput
}

type AuthorizationPolicySpecTargetRefsArray []AuthorizationPolicySpecTargetRefsInput

func (AuthorizationPolicySpecTargetRefsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPolicySpecTargetRefs)(nil)).Elem()
}

func (i AuthorizationPolicySpecTargetRefsArray) ToAuthorizationPolicySpecTargetRefsArrayOutput() AuthorizationPolicySpecTargetRefsArrayOutput {
	return i.ToAuthorizationPolicySpecTargetRefsArrayOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecTargetRefsArray) ToAuthorizationPolicySpecTargetRefsArrayOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetRefsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecTargetRefsArrayOutput)
}

type AuthorizationPolicySpecTargetRefsOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecTargetRefsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecTargetRefs)(nil)).Elem()
}

func (o AuthorizationPolicySpecTargetRefsOutput) ToAuthorizationPolicySpecTargetRefsOutput() AuthorizationPolicySpecTargetRefsOutput {
	return o
}

func (o AuthorizationPolicySpecTargetRefsOutput) ToAuthorizationPolicySpecTargetRefsOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetRefsOutput {
	return o
}

// group is the group of the target resource.
func (o AuthorizationPolicySpecTargetRefsOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTargetRefs) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// kind is kind of the target resource.
func (o AuthorizationPolicySpecTargetRefsOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTargetRefs) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// name is the name of the target resource.
func (o AuthorizationPolicySpecTargetRefsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTargetRefs) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// namespace is the namespace of the referent.
func (o AuthorizationPolicySpecTargetRefsOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTargetRefs) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type AuthorizationPolicySpecTargetRefsArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecTargetRefsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPolicySpecTargetRefs)(nil)).Elem()
}

func (o AuthorizationPolicySpecTargetRefsArrayOutput) ToAuthorizationPolicySpecTargetRefsArrayOutput() AuthorizationPolicySpecTargetRefsArrayOutput {
	return o
}

func (o AuthorizationPolicySpecTargetRefsArrayOutput) ToAuthorizationPolicySpecTargetRefsArrayOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetRefsArrayOutput {
	return o
}

func (o AuthorizationPolicySpecTargetRefsArrayOutput) Index(i pulumi.IntInput) AuthorizationPolicySpecTargetRefsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorizationPolicySpecTargetRefs {
		return vs[0].([]AuthorizationPolicySpecTargetRefs)[vs[1].(int)]
	}).(AuthorizationPolicySpecTargetRefsOutput)
}

type AuthorizationPolicySpecTargetRefsPatch struct {
	// group is the group of the target resource.
	Group *string `pulumi:"group"`
	// kind is kind of the target resource.
	Kind *string `pulumi:"kind"`
	// name is the name of the target resource.
	Name *string `pulumi:"name"`
	// namespace is the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// AuthorizationPolicySpecTargetRefsPatchInput is an input type that accepts AuthorizationPolicySpecTargetRefsPatchArgs and AuthorizationPolicySpecTargetRefsPatchOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecTargetRefsPatchInput` via:
//
//	AuthorizationPolicySpecTargetRefsPatchArgs{...}
type AuthorizationPolicySpecTargetRefsPatchInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecTargetRefsPatchOutput() AuthorizationPolicySpecTargetRefsPatchOutput
	ToAuthorizationPolicySpecTargetRefsPatchOutputWithContext(context.Context) AuthorizationPolicySpecTargetRefsPatchOutput
}

type AuthorizationPolicySpecTargetRefsPatchArgs struct {
	// group is the group of the target resource.
	Group pulumi.StringPtrInput `pulumi:"group"`
	// kind is kind of the target resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// name is the name of the target resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// namespace is the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (AuthorizationPolicySpecTargetRefsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecTargetRefsPatch)(nil)).Elem()
}

func (i AuthorizationPolicySpecTargetRefsPatchArgs) ToAuthorizationPolicySpecTargetRefsPatchOutput() AuthorizationPolicySpecTargetRefsPatchOutput {
	return i.ToAuthorizationPolicySpecTargetRefsPatchOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecTargetRefsPatchArgs) ToAuthorizationPolicySpecTargetRefsPatchOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetRefsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecTargetRefsPatchOutput)
}

// AuthorizationPolicySpecTargetRefsPatchArrayInput is an input type that accepts AuthorizationPolicySpecTargetRefsPatchArray and AuthorizationPolicySpecTargetRefsPatchArrayOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecTargetRefsPatchArrayInput` via:
//
//	AuthorizationPolicySpecTargetRefsPatchArray{ AuthorizationPolicySpecTargetRefsPatchArgs{...} }
type AuthorizationPolicySpecTargetRefsPatchArrayInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecTargetRefsPatchArrayOutput() AuthorizationPolicySpecTargetRefsPatchArrayOutput
	ToAuthorizationPolicySpecTargetRefsPatchArrayOutputWithContext(context.Context) AuthorizationPolicySpecTargetRefsPatchArrayOutput
}

type AuthorizationPolicySpecTargetRefsPatchArray []AuthorizationPolicySpecTargetRefsPatchInput

func (AuthorizationPolicySpecTargetRefsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPolicySpecTargetRefsPatch)(nil)).Elem()
}

func (i AuthorizationPolicySpecTargetRefsPatchArray) ToAuthorizationPolicySpecTargetRefsPatchArrayOutput() AuthorizationPolicySpecTargetRefsPatchArrayOutput {
	return i.ToAuthorizationPolicySpecTargetRefsPatchArrayOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecTargetRefsPatchArray) ToAuthorizationPolicySpecTargetRefsPatchArrayOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetRefsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecTargetRefsPatchArrayOutput)
}

type AuthorizationPolicySpecTargetRefsPatchOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecTargetRefsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecTargetRefsPatch)(nil)).Elem()
}

func (o AuthorizationPolicySpecTargetRefsPatchOutput) ToAuthorizationPolicySpecTargetRefsPatchOutput() AuthorizationPolicySpecTargetRefsPatchOutput {
	return o
}

func (o AuthorizationPolicySpecTargetRefsPatchOutput) ToAuthorizationPolicySpecTargetRefsPatchOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetRefsPatchOutput {
	return o
}

// group is the group of the target resource.
func (o AuthorizationPolicySpecTargetRefsPatchOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTargetRefsPatch) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// kind is kind of the target resource.
func (o AuthorizationPolicySpecTargetRefsPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTargetRefsPatch) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// name is the name of the target resource.
func (o AuthorizationPolicySpecTargetRefsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTargetRefsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// namespace is the namespace of the referent.
func (o AuthorizationPolicySpecTargetRefsPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTargetRefsPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type AuthorizationPolicySpecTargetRefsPatchArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecTargetRefsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationPolicySpecTargetRefsPatch)(nil)).Elem()
}

func (o AuthorizationPolicySpecTargetRefsPatchArrayOutput) ToAuthorizationPolicySpecTargetRefsPatchArrayOutput() AuthorizationPolicySpecTargetRefsPatchArrayOutput {
	return o
}

func (o AuthorizationPolicySpecTargetRefsPatchArrayOutput) ToAuthorizationPolicySpecTargetRefsPatchArrayOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetRefsPatchArrayOutput {
	return o
}

func (o AuthorizationPolicySpecTargetRefsPatchArrayOutput) Index(i pulumi.IntInput) AuthorizationPolicySpecTargetRefsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorizationPolicySpecTargetRefsPatch {
		return vs[0].([]AuthorizationPolicySpecTargetRefsPatch)[vs[1].(int)]
	}).(AuthorizationPolicySpecTargetRefsPatchOutput)
}

type PeerAuthenticationType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta      `pulumi:"metadata"`
	Spec     *PeerAuthenticationSpec `pulumi:"spec"`
	Status   map[string]interface{}  `pulumi:"status"`
}

// PeerAuthenticationTypeInput is an input type that accepts PeerAuthenticationTypeArgs and PeerAuthenticationTypeOutput values.
// You can construct a concrete instance of `PeerAuthenticationTypeInput` via:
//
//	PeerAuthenticationTypeArgs{...}
type PeerAuthenticationTypeInput interface {
	pulumi.Input

	ToPeerAuthenticationTypeOutput() PeerAuthenticationTypeOutput
	ToPeerAuthenticationTypeOutputWithContext(context.Context) PeerAuthenticationTypeOutput
}

type PeerAuthenticationTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput      `pulumi:"metadata"`
	Spec     PeerAuthenticationSpecPtrInput `pulumi:"spec"`
	Status   pulumi.MapInput                `pulumi:"status"`
}

func (PeerAuthenticationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationType)(nil)).Elem()
}

func (i PeerAuthenticationTypeArgs) ToPeerAuthenticationTypeOutput() PeerAuthenticationTypeOutput {
	return i.ToPeerAuthenticationTypeOutputWithContext(context.Background())
}

func (i PeerAuthenticationTypeArgs) ToPeerAuthenticationTypeOutputWithContext(ctx context.Context) PeerAuthenticationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationTypeOutput)
}

// PeerAuthenticationTypeArrayInput is an input type that accepts PeerAuthenticationTypeArray and PeerAuthenticationTypeArrayOutput values.
// You can construct a concrete instance of `PeerAuthenticationTypeArrayInput` via:
//
//	PeerAuthenticationTypeArray{ PeerAuthenticationTypeArgs{...} }
type PeerAuthenticationTypeArrayInput interface {
	pulumi.Input

	ToPeerAuthenticationTypeArrayOutput() PeerAuthenticationTypeArrayOutput
	ToPeerAuthenticationTypeArrayOutputWithContext(context.Context) PeerAuthenticationTypeArrayOutput
}

type PeerAuthenticationTypeArray []PeerAuthenticationTypeInput

func (PeerAuthenticationTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PeerAuthenticationType)(nil)).Elem()
}

func (i PeerAuthenticationTypeArray) ToPeerAuthenticationTypeArrayOutput() PeerAuthenticationTypeArrayOutput {
	return i.ToPeerAuthenticationTypeArrayOutputWithContext(context.Background())
}

func (i PeerAuthenticationTypeArray) ToPeerAuthenticationTypeArrayOutputWithContext(ctx context.Context) PeerAuthenticationTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationTypeArrayOutput)
}

type PeerAuthenticationTypeOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationType)(nil)).Elem()
}

func (o PeerAuthenticationTypeOutput) ToPeerAuthenticationTypeOutput() PeerAuthenticationTypeOutput {
	return o
}

func (o PeerAuthenticationTypeOutput) ToPeerAuthenticationTypeOutputWithContext(ctx context.Context) PeerAuthenticationTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PeerAuthenticationTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PeerAuthenticationTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PeerAuthenticationTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o PeerAuthenticationTypeOutput) Spec() PeerAuthenticationSpecPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationType) *PeerAuthenticationSpec { return v.Spec }).(PeerAuthenticationSpecPtrOutput)
}

func (o PeerAuthenticationTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v PeerAuthenticationType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

type PeerAuthenticationTypeArrayOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PeerAuthenticationType)(nil)).Elem()
}

func (o PeerAuthenticationTypeArrayOutput) ToPeerAuthenticationTypeArrayOutput() PeerAuthenticationTypeArrayOutput {
	return o
}

func (o PeerAuthenticationTypeArrayOutput) ToPeerAuthenticationTypeArrayOutputWithContext(ctx context.Context) PeerAuthenticationTypeArrayOutput {
	return o
}

func (o PeerAuthenticationTypeArrayOutput) Index(i pulumi.IntInput) PeerAuthenticationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PeerAuthenticationType {
		return vs[0].([]PeerAuthenticationType)[vs[1].(int)]
	}).(PeerAuthenticationTypeOutput)
}

// PeerAuthenticationList is a list of PeerAuthentication
type PeerAuthenticationListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of peerauthentications. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []PeerAuthenticationType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// PeerAuthenticationListTypeInput is an input type that accepts PeerAuthenticationListTypeArgs and PeerAuthenticationListTypeOutput values.
// You can construct a concrete instance of `PeerAuthenticationListTypeInput` via:
//
//	PeerAuthenticationListTypeArgs{...}
type PeerAuthenticationListTypeInput interface {
	pulumi.Input

	ToPeerAuthenticationListTypeOutput() PeerAuthenticationListTypeOutput
	ToPeerAuthenticationListTypeOutputWithContext(context.Context) PeerAuthenticationListTypeOutput
}

// PeerAuthenticationList is a list of PeerAuthentication
type PeerAuthenticationListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of peerauthentications. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PeerAuthenticationTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (PeerAuthenticationListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationListType)(nil)).Elem()
}

func (i PeerAuthenticationListTypeArgs) ToPeerAuthenticationListTypeOutput() PeerAuthenticationListTypeOutput {
	return i.ToPeerAuthenticationListTypeOutputWithContext(context.Background())
}

func (i PeerAuthenticationListTypeArgs) ToPeerAuthenticationListTypeOutputWithContext(ctx context.Context) PeerAuthenticationListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationListTypeOutput)
}

// PeerAuthenticationList is a list of PeerAuthentication
type PeerAuthenticationListTypeOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationListType)(nil)).Elem()
}

func (o PeerAuthenticationListTypeOutput) ToPeerAuthenticationListTypeOutput() PeerAuthenticationListTypeOutput {
	return o
}

func (o PeerAuthenticationListTypeOutput) ToPeerAuthenticationListTypeOutputWithContext(ctx context.Context) PeerAuthenticationListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PeerAuthenticationListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of peerauthentications. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o PeerAuthenticationListTypeOutput) Items() PeerAuthenticationTypeArrayOutput {
	return o.ApplyT(func(v PeerAuthenticationListType) []PeerAuthenticationType { return v.Items }).(PeerAuthenticationTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PeerAuthenticationListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PeerAuthenticationListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

type PeerAuthenticationPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch      `pulumi:"metadata"`
	Spec     *PeerAuthenticationSpecPatch `pulumi:"spec"`
	Status   map[string]interface{}       `pulumi:"status"`
}

// PeerAuthenticationPatchTypeInput is an input type that accepts PeerAuthenticationPatchTypeArgs and PeerAuthenticationPatchTypeOutput values.
// You can construct a concrete instance of `PeerAuthenticationPatchTypeInput` via:
//
//	PeerAuthenticationPatchTypeArgs{...}
type PeerAuthenticationPatchTypeInput interface {
	pulumi.Input

	ToPeerAuthenticationPatchTypeOutput() PeerAuthenticationPatchTypeOutput
	ToPeerAuthenticationPatchTypeOutputWithContext(context.Context) PeerAuthenticationPatchTypeOutput
}

type PeerAuthenticationPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput      `pulumi:"metadata"`
	Spec     PeerAuthenticationSpecPatchPtrInput `pulumi:"spec"`
	Status   pulumi.MapInput                     `pulumi:"status"`
}

func (PeerAuthenticationPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationPatchType)(nil)).Elem()
}

func (i PeerAuthenticationPatchTypeArgs) ToPeerAuthenticationPatchTypeOutput() PeerAuthenticationPatchTypeOutput {
	return i.ToPeerAuthenticationPatchTypeOutputWithContext(context.Background())
}

func (i PeerAuthenticationPatchTypeArgs) ToPeerAuthenticationPatchTypeOutputWithContext(ctx context.Context) PeerAuthenticationPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationPatchTypeOutput)
}

type PeerAuthenticationPatchTypeOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationPatchType)(nil)).Elem()
}

func (o PeerAuthenticationPatchTypeOutput) ToPeerAuthenticationPatchTypeOutput() PeerAuthenticationPatchTypeOutput {
	return o
}

func (o PeerAuthenticationPatchTypeOutput) ToPeerAuthenticationPatchTypeOutputWithContext(ctx context.Context) PeerAuthenticationPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PeerAuthenticationPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PeerAuthenticationPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PeerAuthenticationPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o PeerAuthenticationPatchTypeOutput) Spec() PeerAuthenticationSpecPatchPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationPatchType) *PeerAuthenticationSpecPatch { return v.Spec }).(PeerAuthenticationSpecPatchPtrOutput)
}

func (o PeerAuthenticationPatchTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v PeerAuthenticationPatchType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

// Peer authentication configuration for workloads. See more details at: https://istio.io/docs/reference/config/security/peer_authentication.html
type PeerAuthenticationSpec struct {
	Mtls *PeerAuthenticationSpecMtls `pulumi:"mtls"`
	// Port specific mutual TLS settings.
	PortLevelMtls map[string]map[string]string    `pulumi:"portLevelMtls"`
	Selector      *PeerAuthenticationSpecSelector `pulumi:"selector"`
}

// PeerAuthenticationSpecInput is an input type that accepts PeerAuthenticationSpecArgs and PeerAuthenticationSpecOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecInput` via:
//
//	PeerAuthenticationSpecArgs{...}
type PeerAuthenticationSpecInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecOutput() PeerAuthenticationSpecOutput
	ToPeerAuthenticationSpecOutputWithContext(context.Context) PeerAuthenticationSpecOutput
}

// Peer authentication configuration for workloads. See more details at: https://istio.io/docs/reference/config/security/peer_authentication.html
type PeerAuthenticationSpecArgs struct {
	Mtls PeerAuthenticationSpecMtlsPtrInput `pulumi:"mtls"`
	// Port specific mutual TLS settings.
	PortLevelMtls pulumi.StringMapMapInput               `pulumi:"portLevelMtls"`
	Selector      PeerAuthenticationSpecSelectorPtrInput `pulumi:"selector"`
}

func (PeerAuthenticationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpec)(nil)).Elem()
}

func (i PeerAuthenticationSpecArgs) ToPeerAuthenticationSpecOutput() PeerAuthenticationSpecOutput {
	return i.ToPeerAuthenticationSpecOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecArgs) ToPeerAuthenticationSpecOutputWithContext(ctx context.Context) PeerAuthenticationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecOutput)
}

func (i PeerAuthenticationSpecArgs) ToPeerAuthenticationSpecPtrOutput() PeerAuthenticationSpecPtrOutput {
	return i.ToPeerAuthenticationSpecPtrOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecArgs) ToPeerAuthenticationSpecPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecOutput).ToPeerAuthenticationSpecPtrOutputWithContext(ctx)
}

// PeerAuthenticationSpecPtrInput is an input type that accepts PeerAuthenticationSpecArgs, PeerAuthenticationSpecPtr and PeerAuthenticationSpecPtrOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecPtrInput` via:
//
//	        PeerAuthenticationSpecArgs{...}
//
//	or:
//
//	        nil
type PeerAuthenticationSpecPtrInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecPtrOutput() PeerAuthenticationSpecPtrOutput
	ToPeerAuthenticationSpecPtrOutputWithContext(context.Context) PeerAuthenticationSpecPtrOutput
}

type peerAuthenticationSpecPtrType PeerAuthenticationSpecArgs

func PeerAuthenticationSpecPtr(v *PeerAuthenticationSpecArgs) PeerAuthenticationSpecPtrInput {
	return (*peerAuthenticationSpecPtrType)(v)
}

func (*peerAuthenticationSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpec)(nil)).Elem()
}

func (i *peerAuthenticationSpecPtrType) ToPeerAuthenticationSpecPtrOutput() PeerAuthenticationSpecPtrOutput {
	return i.ToPeerAuthenticationSpecPtrOutputWithContext(context.Background())
}

func (i *peerAuthenticationSpecPtrType) ToPeerAuthenticationSpecPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecPtrOutput)
}

// Peer authentication configuration for workloads. See more details at: https://istio.io/docs/reference/config/security/peer_authentication.html
type PeerAuthenticationSpecOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpec)(nil)).Elem()
}

func (o PeerAuthenticationSpecOutput) ToPeerAuthenticationSpecOutput() PeerAuthenticationSpecOutput {
	return o
}

func (o PeerAuthenticationSpecOutput) ToPeerAuthenticationSpecOutputWithContext(ctx context.Context) PeerAuthenticationSpecOutput {
	return o
}

func (o PeerAuthenticationSpecOutput) ToPeerAuthenticationSpecPtrOutput() PeerAuthenticationSpecPtrOutput {
	return o.ToPeerAuthenticationSpecPtrOutputWithContext(context.Background())
}

func (o PeerAuthenticationSpecOutput) ToPeerAuthenticationSpecPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeerAuthenticationSpec) *PeerAuthenticationSpec {
		return &v
	}).(PeerAuthenticationSpecPtrOutput)
}

func (o PeerAuthenticationSpecOutput) Mtls() PeerAuthenticationSpecMtlsPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationSpec) *PeerAuthenticationSpecMtls { return v.Mtls }).(PeerAuthenticationSpecMtlsPtrOutput)
}

// Port specific mutual TLS settings.
func (o PeerAuthenticationSpecOutput) PortLevelMtls() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v PeerAuthenticationSpec) map[string]map[string]string { return v.PortLevelMtls }).(pulumi.StringMapMapOutput)
}

func (o PeerAuthenticationSpecOutput) Selector() PeerAuthenticationSpecSelectorPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationSpec) *PeerAuthenticationSpecSelector { return v.Selector }).(PeerAuthenticationSpecSelectorPtrOutput)
}

type PeerAuthenticationSpecPtrOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpec)(nil)).Elem()
}

func (o PeerAuthenticationSpecPtrOutput) ToPeerAuthenticationSpecPtrOutput() PeerAuthenticationSpecPtrOutput {
	return o
}

func (o PeerAuthenticationSpecPtrOutput) ToPeerAuthenticationSpecPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecPtrOutput {
	return o
}

func (o PeerAuthenticationSpecPtrOutput) Elem() PeerAuthenticationSpecOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpec) PeerAuthenticationSpec {
		if v != nil {
			return *v
		}
		var ret PeerAuthenticationSpec
		return ret
	}).(PeerAuthenticationSpecOutput)
}

func (o PeerAuthenticationSpecPtrOutput) Mtls() PeerAuthenticationSpecMtlsPtrOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpec) *PeerAuthenticationSpecMtls {
		if v == nil {
			return nil
		}
		return v.Mtls
	}).(PeerAuthenticationSpecMtlsPtrOutput)
}

// Port specific mutual TLS settings.
func (o PeerAuthenticationSpecPtrOutput) PortLevelMtls() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpec) map[string]map[string]string {
		if v == nil {
			return nil
		}
		return v.PortLevelMtls
	}).(pulumi.StringMapMapOutput)
}

func (o PeerAuthenticationSpecPtrOutput) Selector() PeerAuthenticationSpecSelectorPtrOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpec) *PeerAuthenticationSpecSelector {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(PeerAuthenticationSpecSelectorPtrOutput)
}

// Mutual TLS settings for workload.
type PeerAuthenticationSpecMtls struct {
	// Defines the mTLS mode used for peer authentication.
	//
	// Valid Options: DISABLE, PERMISSIVE, STRICT
	Mode *string `pulumi:"mode"`
}

// PeerAuthenticationSpecMtlsInput is an input type that accepts PeerAuthenticationSpecMtlsArgs and PeerAuthenticationSpecMtlsOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecMtlsInput` via:
//
//	PeerAuthenticationSpecMtlsArgs{...}
type PeerAuthenticationSpecMtlsInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecMtlsOutput() PeerAuthenticationSpecMtlsOutput
	ToPeerAuthenticationSpecMtlsOutputWithContext(context.Context) PeerAuthenticationSpecMtlsOutput
}

// Mutual TLS settings for workload.
type PeerAuthenticationSpecMtlsArgs struct {
	// Defines the mTLS mode used for peer authentication.
	//
	// Valid Options: DISABLE, PERMISSIVE, STRICT
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (PeerAuthenticationSpecMtlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpecMtls)(nil)).Elem()
}

func (i PeerAuthenticationSpecMtlsArgs) ToPeerAuthenticationSpecMtlsOutput() PeerAuthenticationSpecMtlsOutput {
	return i.ToPeerAuthenticationSpecMtlsOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecMtlsArgs) ToPeerAuthenticationSpecMtlsOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecMtlsOutput)
}

func (i PeerAuthenticationSpecMtlsArgs) ToPeerAuthenticationSpecMtlsPtrOutput() PeerAuthenticationSpecMtlsPtrOutput {
	return i.ToPeerAuthenticationSpecMtlsPtrOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecMtlsArgs) ToPeerAuthenticationSpecMtlsPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecMtlsOutput).ToPeerAuthenticationSpecMtlsPtrOutputWithContext(ctx)
}

// PeerAuthenticationSpecMtlsPtrInput is an input type that accepts PeerAuthenticationSpecMtlsArgs, PeerAuthenticationSpecMtlsPtr and PeerAuthenticationSpecMtlsPtrOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecMtlsPtrInput` via:
//
//	        PeerAuthenticationSpecMtlsArgs{...}
//
//	or:
//
//	        nil
type PeerAuthenticationSpecMtlsPtrInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecMtlsPtrOutput() PeerAuthenticationSpecMtlsPtrOutput
	ToPeerAuthenticationSpecMtlsPtrOutputWithContext(context.Context) PeerAuthenticationSpecMtlsPtrOutput
}

type peerAuthenticationSpecMtlsPtrType PeerAuthenticationSpecMtlsArgs

func PeerAuthenticationSpecMtlsPtr(v *PeerAuthenticationSpecMtlsArgs) PeerAuthenticationSpecMtlsPtrInput {
	return (*peerAuthenticationSpecMtlsPtrType)(v)
}

func (*peerAuthenticationSpecMtlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpecMtls)(nil)).Elem()
}

func (i *peerAuthenticationSpecMtlsPtrType) ToPeerAuthenticationSpecMtlsPtrOutput() PeerAuthenticationSpecMtlsPtrOutput {
	return i.ToPeerAuthenticationSpecMtlsPtrOutputWithContext(context.Background())
}

func (i *peerAuthenticationSpecMtlsPtrType) ToPeerAuthenticationSpecMtlsPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecMtlsPtrOutput)
}

// Mutual TLS settings for workload.
type PeerAuthenticationSpecMtlsOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecMtlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpecMtls)(nil)).Elem()
}

func (o PeerAuthenticationSpecMtlsOutput) ToPeerAuthenticationSpecMtlsOutput() PeerAuthenticationSpecMtlsOutput {
	return o
}

func (o PeerAuthenticationSpecMtlsOutput) ToPeerAuthenticationSpecMtlsOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsOutput {
	return o
}

func (o PeerAuthenticationSpecMtlsOutput) ToPeerAuthenticationSpecMtlsPtrOutput() PeerAuthenticationSpecMtlsPtrOutput {
	return o.ToPeerAuthenticationSpecMtlsPtrOutputWithContext(context.Background())
}

func (o PeerAuthenticationSpecMtlsOutput) ToPeerAuthenticationSpecMtlsPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeerAuthenticationSpecMtls) *PeerAuthenticationSpecMtls {
		return &v
	}).(PeerAuthenticationSpecMtlsPtrOutput)
}

// Defines the mTLS mode used for peer authentication.
//
// Valid Options: DISABLE, PERMISSIVE, STRICT
func (o PeerAuthenticationSpecMtlsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationSpecMtls) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type PeerAuthenticationSpecMtlsPtrOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecMtlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpecMtls)(nil)).Elem()
}

func (o PeerAuthenticationSpecMtlsPtrOutput) ToPeerAuthenticationSpecMtlsPtrOutput() PeerAuthenticationSpecMtlsPtrOutput {
	return o
}

func (o PeerAuthenticationSpecMtlsPtrOutput) ToPeerAuthenticationSpecMtlsPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsPtrOutput {
	return o
}

func (o PeerAuthenticationSpecMtlsPtrOutput) Elem() PeerAuthenticationSpecMtlsOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpecMtls) PeerAuthenticationSpecMtls {
		if v != nil {
			return *v
		}
		var ret PeerAuthenticationSpecMtls
		return ret
	}).(PeerAuthenticationSpecMtlsOutput)
}

// Defines the mTLS mode used for peer authentication.
//
// Valid Options: DISABLE, PERMISSIVE, STRICT
func (o PeerAuthenticationSpecMtlsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpecMtls) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Mutual TLS settings for workload.
type PeerAuthenticationSpecMtlsPatch struct {
	// Defines the mTLS mode used for peer authentication.
	//
	// Valid Options: DISABLE, PERMISSIVE, STRICT
	Mode *string `pulumi:"mode"`
}

// PeerAuthenticationSpecMtlsPatchInput is an input type that accepts PeerAuthenticationSpecMtlsPatchArgs and PeerAuthenticationSpecMtlsPatchOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecMtlsPatchInput` via:
//
//	PeerAuthenticationSpecMtlsPatchArgs{...}
type PeerAuthenticationSpecMtlsPatchInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecMtlsPatchOutput() PeerAuthenticationSpecMtlsPatchOutput
	ToPeerAuthenticationSpecMtlsPatchOutputWithContext(context.Context) PeerAuthenticationSpecMtlsPatchOutput
}

// Mutual TLS settings for workload.
type PeerAuthenticationSpecMtlsPatchArgs struct {
	// Defines the mTLS mode used for peer authentication.
	//
	// Valid Options: DISABLE, PERMISSIVE, STRICT
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (PeerAuthenticationSpecMtlsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpecMtlsPatch)(nil)).Elem()
}

func (i PeerAuthenticationSpecMtlsPatchArgs) ToPeerAuthenticationSpecMtlsPatchOutput() PeerAuthenticationSpecMtlsPatchOutput {
	return i.ToPeerAuthenticationSpecMtlsPatchOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecMtlsPatchArgs) ToPeerAuthenticationSpecMtlsPatchOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecMtlsPatchOutput)
}

func (i PeerAuthenticationSpecMtlsPatchArgs) ToPeerAuthenticationSpecMtlsPatchPtrOutput() PeerAuthenticationSpecMtlsPatchPtrOutput {
	return i.ToPeerAuthenticationSpecMtlsPatchPtrOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecMtlsPatchArgs) ToPeerAuthenticationSpecMtlsPatchPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecMtlsPatchOutput).ToPeerAuthenticationSpecMtlsPatchPtrOutputWithContext(ctx)
}

// PeerAuthenticationSpecMtlsPatchPtrInput is an input type that accepts PeerAuthenticationSpecMtlsPatchArgs, PeerAuthenticationSpecMtlsPatchPtr and PeerAuthenticationSpecMtlsPatchPtrOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecMtlsPatchPtrInput` via:
//
//	        PeerAuthenticationSpecMtlsPatchArgs{...}
//
//	or:
//
//	        nil
type PeerAuthenticationSpecMtlsPatchPtrInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecMtlsPatchPtrOutput() PeerAuthenticationSpecMtlsPatchPtrOutput
	ToPeerAuthenticationSpecMtlsPatchPtrOutputWithContext(context.Context) PeerAuthenticationSpecMtlsPatchPtrOutput
}

type peerAuthenticationSpecMtlsPatchPtrType PeerAuthenticationSpecMtlsPatchArgs

func PeerAuthenticationSpecMtlsPatchPtr(v *PeerAuthenticationSpecMtlsPatchArgs) PeerAuthenticationSpecMtlsPatchPtrInput {
	return (*peerAuthenticationSpecMtlsPatchPtrType)(v)
}

func (*peerAuthenticationSpecMtlsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpecMtlsPatch)(nil)).Elem()
}

func (i *peerAuthenticationSpecMtlsPatchPtrType) ToPeerAuthenticationSpecMtlsPatchPtrOutput() PeerAuthenticationSpecMtlsPatchPtrOutput {
	return i.ToPeerAuthenticationSpecMtlsPatchPtrOutputWithContext(context.Background())
}

func (i *peerAuthenticationSpecMtlsPatchPtrType) ToPeerAuthenticationSpecMtlsPatchPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecMtlsPatchPtrOutput)
}

// Mutual TLS settings for workload.
type PeerAuthenticationSpecMtlsPatchOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecMtlsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpecMtlsPatch)(nil)).Elem()
}

func (o PeerAuthenticationSpecMtlsPatchOutput) ToPeerAuthenticationSpecMtlsPatchOutput() PeerAuthenticationSpecMtlsPatchOutput {
	return o
}

func (o PeerAuthenticationSpecMtlsPatchOutput) ToPeerAuthenticationSpecMtlsPatchOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsPatchOutput {
	return o
}

func (o PeerAuthenticationSpecMtlsPatchOutput) ToPeerAuthenticationSpecMtlsPatchPtrOutput() PeerAuthenticationSpecMtlsPatchPtrOutput {
	return o.ToPeerAuthenticationSpecMtlsPatchPtrOutputWithContext(context.Background())
}

func (o PeerAuthenticationSpecMtlsPatchOutput) ToPeerAuthenticationSpecMtlsPatchPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeerAuthenticationSpecMtlsPatch) *PeerAuthenticationSpecMtlsPatch {
		return &v
	}).(PeerAuthenticationSpecMtlsPatchPtrOutput)
}

// Defines the mTLS mode used for peer authentication.
//
// Valid Options: DISABLE, PERMISSIVE, STRICT
func (o PeerAuthenticationSpecMtlsPatchOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationSpecMtlsPatch) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type PeerAuthenticationSpecMtlsPatchPtrOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecMtlsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpecMtlsPatch)(nil)).Elem()
}

func (o PeerAuthenticationSpecMtlsPatchPtrOutput) ToPeerAuthenticationSpecMtlsPatchPtrOutput() PeerAuthenticationSpecMtlsPatchPtrOutput {
	return o
}

func (o PeerAuthenticationSpecMtlsPatchPtrOutput) ToPeerAuthenticationSpecMtlsPatchPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsPatchPtrOutput {
	return o
}

func (o PeerAuthenticationSpecMtlsPatchPtrOutput) Elem() PeerAuthenticationSpecMtlsPatchOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpecMtlsPatch) PeerAuthenticationSpecMtlsPatch {
		if v != nil {
			return *v
		}
		var ret PeerAuthenticationSpecMtlsPatch
		return ret
	}).(PeerAuthenticationSpecMtlsPatchOutput)
}

// Defines the mTLS mode used for peer authentication.
//
// Valid Options: DISABLE, PERMISSIVE, STRICT
func (o PeerAuthenticationSpecMtlsPatchPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpecMtlsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Peer authentication configuration for workloads. See more details at: https://istio.io/docs/reference/config/security/peer_authentication.html
type PeerAuthenticationSpecPatch struct {
	Mtls *PeerAuthenticationSpecMtlsPatch `pulumi:"mtls"`
	// Port specific mutual TLS settings.
	PortLevelMtls map[string]map[string]string         `pulumi:"portLevelMtls"`
	Selector      *PeerAuthenticationSpecSelectorPatch `pulumi:"selector"`
}

// PeerAuthenticationSpecPatchInput is an input type that accepts PeerAuthenticationSpecPatchArgs and PeerAuthenticationSpecPatchOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecPatchInput` via:
//
//	PeerAuthenticationSpecPatchArgs{...}
type PeerAuthenticationSpecPatchInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecPatchOutput() PeerAuthenticationSpecPatchOutput
	ToPeerAuthenticationSpecPatchOutputWithContext(context.Context) PeerAuthenticationSpecPatchOutput
}

// Peer authentication configuration for workloads. See more details at: https://istio.io/docs/reference/config/security/peer_authentication.html
type PeerAuthenticationSpecPatchArgs struct {
	Mtls PeerAuthenticationSpecMtlsPatchPtrInput `pulumi:"mtls"`
	// Port specific mutual TLS settings.
	PortLevelMtls pulumi.StringMapMapInput                    `pulumi:"portLevelMtls"`
	Selector      PeerAuthenticationSpecSelectorPatchPtrInput `pulumi:"selector"`
}

func (PeerAuthenticationSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpecPatch)(nil)).Elem()
}

func (i PeerAuthenticationSpecPatchArgs) ToPeerAuthenticationSpecPatchOutput() PeerAuthenticationSpecPatchOutput {
	return i.ToPeerAuthenticationSpecPatchOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecPatchArgs) ToPeerAuthenticationSpecPatchOutputWithContext(ctx context.Context) PeerAuthenticationSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecPatchOutput)
}

func (i PeerAuthenticationSpecPatchArgs) ToPeerAuthenticationSpecPatchPtrOutput() PeerAuthenticationSpecPatchPtrOutput {
	return i.ToPeerAuthenticationSpecPatchPtrOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecPatchArgs) ToPeerAuthenticationSpecPatchPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecPatchOutput).ToPeerAuthenticationSpecPatchPtrOutputWithContext(ctx)
}

// PeerAuthenticationSpecPatchPtrInput is an input type that accepts PeerAuthenticationSpecPatchArgs, PeerAuthenticationSpecPatchPtr and PeerAuthenticationSpecPatchPtrOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecPatchPtrInput` via:
//
//	        PeerAuthenticationSpecPatchArgs{...}
//
//	or:
//
//	        nil
type PeerAuthenticationSpecPatchPtrInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecPatchPtrOutput() PeerAuthenticationSpecPatchPtrOutput
	ToPeerAuthenticationSpecPatchPtrOutputWithContext(context.Context) PeerAuthenticationSpecPatchPtrOutput
}

type peerAuthenticationSpecPatchPtrType PeerAuthenticationSpecPatchArgs

func PeerAuthenticationSpecPatchPtr(v *PeerAuthenticationSpecPatchArgs) PeerAuthenticationSpecPatchPtrInput {
	return (*peerAuthenticationSpecPatchPtrType)(v)
}

func (*peerAuthenticationSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpecPatch)(nil)).Elem()
}

func (i *peerAuthenticationSpecPatchPtrType) ToPeerAuthenticationSpecPatchPtrOutput() PeerAuthenticationSpecPatchPtrOutput {
	return i.ToPeerAuthenticationSpecPatchPtrOutputWithContext(context.Background())
}

func (i *peerAuthenticationSpecPatchPtrType) ToPeerAuthenticationSpecPatchPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecPatchPtrOutput)
}

// Peer authentication configuration for workloads. See more details at: https://istio.io/docs/reference/config/security/peer_authentication.html
type PeerAuthenticationSpecPatchOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpecPatch)(nil)).Elem()
}

func (o PeerAuthenticationSpecPatchOutput) ToPeerAuthenticationSpecPatchOutput() PeerAuthenticationSpecPatchOutput {
	return o
}

func (o PeerAuthenticationSpecPatchOutput) ToPeerAuthenticationSpecPatchOutputWithContext(ctx context.Context) PeerAuthenticationSpecPatchOutput {
	return o
}

func (o PeerAuthenticationSpecPatchOutput) ToPeerAuthenticationSpecPatchPtrOutput() PeerAuthenticationSpecPatchPtrOutput {
	return o.ToPeerAuthenticationSpecPatchPtrOutputWithContext(context.Background())
}

func (o PeerAuthenticationSpecPatchOutput) ToPeerAuthenticationSpecPatchPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeerAuthenticationSpecPatch) *PeerAuthenticationSpecPatch {
		return &v
	}).(PeerAuthenticationSpecPatchPtrOutput)
}

func (o PeerAuthenticationSpecPatchOutput) Mtls() PeerAuthenticationSpecMtlsPatchPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationSpecPatch) *PeerAuthenticationSpecMtlsPatch { return v.Mtls }).(PeerAuthenticationSpecMtlsPatchPtrOutput)
}

// Port specific mutual TLS settings.
func (o PeerAuthenticationSpecPatchOutput) PortLevelMtls() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v PeerAuthenticationSpecPatch) map[string]map[string]string { return v.PortLevelMtls }).(pulumi.StringMapMapOutput)
}

func (o PeerAuthenticationSpecPatchOutput) Selector() PeerAuthenticationSpecSelectorPatchPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationSpecPatch) *PeerAuthenticationSpecSelectorPatch { return v.Selector }).(PeerAuthenticationSpecSelectorPatchPtrOutput)
}

type PeerAuthenticationSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpecPatch)(nil)).Elem()
}

func (o PeerAuthenticationSpecPatchPtrOutput) ToPeerAuthenticationSpecPatchPtrOutput() PeerAuthenticationSpecPatchPtrOutput {
	return o
}

func (o PeerAuthenticationSpecPatchPtrOutput) ToPeerAuthenticationSpecPatchPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecPatchPtrOutput {
	return o
}

func (o PeerAuthenticationSpecPatchPtrOutput) Elem() PeerAuthenticationSpecPatchOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpecPatch) PeerAuthenticationSpecPatch {
		if v != nil {
			return *v
		}
		var ret PeerAuthenticationSpecPatch
		return ret
	}).(PeerAuthenticationSpecPatchOutput)
}

func (o PeerAuthenticationSpecPatchPtrOutput) Mtls() PeerAuthenticationSpecMtlsPatchPtrOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpecPatch) *PeerAuthenticationSpecMtlsPatch {
		if v == nil {
			return nil
		}
		return v.Mtls
	}).(PeerAuthenticationSpecMtlsPatchPtrOutput)
}

// Port specific mutual TLS settings.
func (o PeerAuthenticationSpecPatchPtrOutput) PortLevelMtls() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpecPatch) map[string]map[string]string {
		if v == nil {
			return nil
		}
		return v.PortLevelMtls
	}).(pulumi.StringMapMapOutput)
}

func (o PeerAuthenticationSpecPatchPtrOutput) Selector() PeerAuthenticationSpecSelectorPatchPtrOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpecPatch) *PeerAuthenticationSpecSelectorPatch {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(PeerAuthenticationSpecSelectorPatchPtrOutput)
}

// The selector determines the workloads to apply the PeerAuthentication on.
type PeerAuthenticationSpecSelector struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// PeerAuthenticationSpecSelectorInput is an input type that accepts PeerAuthenticationSpecSelectorArgs and PeerAuthenticationSpecSelectorOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecSelectorInput` via:
//
//	PeerAuthenticationSpecSelectorArgs{...}
type PeerAuthenticationSpecSelectorInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecSelectorOutput() PeerAuthenticationSpecSelectorOutput
	ToPeerAuthenticationSpecSelectorOutputWithContext(context.Context) PeerAuthenticationSpecSelectorOutput
}

// The selector determines the workloads to apply the PeerAuthentication on.
type PeerAuthenticationSpecSelectorArgs struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (PeerAuthenticationSpecSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpecSelector)(nil)).Elem()
}

func (i PeerAuthenticationSpecSelectorArgs) ToPeerAuthenticationSpecSelectorOutput() PeerAuthenticationSpecSelectorOutput {
	return i.ToPeerAuthenticationSpecSelectorOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecSelectorArgs) ToPeerAuthenticationSpecSelectorOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecSelectorOutput)
}

func (i PeerAuthenticationSpecSelectorArgs) ToPeerAuthenticationSpecSelectorPtrOutput() PeerAuthenticationSpecSelectorPtrOutput {
	return i.ToPeerAuthenticationSpecSelectorPtrOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecSelectorArgs) ToPeerAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecSelectorOutput).ToPeerAuthenticationSpecSelectorPtrOutputWithContext(ctx)
}

// PeerAuthenticationSpecSelectorPtrInput is an input type that accepts PeerAuthenticationSpecSelectorArgs, PeerAuthenticationSpecSelectorPtr and PeerAuthenticationSpecSelectorPtrOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecSelectorPtrInput` via:
//
//	        PeerAuthenticationSpecSelectorArgs{...}
//
//	or:
//
//	        nil
type PeerAuthenticationSpecSelectorPtrInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecSelectorPtrOutput() PeerAuthenticationSpecSelectorPtrOutput
	ToPeerAuthenticationSpecSelectorPtrOutputWithContext(context.Context) PeerAuthenticationSpecSelectorPtrOutput
}

type peerAuthenticationSpecSelectorPtrType PeerAuthenticationSpecSelectorArgs

func PeerAuthenticationSpecSelectorPtr(v *PeerAuthenticationSpecSelectorArgs) PeerAuthenticationSpecSelectorPtrInput {
	return (*peerAuthenticationSpecSelectorPtrType)(v)
}

func (*peerAuthenticationSpecSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpecSelector)(nil)).Elem()
}

func (i *peerAuthenticationSpecSelectorPtrType) ToPeerAuthenticationSpecSelectorPtrOutput() PeerAuthenticationSpecSelectorPtrOutput {
	return i.ToPeerAuthenticationSpecSelectorPtrOutputWithContext(context.Background())
}

func (i *peerAuthenticationSpecSelectorPtrType) ToPeerAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecSelectorPtrOutput)
}

// The selector determines the workloads to apply the PeerAuthentication on.
type PeerAuthenticationSpecSelectorOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpecSelector)(nil)).Elem()
}

func (o PeerAuthenticationSpecSelectorOutput) ToPeerAuthenticationSpecSelectorOutput() PeerAuthenticationSpecSelectorOutput {
	return o
}

func (o PeerAuthenticationSpecSelectorOutput) ToPeerAuthenticationSpecSelectorOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorOutput {
	return o
}

func (o PeerAuthenticationSpecSelectorOutput) ToPeerAuthenticationSpecSelectorPtrOutput() PeerAuthenticationSpecSelectorPtrOutput {
	return o.ToPeerAuthenticationSpecSelectorPtrOutputWithContext(context.Background())
}

func (o PeerAuthenticationSpecSelectorOutput) ToPeerAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeerAuthenticationSpecSelector) *PeerAuthenticationSpecSelector {
		return &v
	}).(PeerAuthenticationSpecSelectorPtrOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o PeerAuthenticationSpecSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v PeerAuthenticationSpecSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type PeerAuthenticationSpecSelectorPtrOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpecSelector)(nil)).Elem()
}

func (o PeerAuthenticationSpecSelectorPtrOutput) ToPeerAuthenticationSpecSelectorPtrOutput() PeerAuthenticationSpecSelectorPtrOutput {
	return o
}

func (o PeerAuthenticationSpecSelectorPtrOutput) ToPeerAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorPtrOutput {
	return o
}

func (o PeerAuthenticationSpecSelectorPtrOutput) Elem() PeerAuthenticationSpecSelectorOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpecSelector) PeerAuthenticationSpecSelector {
		if v != nil {
			return *v
		}
		var ret PeerAuthenticationSpecSelector
		return ret
	}).(PeerAuthenticationSpecSelectorOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o PeerAuthenticationSpecSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpecSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// The selector determines the workloads to apply the PeerAuthentication on.
type PeerAuthenticationSpecSelectorPatch struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// PeerAuthenticationSpecSelectorPatchInput is an input type that accepts PeerAuthenticationSpecSelectorPatchArgs and PeerAuthenticationSpecSelectorPatchOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecSelectorPatchInput` via:
//
//	PeerAuthenticationSpecSelectorPatchArgs{...}
type PeerAuthenticationSpecSelectorPatchInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecSelectorPatchOutput() PeerAuthenticationSpecSelectorPatchOutput
	ToPeerAuthenticationSpecSelectorPatchOutputWithContext(context.Context) PeerAuthenticationSpecSelectorPatchOutput
}

// The selector determines the workloads to apply the PeerAuthentication on.
type PeerAuthenticationSpecSelectorPatchArgs struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (PeerAuthenticationSpecSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpecSelectorPatch)(nil)).Elem()
}

func (i PeerAuthenticationSpecSelectorPatchArgs) ToPeerAuthenticationSpecSelectorPatchOutput() PeerAuthenticationSpecSelectorPatchOutput {
	return i.ToPeerAuthenticationSpecSelectorPatchOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecSelectorPatchArgs) ToPeerAuthenticationSpecSelectorPatchOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecSelectorPatchOutput)
}

func (i PeerAuthenticationSpecSelectorPatchArgs) ToPeerAuthenticationSpecSelectorPatchPtrOutput() PeerAuthenticationSpecSelectorPatchPtrOutput {
	return i.ToPeerAuthenticationSpecSelectorPatchPtrOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecSelectorPatchArgs) ToPeerAuthenticationSpecSelectorPatchPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecSelectorPatchOutput).ToPeerAuthenticationSpecSelectorPatchPtrOutputWithContext(ctx)
}

// PeerAuthenticationSpecSelectorPatchPtrInput is an input type that accepts PeerAuthenticationSpecSelectorPatchArgs, PeerAuthenticationSpecSelectorPatchPtr and PeerAuthenticationSpecSelectorPatchPtrOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecSelectorPatchPtrInput` via:
//
//	        PeerAuthenticationSpecSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type PeerAuthenticationSpecSelectorPatchPtrInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecSelectorPatchPtrOutput() PeerAuthenticationSpecSelectorPatchPtrOutput
	ToPeerAuthenticationSpecSelectorPatchPtrOutputWithContext(context.Context) PeerAuthenticationSpecSelectorPatchPtrOutput
}

type peerAuthenticationSpecSelectorPatchPtrType PeerAuthenticationSpecSelectorPatchArgs

func PeerAuthenticationSpecSelectorPatchPtr(v *PeerAuthenticationSpecSelectorPatchArgs) PeerAuthenticationSpecSelectorPatchPtrInput {
	return (*peerAuthenticationSpecSelectorPatchPtrType)(v)
}

func (*peerAuthenticationSpecSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpecSelectorPatch)(nil)).Elem()
}

func (i *peerAuthenticationSpecSelectorPatchPtrType) ToPeerAuthenticationSpecSelectorPatchPtrOutput() PeerAuthenticationSpecSelectorPatchPtrOutput {
	return i.ToPeerAuthenticationSpecSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *peerAuthenticationSpecSelectorPatchPtrType) ToPeerAuthenticationSpecSelectorPatchPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecSelectorPatchPtrOutput)
}

// The selector determines the workloads to apply the PeerAuthentication on.
type PeerAuthenticationSpecSelectorPatchOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpecSelectorPatch)(nil)).Elem()
}

func (o PeerAuthenticationSpecSelectorPatchOutput) ToPeerAuthenticationSpecSelectorPatchOutput() PeerAuthenticationSpecSelectorPatchOutput {
	return o
}

func (o PeerAuthenticationSpecSelectorPatchOutput) ToPeerAuthenticationSpecSelectorPatchOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorPatchOutput {
	return o
}

func (o PeerAuthenticationSpecSelectorPatchOutput) ToPeerAuthenticationSpecSelectorPatchPtrOutput() PeerAuthenticationSpecSelectorPatchPtrOutput {
	return o.ToPeerAuthenticationSpecSelectorPatchPtrOutputWithContext(context.Background())
}

func (o PeerAuthenticationSpecSelectorPatchOutput) ToPeerAuthenticationSpecSelectorPatchPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeerAuthenticationSpecSelectorPatch) *PeerAuthenticationSpecSelectorPatch {
		return &v
	}).(PeerAuthenticationSpecSelectorPatchPtrOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o PeerAuthenticationSpecSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v PeerAuthenticationSpecSelectorPatch) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type PeerAuthenticationSpecSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpecSelectorPatch)(nil)).Elem()
}

func (o PeerAuthenticationSpecSelectorPatchPtrOutput) ToPeerAuthenticationSpecSelectorPatchPtrOutput() PeerAuthenticationSpecSelectorPatchPtrOutput {
	return o
}

func (o PeerAuthenticationSpecSelectorPatchPtrOutput) ToPeerAuthenticationSpecSelectorPatchPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorPatchPtrOutput {
	return o
}

func (o PeerAuthenticationSpecSelectorPatchPtrOutput) Elem() PeerAuthenticationSpecSelectorPatchOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpecSelectorPatch) PeerAuthenticationSpecSelectorPatch {
		if v != nil {
			return *v
		}
		var ret PeerAuthenticationSpecSelectorPatch
		return ret
	}).(PeerAuthenticationSpecSelectorPatchOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o PeerAuthenticationSpecSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpecSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type RequestAuthenticationType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta         `pulumi:"metadata"`
	Spec     *RequestAuthenticationSpec `pulumi:"spec"`
	Status   map[string]interface{}     `pulumi:"status"`
}

// RequestAuthenticationTypeInput is an input type that accepts RequestAuthenticationTypeArgs and RequestAuthenticationTypeOutput values.
// You can construct a concrete instance of `RequestAuthenticationTypeInput` via:
//
//	RequestAuthenticationTypeArgs{...}
type RequestAuthenticationTypeInput interface {
	pulumi.Input

	ToRequestAuthenticationTypeOutput() RequestAuthenticationTypeOutput
	ToRequestAuthenticationTypeOutputWithContext(context.Context) RequestAuthenticationTypeOutput
}

type RequestAuthenticationTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput         `pulumi:"metadata"`
	Spec     RequestAuthenticationSpecPtrInput `pulumi:"spec"`
	Status   pulumi.MapInput                   `pulumi:"status"`
}

func (RequestAuthenticationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationType)(nil)).Elem()
}

func (i RequestAuthenticationTypeArgs) ToRequestAuthenticationTypeOutput() RequestAuthenticationTypeOutput {
	return i.ToRequestAuthenticationTypeOutputWithContext(context.Background())
}

func (i RequestAuthenticationTypeArgs) ToRequestAuthenticationTypeOutputWithContext(ctx context.Context) RequestAuthenticationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationTypeOutput)
}

// RequestAuthenticationTypeArrayInput is an input type that accepts RequestAuthenticationTypeArray and RequestAuthenticationTypeArrayOutput values.
// You can construct a concrete instance of `RequestAuthenticationTypeArrayInput` via:
//
//	RequestAuthenticationTypeArray{ RequestAuthenticationTypeArgs{...} }
type RequestAuthenticationTypeArrayInput interface {
	pulumi.Input

	ToRequestAuthenticationTypeArrayOutput() RequestAuthenticationTypeArrayOutput
	ToRequestAuthenticationTypeArrayOutputWithContext(context.Context) RequestAuthenticationTypeArrayOutput
}

type RequestAuthenticationTypeArray []RequestAuthenticationTypeInput

func (RequestAuthenticationTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationType)(nil)).Elem()
}

func (i RequestAuthenticationTypeArray) ToRequestAuthenticationTypeArrayOutput() RequestAuthenticationTypeArrayOutput {
	return i.ToRequestAuthenticationTypeArrayOutputWithContext(context.Background())
}

func (i RequestAuthenticationTypeArray) ToRequestAuthenticationTypeArrayOutputWithContext(ctx context.Context) RequestAuthenticationTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationTypeArrayOutput)
}

type RequestAuthenticationTypeOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationType)(nil)).Elem()
}

func (o RequestAuthenticationTypeOutput) ToRequestAuthenticationTypeOutput() RequestAuthenticationTypeOutput {
	return o
}

func (o RequestAuthenticationTypeOutput) ToRequestAuthenticationTypeOutputWithContext(ctx context.Context) RequestAuthenticationTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o RequestAuthenticationTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o RequestAuthenticationTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o RequestAuthenticationTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o RequestAuthenticationTypeOutput) Spec() RequestAuthenticationSpecPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationType) *RequestAuthenticationSpec { return v.Spec }).(RequestAuthenticationSpecPtrOutput)
}

func (o RequestAuthenticationTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v RequestAuthenticationType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

type RequestAuthenticationTypeArrayOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationType)(nil)).Elem()
}

func (o RequestAuthenticationTypeArrayOutput) ToRequestAuthenticationTypeArrayOutput() RequestAuthenticationTypeArrayOutput {
	return o
}

func (o RequestAuthenticationTypeArrayOutput) ToRequestAuthenticationTypeArrayOutputWithContext(ctx context.Context) RequestAuthenticationTypeArrayOutput {
	return o
}

func (o RequestAuthenticationTypeArrayOutput) Index(i pulumi.IntInput) RequestAuthenticationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RequestAuthenticationType {
		return vs[0].([]RequestAuthenticationType)[vs[1].(int)]
	}).(RequestAuthenticationTypeOutput)
}

// RequestAuthenticationList is a list of RequestAuthentication
type RequestAuthenticationListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of requestauthentications. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []RequestAuthenticationType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// RequestAuthenticationListTypeInput is an input type that accepts RequestAuthenticationListTypeArgs and RequestAuthenticationListTypeOutput values.
// You can construct a concrete instance of `RequestAuthenticationListTypeInput` via:
//
//	RequestAuthenticationListTypeArgs{...}
type RequestAuthenticationListTypeInput interface {
	pulumi.Input

	ToRequestAuthenticationListTypeOutput() RequestAuthenticationListTypeOutput
	ToRequestAuthenticationListTypeOutputWithContext(context.Context) RequestAuthenticationListTypeOutput
}

// RequestAuthenticationList is a list of RequestAuthentication
type RequestAuthenticationListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of requestauthentications. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items RequestAuthenticationTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (RequestAuthenticationListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationListType)(nil)).Elem()
}

func (i RequestAuthenticationListTypeArgs) ToRequestAuthenticationListTypeOutput() RequestAuthenticationListTypeOutput {
	return i.ToRequestAuthenticationListTypeOutputWithContext(context.Background())
}

func (i RequestAuthenticationListTypeArgs) ToRequestAuthenticationListTypeOutputWithContext(ctx context.Context) RequestAuthenticationListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationListTypeOutput)
}

// RequestAuthenticationList is a list of RequestAuthentication
type RequestAuthenticationListTypeOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationListType)(nil)).Elem()
}

func (o RequestAuthenticationListTypeOutput) ToRequestAuthenticationListTypeOutput() RequestAuthenticationListTypeOutput {
	return o
}

func (o RequestAuthenticationListTypeOutput) ToRequestAuthenticationListTypeOutputWithContext(ctx context.Context) RequestAuthenticationListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o RequestAuthenticationListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of requestauthentications. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o RequestAuthenticationListTypeOutput) Items() RequestAuthenticationTypeArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationListType) []RequestAuthenticationType { return v.Items }).(RequestAuthenticationTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o RequestAuthenticationListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o RequestAuthenticationListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

type RequestAuthenticationPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch         `pulumi:"metadata"`
	Spec     *RequestAuthenticationSpecPatch `pulumi:"spec"`
	Status   map[string]interface{}          `pulumi:"status"`
}

// RequestAuthenticationPatchTypeInput is an input type that accepts RequestAuthenticationPatchTypeArgs and RequestAuthenticationPatchTypeOutput values.
// You can construct a concrete instance of `RequestAuthenticationPatchTypeInput` via:
//
//	RequestAuthenticationPatchTypeArgs{...}
type RequestAuthenticationPatchTypeInput interface {
	pulumi.Input

	ToRequestAuthenticationPatchTypeOutput() RequestAuthenticationPatchTypeOutput
	ToRequestAuthenticationPatchTypeOutputWithContext(context.Context) RequestAuthenticationPatchTypeOutput
}

type RequestAuthenticationPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput         `pulumi:"metadata"`
	Spec     RequestAuthenticationSpecPatchPtrInput `pulumi:"spec"`
	Status   pulumi.MapInput                        `pulumi:"status"`
}

func (RequestAuthenticationPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationPatchType)(nil)).Elem()
}

func (i RequestAuthenticationPatchTypeArgs) ToRequestAuthenticationPatchTypeOutput() RequestAuthenticationPatchTypeOutput {
	return i.ToRequestAuthenticationPatchTypeOutputWithContext(context.Background())
}

func (i RequestAuthenticationPatchTypeArgs) ToRequestAuthenticationPatchTypeOutputWithContext(ctx context.Context) RequestAuthenticationPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationPatchTypeOutput)
}

type RequestAuthenticationPatchTypeOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationPatchType)(nil)).Elem()
}

func (o RequestAuthenticationPatchTypeOutput) ToRequestAuthenticationPatchTypeOutput() RequestAuthenticationPatchTypeOutput {
	return o
}

func (o RequestAuthenticationPatchTypeOutput) ToRequestAuthenticationPatchTypeOutputWithContext(ctx context.Context) RequestAuthenticationPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o RequestAuthenticationPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o RequestAuthenticationPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o RequestAuthenticationPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o RequestAuthenticationPatchTypeOutput) Spec() RequestAuthenticationSpecPatchPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationPatchType) *RequestAuthenticationSpecPatch { return v.Spec }).(RequestAuthenticationSpecPatchPtrOutput)
}

func (o RequestAuthenticationPatchTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v RequestAuthenticationPatchType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

// Request authentication configuration for workloads. See more details at: https://istio.io/docs/reference/config/security/request_authentication.html
type RequestAuthenticationSpec struct {
	// Define the list of JWTs that can be validated at the selected workloads' proxy.
	JwtRules  []RequestAuthenticationSpecJwtRules `pulumi:"jwtRules"`
	Selector  *RequestAuthenticationSpecSelector  `pulumi:"selector"`
	TargetRef *RequestAuthenticationSpecTargetRef `pulumi:"targetRef"`
	// Optional.
	TargetRefs []RequestAuthenticationSpecTargetRefs `pulumi:"targetRefs"`
}

// RequestAuthenticationSpecInput is an input type that accepts RequestAuthenticationSpecArgs and RequestAuthenticationSpecOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecInput` via:
//
//	RequestAuthenticationSpecArgs{...}
type RequestAuthenticationSpecInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecOutput() RequestAuthenticationSpecOutput
	ToRequestAuthenticationSpecOutputWithContext(context.Context) RequestAuthenticationSpecOutput
}

// Request authentication configuration for workloads. See more details at: https://istio.io/docs/reference/config/security/request_authentication.html
type RequestAuthenticationSpecArgs struct {
	// Define the list of JWTs that can be validated at the selected workloads' proxy.
	JwtRules  RequestAuthenticationSpecJwtRulesArrayInput `pulumi:"jwtRules"`
	Selector  RequestAuthenticationSpecSelectorPtrInput   `pulumi:"selector"`
	TargetRef RequestAuthenticationSpecTargetRefPtrInput  `pulumi:"targetRef"`
	// Optional.
	TargetRefs RequestAuthenticationSpecTargetRefsArrayInput `pulumi:"targetRefs"`
}

func (RequestAuthenticationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpec)(nil)).Elem()
}

func (i RequestAuthenticationSpecArgs) ToRequestAuthenticationSpecOutput() RequestAuthenticationSpecOutput {
	return i.ToRequestAuthenticationSpecOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecArgs) ToRequestAuthenticationSpecOutputWithContext(ctx context.Context) RequestAuthenticationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecOutput)
}

func (i RequestAuthenticationSpecArgs) ToRequestAuthenticationSpecPtrOutput() RequestAuthenticationSpecPtrOutput {
	return i.ToRequestAuthenticationSpecPtrOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecArgs) ToRequestAuthenticationSpecPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecOutput).ToRequestAuthenticationSpecPtrOutputWithContext(ctx)
}

// RequestAuthenticationSpecPtrInput is an input type that accepts RequestAuthenticationSpecArgs, RequestAuthenticationSpecPtr and RequestAuthenticationSpecPtrOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecPtrInput` via:
//
//	        RequestAuthenticationSpecArgs{...}
//
//	or:
//
//	        nil
type RequestAuthenticationSpecPtrInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecPtrOutput() RequestAuthenticationSpecPtrOutput
	ToRequestAuthenticationSpecPtrOutputWithContext(context.Context) RequestAuthenticationSpecPtrOutput
}

type requestAuthenticationSpecPtrType RequestAuthenticationSpecArgs

func RequestAuthenticationSpecPtr(v *RequestAuthenticationSpecArgs) RequestAuthenticationSpecPtrInput {
	return (*requestAuthenticationSpecPtrType)(v)
}

func (*requestAuthenticationSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationSpec)(nil)).Elem()
}

func (i *requestAuthenticationSpecPtrType) ToRequestAuthenticationSpecPtrOutput() RequestAuthenticationSpecPtrOutput {
	return i.ToRequestAuthenticationSpecPtrOutputWithContext(context.Background())
}

func (i *requestAuthenticationSpecPtrType) ToRequestAuthenticationSpecPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecPtrOutput)
}

// Request authentication configuration for workloads. See more details at: https://istio.io/docs/reference/config/security/request_authentication.html
type RequestAuthenticationSpecOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpec)(nil)).Elem()
}

func (o RequestAuthenticationSpecOutput) ToRequestAuthenticationSpecOutput() RequestAuthenticationSpecOutput {
	return o
}

func (o RequestAuthenticationSpecOutput) ToRequestAuthenticationSpecOutputWithContext(ctx context.Context) RequestAuthenticationSpecOutput {
	return o
}

func (o RequestAuthenticationSpecOutput) ToRequestAuthenticationSpecPtrOutput() RequestAuthenticationSpecPtrOutput {
	return o.ToRequestAuthenticationSpecPtrOutputWithContext(context.Background())
}

func (o RequestAuthenticationSpecOutput) ToRequestAuthenticationSpecPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestAuthenticationSpec) *RequestAuthenticationSpec {
		return &v
	}).(RequestAuthenticationSpecPtrOutput)
}

// Define the list of JWTs that can be validated at the selected workloads' proxy.
func (o RequestAuthenticationSpecOutput) JwtRules() RequestAuthenticationSpecJwtRulesArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpec) []RequestAuthenticationSpecJwtRules { return v.JwtRules }).(RequestAuthenticationSpecJwtRulesArrayOutput)
}

func (o RequestAuthenticationSpecOutput) Selector() RequestAuthenticationSpecSelectorPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpec) *RequestAuthenticationSpecSelector { return v.Selector }).(RequestAuthenticationSpecSelectorPtrOutput)
}

func (o RequestAuthenticationSpecOutput) TargetRef() RequestAuthenticationSpecTargetRefPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpec) *RequestAuthenticationSpecTargetRef { return v.TargetRef }).(RequestAuthenticationSpecTargetRefPtrOutput)
}

// Optional.
func (o RequestAuthenticationSpecOutput) TargetRefs() RequestAuthenticationSpecTargetRefsArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpec) []RequestAuthenticationSpecTargetRefs { return v.TargetRefs }).(RequestAuthenticationSpecTargetRefsArrayOutput)
}

type RequestAuthenticationSpecPtrOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationSpec)(nil)).Elem()
}

func (o RequestAuthenticationSpecPtrOutput) ToRequestAuthenticationSpecPtrOutput() RequestAuthenticationSpecPtrOutput {
	return o
}

func (o RequestAuthenticationSpecPtrOutput) ToRequestAuthenticationSpecPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecPtrOutput {
	return o
}

func (o RequestAuthenticationSpecPtrOutput) Elem() RequestAuthenticationSpecOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpec) RequestAuthenticationSpec {
		if v != nil {
			return *v
		}
		var ret RequestAuthenticationSpec
		return ret
	}).(RequestAuthenticationSpecOutput)
}

// Define the list of JWTs that can be validated at the selected workloads' proxy.
func (o RequestAuthenticationSpecPtrOutput) JwtRules() RequestAuthenticationSpecJwtRulesArrayOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpec) []RequestAuthenticationSpecJwtRules {
		if v == nil {
			return nil
		}
		return v.JwtRules
	}).(RequestAuthenticationSpecJwtRulesArrayOutput)
}

func (o RequestAuthenticationSpecPtrOutput) Selector() RequestAuthenticationSpecSelectorPtrOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpec) *RequestAuthenticationSpecSelector {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(RequestAuthenticationSpecSelectorPtrOutput)
}

func (o RequestAuthenticationSpecPtrOutput) TargetRef() RequestAuthenticationSpecTargetRefPtrOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpec) *RequestAuthenticationSpecTargetRef {
		if v == nil {
			return nil
		}
		return v.TargetRef
	}).(RequestAuthenticationSpecTargetRefPtrOutput)
}

// Optional.
func (o RequestAuthenticationSpecPtrOutput) TargetRefs() RequestAuthenticationSpecTargetRefsArrayOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpec) []RequestAuthenticationSpecTargetRefs {
		if v == nil {
			return nil
		}
		return v.TargetRefs
	}).(RequestAuthenticationSpecTargetRefsArrayOutput)
}

type RequestAuthenticationSpecJwtRules struct {
	// The list of JWT [audiences](https://tools.ietf.org/html/rfc7519#section-4.1.3) that are allowed to access.
	Audiences []string `pulumi:"audiences"`
	// If set to true, the original token will be kept for the upstream request.
	ForwardOriginalToken *bool `pulumi:"forwardOriginalToken"`
	// List of cookie names from which JWT is expected.
	FromCookies []string `pulumi:"fromCookies"`
	// List of header locations from which JWT is expected.
	FromHeaders []RequestAuthenticationSpecJwtRulesFromHeaders `pulumi:"fromHeaders"`
	// List of query parameters from which JWT is expected.
	FromParams []string `pulumi:"fromParams"`
	// Identifies the issuer that issued the JWT.
	Issuer *string `pulumi:"issuer"`
	// JSON Web Key Set of public keys to validate signature of the JWT.
	Jwks *string `pulumi:"jwks"`
	// URL of the provider's public key set to validate signature of the JWT.
	JwksUri *string `pulumi:"jwksUri"`
	// URL of the provider's public key set to validate signature of the JWT.
	Jwks_uri *string `pulumi:"jwks_uri"`
	// This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token.
	OutputClaimToHeaders []RequestAuthenticationSpecJwtRulesOutputClaimToHeaders `pulumi:"outputClaimToHeaders"`
	// This field specifies the header name to output a successfully verified JWT payload to the backend.
	OutputPayloadToHeader *string `pulumi:"outputPayloadToHeader"`
	// The maximum amount of time that the resolver, determined by the PILOT_JWT_ENABLE_REMOTE_JWKS environment variable, will spend waiting for the JWKS to be fetched.
	Timeout *string `pulumi:"timeout"`
}

// RequestAuthenticationSpecJwtRulesInput is an input type that accepts RequestAuthenticationSpecJwtRulesArgs and RequestAuthenticationSpecJwtRulesOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecJwtRulesInput` via:
//
//	RequestAuthenticationSpecJwtRulesArgs{...}
type RequestAuthenticationSpecJwtRulesInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecJwtRulesOutput() RequestAuthenticationSpecJwtRulesOutput
	ToRequestAuthenticationSpecJwtRulesOutputWithContext(context.Context) RequestAuthenticationSpecJwtRulesOutput
}

type RequestAuthenticationSpecJwtRulesArgs struct {
	// The list of JWT [audiences](https://tools.ietf.org/html/rfc7519#section-4.1.3) that are allowed to access.
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// If set to true, the original token will be kept for the upstream request.
	ForwardOriginalToken pulumi.BoolPtrInput `pulumi:"forwardOriginalToken"`
	// List of cookie names from which JWT is expected.
	FromCookies pulumi.StringArrayInput `pulumi:"fromCookies"`
	// List of header locations from which JWT is expected.
	FromHeaders RequestAuthenticationSpecJwtRulesFromHeadersArrayInput `pulumi:"fromHeaders"`
	// List of query parameters from which JWT is expected.
	FromParams pulumi.StringArrayInput `pulumi:"fromParams"`
	// Identifies the issuer that issued the JWT.
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
	// JSON Web Key Set of public keys to validate signature of the JWT.
	Jwks pulumi.StringPtrInput `pulumi:"jwks"`
	// URL of the provider's public key set to validate signature of the JWT.
	JwksUri pulumi.StringPtrInput `pulumi:"jwksUri"`
	// URL of the provider's public key set to validate signature of the JWT.
	Jwks_uri pulumi.StringPtrInput `pulumi:"jwks_uri"`
	// This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token.
	OutputClaimToHeaders RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayInput `pulumi:"outputClaimToHeaders"`
	// This field specifies the header name to output a successfully verified JWT payload to the backend.
	OutputPayloadToHeader pulumi.StringPtrInput `pulumi:"outputPayloadToHeader"`
	// The maximum amount of time that the resolver, determined by the PILOT_JWT_ENABLE_REMOTE_JWKS environment variable, will spend waiting for the JWKS to be fetched.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (RequestAuthenticationSpecJwtRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecJwtRules)(nil)).Elem()
}

func (i RequestAuthenticationSpecJwtRulesArgs) ToRequestAuthenticationSpecJwtRulesOutput() RequestAuthenticationSpecJwtRulesOutput {
	return i.ToRequestAuthenticationSpecJwtRulesOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecJwtRulesArgs) ToRequestAuthenticationSpecJwtRulesOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecJwtRulesOutput)
}

// RequestAuthenticationSpecJwtRulesArrayInput is an input type that accepts RequestAuthenticationSpecJwtRulesArray and RequestAuthenticationSpecJwtRulesArrayOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecJwtRulesArrayInput` via:
//
//	RequestAuthenticationSpecJwtRulesArray{ RequestAuthenticationSpecJwtRulesArgs{...} }
type RequestAuthenticationSpecJwtRulesArrayInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecJwtRulesArrayOutput() RequestAuthenticationSpecJwtRulesArrayOutput
	ToRequestAuthenticationSpecJwtRulesArrayOutputWithContext(context.Context) RequestAuthenticationSpecJwtRulesArrayOutput
}

type RequestAuthenticationSpecJwtRulesArray []RequestAuthenticationSpecJwtRulesInput

func (RequestAuthenticationSpecJwtRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecJwtRules)(nil)).Elem()
}

func (i RequestAuthenticationSpecJwtRulesArray) ToRequestAuthenticationSpecJwtRulesArrayOutput() RequestAuthenticationSpecJwtRulesArrayOutput {
	return i.ToRequestAuthenticationSpecJwtRulesArrayOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecJwtRulesArray) ToRequestAuthenticationSpecJwtRulesArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecJwtRulesArrayOutput)
}

type RequestAuthenticationSpecJwtRulesOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecJwtRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecJwtRules)(nil)).Elem()
}

func (o RequestAuthenticationSpecJwtRulesOutput) ToRequestAuthenticationSpecJwtRulesOutput() RequestAuthenticationSpecJwtRulesOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesOutput) ToRequestAuthenticationSpecJwtRulesOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesOutput {
	return o
}

// The list of JWT [audiences](https://tools.ietf.org/html/rfc7519#section-4.1.3) that are allowed to access.
func (o RequestAuthenticationSpecJwtRulesOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// If set to true, the original token will be kept for the upstream request.
func (o RequestAuthenticationSpecJwtRulesOutput) ForwardOriginalToken() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) *bool { return v.ForwardOriginalToken }).(pulumi.BoolPtrOutput)
}

// List of cookie names from which JWT is expected.
func (o RequestAuthenticationSpecJwtRulesOutput) FromCookies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) []string { return v.FromCookies }).(pulumi.StringArrayOutput)
}

// List of header locations from which JWT is expected.
func (o RequestAuthenticationSpecJwtRulesOutput) FromHeaders() RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) []RequestAuthenticationSpecJwtRulesFromHeaders {
		return v.FromHeaders
	}).(RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput)
}

// List of query parameters from which JWT is expected.
func (o RequestAuthenticationSpecJwtRulesOutput) FromParams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) []string { return v.FromParams }).(pulumi.StringArrayOutput)
}

// Identifies the issuer that issued the JWT.
func (o RequestAuthenticationSpecJwtRulesOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// JSON Web Key Set of public keys to validate signature of the JWT.
func (o RequestAuthenticationSpecJwtRulesOutput) Jwks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) *string { return v.Jwks }).(pulumi.StringPtrOutput)
}

// URL of the provider's public key set to validate signature of the JWT.
func (o RequestAuthenticationSpecJwtRulesOutput) JwksUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) *string { return v.JwksUri }).(pulumi.StringPtrOutput)
}

// URL of the provider's public key set to validate signature of the JWT.
func (o RequestAuthenticationSpecJwtRulesOutput) Jwks_uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) *string { return v.Jwks_uri }).(pulumi.StringPtrOutput)
}

// This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token.
func (o RequestAuthenticationSpecJwtRulesOutput) OutputClaimToHeaders() RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) []RequestAuthenticationSpecJwtRulesOutputClaimToHeaders {
		return v.OutputClaimToHeaders
	}).(RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput)
}

// This field specifies the header name to output a successfully verified JWT payload to the backend.
func (o RequestAuthenticationSpecJwtRulesOutput) OutputPayloadToHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) *string { return v.OutputPayloadToHeader }).(pulumi.StringPtrOutput)
}

// The maximum amount of time that the resolver, determined by the PILOT_JWT_ENABLE_REMOTE_JWKS environment variable, will spend waiting for the JWKS to be fetched.
func (o RequestAuthenticationSpecJwtRulesOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type RequestAuthenticationSpecJwtRulesArrayOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecJwtRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecJwtRules)(nil)).Elem()
}

func (o RequestAuthenticationSpecJwtRulesArrayOutput) ToRequestAuthenticationSpecJwtRulesArrayOutput() RequestAuthenticationSpecJwtRulesArrayOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesArrayOutput) ToRequestAuthenticationSpecJwtRulesArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesArrayOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesArrayOutput) Index(i pulumi.IntInput) RequestAuthenticationSpecJwtRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RequestAuthenticationSpecJwtRules {
		return vs[0].([]RequestAuthenticationSpecJwtRules)[vs[1].(int)]
	}).(RequestAuthenticationSpecJwtRulesOutput)
}

type RequestAuthenticationSpecJwtRulesFromHeaders struct {
	// The HTTP header name.
	Name *string `pulumi:"name"`
	// The prefix that should be stripped before decoding the token.
	Prefix *string `pulumi:"prefix"`
}

// RequestAuthenticationSpecJwtRulesFromHeadersInput is an input type that accepts RequestAuthenticationSpecJwtRulesFromHeadersArgs and RequestAuthenticationSpecJwtRulesFromHeadersOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecJwtRulesFromHeadersInput` via:
//
//	RequestAuthenticationSpecJwtRulesFromHeadersArgs{...}
type RequestAuthenticationSpecJwtRulesFromHeadersInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecJwtRulesFromHeadersOutput() RequestAuthenticationSpecJwtRulesFromHeadersOutput
	ToRequestAuthenticationSpecJwtRulesFromHeadersOutputWithContext(context.Context) RequestAuthenticationSpecJwtRulesFromHeadersOutput
}

type RequestAuthenticationSpecJwtRulesFromHeadersArgs struct {
	// The HTTP header name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The prefix that should be stripped before decoding the token.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (RequestAuthenticationSpecJwtRulesFromHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecJwtRulesFromHeaders)(nil)).Elem()
}

func (i RequestAuthenticationSpecJwtRulesFromHeadersArgs) ToRequestAuthenticationSpecJwtRulesFromHeadersOutput() RequestAuthenticationSpecJwtRulesFromHeadersOutput {
	return i.ToRequestAuthenticationSpecJwtRulesFromHeadersOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecJwtRulesFromHeadersArgs) ToRequestAuthenticationSpecJwtRulesFromHeadersOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesFromHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecJwtRulesFromHeadersOutput)
}

// RequestAuthenticationSpecJwtRulesFromHeadersArrayInput is an input type that accepts RequestAuthenticationSpecJwtRulesFromHeadersArray and RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecJwtRulesFromHeadersArrayInput` via:
//
//	RequestAuthenticationSpecJwtRulesFromHeadersArray{ RequestAuthenticationSpecJwtRulesFromHeadersArgs{...} }
type RequestAuthenticationSpecJwtRulesFromHeadersArrayInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecJwtRulesFromHeadersArrayOutput() RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput
	ToRequestAuthenticationSpecJwtRulesFromHeadersArrayOutputWithContext(context.Context) RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput
}

type RequestAuthenticationSpecJwtRulesFromHeadersArray []RequestAuthenticationSpecJwtRulesFromHeadersInput

func (RequestAuthenticationSpecJwtRulesFromHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecJwtRulesFromHeaders)(nil)).Elem()
}

func (i RequestAuthenticationSpecJwtRulesFromHeadersArray) ToRequestAuthenticationSpecJwtRulesFromHeadersArrayOutput() RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput {
	return i.ToRequestAuthenticationSpecJwtRulesFromHeadersArrayOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecJwtRulesFromHeadersArray) ToRequestAuthenticationSpecJwtRulesFromHeadersArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput)
}

type RequestAuthenticationSpecJwtRulesFromHeadersOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecJwtRulesFromHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecJwtRulesFromHeaders)(nil)).Elem()
}

func (o RequestAuthenticationSpecJwtRulesFromHeadersOutput) ToRequestAuthenticationSpecJwtRulesFromHeadersOutput() RequestAuthenticationSpecJwtRulesFromHeadersOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesFromHeadersOutput) ToRequestAuthenticationSpecJwtRulesFromHeadersOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesFromHeadersOutput {
	return o
}

// The HTTP header name.
func (o RequestAuthenticationSpecJwtRulesFromHeadersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesFromHeaders) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The prefix that should be stripped before decoding the token.
func (o RequestAuthenticationSpecJwtRulesFromHeadersOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesFromHeaders) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecJwtRulesFromHeaders)(nil)).Elem()
}

func (o RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput) ToRequestAuthenticationSpecJwtRulesFromHeadersArrayOutput() RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput) ToRequestAuthenticationSpecJwtRulesFromHeadersArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput) Index(i pulumi.IntInput) RequestAuthenticationSpecJwtRulesFromHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RequestAuthenticationSpecJwtRulesFromHeaders {
		return vs[0].([]RequestAuthenticationSpecJwtRulesFromHeaders)[vs[1].(int)]
	}).(RequestAuthenticationSpecJwtRulesFromHeadersOutput)
}

type RequestAuthenticationSpecJwtRulesFromHeadersPatch struct {
	// The HTTP header name.
	Name *string `pulumi:"name"`
	// The prefix that should be stripped before decoding the token.
	Prefix *string `pulumi:"prefix"`
}

// RequestAuthenticationSpecJwtRulesFromHeadersPatchInput is an input type that accepts RequestAuthenticationSpecJwtRulesFromHeadersPatchArgs and RequestAuthenticationSpecJwtRulesFromHeadersPatchOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecJwtRulesFromHeadersPatchInput` via:
//
//	RequestAuthenticationSpecJwtRulesFromHeadersPatchArgs{...}
type RequestAuthenticationSpecJwtRulesFromHeadersPatchInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecJwtRulesFromHeadersPatchOutput() RequestAuthenticationSpecJwtRulesFromHeadersPatchOutput
	ToRequestAuthenticationSpecJwtRulesFromHeadersPatchOutputWithContext(context.Context) RequestAuthenticationSpecJwtRulesFromHeadersPatchOutput
}

type RequestAuthenticationSpecJwtRulesFromHeadersPatchArgs struct {
	// The HTTP header name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The prefix that should be stripped before decoding the token.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (RequestAuthenticationSpecJwtRulesFromHeadersPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecJwtRulesFromHeadersPatch)(nil)).Elem()
}

func (i RequestAuthenticationSpecJwtRulesFromHeadersPatchArgs) ToRequestAuthenticationSpecJwtRulesFromHeadersPatchOutput() RequestAuthenticationSpecJwtRulesFromHeadersPatchOutput {
	return i.ToRequestAuthenticationSpecJwtRulesFromHeadersPatchOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecJwtRulesFromHeadersPatchArgs) ToRequestAuthenticationSpecJwtRulesFromHeadersPatchOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesFromHeadersPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecJwtRulesFromHeadersPatchOutput)
}

// RequestAuthenticationSpecJwtRulesFromHeadersPatchArrayInput is an input type that accepts RequestAuthenticationSpecJwtRulesFromHeadersPatchArray and RequestAuthenticationSpecJwtRulesFromHeadersPatchArrayOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecJwtRulesFromHeadersPatchArrayInput` via:
//
//	RequestAuthenticationSpecJwtRulesFromHeadersPatchArray{ RequestAuthenticationSpecJwtRulesFromHeadersPatchArgs{...} }
type RequestAuthenticationSpecJwtRulesFromHeadersPatchArrayInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecJwtRulesFromHeadersPatchArrayOutput() RequestAuthenticationSpecJwtRulesFromHeadersPatchArrayOutput
	ToRequestAuthenticationSpecJwtRulesFromHeadersPatchArrayOutputWithContext(context.Context) RequestAuthenticationSpecJwtRulesFromHeadersPatchArrayOutput
}

type RequestAuthenticationSpecJwtRulesFromHeadersPatchArray []RequestAuthenticationSpecJwtRulesFromHeadersPatchInput

func (RequestAuthenticationSpecJwtRulesFromHeadersPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecJwtRulesFromHeadersPatch)(nil)).Elem()
}

func (i RequestAuthenticationSpecJwtRulesFromHeadersPatchArray) ToRequestAuthenticationSpecJwtRulesFromHeadersPatchArrayOutput() RequestAuthenticationSpecJwtRulesFromHeadersPatchArrayOutput {
	return i.ToRequestAuthenticationSpecJwtRulesFromHeadersPatchArrayOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecJwtRulesFromHeadersPatchArray) ToRequestAuthenticationSpecJwtRulesFromHeadersPatchArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesFromHeadersPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecJwtRulesFromHeadersPatchArrayOutput)
}

type RequestAuthenticationSpecJwtRulesFromHeadersPatchOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecJwtRulesFromHeadersPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecJwtRulesFromHeadersPatch)(nil)).Elem()
}

func (o RequestAuthenticationSpecJwtRulesFromHeadersPatchOutput) ToRequestAuthenticationSpecJwtRulesFromHeadersPatchOutput() RequestAuthenticationSpecJwtRulesFromHeadersPatchOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesFromHeadersPatchOutput) ToRequestAuthenticationSpecJwtRulesFromHeadersPatchOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesFromHeadersPatchOutput {
	return o
}

// The HTTP header name.
func (o RequestAuthenticationSpecJwtRulesFromHeadersPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesFromHeadersPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The prefix that should be stripped before decoding the token.
func (o RequestAuthenticationSpecJwtRulesFromHeadersPatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesFromHeadersPatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type RequestAuthenticationSpecJwtRulesFromHeadersPatchArrayOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecJwtRulesFromHeadersPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecJwtRulesFromHeadersPatch)(nil)).Elem()
}

func (o RequestAuthenticationSpecJwtRulesFromHeadersPatchArrayOutput) ToRequestAuthenticationSpecJwtRulesFromHeadersPatchArrayOutput() RequestAuthenticationSpecJwtRulesFromHeadersPatchArrayOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesFromHeadersPatchArrayOutput) ToRequestAuthenticationSpecJwtRulesFromHeadersPatchArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesFromHeadersPatchArrayOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesFromHeadersPatchArrayOutput) Index(i pulumi.IntInput) RequestAuthenticationSpecJwtRulesFromHeadersPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RequestAuthenticationSpecJwtRulesFromHeadersPatch {
		return vs[0].([]RequestAuthenticationSpecJwtRulesFromHeadersPatch)[vs[1].(int)]
	}).(RequestAuthenticationSpecJwtRulesFromHeadersPatchOutput)
}

type RequestAuthenticationSpecJwtRulesOutputClaimToHeaders struct {
	// The name of the claim to be copied from.
	Claim *string `pulumi:"claim"`
	// The name of the header to be created.
	Header *string `pulumi:"header"`
}

// RequestAuthenticationSpecJwtRulesOutputClaimToHeadersInput is an input type that accepts RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArgs and RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecJwtRulesOutputClaimToHeadersInput` via:
//
//	RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArgs{...}
type RequestAuthenticationSpecJwtRulesOutputClaimToHeadersInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput() RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput
	ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutputWithContext(context.Context) RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput
}

type RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArgs struct {
	// The name of the claim to be copied from.
	Claim pulumi.StringPtrInput `pulumi:"claim"`
	// The name of the header to be created.
	Header pulumi.StringPtrInput `pulumi:"header"`
}

func (RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecJwtRulesOutputClaimToHeaders)(nil)).Elem()
}

func (i RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArgs) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput() RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput {
	return i.ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArgs) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput)
}

// RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayInput is an input type that accepts RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArray and RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayInput` via:
//
//	RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArray{ RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArgs{...} }
type RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput() RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput
	ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutputWithContext(context.Context) RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput
}

type RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArray []RequestAuthenticationSpecJwtRulesOutputClaimToHeadersInput

func (RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecJwtRulesOutputClaimToHeaders)(nil)).Elem()
}

func (i RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArray) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput() RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput {
	return i.ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArray) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput)
}

type RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecJwtRulesOutputClaimToHeaders)(nil)).Elem()
}

func (o RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput() RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput {
	return o
}

// The name of the claim to be copied from.
func (o RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput) Claim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesOutputClaimToHeaders) *string { return v.Claim }).(pulumi.StringPtrOutput)
}

// The name of the header to be created.
func (o RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesOutputClaimToHeaders) *string { return v.Header }).(pulumi.StringPtrOutput)
}

type RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecJwtRulesOutputClaimToHeaders)(nil)).Elem()
}

func (o RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput() RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput) Index(i pulumi.IntInput) RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RequestAuthenticationSpecJwtRulesOutputClaimToHeaders {
		return vs[0].([]RequestAuthenticationSpecJwtRulesOutputClaimToHeaders)[vs[1].(int)]
	}).(RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput)
}

type RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatch struct {
	// The name of the claim to be copied from.
	Claim *string `pulumi:"claim"`
	// The name of the header to be created.
	Header *string `pulumi:"header"`
}

// RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchInput is an input type that accepts RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArgs and RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchInput` via:
//
//	RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArgs{...}
type RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutput() RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutput
	ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutputWithContext(context.Context) RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutput
}

type RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArgs struct {
	// The name of the claim to be copied from.
	Claim pulumi.StringPtrInput `pulumi:"claim"`
	// The name of the header to be created.
	Header pulumi.StringPtrInput `pulumi:"header"`
}

func (RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatch)(nil)).Elem()
}

func (i RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArgs) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutput() RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutput {
	return i.ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArgs) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutput)
}

// RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayInput is an input type that accepts RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArray and RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayInput` via:
//
//	RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArray{ RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArgs{...} }
type RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayOutput() RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayOutput
	ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayOutputWithContext(context.Context) RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayOutput
}

type RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArray []RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchInput

func (RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatch)(nil)).Elem()
}

func (i RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArray) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayOutput() RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayOutput {
	return i.ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArray) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayOutput)
}

type RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatch)(nil)).Elem()
}

func (o RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutput) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutput() RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutput) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutput {
	return o
}

// The name of the claim to be copied from.
func (o RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutput) Claim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatch) *string { return v.Claim }).(pulumi.StringPtrOutput)
}

// The name of the header to be created.
func (o RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatch) *string { return v.Header }).(pulumi.StringPtrOutput)
}

type RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatch)(nil)).Elem()
}

func (o RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayOutput) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayOutput() RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayOutput) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayOutput) Index(i pulumi.IntInput) RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatch {
		return vs[0].([]RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatch)[vs[1].(int)]
	}).(RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutput)
}

type RequestAuthenticationSpecJwtRulesPatch struct {
	// The list of JWT [audiences](https://tools.ietf.org/html/rfc7519#section-4.1.3) that are allowed to access.
	Audiences []string `pulumi:"audiences"`
	// If set to true, the original token will be kept for the upstream request.
	ForwardOriginalToken *bool `pulumi:"forwardOriginalToken"`
	// List of cookie names from which JWT is expected.
	FromCookies []string `pulumi:"fromCookies"`
	// List of header locations from which JWT is expected.
	FromHeaders []RequestAuthenticationSpecJwtRulesFromHeadersPatch `pulumi:"fromHeaders"`
	// List of query parameters from which JWT is expected.
	FromParams []string `pulumi:"fromParams"`
	// Identifies the issuer that issued the JWT.
	Issuer *string `pulumi:"issuer"`
	// JSON Web Key Set of public keys to validate signature of the JWT.
	Jwks *string `pulumi:"jwks"`
	// URL of the provider's public key set to validate signature of the JWT.
	JwksUri *string `pulumi:"jwksUri"`
	// URL of the provider's public key set to validate signature of the JWT.
	Jwks_uri *string `pulumi:"jwks_uri"`
	// This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token.
	OutputClaimToHeaders []RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatch `pulumi:"outputClaimToHeaders"`
	// This field specifies the header name to output a successfully verified JWT payload to the backend.
	OutputPayloadToHeader *string `pulumi:"outputPayloadToHeader"`
	// The maximum amount of time that the resolver, determined by the PILOT_JWT_ENABLE_REMOTE_JWKS environment variable, will spend waiting for the JWKS to be fetched.
	Timeout *string `pulumi:"timeout"`
}

// RequestAuthenticationSpecJwtRulesPatchInput is an input type that accepts RequestAuthenticationSpecJwtRulesPatchArgs and RequestAuthenticationSpecJwtRulesPatchOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecJwtRulesPatchInput` via:
//
//	RequestAuthenticationSpecJwtRulesPatchArgs{...}
type RequestAuthenticationSpecJwtRulesPatchInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecJwtRulesPatchOutput() RequestAuthenticationSpecJwtRulesPatchOutput
	ToRequestAuthenticationSpecJwtRulesPatchOutputWithContext(context.Context) RequestAuthenticationSpecJwtRulesPatchOutput
}

type RequestAuthenticationSpecJwtRulesPatchArgs struct {
	// The list of JWT [audiences](https://tools.ietf.org/html/rfc7519#section-4.1.3) that are allowed to access.
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// If set to true, the original token will be kept for the upstream request.
	ForwardOriginalToken pulumi.BoolPtrInput `pulumi:"forwardOriginalToken"`
	// List of cookie names from which JWT is expected.
	FromCookies pulumi.StringArrayInput `pulumi:"fromCookies"`
	// List of header locations from which JWT is expected.
	FromHeaders RequestAuthenticationSpecJwtRulesFromHeadersPatchArrayInput `pulumi:"fromHeaders"`
	// List of query parameters from which JWT is expected.
	FromParams pulumi.StringArrayInput `pulumi:"fromParams"`
	// Identifies the issuer that issued the JWT.
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
	// JSON Web Key Set of public keys to validate signature of the JWT.
	Jwks pulumi.StringPtrInput `pulumi:"jwks"`
	// URL of the provider's public key set to validate signature of the JWT.
	JwksUri pulumi.StringPtrInput `pulumi:"jwksUri"`
	// URL of the provider's public key set to validate signature of the JWT.
	Jwks_uri pulumi.StringPtrInput `pulumi:"jwks_uri"`
	// This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token.
	OutputClaimToHeaders RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayInput `pulumi:"outputClaimToHeaders"`
	// This field specifies the header name to output a successfully verified JWT payload to the backend.
	OutputPayloadToHeader pulumi.StringPtrInput `pulumi:"outputPayloadToHeader"`
	// The maximum amount of time that the resolver, determined by the PILOT_JWT_ENABLE_REMOTE_JWKS environment variable, will spend waiting for the JWKS to be fetched.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (RequestAuthenticationSpecJwtRulesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecJwtRulesPatch)(nil)).Elem()
}

func (i RequestAuthenticationSpecJwtRulesPatchArgs) ToRequestAuthenticationSpecJwtRulesPatchOutput() RequestAuthenticationSpecJwtRulesPatchOutput {
	return i.ToRequestAuthenticationSpecJwtRulesPatchOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecJwtRulesPatchArgs) ToRequestAuthenticationSpecJwtRulesPatchOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecJwtRulesPatchOutput)
}

// RequestAuthenticationSpecJwtRulesPatchArrayInput is an input type that accepts RequestAuthenticationSpecJwtRulesPatchArray and RequestAuthenticationSpecJwtRulesPatchArrayOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecJwtRulesPatchArrayInput` via:
//
//	RequestAuthenticationSpecJwtRulesPatchArray{ RequestAuthenticationSpecJwtRulesPatchArgs{...} }
type RequestAuthenticationSpecJwtRulesPatchArrayInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecJwtRulesPatchArrayOutput() RequestAuthenticationSpecJwtRulesPatchArrayOutput
	ToRequestAuthenticationSpecJwtRulesPatchArrayOutputWithContext(context.Context) RequestAuthenticationSpecJwtRulesPatchArrayOutput
}

type RequestAuthenticationSpecJwtRulesPatchArray []RequestAuthenticationSpecJwtRulesPatchInput

func (RequestAuthenticationSpecJwtRulesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecJwtRulesPatch)(nil)).Elem()
}

func (i RequestAuthenticationSpecJwtRulesPatchArray) ToRequestAuthenticationSpecJwtRulesPatchArrayOutput() RequestAuthenticationSpecJwtRulesPatchArrayOutput {
	return i.ToRequestAuthenticationSpecJwtRulesPatchArrayOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecJwtRulesPatchArray) ToRequestAuthenticationSpecJwtRulesPatchArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecJwtRulesPatchArrayOutput)
}

type RequestAuthenticationSpecJwtRulesPatchOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecJwtRulesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecJwtRulesPatch)(nil)).Elem()
}

func (o RequestAuthenticationSpecJwtRulesPatchOutput) ToRequestAuthenticationSpecJwtRulesPatchOutput() RequestAuthenticationSpecJwtRulesPatchOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesPatchOutput) ToRequestAuthenticationSpecJwtRulesPatchOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesPatchOutput {
	return o
}

// The list of JWT [audiences](https://tools.ietf.org/html/rfc7519#section-4.1.3) that are allowed to access.
func (o RequestAuthenticationSpecJwtRulesPatchOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesPatch) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// If set to true, the original token will be kept for the upstream request.
func (o RequestAuthenticationSpecJwtRulesPatchOutput) ForwardOriginalToken() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesPatch) *bool { return v.ForwardOriginalToken }).(pulumi.BoolPtrOutput)
}

// List of cookie names from which JWT is expected.
func (o RequestAuthenticationSpecJwtRulesPatchOutput) FromCookies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesPatch) []string { return v.FromCookies }).(pulumi.StringArrayOutput)
}

// List of header locations from which JWT is expected.
func (o RequestAuthenticationSpecJwtRulesPatchOutput) FromHeaders() RequestAuthenticationSpecJwtRulesFromHeadersPatchArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesPatch) []RequestAuthenticationSpecJwtRulesFromHeadersPatch {
		return v.FromHeaders
	}).(RequestAuthenticationSpecJwtRulesFromHeadersPatchArrayOutput)
}

// List of query parameters from which JWT is expected.
func (o RequestAuthenticationSpecJwtRulesPatchOutput) FromParams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesPatch) []string { return v.FromParams }).(pulumi.StringArrayOutput)
}

// Identifies the issuer that issued the JWT.
func (o RequestAuthenticationSpecJwtRulesPatchOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesPatch) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// JSON Web Key Set of public keys to validate signature of the JWT.
func (o RequestAuthenticationSpecJwtRulesPatchOutput) Jwks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesPatch) *string { return v.Jwks }).(pulumi.StringPtrOutput)
}

// URL of the provider's public key set to validate signature of the JWT.
func (o RequestAuthenticationSpecJwtRulesPatchOutput) JwksUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesPatch) *string { return v.JwksUri }).(pulumi.StringPtrOutput)
}

// URL of the provider's public key set to validate signature of the JWT.
func (o RequestAuthenticationSpecJwtRulesPatchOutput) Jwks_uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesPatch) *string { return v.Jwks_uri }).(pulumi.StringPtrOutput)
}

// This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token.
func (o RequestAuthenticationSpecJwtRulesPatchOutput) OutputClaimToHeaders() RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesPatch) []RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatch {
		return v.OutputClaimToHeaders
	}).(RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayOutput)
}

// This field specifies the header name to output a successfully verified JWT payload to the backend.
func (o RequestAuthenticationSpecJwtRulesPatchOutput) OutputPayloadToHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesPatch) *string { return v.OutputPayloadToHeader }).(pulumi.StringPtrOutput)
}

// The maximum amount of time that the resolver, determined by the PILOT_JWT_ENABLE_REMOTE_JWKS environment variable, will spend waiting for the JWKS to be fetched.
func (o RequestAuthenticationSpecJwtRulesPatchOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesPatch) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type RequestAuthenticationSpecJwtRulesPatchArrayOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecJwtRulesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecJwtRulesPatch)(nil)).Elem()
}

func (o RequestAuthenticationSpecJwtRulesPatchArrayOutput) ToRequestAuthenticationSpecJwtRulesPatchArrayOutput() RequestAuthenticationSpecJwtRulesPatchArrayOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesPatchArrayOutput) ToRequestAuthenticationSpecJwtRulesPatchArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesPatchArrayOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesPatchArrayOutput) Index(i pulumi.IntInput) RequestAuthenticationSpecJwtRulesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RequestAuthenticationSpecJwtRulesPatch {
		return vs[0].([]RequestAuthenticationSpecJwtRulesPatch)[vs[1].(int)]
	}).(RequestAuthenticationSpecJwtRulesPatchOutput)
}

// Request authentication configuration for workloads. See more details at: https://istio.io/docs/reference/config/security/request_authentication.html
type RequestAuthenticationSpecPatch struct {
	// Define the list of JWTs that can be validated at the selected workloads' proxy.
	JwtRules  []RequestAuthenticationSpecJwtRulesPatch `pulumi:"jwtRules"`
	Selector  *RequestAuthenticationSpecSelectorPatch  `pulumi:"selector"`
	TargetRef *RequestAuthenticationSpecTargetRefPatch `pulumi:"targetRef"`
	// Optional.
	TargetRefs []RequestAuthenticationSpecTargetRefsPatch `pulumi:"targetRefs"`
}

// RequestAuthenticationSpecPatchInput is an input type that accepts RequestAuthenticationSpecPatchArgs and RequestAuthenticationSpecPatchOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecPatchInput` via:
//
//	RequestAuthenticationSpecPatchArgs{...}
type RequestAuthenticationSpecPatchInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecPatchOutput() RequestAuthenticationSpecPatchOutput
	ToRequestAuthenticationSpecPatchOutputWithContext(context.Context) RequestAuthenticationSpecPatchOutput
}

// Request authentication configuration for workloads. See more details at: https://istio.io/docs/reference/config/security/request_authentication.html
type RequestAuthenticationSpecPatchArgs struct {
	// Define the list of JWTs that can be validated at the selected workloads' proxy.
	JwtRules  RequestAuthenticationSpecJwtRulesPatchArrayInput `pulumi:"jwtRules"`
	Selector  RequestAuthenticationSpecSelectorPatchPtrInput   `pulumi:"selector"`
	TargetRef RequestAuthenticationSpecTargetRefPatchPtrInput  `pulumi:"targetRef"`
	// Optional.
	TargetRefs RequestAuthenticationSpecTargetRefsPatchArrayInput `pulumi:"targetRefs"`
}

func (RequestAuthenticationSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecPatch)(nil)).Elem()
}

func (i RequestAuthenticationSpecPatchArgs) ToRequestAuthenticationSpecPatchOutput() RequestAuthenticationSpecPatchOutput {
	return i.ToRequestAuthenticationSpecPatchOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecPatchArgs) ToRequestAuthenticationSpecPatchOutputWithContext(ctx context.Context) RequestAuthenticationSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecPatchOutput)
}

func (i RequestAuthenticationSpecPatchArgs) ToRequestAuthenticationSpecPatchPtrOutput() RequestAuthenticationSpecPatchPtrOutput {
	return i.ToRequestAuthenticationSpecPatchPtrOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecPatchArgs) ToRequestAuthenticationSpecPatchPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecPatchOutput).ToRequestAuthenticationSpecPatchPtrOutputWithContext(ctx)
}

// RequestAuthenticationSpecPatchPtrInput is an input type that accepts RequestAuthenticationSpecPatchArgs, RequestAuthenticationSpecPatchPtr and RequestAuthenticationSpecPatchPtrOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecPatchPtrInput` via:
//
//	        RequestAuthenticationSpecPatchArgs{...}
//
//	or:
//
//	        nil
type RequestAuthenticationSpecPatchPtrInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecPatchPtrOutput() RequestAuthenticationSpecPatchPtrOutput
	ToRequestAuthenticationSpecPatchPtrOutputWithContext(context.Context) RequestAuthenticationSpecPatchPtrOutput
}

type requestAuthenticationSpecPatchPtrType RequestAuthenticationSpecPatchArgs

func RequestAuthenticationSpecPatchPtr(v *RequestAuthenticationSpecPatchArgs) RequestAuthenticationSpecPatchPtrInput {
	return (*requestAuthenticationSpecPatchPtrType)(v)
}

func (*requestAuthenticationSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationSpecPatch)(nil)).Elem()
}

func (i *requestAuthenticationSpecPatchPtrType) ToRequestAuthenticationSpecPatchPtrOutput() RequestAuthenticationSpecPatchPtrOutput {
	return i.ToRequestAuthenticationSpecPatchPtrOutputWithContext(context.Background())
}

func (i *requestAuthenticationSpecPatchPtrType) ToRequestAuthenticationSpecPatchPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecPatchPtrOutput)
}

// Request authentication configuration for workloads. See more details at: https://istio.io/docs/reference/config/security/request_authentication.html
type RequestAuthenticationSpecPatchOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecPatch)(nil)).Elem()
}

func (o RequestAuthenticationSpecPatchOutput) ToRequestAuthenticationSpecPatchOutput() RequestAuthenticationSpecPatchOutput {
	return o
}

func (o RequestAuthenticationSpecPatchOutput) ToRequestAuthenticationSpecPatchOutputWithContext(ctx context.Context) RequestAuthenticationSpecPatchOutput {
	return o
}

func (o RequestAuthenticationSpecPatchOutput) ToRequestAuthenticationSpecPatchPtrOutput() RequestAuthenticationSpecPatchPtrOutput {
	return o.ToRequestAuthenticationSpecPatchPtrOutputWithContext(context.Background())
}

func (o RequestAuthenticationSpecPatchOutput) ToRequestAuthenticationSpecPatchPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestAuthenticationSpecPatch) *RequestAuthenticationSpecPatch {
		return &v
	}).(RequestAuthenticationSpecPatchPtrOutput)
}

// Define the list of JWTs that can be validated at the selected workloads' proxy.
func (o RequestAuthenticationSpecPatchOutput) JwtRules() RequestAuthenticationSpecJwtRulesPatchArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecPatch) []RequestAuthenticationSpecJwtRulesPatch { return v.JwtRules }).(RequestAuthenticationSpecJwtRulesPatchArrayOutput)
}

func (o RequestAuthenticationSpecPatchOutput) Selector() RequestAuthenticationSpecSelectorPatchPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecPatch) *RequestAuthenticationSpecSelectorPatch { return v.Selector }).(RequestAuthenticationSpecSelectorPatchPtrOutput)
}

func (o RequestAuthenticationSpecPatchOutput) TargetRef() RequestAuthenticationSpecTargetRefPatchPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecPatch) *RequestAuthenticationSpecTargetRefPatch { return v.TargetRef }).(RequestAuthenticationSpecTargetRefPatchPtrOutput)
}

// Optional.
func (o RequestAuthenticationSpecPatchOutput) TargetRefs() RequestAuthenticationSpecTargetRefsPatchArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecPatch) []RequestAuthenticationSpecTargetRefsPatch { return v.TargetRefs }).(RequestAuthenticationSpecTargetRefsPatchArrayOutput)
}

type RequestAuthenticationSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationSpecPatch)(nil)).Elem()
}

func (o RequestAuthenticationSpecPatchPtrOutput) ToRequestAuthenticationSpecPatchPtrOutput() RequestAuthenticationSpecPatchPtrOutput {
	return o
}

func (o RequestAuthenticationSpecPatchPtrOutput) ToRequestAuthenticationSpecPatchPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecPatchPtrOutput {
	return o
}

func (o RequestAuthenticationSpecPatchPtrOutput) Elem() RequestAuthenticationSpecPatchOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecPatch) RequestAuthenticationSpecPatch {
		if v != nil {
			return *v
		}
		var ret RequestAuthenticationSpecPatch
		return ret
	}).(RequestAuthenticationSpecPatchOutput)
}

// Define the list of JWTs that can be validated at the selected workloads' proxy.
func (o RequestAuthenticationSpecPatchPtrOutput) JwtRules() RequestAuthenticationSpecJwtRulesPatchArrayOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecPatch) []RequestAuthenticationSpecJwtRulesPatch {
		if v == nil {
			return nil
		}
		return v.JwtRules
	}).(RequestAuthenticationSpecJwtRulesPatchArrayOutput)
}

func (o RequestAuthenticationSpecPatchPtrOutput) Selector() RequestAuthenticationSpecSelectorPatchPtrOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecPatch) *RequestAuthenticationSpecSelectorPatch {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(RequestAuthenticationSpecSelectorPatchPtrOutput)
}

func (o RequestAuthenticationSpecPatchPtrOutput) TargetRef() RequestAuthenticationSpecTargetRefPatchPtrOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecPatch) *RequestAuthenticationSpecTargetRefPatch {
		if v == nil {
			return nil
		}
		return v.TargetRef
	}).(RequestAuthenticationSpecTargetRefPatchPtrOutput)
}

// Optional.
func (o RequestAuthenticationSpecPatchPtrOutput) TargetRefs() RequestAuthenticationSpecTargetRefsPatchArrayOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecPatch) []RequestAuthenticationSpecTargetRefsPatch {
		if v == nil {
			return nil
		}
		return v.TargetRefs
	}).(RequestAuthenticationSpecTargetRefsPatchArrayOutput)
}

// Optional.
type RequestAuthenticationSpecSelector struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// RequestAuthenticationSpecSelectorInput is an input type that accepts RequestAuthenticationSpecSelectorArgs and RequestAuthenticationSpecSelectorOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecSelectorInput` via:
//
//	RequestAuthenticationSpecSelectorArgs{...}
type RequestAuthenticationSpecSelectorInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecSelectorOutput() RequestAuthenticationSpecSelectorOutput
	ToRequestAuthenticationSpecSelectorOutputWithContext(context.Context) RequestAuthenticationSpecSelectorOutput
}

// Optional.
type RequestAuthenticationSpecSelectorArgs struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (RequestAuthenticationSpecSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecSelector)(nil)).Elem()
}

func (i RequestAuthenticationSpecSelectorArgs) ToRequestAuthenticationSpecSelectorOutput() RequestAuthenticationSpecSelectorOutput {
	return i.ToRequestAuthenticationSpecSelectorOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecSelectorArgs) ToRequestAuthenticationSpecSelectorOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecSelectorOutput)
}

func (i RequestAuthenticationSpecSelectorArgs) ToRequestAuthenticationSpecSelectorPtrOutput() RequestAuthenticationSpecSelectorPtrOutput {
	return i.ToRequestAuthenticationSpecSelectorPtrOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecSelectorArgs) ToRequestAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecSelectorOutput).ToRequestAuthenticationSpecSelectorPtrOutputWithContext(ctx)
}

// RequestAuthenticationSpecSelectorPtrInput is an input type that accepts RequestAuthenticationSpecSelectorArgs, RequestAuthenticationSpecSelectorPtr and RequestAuthenticationSpecSelectorPtrOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecSelectorPtrInput` via:
//
//	        RequestAuthenticationSpecSelectorArgs{...}
//
//	or:
//
//	        nil
type RequestAuthenticationSpecSelectorPtrInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecSelectorPtrOutput() RequestAuthenticationSpecSelectorPtrOutput
	ToRequestAuthenticationSpecSelectorPtrOutputWithContext(context.Context) RequestAuthenticationSpecSelectorPtrOutput
}

type requestAuthenticationSpecSelectorPtrType RequestAuthenticationSpecSelectorArgs

func RequestAuthenticationSpecSelectorPtr(v *RequestAuthenticationSpecSelectorArgs) RequestAuthenticationSpecSelectorPtrInput {
	return (*requestAuthenticationSpecSelectorPtrType)(v)
}

func (*requestAuthenticationSpecSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationSpecSelector)(nil)).Elem()
}

func (i *requestAuthenticationSpecSelectorPtrType) ToRequestAuthenticationSpecSelectorPtrOutput() RequestAuthenticationSpecSelectorPtrOutput {
	return i.ToRequestAuthenticationSpecSelectorPtrOutputWithContext(context.Background())
}

func (i *requestAuthenticationSpecSelectorPtrType) ToRequestAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecSelectorPtrOutput)
}

// Optional.
type RequestAuthenticationSpecSelectorOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecSelector)(nil)).Elem()
}

func (o RequestAuthenticationSpecSelectorOutput) ToRequestAuthenticationSpecSelectorOutput() RequestAuthenticationSpecSelectorOutput {
	return o
}

func (o RequestAuthenticationSpecSelectorOutput) ToRequestAuthenticationSpecSelectorOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorOutput {
	return o
}

func (o RequestAuthenticationSpecSelectorOutput) ToRequestAuthenticationSpecSelectorPtrOutput() RequestAuthenticationSpecSelectorPtrOutput {
	return o.ToRequestAuthenticationSpecSelectorPtrOutputWithContext(context.Background())
}

func (o RequestAuthenticationSpecSelectorOutput) ToRequestAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestAuthenticationSpecSelector) *RequestAuthenticationSpecSelector {
		return &v
	}).(RequestAuthenticationSpecSelectorPtrOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o RequestAuthenticationSpecSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type RequestAuthenticationSpecSelectorPtrOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationSpecSelector)(nil)).Elem()
}

func (o RequestAuthenticationSpecSelectorPtrOutput) ToRequestAuthenticationSpecSelectorPtrOutput() RequestAuthenticationSpecSelectorPtrOutput {
	return o
}

func (o RequestAuthenticationSpecSelectorPtrOutput) ToRequestAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorPtrOutput {
	return o
}

func (o RequestAuthenticationSpecSelectorPtrOutput) Elem() RequestAuthenticationSpecSelectorOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecSelector) RequestAuthenticationSpecSelector {
		if v != nil {
			return *v
		}
		var ret RequestAuthenticationSpecSelector
		return ret
	}).(RequestAuthenticationSpecSelectorOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o RequestAuthenticationSpecSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// Optional.
type RequestAuthenticationSpecSelectorPatch struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// RequestAuthenticationSpecSelectorPatchInput is an input type that accepts RequestAuthenticationSpecSelectorPatchArgs and RequestAuthenticationSpecSelectorPatchOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecSelectorPatchInput` via:
//
//	RequestAuthenticationSpecSelectorPatchArgs{...}
type RequestAuthenticationSpecSelectorPatchInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecSelectorPatchOutput() RequestAuthenticationSpecSelectorPatchOutput
	ToRequestAuthenticationSpecSelectorPatchOutputWithContext(context.Context) RequestAuthenticationSpecSelectorPatchOutput
}

// Optional.
type RequestAuthenticationSpecSelectorPatchArgs struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (RequestAuthenticationSpecSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecSelectorPatch)(nil)).Elem()
}

func (i RequestAuthenticationSpecSelectorPatchArgs) ToRequestAuthenticationSpecSelectorPatchOutput() RequestAuthenticationSpecSelectorPatchOutput {
	return i.ToRequestAuthenticationSpecSelectorPatchOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecSelectorPatchArgs) ToRequestAuthenticationSpecSelectorPatchOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecSelectorPatchOutput)
}

func (i RequestAuthenticationSpecSelectorPatchArgs) ToRequestAuthenticationSpecSelectorPatchPtrOutput() RequestAuthenticationSpecSelectorPatchPtrOutput {
	return i.ToRequestAuthenticationSpecSelectorPatchPtrOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecSelectorPatchArgs) ToRequestAuthenticationSpecSelectorPatchPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecSelectorPatchOutput).ToRequestAuthenticationSpecSelectorPatchPtrOutputWithContext(ctx)
}

// RequestAuthenticationSpecSelectorPatchPtrInput is an input type that accepts RequestAuthenticationSpecSelectorPatchArgs, RequestAuthenticationSpecSelectorPatchPtr and RequestAuthenticationSpecSelectorPatchPtrOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecSelectorPatchPtrInput` via:
//
//	        RequestAuthenticationSpecSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type RequestAuthenticationSpecSelectorPatchPtrInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecSelectorPatchPtrOutput() RequestAuthenticationSpecSelectorPatchPtrOutput
	ToRequestAuthenticationSpecSelectorPatchPtrOutputWithContext(context.Context) RequestAuthenticationSpecSelectorPatchPtrOutput
}

type requestAuthenticationSpecSelectorPatchPtrType RequestAuthenticationSpecSelectorPatchArgs

func RequestAuthenticationSpecSelectorPatchPtr(v *RequestAuthenticationSpecSelectorPatchArgs) RequestAuthenticationSpecSelectorPatchPtrInput {
	return (*requestAuthenticationSpecSelectorPatchPtrType)(v)
}

func (*requestAuthenticationSpecSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationSpecSelectorPatch)(nil)).Elem()
}

func (i *requestAuthenticationSpecSelectorPatchPtrType) ToRequestAuthenticationSpecSelectorPatchPtrOutput() RequestAuthenticationSpecSelectorPatchPtrOutput {
	return i.ToRequestAuthenticationSpecSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *requestAuthenticationSpecSelectorPatchPtrType) ToRequestAuthenticationSpecSelectorPatchPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecSelectorPatchPtrOutput)
}

// Optional.
type RequestAuthenticationSpecSelectorPatchOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecSelectorPatch)(nil)).Elem()
}

func (o RequestAuthenticationSpecSelectorPatchOutput) ToRequestAuthenticationSpecSelectorPatchOutput() RequestAuthenticationSpecSelectorPatchOutput {
	return o
}

func (o RequestAuthenticationSpecSelectorPatchOutput) ToRequestAuthenticationSpecSelectorPatchOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorPatchOutput {
	return o
}

func (o RequestAuthenticationSpecSelectorPatchOutput) ToRequestAuthenticationSpecSelectorPatchPtrOutput() RequestAuthenticationSpecSelectorPatchPtrOutput {
	return o.ToRequestAuthenticationSpecSelectorPatchPtrOutputWithContext(context.Background())
}

func (o RequestAuthenticationSpecSelectorPatchOutput) ToRequestAuthenticationSpecSelectorPatchPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestAuthenticationSpecSelectorPatch) *RequestAuthenticationSpecSelectorPatch {
		return &v
	}).(RequestAuthenticationSpecSelectorPatchPtrOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o RequestAuthenticationSpecSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecSelectorPatch) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type RequestAuthenticationSpecSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationSpecSelectorPatch)(nil)).Elem()
}

func (o RequestAuthenticationSpecSelectorPatchPtrOutput) ToRequestAuthenticationSpecSelectorPatchPtrOutput() RequestAuthenticationSpecSelectorPatchPtrOutput {
	return o
}

func (o RequestAuthenticationSpecSelectorPatchPtrOutput) ToRequestAuthenticationSpecSelectorPatchPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorPatchPtrOutput {
	return o
}

func (o RequestAuthenticationSpecSelectorPatchPtrOutput) Elem() RequestAuthenticationSpecSelectorPatchOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecSelectorPatch) RequestAuthenticationSpecSelectorPatch {
		if v != nil {
			return *v
		}
		var ret RequestAuthenticationSpecSelectorPatch
		return ret
	}).(RequestAuthenticationSpecSelectorPatchOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o RequestAuthenticationSpecSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type RequestAuthenticationSpecTargetRef struct {
	// group is the group of the target resource.
	Group *string `pulumi:"group"`
	// kind is kind of the target resource.
	Kind *string `pulumi:"kind"`
	// name is the name of the target resource.
	Name *string `pulumi:"name"`
	// namespace is the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// RequestAuthenticationSpecTargetRefInput is an input type that accepts RequestAuthenticationSpecTargetRefArgs and RequestAuthenticationSpecTargetRefOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecTargetRefInput` via:
//
//	RequestAuthenticationSpecTargetRefArgs{...}
type RequestAuthenticationSpecTargetRefInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecTargetRefOutput() RequestAuthenticationSpecTargetRefOutput
	ToRequestAuthenticationSpecTargetRefOutputWithContext(context.Context) RequestAuthenticationSpecTargetRefOutput
}

type RequestAuthenticationSpecTargetRefArgs struct {
	// group is the group of the target resource.
	Group pulumi.StringPtrInput `pulumi:"group"`
	// kind is kind of the target resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// name is the name of the target resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// namespace is the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (RequestAuthenticationSpecTargetRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecTargetRef)(nil)).Elem()
}

func (i RequestAuthenticationSpecTargetRefArgs) ToRequestAuthenticationSpecTargetRefOutput() RequestAuthenticationSpecTargetRefOutput {
	return i.ToRequestAuthenticationSpecTargetRefOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecTargetRefArgs) ToRequestAuthenticationSpecTargetRefOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecTargetRefOutput)
}

func (i RequestAuthenticationSpecTargetRefArgs) ToRequestAuthenticationSpecTargetRefPtrOutput() RequestAuthenticationSpecTargetRefPtrOutput {
	return i.ToRequestAuthenticationSpecTargetRefPtrOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecTargetRefArgs) ToRequestAuthenticationSpecTargetRefPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecTargetRefOutput).ToRequestAuthenticationSpecTargetRefPtrOutputWithContext(ctx)
}

// RequestAuthenticationSpecTargetRefPtrInput is an input type that accepts RequestAuthenticationSpecTargetRefArgs, RequestAuthenticationSpecTargetRefPtr and RequestAuthenticationSpecTargetRefPtrOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecTargetRefPtrInput` via:
//
//	        RequestAuthenticationSpecTargetRefArgs{...}
//
//	or:
//
//	        nil
type RequestAuthenticationSpecTargetRefPtrInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecTargetRefPtrOutput() RequestAuthenticationSpecTargetRefPtrOutput
	ToRequestAuthenticationSpecTargetRefPtrOutputWithContext(context.Context) RequestAuthenticationSpecTargetRefPtrOutput
}

type requestAuthenticationSpecTargetRefPtrType RequestAuthenticationSpecTargetRefArgs

func RequestAuthenticationSpecTargetRefPtr(v *RequestAuthenticationSpecTargetRefArgs) RequestAuthenticationSpecTargetRefPtrInput {
	return (*requestAuthenticationSpecTargetRefPtrType)(v)
}

func (*requestAuthenticationSpecTargetRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationSpecTargetRef)(nil)).Elem()
}

func (i *requestAuthenticationSpecTargetRefPtrType) ToRequestAuthenticationSpecTargetRefPtrOutput() RequestAuthenticationSpecTargetRefPtrOutput {
	return i.ToRequestAuthenticationSpecTargetRefPtrOutputWithContext(context.Background())
}

func (i *requestAuthenticationSpecTargetRefPtrType) ToRequestAuthenticationSpecTargetRefPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecTargetRefPtrOutput)
}

type RequestAuthenticationSpecTargetRefOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecTargetRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecTargetRef)(nil)).Elem()
}

func (o RequestAuthenticationSpecTargetRefOutput) ToRequestAuthenticationSpecTargetRefOutput() RequestAuthenticationSpecTargetRefOutput {
	return o
}

func (o RequestAuthenticationSpecTargetRefOutput) ToRequestAuthenticationSpecTargetRefOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefOutput {
	return o
}

func (o RequestAuthenticationSpecTargetRefOutput) ToRequestAuthenticationSpecTargetRefPtrOutput() RequestAuthenticationSpecTargetRefPtrOutput {
	return o.ToRequestAuthenticationSpecTargetRefPtrOutputWithContext(context.Background())
}

func (o RequestAuthenticationSpecTargetRefOutput) ToRequestAuthenticationSpecTargetRefPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestAuthenticationSpecTargetRef) *RequestAuthenticationSpecTargetRef {
		return &v
	}).(RequestAuthenticationSpecTargetRefPtrOutput)
}

// group is the group of the target resource.
func (o RequestAuthenticationSpecTargetRefOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRef) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// kind is kind of the target resource.
func (o RequestAuthenticationSpecTargetRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// name is the name of the target resource.
func (o RequestAuthenticationSpecTargetRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// namespace is the namespace of the referent.
func (o RequestAuthenticationSpecTargetRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type RequestAuthenticationSpecTargetRefPtrOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecTargetRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationSpecTargetRef)(nil)).Elem()
}

func (o RequestAuthenticationSpecTargetRefPtrOutput) ToRequestAuthenticationSpecTargetRefPtrOutput() RequestAuthenticationSpecTargetRefPtrOutput {
	return o
}

func (o RequestAuthenticationSpecTargetRefPtrOutput) ToRequestAuthenticationSpecTargetRefPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefPtrOutput {
	return o
}

func (o RequestAuthenticationSpecTargetRefPtrOutput) Elem() RequestAuthenticationSpecTargetRefOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecTargetRef) RequestAuthenticationSpecTargetRef {
		if v != nil {
			return *v
		}
		var ret RequestAuthenticationSpecTargetRef
		return ret
	}).(RequestAuthenticationSpecTargetRefOutput)
}

// group is the group of the target resource.
func (o RequestAuthenticationSpecTargetRefPtrOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecTargetRef) *string {
		if v == nil {
			return nil
		}
		return v.Group
	}).(pulumi.StringPtrOutput)
}

// kind is kind of the target resource.
func (o RequestAuthenticationSpecTargetRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecTargetRef) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// name is the name of the target resource.
func (o RequestAuthenticationSpecTargetRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecTargetRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// namespace is the namespace of the referent.
func (o RequestAuthenticationSpecTargetRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecTargetRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type RequestAuthenticationSpecTargetRefPatch struct {
	// group is the group of the target resource.
	Group *string `pulumi:"group"`
	// kind is kind of the target resource.
	Kind *string `pulumi:"kind"`
	// name is the name of the target resource.
	Name *string `pulumi:"name"`
	// namespace is the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// RequestAuthenticationSpecTargetRefPatchInput is an input type that accepts RequestAuthenticationSpecTargetRefPatchArgs and RequestAuthenticationSpecTargetRefPatchOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecTargetRefPatchInput` via:
//
//	RequestAuthenticationSpecTargetRefPatchArgs{...}
type RequestAuthenticationSpecTargetRefPatchInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecTargetRefPatchOutput() RequestAuthenticationSpecTargetRefPatchOutput
	ToRequestAuthenticationSpecTargetRefPatchOutputWithContext(context.Context) RequestAuthenticationSpecTargetRefPatchOutput
}

type RequestAuthenticationSpecTargetRefPatchArgs struct {
	// group is the group of the target resource.
	Group pulumi.StringPtrInput `pulumi:"group"`
	// kind is kind of the target resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// name is the name of the target resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// namespace is the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (RequestAuthenticationSpecTargetRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecTargetRefPatch)(nil)).Elem()
}

func (i RequestAuthenticationSpecTargetRefPatchArgs) ToRequestAuthenticationSpecTargetRefPatchOutput() RequestAuthenticationSpecTargetRefPatchOutput {
	return i.ToRequestAuthenticationSpecTargetRefPatchOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecTargetRefPatchArgs) ToRequestAuthenticationSpecTargetRefPatchOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecTargetRefPatchOutput)
}

func (i RequestAuthenticationSpecTargetRefPatchArgs) ToRequestAuthenticationSpecTargetRefPatchPtrOutput() RequestAuthenticationSpecTargetRefPatchPtrOutput {
	return i.ToRequestAuthenticationSpecTargetRefPatchPtrOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecTargetRefPatchArgs) ToRequestAuthenticationSpecTargetRefPatchPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecTargetRefPatchOutput).ToRequestAuthenticationSpecTargetRefPatchPtrOutputWithContext(ctx)
}

// RequestAuthenticationSpecTargetRefPatchPtrInput is an input type that accepts RequestAuthenticationSpecTargetRefPatchArgs, RequestAuthenticationSpecTargetRefPatchPtr and RequestAuthenticationSpecTargetRefPatchPtrOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecTargetRefPatchPtrInput` via:
//
//	        RequestAuthenticationSpecTargetRefPatchArgs{...}
//
//	or:
//
//	        nil
type RequestAuthenticationSpecTargetRefPatchPtrInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecTargetRefPatchPtrOutput() RequestAuthenticationSpecTargetRefPatchPtrOutput
	ToRequestAuthenticationSpecTargetRefPatchPtrOutputWithContext(context.Context) RequestAuthenticationSpecTargetRefPatchPtrOutput
}

type requestAuthenticationSpecTargetRefPatchPtrType RequestAuthenticationSpecTargetRefPatchArgs

func RequestAuthenticationSpecTargetRefPatchPtr(v *RequestAuthenticationSpecTargetRefPatchArgs) RequestAuthenticationSpecTargetRefPatchPtrInput {
	return (*requestAuthenticationSpecTargetRefPatchPtrType)(v)
}

func (*requestAuthenticationSpecTargetRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationSpecTargetRefPatch)(nil)).Elem()
}

func (i *requestAuthenticationSpecTargetRefPatchPtrType) ToRequestAuthenticationSpecTargetRefPatchPtrOutput() RequestAuthenticationSpecTargetRefPatchPtrOutput {
	return i.ToRequestAuthenticationSpecTargetRefPatchPtrOutputWithContext(context.Background())
}

func (i *requestAuthenticationSpecTargetRefPatchPtrType) ToRequestAuthenticationSpecTargetRefPatchPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecTargetRefPatchPtrOutput)
}

type RequestAuthenticationSpecTargetRefPatchOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecTargetRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecTargetRefPatch)(nil)).Elem()
}

func (o RequestAuthenticationSpecTargetRefPatchOutput) ToRequestAuthenticationSpecTargetRefPatchOutput() RequestAuthenticationSpecTargetRefPatchOutput {
	return o
}

func (o RequestAuthenticationSpecTargetRefPatchOutput) ToRequestAuthenticationSpecTargetRefPatchOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefPatchOutput {
	return o
}

func (o RequestAuthenticationSpecTargetRefPatchOutput) ToRequestAuthenticationSpecTargetRefPatchPtrOutput() RequestAuthenticationSpecTargetRefPatchPtrOutput {
	return o.ToRequestAuthenticationSpecTargetRefPatchPtrOutputWithContext(context.Background())
}

func (o RequestAuthenticationSpecTargetRefPatchOutput) ToRequestAuthenticationSpecTargetRefPatchPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestAuthenticationSpecTargetRefPatch) *RequestAuthenticationSpecTargetRefPatch {
		return &v
	}).(RequestAuthenticationSpecTargetRefPatchPtrOutput)
}

// group is the group of the target resource.
func (o RequestAuthenticationSpecTargetRefPatchOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRefPatch) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// kind is kind of the target resource.
func (o RequestAuthenticationSpecTargetRefPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRefPatch) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// name is the name of the target resource.
func (o RequestAuthenticationSpecTargetRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// namespace is the namespace of the referent.
func (o RequestAuthenticationSpecTargetRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type RequestAuthenticationSpecTargetRefPatchPtrOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecTargetRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationSpecTargetRefPatch)(nil)).Elem()
}

func (o RequestAuthenticationSpecTargetRefPatchPtrOutput) ToRequestAuthenticationSpecTargetRefPatchPtrOutput() RequestAuthenticationSpecTargetRefPatchPtrOutput {
	return o
}

func (o RequestAuthenticationSpecTargetRefPatchPtrOutput) ToRequestAuthenticationSpecTargetRefPatchPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefPatchPtrOutput {
	return o
}

func (o RequestAuthenticationSpecTargetRefPatchPtrOutput) Elem() RequestAuthenticationSpecTargetRefPatchOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecTargetRefPatch) RequestAuthenticationSpecTargetRefPatch {
		if v != nil {
			return *v
		}
		var ret RequestAuthenticationSpecTargetRefPatch
		return ret
	}).(RequestAuthenticationSpecTargetRefPatchOutput)
}

// group is the group of the target resource.
func (o RequestAuthenticationSpecTargetRefPatchPtrOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecTargetRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Group
	}).(pulumi.StringPtrOutput)
}

// kind is kind of the target resource.
func (o RequestAuthenticationSpecTargetRefPatchPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecTargetRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// name is the name of the target resource.
func (o RequestAuthenticationSpecTargetRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecTargetRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// namespace is the namespace of the referent.
func (o RequestAuthenticationSpecTargetRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecTargetRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type RequestAuthenticationSpecTargetRefs struct {
	// group is the group of the target resource.
	Group *string `pulumi:"group"`
	// kind is kind of the target resource.
	Kind *string `pulumi:"kind"`
	// name is the name of the target resource.
	Name *string `pulumi:"name"`
	// namespace is the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// RequestAuthenticationSpecTargetRefsInput is an input type that accepts RequestAuthenticationSpecTargetRefsArgs and RequestAuthenticationSpecTargetRefsOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecTargetRefsInput` via:
//
//	RequestAuthenticationSpecTargetRefsArgs{...}
type RequestAuthenticationSpecTargetRefsInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecTargetRefsOutput() RequestAuthenticationSpecTargetRefsOutput
	ToRequestAuthenticationSpecTargetRefsOutputWithContext(context.Context) RequestAuthenticationSpecTargetRefsOutput
}

type RequestAuthenticationSpecTargetRefsArgs struct {
	// group is the group of the target resource.
	Group pulumi.StringPtrInput `pulumi:"group"`
	// kind is kind of the target resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// name is the name of the target resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// namespace is the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (RequestAuthenticationSpecTargetRefsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecTargetRefs)(nil)).Elem()
}

func (i RequestAuthenticationSpecTargetRefsArgs) ToRequestAuthenticationSpecTargetRefsOutput() RequestAuthenticationSpecTargetRefsOutput {
	return i.ToRequestAuthenticationSpecTargetRefsOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecTargetRefsArgs) ToRequestAuthenticationSpecTargetRefsOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecTargetRefsOutput)
}

// RequestAuthenticationSpecTargetRefsArrayInput is an input type that accepts RequestAuthenticationSpecTargetRefsArray and RequestAuthenticationSpecTargetRefsArrayOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecTargetRefsArrayInput` via:
//
//	RequestAuthenticationSpecTargetRefsArray{ RequestAuthenticationSpecTargetRefsArgs{...} }
type RequestAuthenticationSpecTargetRefsArrayInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecTargetRefsArrayOutput() RequestAuthenticationSpecTargetRefsArrayOutput
	ToRequestAuthenticationSpecTargetRefsArrayOutputWithContext(context.Context) RequestAuthenticationSpecTargetRefsArrayOutput
}

type RequestAuthenticationSpecTargetRefsArray []RequestAuthenticationSpecTargetRefsInput

func (RequestAuthenticationSpecTargetRefsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecTargetRefs)(nil)).Elem()
}

func (i RequestAuthenticationSpecTargetRefsArray) ToRequestAuthenticationSpecTargetRefsArrayOutput() RequestAuthenticationSpecTargetRefsArrayOutput {
	return i.ToRequestAuthenticationSpecTargetRefsArrayOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecTargetRefsArray) ToRequestAuthenticationSpecTargetRefsArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecTargetRefsArrayOutput)
}

type RequestAuthenticationSpecTargetRefsOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecTargetRefsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecTargetRefs)(nil)).Elem()
}

func (o RequestAuthenticationSpecTargetRefsOutput) ToRequestAuthenticationSpecTargetRefsOutput() RequestAuthenticationSpecTargetRefsOutput {
	return o
}

func (o RequestAuthenticationSpecTargetRefsOutput) ToRequestAuthenticationSpecTargetRefsOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefsOutput {
	return o
}

// group is the group of the target resource.
func (o RequestAuthenticationSpecTargetRefsOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRefs) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// kind is kind of the target resource.
func (o RequestAuthenticationSpecTargetRefsOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRefs) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// name is the name of the target resource.
func (o RequestAuthenticationSpecTargetRefsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRefs) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// namespace is the namespace of the referent.
func (o RequestAuthenticationSpecTargetRefsOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRefs) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type RequestAuthenticationSpecTargetRefsArrayOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecTargetRefsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecTargetRefs)(nil)).Elem()
}

func (o RequestAuthenticationSpecTargetRefsArrayOutput) ToRequestAuthenticationSpecTargetRefsArrayOutput() RequestAuthenticationSpecTargetRefsArrayOutput {
	return o
}

func (o RequestAuthenticationSpecTargetRefsArrayOutput) ToRequestAuthenticationSpecTargetRefsArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefsArrayOutput {
	return o
}

func (o RequestAuthenticationSpecTargetRefsArrayOutput) Index(i pulumi.IntInput) RequestAuthenticationSpecTargetRefsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RequestAuthenticationSpecTargetRefs {
		return vs[0].([]RequestAuthenticationSpecTargetRefs)[vs[1].(int)]
	}).(RequestAuthenticationSpecTargetRefsOutput)
}

type RequestAuthenticationSpecTargetRefsPatch struct {
	// group is the group of the target resource.
	Group *string `pulumi:"group"`
	// kind is kind of the target resource.
	Kind *string `pulumi:"kind"`
	// name is the name of the target resource.
	Name *string `pulumi:"name"`
	// namespace is the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// RequestAuthenticationSpecTargetRefsPatchInput is an input type that accepts RequestAuthenticationSpecTargetRefsPatchArgs and RequestAuthenticationSpecTargetRefsPatchOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecTargetRefsPatchInput` via:
//
//	RequestAuthenticationSpecTargetRefsPatchArgs{...}
type RequestAuthenticationSpecTargetRefsPatchInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecTargetRefsPatchOutput() RequestAuthenticationSpecTargetRefsPatchOutput
	ToRequestAuthenticationSpecTargetRefsPatchOutputWithContext(context.Context) RequestAuthenticationSpecTargetRefsPatchOutput
}

type RequestAuthenticationSpecTargetRefsPatchArgs struct {
	// group is the group of the target resource.
	Group pulumi.StringPtrInput `pulumi:"group"`
	// kind is kind of the target resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// name is the name of the target resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// namespace is the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (RequestAuthenticationSpecTargetRefsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecTargetRefsPatch)(nil)).Elem()
}

func (i RequestAuthenticationSpecTargetRefsPatchArgs) ToRequestAuthenticationSpecTargetRefsPatchOutput() RequestAuthenticationSpecTargetRefsPatchOutput {
	return i.ToRequestAuthenticationSpecTargetRefsPatchOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecTargetRefsPatchArgs) ToRequestAuthenticationSpecTargetRefsPatchOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecTargetRefsPatchOutput)
}

// RequestAuthenticationSpecTargetRefsPatchArrayInput is an input type that accepts RequestAuthenticationSpecTargetRefsPatchArray and RequestAuthenticationSpecTargetRefsPatchArrayOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecTargetRefsPatchArrayInput` via:
//
//	RequestAuthenticationSpecTargetRefsPatchArray{ RequestAuthenticationSpecTargetRefsPatchArgs{...} }
type RequestAuthenticationSpecTargetRefsPatchArrayInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecTargetRefsPatchArrayOutput() RequestAuthenticationSpecTargetRefsPatchArrayOutput
	ToRequestAuthenticationSpecTargetRefsPatchArrayOutputWithContext(context.Context) RequestAuthenticationSpecTargetRefsPatchArrayOutput
}

type RequestAuthenticationSpecTargetRefsPatchArray []RequestAuthenticationSpecTargetRefsPatchInput

func (RequestAuthenticationSpecTargetRefsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecTargetRefsPatch)(nil)).Elem()
}

func (i RequestAuthenticationSpecTargetRefsPatchArray) ToRequestAuthenticationSpecTargetRefsPatchArrayOutput() RequestAuthenticationSpecTargetRefsPatchArrayOutput {
	return i.ToRequestAuthenticationSpecTargetRefsPatchArrayOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecTargetRefsPatchArray) ToRequestAuthenticationSpecTargetRefsPatchArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecTargetRefsPatchArrayOutput)
}

type RequestAuthenticationSpecTargetRefsPatchOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecTargetRefsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecTargetRefsPatch)(nil)).Elem()
}

func (o RequestAuthenticationSpecTargetRefsPatchOutput) ToRequestAuthenticationSpecTargetRefsPatchOutput() RequestAuthenticationSpecTargetRefsPatchOutput {
	return o
}

func (o RequestAuthenticationSpecTargetRefsPatchOutput) ToRequestAuthenticationSpecTargetRefsPatchOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefsPatchOutput {
	return o
}

// group is the group of the target resource.
func (o RequestAuthenticationSpecTargetRefsPatchOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRefsPatch) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// kind is kind of the target resource.
func (o RequestAuthenticationSpecTargetRefsPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRefsPatch) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// name is the name of the target resource.
func (o RequestAuthenticationSpecTargetRefsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRefsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// namespace is the namespace of the referent.
func (o RequestAuthenticationSpecTargetRefsPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRefsPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type RequestAuthenticationSpecTargetRefsPatchArrayOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecTargetRefsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecTargetRefsPatch)(nil)).Elem()
}

func (o RequestAuthenticationSpecTargetRefsPatchArrayOutput) ToRequestAuthenticationSpecTargetRefsPatchArrayOutput() RequestAuthenticationSpecTargetRefsPatchArrayOutput {
	return o
}

func (o RequestAuthenticationSpecTargetRefsPatchArrayOutput) ToRequestAuthenticationSpecTargetRefsPatchArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefsPatchArrayOutput {
	return o
}

func (o RequestAuthenticationSpecTargetRefsPatchArrayOutput) Index(i pulumi.IntInput) RequestAuthenticationSpecTargetRefsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RequestAuthenticationSpecTargetRefsPatch {
		return vs[0].([]RequestAuthenticationSpecTargetRefsPatch)[vs[1].(int)]
	}).(RequestAuthenticationSpecTargetRefsPatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicyTypeInput)(nil)).Elem(), AuthorizationPolicyTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicyTypeArrayInput)(nil)).Elem(), AuthorizationPolicyTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicyListTypeInput)(nil)).Elem(), AuthorizationPolicyListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicyPatchTypeInput)(nil)).Elem(), AuthorizationPolicyPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecInput)(nil)).Elem(), AuthorizationPolicySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecPtrInput)(nil)).Elem(), AuthorizationPolicySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecPatchInput)(nil)).Elem(), AuthorizationPolicySpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecPatchPtrInput)(nil)).Elem(), AuthorizationPolicySpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecProviderInput)(nil)).Elem(), AuthorizationPolicySpecProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecProviderPtrInput)(nil)).Elem(), AuthorizationPolicySpecProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecProviderPatchInput)(nil)).Elem(), AuthorizationPolicySpecProviderPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecProviderPatchPtrInput)(nil)).Elem(), AuthorizationPolicySpecProviderPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesInput)(nil)).Elem(), AuthorizationPolicySpecRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesArrayInput)(nil)).Elem(), AuthorizationPolicySpecRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesFromInput)(nil)).Elem(), AuthorizationPolicySpecRulesFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesFromArrayInput)(nil)).Elem(), AuthorizationPolicySpecRulesFromArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesFromPatchInput)(nil)).Elem(), AuthorizationPolicySpecRulesFromPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesFromPatchArrayInput)(nil)).Elem(), AuthorizationPolicySpecRulesFromPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesFromSourceInput)(nil)).Elem(), AuthorizationPolicySpecRulesFromSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesFromSourcePtrInput)(nil)).Elem(), AuthorizationPolicySpecRulesFromSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesFromSourcePatchInput)(nil)).Elem(), AuthorizationPolicySpecRulesFromSourcePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesFromSourcePatchPtrInput)(nil)).Elem(), AuthorizationPolicySpecRulesFromSourcePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesPatchInput)(nil)).Elem(), AuthorizationPolicySpecRulesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesPatchArrayInput)(nil)).Elem(), AuthorizationPolicySpecRulesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesToInput)(nil)).Elem(), AuthorizationPolicySpecRulesToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesToArrayInput)(nil)).Elem(), AuthorizationPolicySpecRulesToArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesToOperationInput)(nil)).Elem(), AuthorizationPolicySpecRulesToOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesToOperationPtrInput)(nil)).Elem(), AuthorizationPolicySpecRulesToOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesToOperationPatchInput)(nil)).Elem(), AuthorizationPolicySpecRulesToOperationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesToOperationPatchPtrInput)(nil)).Elem(), AuthorizationPolicySpecRulesToOperationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesToPatchInput)(nil)).Elem(), AuthorizationPolicySpecRulesToPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesToPatchArrayInput)(nil)).Elem(), AuthorizationPolicySpecRulesToPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesWhenInput)(nil)).Elem(), AuthorizationPolicySpecRulesWhenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesWhenArrayInput)(nil)).Elem(), AuthorizationPolicySpecRulesWhenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesWhenPatchInput)(nil)).Elem(), AuthorizationPolicySpecRulesWhenPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecRulesWhenPatchArrayInput)(nil)).Elem(), AuthorizationPolicySpecRulesWhenPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecSelectorInput)(nil)).Elem(), AuthorizationPolicySpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecSelectorPtrInput)(nil)).Elem(), AuthorizationPolicySpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecSelectorPatchInput)(nil)).Elem(), AuthorizationPolicySpecSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecSelectorPatchPtrInput)(nil)).Elem(), AuthorizationPolicySpecSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecTargetRefInput)(nil)).Elem(), AuthorizationPolicySpecTargetRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecTargetRefPtrInput)(nil)).Elem(), AuthorizationPolicySpecTargetRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecTargetRefPatchInput)(nil)).Elem(), AuthorizationPolicySpecTargetRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecTargetRefPatchPtrInput)(nil)).Elem(), AuthorizationPolicySpecTargetRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecTargetRefsInput)(nil)).Elem(), AuthorizationPolicySpecTargetRefsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecTargetRefsArrayInput)(nil)).Elem(), AuthorizationPolicySpecTargetRefsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecTargetRefsPatchInput)(nil)).Elem(), AuthorizationPolicySpecTargetRefsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicySpecTargetRefsPatchArrayInput)(nil)).Elem(), AuthorizationPolicySpecTargetRefsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationTypeInput)(nil)).Elem(), PeerAuthenticationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationTypeArrayInput)(nil)).Elem(), PeerAuthenticationTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationListTypeInput)(nil)).Elem(), PeerAuthenticationListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationPatchTypeInput)(nil)).Elem(), PeerAuthenticationPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecInput)(nil)).Elem(), PeerAuthenticationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecPtrInput)(nil)).Elem(), PeerAuthenticationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecMtlsInput)(nil)).Elem(), PeerAuthenticationSpecMtlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecMtlsPtrInput)(nil)).Elem(), PeerAuthenticationSpecMtlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecMtlsPatchInput)(nil)).Elem(), PeerAuthenticationSpecMtlsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecMtlsPatchPtrInput)(nil)).Elem(), PeerAuthenticationSpecMtlsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecPatchInput)(nil)).Elem(), PeerAuthenticationSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecPatchPtrInput)(nil)).Elem(), PeerAuthenticationSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecSelectorInput)(nil)).Elem(), PeerAuthenticationSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecSelectorPtrInput)(nil)).Elem(), PeerAuthenticationSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecSelectorPatchInput)(nil)).Elem(), PeerAuthenticationSpecSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecSelectorPatchPtrInput)(nil)).Elem(), PeerAuthenticationSpecSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationTypeInput)(nil)).Elem(), RequestAuthenticationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationTypeArrayInput)(nil)).Elem(), RequestAuthenticationTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationListTypeInput)(nil)).Elem(), RequestAuthenticationListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationPatchTypeInput)(nil)).Elem(), RequestAuthenticationPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecInput)(nil)).Elem(), RequestAuthenticationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecPtrInput)(nil)).Elem(), RequestAuthenticationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecJwtRulesInput)(nil)).Elem(), RequestAuthenticationSpecJwtRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecJwtRulesArrayInput)(nil)).Elem(), RequestAuthenticationSpecJwtRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecJwtRulesFromHeadersInput)(nil)).Elem(), RequestAuthenticationSpecJwtRulesFromHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecJwtRulesFromHeadersArrayInput)(nil)).Elem(), RequestAuthenticationSpecJwtRulesFromHeadersArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecJwtRulesFromHeadersPatchInput)(nil)).Elem(), RequestAuthenticationSpecJwtRulesFromHeadersPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecJwtRulesFromHeadersPatchArrayInput)(nil)).Elem(), RequestAuthenticationSpecJwtRulesFromHeadersPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecJwtRulesOutputClaimToHeadersInput)(nil)).Elem(), RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayInput)(nil)).Elem(), RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchInput)(nil)).Elem(), RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayInput)(nil)).Elem(), RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecJwtRulesPatchInput)(nil)).Elem(), RequestAuthenticationSpecJwtRulesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecJwtRulesPatchArrayInput)(nil)).Elem(), RequestAuthenticationSpecJwtRulesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecPatchInput)(nil)).Elem(), RequestAuthenticationSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecPatchPtrInput)(nil)).Elem(), RequestAuthenticationSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecSelectorInput)(nil)).Elem(), RequestAuthenticationSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecSelectorPtrInput)(nil)).Elem(), RequestAuthenticationSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecSelectorPatchInput)(nil)).Elem(), RequestAuthenticationSpecSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecSelectorPatchPtrInput)(nil)).Elem(), RequestAuthenticationSpecSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecTargetRefInput)(nil)).Elem(), RequestAuthenticationSpecTargetRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecTargetRefPtrInput)(nil)).Elem(), RequestAuthenticationSpecTargetRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecTargetRefPatchInput)(nil)).Elem(), RequestAuthenticationSpecTargetRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecTargetRefPatchPtrInput)(nil)).Elem(), RequestAuthenticationSpecTargetRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecTargetRefsInput)(nil)).Elem(), RequestAuthenticationSpecTargetRefsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecTargetRefsArrayInput)(nil)).Elem(), RequestAuthenticationSpecTargetRefsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecTargetRefsPatchInput)(nil)).Elem(), RequestAuthenticationSpecTargetRefsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecTargetRefsPatchArrayInput)(nil)).Elem(), RequestAuthenticationSpecTargetRefsPatchArray{})
	pulumi.RegisterOutputType(AuthorizationPolicyTypeOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicyTypeArrayOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicyListTypeOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicyPatchTypeOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecPtrOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecPatchOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecPatchPtrOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecProviderOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecProviderPtrOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecProviderPatchOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecProviderPatchPtrOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesArrayOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesFromOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesFromArrayOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesFromPatchOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesFromPatchArrayOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesFromSourceOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesFromSourcePtrOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesFromSourcePatchOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesFromSourcePatchPtrOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesPatchOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesPatchArrayOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesToOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesToArrayOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesToOperationOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesToOperationPtrOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesToOperationPatchOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesToOperationPatchPtrOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesToPatchOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesToPatchArrayOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesWhenOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesWhenArrayOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesWhenPatchOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecRulesWhenPatchArrayOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecSelectorOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecSelectorPtrOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecSelectorPatchOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecTargetRefOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecTargetRefPtrOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecTargetRefPatchOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecTargetRefPatchPtrOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecTargetRefsOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecTargetRefsArrayOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecTargetRefsPatchOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecTargetRefsPatchArrayOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationTypeOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationTypeArrayOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationListTypeOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationPatchTypeOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecPtrOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecMtlsOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecMtlsPtrOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecMtlsPatchOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecMtlsPatchPtrOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecPatchOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecSelectorOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecSelectorPtrOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecSelectorPatchOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationTypeOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationTypeArrayOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationListTypeOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationPatchTypeOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecPtrOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecJwtRulesOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecJwtRulesArrayOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecJwtRulesFromHeadersOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecJwtRulesFromHeadersPatchOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecJwtRulesFromHeadersPatchArrayOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecJwtRulesOutputClaimToHeadersPatchArrayOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecJwtRulesPatchOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecJwtRulesPatchArrayOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecPatchOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecSelectorOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecSelectorPtrOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecSelectorPatchOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecTargetRefOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecTargetRefPtrOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecTargetRefPatchOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecTargetRefPatchPtrOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecTargetRefsOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecTargetRefsArrayOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecTargetRefsPatchOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecTargetRefsPatchArrayOutput{})
}
