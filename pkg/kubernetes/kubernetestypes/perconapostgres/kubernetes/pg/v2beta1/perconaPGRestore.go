// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// PerconaPGRestore is the CRD that defines a Percona PostgreSQL Restore
type PerconaPGRestore struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput         `pulumi:"metadata"`
	Spec     PerconaPGRestoreSpecOutput      `pulumi:"spec"`
	Status   PerconaPGRestoreStatusPtrOutput `pulumi:"status"`
}

// NewPerconaPGRestore registers a new resource with the given unique name, arguments, and options.
func NewPerconaPGRestore(ctx *pulumi.Context,
	name string, args *PerconaPGRestoreArgs, opts ...pulumi.ResourceOption) (*PerconaPGRestore, error) {
	if args == nil {
		args = &PerconaPGRestoreArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("pg.percona.com/v2beta1")
	args.Kind = pulumi.StringPtr("PerconaPGRestore")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PerconaPGRestore
	err := ctx.RegisterResource("kubernetes:pg.percona.com/v2beta1:PerconaPGRestore", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPerconaPGRestore gets an existing PerconaPGRestore resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPerconaPGRestore(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PerconaPGRestoreState, opts ...pulumi.ResourceOption) (*PerconaPGRestore, error) {
	var resource PerconaPGRestore
	err := ctx.ReadResource("kubernetes:pg.percona.com/v2beta1:PerconaPGRestore", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PerconaPGRestore resources.
type perconaPGRestoreState struct {
}

type PerconaPGRestoreState struct {
}

func (PerconaPGRestoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaPGRestoreState)(nil)).Elem()
}

type perconaPGRestoreArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta    `pulumi:"metadata"`
	Spec     *PerconaPGRestoreSpec `pulumi:"spec"`
}

// The set of arguments for constructing a PerconaPGRestore resource.
type PerconaPGRestoreArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     PerconaPGRestoreSpecPtrInput
}

func (PerconaPGRestoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaPGRestoreArgs)(nil)).Elem()
}

type PerconaPGRestoreInput interface {
	pulumi.Input

	ToPerconaPGRestoreOutput() PerconaPGRestoreOutput
	ToPerconaPGRestoreOutputWithContext(ctx context.Context) PerconaPGRestoreOutput
}

func (*PerconaPGRestore) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaPGRestore)(nil)).Elem()
}

func (i *PerconaPGRestore) ToPerconaPGRestoreOutput() PerconaPGRestoreOutput {
	return i.ToPerconaPGRestoreOutputWithContext(context.Background())
}

func (i *PerconaPGRestore) ToPerconaPGRestoreOutputWithContext(ctx context.Context) PerconaPGRestoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaPGRestoreOutput)
}

// PerconaPGRestoreArrayInput is an input type that accepts PerconaPGRestoreArray and PerconaPGRestoreArrayOutput values.
// You can construct a concrete instance of `PerconaPGRestoreArrayInput` via:
//
//	PerconaPGRestoreArray{ PerconaPGRestoreArgs{...} }
type PerconaPGRestoreArrayInput interface {
	pulumi.Input

	ToPerconaPGRestoreArrayOutput() PerconaPGRestoreArrayOutput
	ToPerconaPGRestoreArrayOutputWithContext(context.Context) PerconaPGRestoreArrayOutput
}

type PerconaPGRestoreArray []PerconaPGRestoreInput

func (PerconaPGRestoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaPGRestore)(nil)).Elem()
}

func (i PerconaPGRestoreArray) ToPerconaPGRestoreArrayOutput() PerconaPGRestoreArrayOutput {
	return i.ToPerconaPGRestoreArrayOutputWithContext(context.Background())
}

func (i PerconaPGRestoreArray) ToPerconaPGRestoreArrayOutputWithContext(ctx context.Context) PerconaPGRestoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaPGRestoreArrayOutput)
}

// PerconaPGRestoreMapInput is an input type that accepts PerconaPGRestoreMap and PerconaPGRestoreMapOutput values.
// You can construct a concrete instance of `PerconaPGRestoreMapInput` via:
//
//	PerconaPGRestoreMap{ "key": PerconaPGRestoreArgs{...} }
type PerconaPGRestoreMapInput interface {
	pulumi.Input

	ToPerconaPGRestoreMapOutput() PerconaPGRestoreMapOutput
	ToPerconaPGRestoreMapOutputWithContext(context.Context) PerconaPGRestoreMapOutput
}

type PerconaPGRestoreMap map[string]PerconaPGRestoreInput

func (PerconaPGRestoreMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaPGRestore)(nil)).Elem()
}

func (i PerconaPGRestoreMap) ToPerconaPGRestoreMapOutput() PerconaPGRestoreMapOutput {
	return i.ToPerconaPGRestoreMapOutputWithContext(context.Background())
}

func (i PerconaPGRestoreMap) ToPerconaPGRestoreMapOutputWithContext(ctx context.Context) PerconaPGRestoreMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaPGRestoreMapOutput)
}

type PerconaPGRestoreOutput struct{ *pulumi.OutputState }

func (PerconaPGRestoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaPGRestore)(nil)).Elem()
}

func (o PerconaPGRestoreOutput) ToPerconaPGRestoreOutput() PerconaPGRestoreOutput {
	return o
}

func (o PerconaPGRestoreOutput) ToPerconaPGRestoreOutputWithContext(ctx context.Context) PerconaPGRestoreOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PerconaPGRestoreOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *PerconaPGRestore) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PerconaPGRestoreOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *PerconaPGRestore) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PerconaPGRestoreOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *PerconaPGRestore) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o PerconaPGRestoreOutput) Spec() PerconaPGRestoreSpecOutput {
	return o.ApplyT(func(v *PerconaPGRestore) PerconaPGRestoreSpecOutput { return v.Spec }).(PerconaPGRestoreSpecOutput)
}

func (o PerconaPGRestoreOutput) Status() PerconaPGRestoreStatusPtrOutput {
	return o.ApplyT(func(v *PerconaPGRestore) PerconaPGRestoreStatusPtrOutput { return v.Status }).(PerconaPGRestoreStatusPtrOutput)
}

type PerconaPGRestoreArrayOutput struct{ *pulumi.OutputState }

func (PerconaPGRestoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaPGRestore)(nil)).Elem()
}

func (o PerconaPGRestoreArrayOutput) ToPerconaPGRestoreArrayOutput() PerconaPGRestoreArrayOutput {
	return o
}

func (o PerconaPGRestoreArrayOutput) ToPerconaPGRestoreArrayOutputWithContext(ctx context.Context) PerconaPGRestoreArrayOutput {
	return o
}

func (o PerconaPGRestoreArrayOutput) Index(i pulumi.IntInput) PerconaPGRestoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PerconaPGRestore {
		return vs[0].([]*PerconaPGRestore)[vs[1].(int)]
	}).(PerconaPGRestoreOutput)
}

type PerconaPGRestoreMapOutput struct{ *pulumi.OutputState }

func (PerconaPGRestoreMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaPGRestore)(nil)).Elem()
}

func (o PerconaPGRestoreMapOutput) ToPerconaPGRestoreMapOutput() PerconaPGRestoreMapOutput {
	return o
}

func (o PerconaPGRestoreMapOutput) ToPerconaPGRestoreMapOutputWithContext(ctx context.Context) PerconaPGRestoreMapOutput {
	return o
}

func (o PerconaPGRestoreMapOutput) MapIndex(k pulumi.StringInput) PerconaPGRestoreOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PerconaPGRestore {
		return vs[0].(map[string]*PerconaPGRestore)[vs[1].(string)]
	}).(PerconaPGRestoreOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaPGRestoreInput)(nil)).Elem(), &PerconaPGRestore{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaPGRestoreArrayInput)(nil)).Elem(), PerconaPGRestoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaPGRestoreMapInput)(nil)).Elem(), PerconaPGRestoreMap{})
	pulumi.RegisterOutputType(PerconaPGRestoreOutput{})
	pulumi.RegisterOutputType(PerconaPGRestoreArrayOutput{})
	pulumi.RegisterOutputType(PerconaPGRestoreMapOutput{})
}
