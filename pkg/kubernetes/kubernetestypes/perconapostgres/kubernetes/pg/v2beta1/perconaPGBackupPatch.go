// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
// PerconaPGBackup is the CRD that defines a Percona PostgreSQL Backup
type PerconaPGBackupPatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput     `pulumi:"metadata"`
	Spec     PerconaPGBackupSpecPatchPtrOutput   `pulumi:"spec"`
	Status   PerconaPGBackupStatusPatchPtrOutput `pulumi:"status"`
}

// NewPerconaPGBackupPatch registers a new resource with the given unique name, arguments, and options.
func NewPerconaPGBackupPatch(ctx *pulumi.Context,
	name string, args *PerconaPGBackupPatchArgs, opts ...pulumi.ResourceOption) (*PerconaPGBackupPatch, error) {
	if args == nil {
		args = &PerconaPGBackupPatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("pg.percona.com/v2beta1")
	args.Kind = pulumi.StringPtr("PerconaPGBackup")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PerconaPGBackupPatch
	err := ctx.RegisterResource("kubernetes:pg.percona.com/v2beta1:PerconaPGBackupPatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPerconaPGBackupPatch gets an existing PerconaPGBackupPatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPerconaPGBackupPatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PerconaPGBackupPatchState, opts ...pulumi.ResourceOption) (*PerconaPGBackupPatch, error) {
	var resource PerconaPGBackupPatch
	err := ctx.ReadResource("kubernetes:pg.percona.com/v2beta1:PerconaPGBackupPatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PerconaPGBackupPatch resources.
type perconaPGBackupPatchState struct {
}

type PerconaPGBackupPatchState struct {
}

func (PerconaPGBackupPatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaPGBackupPatchState)(nil)).Elem()
}

type perconaPGBackupPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch   `pulumi:"metadata"`
	Spec     *PerconaPGBackupSpecPatch `pulumi:"spec"`
}

// The set of arguments for constructing a PerconaPGBackupPatch resource.
type PerconaPGBackupPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     PerconaPGBackupSpecPatchPtrInput
}

func (PerconaPGBackupPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaPGBackupPatchArgs)(nil)).Elem()
}

type PerconaPGBackupPatchInput interface {
	pulumi.Input

	ToPerconaPGBackupPatchOutput() PerconaPGBackupPatchOutput
	ToPerconaPGBackupPatchOutputWithContext(ctx context.Context) PerconaPGBackupPatchOutput
}

func (*PerconaPGBackupPatch) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaPGBackupPatch)(nil)).Elem()
}

func (i *PerconaPGBackupPatch) ToPerconaPGBackupPatchOutput() PerconaPGBackupPatchOutput {
	return i.ToPerconaPGBackupPatchOutputWithContext(context.Background())
}

func (i *PerconaPGBackupPatch) ToPerconaPGBackupPatchOutputWithContext(ctx context.Context) PerconaPGBackupPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaPGBackupPatchOutput)
}

// PerconaPGBackupPatchArrayInput is an input type that accepts PerconaPGBackupPatchArray and PerconaPGBackupPatchArrayOutput values.
// You can construct a concrete instance of `PerconaPGBackupPatchArrayInput` via:
//
//	PerconaPGBackupPatchArray{ PerconaPGBackupPatchArgs{...} }
type PerconaPGBackupPatchArrayInput interface {
	pulumi.Input

	ToPerconaPGBackupPatchArrayOutput() PerconaPGBackupPatchArrayOutput
	ToPerconaPGBackupPatchArrayOutputWithContext(context.Context) PerconaPGBackupPatchArrayOutput
}

type PerconaPGBackupPatchArray []PerconaPGBackupPatchInput

func (PerconaPGBackupPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaPGBackupPatch)(nil)).Elem()
}

func (i PerconaPGBackupPatchArray) ToPerconaPGBackupPatchArrayOutput() PerconaPGBackupPatchArrayOutput {
	return i.ToPerconaPGBackupPatchArrayOutputWithContext(context.Background())
}

func (i PerconaPGBackupPatchArray) ToPerconaPGBackupPatchArrayOutputWithContext(ctx context.Context) PerconaPGBackupPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaPGBackupPatchArrayOutput)
}

// PerconaPGBackupPatchMapInput is an input type that accepts PerconaPGBackupPatchMap and PerconaPGBackupPatchMapOutput values.
// You can construct a concrete instance of `PerconaPGBackupPatchMapInput` via:
//
//	PerconaPGBackupPatchMap{ "key": PerconaPGBackupPatchArgs{...} }
type PerconaPGBackupPatchMapInput interface {
	pulumi.Input

	ToPerconaPGBackupPatchMapOutput() PerconaPGBackupPatchMapOutput
	ToPerconaPGBackupPatchMapOutputWithContext(context.Context) PerconaPGBackupPatchMapOutput
}

type PerconaPGBackupPatchMap map[string]PerconaPGBackupPatchInput

func (PerconaPGBackupPatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaPGBackupPatch)(nil)).Elem()
}

func (i PerconaPGBackupPatchMap) ToPerconaPGBackupPatchMapOutput() PerconaPGBackupPatchMapOutput {
	return i.ToPerconaPGBackupPatchMapOutputWithContext(context.Background())
}

func (i PerconaPGBackupPatchMap) ToPerconaPGBackupPatchMapOutputWithContext(ctx context.Context) PerconaPGBackupPatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaPGBackupPatchMapOutput)
}

type PerconaPGBackupPatchOutput struct{ *pulumi.OutputState }

func (PerconaPGBackupPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaPGBackupPatch)(nil)).Elem()
}

func (o PerconaPGBackupPatchOutput) ToPerconaPGBackupPatchOutput() PerconaPGBackupPatchOutput {
	return o
}

func (o PerconaPGBackupPatchOutput) ToPerconaPGBackupPatchOutputWithContext(ctx context.Context) PerconaPGBackupPatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PerconaPGBackupPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PerconaPGBackupPatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PerconaPGBackupPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PerconaPGBackupPatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PerconaPGBackupPatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *PerconaPGBackupPatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o PerconaPGBackupPatchOutput) Spec() PerconaPGBackupSpecPatchPtrOutput {
	return o.ApplyT(func(v *PerconaPGBackupPatch) PerconaPGBackupSpecPatchPtrOutput { return v.Spec }).(PerconaPGBackupSpecPatchPtrOutput)
}

func (o PerconaPGBackupPatchOutput) Status() PerconaPGBackupStatusPatchPtrOutput {
	return o.ApplyT(func(v *PerconaPGBackupPatch) PerconaPGBackupStatusPatchPtrOutput { return v.Status }).(PerconaPGBackupStatusPatchPtrOutput)
}

type PerconaPGBackupPatchArrayOutput struct{ *pulumi.OutputState }

func (PerconaPGBackupPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaPGBackupPatch)(nil)).Elem()
}

func (o PerconaPGBackupPatchArrayOutput) ToPerconaPGBackupPatchArrayOutput() PerconaPGBackupPatchArrayOutput {
	return o
}

func (o PerconaPGBackupPatchArrayOutput) ToPerconaPGBackupPatchArrayOutputWithContext(ctx context.Context) PerconaPGBackupPatchArrayOutput {
	return o
}

func (o PerconaPGBackupPatchArrayOutput) Index(i pulumi.IntInput) PerconaPGBackupPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PerconaPGBackupPatch {
		return vs[0].([]*PerconaPGBackupPatch)[vs[1].(int)]
	}).(PerconaPGBackupPatchOutput)
}

type PerconaPGBackupPatchMapOutput struct{ *pulumi.OutputState }

func (PerconaPGBackupPatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaPGBackupPatch)(nil)).Elem()
}

func (o PerconaPGBackupPatchMapOutput) ToPerconaPGBackupPatchMapOutput() PerconaPGBackupPatchMapOutput {
	return o
}

func (o PerconaPGBackupPatchMapOutput) ToPerconaPGBackupPatchMapOutputWithContext(ctx context.Context) PerconaPGBackupPatchMapOutput {
	return o
}

func (o PerconaPGBackupPatchMapOutput) MapIndex(k pulumi.StringInput) PerconaPGBackupPatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PerconaPGBackupPatch {
		return vs[0].(map[string]*PerconaPGBackupPatch)[vs[1].(string)]
	}).(PerconaPGBackupPatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaPGBackupPatchInput)(nil)).Elem(), &PerconaPGBackupPatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaPGBackupPatchArrayInput)(nil)).Elem(), PerconaPGBackupPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaPGBackupPatchMapInput)(nil)).Elem(), PerconaPGBackupPatchMap{})
	pulumi.RegisterOutputType(PerconaPGBackupPatchOutput{})
	pulumi.RegisterOutputType(PerconaPGBackupPatchArrayOutput{})
	pulumi.RegisterOutputType(PerconaPGBackupPatchMapOutput{})
}
