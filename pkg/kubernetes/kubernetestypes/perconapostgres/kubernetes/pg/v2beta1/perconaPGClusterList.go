// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2beta1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// PerconaPGClusterList is a list of PerconaPGCluster
type PerconaPGClusterList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of perconapgclusters. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PerconaPGClusterTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewPerconaPGClusterList registers a new resource with the given unique name, arguments, and options.
func NewPerconaPGClusterList(ctx *pulumi.Context,
	name string, args *PerconaPGClusterListArgs, opts ...pulumi.ResourceOption) (*PerconaPGClusterList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("pg.percona.com/v2beta1")
	args.Kind = pulumi.StringPtr("PerconaPGClusterList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PerconaPGClusterList
	err := ctx.RegisterResource("kubernetes:pg.percona.com/v2beta1:PerconaPGClusterList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPerconaPGClusterList gets an existing PerconaPGClusterList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPerconaPGClusterList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PerconaPGClusterListState, opts ...pulumi.ResourceOption) (*PerconaPGClusterList, error) {
	var resource PerconaPGClusterList
	err := ctx.ReadResource("kubernetes:pg.percona.com/v2beta1:PerconaPGClusterList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PerconaPGClusterList resources.
type perconaPGClusterListState struct {
}

type PerconaPGClusterListState struct {
}

func (PerconaPGClusterListState) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaPGClusterListState)(nil)).Elem()
}

type perconaPGClusterListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of perconapgclusters. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []PerconaPGClusterType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a PerconaPGClusterList resource.
type PerconaPGClusterListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of perconapgclusters. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PerconaPGClusterTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (PerconaPGClusterListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaPGClusterListArgs)(nil)).Elem()
}

type PerconaPGClusterListInput interface {
	pulumi.Input

	ToPerconaPGClusterListOutput() PerconaPGClusterListOutput
	ToPerconaPGClusterListOutputWithContext(ctx context.Context) PerconaPGClusterListOutput
}

func (*PerconaPGClusterList) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaPGClusterList)(nil)).Elem()
}

func (i *PerconaPGClusterList) ToPerconaPGClusterListOutput() PerconaPGClusterListOutput {
	return i.ToPerconaPGClusterListOutputWithContext(context.Background())
}

func (i *PerconaPGClusterList) ToPerconaPGClusterListOutputWithContext(ctx context.Context) PerconaPGClusterListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaPGClusterListOutput)
}

// PerconaPGClusterListArrayInput is an input type that accepts PerconaPGClusterListArray and PerconaPGClusterListArrayOutput values.
// You can construct a concrete instance of `PerconaPGClusterListArrayInput` via:
//
//	PerconaPGClusterListArray{ PerconaPGClusterListArgs{...} }
type PerconaPGClusterListArrayInput interface {
	pulumi.Input

	ToPerconaPGClusterListArrayOutput() PerconaPGClusterListArrayOutput
	ToPerconaPGClusterListArrayOutputWithContext(context.Context) PerconaPGClusterListArrayOutput
}

type PerconaPGClusterListArray []PerconaPGClusterListInput

func (PerconaPGClusterListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaPGClusterList)(nil)).Elem()
}

func (i PerconaPGClusterListArray) ToPerconaPGClusterListArrayOutput() PerconaPGClusterListArrayOutput {
	return i.ToPerconaPGClusterListArrayOutputWithContext(context.Background())
}

func (i PerconaPGClusterListArray) ToPerconaPGClusterListArrayOutputWithContext(ctx context.Context) PerconaPGClusterListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaPGClusterListArrayOutput)
}

// PerconaPGClusterListMapInput is an input type that accepts PerconaPGClusterListMap and PerconaPGClusterListMapOutput values.
// You can construct a concrete instance of `PerconaPGClusterListMapInput` via:
//
//	PerconaPGClusterListMap{ "key": PerconaPGClusterListArgs{...} }
type PerconaPGClusterListMapInput interface {
	pulumi.Input

	ToPerconaPGClusterListMapOutput() PerconaPGClusterListMapOutput
	ToPerconaPGClusterListMapOutputWithContext(context.Context) PerconaPGClusterListMapOutput
}

type PerconaPGClusterListMap map[string]PerconaPGClusterListInput

func (PerconaPGClusterListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaPGClusterList)(nil)).Elem()
}

func (i PerconaPGClusterListMap) ToPerconaPGClusterListMapOutput() PerconaPGClusterListMapOutput {
	return i.ToPerconaPGClusterListMapOutputWithContext(context.Background())
}

func (i PerconaPGClusterListMap) ToPerconaPGClusterListMapOutputWithContext(ctx context.Context) PerconaPGClusterListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaPGClusterListMapOutput)
}

type PerconaPGClusterListOutput struct{ *pulumi.OutputState }

func (PerconaPGClusterListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaPGClusterList)(nil)).Elem()
}

func (o PerconaPGClusterListOutput) ToPerconaPGClusterListOutput() PerconaPGClusterListOutput {
	return o
}

func (o PerconaPGClusterListOutput) ToPerconaPGClusterListOutputWithContext(ctx context.Context) PerconaPGClusterListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PerconaPGClusterListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *PerconaPGClusterList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of perconapgclusters. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o PerconaPGClusterListOutput) Items() PerconaPGClusterTypeArrayOutput {
	return o.ApplyT(func(v *PerconaPGClusterList) PerconaPGClusterTypeArrayOutput { return v.Items }).(PerconaPGClusterTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PerconaPGClusterListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *PerconaPGClusterList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PerconaPGClusterListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *PerconaPGClusterList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type PerconaPGClusterListArrayOutput struct{ *pulumi.OutputState }

func (PerconaPGClusterListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaPGClusterList)(nil)).Elem()
}

func (o PerconaPGClusterListArrayOutput) ToPerconaPGClusterListArrayOutput() PerconaPGClusterListArrayOutput {
	return o
}

func (o PerconaPGClusterListArrayOutput) ToPerconaPGClusterListArrayOutputWithContext(ctx context.Context) PerconaPGClusterListArrayOutput {
	return o
}

func (o PerconaPGClusterListArrayOutput) Index(i pulumi.IntInput) PerconaPGClusterListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PerconaPGClusterList {
		return vs[0].([]*PerconaPGClusterList)[vs[1].(int)]
	}).(PerconaPGClusterListOutput)
}

type PerconaPGClusterListMapOutput struct{ *pulumi.OutputState }

func (PerconaPGClusterListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaPGClusterList)(nil)).Elem()
}

func (o PerconaPGClusterListMapOutput) ToPerconaPGClusterListMapOutput() PerconaPGClusterListMapOutput {
	return o
}

func (o PerconaPGClusterListMapOutput) ToPerconaPGClusterListMapOutputWithContext(ctx context.Context) PerconaPGClusterListMapOutput {
	return o
}

func (o PerconaPGClusterListMapOutput) MapIndex(k pulumi.StringInput) PerconaPGClusterListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PerconaPGClusterList {
		return vs[0].(map[string]*PerconaPGClusterList)[vs[1].(string)]
	}).(PerconaPGClusterListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaPGClusterListInput)(nil)).Elem(), &PerconaPGClusterList{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaPGClusterListArrayInput)(nil)).Elem(), PerconaPGClusterListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaPGClusterListMapInput)(nil)).Elem(), PerconaPGClusterListMap{})
	pulumi.RegisterOutputType(PerconaPGClusterListOutput{})
	pulumi.RegisterOutputType(PerconaPGClusterListArrayOutput{})
	pulumi.RegisterOutputType(PerconaPGClusterListMapOutput{})
}
