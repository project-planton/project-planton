// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// PerconaPGBackup is the CRD that defines a Percona PostgreSQL Backup
type PerconaPGBackup struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput        `pulumi:"metadata"`
	Spec     PerconaPGBackupSpecOutput      `pulumi:"spec"`
	Status   PerconaPGBackupStatusPtrOutput `pulumi:"status"`
}

// NewPerconaPGBackup registers a new resource with the given unique name, arguments, and options.
func NewPerconaPGBackup(ctx *pulumi.Context,
	name string, args *PerconaPGBackupArgs, opts ...pulumi.ResourceOption) (*PerconaPGBackup, error) {
	if args == nil {
		args = &PerconaPGBackupArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("pg.percona.com/v2beta1")
	args.Kind = pulumi.StringPtr("PerconaPGBackup")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PerconaPGBackup
	err := ctx.RegisterResource("kubernetes:pg.percona.com/v2beta1:PerconaPGBackup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPerconaPGBackup gets an existing PerconaPGBackup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPerconaPGBackup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PerconaPGBackupState, opts ...pulumi.ResourceOption) (*PerconaPGBackup, error) {
	var resource PerconaPGBackup
	err := ctx.ReadResource("kubernetes:pg.percona.com/v2beta1:PerconaPGBackup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PerconaPGBackup resources.
type perconaPGBackupState struct {
}

type PerconaPGBackupState struct {
}

func (PerconaPGBackupState) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaPGBackupState)(nil)).Elem()
}

type perconaPGBackupArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta   `pulumi:"metadata"`
	Spec     *PerconaPGBackupSpec `pulumi:"spec"`
}

// The set of arguments for constructing a PerconaPGBackup resource.
type PerconaPGBackupArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     PerconaPGBackupSpecPtrInput
}

func (PerconaPGBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaPGBackupArgs)(nil)).Elem()
}

type PerconaPGBackupInput interface {
	pulumi.Input

	ToPerconaPGBackupOutput() PerconaPGBackupOutput
	ToPerconaPGBackupOutputWithContext(ctx context.Context) PerconaPGBackupOutput
}

func (*PerconaPGBackup) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaPGBackup)(nil)).Elem()
}

func (i *PerconaPGBackup) ToPerconaPGBackupOutput() PerconaPGBackupOutput {
	return i.ToPerconaPGBackupOutputWithContext(context.Background())
}

func (i *PerconaPGBackup) ToPerconaPGBackupOutputWithContext(ctx context.Context) PerconaPGBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaPGBackupOutput)
}

// PerconaPGBackupArrayInput is an input type that accepts PerconaPGBackupArray and PerconaPGBackupArrayOutput values.
// You can construct a concrete instance of `PerconaPGBackupArrayInput` via:
//
//	PerconaPGBackupArray{ PerconaPGBackupArgs{...} }
type PerconaPGBackupArrayInput interface {
	pulumi.Input

	ToPerconaPGBackupArrayOutput() PerconaPGBackupArrayOutput
	ToPerconaPGBackupArrayOutputWithContext(context.Context) PerconaPGBackupArrayOutput
}

type PerconaPGBackupArray []PerconaPGBackupInput

func (PerconaPGBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaPGBackup)(nil)).Elem()
}

func (i PerconaPGBackupArray) ToPerconaPGBackupArrayOutput() PerconaPGBackupArrayOutput {
	return i.ToPerconaPGBackupArrayOutputWithContext(context.Background())
}

func (i PerconaPGBackupArray) ToPerconaPGBackupArrayOutputWithContext(ctx context.Context) PerconaPGBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaPGBackupArrayOutput)
}

// PerconaPGBackupMapInput is an input type that accepts PerconaPGBackupMap and PerconaPGBackupMapOutput values.
// You can construct a concrete instance of `PerconaPGBackupMapInput` via:
//
//	PerconaPGBackupMap{ "key": PerconaPGBackupArgs{...} }
type PerconaPGBackupMapInput interface {
	pulumi.Input

	ToPerconaPGBackupMapOutput() PerconaPGBackupMapOutput
	ToPerconaPGBackupMapOutputWithContext(context.Context) PerconaPGBackupMapOutput
}

type PerconaPGBackupMap map[string]PerconaPGBackupInput

func (PerconaPGBackupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaPGBackup)(nil)).Elem()
}

func (i PerconaPGBackupMap) ToPerconaPGBackupMapOutput() PerconaPGBackupMapOutput {
	return i.ToPerconaPGBackupMapOutputWithContext(context.Background())
}

func (i PerconaPGBackupMap) ToPerconaPGBackupMapOutputWithContext(ctx context.Context) PerconaPGBackupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaPGBackupMapOutput)
}

type PerconaPGBackupOutput struct{ *pulumi.OutputState }

func (PerconaPGBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaPGBackup)(nil)).Elem()
}

func (o PerconaPGBackupOutput) ToPerconaPGBackupOutput() PerconaPGBackupOutput {
	return o
}

func (o PerconaPGBackupOutput) ToPerconaPGBackupOutputWithContext(ctx context.Context) PerconaPGBackupOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PerconaPGBackupOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *PerconaPGBackup) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PerconaPGBackupOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *PerconaPGBackup) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PerconaPGBackupOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *PerconaPGBackup) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o PerconaPGBackupOutput) Spec() PerconaPGBackupSpecOutput {
	return o.ApplyT(func(v *PerconaPGBackup) PerconaPGBackupSpecOutput { return v.Spec }).(PerconaPGBackupSpecOutput)
}

func (o PerconaPGBackupOutput) Status() PerconaPGBackupStatusPtrOutput {
	return o.ApplyT(func(v *PerconaPGBackup) PerconaPGBackupStatusPtrOutput { return v.Status }).(PerconaPGBackupStatusPtrOutput)
}

type PerconaPGBackupArrayOutput struct{ *pulumi.OutputState }

func (PerconaPGBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaPGBackup)(nil)).Elem()
}

func (o PerconaPGBackupArrayOutput) ToPerconaPGBackupArrayOutput() PerconaPGBackupArrayOutput {
	return o
}

func (o PerconaPGBackupArrayOutput) ToPerconaPGBackupArrayOutputWithContext(ctx context.Context) PerconaPGBackupArrayOutput {
	return o
}

func (o PerconaPGBackupArrayOutput) Index(i pulumi.IntInput) PerconaPGBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PerconaPGBackup {
		return vs[0].([]*PerconaPGBackup)[vs[1].(int)]
	}).(PerconaPGBackupOutput)
}

type PerconaPGBackupMapOutput struct{ *pulumi.OutputState }

func (PerconaPGBackupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaPGBackup)(nil)).Elem()
}

func (o PerconaPGBackupMapOutput) ToPerconaPGBackupMapOutput() PerconaPGBackupMapOutput {
	return o
}

func (o PerconaPGBackupMapOutput) ToPerconaPGBackupMapOutputWithContext(ctx context.Context) PerconaPGBackupMapOutput {
	return o
}

func (o PerconaPGBackupMapOutput) MapIndex(k pulumi.StringInput) PerconaPGBackupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PerconaPGBackup {
		return vs[0].(map[string]*PerconaPGBackup)[vs[1].(string)]
	}).(PerconaPGBackupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaPGBackupInput)(nil)).Elem(), &PerconaPGBackup{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaPGBackupArrayInput)(nil)).Elem(), PerconaPGBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaPGBackupMapInput)(nil)).Elem(), PerconaPGBackupMap{})
	pulumi.RegisterOutputType(PerconaPGBackupOutput{})
	pulumi.RegisterOutputType(PerconaPGBackupArrayOutput{})
	pulumi.RegisterOutputType(PerconaPGBackupMapOutput{})
}
