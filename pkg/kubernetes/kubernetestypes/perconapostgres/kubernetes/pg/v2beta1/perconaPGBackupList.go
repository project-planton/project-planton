// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2beta1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// PerconaPGBackupList is a list of PerconaPGBackup
type PerconaPGBackupList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of perconapgbackups. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PerconaPGBackupTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewPerconaPGBackupList registers a new resource with the given unique name, arguments, and options.
func NewPerconaPGBackupList(ctx *pulumi.Context,
	name string, args *PerconaPGBackupListArgs, opts ...pulumi.ResourceOption) (*PerconaPGBackupList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("pg.percona.com/v2beta1")
	args.Kind = pulumi.StringPtr("PerconaPGBackupList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PerconaPGBackupList
	err := ctx.RegisterResource("kubernetes:pg.percona.com/v2beta1:PerconaPGBackupList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPerconaPGBackupList gets an existing PerconaPGBackupList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPerconaPGBackupList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PerconaPGBackupListState, opts ...pulumi.ResourceOption) (*PerconaPGBackupList, error) {
	var resource PerconaPGBackupList
	err := ctx.ReadResource("kubernetes:pg.percona.com/v2beta1:PerconaPGBackupList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PerconaPGBackupList resources.
type perconaPGBackupListState struct {
}

type PerconaPGBackupListState struct {
}

func (PerconaPGBackupListState) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaPGBackupListState)(nil)).Elem()
}

type perconaPGBackupListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of perconapgbackups. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []PerconaPGBackupType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a PerconaPGBackupList resource.
type PerconaPGBackupListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of perconapgbackups. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PerconaPGBackupTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (PerconaPGBackupListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaPGBackupListArgs)(nil)).Elem()
}

type PerconaPGBackupListInput interface {
	pulumi.Input

	ToPerconaPGBackupListOutput() PerconaPGBackupListOutput
	ToPerconaPGBackupListOutputWithContext(ctx context.Context) PerconaPGBackupListOutput
}

func (*PerconaPGBackupList) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaPGBackupList)(nil)).Elem()
}

func (i *PerconaPGBackupList) ToPerconaPGBackupListOutput() PerconaPGBackupListOutput {
	return i.ToPerconaPGBackupListOutputWithContext(context.Background())
}

func (i *PerconaPGBackupList) ToPerconaPGBackupListOutputWithContext(ctx context.Context) PerconaPGBackupListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaPGBackupListOutput)
}

// PerconaPGBackupListArrayInput is an input type that accepts PerconaPGBackupListArray and PerconaPGBackupListArrayOutput values.
// You can construct a concrete instance of `PerconaPGBackupListArrayInput` via:
//
//	PerconaPGBackupListArray{ PerconaPGBackupListArgs{...} }
type PerconaPGBackupListArrayInput interface {
	pulumi.Input

	ToPerconaPGBackupListArrayOutput() PerconaPGBackupListArrayOutput
	ToPerconaPGBackupListArrayOutputWithContext(context.Context) PerconaPGBackupListArrayOutput
}

type PerconaPGBackupListArray []PerconaPGBackupListInput

func (PerconaPGBackupListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaPGBackupList)(nil)).Elem()
}

func (i PerconaPGBackupListArray) ToPerconaPGBackupListArrayOutput() PerconaPGBackupListArrayOutput {
	return i.ToPerconaPGBackupListArrayOutputWithContext(context.Background())
}

func (i PerconaPGBackupListArray) ToPerconaPGBackupListArrayOutputWithContext(ctx context.Context) PerconaPGBackupListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaPGBackupListArrayOutput)
}

// PerconaPGBackupListMapInput is an input type that accepts PerconaPGBackupListMap and PerconaPGBackupListMapOutput values.
// You can construct a concrete instance of `PerconaPGBackupListMapInput` via:
//
//	PerconaPGBackupListMap{ "key": PerconaPGBackupListArgs{...} }
type PerconaPGBackupListMapInput interface {
	pulumi.Input

	ToPerconaPGBackupListMapOutput() PerconaPGBackupListMapOutput
	ToPerconaPGBackupListMapOutputWithContext(context.Context) PerconaPGBackupListMapOutput
}

type PerconaPGBackupListMap map[string]PerconaPGBackupListInput

func (PerconaPGBackupListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaPGBackupList)(nil)).Elem()
}

func (i PerconaPGBackupListMap) ToPerconaPGBackupListMapOutput() PerconaPGBackupListMapOutput {
	return i.ToPerconaPGBackupListMapOutputWithContext(context.Background())
}

func (i PerconaPGBackupListMap) ToPerconaPGBackupListMapOutputWithContext(ctx context.Context) PerconaPGBackupListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaPGBackupListMapOutput)
}

type PerconaPGBackupListOutput struct{ *pulumi.OutputState }

func (PerconaPGBackupListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaPGBackupList)(nil)).Elem()
}

func (o PerconaPGBackupListOutput) ToPerconaPGBackupListOutput() PerconaPGBackupListOutput {
	return o
}

func (o PerconaPGBackupListOutput) ToPerconaPGBackupListOutputWithContext(ctx context.Context) PerconaPGBackupListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PerconaPGBackupListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *PerconaPGBackupList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of perconapgbackups. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o PerconaPGBackupListOutput) Items() PerconaPGBackupTypeArrayOutput {
	return o.ApplyT(func(v *PerconaPGBackupList) PerconaPGBackupTypeArrayOutput { return v.Items }).(PerconaPGBackupTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PerconaPGBackupListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *PerconaPGBackupList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PerconaPGBackupListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *PerconaPGBackupList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type PerconaPGBackupListArrayOutput struct{ *pulumi.OutputState }

func (PerconaPGBackupListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaPGBackupList)(nil)).Elem()
}

func (o PerconaPGBackupListArrayOutput) ToPerconaPGBackupListArrayOutput() PerconaPGBackupListArrayOutput {
	return o
}

func (o PerconaPGBackupListArrayOutput) ToPerconaPGBackupListArrayOutputWithContext(ctx context.Context) PerconaPGBackupListArrayOutput {
	return o
}

func (o PerconaPGBackupListArrayOutput) Index(i pulumi.IntInput) PerconaPGBackupListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PerconaPGBackupList {
		return vs[0].([]*PerconaPGBackupList)[vs[1].(int)]
	}).(PerconaPGBackupListOutput)
}

type PerconaPGBackupListMapOutput struct{ *pulumi.OutputState }

func (PerconaPGBackupListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaPGBackupList)(nil)).Elem()
}

func (o PerconaPGBackupListMapOutput) ToPerconaPGBackupListMapOutput() PerconaPGBackupListMapOutput {
	return o
}

func (o PerconaPGBackupListMapOutput) ToPerconaPGBackupListMapOutputWithContext(ctx context.Context) PerconaPGBackupListMapOutput {
	return o
}

func (o PerconaPGBackupListMapOutput) MapIndex(k pulumi.StringInput) PerconaPGBackupListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PerconaPGBackupList {
		return vs[0].(map[string]*PerconaPGBackupList)[vs[1].(string)]
	}).(PerconaPGBackupListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaPGBackupListInput)(nil)).Elem(), &PerconaPGBackupList{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaPGBackupListArrayInput)(nil)).Elem(), PerconaPGBackupListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaPGBackupListMapInput)(nil)).Elem(), PerconaPGBackupListMap{})
	pulumi.RegisterOutputType(PerconaPGBackupListOutput{})
	pulumi.RegisterOutputType(PerconaPGBackupListArrayOutput{})
	pulumi.RegisterOutputType(PerconaPGBackupListMapOutput{})
}
