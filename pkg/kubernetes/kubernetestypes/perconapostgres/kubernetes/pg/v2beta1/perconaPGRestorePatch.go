// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
// PerconaPGRestore is the CRD that defines a Percona PostgreSQL Restore
type PerconaPGRestorePatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput      `pulumi:"metadata"`
	Spec     PerconaPGRestoreSpecPatchPtrOutput   `pulumi:"spec"`
	Status   PerconaPGRestoreStatusPatchPtrOutput `pulumi:"status"`
}

// NewPerconaPGRestorePatch registers a new resource with the given unique name, arguments, and options.
func NewPerconaPGRestorePatch(ctx *pulumi.Context,
	name string, args *PerconaPGRestorePatchArgs, opts ...pulumi.ResourceOption) (*PerconaPGRestorePatch, error) {
	if args == nil {
		args = &PerconaPGRestorePatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("pg.percona.com/v2beta1")
	args.Kind = pulumi.StringPtr("PerconaPGRestore")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PerconaPGRestorePatch
	err := ctx.RegisterResource("kubernetes:pg.percona.com/v2beta1:PerconaPGRestorePatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPerconaPGRestorePatch gets an existing PerconaPGRestorePatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPerconaPGRestorePatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PerconaPGRestorePatchState, opts ...pulumi.ResourceOption) (*PerconaPGRestorePatch, error) {
	var resource PerconaPGRestorePatch
	err := ctx.ReadResource("kubernetes:pg.percona.com/v2beta1:PerconaPGRestorePatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PerconaPGRestorePatch resources.
type perconaPGRestorePatchState struct {
}

type PerconaPGRestorePatchState struct {
}

func (PerconaPGRestorePatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaPGRestorePatchState)(nil)).Elem()
}

type perconaPGRestorePatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch    `pulumi:"metadata"`
	Spec     *PerconaPGRestoreSpecPatch `pulumi:"spec"`
}

// The set of arguments for constructing a PerconaPGRestorePatch resource.
type PerconaPGRestorePatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     PerconaPGRestoreSpecPatchPtrInput
}

func (PerconaPGRestorePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaPGRestorePatchArgs)(nil)).Elem()
}

type PerconaPGRestorePatchInput interface {
	pulumi.Input

	ToPerconaPGRestorePatchOutput() PerconaPGRestorePatchOutput
	ToPerconaPGRestorePatchOutputWithContext(ctx context.Context) PerconaPGRestorePatchOutput
}

func (*PerconaPGRestorePatch) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaPGRestorePatch)(nil)).Elem()
}

func (i *PerconaPGRestorePatch) ToPerconaPGRestorePatchOutput() PerconaPGRestorePatchOutput {
	return i.ToPerconaPGRestorePatchOutputWithContext(context.Background())
}

func (i *PerconaPGRestorePatch) ToPerconaPGRestorePatchOutputWithContext(ctx context.Context) PerconaPGRestorePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaPGRestorePatchOutput)
}

// PerconaPGRestorePatchArrayInput is an input type that accepts PerconaPGRestorePatchArray and PerconaPGRestorePatchArrayOutput values.
// You can construct a concrete instance of `PerconaPGRestorePatchArrayInput` via:
//
//	PerconaPGRestorePatchArray{ PerconaPGRestorePatchArgs{...} }
type PerconaPGRestorePatchArrayInput interface {
	pulumi.Input

	ToPerconaPGRestorePatchArrayOutput() PerconaPGRestorePatchArrayOutput
	ToPerconaPGRestorePatchArrayOutputWithContext(context.Context) PerconaPGRestorePatchArrayOutput
}

type PerconaPGRestorePatchArray []PerconaPGRestorePatchInput

func (PerconaPGRestorePatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaPGRestorePatch)(nil)).Elem()
}

func (i PerconaPGRestorePatchArray) ToPerconaPGRestorePatchArrayOutput() PerconaPGRestorePatchArrayOutput {
	return i.ToPerconaPGRestorePatchArrayOutputWithContext(context.Background())
}

func (i PerconaPGRestorePatchArray) ToPerconaPGRestorePatchArrayOutputWithContext(ctx context.Context) PerconaPGRestorePatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaPGRestorePatchArrayOutput)
}

// PerconaPGRestorePatchMapInput is an input type that accepts PerconaPGRestorePatchMap and PerconaPGRestorePatchMapOutput values.
// You can construct a concrete instance of `PerconaPGRestorePatchMapInput` via:
//
//	PerconaPGRestorePatchMap{ "key": PerconaPGRestorePatchArgs{...} }
type PerconaPGRestorePatchMapInput interface {
	pulumi.Input

	ToPerconaPGRestorePatchMapOutput() PerconaPGRestorePatchMapOutput
	ToPerconaPGRestorePatchMapOutputWithContext(context.Context) PerconaPGRestorePatchMapOutput
}

type PerconaPGRestorePatchMap map[string]PerconaPGRestorePatchInput

func (PerconaPGRestorePatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaPGRestorePatch)(nil)).Elem()
}

func (i PerconaPGRestorePatchMap) ToPerconaPGRestorePatchMapOutput() PerconaPGRestorePatchMapOutput {
	return i.ToPerconaPGRestorePatchMapOutputWithContext(context.Background())
}

func (i PerconaPGRestorePatchMap) ToPerconaPGRestorePatchMapOutputWithContext(ctx context.Context) PerconaPGRestorePatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaPGRestorePatchMapOutput)
}

type PerconaPGRestorePatchOutput struct{ *pulumi.OutputState }

func (PerconaPGRestorePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaPGRestorePatch)(nil)).Elem()
}

func (o PerconaPGRestorePatchOutput) ToPerconaPGRestorePatchOutput() PerconaPGRestorePatchOutput {
	return o
}

func (o PerconaPGRestorePatchOutput) ToPerconaPGRestorePatchOutputWithContext(ctx context.Context) PerconaPGRestorePatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PerconaPGRestorePatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PerconaPGRestorePatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PerconaPGRestorePatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PerconaPGRestorePatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PerconaPGRestorePatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *PerconaPGRestorePatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o PerconaPGRestorePatchOutput) Spec() PerconaPGRestoreSpecPatchPtrOutput {
	return o.ApplyT(func(v *PerconaPGRestorePatch) PerconaPGRestoreSpecPatchPtrOutput { return v.Spec }).(PerconaPGRestoreSpecPatchPtrOutput)
}

func (o PerconaPGRestorePatchOutput) Status() PerconaPGRestoreStatusPatchPtrOutput {
	return o.ApplyT(func(v *PerconaPGRestorePatch) PerconaPGRestoreStatusPatchPtrOutput { return v.Status }).(PerconaPGRestoreStatusPatchPtrOutput)
}

type PerconaPGRestorePatchArrayOutput struct{ *pulumi.OutputState }

func (PerconaPGRestorePatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaPGRestorePatch)(nil)).Elem()
}

func (o PerconaPGRestorePatchArrayOutput) ToPerconaPGRestorePatchArrayOutput() PerconaPGRestorePatchArrayOutput {
	return o
}

func (o PerconaPGRestorePatchArrayOutput) ToPerconaPGRestorePatchArrayOutputWithContext(ctx context.Context) PerconaPGRestorePatchArrayOutput {
	return o
}

func (o PerconaPGRestorePatchArrayOutput) Index(i pulumi.IntInput) PerconaPGRestorePatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PerconaPGRestorePatch {
		return vs[0].([]*PerconaPGRestorePatch)[vs[1].(int)]
	}).(PerconaPGRestorePatchOutput)
}

type PerconaPGRestorePatchMapOutput struct{ *pulumi.OutputState }

func (PerconaPGRestorePatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaPGRestorePatch)(nil)).Elem()
}

func (o PerconaPGRestorePatchMapOutput) ToPerconaPGRestorePatchMapOutput() PerconaPGRestorePatchMapOutput {
	return o
}

func (o PerconaPGRestorePatchMapOutput) ToPerconaPGRestorePatchMapOutputWithContext(ctx context.Context) PerconaPGRestorePatchMapOutput {
	return o
}

func (o PerconaPGRestorePatchMapOutput) MapIndex(k pulumi.StringInput) PerconaPGRestorePatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PerconaPGRestorePatch {
		return vs[0].(map[string]*PerconaPGRestorePatch)[vs[1].(string)]
	}).(PerconaPGRestorePatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaPGRestorePatchInput)(nil)).Elem(), &PerconaPGRestorePatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaPGRestorePatchArrayInput)(nil)).Elem(), PerconaPGRestorePatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaPGRestorePatchMapInput)(nil)).Elem(), PerconaPGRestorePatchMap{})
	pulumi.RegisterOutputType(PerconaPGRestorePatchOutput{})
	pulumi.RegisterOutputType(PerconaPGRestorePatchArrayOutput{})
	pulumi.RegisterOutputType(PerconaPGRestorePatchMapOutput{})
}
