// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// PostgresClusterList is a list of PostgresCluster
type PostgresClusterList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of postgresclusters. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PostgresClusterTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewPostgresClusterList registers a new resource with the given unique name, arguments, and options.
func NewPostgresClusterList(ctx *pulumi.Context,
	name string, args *PostgresClusterListArgs, opts ...pulumi.ResourceOption) (*PostgresClusterList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("postgres-operator.crunchydata.com/v1beta1")
	args.Kind = pulumi.StringPtr("PostgresClusterList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PostgresClusterList
	err := ctx.RegisterResource("kubernetes:postgres-operator.crunchydata.com/v1beta1:PostgresClusterList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPostgresClusterList gets an existing PostgresClusterList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPostgresClusterList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PostgresClusterListState, opts ...pulumi.ResourceOption) (*PostgresClusterList, error) {
	var resource PostgresClusterList
	err := ctx.ReadResource("kubernetes:postgres-operator.crunchydata.com/v1beta1:PostgresClusterList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PostgresClusterList resources.
type postgresClusterListState struct {
}

type PostgresClusterListState struct {
}

func (PostgresClusterListState) ElementType() reflect.Type {
	return reflect.TypeOf((*postgresClusterListState)(nil)).Elem()
}

type postgresClusterListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of postgresclusters. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []PostgresClusterType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a PostgresClusterList resource.
type PostgresClusterListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of postgresclusters. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PostgresClusterTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (PostgresClusterListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*postgresClusterListArgs)(nil)).Elem()
}

type PostgresClusterListInput interface {
	pulumi.Input

	ToPostgresClusterListOutput() PostgresClusterListOutput
	ToPostgresClusterListOutputWithContext(ctx context.Context) PostgresClusterListOutput
}

func (*PostgresClusterList) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresClusterList)(nil)).Elem()
}

func (i *PostgresClusterList) ToPostgresClusterListOutput() PostgresClusterListOutput {
	return i.ToPostgresClusterListOutputWithContext(context.Background())
}

func (i *PostgresClusterList) ToPostgresClusterListOutputWithContext(ctx context.Context) PostgresClusterListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgresClusterListOutput)
}

// PostgresClusterListArrayInput is an input type that accepts PostgresClusterListArray and PostgresClusterListArrayOutput values.
// You can construct a concrete instance of `PostgresClusterListArrayInput` via:
//
//	PostgresClusterListArray{ PostgresClusterListArgs{...} }
type PostgresClusterListArrayInput interface {
	pulumi.Input

	ToPostgresClusterListArrayOutput() PostgresClusterListArrayOutput
	ToPostgresClusterListArrayOutputWithContext(context.Context) PostgresClusterListArrayOutput
}

type PostgresClusterListArray []PostgresClusterListInput

func (PostgresClusterListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PostgresClusterList)(nil)).Elem()
}

func (i PostgresClusterListArray) ToPostgresClusterListArrayOutput() PostgresClusterListArrayOutput {
	return i.ToPostgresClusterListArrayOutputWithContext(context.Background())
}

func (i PostgresClusterListArray) ToPostgresClusterListArrayOutputWithContext(ctx context.Context) PostgresClusterListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgresClusterListArrayOutput)
}

// PostgresClusterListMapInput is an input type that accepts PostgresClusterListMap and PostgresClusterListMapOutput values.
// You can construct a concrete instance of `PostgresClusterListMapInput` via:
//
//	PostgresClusterListMap{ "key": PostgresClusterListArgs{...} }
type PostgresClusterListMapInput interface {
	pulumi.Input

	ToPostgresClusterListMapOutput() PostgresClusterListMapOutput
	ToPostgresClusterListMapOutputWithContext(context.Context) PostgresClusterListMapOutput
}

type PostgresClusterListMap map[string]PostgresClusterListInput

func (PostgresClusterListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PostgresClusterList)(nil)).Elem()
}

func (i PostgresClusterListMap) ToPostgresClusterListMapOutput() PostgresClusterListMapOutput {
	return i.ToPostgresClusterListMapOutputWithContext(context.Background())
}

func (i PostgresClusterListMap) ToPostgresClusterListMapOutputWithContext(ctx context.Context) PostgresClusterListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgresClusterListMapOutput)
}

type PostgresClusterListOutput struct{ *pulumi.OutputState }

func (PostgresClusterListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresClusterList)(nil)).Elem()
}

func (o PostgresClusterListOutput) ToPostgresClusterListOutput() PostgresClusterListOutput {
	return o
}

func (o PostgresClusterListOutput) ToPostgresClusterListOutputWithContext(ctx context.Context) PostgresClusterListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PostgresClusterListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *PostgresClusterList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of postgresclusters. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o PostgresClusterListOutput) Items() PostgresClusterTypeArrayOutput {
	return o.ApplyT(func(v *PostgresClusterList) PostgresClusterTypeArrayOutput { return v.Items }).(PostgresClusterTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PostgresClusterListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *PostgresClusterList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PostgresClusterListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *PostgresClusterList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type PostgresClusterListArrayOutput struct{ *pulumi.OutputState }

func (PostgresClusterListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PostgresClusterList)(nil)).Elem()
}

func (o PostgresClusterListArrayOutput) ToPostgresClusterListArrayOutput() PostgresClusterListArrayOutput {
	return o
}

func (o PostgresClusterListArrayOutput) ToPostgresClusterListArrayOutputWithContext(ctx context.Context) PostgresClusterListArrayOutput {
	return o
}

func (o PostgresClusterListArrayOutput) Index(i pulumi.IntInput) PostgresClusterListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PostgresClusterList {
		return vs[0].([]*PostgresClusterList)[vs[1].(int)]
	}).(PostgresClusterListOutput)
}

type PostgresClusterListMapOutput struct{ *pulumi.OutputState }

func (PostgresClusterListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PostgresClusterList)(nil)).Elem()
}

func (o PostgresClusterListMapOutput) ToPostgresClusterListMapOutput() PostgresClusterListMapOutput {
	return o
}

func (o PostgresClusterListMapOutput) ToPostgresClusterListMapOutputWithContext(ctx context.Context) PostgresClusterListMapOutput {
	return o
}

func (o PostgresClusterListMapOutput) MapIndex(k pulumi.StringInput) PostgresClusterListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PostgresClusterList {
		return vs[0].(map[string]*PostgresClusterList)[vs[1].(string)]
	}).(PostgresClusterListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PostgresClusterListInput)(nil)).Elem(), &PostgresClusterList{})
	pulumi.RegisterInputType(reflect.TypeOf((*PostgresClusterListArrayInput)(nil)).Elem(), PostgresClusterListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PostgresClusterListMapInput)(nil)).Elem(), PostgresClusterListMap{})
	pulumi.RegisterOutputType(PostgresClusterListOutput{})
	pulumi.RegisterOutputType(PostgresClusterListArrayOutput{})
	pulumi.RegisterOutputType(PostgresClusterListMapOutput{})
}
