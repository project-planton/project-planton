// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// PerconaServerMongoDBRestoreList is a list of PerconaServerMongoDBRestore
type PerconaServerMongoDBRestoreList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of perconaservermongodbrestores. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PerconaServerMongoDBRestoreTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewPerconaServerMongoDBRestoreList registers a new resource with the given unique name, arguments, and options.
func NewPerconaServerMongoDBRestoreList(ctx *pulumi.Context,
	name string, args *PerconaServerMongoDBRestoreListArgs, opts ...pulumi.ResourceOption) (*PerconaServerMongoDBRestoreList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("psmdb.percona.com/v1")
	args.Kind = pulumi.StringPtr("PerconaServerMongoDBRestoreList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PerconaServerMongoDBRestoreList
	err := ctx.RegisterResource("kubernetes:psmdb.percona.com/v1:PerconaServerMongoDBRestoreList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPerconaServerMongoDBRestoreList gets an existing PerconaServerMongoDBRestoreList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPerconaServerMongoDBRestoreList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PerconaServerMongoDBRestoreListState, opts ...pulumi.ResourceOption) (*PerconaServerMongoDBRestoreList, error) {
	var resource PerconaServerMongoDBRestoreList
	err := ctx.ReadResource("kubernetes:psmdb.percona.com/v1:PerconaServerMongoDBRestoreList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PerconaServerMongoDBRestoreList resources.
type perconaServerMongoDBRestoreListState struct {
}

type PerconaServerMongoDBRestoreListState struct {
}

func (PerconaServerMongoDBRestoreListState) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaServerMongoDBRestoreListState)(nil)).Elem()
}

type perconaServerMongoDBRestoreListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of perconaservermongodbrestores. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []PerconaServerMongoDBRestoreType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a PerconaServerMongoDBRestoreList resource.
type PerconaServerMongoDBRestoreListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of perconaservermongodbrestores. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PerconaServerMongoDBRestoreTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (PerconaServerMongoDBRestoreListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaServerMongoDBRestoreListArgs)(nil)).Elem()
}

type PerconaServerMongoDBRestoreListInput interface {
	pulumi.Input

	ToPerconaServerMongoDBRestoreListOutput() PerconaServerMongoDBRestoreListOutput
	ToPerconaServerMongoDBRestoreListOutputWithContext(ctx context.Context) PerconaServerMongoDBRestoreListOutput
}

func (*PerconaServerMongoDBRestoreList) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaServerMongoDBRestoreList)(nil)).Elem()
}

func (i *PerconaServerMongoDBRestoreList) ToPerconaServerMongoDBRestoreListOutput() PerconaServerMongoDBRestoreListOutput {
	return i.ToPerconaServerMongoDBRestoreListOutputWithContext(context.Background())
}

func (i *PerconaServerMongoDBRestoreList) ToPerconaServerMongoDBRestoreListOutputWithContext(ctx context.Context) PerconaServerMongoDBRestoreListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaServerMongoDBRestoreListOutput)
}

// PerconaServerMongoDBRestoreListArrayInput is an input type that accepts PerconaServerMongoDBRestoreListArray and PerconaServerMongoDBRestoreListArrayOutput values.
// You can construct a concrete instance of `PerconaServerMongoDBRestoreListArrayInput` via:
//
//	PerconaServerMongoDBRestoreListArray{ PerconaServerMongoDBRestoreListArgs{...} }
type PerconaServerMongoDBRestoreListArrayInput interface {
	pulumi.Input

	ToPerconaServerMongoDBRestoreListArrayOutput() PerconaServerMongoDBRestoreListArrayOutput
	ToPerconaServerMongoDBRestoreListArrayOutputWithContext(context.Context) PerconaServerMongoDBRestoreListArrayOutput
}

type PerconaServerMongoDBRestoreListArray []PerconaServerMongoDBRestoreListInput

func (PerconaServerMongoDBRestoreListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaServerMongoDBRestoreList)(nil)).Elem()
}

func (i PerconaServerMongoDBRestoreListArray) ToPerconaServerMongoDBRestoreListArrayOutput() PerconaServerMongoDBRestoreListArrayOutput {
	return i.ToPerconaServerMongoDBRestoreListArrayOutputWithContext(context.Background())
}

func (i PerconaServerMongoDBRestoreListArray) ToPerconaServerMongoDBRestoreListArrayOutputWithContext(ctx context.Context) PerconaServerMongoDBRestoreListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaServerMongoDBRestoreListArrayOutput)
}

// PerconaServerMongoDBRestoreListMapInput is an input type that accepts PerconaServerMongoDBRestoreListMap and PerconaServerMongoDBRestoreListMapOutput values.
// You can construct a concrete instance of `PerconaServerMongoDBRestoreListMapInput` via:
//
//	PerconaServerMongoDBRestoreListMap{ "key": PerconaServerMongoDBRestoreListArgs{...} }
type PerconaServerMongoDBRestoreListMapInput interface {
	pulumi.Input

	ToPerconaServerMongoDBRestoreListMapOutput() PerconaServerMongoDBRestoreListMapOutput
	ToPerconaServerMongoDBRestoreListMapOutputWithContext(context.Context) PerconaServerMongoDBRestoreListMapOutput
}

type PerconaServerMongoDBRestoreListMap map[string]PerconaServerMongoDBRestoreListInput

func (PerconaServerMongoDBRestoreListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaServerMongoDBRestoreList)(nil)).Elem()
}

func (i PerconaServerMongoDBRestoreListMap) ToPerconaServerMongoDBRestoreListMapOutput() PerconaServerMongoDBRestoreListMapOutput {
	return i.ToPerconaServerMongoDBRestoreListMapOutputWithContext(context.Background())
}

func (i PerconaServerMongoDBRestoreListMap) ToPerconaServerMongoDBRestoreListMapOutputWithContext(ctx context.Context) PerconaServerMongoDBRestoreListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaServerMongoDBRestoreListMapOutput)
}

type PerconaServerMongoDBRestoreListOutput struct{ *pulumi.OutputState }

func (PerconaServerMongoDBRestoreListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaServerMongoDBRestoreList)(nil)).Elem()
}

func (o PerconaServerMongoDBRestoreListOutput) ToPerconaServerMongoDBRestoreListOutput() PerconaServerMongoDBRestoreListOutput {
	return o
}

func (o PerconaServerMongoDBRestoreListOutput) ToPerconaServerMongoDBRestoreListOutputWithContext(ctx context.Context) PerconaServerMongoDBRestoreListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PerconaServerMongoDBRestoreListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *PerconaServerMongoDBRestoreList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of perconaservermongodbrestores. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o PerconaServerMongoDBRestoreListOutput) Items() PerconaServerMongoDBRestoreTypeArrayOutput {
	return o.ApplyT(func(v *PerconaServerMongoDBRestoreList) PerconaServerMongoDBRestoreTypeArrayOutput { return v.Items }).(PerconaServerMongoDBRestoreTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PerconaServerMongoDBRestoreListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *PerconaServerMongoDBRestoreList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PerconaServerMongoDBRestoreListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *PerconaServerMongoDBRestoreList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type PerconaServerMongoDBRestoreListArrayOutput struct{ *pulumi.OutputState }

func (PerconaServerMongoDBRestoreListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaServerMongoDBRestoreList)(nil)).Elem()
}

func (o PerconaServerMongoDBRestoreListArrayOutput) ToPerconaServerMongoDBRestoreListArrayOutput() PerconaServerMongoDBRestoreListArrayOutput {
	return o
}

func (o PerconaServerMongoDBRestoreListArrayOutput) ToPerconaServerMongoDBRestoreListArrayOutputWithContext(ctx context.Context) PerconaServerMongoDBRestoreListArrayOutput {
	return o
}

func (o PerconaServerMongoDBRestoreListArrayOutput) Index(i pulumi.IntInput) PerconaServerMongoDBRestoreListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PerconaServerMongoDBRestoreList {
		return vs[0].([]*PerconaServerMongoDBRestoreList)[vs[1].(int)]
	}).(PerconaServerMongoDBRestoreListOutput)
}

type PerconaServerMongoDBRestoreListMapOutput struct{ *pulumi.OutputState }

func (PerconaServerMongoDBRestoreListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaServerMongoDBRestoreList)(nil)).Elem()
}

func (o PerconaServerMongoDBRestoreListMapOutput) ToPerconaServerMongoDBRestoreListMapOutput() PerconaServerMongoDBRestoreListMapOutput {
	return o
}

func (o PerconaServerMongoDBRestoreListMapOutput) ToPerconaServerMongoDBRestoreListMapOutputWithContext(ctx context.Context) PerconaServerMongoDBRestoreListMapOutput {
	return o
}

func (o PerconaServerMongoDBRestoreListMapOutput) MapIndex(k pulumi.StringInput) PerconaServerMongoDBRestoreListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PerconaServerMongoDBRestoreList {
		return vs[0].(map[string]*PerconaServerMongoDBRestoreList)[vs[1].(string)]
	}).(PerconaServerMongoDBRestoreListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaServerMongoDBRestoreListInput)(nil)).Elem(), &PerconaServerMongoDBRestoreList{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaServerMongoDBRestoreListArrayInput)(nil)).Elem(), PerconaServerMongoDBRestoreListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaServerMongoDBRestoreListMapInput)(nil)).Elem(), PerconaServerMongoDBRestoreListMap{})
	pulumi.RegisterOutputType(PerconaServerMongoDBRestoreListOutput{})
	pulumi.RegisterOutputType(PerconaServerMongoDBRestoreListArrayOutput{})
	pulumi.RegisterOutputType(PerconaServerMongoDBRestoreListMapOutput{})
}
