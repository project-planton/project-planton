// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PerconaServerMongoDBRestore struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput                    `pulumi:"metadata"`
	Spec     PerconaServerMongoDBRestoreSpecOutput      `pulumi:"spec"`
	Status   PerconaServerMongoDBRestoreStatusPtrOutput `pulumi:"status"`
}

// NewPerconaServerMongoDBRestore registers a new resource with the given unique name, arguments, and options.
func NewPerconaServerMongoDBRestore(ctx *pulumi.Context,
	name string, args *PerconaServerMongoDBRestoreArgs, opts ...pulumi.ResourceOption) (*PerconaServerMongoDBRestore, error) {
	if args == nil {
		args = &PerconaServerMongoDBRestoreArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("psmdb.percona.com/v1")
	args.Kind = pulumi.StringPtr("PerconaServerMongoDBRestore")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PerconaServerMongoDBRestore
	err := ctx.RegisterResource("kubernetes:psmdb.percona.com/v1:PerconaServerMongoDBRestore", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPerconaServerMongoDBRestore gets an existing PerconaServerMongoDBRestore resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPerconaServerMongoDBRestore(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PerconaServerMongoDBRestoreState, opts ...pulumi.ResourceOption) (*PerconaServerMongoDBRestore, error) {
	var resource PerconaServerMongoDBRestore
	err := ctx.ReadResource("kubernetes:psmdb.percona.com/v1:PerconaServerMongoDBRestore", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PerconaServerMongoDBRestore resources.
type perconaServerMongoDBRestoreState struct {
}

type PerconaServerMongoDBRestoreState struct {
}

func (PerconaServerMongoDBRestoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaServerMongoDBRestoreState)(nil)).Elem()
}

type perconaServerMongoDBRestoreArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta               `pulumi:"metadata"`
	Spec     *PerconaServerMongoDBRestoreSpec `pulumi:"spec"`
}

// The set of arguments for constructing a PerconaServerMongoDBRestore resource.
type PerconaServerMongoDBRestoreArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     PerconaServerMongoDBRestoreSpecPtrInput
}

func (PerconaServerMongoDBRestoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaServerMongoDBRestoreArgs)(nil)).Elem()
}

type PerconaServerMongoDBRestoreInput interface {
	pulumi.Input

	ToPerconaServerMongoDBRestoreOutput() PerconaServerMongoDBRestoreOutput
	ToPerconaServerMongoDBRestoreOutputWithContext(ctx context.Context) PerconaServerMongoDBRestoreOutput
}

func (*PerconaServerMongoDBRestore) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaServerMongoDBRestore)(nil)).Elem()
}

func (i *PerconaServerMongoDBRestore) ToPerconaServerMongoDBRestoreOutput() PerconaServerMongoDBRestoreOutput {
	return i.ToPerconaServerMongoDBRestoreOutputWithContext(context.Background())
}

func (i *PerconaServerMongoDBRestore) ToPerconaServerMongoDBRestoreOutputWithContext(ctx context.Context) PerconaServerMongoDBRestoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaServerMongoDBRestoreOutput)
}

// PerconaServerMongoDBRestoreArrayInput is an input type that accepts PerconaServerMongoDBRestoreArray and PerconaServerMongoDBRestoreArrayOutput values.
// You can construct a concrete instance of `PerconaServerMongoDBRestoreArrayInput` via:
//
//	PerconaServerMongoDBRestoreArray{ PerconaServerMongoDBRestoreArgs{...} }
type PerconaServerMongoDBRestoreArrayInput interface {
	pulumi.Input

	ToPerconaServerMongoDBRestoreArrayOutput() PerconaServerMongoDBRestoreArrayOutput
	ToPerconaServerMongoDBRestoreArrayOutputWithContext(context.Context) PerconaServerMongoDBRestoreArrayOutput
}

type PerconaServerMongoDBRestoreArray []PerconaServerMongoDBRestoreInput

func (PerconaServerMongoDBRestoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaServerMongoDBRestore)(nil)).Elem()
}

func (i PerconaServerMongoDBRestoreArray) ToPerconaServerMongoDBRestoreArrayOutput() PerconaServerMongoDBRestoreArrayOutput {
	return i.ToPerconaServerMongoDBRestoreArrayOutputWithContext(context.Background())
}

func (i PerconaServerMongoDBRestoreArray) ToPerconaServerMongoDBRestoreArrayOutputWithContext(ctx context.Context) PerconaServerMongoDBRestoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaServerMongoDBRestoreArrayOutput)
}

// PerconaServerMongoDBRestoreMapInput is an input type that accepts PerconaServerMongoDBRestoreMap and PerconaServerMongoDBRestoreMapOutput values.
// You can construct a concrete instance of `PerconaServerMongoDBRestoreMapInput` via:
//
//	PerconaServerMongoDBRestoreMap{ "key": PerconaServerMongoDBRestoreArgs{...} }
type PerconaServerMongoDBRestoreMapInput interface {
	pulumi.Input

	ToPerconaServerMongoDBRestoreMapOutput() PerconaServerMongoDBRestoreMapOutput
	ToPerconaServerMongoDBRestoreMapOutputWithContext(context.Context) PerconaServerMongoDBRestoreMapOutput
}

type PerconaServerMongoDBRestoreMap map[string]PerconaServerMongoDBRestoreInput

func (PerconaServerMongoDBRestoreMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaServerMongoDBRestore)(nil)).Elem()
}

func (i PerconaServerMongoDBRestoreMap) ToPerconaServerMongoDBRestoreMapOutput() PerconaServerMongoDBRestoreMapOutput {
	return i.ToPerconaServerMongoDBRestoreMapOutputWithContext(context.Background())
}

func (i PerconaServerMongoDBRestoreMap) ToPerconaServerMongoDBRestoreMapOutputWithContext(ctx context.Context) PerconaServerMongoDBRestoreMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaServerMongoDBRestoreMapOutput)
}

type PerconaServerMongoDBRestoreOutput struct{ *pulumi.OutputState }

func (PerconaServerMongoDBRestoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaServerMongoDBRestore)(nil)).Elem()
}

func (o PerconaServerMongoDBRestoreOutput) ToPerconaServerMongoDBRestoreOutput() PerconaServerMongoDBRestoreOutput {
	return o
}

func (o PerconaServerMongoDBRestoreOutput) ToPerconaServerMongoDBRestoreOutputWithContext(ctx context.Context) PerconaServerMongoDBRestoreOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PerconaServerMongoDBRestoreOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *PerconaServerMongoDBRestore) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PerconaServerMongoDBRestoreOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *PerconaServerMongoDBRestore) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PerconaServerMongoDBRestoreOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *PerconaServerMongoDBRestore) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o PerconaServerMongoDBRestoreOutput) Spec() PerconaServerMongoDBRestoreSpecOutput {
	return o.ApplyT(func(v *PerconaServerMongoDBRestore) PerconaServerMongoDBRestoreSpecOutput { return v.Spec }).(PerconaServerMongoDBRestoreSpecOutput)
}

func (o PerconaServerMongoDBRestoreOutput) Status() PerconaServerMongoDBRestoreStatusPtrOutput {
	return o.ApplyT(func(v *PerconaServerMongoDBRestore) PerconaServerMongoDBRestoreStatusPtrOutput { return v.Status }).(PerconaServerMongoDBRestoreStatusPtrOutput)
}

type PerconaServerMongoDBRestoreArrayOutput struct{ *pulumi.OutputState }

func (PerconaServerMongoDBRestoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaServerMongoDBRestore)(nil)).Elem()
}

func (o PerconaServerMongoDBRestoreArrayOutput) ToPerconaServerMongoDBRestoreArrayOutput() PerconaServerMongoDBRestoreArrayOutput {
	return o
}

func (o PerconaServerMongoDBRestoreArrayOutput) ToPerconaServerMongoDBRestoreArrayOutputWithContext(ctx context.Context) PerconaServerMongoDBRestoreArrayOutput {
	return o
}

func (o PerconaServerMongoDBRestoreArrayOutput) Index(i pulumi.IntInput) PerconaServerMongoDBRestoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PerconaServerMongoDBRestore {
		return vs[0].([]*PerconaServerMongoDBRestore)[vs[1].(int)]
	}).(PerconaServerMongoDBRestoreOutput)
}

type PerconaServerMongoDBRestoreMapOutput struct{ *pulumi.OutputState }

func (PerconaServerMongoDBRestoreMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaServerMongoDBRestore)(nil)).Elem()
}

func (o PerconaServerMongoDBRestoreMapOutput) ToPerconaServerMongoDBRestoreMapOutput() PerconaServerMongoDBRestoreMapOutput {
	return o
}

func (o PerconaServerMongoDBRestoreMapOutput) ToPerconaServerMongoDBRestoreMapOutputWithContext(ctx context.Context) PerconaServerMongoDBRestoreMapOutput {
	return o
}

func (o PerconaServerMongoDBRestoreMapOutput) MapIndex(k pulumi.StringInput) PerconaServerMongoDBRestoreOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PerconaServerMongoDBRestore {
		return vs[0].(map[string]*PerconaServerMongoDBRestore)[vs[1].(string)]
	}).(PerconaServerMongoDBRestoreOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaServerMongoDBRestoreInput)(nil)).Elem(), &PerconaServerMongoDBRestore{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaServerMongoDBRestoreArrayInput)(nil)).Elem(), PerconaServerMongoDBRestoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaServerMongoDBRestoreMapInput)(nil)).Elem(), PerconaServerMongoDBRestoreMap{})
	pulumi.RegisterOutputType(PerconaServerMongoDBRestoreOutput{})
	pulumi.RegisterOutputType(PerconaServerMongoDBRestoreArrayOutput{})
	pulumi.RegisterOutputType(PerconaServerMongoDBRestoreMapOutput{})
}
