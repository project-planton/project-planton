// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// PerconaServerMongoDBBackupList is a list of PerconaServerMongoDBBackup
type PerconaServerMongoDBBackupList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of perconaservermongodbbackups. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PerconaServerMongoDBBackupTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewPerconaServerMongoDBBackupList registers a new resource with the given unique name, arguments, and options.
func NewPerconaServerMongoDBBackupList(ctx *pulumi.Context,
	name string, args *PerconaServerMongoDBBackupListArgs, opts ...pulumi.ResourceOption) (*PerconaServerMongoDBBackupList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("psmdb.percona.com/v1")
	args.Kind = pulumi.StringPtr("PerconaServerMongoDBBackupList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PerconaServerMongoDBBackupList
	err := ctx.RegisterResource("kubernetes:psmdb.percona.com/v1:PerconaServerMongoDBBackupList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPerconaServerMongoDBBackupList gets an existing PerconaServerMongoDBBackupList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPerconaServerMongoDBBackupList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PerconaServerMongoDBBackupListState, opts ...pulumi.ResourceOption) (*PerconaServerMongoDBBackupList, error) {
	var resource PerconaServerMongoDBBackupList
	err := ctx.ReadResource("kubernetes:psmdb.percona.com/v1:PerconaServerMongoDBBackupList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PerconaServerMongoDBBackupList resources.
type perconaServerMongoDBBackupListState struct {
}

type PerconaServerMongoDBBackupListState struct {
}

func (PerconaServerMongoDBBackupListState) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaServerMongoDBBackupListState)(nil)).Elem()
}

type perconaServerMongoDBBackupListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of perconaservermongodbbackups. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []PerconaServerMongoDBBackupType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a PerconaServerMongoDBBackupList resource.
type PerconaServerMongoDBBackupListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of perconaservermongodbbackups. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PerconaServerMongoDBBackupTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (PerconaServerMongoDBBackupListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaServerMongoDBBackupListArgs)(nil)).Elem()
}

type PerconaServerMongoDBBackupListInput interface {
	pulumi.Input

	ToPerconaServerMongoDBBackupListOutput() PerconaServerMongoDBBackupListOutput
	ToPerconaServerMongoDBBackupListOutputWithContext(ctx context.Context) PerconaServerMongoDBBackupListOutput
}

func (*PerconaServerMongoDBBackupList) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaServerMongoDBBackupList)(nil)).Elem()
}

func (i *PerconaServerMongoDBBackupList) ToPerconaServerMongoDBBackupListOutput() PerconaServerMongoDBBackupListOutput {
	return i.ToPerconaServerMongoDBBackupListOutputWithContext(context.Background())
}

func (i *PerconaServerMongoDBBackupList) ToPerconaServerMongoDBBackupListOutputWithContext(ctx context.Context) PerconaServerMongoDBBackupListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaServerMongoDBBackupListOutput)
}

// PerconaServerMongoDBBackupListArrayInput is an input type that accepts PerconaServerMongoDBBackupListArray and PerconaServerMongoDBBackupListArrayOutput values.
// You can construct a concrete instance of `PerconaServerMongoDBBackupListArrayInput` via:
//
//	PerconaServerMongoDBBackupListArray{ PerconaServerMongoDBBackupListArgs{...} }
type PerconaServerMongoDBBackupListArrayInput interface {
	pulumi.Input

	ToPerconaServerMongoDBBackupListArrayOutput() PerconaServerMongoDBBackupListArrayOutput
	ToPerconaServerMongoDBBackupListArrayOutputWithContext(context.Context) PerconaServerMongoDBBackupListArrayOutput
}

type PerconaServerMongoDBBackupListArray []PerconaServerMongoDBBackupListInput

func (PerconaServerMongoDBBackupListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaServerMongoDBBackupList)(nil)).Elem()
}

func (i PerconaServerMongoDBBackupListArray) ToPerconaServerMongoDBBackupListArrayOutput() PerconaServerMongoDBBackupListArrayOutput {
	return i.ToPerconaServerMongoDBBackupListArrayOutputWithContext(context.Background())
}

func (i PerconaServerMongoDBBackupListArray) ToPerconaServerMongoDBBackupListArrayOutputWithContext(ctx context.Context) PerconaServerMongoDBBackupListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaServerMongoDBBackupListArrayOutput)
}

// PerconaServerMongoDBBackupListMapInput is an input type that accepts PerconaServerMongoDBBackupListMap and PerconaServerMongoDBBackupListMapOutput values.
// You can construct a concrete instance of `PerconaServerMongoDBBackupListMapInput` via:
//
//	PerconaServerMongoDBBackupListMap{ "key": PerconaServerMongoDBBackupListArgs{...} }
type PerconaServerMongoDBBackupListMapInput interface {
	pulumi.Input

	ToPerconaServerMongoDBBackupListMapOutput() PerconaServerMongoDBBackupListMapOutput
	ToPerconaServerMongoDBBackupListMapOutputWithContext(context.Context) PerconaServerMongoDBBackupListMapOutput
}

type PerconaServerMongoDBBackupListMap map[string]PerconaServerMongoDBBackupListInput

func (PerconaServerMongoDBBackupListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaServerMongoDBBackupList)(nil)).Elem()
}

func (i PerconaServerMongoDBBackupListMap) ToPerconaServerMongoDBBackupListMapOutput() PerconaServerMongoDBBackupListMapOutput {
	return i.ToPerconaServerMongoDBBackupListMapOutputWithContext(context.Background())
}

func (i PerconaServerMongoDBBackupListMap) ToPerconaServerMongoDBBackupListMapOutputWithContext(ctx context.Context) PerconaServerMongoDBBackupListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaServerMongoDBBackupListMapOutput)
}

type PerconaServerMongoDBBackupListOutput struct{ *pulumi.OutputState }

func (PerconaServerMongoDBBackupListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaServerMongoDBBackupList)(nil)).Elem()
}

func (o PerconaServerMongoDBBackupListOutput) ToPerconaServerMongoDBBackupListOutput() PerconaServerMongoDBBackupListOutput {
	return o
}

func (o PerconaServerMongoDBBackupListOutput) ToPerconaServerMongoDBBackupListOutputWithContext(ctx context.Context) PerconaServerMongoDBBackupListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PerconaServerMongoDBBackupListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *PerconaServerMongoDBBackupList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of perconaservermongodbbackups. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o PerconaServerMongoDBBackupListOutput) Items() PerconaServerMongoDBBackupTypeArrayOutput {
	return o.ApplyT(func(v *PerconaServerMongoDBBackupList) PerconaServerMongoDBBackupTypeArrayOutput { return v.Items }).(PerconaServerMongoDBBackupTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PerconaServerMongoDBBackupListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *PerconaServerMongoDBBackupList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PerconaServerMongoDBBackupListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *PerconaServerMongoDBBackupList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type PerconaServerMongoDBBackupListArrayOutput struct{ *pulumi.OutputState }

func (PerconaServerMongoDBBackupListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaServerMongoDBBackupList)(nil)).Elem()
}

func (o PerconaServerMongoDBBackupListArrayOutput) ToPerconaServerMongoDBBackupListArrayOutput() PerconaServerMongoDBBackupListArrayOutput {
	return o
}

func (o PerconaServerMongoDBBackupListArrayOutput) ToPerconaServerMongoDBBackupListArrayOutputWithContext(ctx context.Context) PerconaServerMongoDBBackupListArrayOutput {
	return o
}

func (o PerconaServerMongoDBBackupListArrayOutput) Index(i pulumi.IntInput) PerconaServerMongoDBBackupListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PerconaServerMongoDBBackupList {
		return vs[0].([]*PerconaServerMongoDBBackupList)[vs[1].(int)]
	}).(PerconaServerMongoDBBackupListOutput)
}

type PerconaServerMongoDBBackupListMapOutput struct{ *pulumi.OutputState }

func (PerconaServerMongoDBBackupListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaServerMongoDBBackupList)(nil)).Elem()
}

func (o PerconaServerMongoDBBackupListMapOutput) ToPerconaServerMongoDBBackupListMapOutput() PerconaServerMongoDBBackupListMapOutput {
	return o
}

func (o PerconaServerMongoDBBackupListMapOutput) ToPerconaServerMongoDBBackupListMapOutputWithContext(ctx context.Context) PerconaServerMongoDBBackupListMapOutput {
	return o
}

func (o PerconaServerMongoDBBackupListMapOutput) MapIndex(k pulumi.StringInput) PerconaServerMongoDBBackupListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PerconaServerMongoDBBackupList {
		return vs[0].(map[string]*PerconaServerMongoDBBackupList)[vs[1].(string)]
	}).(PerconaServerMongoDBBackupListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaServerMongoDBBackupListInput)(nil)).Elem(), &PerconaServerMongoDBBackupList{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaServerMongoDBBackupListArrayInput)(nil)).Elem(), PerconaServerMongoDBBackupListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaServerMongoDBBackupListMapInput)(nil)).Elem(), PerconaServerMongoDBBackupListMap{})
	pulumi.RegisterOutputType(PerconaServerMongoDBBackupListOutput{})
	pulumi.RegisterOutputType(PerconaServerMongoDBBackupListArrayOutput{})
	pulumi.RegisterOutputType(PerconaServerMongoDBBackupListMapOutput{})
}
