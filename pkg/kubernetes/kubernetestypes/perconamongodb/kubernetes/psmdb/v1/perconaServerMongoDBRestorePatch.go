// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
type PerconaServerMongoDBRestorePatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput                 `pulumi:"metadata"`
	Spec     PerconaServerMongoDBRestoreSpecPatchPtrOutput   `pulumi:"spec"`
	Status   PerconaServerMongoDBRestoreStatusPatchPtrOutput `pulumi:"status"`
}

// NewPerconaServerMongoDBRestorePatch registers a new resource with the given unique name, arguments, and options.
func NewPerconaServerMongoDBRestorePatch(ctx *pulumi.Context,
	name string, args *PerconaServerMongoDBRestorePatchArgs, opts ...pulumi.ResourceOption) (*PerconaServerMongoDBRestorePatch, error) {
	if args == nil {
		args = &PerconaServerMongoDBRestorePatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("psmdb.percona.com/v1")
	args.Kind = pulumi.StringPtr("PerconaServerMongoDBRestore")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PerconaServerMongoDBRestorePatch
	err := ctx.RegisterResource("kubernetes:psmdb.percona.com/v1:PerconaServerMongoDBRestorePatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPerconaServerMongoDBRestorePatch gets an existing PerconaServerMongoDBRestorePatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPerconaServerMongoDBRestorePatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PerconaServerMongoDBRestorePatchState, opts ...pulumi.ResourceOption) (*PerconaServerMongoDBRestorePatch, error) {
	var resource PerconaServerMongoDBRestorePatch
	err := ctx.ReadResource("kubernetes:psmdb.percona.com/v1:PerconaServerMongoDBRestorePatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PerconaServerMongoDBRestorePatch resources.
type perconaServerMongoDBRestorePatchState struct {
}

type PerconaServerMongoDBRestorePatchState struct {
}

func (PerconaServerMongoDBRestorePatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaServerMongoDBRestorePatchState)(nil)).Elem()
}

type perconaServerMongoDBRestorePatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch               `pulumi:"metadata"`
	Spec     *PerconaServerMongoDBRestoreSpecPatch `pulumi:"spec"`
}

// The set of arguments for constructing a PerconaServerMongoDBRestorePatch resource.
type PerconaServerMongoDBRestorePatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     PerconaServerMongoDBRestoreSpecPatchPtrInput
}

func (PerconaServerMongoDBRestorePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*perconaServerMongoDBRestorePatchArgs)(nil)).Elem()
}

type PerconaServerMongoDBRestorePatchInput interface {
	pulumi.Input

	ToPerconaServerMongoDBRestorePatchOutput() PerconaServerMongoDBRestorePatchOutput
	ToPerconaServerMongoDBRestorePatchOutputWithContext(ctx context.Context) PerconaServerMongoDBRestorePatchOutput
}

func (*PerconaServerMongoDBRestorePatch) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaServerMongoDBRestorePatch)(nil)).Elem()
}

func (i *PerconaServerMongoDBRestorePatch) ToPerconaServerMongoDBRestorePatchOutput() PerconaServerMongoDBRestorePatchOutput {
	return i.ToPerconaServerMongoDBRestorePatchOutputWithContext(context.Background())
}

func (i *PerconaServerMongoDBRestorePatch) ToPerconaServerMongoDBRestorePatchOutputWithContext(ctx context.Context) PerconaServerMongoDBRestorePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaServerMongoDBRestorePatchOutput)
}

// PerconaServerMongoDBRestorePatchArrayInput is an input type that accepts PerconaServerMongoDBRestorePatchArray and PerconaServerMongoDBRestorePatchArrayOutput values.
// You can construct a concrete instance of `PerconaServerMongoDBRestorePatchArrayInput` via:
//
//	PerconaServerMongoDBRestorePatchArray{ PerconaServerMongoDBRestorePatchArgs{...} }
type PerconaServerMongoDBRestorePatchArrayInput interface {
	pulumi.Input

	ToPerconaServerMongoDBRestorePatchArrayOutput() PerconaServerMongoDBRestorePatchArrayOutput
	ToPerconaServerMongoDBRestorePatchArrayOutputWithContext(context.Context) PerconaServerMongoDBRestorePatchArrayOutput
}

type PerconaServerMongoDBRestorePatchArray []PerconaServerMongoDBRestorePatchInput

func (PerconaServerMongoDBRestorePatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaServerMongoDBRestorePatch)(nil)).Elem()
}

func (i PerconaServerMongoDBRestorePatchArray) ToPerconaServerMongoDBRestorePatchArrayOutput() PerconaServerMongoDBRestorePatchArrayOutput {
	return i.ToPerconaServerMongoDBRestorePatchArrayOutputWithContext(context.Background())
}

func (i PerconaServerMongoDBRestorePatchArray) ToPerconaServerMongoDBRestorePatchArrayOutputWithContext(ctx context.Context) PerconaServerMongoDBRestorePatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaServerMongoDBRestorePatchArrayOutput)
}

// PerconaServerMongoDBRestorePatchMapInput is an input type that accepts PerconaServerMongoDBRestorePatchMap and PerconaServerMongoDBRestorePatchMapOutput values.
// You can construct a concrete instance of `PerconaServerMongoDBRestorePatchMapInput` via:
//
//	PerconaServerMongoDBRestorePatchMap{ "key": PerconaServerMongoDBRestorePatchArgs{...} }
type PerconaServerMongoDBRestorePatchMapInput interface {
	pulumi.Input

	ToPerconaServerMongoDBRestorePatchMapOutput() PerconaServerMongoDBRestorePatchMapOutput
	ToPerconaServerMongoDBRestorePatchMapOutputWithContext(context.Context) PerconaServerMongoDBRestorePatchMapOutput
}

type PerconaServerMongoDBRestorePatchMap map[string]PerconaServerMongoDBRestorePatchInput

func (PerconaServerMongoDBRestorePatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaServerMongoDBRestorePatch)(nil)).Elem()
}

func (i PerconaServerMongoDBRestorePatchMap) ToPerconaServerMongoDBRestorePatchMapOutput() PerconaServerMongoDBRestorePatchMapOutput {
	return i.ToPerconaServerMongoDBRestorePatchMapOutputWithContext(context.Background())
}

func (i PerconaServerMongoDBRestorePatchMap) ToPerconaServerMongoDBRestorePatchMapOutputWithContext(ctx context.Context) PerconaServerMongoDBRestorePatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerconaServerMongoDBRestorePatchMapOutput)
}

type PerconaServerMongoDBRestorePatchOutput struct{ *pulumi.OutputState }

func (PerconaServerMongoDBRestorePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PerconaServerMongoDBRestorePatch)(nil)).Elem()
}

func (o PerconaServerMongoDBRestorePatchOutput) ToPerconaServerMongoDBRestorePatchOutput() PerconaServerMongoDBRestorePatchOutput {
	return o
}

func (o PerconaServerMongoDBRestorePatchOutput) ToPerconaServerMongoDBRestorePatchOutputWithContext(ctx context.Context) PerconaServerMongoDBRestorePatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PerconaServerMongoDBRestorePatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PerconaServerMongoDBRestorePatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PerconaServerMongoDBRestorePatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PerconaServerMongoDBRestorePatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PerconaServerMongoDBRestorePatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *PerconaServerMongoDBRestorePatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o PerconaServerMongoDBRestorePatchOutput) Spec() PerconaServerMongoDBRestoreSpecPatchPtrOutput {
	return o.ApplyT(func(v *PerconaServerMongoDBRestorePatch) PerconaServerMongoDBRestoreSpecPatchPtrOutput { return v.Spec }).(PerconaServerMongoDBRestoreSpecPatchPtrOutput)
}

func (o PerconaServerMongoDBRestorePatchOutput) Status() PerconaServerMongoDBRestoreStatusPatchPtrOutput {
	return o.ApplyT(func(v *PerconaServerMongoDBRestorePatch) PerconaServerMongoDBRestoreStatusPatchPtrOutput {
		return v.Status
	}).(PerconaServerMongoDBRestoreStatusPatchPtrOutput)
}

type PerconaServerMongoDBRestorePatchArrayOutput struct{ *pulumi.OutputState }

func (PerconaServerMongoDBRestorePatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PerconaServerMongoDBRestorePatch)(nil)).Elem()
}

func (o PerconaServerMongoDBRestorePatchArrayOutput) ToPerconaServerMongoDBRestorePatchArrayOutput() PerconaServerMongoDBRestorePatchArrayOutput {
	return o
}

func (o PerconaServerMongoDBRestorePatchArrayOutput) ToPerconaServerMongoDBRestorePatchArrayOutputWithContext(ctx context.Context) PerconaServerMongoDBRestorePatchArrayOutput {
	return o
}

func (o PerconaServerMongoDBRestorePatchArrayOutput) Index(i pulumi.IntInput) PerconaServerMongoDBRestorePatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PerconaServerMongoDBRestorePatch {
		return vs[0].([]*PerconaServerMongoDBRestorePatch)[vs[1].(int)]
	}).(PerconaServerMongoDBRestorePatchOutput)
}

type PerconaServerMongoDBRestorePatchMapOutput struct{ *pulumi.OutputState }

func (PerconaServerMongoDBRestorePatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PerconaServerMongoDBRestorePatch)(nil)).Elem()
}

func (o PerconaServerMongoDBRestorePatchMapOutput) ToPerconaServerMongoDBRestorePatchMapOutput() PerconaServerMongoDBRestorePatchMapOutput {
	return o
}

func (o PerconaServerMongoDBRestorePatchMapOutput) ToPerconaServerMongoDBRestorePatchMapOutputWithContext(ctx context.Context) PerconaServerMongoDBRestorePatchMapOutput {
	return o
}

func (o PerconaServerMongoDBRestorePatchMapOutput) MapIndex(k pulumi.StringInput) PerconaServerMongoDBRestorePatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PerconaServerMongoDBRestorePatch {
		return vs[0].(map[string]*PerconaServerMongoDBRestorePatch)[vs[1].(string)]
	}).(PerconaServerMongoDBRestorePatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaServerMongoDBRestorePatchInput)(nil)).Elem(), &PerconaServerMongoDBRestorePatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaServerMongoDBRestorePatchArrayInput)(nil)).Elem(), PerconaServerMongoDBRestorePatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PerconaServerMongoDBRestorePatchMapInput)(nil)).Elem(), PerconaServerMongoDBRestorePatchMap{})
	pulumi.RegisterOutputType(PerconaServerMongoDBRestorePatchOutput{})
	pulumi.RegisterOutputType(PerconaServerMongoDBRestorePatchArrayOutput{})
	pulumi.RegisterOutputType(PerconaServerMongoDBRestorePatchMapOutput{})
}
