// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// CertificateRequestList is a list of CertificateRequest
type CertificateRequestList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of certificaterequests. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items CertificateRequestTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewCertificateRequestList registers a new resource with the given unique name, arguments, and options.
func NewCertificateRequestList(ctx *pulumi.Context,
	name string, args *CertificateRequestListArgs, opts ...pulumi.ResourceOption) (*CertificateRequestList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("cert-manager.io/v1")
	args.Kind = pulumi.StringPtr("CertificateRequestList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource CertificateRequestList
	err := ctx.RegisterResource("kubernetes:cert-manager.io/v1:CertificateRequestList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCertificateRequestList gets an existing CertificateRequestList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCertificateRequestList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CertificateRequestListState, opts ...pulumi.ResourceOption) (*CertificateRequestList, error) {
	var resource CertificateRequestList
	err := ctx.ReadResource("kubernetes:cert-manager.io/v1:CertificateRequestList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CertificateRequestList resources.
type certificateRequestListState struct {
}

type CertificateRequestListState struct {
}

func (CertificateRequestListState) ElementType() reflect.Type {
	return reflect.TypeOf((*certificateRequestListState)(nil)).Elem()
}

type certificateRequestListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of certificaterequests. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []CertificateRequestType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a CertificateRequestList resource.
type CertificateRequestListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of certificaterequests. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items CertificateRequestTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (CertificateRequestListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*certificateRequestListArgs)(nil)).Elem()
}

type CertificateRequestListInput interface {
	pulumi.Input

	ToCertificateRequestListOutput() CertificateRequestListOutput
	ToCertificateRequestListOutputWithContext(ctx context.Context) CertificateRequestListOutput
}

func (*CertificateRequestList) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateRequestList)(nil)).Elem()
}

func (i *CertificateRequestList) ToCertificateRequestListOutput() CertificateRequestListOutput {
	return i.ToCertificateRequestListOutputWithContext(context.Background())
}

func (i *CertificateRequestList) ToCertificateRequestListOutputWithContext(ctx context.Context) CertificateRequestListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateRequestListOutput)
}

// CertificateRequestListArrayInput is an input type that accepts CertificateRequestListArray and CertificateRequestListArrayOutput values.
// You can construct a concrete instance of `CertificateRequestListArrayInput` via:
//
//	CertificateRequestListArray{ CertificateRequestListArgs{...} }
type CertificateRequestListArrayInput interface {
	pulumi.Input

	ToCertificateRequestListArrayOutput() CertificateRequestListArrayOutput
	ToCertificateRequestListArrayOutputWithContext(context.Context) CertificateRequestListArrayOutput
}

type CertificateRequestListArray []CertificateRequestListInput

func (CertificateRequestListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CertificateRequestList)(nil)).Elem()
}

func (i CertificateRequestListArray) ToCertificateRequestListArrayOutput() CertificateRequestListArrayOutput {
	return i.ToCertificateRequestListArrayOutputWithContext(context.Background())
}

func (i CertificateRequestListArray) ToCertificateRequestListArrayOutputWithContext(ctx context.Context) CertificateRequestListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateRequestListArrayOutput)
}

// CertificateRequestListMapInput is an input type that accepts CertificateRequestListMap and CertificateRequestListMapOutput values.
// You can construct a concrete instance of `CertificateRequestListMapInput` via:
//
//	CertificateRequestListMap{ "key": CertificateRequestListArgs{...} }
type CertificateRequestListMapInput interface {
	pulumi.Input

	ToCertificateRequestListMapOutput() CertificateRequestListMapOutput
	ToCertificateRequestListMapOutputWithContext(context.Context) CertificateRequestListMapOutput
}

type CertificateRequestListMap map[string]CertificateRequestListInput

func (CertificateRequestListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CertificateRequestList)(nil)).Elem()
}

func (i CertificateRequestListMap) ToCertificateRequestListMapOutput() CertificateRequestListMapOutput {
	return i.ToCertificateRequestListMapOutputWithContext(context.Background())
}

func (i CertificateRequestListMap) ToCertificateRequestListMapOutputWithContext(ctx context.Context) CertificateRequestListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateRequestListMapOutput)
}

type CertificateRequestListOutput struct{ *pulumi.OutputState }

func (CertificateRequestListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateRequestList)(nil)).Elem()
}

func (o CertificateRequestListOutput) ToCertificateRequestListOutput() CertificateRequestListOutput {
	return o
}

func (o CertificateRequestListOutput) ToCertificateRequestListOutputWithContext(ctx context.Context) CertificateRequestListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o CertificateRequestListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateRequestList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of certificaterequests. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o CertificateRequestListOutput) Items() CertificateRequestTypeArrayOutput {
	return o.ApplyT(func(v *CertificateRequestList) CertificateRequestTypeArrayOutput { return v.Items }).(CertificateRequestTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o CertificateRequestListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateRequestList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o CertificateRequestListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *CertificateRequestList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type CertificateRequestListArrayOutput struct{ *pulumi.OutputState }

func (CertificateRequestListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CertificateRequestList)(nil)).Elem()
}

func (o CertificateRequestListArrayOutput) ToCertificateRequestListArrayOutput() CertificateRequestListArrayOutput {
	return o
}

func (o CertificateRequestListArrayOutput) ToCertificateRequestListArrayOutputWithContext(ctx context.Context) CertificateRequestListArrayOutput {
	return o
}

func (o CertificateRequestListArrayOutput) Index(i pulumi.IntInput) CertificateRequestListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CertificateRequestList {
		return vs[0].([]*CertificateRequestList)[vs[1].(int)]
	}).(CertificateRequestListOutput)
}

type CertificateRequestListMapOutput struct{ *pulumi.OutputState }

func (CertificateRequestListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CertificateRequestList)(nil)).Elem()
}

func (o CertificateRequestListMapOutput) ToCertificateRequestListMapOutput() CertificateRequestListMapOutput {
	return o
}

func (o CertificateRequestListMapOutput) ToCertificateRequestListMapOutputWithContext(ctx context.Context) CertificateRequestListMapOutput {
	return o
}

func (o CertificateRequestListMapOutput) MapIndex(k pulumi.StringInput) CertificateRequestListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CertificateRequestList {
		return vs[0].(map[string]*CertificateRequestList)[vs[1].(string)]
	}).(CertificateRequestListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateRequestListInput)(nil)).Elem(), &CertificateRequestList{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateRequestListArrayInput)(nil)).Elem(), CertificateRequestListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateRequestListMapInput)(nil)).Elem(), CertificateRequestListMap{})
	pulumi.RegisterOutputType(CertificateRequestListOutput{})
	pulumi.RegisterOutputType(CertificateRequestListArrayOutput{})
	pulumi.RegisterOutputType(CertificateRequestListMapOutput{})
}
