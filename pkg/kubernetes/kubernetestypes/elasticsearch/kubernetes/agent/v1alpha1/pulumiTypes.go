// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Agent is the Schema for the Agents API.
type AgentType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *AgentSpec         `pulumi:"spec"`
	Status   *AgentStatus       `pulumi:"status"`
}

// AgentTypeInput is an input type that accepts AgentTypeArgs and AgentTypeOutput values.
// You can construct a concrete instance of `AgentTypeInput` via:
//
//	AgentTypeArgs{...}
type AgentTypeInput interface {
	pulumi.Input

	ToAgentTypeOutput() AgentTypeOutput
	ToAgentTypeOutputWithContext(context.Context) AgentTypeOutput
}

// Agent is the Schema for the Agents API.
type AgentTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec     AgentSpecPtrInput         `pulumi:"spec"`
	Status   AgentStatusPtrInput       `pulumi:"status"`
}

func (AgentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentType)(nil)).Elem()
}

func (i AgentTypeArgs) ToAgentTypeOutput() AgentTypeOutput {
	return i.ToAgentTypeOutputWithContext(context.Background())
}

func (i AgentTypeArgs) ToAgentTypeOutputWithContext(ctx context.Context) AgentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentTypeOutput)
}

// AgentTypeArrayInput is an input type that accepts AgentTypeArray and AgentTypeArrayOutput values.
// You can construct a concrete instance of `AgentTypeArrayInput` via:
//
//	AgentTypeArray{ AgentTypeArgs{...} }
type AgentTypeArrayInput interface {
	pulumi.Input

	ToAgentTypeArrayOutput() AgentTypeArrayOutput
	ToAgentTypeArrayOutputWithContext(context.Context) AgentTypeArrayOutput
}

type AgentTypeArray []AgentTypeInput

func (AgentTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentType)(nil)).Elem()
}

func (i AgentTypeArray) ToAgentTypeArrayOutput() AgentTypeArrayOutput {
	return i.ToAgentTypeArrayOutputWithContext(context.Background())
}

func (i AgentTypeArray) ToAgentTypeArrayOutputWithContext(ctx context.Context) AgentTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentTypeArrayOutput)
}

// Agent is the Schema for the Agents API.
type AgentTypeOutput struct{ *pulumi.OutputState }

func (AgentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentType)(nil)).Elem()
}

func (o AgentTypeOutput) ToAgentTypeOutput() AgentTypeOutput {
	return o
}

func (o AgentTypeOutput) ToAgentTypeOutputWithContext(ctx context.Context) AgentTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o AgentTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AgentTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o AgentTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v AgentType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o AgentTypeOutput) Spec() AgentSpecPtrOutput {
	return o.ApplyT(func(v AgentType) *AgentSpec { return v.Spec }).(AgentSpecPtrOutput)
}

func (o AgentTypeOutput) Status() AgentStatusPtrOutput {
	return o.ApplyT(func(v AgentType) *AgentStatus { return v.Status }).(AgentStatusPtrOutput)
}

type AgentTypeArrayOutput struct{ *pulumi.OutputState }

func (AgentTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentType)(nil)).Elem()
}

func (o AgentTypeArrayOutput) ToAgentTypeArrayOutput() AgentTypeArrayOutput {
	return o
}

func (o AgentTypeArrayOutput) ToAgentTypeArrayOutputWithContext(ctx context.Context) AgentTypeArrayOutput {
	return o
}

func (o AgentTypeArrayOutput) Index(i pulumi.IntInput) AgentTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentType {
		return vs[0].([]AgentType)[vs[1].(int)]
	}).(AgentTypeOutput)
}

// AgentList is a list of Agent
type AgentListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of agents. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []AgentType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// AgentListTypeInput is an input type that accepts AgentListTypeArgs and AgentListTypeOutput values.
// You can construct a concrete instance of `AgentListTypeInput` via:
//
//	AgentListTypeArgs{...}
type AgentListTypeInput interface {
	pulumi.Input

	ToAgentListTypeOutput() AgentListTypeOutput
	ToAgentListTypeOutputWithContext(context.Context) AgentListTypeOutput
}

// AgentList is a list of Agent
type AgentListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of agents. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items AgentTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (AgentListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentListType)(nil)).Elem()
}

func (i AgentListTypeArgs) ToAgentListTypeOutput() AgentListTypeOutput {
	return i.ToAgentListTypeOutputWithContext(context.Background())
}

func (i AgentListTypeArgs) ToAgentListTypeOutputWithContext(ctx context.Context) AgentListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentListTypeOutput)
}

// AgentList is a list of Agent
type AgentListTypeOutput struct{ *pulumi.OutputState }

func (AgentListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentListType)(nil)).Elem()
}

func (o AgentListTypeOutput) ToAgentListTypeOutput() AgentListTypeOutput {
	return o
}

func (o AgentListTypeOutput) ToAgentListTypeOutputWithContext(ctx context.Context) AgentListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o AgentListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of agents. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o AgentListTypeOutput) Items() AgentTypeArrayOutput {
	return o.ApplyT(func(v AgentListType) []AgentType { return v.Items }).(AgentTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AgentListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AgentListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v AgentListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

// Agent is the Schema for the Agents API.
type AgentPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *AgentSpecPatch         `pulumi:"spec"`
	Status   *AgentStatusPatch       `pulumi:"status"`
}

// AgentPatchTypeInput is an input type that accepts AgentPatchTypeArgs and AgentPatchTypeOutput values.
// You can construct a concrete instance of `AgentPatchTypeInput` via:
//
//	AgentPatchTypeArgs{...}
type AgentPatchTypeInput interface {
	pulumi.Input

	ToAgentPatchTypeOutput() AgentPatchTypeOutput
	ToAgentPatchTypeOutputWithContext(context.Context) AgentPatchTypeOutput
}

// Agent is the Schema for the Agents API.
type AgentPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
	Spec     AgentSpecPatchPtrInput         `pulumi:"spec"`
	Status   AgentStatusPatchPtrInput       `pulumi:"status"`
}

func (AgentPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPatchType)(nil)).Elem()
}

func (i AgentPatchTypeArgs) ToAgentPatchTypeOutput() AgentPatchTypeOutput {
	return i.ToAgentPatchTypeOutputWithContext(context.Background())
}

func (i AgentPatchTypeArgs) ToAgentPatchTypeOutputWithContext(ctx context.Context) AgentPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPatchTypeOutput)
}

// Agent is the Schema for the Agents API.
type AgentPatchTypeOutput struct{ *pulumi.OutputState }

func (AgentPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPatchType)(nil)).Elem()
}

func (o AgentPatchTypeOutput) ToAgentPatchTypeOutput() AgentPatchTypeOutput {
	return o
}

func (o AgentPatchTypeOutput) ToAgentPatchTypeOutputWithContext(ctx context.Context) AgentPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o AgentPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AgentPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o AgentPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v AgentPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o AgentPatchTypeOutput) Spec() AgentSpecPatchPtrOutput {
	return o.ApplyT(func(v AgentPatchType) *AgentSpecPatch { return v.Spec }).(AgentSpecPatchPtrOutput)
}

func (o AgentPatchTypeOutput) Status() AgentStatusPatchPtrOutput {
	return o.ApplyT(func(v AgentPatchType) *AgentStatusPatch { return v.Status }).(AgentStatusPatchPtrOutput)
}

// AgentSpec defines the desired state of the Agent
type AgentSpec struct {
	// Config holds the Agent configuration. At most one of [`Config`, `ConfigRef`] can be specified.
	Config     map[string]interface{} `pulumi:"config"`
	ConfigRef  *AgentSpecConfigRef    `pulumi:"configRef"`
	DaemonSet  *AgentSpecDaemonSet    `pulumi:"daemonSet"`
	Deployment *AgentSpecDeployment   `pulumi:"deployment"`
	// ElasticsearchRefs is a reference to a list of Elasticsearch clusters running in the same Kubernetes cluster.
	// Due to existing limitations, only a single ES cluster is currently supported.
	ElasticsearchRefs []AgentSpecElasticsearchRefs `pulumi:"elasticsearchRefs"`
	// FleetServerEnabled determines whether this Agent will launch Fleet Server. Don't set unless `mode` is set to `fleet`.
	FleetServerEnabled *bool                    `pulumi:"fleetServerEnabled"`
	FleetServerRef     *AgentSpecFleetServerRef `pulumi:"fleetServerRef"`
	Http               *AgentSpecHttp           `pulumi:"http"`
	// Image is the Agent Docker image to deploy. Version has to match the Agent in the image.
	Image     *string             `pulumi:"image"`
	KibanaRef *AgentSpecKibanaRef `pulumi:"kibanaRef"`
	// Mode specifies the source of configuration for the Agent. The configuration can be specified locally through
	// `config` or `configRef` (`standalone` mode), or come from Fleet during runtime (`fleet` mode).
	// Defaults to `standalone` mode.
	Mode *string `pulumi:"mode"`
	// PolicyID determines into which Agent Policy this Agent will be enrolled.
	// This field will become mandatory in a future release, default policies are deprecated since 8.1.0.
	PolicyID *string `pulumi:"policyID"`
	// RevisionHistoryLimit is the number of revisions to retain to allow rollback in the underlying DaemonSet or Deployment or StatefulSet.
	RevisionHistoryLimit *int `pulumi:"revisionHistoryLimit"`
	// SecureSettings is a list of references to Kubernetes Secrets containing sensitive configuration options for the Agent.
	// Secrets data can be then referenced in the Agent config using the Secret's keys or as specified in `Entries` field of
	// each SecureSetting.
	SecureSettings []AgentSpecSecureSettings `pulumi:"secureSettings"`
	// ServiceAccountName is used to check access from the current resource to an Elasticsearch resource in a different namespace.
	// Can only be used if ECK is enforcing RBAC on references.
	ServiceAccountName *string               `pulumi:"serviceAccountName"`
	StatefulSet        *AgentSpecStatefulSet `pulumi:"statefulSet"`
	// Version of the Agent.
	Version *string `pulumi:"version"`
}

// AgentSpecInput is an input type that accepts AgentSpecArgs and AgentSpecOutput values.
// You can construct a concrete instance of `AgentSpecInput` via:
//
//	AgentSpecArgs{...}
type AgentSpecInput interface {
	pulumi.Input

	ToAgentSpecOutput() AgentSpecOutput
	ToAgentSpecOutputWithContext(context.Context) AgentSpecOutput
}

// AgentSpec defines the desired state of the Agent
type AgentSpecArgs struct {
	// Config holds the Agent configuration. At most one of [`Config`, `ConfigRef`] can be specified.
	Config     pulumi.MapInput             `pulumi:"config"`
	ConfigRef  AgentSpecConfigRefPtrInput  `pulumi:"configRef"`
	DaemonSet  AgentSpecDaemonSetPtrInput  `pulumi:"daemonSet"`
	Deployment AgentSpecDeploymentPtrInput `pulumi:"deployment"`
	// ElasticsearchRefs is a reference to a list of Elasticsearch clusters running in the same Kubernetes cluster.
	// Due to existing limitations, only a single ES cluster is currently supported.
	ElasticsearchRefs AgentSpecElasticsearchRefsArrayInput `pulumi:"elasticsearchRefs"`
	// FleetServerEnabled determines whether this Agent will launch Fleet Server. Don't set unless `mode` is set to `fleet`.
	FleetServerEnabled pulumi.BoolPtrInput             `pulumi:"fleetServerEnabled"`
	FleetServerRef     AgentSpecFleetServerRefPtrInput `pulumi:"fleetServerRef"`
	Http               AgentSpecHttpPtrInput           `pulumi:"http"`
	// Image is the Agent Docker image to deploy. Version has to match the Agent in the image.
	Image     pulumi.StringPtrInput      `pulumi:"image"`
	KibanaRef AgentSpecKibanaRefPtrInput `pulumi:"kibanaRef"`
	// Mode specifies the source of configuration for the Agent. The configuration can be specified locally through
	// `config` or `configRef` (`standalone` mode), or come from Fleet during runtime (`fleet` mode).
	// Defaults to `standalone` mode.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// PolicyID determines into which Agent Policy this Agent will be enrolled.
	// This field will become mandatory in a future release, default policies are deprecated since 8.1.0.
	PolicyID pulumi.StringPtrInput `pulumi:"policyID"`
	// RevisionHistoryLimit is the number of revisions to retain to allow rollback in the underlying DaemonSet or Deployment or StatefulSet.
	RevisionHistoryLimit pulumi.IntPtrInput `pulumi:"revisionHistoryLimit"`
	// SecureSettings is a list of references to Kubernetes Secrets containing sensitive configuration options for the Agent.
	// Secrets data can be then referenced in the Agent config using the Secret's keys or as specified in `Entries` field of
	// each SecureSetting.
	SecureSettings AgentSpecSecureSettingsArrayInput `pulumi:"secureSettings"`
	// ServiceAccountName is used to check access from the current resource to an Elasticsearch resource in a different namespace.
	// Can only be used if ECK is enforcing RBAC on references.
	ServiceAccountName pulumi.StringPtrInput        `pulumi:"serviceAccountName"`
	StatefulSet        AgentSpecStatefulSetPtrInput `pulumi:"statefulSet"`
	// Version of the Agent.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (AgentSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpec)(nil)).Elem()
}

func (i AgentSpecArgs) ToAgentSpecOutput() AgentSpecOutput {
	return i.ToAgentSpecOutputWithContext(context.Background())
}

func (i AgentSpecArgs) ToAgentSpecOutputWithContext(ctx context.Context) AgentSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecOutput)
}

func (i AgentSpecArgs) ToAgentSpecPtrOutput() AgentSpecPtrOutput {
	return i.ToAgentSpecPtrOutputWithContext(context.Background())
}

func (i AgentSpecArgs) ToAgentSpecPtrOutputWithContext(ctx context.Context) AgentSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecOutput).ToAgentSpecPtrOutputWithContext(ctx)
}

// AgentSpecPtrInput is an input type that accepts AgentSpecArgs, AgentSpecPtr and AgentSpecPtrOutput values.
// You can construct a concrete instance of `AgentSpecPtrInput` via:
//
//	        AgentSpecArgs{...}
//
//	or:
//
//	        nil
type AgentSpecPtrInput interface {
	pulumi.Input

	ToAgentSpecPtrOutput() AgentSpecPtrOutput
	ToAgentSpecPtrOutputWithContext(context.Context) AgentSpecPtrOutput
}

type agentSpecPtrType AgentSpecArgs

func AgentSpecPtr(v *AgentSpecArgs) AgentSpecPtrInput {
	return (*agentSpecPtrType)(v)
}

func (*agentSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpec)(nil)).Elem()
}

func (i *agentSpecPtrType) ToAgentSpecPtrOutput() AgentSpecPtrOutput {
	return i.ToAgentSpecPtrOutputWithContext(context.Background())
}

func (i *agentSpecPtrType) ToAgentSpecPtrOutputWithContext(ctx context.Context) AgentSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecPtrOutput)
}

// AgentSpec defines the desired state of the Agent
type AgentSpecOutput struct{ *pulumi.OutputState }

func (AgentSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpec)(nil)).Elem()
}

func (o AgentSpecOutput) ToAgentSpecOutput() AgentSpecOutput {
	return o
}

func (o AgentSpecOutput) ToAgentSpecOutputWithContext(ctx context.Context) AgentSpecOutput {
	return o
}

func (o AgentSpecOutput) ToAgentSpecPtrOutput() AgentSpecPtrOutput {
	return o.ToAgentSpecPtrOutputWithContext(context.Background())
}

func (o AgentSpecOutput) ToAgentSpecPtrOutputWithContext(ctx context.Context) AgentSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpec) *AgentSpec {
		return &v
	}).(AgentSpecPtrOutput)
}

// Config holds the Agent configuration. At most one of [`Config`, `ConfigRef`] can be specified.
func (o AgentSpecOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v AgentSpec) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

func (o AgentSpecOutput) ConfigRef() AgentSpecConfigRefPtrOutput {
	return o.ApplyT(func(v AgentSpec) *AgentSpecConfigRef { return v.ConfigRef }).(AgentSpecConfigRefPtrOutput)
}

func (o AgentSpecOutput) DaemonSet() AgentSpecDaemonSetPtrOutput {
	return o.ApplyT(func(v AgentSpec) *AgentSpecDaemonSet { return v.DaemonSet }).(AgentSpecDaemonSetPtrOutput)
}

func (o AgentSpecOutput) Deployment() AgentSpecDeploymentPtrOutput {
	return o.ApplyT(func(v AgentSpec) *AgentSpecDeployment { return v.Deployment }).(AgentSpecDeploymentPtrOutput)
}

// ElasticsearchRefs is a reference to a list of Elasticsearch clusters running in the same Kubernetes cluster.
// Due to existing limitations, only a single ES cluster is currently supported.
func (o AgentSpecOutput) ElasticsearchRefs() AgentSpecElasticsearchRefsArrayOutput {
	return o.ApplyT(func(v AgentSpec) []AgentSpecElasticsearchRefs { return v.ElasticsearchRefs }).(AgentSpecElasticsearchRefsArrayOutput)
}

// FleetServerEnabled determines whether this Agent will launch Fleet Server. Don't set unless `mode` is set to `fleet`.
func (o AgentSpecOutput) FleetServerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AgentSpec) *bool { return v.FleetServerEnabled }).(pulumi.BoolPtrOutput)
}

func (o AgentSpecOutput) FleetServerRef() AgentSpecFleetServerRefPtrOutput {
	return o.ApplyT(func(v AgentSpec) *AgentSpecFleetServerRef { return v.FleetServerRef }).(AgentSpecFleetServerRefPtrOutput)
}

func (o AgentSpecOutput) Http() AgentSpecHttpPtrOutput {
	return o.ApplyT(func(v AgentSpec) *AgentSpecHttp { return v.Http }).(AgentSpecHttpPtrOutput)
}

// Image is the Agent Docker image to deploy. Version has to match the Agent in the image.
func (o AgentSpecOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpec) *string { return v.Image }).(pulumi.StringPtrOutput)
}

func (o AgentSpecOutput) KibanaRef() AgentSpecKibanaRefPtrOutput {
	return o.ApplyT(func(v AgentSpec) *AgentSpecKibanaRef { return v.KibanaRef }).(AgentSpecKibanaRefPtrOutput)
}

// Mode specifies the source of configuration for the Agent. The configuration can be specified locally through
// `config` or `configRef` (`standalone` mode), or come from Fleet during runtime (`fleet` mode).
// Defaults to `standalone` mode.
func (o AgentSpecOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpec) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// PolicyID determines into which Agent Policy this Agent will be enrolled.
// This field will become mandatory in a future release, default policies are deprecated since 8.1.0.
func (o AgentSpecOutput) PolicyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpec) *string { return v.PolicyID }).(pulumi.StringPtrOutput)
}

// RevisionHistoryLimit is the number of revisions to retain to allow rollback in the underlying DaemonSet or Deployment or StatefulSet.
func (o AgentSpecOutput) RevisionHistoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentSpec) *int { return v.RevisionHistoryLimit }).(pulumi.IntPtrOutput)
}

// SecureSettings is a list of references to Kubernetes Secrets containing sensitive configuration options for the Agent.
// Secrets data can be then referenced in the Agent config using the Secret's keys or as specified in `Entries` field of
// each SecureSetting.
func (o AgentSpecOutput) SecureSettings() AgentSpecSecureSettingsArrayOutput {
	return o.ApplyT(func(v AgentSpec) []AgentSpecSecureSettings { return v.SecureSettings }).(AgentSpecSecureSettingsArrayOutput)
}

// ServiceAccountName is used to check access from the current resource to an Elasticsearch resource in a different namespace.
// Can only be used if ECK is enforcing RBAC on references.
func (o AgentSpecOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpec) *string { return v.ServiceAccountName }).(pulumi.StringPtrOutput)
}

func (o AgentSpecOutput) StatefulSet() AgentSpecStatefulSetPtrOutput {
	return o.ApplyT(func(v AgentSpec) *AgentSpecStatefulSet { return v.StatefulSet }).(AgentSpecStatefulSetPtrOutput)
}

// Version of the Agent.
func (o AgentSpecOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpec) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type AgentSpecPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpec)(nil)).Elem()
}

func (o AgentSpecPtrOutput) ToAgentSpecPtrOutput() AgentSpecPtrOutput {
	return o
}

func (o AgentSpecPtrOutput) ToAgentSpecPtrOutputWithContext(ctx context.Context) AgentSpecPtrOutput {
	return o
}

func (o AgentSpecPtrOutput) Elem() AgentSpecOutput {
	return o.ApplyT(func(v *AgentSpec) AgentSpec {
		if v != nil {
			return *v
		}
		var ret AgentSpec
		return ret
	}).(AgentSpecOutput)
}

// Config holds the Agent configuration. At most one of [`Config`, `ConfigRef`] can be specified.
func (o AgentSpecPtrOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v *AgentSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.MapOutput)
}

func (o AgentSpecPtrOutput) ConfigRef() AgentSpecConfigRefPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *AgentSpecConfigRef {
		if v == nil {
			return nil
		}
		return v.ConfigRef
	}).(AgentSpecConfigRefPtrOutput)
}

func (o AgentSpecPtrOutput) DaemonSet() AgentSpecDaemonSetPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *AgentSpecDaemonSet {
		if v == nil {
			return nil
		}
		return v.DaemonSet
	}).(AgentSpecDaemonSetPtrOutput)
}

func (o AgentSpecPtrOutput) Deployment() AgentSpecDeploymentPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *AgentSpecDeployment {
		if v == nil {
			return nil
		}
		return v.Deployment
	}).(AgentSpecDeploymentPtrOutput)
}

// ElasticsearchRefs is a reference to a list of Elasticsearch clusters running in the same Kubernetes cluster.
// Due to existing limitations, only a single ES cluster is currently supported.
func (o AgentSpecPtrOutput) ElasticsearchRefs() AgentSpecElasticsearchRefsArrayOutput {
	return o.ApplyT(func(v *AgentSpec) []AgentSpecElasticsearchRefs {
		if v == nil {
			return nil
		}
		return v.ElasticsearchRefs
	}).(AgentSpecElasticsearchRefsArrayOutput)
}

// FleetServerEnabled determines whether this Agent will launch Fleet Server. Don't set unless `mode` is set to `fleet`.
func (o AgentSpecPtrOutput) FleetServerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *bool {
		if v == nil {
			return nil
		}
		return v.FleetServerEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o AgentSpecPtrOutput) FleetServerRef() AgentSpecFleetServerRefPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *AgentSpecFleetServerRef {
		if v == nil {
			return nil
		}
		return v.FleetServerRef
	}).(AgentSpecFleetServerRefPtrOutput)
}

func (o AgentSpecPtrOutput) Http() AgentSpecHttpPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *AgentSpecHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(AgentSpecHttpPtrOutput)
}

// Image is the Agent Docker image to deploy. Version has to match the Agent in the image.
func (o AgentSpecPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

func (o AgentSpecPtrOutput) KibanaRef() AgentSpecKibanaRefPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *AgentSpecKibanaRef {
		if v == nil {
			return nil
		}
		return v.KibanaRef
	}).(AgentSpecKibanaRefPtrOutput)
}

// Mode specifies the source of configuration for the Agent. The configuration can be specified locally through
// `config` or `configRef` (`standalone` mode), or come from Fleet during runtime (`fleet` mode).
// Defaults to `standalone` mode.
func (o AgentSpecPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// PolicyID determines into which Agent Policy this Agent will be enrolled.
// This field will become mandatory in a future release, default policies are deprecated since 8.1.0.
func (o AgentSpecPtrOutput) PolicyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *string {
		if v == nil {
			return nil
		}
		return v.PolicyID
	}).(pulumi.StringPtrOutput)
}

// RevisionHistoryLimit is the number of revisions to retain to allow rollback in the underlying DaemonSet or Deployment or StatefulSet.
func (o AgentSpecPtrOutput) RevisionHistoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *int {
		if v == nil {
			return nil
		}
		return v.RevisionHistoryLimit
	}).(pulumi.IntPtrOutput)
}

// SecureSettings is a list of references to Kubernetes Secrets containing sensitive configuration options for the Agent.
// Secrets data can be then referenced in the Agent config using the Secret's keys or as specified in `Entries` field of
// each SecureSetting.
func (o AgentSpecPtrOutput) SecureSettings() AgentSpecSecureSettingsArrayOutput {
	return o.ApplyT(func(v *AgentSpec) []AgentSpecSecureSettings {
		if v == nil {
			return nil
		}
		return v.SecureSettings
	}).(AgentSpecSecureSettingsArrayOutput)
}

// ServiceAccountName is used to check access from the current resource to an Elasticsearch resource in a different namespace.
// Can only be used if ECK is enforcing RBAC on references.
func (o AgentSpecPtrOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountName
	}).(pulumi.StringPtrOutput)
}

func (o AgentSpecPtrOutput) StatefulSet() AgentSpecStatefulSetPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *AgentSpecStatefulSet {
		if v == nil {
			return nil
		}
		return v.StatefulSet
	}).(AgentSpecStatefulSetPtrOutput)
}

// Version of the Agent.
func (o AgentSpecPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// ConfigRef contains a reference to an existing Kubernetes Secret holding the Agent configuration.
// Agent settings must be specified as yaml, under a single "agent.yml" entry. At most one of [`Config`, `ConfigRef`]
// can be specified.
type AgentSpecConfigRef struct {
	// SecretName is the name of the secret.
	SecretName *string `pulumi:"secretName"`
}

// AgentSpecConfigRefInput is an input type that accepts AgentSpecConfigRefArgs and AgentSpecConfigRefOutput values.
// You can construct a concrete instance of `AgentSpecConfigRefInput` via:
//
//	AgentSpecConfigRefArgs{...}
type AgentSpecConfigRefInput interface {
	pulumi.Input

	ToAgentSpecConfigRefOutput() AgentSpecConfigRefOutput
	ToAgentSpecConfigRefOutputWithContext(context.Context) AgentSpecConfigRefOutput
}

// ConfigRef contains a reference to an existing Kubernetes Secret holding the Agent configuration.
// Agent settings must be specified as yaml, under a single "agent.yml" entry. At most one of [`Config`, `ConfigRef`]
// can be specified.
type AgentSpecConfigRefArgs struct {
	// SecretName is the name of the secret.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (AgentSpecConfigRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecConfigRef)(nil)).Elem()
}

func (i AgentSpecConfigRefArgs) ToAgentSpecConfigRefOutput() AgentSpecConfigRefOutput {
	return i.ToAgentSpecConfigRefOutputWithContext(context.Background())
}

func (i AgentSpecConfigRefArgs) ToAgentSpecConfigRefOutputWithContext(ctx context.Context) AgentSpecConfigRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecConfigRefOutput)
}

func (i AgentSpecConfigRefArgs) ToAgentSpecConfigRefPtrOutput() AgentSpecConfigRefPtrOutput {
	return i.ToAgentSpecConfigRefPtrOutputWithContext(context.Background())
}

func (i AgentSpecConfigRefArgs) ToAgentSpecConfigRefPtrOutputWithContext(ctx context.Context) AgentSpecConfigRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecConfigRefOutput).ToAgentSpecConfigRefPtrOutputWithContext(ctx)
}

// AgentSpecConfigRefPtrInput is an input type that accepts AgentSpecConfigRefArgs, AgentSpecConfigRefPtr and AgentSpecConfigRefPtrOutput values.
// You can construct a concrete instance of `AgentSpecConfigRefPtrInput` via:
//
//	        AgentSpecConfigRefArgs{...}
//
//	or:
//
//	        nil
type AgentSpecConfigRefPtrInput interface {
	pulumi.Input

	ToAgentSpecConfigRefPtrOutput() AgentSpecConfigRefPtrOutput
	ToAgentSpecConfigRefPtrOutputWithContext(context.Context) AgentSpecConfigRefPtrOutput
}

type agentSpecConfigRefPtrType AgentSpecConfigRefArgs

func AgentSpecConfigRefPtr(v *AgentSpecConfigRefArgs) AgentSpecConfigRefPtrInput {
	return (*agentSpecConfigRefPtrType)(v)
}

func (*agentSpecConfigRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecConfigRef)(nil)).Elem()
}

func (i *agentSpecConfigRefPtrType) ToAgentSpecConfigRefPtrOutput() AgentSpecConfigRefPtrOutput {
	return i.ToAgentSpecConfigRefPtrOutputWithContext(context.Background())
}

func (i *agentSpecConfigRefPtrType) ToAgentSpecConfigRefPtrOutputWithContext(ctx context.Context) AgentSpecConfigRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecConfigRefPtrOutput)
}

// ConfigRef contains a reference to an existing Kubernetes Secret holding the Agent configuration.
// Agent settings must be specified as yaml, under a single "agent.yml" entry. At most one of [`Config`, `ConfigRef`]
// can be specified.
type AgentSpecConfigRefOutput struct{ *pulumi.OutputState }

func (AgentSpecConfigRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecConfigRef)(nil)).Elem()
}

func (o AgentSpecConfigRefOutput) ToAgentSpecConfigRefOutput() AgentSpecConfigRefOutput {
	return o
}

func (o AgentSpecConfigRefOutput) ToAgentSpecConfigRefOutputWithContext(ctx context.Context) AgentSpecConfigRefOutput {
	return o
}

func (o AgentSpecConfigRefOutput) ToAgentSpecConfigRefPtrOutput() AgentSpecConfigRefPtrOutput {
	return o.ToAgentSpecConfigRefPtrOutputWithContext(context.Background())
}

func (o AgentSpecConfigRefOutput) ToAgentSpecConfigRefPtrOutputWithContext(ctx context.Context) AgentSpecConfigRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecConfigRef) *AgentSpecConfigRef {
		return &v
	}).(AgentSpecConfigRefPtrOutput)
}

// SecretName is the name of the secret.
func (o AgentSpecConfigRefOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecConfigRef) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type AgentSpecConfigRefPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecConfigRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecConfigRef)(nil)).Elem()
}

func (o AgentSpecConfigRefPtrOutput) ToAgentSpecConfigRefPtrOutput() AgentSpecConfigRefPtrOutput {
	return o
}

func (o AgentSpecConfigRefPtrOutput) ToAgentSpecConfigRefPtrOutputWithContext(ctx context.Context) AgentSpecConfigRefPtrOutput {
	return o
}

func (o AgentSpecConfigRefPtrOutput) Elem() AgentSpecConfigRefOutput {
	return o.ApplyT(func(v *AgentSpecConfigRef) AgentSpecConfigRef {
		if v != nil {
			return *v
		}
		var ret AgentSpecConfigRef
		return ret
	}).(AgentSpecConfigRefOutput)
}

// SecretName is the name of the secret.
func (o AgentSpecConfigRefPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// ConfigRef contains a reference to an existing Kubernetes Secret holding the Agent configuration.
// Agent settings must be specified as yaml, under a single "agent.yml" entry. At most one of [`Config`, `ConfigRef`]
// can be specified.
type AgentSpecConfigRefPatch struct {
	// SecretName is the name of the secret.
	SecretName *string `pulumi:"secretName"`
}

// AgentSpecConfigRefPatchInput is an input type that accepts AgentSpecConfigRefPatchArgs and AgentSpecConfigRefPatchOutput values.
// You can construct a concrete instance of `AgentSpecConfigRefPatchInput` via:
//
//	AgentSpecConfigRefPatchArgs{...}
type AgentSpecConfigRefPatchInput interface {
	pulumi.Input

	ToAgentSpecConfigRefPatchOutput() AgentSpecConfigRefPatchOutput
	ToAgentSpecConfigRefPatchOutputWithContext(context.Context) AgentSpecConfigRefPatchOutput
}

// ConfigRef contains a reference to an existing Kubernetes Secret holding the Agent configuration.
// Agent settings must be specified as yaml, under a single "agent.yml" entry. At most one of [`Config`, `ConfigRef`]
// can be specified.
type AgentSpecConfigRefPatchArgs struct {
	// SecretName is the name of the secret.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (AgentSpecConfigRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecConfigRefPatch)(nil)).Elem()
}

func (i AgentSpecConfigRefPatchArgs) ToAgentSpecConfigRefPatchOutput() AgentSpecConfigRefPatchOutput {
	return i.ToAgentSpecConfigRefPatchOutputWithContext(context.Background())
}

func (i AgentSpecConfigRefPatchArgs) ToAgentSpecConfigRefPatchOutputWithContext(ctx context.Context) AgentSpecConfigRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecConfigRefPatchOutput)
}

func (i AgentSpecConfigRefPatchArgs) ToAgentSpecConfigRefPatchPtrOutput() AgentSpecConfigRefPatchPtrOutput {
	return i.ToAgentSpecConfigRefPatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecConfigRefPatchArgs) ToAgentSpecConfigRefPatchPtrOutputWithContext(ctx context.Context) AgentSpecConfigRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecConfigRefPatchOutput).ToAgentSpecConfigRefPatchPtrOutputWithContext(ctx)
}

// AgentSpecConfigRefPatchPtrInput is an input type that accepts AgentSpecConfigRefPatchArgs, AgentSpecConfigRefPatchPtr and AgentSpecConfigRefPatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecConfigRefPatchPtrInput` via:
//
//	        AgentSpecConfigRefPatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecConfigRefPatchPtrInput interface {
	pulumi.Input

	ToAgentSpecConfigRefPatchPtrOutput() AgentSpecConfigRefPatchPtrOutput
	ToAgentSpecConfigRefPatchPtrOutputWithContext(context.Context) AgentSpecConfigRefPatchPtrOutput
}

type agentSpecConfigRefPatchPtrType AgentSpecConfigRefPatchArgs

func AgentSpecConfigRefPatchPtr(v *AgentSpecConfigRefPatchArgs) AgentSpecConfigRefPatchPtrInput {
	return (*agentSpecConfigRefPatchPtrType)(v)
}

func (*agentSpecConfigRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecConfigRefPatch)(nil)).Elem()
}

func (i *agentSpecConfigRefPatchPtrType) ToAgentSpecConfigRefPatchPtrOutput() AgentSpecConfigRefPatchPtrOutput {
	return i.ToAgentSpecConfigRefPatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecConfigRefPatchPtrType) ToAgentSpecConfigRefPatchPtrOutputWithContext(ctx context.Context) AgentSpecConfigRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecConfigRefPatchPtrOutput)
}

// ConfigRef contains a reference to an existing Kubernetes Secret holding the Agent configuration.
// Agent settings must be specified as yaml, under a single "agent.yml" entry. At most one of [`Config`, `ConfigRef`]
// can be specified.
type AgentSpecConfigRefPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecConfigRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecConfigRefPatch)(nil)).Elem()
}

func (o AgentSpecConfigRefPatchOutput) ToAgentSpecConfigRefPatchOutput() AgentSpecConfigRefPatchOutput {
	return o
}

func (o AgentSpecConfigRefPatchOutput) ToAgentSpecConfigRefPatchOutputWithContext(ctx context.Context) AgentSpecConfigRefPatchOutput {
	return o
}

func (o AgentSpecConfigRefPatchOutput) ToAgentSpecConfigRefPatchPtrOutput() AgentSpecConfigRefPatchPtrOutput {
	return o.ToAgentSpecConfigRefPatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecConfigRefPatchOutput) ToAgentSpecConfigRefPatchPtrOutputWithContext(ctx context.Context) AgentSpecConfigRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecConfigRefPatch) *AgentSpecConfigRefPatch {
		return &v
	}).(AgentSpecConfigRefPatchPtrOutput)
}

// SecretName is the name of the secret.
func (o AgentSpecConfigRefPatchOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecConfigRefPatch) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type AgentSpecConfigRefPatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecConfigRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecConfigRefPatch)(nil)).Elem()
}

func (o AgentSpecConfigRefPatchPtrOutput) ToAgentSpecConfigRefPatchPtrOutput() AgentSpecConfigRefPatchPtrOutput {
	return o
}

func (o AgentSpecConfigRefPatchPtrOutput) ToAgentSpecConfigRefPatchPtrOutputWithContext(ctx context.Context) AgentSpecConfigRefPatchPtrOutput {
	return o
}

func (o AgentSpecConfigRefPatchPtrOutput) Elem() AgentSpecConfigRefPatchOutput {
	return o.ApplyT(func(v *AgentSpecConfigRefPatch) AgentSpecConfigRefPatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecConfigRefPatch
		return ret
	}).(AgentSpecConfigRefPatchOutput)
}

// SecretName is the name of the secret.
func (o AgentSpecConfigRefPatchPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecConfigRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// DaemonSet specifies the Agent should be deployed as a DaemonSet, and allows providing its spec.
// Cannot be used along with `deployment` or `statefulSet`.
type AgentSpecDaemonSet struct {
	// PodTemplateSpec describes the data a pod should have when created from a template
	PodTemplate    map[string]interface{}            `pulumi:"podTemplate"`
	UpdateStrategy *AgentSpecDaemonSetUpdateStrategy `pulumi:"updateStrategy"`
}

// AgentSpecDaemonSetInput is an input type that accepts AgentSpecDaemonSetArgs and AgentSpecDaemonSetOutput values.
// You can construct a concrete instance of `AgentSpecDaemonSetInput` via:
//
//	AgentSpecDaemonSetArgs{...}
type AgentSpecDaemonSetInput interface {
	pulumi.Input

	ToAgentSpecDaemonSetOutput() AgentSpecDaemonSetOutput
	ToAgentSpecDaemonSetOutputWithContext(context.Context) AgentSpecDaemonSetOutput
}

// DaemonSet specifies the Agent should be deployed as a DaemonSet, and allows providing its spec.
// Cannot be used along with `deployment` or `statefulSet`.
type AgentSpecDaemonSetArgs struct {
	// PodTemplateSpec describes the data a pod should have when created from a template
	PodTemplate    pulumi.MapInput                          `pulumi:"podTemplate"`
	UpdateStrategy AgentSpecDaemonSetUpdateStrategyPtrInput `pulumi:"updateStrategy"`
}

func (AgentSpecDaemonSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDaemonSet)(nil)).Elem()
}

func (i AgentSpecDaemonSetArgs) ToAgentSpecDaemonSetOutput() AgentSpecDaemonSetOutput {
	return i.ToAgentSpecDaemonSetOutputWithContext(context.Background())
}

func (i AgentSpecDaemonSetArgs) ToAgentSpecDaemonSetOutputWithContext(ctx context.Context) AgentSpecDaemonSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetOutput)
}

func (i AgentSpecDaemonSetArgs) ToAgentSpecDaemonSetPtrOutput() AgentSpecDaemonSetPtrOutput {
	return i.ToAgentSpecDaemonSetPtrOutputWithContext(context.Background())
}

func (i AgentSpecDaemonSetArgs) ToAgentSpecDaemonSetPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetOutput).ToAgentSpecDaemonSetPtrOutputWithContext(ctx)
}

// AgentSpecDaemonSetPtrInput is an input type that accepts AgentSpecDaemonSetArgs, AgentSpecDaemonSetPtr and AgentSpecDaemonSetPtrOutput values.
// You can construct a concrete instance of `AgentSpecDaemonSetPtrInput` via:
//
//	        AgentSpecDaemonSetArgs{...}
//
//	or:
//
//	        nil
type AgentSpecDaemonSetPtrInput interface {
	pulumi.Input

	ToAgentSpecDaemonSetPtrOutput() AgentSpecDaemonSetPtrOutput
	ToAgentSpecDaemonSetPtrOutputWithContext(context.Context) AgentSpecDaemonSetPtrOutput
}

type agentSpecDaemonSetPtrType AgentSpecDaemonSetArgs

func AgentSpecDaemonSetPtr(v *AgentSpecDaemonSetArgs) AgentSpecDaemonSetPtrInput {
	return (*agentSpecDaemonSetPtrType)(v)
}

func (*agentSpecDaemonSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDaemonSet)(nil)).Elem()
}

func (i *agentSpecDaemonSetPtrType) ToAgentSpecDaemonSetPtrOutput() AgentSpecDaemonSetPtrOutput {
	return i.ToAgentSpecDaemonSetPtrOutputWithContext(context.Background())
}

func (i *agentSpecDaemonSetPtrType) ToAgentSpecDaemonSetPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetPtrOutput)
}

// DaemonSet specifies the Agent should be deployed as a DaemonSet, and allows providing its spec.
// Cannot be used along with `deployment` or `statefulSet`.
type AgentSpecDaemonSetOutput struct{ *pulumi.OutputState }

func (AgentSpecDaemonSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDaemonSet)(nil)).Elem()
}

func (o AgentSpecDaemonSetOutput) ToAgentSpecDaemonSetOutput() AgentSpecDaemonSetOutput {
	return o
}

func (o AgentSpecDaemonSetOutput) ToAgentSpecDaemonSetOutputWithContext(ctx context.Context) AgentSpecDaemonSetOutput {
	return o
}

func (o AgentSpecDaemonSetOutput) ToAgentSpecDaemonSetPtrOutput() AgentSpecDaemonSetPtrOutput {
	return o.ToAgentSpecDaemonSetPtrOutputWithContext(context.Background())
}

func (o AgentSpecDaemonSetOutput) ToAgentSpecDaemonSetPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecDaemonSet) *AgentSpecDaemonSet {
		return &v
	}).(AgentSpecDaemonSetPtrOutput)
}

// PodTemplateSpec describes the data a pod should have when created from a template
func (o AgentSpecDaemonSetOutput) PodTemplate() pulumi.MapOutput {
	return o.ApplyT(func(v AgentSpecDaemonSet) map[string]interface{} { return v.PodTemplate }).(pulumi.MapOutput)
}

func (o AgentSpecDaemonSetOutput) UpdateStrategy() AgentSpecDaemonSetUpdateStrategyPtrOutput {
	return o.ApplyT(func(v AgentSpecDaemonSet) *AgentSpecDaemonSetUpdateStrategy { return v.UpdateStrategy }).(AgentSpecDaemonSetUpdateStrategyPtrOutput)
}

type AgentSpecDaemonSetPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecDaemonSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDaemonSet)(nil)).Elem()
}

func (o AgentSpecDaemonSetPtrOutput) ToAgentSpecDaemonSetPtrOutput() AgentSpecDaemonSetPtrOutput {
	return o
}

func (o AgentSpecDaemonSetPtrOutput) ToAgentSpecDaemonSetPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetPtrOutput {
	return o
}

func (o AgentSpecDaemonSetPtrOutput) Elem() AgentSpecDaemonSetOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSet) AgentSpecDaemonSet {
		if v != nil {
			return *v
		}
		var ret AgentSpecDaemonSet
		return ret
	}).(AgentSpecDaemonSetOutput)
}

// PodTemplateSpec describes the data a pod should have when created from a template
func (o AgentSpecDaemonSetPtrOutput) PodTemplate() pulumi.MapOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSet) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.PodTemplate
	}).(pulumi.MapOutput)
}

func (o AgentSpecDaemonSetPtrOutput) UpdateStrategy() AgentSpecDaemonSetUpdateStrategyPtrOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSet) *AgentSpecDaemonSetUpdateStrategy {
		if v == nil {
			return nil
		}
		return v.UpdateStrategy
	}).(AgentSpecDaemonSetUpdateStrategyPtrOutput)
}

// DaemonSet specifies the Agent should be deployed as a DaemonSet, and allows providing its spec.
// Cannot be used along with `deployment` or `statefulSet`.
type AgentSpecDaemonSetPatch struct {
	// PodTemplateSpec describes the data a pod should have when created from a template
	PodTemplate    map[string]interface{}                 `pulumi:"podTemplate"`
	UpdateStrategy *AgentSpecDaemonSetUpdateStrategyPatch `pulumi:"updateStrategy"`
}

// AgentSpecDaemonSetPatchInput is an input type that accepts AgentSpecDaemonSetPatchArgs and AgentSpecDaemonSetPatchOutput values.
// You can construct a concrete instance of `AgentSpecDaemonSetPatchInput` via:
//
//	AgentSpecDaemonSetPatchArgs{...}
type AgentSpecDaemonSetPatchInput interface {
	pulumi.Input

	ToAgentSpecDaemonSetPatchOutput() AgentSpecDaemonSetPatchOutput
	ToAgentSpecDaemonSetPatchOutputWithContext(context.Context) AgentSpecDaemonSetPatchOutput
}

// DaemonSet specifies the Agent should be deployed as a DaemonSet, and allows providing its spec.
// Cannot be used along with `deployment` or `statefulSet`.
type AgentSpecDaemonSetPatchArgs struct {
	// PodTemplateSpec describes the data a pod should have when created from a template
	PodTemplate    pulumi.MapInput                               `pulumi:"podTemplate"`
	UpdateStrategy AgentSpecDaemonSetUpdateStrategyPatchPtrInput `pulumi:"updateStrategy"`
}

func (AgentSpecDaemonSetPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDaemonSetPatch)(nil)).Elem()
}

func (i AgentSpecDaemonSetPatchArgs) ToAgentSpecDaemonSetPatchOutput() AgentSpecDaemonSetPatchOutput {
	return i.ToAgentSpecDaemonSetPatchOutputWithContext(context.Background())
}

func (i AgentSpecDaemonSetPatchArgs) ToAgentSpecDaemonSetPatchOutputWithContext(ctx context.Context) AgentSpecDaemonSetPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetPatchOutput)
}

func (i AgentSpecDaemonSetPatchArgs) ToAgentSpecDaemonSetPatchPtrOutput() AgentSpecDaemonSetPatchPtrOutput {
	return i.ToAgentSpecDaemonSetPatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecDaemonSetPatchArgs) ToAgentSpecDaemonSetPatchPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetPatchOutput).ToAgentSpecDaemonSetPatchPtrOutputWithContext(ctx)
}

// AgentSpecDaemonSetPatchPtrInput is an input type that accepts AgentSpecDaemonSetPatchArgs, AgentSpecDaemonSetPatchPtr and AgentSpecDaemonSetPatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecDaemonSetPatchPtrInput` via:
//
//	        AgentSpecDaemonSetPatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecDaemonSetPatchPtrInput interface {
	pulumi.Input

	ToAgentSpecDaemonSetPatchPtrOutput() AgentSpecDaemonSetPatchPtrOutput
	ToAgentSpecDaemonSetPatchPtrOutputWithContext(context.Context) AgentSpecDaemonSetPatchPtrOutput
}

type agentSpecDaemonSetPatchPtrType AgentSpecDaemonSetPatchArgs

func AgentSpecDaemonSetPatchPtr(v *AgentSpecDaemonSetPatchArgs) AgentSpecDaemonSetPatchPtrInput {
	return (*agentSpecDaemonSetPatchPtrType)(v)
}

func (*agentSpecDaemonSetPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDaemonSetPatch)(nil)).Elem()
}

func (i *agentSpecDaemonSetPatchPtrType) ToAgentSpecDaemonSetPatchPtrOutput() AgentSpecDaemonSetPatchPtrOutput {
	return i.ToAgentSpecDaemonSetPatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecDaemonSetPatchPtrType) ToAgentSpecDaemonSetPatchPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetPatchPtrOutput)
}

// DaemonSet specifies the Agent should be deployed as a DaemonSet, and allows providing its spec.
// Cannot be used along with `deployment` or `statefulSet`.
type AgentSpecDaemonSetPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecDaemonSetPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDaemonSetPatch)(nil)).Elem()
}

func (o AgentSpecDaemonSetPatchOutput) ToAgentSpecDaemonSetPatchOutput() AgentSpecDaemonSetPatchOutput {
	return o
}

func (o AgentSpecDaemonSetPatchOutput) ToAgentSpecDaemonSetPatchOutputWithContext(ctx context.Context) AgentSpecDaemonSetPatchOutput {
	return o
}

func (o AgentSpecDaemonSetPatchOutput) ToAgentSpecDaemonSetPatchPtrOutput() AgentSpecDaemonSetPatchPtrOutput {
	return o.ToAgentSpecDaemonSetPatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecDaemonSetPatchOutput) ToAgentSpecDaemonSetPatchPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecDaemonSetPatch) *AgentSpecDaemonSetPatch {
		return &v
	}).(AgentSpecDaemonSetPatchPtrOutput)
}

// PodTemplateSpec describes the data a pod should have when created from a template
func (o AgentSpecDaemonSetPatchOutput) PodTemplate() pulumi.MapOutput {
	return o.ApplyT(func(v AgentSpecDaemonSetPatch) map[string]interface{} { return v.PodTemplate }).(pulumi.MapOutput)
}

func (o AgentSpecDaemonSetPatchOutput) UpdateStrategy() AgentSpecDaemonSetUpdateStrategyPatchPtrOutput {
	return o.ApplyT(func(v AgentSpecDaemonSetPatch) *AgentSpecDaemonSetUpdateStrategyPatch { return v.UpdateStrategy }).(AgentSpecDaemonSetUpdateStrategyPatchPtrOutput)
}

type AgentSpecDaemonSetPatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecDaemonSetPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDaemonSetPatch)(nil)).Elem()
}

func (o AgentSpecDaemonSetPatchPtrOutput) ToAgentSpecDaemonSetPatchPtrOutput() AgentSpecDaemonSetPatchPtrOutput {
	return o
}

func (o AgentSpecDaemonSetPatchPtrOutput) ToAgentSpecDaemonSetPatchPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetPatchPtrOutput {
	return o
}

func (o AgentSpecDaemonSetPatchPtrOutput) Elem() AgentSpecDaemonSetPatchOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSetPatch) AgentSpecDaemonSetPatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecDaemonSetPatch
		return ret
	}).(AgentSpecDaemonSetPatchOutput)
}

// PodTemplateSpec describes the data a pod should have when created from a template
func (o AgentSpecDaemonSetPatchPtrOutput) PodTemplate() pulumi.MapOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSetPatch) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.PodTemplate
	}).(pulumi.MapOutput)
}

func (o AgentSpecDaemonSetPatchPtrOutput) UpdateStrategy() AgentSpecDaemonSetUpdateStrategyPatchPtrOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSetPatch) *AgentSpecDaemonSetUpdateStrategyPatch {
		if v == nil {
			return nil
		}
		return v.UpdateStrategy
	}).(AgentSpecDaemonSetUpdateStrategyPatchPtrOutput)
}

// DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.
type AgentSpecDaemonSetUpdateStrategy struct {
	RollingUpdate *AgentSpecDaemonSetUpdateStrategyRollingUpdate `pulumi:"rollingUpdate"`
	// Type of daemon set update. Can be "RollingUpdate" or "OnDelete". Default is RollingUpdate.
	Type *string `pulumi:"type"`
}

// AgentSpecDaemonSetUpdateStrategyInput is an input type that accepts AgentSpecDaemonSetUpdateStrategyArgs and AgentSpecDaemonSetUpdateStrategyOutput values.
// You can construct a concrete instance of `AgentSpecDaemonSetUpdateStrategyInput` via:
//
//	AgentSpecDaemonSetUpdateStrategyArgs{...}
type AgentSpecDaemonSetUpdateStrategyInput interface {
	pulumi.Input

	ToAgentSpecDaemonSetUpdateStrategyOutput() AgentSpecDaemonSetUpdateStrategyOutput
	ToAgentSpecDaemonSetUpdateStrategyOutputWithContext(context.Context) AgentSpecDaemonSetUpdateStrategyOutput
}

// DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.
type AgentSpecDaemonSetUpdateStrategyArgs struct {
	RollingUpdate AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrInput `pulumi:"rollingUpdate"`
	// Type of daemon set update. Can be "RollingUpdate" or "OnDelete". Default is RollingUpdate.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AgentSpecDaemonSetUpdateStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategy)(nil)).Elem()
}

func (i AgentSpecDaemonSetUpdateStrategyArgs) ToAgentSpecDaemonSetUpdateStrategyOutput() AgentSpecDaemonSetUpdateStrategyOutput {
	return i.ToAgentSpecDaemonSetUpdateStrategyOutputWithContext(context.Background())
}

func (i AgentSpecDaemonSetUpdateStrategyArgs) ToAgentSpecDaemonSetUpdateStrategyOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetUpdateStrategyOutput)
}

func (i AgentSpecDaemonSetUpdateStrategyArgs) ToAgentSpecDaemonSetUpdateStrategyPtrOutput() AgentSpecDaemonSetUpdateStrategyPtrOutput {
	return i.ToAgentSpecDaemonSetUpdateStrategyPtrOutputWithContext(context.Background())
}

func (i AgentSpecDaemonSetUpdateStrategyArgs) ToAgentSpecDaemonSetUpdateStrategyPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetUpdateStrategyOutput).ToAgentSpecDaemonSetUpdateStrategyPtrOutputWithContext(ctx)
}

// AgentSpecDaemonSetUpdateStrategyPtrInput is an input type that accepts AgentSpecDaemonSetUpdateStrategyArgs, AgentSpecDaemonSetUpdateStrategyPtr and AgentSpecDaemonSetUpdateStrategyPtrOutput values.
// You can construct a concrete instance of `AgentSpecDaemonSetUpdateStrategyPtrInput` via:
//
//	        AgentSpecDaemonSetUpdateStrategyArgs{...}
//
//	or:
//
//	        nil
type AgentSpecDaemonSetUpdateStrategyPtrInput interface {
	pulumi.Input

	ToAgentSpecDaemonSetUpdateStrategyPtrOutput() AgentSpecDaemonSetUpdateStrategyPtrOutput
	ToAgentSpecDaemonSetUpdateStrategyPtrOutputWithContext(context.Context) AgentSpecDaemonSetUpdateStrategyPtrOutput
}

type agentSpecDaemonSetUpdateStrategyPtrType AgentSpecDaemonSetUpdateStrategyArgs

func AgentSpecDaemonSetUpdateStrategyPtr(v *AgentSpecDaemonSetUpdateStrategyArgs) AgentSpecDaemonSetUpdateStrategyPtrInput {
	return (*agentSpecDaemonSetUpdateStrategyPtrType)(v)
}

func (*agentSpecDaemonSetUpdateStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDaemonSetUpdateStrategy)(nil)).Elem()
}

func (i *agentSpecDaemonSetUpdateStrategyPtrType) ToAgentSpecDaemonSetUpdateStrategyPtrOutput() AgentSpecDaemonSetUpdateStrategyPtrOutput {
	return i.ToAgentSpecDaemonSetUpdateStrategyPtrOutputWithContext(context.Background())
}

func (i *agentSpecDaemonSetUpdateStrategyPtrType) ToAgentSpecDaemonSetUpdateStrategyPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetUpdateStrategyPtrOutput)
}

// DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.
type AgentSpecDaemonSetUpdateStrategyOutput struct{ *pulumi.OutputState }

func (AgentSpecDaemonSetUpdateStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategy)(nil)).Elem()
}

func (o AgentSpecDaemonSetUpdateStrategyOutput) ToAgentSpecDaemonSetUpdateStrategyOutput() AgentSpecDaemonSetUpdateStrategyOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyOutput) ToAgentSpecDaemonSetUpdateStrategyOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyOutput) ToAgentSpecDaemonSetUpdateStrategyPtrOutput() AgentSpecDaemonSetUpdateStrategyPtrOutput {
	return o.ToAgentSpecDaemonSetUpdateStrategyPtrOutputWithContext(context.Background())
}

func (o AgentSpecDaemonSetUpdateStrategyOutput) ToAgentSpecDaemonSetUpdateStrategyPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecDaemonSetUpdateStrategy) *AgentSpecDaemonSetUpdateStrategy {
		return &v
	}).(AgentSpecDaemonSetUpdateStrategyPtrOutput)
}

func (o AgentSpecDaemonSetUpdateStrategyOutput) RollingUpdate() AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput {
	return o.ApplyT(func(v AgentSpecDaemonSetUpdateStrategy) *AgentSpecDaemonSetUpdateStrategyRollingUpdate {
		return v.RollingUpdate
	}).(AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput)
}

// Type of daemon set update. Can be "RollingUpdate" or "OnDelete". Default is RollingUpdate.
func (o AgentSpecDaemonSetUpdateStrategyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecDaemonSetUpdateStrategy) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AgentSpecDaemonSetUpdateStrategyPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecDaemonSetUpdateStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDaemonSetUpdateStrategy)(nil)).Elem()
}

func (o AgentSpecDaemonSetUpdateStrategyPtrOutput) ToAgentSpecDaemonSetUpdateStrategyPtrOutput() AgentSpecDaemonSetUpdateStrategyPtrOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyPtrOutput) ToAgentSpecDaemonSetUpdateStrategyPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyPtrOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyPtrOutput) Elem() AgentSpecDaemonSetUpdateStrategyOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSetUpdateStrategy) AgentSpecDaemonSetUpdateStrategy {
		if v != nil {
			return *v
		}
		var ret AgentSpecDaemonSetUpdateStrategy
		return ret
	}).(AgentSpecDaemonSetUpdateStrategyOutput)
}

func (o AgentSpecDaemonSetUpdateStrategyPtrOutput) RollingUpdate() AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSetUpdateStrategy) *AgentSpecDaemonSetUpdateStrategyRollingUpdate {
		if v == nil {
			return nil
		}
		return v.RollingUpdate
	}).(AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput)
}

// Type of daemon set update. Can be "RollingUpdate" or "OnDelete". Default is RollingUpdate.
func (o AgentSpecDaemonSetUpdateStrategyPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSetUpdateStrategy) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.
type AgentSpecDaemonSetUpdateStrategyPatch struct {
	RollingUpdate *AgentSpecDaemonSetUpdateStrategyRollingUpdatePatch `pulumi:"rollingUpdate"`
	// Type of daemon set update. Can be "RollingUpdate" or "OnDelete". Default is RollingUpdate.
	Type *string `pulumi:"type"`
}

// AgentSpecDaemonSetUpdateStrategyPatchInput is an input type that accepts AgentSpecDaemonSetUpdateStrategyPatchArgs and AgentSpecDaemonSetUpdateStrategyPatchOutput values.
// You can construct a concrete instance of `AgentSpecDaemonSetUpdateStrategyPatchInput` via:
//
//	AgentSpecDaemonSetUpdateStrategyPatchArgs{...}
type AgentSpecDaemonSetUpdateStrategyPatchInput interface {
	pulumi.Input

	ToAgentSpecDaemonSetUpdateStrategyPatchOutput() AgentSpecDaemonSetUpdateStrategyPatchOutput
	ToAgentSpecDaemonSetUpdateStrategyPatchOutputWithContext(context.Context) AgentSpecDaemonSetUpdateStrategyPatchOutput
}

// DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.
type AgentSpecDaemonSetUpdateStrategyPatchArgs struct {
	RollingUpdate AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrInput `pulumi:"rollingUpdate"`
	// Type of daemon set update. Can be "RollingUpdate" or "OnDelete". Default is RollingUpdate.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AgentSpecDaemonSetUpdateStrategyPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategyPatch)(nil)).Elem()
}

func (i AgentSpecDaemonSetUpdateStrategyPatchArgs) ToAgentSpecDaemonSetUpdateStrategyPatchOutput() AgentSpecDaemonSetUpdateStrategyPatchOutput {
	return i.ToAgentSpecDaemonSetUpdateStrategyPatchOutputWithContext(context.Background())
}

func (i AgentSpecDaemonSetUpdateStrategyPatchArgs) ToAgentSpecDaemonSetUpdateStrategyPatchOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetUpdateStrategyPatchOutput)
}

func (i AgentSpecDaemonSetUpdateStrategyPatchArgs) ToAgentSpecDaemonSetUpdateStrategyPatchPtrOutput() AgentSpecDaemonSetUpdateStrategyPatchPtrOutput {
	return i.ToAgentSpecDaemonSetUpdateStrategyPatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecDaemonSetUpdateStrategyPatchArgs) ToAgentSpecDaemonSetUpdateStrategyPatchPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetUpdateStrategyPatchOutput).ToAgentSpecDaemonSetUpdateStrategyPatchPtrOutputWithContext(ctx)
}

// AgentSpecDaemonSetUpdateStrategyPatchPtrInput is an input type that accepts AgentSpecDaemonSetUpdateStrategyPatchArgs, AgentSpecDaemonSetUpdateStrategyPatchPtr and AgentSpecDaemonSetUpdateStrategyPatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecDaemonSetUpdateStrategyPatchPtrInput` via:
//
//	        AgentSpecDaemonSetUpdateStrategyPatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecDaemonSetUpdateStrategyPatchPtrInput interface {
	pulumi.Input

	ToAgentSpecDaemonSetUpdateStrategyPatchPtrOutput() AgentSpecDaemonSetUpdateStrategyPatchPtrOutput
	ToAgentSpecDaemonSetUpdateStrategyPatchPtrOutputWithContext(context.Context) AgentSpecDaemonSetUpdateStrategyPatchPtrOutput
}

type agentSpecDaemonSetUpdateStrategyPatchPtrType AgentSpecDaemonSetUpdateStrategyPatchArgs

func AgentSpecDaemonSetUpdateStrategyPatchPtr(v *AgentSpecDaemonSetUpdateStrategyPatchArgs) AgentSpecDaemonSetUpdateStrategyPatchPtrInput {
	return (*agentSpecDaemonSetUpdateStrategyPatchPtrType)(v)
}

func (*agentSpecDaemonSetUpdateStrategyPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDaemonSetUpdateStrategyPatch)(nil)).Elem()
}

func (i *agentSpecDaemonSetUpdateStrategyPatchPtrType) ToAgentSpecDaemonSetUpdateStrategyPatchPtrOutput() AgentSpecDaemonSetUpdateStrategyPatchPtrOutput {
	return i.ToAgentSpecDaemonSetUpdateStrategyPatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecDaemonSetUpdateStrategyPatchPtrType) ToAgentSpecDaemonSetUpdateStrategyPatchPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetUpdateStrategyPatchPtrOutput)
}

// DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.
type AgentSpecDaemonSetUpdateStrategyPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecDaemonSetUpdateStrategyPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategyPatch)(nil)).Elem()
}

func (o AgentSpecDaemonSetUpdateStrategyPatchOutput) ToAgentSpecDaemonSetUpdateStrategyPatchOutput() AgentSpecDaemonSetUpdateStrategyPatchOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyPatchOutput) ToAgentSpecDaemonSetUpdateStrategyPatchOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyPatchOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyPatchOutput) ToAgentSpecDaemonSetUpdateStrategyPatchPtrOutput() AgentSpecDaemonSetUpdateStrategyPatchPtrOutput {
	return o.ToAgentSpecDaemonSetUpdateStrategyPatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecDaemonSetUpdateStrategyPatchOutput) ToAgentSpecDaemonSetUpdateStrategyPatchPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecDaemonSetUpdateStrategyPatch) *AgentSpecDaemonSetUpdateStrategyPatch {
		return &v
	}).(AgentSpecDaemonSetUpdateStrategyPatchPtrOutput)
}

func (o AgentSpecDaemonSetUpdateStrategyPatchOutput) RollingUpdate() AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput {
	return o.ApplyT(func(v AgentSpecDaemonSetUpdateStrategyPatch) *AgentSpecDaemonSetUpdateStrategyRollingUpdatePatch {
		return v.RollingUpdate
	}).(AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput)
}

// Type of daemon set update. Can be "RollingUpdate" or "OnDelete". Default is RollingUpdate.
func (o AgentSpecDaemonSetUpdateStrategyPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecDaemonSetUpdateStrategyPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AgentSpecDaemonSetUpdateStrategyPatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecDaemonSetUpdateStrategyPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDaemonSetUpdateStrategyPatch)(nil)).Elem()
}

func (o AgentSpecDaemonSetUpdateStrategyPatchPtrOutput) ToAgentSpecDaemonSetUpdateStrategyPatchPtrOutput() AgentSpecDaemonSetUpdateStrategyPatchPtrOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyPatchPtrOutput) ToAgentSpecDaemonSetUpdateStrategyPatchPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyPatchPtrOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyPatchPtrOutput) Elem() AgentSpecDaemonSetUpdateStrategyPatchOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSetUpdateStrategyPatch) AgentSpecDaemonSetUpdateStrategyPatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecDaemonSetUpdateStrategyPatch
		return ret
	}).(AgentSpecDaemonSetUpdateStrategyPatchOutput)
}

func (o AgentSpecDaemonSetUpdateStrategyPatchPtrOutput) RollingUpdate() AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSetUpdateStrategyPatch) *AgentSpecDaemonSetUpdateStrategyRollingUpdatePatch {
		if v == nil {
			return nil
		}
		return v.RollingUpdate
	}).(AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput)
}

// Type of daemon set update. Can be "RollingUpdate" or "OnDelete". Default is RollingUpdate.
func (o AgentSpecDaemonSetUpdateStrategyPatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSetUpdateStrategyPatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Rolling update config params. Present only if type = "RollingUpdate".
// ---
// TODO: Update this to follow our convention for oneOf, whatever we decide it
// to be. Same as Deployment `strategy.rollingUpdate`.
// See https://github.com/kubernetes/kubernetes/issues/35345
type AgentSpecDaemonSetUpdateStrategyRollingUpdate struct {
	// The maximum number of nodes with an existing available DaemonSet pod that
	// can have an updated DaemonSet pod during during an update.
	// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
	// This can not be 0 if MaxUnavailable is 0.
	// Absolute number is calculated from percentage by rounding up to a minimum of 1.
	// Default value is 0.
	// Example: when this is set to 30%, at most 30% of the total number of nodes
	// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
	// can have their a new pod created before the old pod is marked as deleted.
	// The update starts by launching new pods on 30% of nodes. Once an updated
	// pod is available (Ready for at least minReadySeconds) the old DaemonSet pod
	// on that node is marked deleted. If the old pod becomes unavailable for any
	// reason (Ready transitions to false, is evicted, or is drained) an updated
	// pod is immediatedly created on that node without considering surge limits.
	// Allowing surge implies the possibility that the resources consumed by the
	// daemonset on any given node can double if the readiness check fails, and
	// so resource intensive daemonsets should take into account that they may
	// cause evictions during disruption.
	MaxSurge interface{} `pulumi:"maxSurge"`
	// The maximum number of DaemonSet pods that can be unavailable during the
	// update. Value can be an absolute number (ex: 5) or a percentage of total
	// number of DaemonSet pods at the start of the update (ex: 10%). Absolute
	// number is calculated from percentage by rounding up.
	// This cannot be 0 if MaxSurge is 0
	// Default value is 1.
	// Example: when this is set to 30%, at most 30% of the total number of nodes
	// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
	// can have their pods stopped for an update at any given time. The update
	// starts by stopping at most 30% of those DaemonSet pods and then brings
	// up new DaemonSet pods in their place. Once the new pods are available,
	// it then proceeds onto other DaemonSet pods, thus ensuring that at least
	// 70% of original number of DaemonSet pods are available at all times during
	// the update.
	MaxUnavailable interface{} `pulumi:"maxUnavailable"`
}

// AgentSpecDaemonSetUpdateStrategyRollingUpdateInput is an input type that accepts AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs and AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput values.
// You can construct a concrete instance of `AgentSpecDaemonSetUpdateStrategyRollingUpdateInput` via:
//
//	AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs{...}
type AgentSpecDaemonSetUpdateStrategyRollingUpdateInput interface {
	pulumi.Input

	ToAgentSpecDaemonSetUpdateStrategyRollingUpdateOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput
	ToAgentSpecDaemonSetUpdateStrategyRollingUpdateOutputWithContext(context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput
}

// Rolling update config params. Present only if type = "RollingUpdate".
// ---
// TODO: Update this to follow our convention for oneOf, whatever we decide it
// to be. Same as Deployment `strategy.rollingUpdate`.
// See https://github.com/kubernetes/kubernetes/issues/35345
type AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs struct {
	// The maximum number of nodes with an existing available DaemonSet pod that
	// can have an updated DaemonSet pod during during an update.
	// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
	// This can not be 0 if MaxUnavailable is 0.
	// Absolute number is calculated from percentage by rounding up to a minimum of 1.
	// Default value is 0.
	// Example: when this is set to 30%, at most 30% of the total number of nodes
	// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
	// can have their a new pod created before the old pod is marked as deleted.
	// The update starts by launching new pods on 30% of nodes. Once an updated
	// pod is available (Ready for at least minReadySeconds) the old DaemonSet pod
	// on that node is marked deleted. If the old pod becomes unavailable for any
	// reason (Ready transitions to false, is evicted, or is drained) an updated
	// pod is immediatedly created on that node without considering surge limits.
	// Allowing surge implies the possibility that the resources consumed by the
	// daemonset on any given node can double if the readiness check fails, and
	// so resource intensive daemonsets should take into account that they may
	// cause evictions during disruption.
	MaxSurge pulumi.Input `pulumi:"maxSurge"`
	// The maximum number of DaemonSet pods that can be unavailable during the
	// update. Value can be an absolute number (ex: 5) or a percentage of total
	// number of DaemonSet pods at the start of the update (ex: 10%). Absolute
	// number is calculated from percentage by rounding up.
	// This cannot be 0 if MaxSurge is 0
	// Default value is 1.
	// Example: when this is set to 30%, at most 30% of the total number of nodes
	// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
	// can have their pods stopped for an update at any given time. The update
	// starts by stopping at most 30% of those DaemonSet pods and then brings
	// up new DaemonSet pods in their place. Once the new pods are available,
	// it then proceeds onto other DaemonSet pods, thus ensuring that at least
	// 70% of original number of DaemonSet pods are available at all times during
	// the update.
	MaxUnavailable pulumi.Input `pulumi:"maxUnavailable"`
}

func (AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategyRollingUpdate)(nil)).Elem()
}

func (i AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs) ToAgentSpecDaemonSetUpdateStrategyRollingUpdateOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput {
	return i.ToAgentSpecDaemonSetUpdateStrategyRollingUpdateOutputWithContext(context.Background())
}

func (i AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs) ToAgentSpecDaemonSetUpdateStrategyRollingUpdateOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput)
}

func (i AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput {
	return i.ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (i AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput).ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutputWithContext(ctx)
}

// AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrInput is an input type that accepts AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs, AgentSpecDaemonSetUpdateStrategyRollingUpdatePtr and AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput values.
// You can construct a concrete instance of `AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrInput` via:
//
//	        AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs{...}
//
//	or:
//
//	        nil
type AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrInput interface {
	pulumi.Input

	ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput
	ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutputWithContext(context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput
}

type agentSpecDaemonSetUpdateStrategyRollingUpdatePtrType AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs

func AgentSpecDaemonSetUpdateStrategyRollingUpdatePtr(v *AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs) AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrInput {
	return (*agentSpecDaemonSetUpdateStrategyRollingUpdatePtrType)(v)
}

func (*agentSpecDaemonSetUpdateStrategyRollingUpdatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDaemonSetUpdateStrategyRollingUpdate)(nil)).Elem()
}

func (i *agentSpecDaemonSetUpdateStrategyRollingUpdatePtrType) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput {
	return i.ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (i *agentSpecDaemonSetUpdateStrategyRollingUpdatePtrType) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput)
}

// Rolling update config params. Present only if type = "RollingUpdate".
// ---
// TODO: Update this to follow our convention for oneOf, whatever we decide it
// to be. Same as Deployment `strategy.rollingUpdate`.
// See https://github.com/kubernetes/kubernetes/issues/35345
type AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput struct{ *pulumi.OutputState }

func (AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategyRollingUpdate)(nil)).Elem()
}

func (o AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput) ToAgentSpecDaemonSetUpdateStrategyRollingUpdateOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput) ToAgentSpecDaemonSetUpdateStrategyRollingUpdateOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput {
	return o.ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (o AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecDaemonSetUpdateStrategyRollingUpdate) *AgentSpecDaemonSetUpdateStrategyRollingUpdate {
		return &v
	}).(AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput)
}

// The maximum number of nodes with an existing available DaemonSet pod that
// can have an updated DaemonSet pod during during an update.
// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
// This can not be 0 if MaxUnavailable is 0.
// Absolute number is calculated from percentage by rounding up to a minimum of 1.
// Default value is 0.
// Example: when this is set to 30%, at most 30% of the total number of nodes
// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
// can have their a new pod created before the old pod is marked as deleted.
// The update starts by launching new pods on 30% of nodes. Once an updated
// pod is available (Ready for at least minReadySeconds) the old DaemonSet pod
// on that node is marked deleted. If the old pod becomes unavailable for any
// reason (Ready transitions to false, is evicted, or is drained) an updated
// pod is immediatedly created on that node without considering surge limits.
// Allowing surge implies the possibility that the resources consumed by the
// daemonset on any given node can double if the readiness check fails, and
// so resource intensive daemonsets should take into account that they may
// cause evictions during disruption.
func (o AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput) MaxSurge() pulumi.AnyOutput {
	return o.ApplyT(func(v AgentSpecDaemonSetUpdateStrategyRollingUpdate) interface{} { return v.MaxSurge }).(pulumi.AnyOutput)
}

// The maximum number of DaemonSet pods that can be unavailable during the
// update. Value can be an absolute number (ex: 5) or a percentage of total
// number of DaemonSet pods at the start of the update (ex: 10%). Absolute
// number is calculated from percentage by rounding up.
// This cannot be 0 if MaxSurge is 0
// Default value is 1.
// Example: when this is set to 30%, at most 30% of the total number of nodes
// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
// can have their pods stopped for an update at any given time. The update
// starts by stopping at most 30% of those DaemonSet pods and then brings
// up new DaemonSet pods in their place. Once the new pods are available,
// it then proceeds onto other DaemonSet pods, thus ensuring that at least
// 70% of original number of DaemonSet pods are available at all times during
// the update.
func (o AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput) MaxUnavailable() pulumi.AnyOutput {
	return o.ApplyT(func(v AgentSpecDaemonSetUpdateStrategyRollingUpdate) interface{} { return v.MaxUnavailable }).(pulumi.AnyOutput)
}

type AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput struct{ *pulumi.OutputState }

func (AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDaemonSetUpdateStrategyRollingUpdate)(nil)).Elem()
}

func (o AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput) Elem() AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSetUpdateStrategyRollingUpdate) AgentSpecDaemonSetUpdateStrategyRollingUpdate {
		if v != nil {
			return *v
		}
		var ret AgentSpecDaemonSetUpdateStrategyRollingUpdate
		return ret
	}).(AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput)
}

// The maximum number of nodes with an existing available DaemonSet pod that
// can have an updated DaemonSet pod during during an update.
// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
// This can not be 0 if MaxUnavailable is 0.
// Absolute number is calculated from percentage by rounding up to a minimum of 1.
// Default value is 0.
// Example: when this is set to 30%, at most 30% of the total number of nodes
// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
// can have their a new pod created before the old pod is marked as deleted.
// The update starts by launching new pods on 30% of nodes. Once an updated
// pod is available (Ready for at least minReadySeconds) the old DaemonSet pod
// on that node is marked deleted. If the old pod becomes unavailable for any
// reason (Ready transitions to false, is evicted, or is drained) an updated
// pod is immediatedly created on that node without considering surge limits.
// Allowing surge implies the possibility that the resources consumed by the
// daemonset on any given node can double if the readiness check fails, and
// so resource intensive daemonsets should take into account that they may
// cause evictions during disruption.
func (o AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput) MaxSurge() pulumi.AnyOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSetUpdateStrategyRollingUpdate) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxSurge
	}).(pulumi.AnyOutput)
}

// The maximum number of DaemonSet pods that can be unavailable during the
// update. Value can be an absolute number (ex: 5) or a percentage of total
// number of DaemonSet pods at the start of the update (ex: 10%). Absolute
// number is calculated from percentage by rounding up.
// This cannot be 0 if MaxSurge is 0
// Default value is 1.
// Example: when this is set to 30%, at most 30% of the total number of nodes
// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
// can have their pods stopped for an update at any given time. The update
// starts by stopping at most 30% of those DaemonSet pods and then brings
// up new DaemonSet pods in their place. Once the new pods are available,
// it then proceeds onto other DaemonSet pods, thus ensuring that at least
// 70% of original number of DaemonSet pods are available at all times during
// the update.
func (o AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput) MaxUnavailable() pulumi.AnyOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSetUpdateStrategyRollingUpdate) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.AnyOutput)
}

// Rolling update config params. Present only if type = "RollingUpdate".
// ---
// TODO: Update this to follow our convention for oneOf, whatever we decide it
// to be. Same as Deployment `strategy.rollingUpdate`.
// See https://github.com/kubernetes/kubernetes/issues/35345
type AgentSpecDaemonSetUpdateStrategyRollingUpdatePatch struct {
	// The maximum number of nodes with an existing available DaemonSet pod that
	// can have an updated DaemonSet pod during during an update.
	// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
	// This can not be 0 if MaxUnavailable is 0.
	// Absolute number is calculated from percentage by rounding up to a minimum of 1.
	// Default value is 0.
	// Example: when this is set to 30%, at most 30% of the total number of nodes
	// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
	// can have their a new pod created before the old pod is marked as deleted.
	// The update starts by launching new pods on 30% of nodes. Once an updated
	// pod is available (Ready for at least minReadySeconds) the old DaemonSet pod
	// on that node is marked deleted. If the old pod becomes unavailable for any
	// reason (Ready transitions to false, is evicted, or is drained) an updated
	// pod is immediatedly created on that node without considering surge limits.
	// Allowing surge implies the possibility that the resources consumed by the
	// daemonset on any given node can double if the readiness check fails, and
	// so resource intensive daemonsets should take into account that they may
	// cause evictions during disruption.
	MaxSurge interface{} `pulumi:"maxSurge"`
	// The maximum number of DaemonSet pods that can be unavailable during the
	// update. Value can be an absolute number (ex: 5) or a percentage of total
	// number of DaemonSet pods at the start of the update (ex: 10%). Absolute
	// number is calculated from percentage by rounding up.
	// This cannot be 0 if MaxSurge is 0
	// Default value is 1.
	// Example: when this is set to 30%, at most 30% of the total number of nodes
	// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
	// can have their pods stopped for an update at any given time. The update
	// starts by stopping at most 30% of those DaemonSet pods and then brings
	// up new DaemonSet pods in their place. Once the new pods are available,
	// it then proceeds onto other DaemonSet pods, thus ensuring that at least
	// 70% of original number of DaemonSet pods are available at all times during
	// the update.
	MaxUnavailable interface{} `pulumi:"maxUnavailable"`
}

// AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchInput is an input type that accepts AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchArgs and AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutput values.
// You can construct a concrete instance of `AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchInput` via:
//
//	AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchArgs{...}
type AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchInput interface {
	pulumi.Input

	ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutput
	ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutputWithContext(context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutput
}

// Rolling update config params. Present only if type = "RollingUpdate".
// ---
// TODO: Update this to follow our convention for oneOf, whatever we decide it
// to be. Same as Deployment `strategy.rollingUpdate`.
// See https://github.com/kubernetes/kubernetes/issues/35345
type AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchArgs struct {
	// The maximum number of nodes with an existing available DaemonSet pod that
	// can have an updated DaemonSet pod during during an update.
	// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
	// This can not be 0 if MaxUnavailable is 0.
	// Absolute number is calculated from percentage by rounding up to a minimum of 1.
	// Default value is 0.
	// Example: when this is set to 30%, at most 30% of the total number of nodes
	// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
	// can have their a new pod created before the old pod is marked as deleted.
	// The update starts by launching new pods on 30% of nodes. Once an updated
	// pod is available (Ready for at least minReadySeconds) the old DaemonSet pod
	// on that node is marked deleted. If the old pod becomes unavailable for any
	// reason (Ready transitions to false, is evicted, or is drained) an updated
	// pod is immediatedly created on that node without considering surge limits.
	// Allowing surge implies the possibility that the resources consumed by the
	// daemonset on any given node can double if the readiness check fails, and
	// so resource intensive daemonsets should take into account that they may
	// cause evictions during disruption.
	MaxSurge pulumi.Input `pulumi:"maxSurge"`
	// The maximum number of DaemonSet pods that can be unavailable during the
	// update. Value can be an absolute number (ex: 5) or a percentage of total
	// number of DaemonSet pods at the start of the update (ex: 10%). Absolute
	// number is calculated from percentage by rounding up.
	// This cannot be 0 if MaxSurge is 0
	// Default value is 1.
	// Example: when this is set to 30%, at most 30% of the total number of nodes
	// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
	// can have their pods stopped for an update at any given time. The update
	// starts by stopping at most 30% of those DaemonSet pods and then brings
	// up new DaemonSet pods in their place. Once the new pods are available,
	// it then proceeds onto other DaemonSet pods, thus ensuring that at least
	// 70% of original number of DaemonSet pods are available at all times during
	// the update.
	MaxUnavailable pulumi.Input `pulumi:"maxUnavailable"`
}

func (AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategyRollingUpdatePatch)(nil)).Elem()
}

func (i AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchArgs) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutput {
	return i.ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutputWithContext(context.Background())
}

func (i AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchArgs) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutput)
}

func (i AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchArgs) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput {
	return i.ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchArgs) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutput).ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutputWithContext(ctx)
}

// AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrInput is an input type that accepts AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchArgs, AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtr and AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrInput` via:
//
//	        AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrInput interface {
	pulumi.Input

	ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput
	ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutputWithContext(context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput
}

type agentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrType AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchArgs

func AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtr(v *AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchArgs) AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrInput {
	return (*agentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrType)(v)
}

func (*agentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDaemonSetUpdateStrategyRollingUpdatePatch)(nil)).Elem()
}

func (i *agentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrType) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput {
	return i.ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrType) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput)
}

// Rolling update config params. Present only if type = "RollingUpdate".
// ---
// TODO: Update this to follow our convention for oneOf, whatever we decide it
// to be. Same as Deployment `strategy.rollingUpdate`.
// See https://github.com/kubernetes/kubernetes/issues/35345
type AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutput struct{ *pulumi.OutputState }

func (AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategyRollingUpdatePatch)(nil)).Elem()
}

func (o AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutput) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutput) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutput) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput {
	return o.ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutput) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecDaemonSetUpdateStrategyRollingUpdatePatch) *AgentSpecDaemonSetUpdateStrategyRollingUpdatePatch {
		return &v
	}).(AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput)
}

// The maximum number of nodes with an existing available DaemonSet pod that
// can have an updated DaemonSet pod during during an update.
// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
// This can not be 0 if MaxUnavailable is 0.
// Absolute number is calculated from percentage by rounding up to a minimum of 1.
// Default value is 0.
// Example: when this is set to 30%, at most 30% of the total number of nodes
// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
// can have their a new pod created before the old pod is marked as deleted.
// The update starts by launching new pods on 30% of nodes. Once an updated
// pod is available (Ready for at least minReadySeconds) the old DaemonSet pod
// on that node is marked deleted. If the old pod becomes unavailable for any
// reason (Ready transitions to false, is evicted, or is drained) an updated
// pod is immediatedly created on that node without considering surge limits.
// Allowing surge implies the possibility that the resources consumed by the
// daemonset on any given node can double if the readiness check fails, and
// so resource intensive daemonsets should take into account that they may
// cause evictions during disruption.
func (o AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutput) MaxSurge() pulumi.AnyOutput {
	return o.ApplyT(func(v AgentSpecDaemonSetUpdateStrategyRollingUpdatePatch) interface{} { return v.MaxSurge }).(pulumi.AnyOutput)
}

// The maximum number of DaemonSet pods that can be unavailable during the
// update. Value can be an absolute number (ex: 5) or a percentage of total
// number of DaemonSet pods at the start of the update (ex: 10%). Absolute
// number is calculated from percentage by rounding up.
// This cannot be 0 if MaxSurge is 0
// Default value is 1.
// Example: when this is set to 30%, at most 30% of the total number of nodes
// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
// can have their pods stopped for an update at any given time. The update
// starts by stopping at most 30% of those DaemonSet pods and then brings
// up new DaemonSet pods in their place. Once the new pods are available,
// it then proceeds onto other DaemonSet pods, thus ensuring that at least
// 70% of original number of DaemonSet pods are available at all times during
// the update.
func (o AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutput) MaxUnavailable() pulumi.AnyOutput {
	return o.ApplyT(func(v AgentSpecDaemonSetUpdateStrategyRollingUpdatePatch) interface{} { return v.MaxUnavailable }).(pulumi.AnyOutput)
}

type AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDaemonSetUpdateStrategyRollingUpdatePatch)(nil)).Elem()
}

func (o AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput) Elem() AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSetUpdateStrategyRollingUpdatePatch) AgentSpecDaemonSetUpdateStrategyRollingUpdatePatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecDaemonSetUpdateStrategyRollingUpdatePatch
		return ret
	}).(AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutput)
}

// The maximum number of nodes with an existing available DaemonSet pod that
// can have an updated DaemonSet pod during during an update.
// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
// This can not be 0 if MaxUnavailable is 0.
// Absolute number is calculated from percentage by rounding up to a minimum of 1.
// Default value is 0.
// Example: when this is set to 30%, at most 30% of the total number of nodes
// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
// can have their a new pod created before the old pod is marked as deleted.
// The update starts by launching new pods on 30% of nodes. Once an updated
// pod is available (Ready for at least minReadySeconds) the old DaemonSet pod
// on that node is marked deleted. If the old pod becomes unavailable for any
// reason (Ready transitions to false, is evicted, or is drained) an updated
// pod is immediatedly created on that node without considering surge limits.
// Allowing surge implies the possibility that the resources consumed by the
// daemonset on any given node can double if the readiness check fails, and
// so resource intensive daemonsets should take into account that they may
// cause evictions during disruption.
func (o AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput) MaxSurge() pulumi.AnyOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSetUpdateStrategyRollingUpdatePatch) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxSurge
	}).(pulumi.AnyOutput)
}

// The maximum number of DaemonSet pods that can be unavailable during the
// update. Value can be an absolute number (ex: 5) or a percentage of total
// number of DaemonSet pods at the start of the update (ex: 10%). Absolute
// number is calculated from percentage by rounding up.
// This cannot be 0 if MaxSurge is 0
// Default value is 1.
// Example: when this is set to 30%, at most 30% of the total number of nodes
// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
// can have their pods stopped for an update at any given time. The update
// starts by stopping at most 30% of those DaemonSet pods and then brings
// up new DaemonSet pods in their place. Once the new pods are available,
// it then proceeds onto other DaemonSet pods, thus ensuring that at least
// 70% of original number of DaemonSet pods are available at all times during
// the update.
func (o AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput) MaxUnavailable() pulumi.AnyOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSetUpdateStrategyRollingUpdatePatch) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.AnyOutput)
}

// Deployment specifies the Agent should be deployed as a Deployment, and allows providing its spec.
// Cannot be used along with `daemonSet` or `statefulSet`.
type AgentSpecDeployment struct {
	// PodTemplateSpec describes the data a pod should have when created from a template
	PodTemplate map[string]interface{}       `pulumi:"podTemplate"`
	Replicas    *int                         `pulumi:"replicas"`
	Strategy    *AgentSpecDeploymentStrategy `pulumi:"strategy"`
}

// AgentSpecDeploymentInput is an input type that accepts AgentSpecDeploymentArgs and AgentSpecDeploymentOutput values.
// You can construct a concrete instance of `AgentSpecDeploymentInput` via:
//
//	AgentSpecDeploymentArgs{...}
type AgentSpecDeploymentInput interface {
	pulumi.Input

	ToAgentSpecDeploymentOutput() AgentSpecDeploymentOutput
	ToAgentSpecDeploymentOutputWithContext(context.Context) AgentSpecDeploymentOutput
}

// Deployment specifies the Agent should be deployed as a Deployment, and allows providing its spec.
// Cannot be used along with `daemonSet` or `statefulSet`.
type AgentSpecDeploymentArgs struct {
	// PodTemplateSpec describes the data a pod should have when created from a template
	PodTemplate pulumi.MapInput                     `pulumi:"podTemplate"`
	Replicas    pulumi.IntPtrInput                  `pulumi:"replicas"`
	Strategy    AgentSpecDeploymentStrategyPtrInput `pulumi:"strategy"`
}

func (AgentSpecDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDeployment)(nil)).Elem()
}

func (i AgentSpecDeploymentArgs) ToAgentSpecDeploymentOutput() AgentSpecDeploymentOutput {
	return i.ToAgentSpecDeploymentOutputWithContext(context.Background())
}

func (i AgentSpecDeploymentArgs) ToAgentSpecDeploymentOutputWithContext(ctx context.Context) AgentSpecDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentOutput)
}

func (i AgentSpecDeploymentArgs) ToAgentSpecDeploymentPtrOutput() AgentSpecDeploymentPtrOutput {
	return i.ToAgentSpecDeploymentPtrOutputWithContext(context.Background())
}

func (i AgentSpecDeploymentArgs) ToAgentSpecDeploymentPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentOutput).ToAgentSpecDeploymentPtrOutputWithContext(ctx)
}

// AgentSpecDeploymentPtrInput is an input type that accepts AgentSpecDeploymentArgs, AgentSpecDeploymentPtr and AgentSpecDeploymentPtrOutput values.
// You can construct a concrete instance of `AgentSpecDeploymentPtrInput` via:
//
//	        AgentSpecDeploymentArgs{...}
//
//	or:
//
//	        nil
type AgentSpecDeploymentPtrInput interface {
	pulumi.Input

	ToAgentSpecDeploymentPtrOutput() AgentSpecDeploymentPtrOutput
	ToAgentSpecDeploymentPtrOutputWithContext(context.Context) AgentSpecDeploymentPtrOutput
}

type agentSpecDeploymentPtrType AgentSpecDeploymentArgs

func AgentSpecDeploymentPtr(v *AgentSpecDeploymentArgs) AgentSpecDeploymentPtrInput {
	return (*agentSpecDeploymentPtrType)(v)
}

func (*agentSpecDeploymentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDeployment)(nil)).Elem()
}

func (i *agentSpecDeploymentPtrType) ToAgentSpecDeploymentPtrOutput() AgentSpecDeploymentPtrOutput {
	return i.ToAgentSpecDeploymentPtrOutputWithContext(context.Background())
}

func (i *agentSpecDeploymentPtrType) ToAgentSpecDeploymentPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentPtrOutput)
}

// Deployment specifies the Agent should be deployed as a Deployment, and allows providing its spec.
// Cannot be used along with `daemonSet` or `statefulSet`.
type AgentSpecDeploymentOutput struct{ *pulumi.OutputState }

func (AgentSpecDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDeployment)(nil)).Elem()
}

func (o AgentSpecDeploymentOutput) ToAgentSpecDeploymentOutput() AgentSpecDeploymentOutput {
	return o
}

func (o AgentSpecDeploymentOutput) ToAgentSpecDeploymentOutputWithContext(ctx context.Context) AgentSpecDeploymentOutput {
	return o
}

func (o AgentSpecDeploymentOutput) ToAgentSpecDeploymentPtrOutput() AgentSpecDeploymentPtrOutput {
	return o.ToAgentSpecDeploymentPtrOutputWithContext(context.Background())
}

func (o AgentSpecDeploymentOutput) ToAgentSpecDeploymentPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecDeployment) *AgentSpecDeployment {
		return &v
	}).(AgentSpecDeploymentPtrOutput)
}

// PodTemplateSpec describes the data a pod should have when created from a template
func (o AgentSpecDeploymentOutput) PodTemplate() pulumi.MapOutput {
	return o.ApplyT(func(v AgentSpecDeployment) map[string]interface{} { return v.PodTemplate }).(pulumi.MapOutput)
}

func (o AgentSpecDeploymentOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentSpecDeployment) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

func (o AgentSpecDeploymentOutput) Strategy() AgentSpecDeploymentStrategyPtrOutput {
	return o.ApplyT(func(v AgentSpecDeployment) *AgentSpecDeploymentStrategy { return v.Strategy }).(AgentSpecDeploymentStrategyPtrOutput)
}

type AgentSpecDeploymentPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecDeploymentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDeployment)(nil)).Elem()
}

func (o AgentSpecDeploymentPtrOutput) ToAgentSpecDeploymentPtrOutput() AgentSpecDeploymentPtrOutput {
	return o
}

func (o AgentSpecDeploymentPtrOutput) ToAgentSpecDeploymentPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentPtrOutput {
	return o
}

func (o AgentSpecDeploymentPtrOutput) Elem() AgentSpecDeploymentOutput {
	return o.ApplyT(func(v *AgentSpecDeployment) AgentSpecDeployment {
		if v != nil {
			return *v
		}
		var ret AgentSpecDeployment
		return ret
	}).(AgentSpecDeploymentOutput)
}

// PodTemplateSpec describes the data a pod should have when created from a template
func (o AgentSpecDeploymentPtrOutput) PodTemplate() pulumi.MapOutput {
	return o.ApplyT(func(v *AgentSpecDeployment) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.PodTemplate
	}).(pulumi.MapOutput)
}

func (o AgentSpecDeploymentPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentSpecDeployment) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

func (o AgentSpecDeploymentPtrOutput) Strategy() AgentSpecDeploymentStrategyPtrOutput {
	return o.ApplyT(func(v *AgentSpecDeployment) *AgentSpecDeploymentStrategy {
		if v == nil {
			return nil
		}
		return v.Strategy
	}).(AgentSpecDeploymentStrategyPtrOutput)
}

// Deployment specifies the Agent should be deployed as a Deployment, and allows providing its spec.
// Cannot be used along with `daemonSet` or `statefulSet`.
type AgentSpecDeploymentPatch struct {
	// PodTemplateSpec describes the data a pod should have when created from a template
	PodTemplate map[string]interface{}            `pulumi:"podTemplate"`
	Replicas    *int                              `pulumi:"replicas"`
	Strategy    *AgentSpecDeploymentStrategyPatch `pulumi:"strategy"`
}

// AgentSpecDeploymentPatchInput is an input type that accepts AgentSpecDeploymentPatchArgs and AgentSpecDeploymentPatchOutput values.
// You can construct a concrete instance of `AgentSpecDeploymentPatchInput` via:
//
//	AgentSpecDeploymentPatchArgs{...}
type AgentSpecDeploymentPatchInput interface {
	pulumi.Input

	ToAgentSpecDeploymentPatchOutput() AgentSpecDeploymentPatchOutput
	ToAgentSpecDeploymentPatchOutputWithContext(context.Context) AgentSpecDeploymentPatchOutput
}

// Deployment specifies the Agent should be deployed as a Deployment, and allows providing its spec.
// Cannot be used along with `daemonSet` or `statefulSet`.
type AgentSpecDeploymentPatchArgs struct {
	// PodTemplateSpec describes the data a pod should have when created from a template
	PodTemplate pulumi.MapInput                          `pulumi:"podTemplate"`
	Replicas    pulumi.IntPtrInput                       `pulumi:"replicas"`
	Strategy    AgentSpecDeploymentStrategyPatchPtrInput `pulumi:"strategy"`
}

func (AgentSpecDeploymentPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDeploymentPatch)(nil)).Elem()
}

func (i AgentSpecDeploymentPatchArgs) ToAgentSpecDeploymentPatchOutput() AgentSpecDeploymentPatchOutput {
	return i.ToAgentSpecDeploymentPatchOutputWithContext(context.Background())
}

func (i AgentSpecDeploymentPatchArgs) ToAgentSpecDeploymentPatchOutputWithContext(ctx context.Context) AgentSpecDeploymentPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentPatchOutput)
}

func (i AgentSpecDeploymentPatchArgs) ToAgentSpecDeploymentPatchPtrOutput() AgentSpecDeploymentPatchPtrOutput {
	return i.ToAgentSpecDeploymentPatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecDeploymentPatchArgs) ToAgentSpecDeploymentPatchPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentPatchOutput).ToAgentSpecDeploymentPatchPtrOutputWithContext(ctx)
}

// AgentSpecDeploymentPatchPtrInput is an input type that accepts AgentSpecDeploymentPatchArgs, AgentSpecDeploymentPatchPtr and AgentSpecDeploymentPatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecDeploymentPatchPtrInput` via:
//
//	        AgentSpecDeploymentPatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecDeploymentPatchPtrInput interface {
	pulumi.Input

	ToAgentSpecDeploymentPatchPtrOutput() AgentSpecDeploymentPatchPtrOutput
	ToAgentSpecDeploymentPatchPtrOutputWithContext(context.Context) AgentSpecDeploymentPatchPtrOutput
}

type agentSpecDeploymentPatchPtrType AgentSpecDeploymentPatchArgs

func AgentSpecDeploymentPatchPtr(v *AgentSpecDeploymentPatchArgs) AgentSpecDeploymentPatchPtrInput {
	return (*agentSpecDeploymentPatchPtrType)(v)
}

func (*agentSpecDeploymentPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDeploymentPatch)(nil)).Elem()
}

func (i *agentSpecDeploymentPatchPtrType) ToAgentSpecDeploymentPatchPtrOutput() AgentSpecDeploymentPatchPtrOutput {
	return i.ToAgentSpecDeploymentPatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecDeploymentPatchPtrType) ToAgentSpecDeploymentPatchPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentPatchPtrOutput)
}

// Deployment specifies the Agent should be deployed as a Deployment, and allows providing its spec.
// Cannot be used along with `daemonSet` or `statefulSet`.
type AgentSpecDeploymentPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecDeploymentPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDeploymentPatch)(nil)).Elem()
}

func (o AgentSpecDeploymentPatchOutput) ToAgentSpecDeploymentPatchOutput() AgentSpecDeploymentPatchOutput {
	return o
}

func (o AgentSpecDeploymentPatchOutput) ToAgentSpecDeploymentPatchOutputWithContext(ctx context.Context) AgentSpecDeploymentPatchOutput {
	return o
}

func (o AgentSpecDeploymentPatchOutput) ToAgentSpecDeploymentPatchPtrOutput() AgentSpecDeploymentPatchPtrOutput {
	return o.ToAgentSpecDeploymentPatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecDeploymentPatchOutput) ToAgentSpecDeploymentPatchPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecDeploymentPatch) *AgentSpecDeploymentPatch {
		return &v
	}).(AgentSpecDeploymentPatchPtrOutput)
}

// PodTemplateSpec describes the data a pod should have when created from a template
func (o AgentSpecDeploymentPatchOutput) PodTemplate() pulumi.MapOutput {
	return o.ApplyT(func(v AgentSpecDeploymentPatch) map[string]interface{} { return v.PodTemplate }).(pulumi.MapOutput)
}

func (o AgentSpecDeploymentPatchOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentSpecDeploymentPatch) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

func (o AgentSpecDeploymentPatchOutput) Strategy() AgentSpecDeploymentStrategyPatchPtrOutput {
	return o.ApplyT(func(v AgentSpecDeploymentPatch) *AgentSpecDeploymentStrategyPatch { return v.Strategy }).(AgentSpecDeploymentStrategyPatchPtrOutput)
}

type AgentSpecDeploymentPatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecDeploymentPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDeploymentPatch)(nil)).Elem()
}

func (o AgentSpecDeploymentPatchPtrOutput) ToAgentSpecDeploymentPatchPtrOutput() AgentSpecDeploymentPatchPtrOutput {
	return o
}

func (o AgentSpecDeploymentPatchPtrOutput) ToAgentSpecDeploymentPatchPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentPatchPtrOutput {
	return o
}

func (o AgentSpecDeploymentPatchPtrOutput) Elem() AgentSpecDeploymentPatchOutput {
	return o.ApplyT(func(v *AgentSpecDeploymentPatch) AgentSpecDeploymentPatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecDeploymentPatch
		return ret
	}).(AgentSpecDeploymentPatchOutput)
}

// PodTemplateSpec describes the data a pod should have when created from a template
func (o AgentSpecDeploymentPatchPtrOutput) PodTemplate() pulumi.MapOutput {
	return o.ApplyT(func(v *AgentSpecDeploymentPatch) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.PodTemplate
	}).(pulumi.MapOutput)
}

func (o AgentSpecDeploymentPatchPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentSpecDeploymentPatch) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

func (o AgentSpecDeploymentPatchPtrOutput) Strategy() AgentSpecDeploymentStrategyPatchPtrOutput {
	return o.ApplyT(func(v *AgentSpecDeploymentPatch) *AgentSpecDeploymentStrategyPatch {
		if v == nil {
			return nil
		}
		return v.Strategy
	}).(AgentSpecDeploymentStrategyPatchPtrOutput)
}

// DeploymentStrategy describes how to replace existing pods with new ones.
type AgentSpecDeploymentStrategy struct {
	RollingUpdate *AgentSpecDeploymentStrategyRollingUpdate `pulumi:"rollingUpdate"`
	// Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
	Type *string `pulumi:"type"`
}

// AgentSpecDeploymentStrategyInput is an input type that accepts AgentSpecDeploymentStrategyArgs and AgentSpecDeploymentStrategyOutput values.
// You can construct a concrete instance of `AgentSpecDeploymentStrategyInput` via:
//
//	AgentSpecDeploymentStrategyArgs{...}
type AgentSpecDeploymentStrategyInput interface {
	pulumi.Input

	ToAgentSpecDeploymentStrategyOutput() AgentSpecDeploymentStrategyOutput
	ToAgentSpecDeploymentStrategyOutputWithContext(context.Context) AgentSpecDeploymentStrategyOutput
}

// DeploymentStrategy describes how to replace existing pods with new ones.
type AgentSpecDeploymentStrategyArgs struct {
	RollingUpdate AgentSpecDeploymentStrategyRollingUpdatePtrInput `pulumi:"rollingUpdate"`
	// Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AgentSpecDeploymentStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDeploymentStrategy)(nil)).Elem()
}

func (i AgentSpecDeploymentStrategyArgs) ToAgentSpecDeploymentStrategyOutput() AgentSpecDeploymentStrategyOutput {
	return i.ToAgentSpecDeploymentStrategyOutputWithContext(context.Background())
}

func (i AgentSpecDeploymentStrategyArgs) ToAgentSpecDeploymentStrategyOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentStrategyOutput)
}

func (i AgentSpecDeploymentStrategyArgs) ToAgentSpecDeploymentStrategyPtrOutput() AgentSpecDeploymentStrategyPtrOutput {
	return i.ToAgentSpecDeploymentStrategyPtrOutputWithContext(context.Background())
}

func (i AgentSpecDeploymentStrategyArgs) ToAgentSpecDeploymentStrategyPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentStrategyOutput).ToAgentSpecDeploymentStrategyPtrOutputWithContext(ctx)
}

// AgentSpecDeploymentStrategyPtrInput is an input type that accepts AgentSpecDeploymentStrategyArgs, AgentSpecDeploymentStrategyPtr and AgentSpecDeploymentStrategyPtrOutput values.
// You can construct a concrete instance of `AgentSpecDeploymentStrategyPtrInput` via:
//
//	        AgentSpecDeploymentStrategyArgs{...}
//
//	or:
//
//	        nil
type AgentSpecDeploymentStrategyPtrInput interface {
	pulumi.Input

	ToAgentSpecDeploymentStrategyPtrOutput() AgentSpecDeploymentStrategyPtrOutput
	ToAgentSpecDeploymentStrategyPtrOutputWithContext(context.Context) AgentSpecDeploymentStrategyPtrOutput
}

type agentSpecDeploymentStrategyPtrType AgentSpecDeploymentStrategyArgs

func AgentSpecDeploymentStrategyPtr(v *AgentSpecDeploymentStrategyArgs) AgentSpecDeploymentStrategyPtrInput {
	return (*agentSpecDeploymentStrategyPtrType)(v)
}

func (*agentSpecDeploymentStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDeploymentStrategy)(nil)).Elem()
}

func (i *agentSpecDeploymentStrategyPtrType) ToAgentSpecDeploymentStrategyPtrOutput() AgentSpecDeploymentStrategyPtrOutput {
	return i.ToAgentSpecDeploymentStrategyPtrOutputWithContext(context.Background())
}

func (i *agentSpecDeploymentStrategyPtrType) ToAgentSpecDeploymentStrategyPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentStrategyPtrOutput)
}

// DeploymentStrategy describes how to replace existing pods with new ones.
type AgentSpecDeploymentStrategyOutput struct{ *pulumi.OutputState }

func (AgentSpecDeploymentStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDeploymentStrategy)(nil)).Elem()
}

func (o AgentSpecDeploymentStrategyOutput) ToAgentSpecDeploymentStrategyOutput() AgentSpecDeploymentStrategyOutput {
	return o
}

func (o AgentSpecDeploymentStrategyOutput) ToAgentSpecDeploymentStrategyOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyOutput {
	return o
}

func (o AgentSpecDeploymentStrategyOutput) ToAgentSpecDeploymentStrategyPtrOutput() AgentSpecDeploymentStrategyPtrOutput {
	return o.ToAgentSpecDeploymentStrategyPtrOutputWithContext(context.Background())
}

func (o AgentSpecDeploymentStrategyOutput) ToAgentSpecDeploymentStrategyPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecDeploymentStrategy) *AgentSpecDeploymentStrategy {
		return &v
	}).(AgentSpecDeploymentStrategyPtrOutput)
}

func (o AgentSpecDeploymentStrategyOutput) RollingUpdate() AgentSpecDeploymentStrategyRollingUpdatePtrOutput {
	return o.ApplyT(func(v AgentSpecDeploymentStrategy) *AgentSpecDeploymentStrategyRollingUpdate { return v.RollingUpdate }).(AgentSpecDeploymentStrategyRollingUpdatePtrOutput)
}

// Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
func (o AgentSpecDeploymentStrategyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecDeploymentStrategy) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AgentSpecDeploymentStrategyPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecDeploymentStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDeploymentStrategy)(nil)).Elem()
}

func (o AgentSpecDeploymentStrategyPtrOutput) ToAgentSpecDeploymentStrategyPtrOutput() AgentSpecDeploymentStrategyPtrOutput {
	return o
}

func (o AgentSpecDeploymentStrategyPtrOutput) ToAgentSpecDeploymentStrategyPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyPtrOutput {
	return o
}

func (o AgentSpecDeploymentStrategyPtrOutput) Elem() AgentSpecDeploymentStrategyOutput {
	return o.ApplyT(func(v *AgentSpecDeploymentStrategy) AgentSpecDeploymentStrategy {
		if v != nil {
			return *v
		}
		var ret AgentSpecDeploymentStrategy
		return ret
	}).(AgentSpecDeploymentStrategyOutput)
}

func (o AgentSpecDeploymentStrategyPtrOutput) RollingUpdate() AgentSpecDeploymentStrategyRollingUpdatePtrOutput {
	return o.ApplyT(func(v *AgentSpecDeploymentStrategy) *AgentSpecDeploymentStrategyRollingUpdate {
		if v == nil {
			return nil
		}
		return v.RollingUpdate
	}).(AgentSpecDeploymentStrategyRollingUpdatePtrOutput)
}

// Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
func (o AgentSpecDeploymentStrategyPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecDeploymentStrategy) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// DeploymentStrategy describes how to replace existing pods with new ones.
type AgentSpecDeploymentStrategyPatch struct {
	RollingUpdate *AgentSpecDeploymentStrategyRollingUpdatePatch `pulumi:"rollingUpdate"`
	// Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
	Type *string `pulumi:"type"`
}

// AgentSpecDeploymentStrategyPatchInput is an input type that accepts AgentSpecDeploymentStrategyPatchArgs and AgentSpecDeploymentStrategyPatchOutput values.
// You can construct a concrete instance of `AgentSpecDeploymentStrategyPatchInput` via:
//
//	AgentSpecDeploymentStrategyPatchArgs{...}
type AgentSpecDeploymentStrategyPatchInput interface {
	pulumi.Input

	ToAgentSpecDeploymentStrategyPatchOutput() AgentSpecDeploymentStrategyPatchOutput
	ToAgentSpecDeploymentStrategyPatchOutputWithContext(context.Context) AgentSpecDeploymentStrategyPatchOutput
}

// DeploymentStrategy describes how to replace existing pods with new ones.
type AgentSpecDeploymentStrategyPatchArgs struct {
	RollingUpdate AgentSpecDeploymentStrategyRollingUpdatePatchPtrInput `pulumi:"rollingUpdate"`
	// Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AgentSpecDeploymentStrategyPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDeploymentStrategyPatch)(nil)).Elem()
}

func (i AgentSpecDeploymentStrategyPatchArgs) ToAgentSpecDeploymentStrategyPatchOutput() AgentSpecDeploymentStrategyPatchOutput {
	return i.ToAgentSpecDeploymentStrategyPatchOutputWithContext(context.Background())
}

func (i AgentSpecDeploymentStrategyPatchArgs) ToAgentSpecDeploymentStrategyPatchOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentStrategyPatchOutput)
}

func (i AgentSpecDeploymentStrategyPatchArgs) ToAgentSpecDeploymentStrategyPatchPtrOutput() AgentSpecDeploymentStrategyPatchPtrOutput {
	return i.ToAgentSpecDeploymentStrategyPatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecDeploymentStrategyPatchArgs) ToAgentSpecDeploymentStrategyPatchPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentStrategyPatchOutput).ToAgentSpecDeploymentStrategyPatchPtrOutputWithContext(ctx)
}

// AgentSpecDeploymentStrategyPatchPtrInput is an input type that accepts AgentSpecDeploymentStrategyPatchArgs, AgentSpecDeploymentStrategyPatchPtr and AgentSpecDeploymentStrategyPatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecDeploymentStrategyPatchPtrInput` via:
//
//	        AgentSpecDeploymentStrategyPatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecDeploymentStrategyPatchPtrInput interface {
	pulumi.Input

	ToAgentSpecDeploymentStrategyPatchPtrOutput() AgentSpecDeploymentStrategyPatchPtrOutput
	ToAgentSpecDeploymentStrategyPatchPtrOutputWithContext(context.Context) AgentSpecDeploymentStrategyPatchPtrOutput
}

type agentSpecDeploymentStrategyPatchPtrType AgentSpecDeploymentStrategyPatchArgs

func AgentSpecDeploymentStrategyPatchPtr(v *AgentSpecDeploymentStrategyPatchArgs) AgentSpecDeploymentStrategyPatchPtrInput {
	return (*agentSpecDeploymentStrategyPatchPtrType)(v)
}

func (*agentSpecDeploymentStrategyPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDeploymentStrategyPatch)(nil)).Elem()
}

func (i *agentSpecDeploymentStrategyPatchPtrType) ToAgentSpecDeploymentStrategyPatchPtrOutput() AgentSpecDeploymentStrategyPatchPtrOutput {
	return i.ToAgentSpecDeploymentStrategyPatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecDeploymentStrategyPatchPtrType) ToAgentSpecDeploymentStrategyPatchPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentStrategyPatchPtrOutput)
}

// DeploymentStrategy describes how to replace existing pods with new ones.
type AgentSpecDeploymentStrategyPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecDeploymentStrategyPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDeploymentStrategyPatch)(nil)).Elem()
}

func (o AgentSpecDeploymentStrategyPatchOutput) ToAgentSpecDeploymentStrategyPatchOutput() AgentSpecDeploymentStrategyPatchOutput {
	return o
}

func (o AgentSpecDeploymentStrategyPatchOutput) ToAgentSpecDeploymentStrategyPatchOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyPatchOutput {
	return o
}

func (o AgentSpecDeploymentStrategyPatchOutput) ToAgentSpecDeploymentStrategyPatchPtrOutput() AgentSpecDeploymentStrategyPatchPtrOutput {
	return o.ToAgentSpecDeploymentStrategyPatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecDeploymentStrategyPatchOutput) ToAgentSpecDeploymentStrategyPatchPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecDeploymentStrategyPatch) *AgentSpecDeploymentStrategyPatch {
		return &v
	}).(AgentSpecDeploymentStrategyPatchPtrOutput)
}

func (o AgentSpecDeploymentStrategyPatchOutput) RollingUpdate() AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput {
	return o.ApplyT(func(v AgentSpecDeploymentStrategyPatch) *AgentSpecDeploymentStrategyRollingUpdatePatch {
		return v.RollingUpdate
	}).(AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput)
}

// Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
func (o AgentSpecDeploymentStrategyPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecDeploymentStrategyPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AgentSpecDeploymentStrategyPatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecDeploymentStrategyPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDeploymentStrategyPatch)(nil)).Elem()
}

func (o AgentSpecDeploymentStrategyPatchPtrOutput) ToAgentSpecDeploymentStrategyPatchPtrOutput() AgentSpecDeploymentStrategyPatchPtrOutput {
	return o
}

func (o AgentSpecDeploymentStrategyPatchPtrOutput) ToAgentSpecDeploymentStrategyPatchPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyPatchPtrOutput {
	return o
}

func (o AgentSpecDeploymentStrategyPatchPtrOutput) Elem() AgentSpecDeploymentStrategyPatchOutput {
	return o.ApplyT(func(v *AgentSpecDeploymentStrategyPatch) AgentSpecDeploymentStrategyPatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecDeploymentStrategyPatch
		return ret
	}).(AgentSpecDeploymentStrategyPatchOutput)
}

func (o AgentSpecDeploymentStrategyPatchPtrOutput) RollingUpdate() AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput {
	return o.ApplyT(func(v *AgentSpecDeploymentStrategyPatch) *AgentSpecDeploymentStrategyRollingUpdatePatch {
		if v == nil {
			return nil
		}
		return v.RollingUpdate
	}).(AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput)
}

// Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
func (o AgentSpecDeploymentStrategyPatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecDeploymentStrategyPatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Rolling update config params. Present only if DeploymentStrategyType =
// RollingUpdate.
// ---
// TODO: Update this to follow our convention for oneOf, whatever we decide it
// to be.
type AgentSpecDeploymentStrategyRollingUpdate struct {
	// The maximum number of pods that can be scheduled above the desired number of
	// pods.
	// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
	// This can not be 0 if MaxUnavailable is 0.
	// Absolute number is calculated from percentage by rounding up.
	// Defaults to 25%.
	// Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when
	// the rolling update starts, such that the total number of old and new pods do not exceed
	// 130% of desired pods. Once old pods have been killed,
	// new ReplicaSet can be scaled up further, ensuring that total number of pods running
	// at any time during the update is at most 130% of desired pods.
	MaxSurge interface{} `pulumi:"maxSurge"`
	// The maximum number of pods that can be unavailable during the update.
	// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
	// Absolute number is calculated from percentage by rounding down.
	// This can not be 0 if MaxSurge is 0.
	// Defaults to 25%.
	// Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
	// immediately when the rolling update starts. Once new pods are ready, old ReplicaSet
	// can be scaled down further, followed by scaling up the new ReplicaSet, ensuring
	// that the total number of pods available at all times during the update is at
	// least 70% of desired pods.
	MaxUnavailable interface{} `pulumi:"maxUnavailable"`
}

// AgentSpecDeploymentStrategyRollingUpdateInput is an input type that accepts AgentSpecDeploymentStrategyRollingUpdateArgs and AgentSpecDeploymentStrategyRollingUpdateOutput values.
// You can construct a concrete instance of `AgentSpecDeploymentStrategyRollingUpdateInput` via:
//
//	AgentSpecDeploymentStrategyRollingUpdateArgs{...}
type AgentSpecDeploymentStrategyRollingUpdateInput interface {
	pulumi.Input

	ToAgentSpecDeploymentStrategyRollingUpdateOutput() AgentSpecDeploymentStrategyRollingUpdateOutput
	ToAgentSpecDeploymentStrategyRollingUpdateOutputWithContext(context.Context) AgentSpecDeploymentStrategyRollingUpdateOutput
}

// Rolling update config params. Present only if DeploymentStrategyType =
// RollingUpdate.
// ---
// TODO: Update this to follow our convention for oneOf, whatever we decide it
// to be.
type AgentSpecDeploymentStrategyRollingUpdateArgs struct {
	// The maximum number of pods that can be scheduled above the desired number of
	// pods.
	// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
	// This can not be 0 if MaxUnavailable is 0.
	// Absolute number is calculated from percentage by rounding up.
	// Defaults to 25%.
	// Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when
	// the rolling update starts, such that the total number of old and new pods do not exceed
	// 130% of desired pods. Once old pods have been killed,
	// new ReplicaSet can be scaled up further, ensuring that total number of pods running
	// at any time during the update is at most 130% of desired pods.
	MaxSurge pulumi.Input `pulumi:"maxSurge"`
	// The maximum number of pods that can be unavailable during the update.
	// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
	// Absolute number is calculated from percentage by rounding down.
	// This can not be 0 if MaxSurge is 0.
	// Defaults to 25%.
	// Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
	// immediately when the rolling update starts. Once new pods are ready, old ReplicaSet
	// can be scaled down further, followed by scaling up the new ReplicaSet, ensuring
	// that the total number of pods available at all times during the update is at
	// least 70% of desired pods.
	MaxUnavailable pulumi.Input `pulumi:"maxUnavailable"`
}

func (AgentSpecDeploymentStrategyRollingUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDeploymentStrategyRollingUpdate)(nil)).Elem()
}

func (i AgentSpecDeploymentStrategyRollingUpdateArgs) ToAgentSpecDeploymentStrategyRollingUpdateOutput() AgentSpecDeploymentStrategyRollingUpdateOutput {
	return i.ToAgentSpecDeploymentStrategyRollingUpdateOutputWithContext(context.Background())
}

func (i AgentSpecDeploymentStrategyRollingUpdateArgs) ToAgentSpecDeploymentStrategyRollingUpdateOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyRollingUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentStrategyRollingUpdateOutput)
}

func (i AgentSpecDeploymentStrategyRollingUpdateArgs) ToAgentSpecDeploymentStrategyRollingUpdatePtrOutput() AgentSpecDeploymentStrategyRollingUpdatePtrOutput {
	return i.ToAgentSpecDeploymentStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (i AgentSpecDeploymentStrategyRollingUpdateArgs) ToAgentSpecDeploymentStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyRollingUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentStrategyRollingUpdateOutput).ToAgentSpecDeploymentStrategyRollingUpdatePtrOutputWithContext(ctx)
}

// AgentSpecDeploymentStrategyRollingUpdatePtrInput is an input type that accepts AgentSpecDeploymentStrategyRollingUpdateArgs, AgentSpecDeploymentStrategyRollingUpdatePtr and AgentSpecDeploymentStrategyRollingUpdatePtrOutput values.
// You can construct a concrete instance of `AgentSpecDeploymentStrategyRollingUpdatePtrInput` via:
//
//	        AgentSpecDeploymentStrategyRollingUpdateArgs{...}
//
//	or:
//
//	        nil
type AgentSpecDeploymentStrategyRollingUpdatePtrInput interface {
	pulumi.Input

	ToAgentSpecDeploymentStrategyRollingUpdatePtrOutput() AgentSpecDeploymentStrategyRollingUpdatePtrOutput
	ToAgentSpecDeploymentStrategyRollingUpdatePtrOutputWithContext(context.Context) AgentSpecDeploymentStrategyRollingUpdatePtrOutput
}

type agentSpecDeploymentStrategyRollingUpdatePtrType AgentSpecDeploymentStrategyRollingUpdateArgs

func AgentSpecDeploymentStrategyRollingUpdatePtr(v *AgentSpecDeploymentStrategyRollingUpdateArgs) AgentSpecDeploymentStrategyRollingUpdatePtrInput {
	return (*agentSpecDeploymentStrategyRollingUpdatePtrType)(v)
}

func (*agentSpecDeploymentStrategyRollingUpdatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDeploymentStrategyRollingUpdate)(nil)).Elem()
}

func (i *agentSpecDeploymentStrategyRollingUpdatePtrType) ToAgentSpecDeploymentStrategyRollingUpdatePtrOutput() AgentSpecDeploymentStrategyRollingUpdatePtrOutput {
	return i.ToAgentSpecDeploymentStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (i *agentSpecDeploymentStrategyRollingUpdatePtrType) ToAgentSpecDeploymentStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyRollingUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentStrategyRollingUpdatePtrOutput)
}

// Rolling update config params. Present only if DeploymentStrategyType =
// RollingUpdate.
// ---
// TODO: Update this to follow our convention for oneOf, whatever we decide it
// to be.
type AgentSpecDeploymentStrategyRollingUpdateOutput struct{ *pulumi.OutputState }

func (AgentSpecDeploymentStrategyRollingUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDeploymentStrategyRollingUpdate)(nil)).Elem()
}

func (o AgentSpecDeploymentStrategyRollingUpdateOutput) ToAgentSpecDeploymentStrategyRollingUpdateOutput() AgentSpecDeploymentStrategyRollingUpdateOutput {
	return o
}

func (o AgentSpecDeploymentStrategyRollingUpdateOutput) ToAgentSpecDeploymentStrategyRollingUpdateOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyRollingUpdateOutput {
	return o
}

func (o AgentSpecDeploymentStrategyRollingUpdateOutput) ToAgentSpecDeploymentStrategyRollingUpdatePtrOutput() AgentSpecDeploymentStrategyRollingUpdatePtrOutput {
	return o.ToAgentSpecDeploymentStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (o AgentSpecDeploymentStrategyRollingUpdateOutput) ToAgentSpecDeploymentStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyRollingUpdatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecDeploymentStrategyRollingUpdate) *AgentSpecDeploymentStrategyRollingUpdate {
		return &v
	}).(AgentSpecDeploymentStrategyRollingUpdatePtrOutput)
}

// The maximum number of pods that can be scheduled above the desired number of
// pods.
// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
// This can not be 0 if MaxUnavailable is 0.
// Absolute number is calculated from percentage by rounding up.
// Defaults to 25%.
// Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when
// the rolling update starts, such that the total number of old and new pods do not exceed
// 130% of desired pods. Once old pods have been killed,
// new ReplicaSet can be scaled up further, ensuring that total number of pods running
// at any time during the update is at most 130% of desired pods.
func (o AgentSpecDeploymentStrategyRollingUpdateOutput) MaxSurge() pulumi.AnyOutput {
	return o.ApplyT(func(v AgentSpecDeploymentStrategyRollingUpdate) interface{} { return v.MaxSurge }).(pulumi.AnyOutput)
}

// The maximum number of pods that can be unavailable during the update.
// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
// Absolute number is calculated from percentage by rounding down.
// This can not be 0 if MaxSurge is 0.
// Defaults to 25%.
// Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
// immediately when the rolling update starts. Once new pods are ready, old ReplicaSet
// can be scaled down further, followed by scaling up the new ReplicaSet, ensuring
// that the total number of pods available at all times during the update is at
// least 70% of desired pods.
func (o AgentSpecDeploymentStrategyRollingUpdateOutput) MaxUnavailable() pulumi.AnyOutput {
	return o.ApplyT(func(v AgentSpecDeploymentStrategyRollingUpdate) interface{} { return v.MaxUnavailable }).(pulumi.AnyOutput)
}

type AgentSpecDeploymentStrategyRollingUpdatePtrOutput struct{ *pulumi.OutputState }

func (AgentSpecDeploymentStrategyRollingUpdatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDeploymentStrategyRollingUpdate)(nil)).Elem()
}

func (o AgentSpecDeploymentStrategyRollingUpdatePtrOutput) ToAgentSpecDeploymentStrategyRollingUpdatePtrOutput() AgentSpecDeploymentStrategyRollingUpdatePtrOutput {
	return o
}

func (o AgentSpecDeploymentStrategyRollingUpdatePtrOutput) ToAgentSpecDeploymentStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyRollingUpdatePtrOutput {
	return o
}

func (o AgentSpecDeploymentStrategyRollingUpdatePtrOutput) Elem() AgentSpecDeploymentStrategyRollingUpdateOutput {
	return o.ApplyT(func(v *AgentSpecDeploymentStrategyRollingUpdate) AgentSpecDeploymentStrategyRollingUpdate {
		if v != nil {
			return *v
		}
		var ret AgentSpecDeploymentStrategyRollingUpdate
		return ret
	}).(AgentSpecDeploymentStrategyRollingUpdateOutput)
}

// The maximum number of pods that can be scheduled above the desired number of
// pods.
// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
// This can not be 0 if MaxUnavailable is 0.
// Absolute number is calculated from percentage by rounding up.
// Defaults to 25%.
// Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when
// the rolling update starts, such that the total number of old and new pods do not exceed
// 130% of desired pods. Once old pods have been killed,
// new ReplicaSet can be scaled up further, ensuring that total number of pods running
// at any time during the update is at most 130% of desired pods.
func (o AgentSpecDeploymentStrategyRollingUpdatePtrOutput) MaxSurge() pulumi.AnyOutput {
	return o.ApplyT(func(v *AgentSpecDeploymentStrategyRollingUpdate) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxSurge
	}).(pulumi.AnyOutput)
}

// The maximum number of pods that can be unavailable during the update.
// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
// Absolute number is calculated from percentage by rounding down.
// This can not be 0 if MaxSurge is 0.
// Defaults to 25%.
// Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
// immediately when the rolling update starts. Once new pods are ready, old ReplicaSet
// can be scaled down further, followed by scaling up the new ReplicaSet, ensuring
// that the total number of pods available at all times during the update is at
// least 70% of desired pods.
func (o AgentSpecDeploymentStrategyRollingUpdatePtrOutput) MaxUnavailable() pulumi.AnyOutput {
	return o.ApplyT(func(v *AgentSpecDeploymentStrategyRollingUpdate) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.AnyOutput)
}

// Rolling update config params. Present only if DeploymentStrategyType =
// RollingUpdate.
// ---
// TODO: Update this to follow our convention for oneOf, whatever we decide it
// to be.
type AgentSpecDeploymentStrategyRollingUpdatePatch struct {
	// The maximum number of pods that can be scheduled above the desired number of
	// pods.
	// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
	// This can not be 0 if MaxUnavailable is 0.
	// Absolute number is calculated from percentage by rounding up.
	// Defaults to 25%.
	// Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when
	// the rolling update starts, such that the total number of old and new pods do not exceed
	// 130% of desired pods. Once old pods have been killed,
	// new ReplicaSet can be scaled up further, ensuring that total number of pods running
	// at any time during the update is at most 130% of desired pods.
	MaxSurge interface{} `pulumi:"maxSurge"`
	// The maximum number of pods that can be unavailable during the update.
	// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
	// Absolute number is calculated from percentage by rounding down.
	// This can not be 0 if MaxSurge is 0.
	// Defaults to 25%.
	// Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
	// immediately when the rolling update starts. Once new pods are ready, old ReplicaSet
	// can be scaled down further, followed by scaling up the new ReplicaSet, ensuring
	// that the total number of pods available at all times during the update is at
	// least 70% of desired pods.
	MaxUnavailable interface{} `pulumi:"maxUnavailable"`
}

// AgentSpecDeploymentStrategyRollingUpdatePatchInput is an input type that accepts AgentSpecDeploymentStrategyRollingUpdatePatchArgs and AgentSpecDeploymentStrategyRollingUpdatePatchOutput values.
// You can construct a concrete instance of `AgentSpecDeploymentStrategyRollingUpdatePatchInput` via:
//
//	AgentSpecDeploymentStrategyRollingUpdatePatchArgs{...}
type AgentSpecDeploymentStrategyRollingUpdatePatchInput interface {
	pulumi.Input

	ToAgentSpecDeploymentStrategyRollingUpdatePatchOutput() AgentSpecDeploymentStrategyRollingUpdatePatchOutput
	ToAgentSpecDeploymentStrategyRollingUpdatePatchOutputWithContext(context.Context) AgentSpecDeploymentStrategyRollingUpdatePatchOutput
}

// Rolling update config params. Present only if DeploymentStrategyType =
// RollingUpdate.
// ---
// TODO: Update this to follow our convention for oneOf, whatever we decide it
// to be.
type AgentSpecDeploymentStrategyRollingUpdatePatchArgs struct {
	// The maximum number of pods that can be scheduled above the desired number of
	// pods.
	// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
	// This can not be 0 if MaxUnavailable is 0.
	// Absolute number is calculated from percentage by rounding up.
	// Defaults to 25%.
	// Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when
	// the rolling update starts, such that the total number of old and new pods do not exceed
	// 130% of desired pods. Once old pods have been killed,
	// new ReplicaSet can be scaled up further, ensuring that total number of pods running
	// at any time during the update is at most 130% of desired pods.
	MaxSurge pulumi.Input `pulumi:"maxSurge"`
	// The maximum number of pods that can be unavailable during the update.
	// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
	// Absolute number is calculated from percentage by rounding down.
	// This can not be 0 if MaxSurge is 0.
	// Defaults to 25%.
	// Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
	// immediately when the rolling update starts. Once new pods are ready, old ReplicaSet
	// can be scaled down further, followed by scaling up the new ReplicaSet, ensuring
	// that the total number of pods available at all times during the update is at
	// least 70% of desired pods.
	MaxUnavailable pulumi.Input `pulumi:"maxUnavailable"`
}

func (AgentSpecDeploymentStrategyRollingUpdatePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDeploymentStrategyRollingUpdatePatch)(nil)).Elem()
}

func (i AgentSpecDeploymentStrategyRollingUpdatePatchArgs) ToAgentSpecDeploymentStrategyRollingUpdatePatchOutput() AgentSpecDeploymentStrategyRollingUpdatePatchOutput {
	return i.ToAgentSpecDeploymentStrategyRollingUpdatePatchOutputWithContext(context.Background())
}

func (i AgentSpecDeploymentStrategyRollingUpdatePatchArgs) ToAgentSpecDeploymentStrategyRollingUpdatePatchOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyRollingUpdatePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentStrategyRollingUpdatePatchOutput)
}

func (i AgentSpecDeploymentStrategyRollingUpdatePatchArgs) ToAgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput() AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput {
	return i.ToAgentSpecDeploymentStrategyRollingUpdatePatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecDeploymentStrategyRollingUpdatePatchArgs) ToAgentSpecDeploymentStrategyRollingUpdatePatchPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentStrategyRollingUpdatePatchOutput).ToAgentSpecDeploymentStrategyRollingUpdatePatchPtrOutputWithContext(ctx)
}

// AgentSpecDeploymentStrategyRollingUpdatePatchPtrInput is an input type that accepts AgentSpecDeploymentStrategyRollingUpdatePatchArgs, AgentSpecDeploymentStrategyRollingUpdatePatchPtr and AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecDeploymentStrategyRollingUpdatePatchPtrInput` via:
//
//	        AgentSpecDeploymentStrategyRollingUpdatePatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecDeploymentStrategyRollingUpdatePatchPtrInput interface {
	pulumi.Input

	ToAgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput() AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput
	ToAgentSpecDeploymentStrategyRollingUpdatePatchPtrOutputWithContext(context.Context) AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput
}

type agentSpecDeploymentStrategyRollingUpdatePatchPtrType AgentSpecDeploymentStrategyRollingUpdatePatchArgs

func AgentSpecDeploymentStrategyRollingUpdatePatchPtr(v *AgentSpecDeploymentStrategyRollingUpdatePatchArgs) AgentSpecDeploymentStrategyRollingUpdatePatchPtrInput {
	return (*agentSpecDeploymentStrategyRollingUpdatePatchPtrType)(v)
}

func (*agentSpecDeploymentStrategyRollingUpdatePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDeploymentStrategyRollingUpdatePatch)(nil)).Elem()
}

func (i *agentSpecDeploymentStrategyRollingUpdatePatchPtrType) ToAgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput() AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput {
	return i.ToAgentSpecDeploymentStrategyRollingUpdatePatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecDeploymentStrategyRollingUpdatePatchPtrType) ToAgentSpecDeploymentStrategyRollingUpdatePatchPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput)
}

// Rolling update config params. Present only if DeploymentStrategyType =
// RollingUpdate.
// ---
// TODO: Update this to follow our convention for oneOf, whatever we decide it
// to be.
type AgentSpecDeploymentStrategyRollingUpdatePatchOutput struct{ *pulumi.OutputState }

func (AgentSpecDeploymentStrategyRollingUpdatePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDeploymentStrategyRollingUpdatePatch)(nil)).Elem()
}

func (o AgentSpecDeploymentStrategyRollingUpdatePatchOutput) ToAgentSpecDeploymentStrategyRollingUpdatePatchOutput() AgentSpecDeploymentStrategyRollingUpdatePatchOutput {
	return o
}

func (o AgentSpecDeploymentStrategyRollingUpdatePatchOutput) ToAgentSpecDeploymentStrategyRollingUpdatePatchOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyRollingUpdatePatchOutput {
	return o
}

func (o AgentSpecDeploymentStrategyRollingUpdatePatchOutput) ToAgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput() AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput {
	return o.ToAgentSpecDeploymentStrategyRollingUpdatePatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecDeploymentStrategyRollingUpdatePatchOutput) ToAgentSpecDeploymentStrategyRollingUpdatePatchPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecDeploymentStrategyRollingUpdatePatch) *AgentSpecDeploymentStrategyRollingUpdatePatch {
		return &v
	}).(AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput)
}

// The maximum number of pods that can be scheduled above the desired number of
// pods.
// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
// This can not be 0 if MaxUnavailable is 0.
// Absolute number is calculated from percentage by rounding up.
// Defaults to 25%.
// Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when
// the rolling update starts, such that the total number of old and new pods do not exceed
// 130% of desired pods. Once old pods have been killed,
// new ReplicaSet can be scaled up further, ensuring that total number of pods running
// at any time during the update is at most 130% of desired pods.
func (o AgentSpecDeploymentStrategyRollingUpdatePatchOutput) MaxSurge() pulumi.AnyOutput {
	return o.ApplyT(func(v AgentSpecDeploymentStrategyRollingUpdatePatch) interface{} { return v.MaxSurge }).(pulumi.AnyOutput)
}

// The maximum number of pods that can be unavailable during the update.
// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
// Absolute number is calculated from percentage by rounding down.
// This can not be 0 if MaxSurge is 0.
// Defaults to 25%.
// Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
// immediately when the rolling update starts. Once new pods are ready, old ReplicaSet
// can be scaled down further, followed by scaling up the new ReplicaSet, ensuring
// that the total number of pods available at all times during the update is at
// least 70% of desired pods.
func (o AgentSpecDeploymentStrategyRollingUpdatePatchOutput) MaxUnavailable() pulumi.AnyOutput {
	return o.ApplyT(func(v AgentSpecDeploymentStrategyRollingUpdatePatch) interface{} { return v.MaxUnavailable }).(pulumi.AnyOutput)
}

type AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDeploymentStrategyRollingUpdatePatch)(nil)).Elem()
}

func (o AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput) ToAgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput() AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput {
	return o
}

func (o AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput) ToAgentSpecDeploymentStrategyRollingUpdatePatchPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput {
	return o
}

func (o AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput) Elem() AgentSpecDeploymentStrategyRollingUpdatePatchOutput {
	return o.ApplyT(func(v *AgentSpecDeploymentStrategyRollingUpdatePatch) AgentSpecDeploymentStrategyRollingUpdatePatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecDeploymentStrategyRollingUpdatePatch
		return ret
	}).(AgentSpecDeploymentStrategyRollingUpdatePatchOutput)
}

// The maximum number of pods that can be scheduled above the desired number of
// pods.
// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
// This can not be 0 if MaxUnavailable is 0.
// Absolute number is calculated from percentage by rounding up.
// Defaults to 25%.
// Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when
// the rolling update starts, such that the total number of old and new pods do not exceed
// 130% of desired pods. Once old pods have been killed,
// new ReplicaSet can be scaled up further, ensuring that total number of pods running
// at any time during the update is at most 130% of desired pods.
func (o AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput) MaxSurge() pulumi.AnyOutput {
	return o.ApplyT(func(v *AgentSpecDeploymentStrategyRollingUpdatePatch) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxSurge
	}).(pulumi.AnyOutput)
}

// The maximum number of pods that can be unavailable during the update.
// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
// Absolute number is calculated from percentage by rounding down.
// This can not be 0 if MaxSurge is 0.
// Defaults to 25%.
// Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
// immediately when the rolling update starts. Once new pods are ready, old ReplicaSet
// can be scaled down further, followed by scaling up the new ReplicaSet, ensuring
// that the total number of pods available at all times during the update is at
// least 70% of desired pods.
func (o AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput) MaxUnavailable() pulumi.AnyOutput {
	return o.ApplyT(func(v *AgentSpecDeploymentStrategyRollingUpdatePatch) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.AnyOutput)
}

type AgentSpecElasticsearchRefs struct {
	// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
	Name *string `pulumi:"name"`
	// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
	Namespace  *string `pulumi:"namespace"`
	OutputName *string `pulumi:"outputName"`
	// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
	// Elastic resource not managed by the operator. The referenced secret must contain the following:
	// - `url`: the URL to reach the Elastic resource
	// - `username`: the username of the user to be authenticated to the Elastic resource
	// - `password`: the password of the user to be authenticated to the Elastic resource
	// - `ca.crt`: the CA certificate in PEM format (optional)
	// - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
	//   This field cannot be used in combination with the other fields name, namespace or serviceName.
	SecretName *string `pulumi:"secretName"`
	// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
	// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
	// the referenced resource is used.
	ServiceName *string `pulumi:"serviceName"`
}

// AgentSpecElasticsearchRefsInput is an input type that accepts AgentSpecElasticsearchRefsArgs and AgentSpecElasticsearchRefsOutput values.
// You can construct a concrete instance of `AgentSpecElasticsearchRefsInput` via:
//
//	AgentSpecElasticsearchRefsArgs{...}
type AgentSpecElasticsearchRefsInput interface {
	pulumi.Input

	ToAgentSpecElasticsearchRefsOutput() AgentSpecElasticsearchRefsOutput
	ToAgentSpecElasticsearchRefsOutputWithContext(context.Context) AgentSpecElasticsearchRefsOutput
}

type AgentSpecElasticsearchRefsArgs struct {
	// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
	Namespace  pulumi.StringPtrInput `pulumi:"namespace"`
	OutputName pulumi.StringPtrInput `pulumi:"outputName"`
	// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
	// Elastic resource not managed by the operator. The referenced secret must contain the following:
	// - `url`: the URL to reach the Elastic resource
	// - `username`: the username of the user to be authenticated to the Elastic resource
	// - `password`: the password of the user to be authenticated to the Elastic resource
	// - `ca.crt`: the CA certificate in PEM format (optional)
	// - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
	//   This field cannot be used in combination with the other fields name, namespace or serviceName.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
	// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
	// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
	// the referenced resource is used.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (AgentSpecElasticsearchRefsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecElasticsearchRefs)(nil)).Elem()
}

func (i AgentSpecElasticsearchRefsArgs) ToAgentSpecElasticsearchRefsOutput() AgentSpecElasticsearchRefsOutput {
	return i.ToAgentSpecElasticsearchRefsOutputWithContext(context.Background())
}

func (i AgentSpecElasticsearchRefsArgs) ToAgentSpecElasticsearchRefsOutputWithContext(ctx context.Context) AgentSpecElasticsearchRefsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecElasticsearchRefsOutput)
}

// AgentSpecElasticsearchRefsArrayInput is an input type that accepts AgentSpecElasticsearchRefsArray and AgentSpecElasticsearchRefsArrayOutput values.
// You can construct a concrete instance of `AgentSpecElasticsearchRefsArrayInput` via:
//
//	AgentSpecElasticsearchRefsArray{ AgentSpecElasticsearchRefsArgs{...} }
type AgentSpecElasticsearchRefsArrayInput interface {
	pulumi.Input

	ToAgentSpecElasticsearchRefsArrayOutput() AgentSpecElasticsearchRefsArrayOutput
	ToAgentSpecElasticsearchRefsArrayOutputWithContext(context.Context) AgentSpecElasticsearchRefsArrayOutput
}

type AgentSpecElasticsearchRefsArray []AgentSpecElasticsearchRefsInput

func (AgentSpecElasticsearchRefsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecElasticsearchRefs)(nil)).Elem()
}

func (i AgentSpecElasticsearchRefsArray) ToAgentSpecElasticsearchRefsArrayOutput() AgentSpecElasticsearchRefsArrayOutput {
	return i.ToAgentSpecElasticsearchRefsArrayOutputWithContext(context.Background())
}

func (i AgentSpecElasticsearchRefsArray) ToAgentSpecElasticsearchRefsArrayOutputWithContext(ctx context.Context) AgentSpecElasticsearchRefsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecElasticsearchRefsArrayOutput)
}

type AgentSpecElasticsearchRefsOutput struct{ *pulumi.OutputState }

func (AgentSpecElasticsearchRefsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecElasticsearchRefs)(nil)).Elem()
}

func (o AgentSpecElasticsearchRefsOutput) ToAgentSpecElasticsearchRefsOutput() AgentSpecElasticsearchRefsOutput {
	return o
}

func (o AgentSpecElasticsearchRefsOutput) ToAgentSpecElasticsearchRefsOutputWithContext(ctx context.Context) AgentSpecElasticsearchRefsOutput {
	return o
}

// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
func (o AgentSpecElasticsearchRefsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecElasticsearchRefs) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
func (o AgentSpecElasticsearchRefsOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecElasticsearchRefs) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o AgentSpecElasticsearchRefsOutput) OutputName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecElasticsearchRefs) *string { return v.OutputName }).(pulumi.StringPtrOutput)
}

// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
// Elastic resource not managed by the operator. The referenced secret must contain the following:
//   - `url`: the URL to reach the Elastic resource
//   - `username`: the username of the user to be authenticated to the Elastic resource
//   - `password`: the password of the user to be authenticated to the Elastic resource
//   - `ca.crt`: the CA certificate in PEM format (optional)
//   - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
//     This field cannot be used in combination with the other fields name, namespace or serviceName.
func (o AgentSpecElasticsearchRefsOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecElasticsearchRefs) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
// the referenced resource is used.
func (o AgentSpecElasticsearchRefsOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecElasticsearchRefs) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type AgentSpecElasticsearchRefsArrayOutput struct{ *pulumi.OutputState }

func (AgentSpecElasticsearchRefsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecElasticsearchRefs)(nil)).Elem()
}

func (o AgentSpecElasticsearchRefsArrayOutput) ToAgentSpecElasticsearchRefsArrayOutput() AgentSpecElasticsearchRefsArrayOutput {
	return o
}

func (o AgentSpecElasticsearchRefsArrayOutput) ToAgentSpecElasticsearchRefsArrayOutputWithContext(ctx context.Context) AgentSpecElasticsearchRefsArrayOutput {
	return o
}

func (o AgentSpecElasticsearchRefsArrayOutput) Index(i pulumi.IntInput) AgentSpecElasticsearchRefsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentSpecElasticsearchRefs {
		return vs[0].([]AgentSpecElasticsearchRefs)[vs[1].(int)]
	}).(AgentSpecElasticsearchRefsOutput)
}

type AgentSpecElasticsearchRefsPatch struct {
	// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
	Name *string `pulumi:"name"`
	// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
	Namespace  *string `pulumi:"namespace"`
	OutputName *string `pulumi:"outputName"`
	// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
	// Elastic resource not managed by the operator. The referenced secret must contain the following:
	// - `url`: the URL to reach the Elastic resource
	// - `username`: the username of the user to be authenticated to the Elastic resource
	// - `password`: the password of the user to be authenticated to the Elastic resource
	// - `ca.crt`: the CA certificate in PEM format (optional)
	// - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
	//   This field cannot be used in combination with the other fields name, namespace or serviceName.
	SecretName *string `pulumi:"secretName"`
	// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
	// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
	// the referenced resource is used.
	ServiceName *string `pulumi:"serviceName"`
}

// AgentSpecElasticsearchRefsPatchInput is an input type that accepts AgentSpecElasticsearchRefsPatchArgs and AgentSpecElasticsearchRefsPatchOutput values.
// You can construct a concrete instance of `AgentSpecElasticsearchRefsPatchInput` via:
//
//	AgentSpecElasticsearchRefsPatchArgs{...}
type AgentSpecElasticsearchRefsPatchInput interface {
	pulumi.Input

	ToAgentSpecElasticsearchRefsPatchOutput() AgentSpecElasticsearchRefsPatchOutput
	ToAgentSpecElasticsearchRefsPatchOutputWithContext(context.Context) AgentSpecElasticsearchRefsPatchOutput
}

type AgentSpecElasticsearchRefsPatchArgs struct {
	// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
	Namespace  pulumi.StringPtrInput `pulumi:"namespace"`
	OutputName pulumi.StringPtrInput `pulumi:"outputName"`
	// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
	// Elastic resource not managed by the operator. The referenced secret must contain the following:
	// - `url`: the URL to reach the Elastic resource
	// - `username`: the username of the user to be authenticated to the Elastic resource
	// - `password`: the password of the user to be authenticated to the Elastic resource
	// - `ca.crt`: the CA certificate in PEM format (optional)
	// - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
	//   This field cannot be used in combination with the other fields name, namespace or serviceName.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
	// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
	// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
	// the referenced resource is used.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (AgentSpecElasticsearchRefsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecElasticsearchRefsPatch)(nil)).Elem()
}

func (i AgentSpecElasticsearchRefsPatchArgs) ToAgentSpecElasticsearchRefsPatchOutput() AgentSpecElasticsearchRefsPatchOutput {
	return i.ToAgentSpecElasticsearchRefsPatchOutputWithContext(context.Background())
}

func (i AgentSpecElasticsearchRefsPatchArgs) ToAgentSpecElasticsearchRefsPatchOutputWithContext(ctx context.Context) AgentSpecElasticsearchRefsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecElasticsearchRefsPatchOutput)
}

// AgentSpecElasticsearchRefsPatchArrayInput is an input type that accepts AgentSpecElasticsearchRefsPatchArray and AgentSpecElasticsearchRefsPatchArrayOutput values.
// You can construct a concrete instance of `AgentSpecElasticsearchRefsPatchArrayInput` via:
//
//	AgentSpecElasticsearchRefsPatchArray{ AgentSpecElasticsearchRefsPatchArgs{...} }
type AgentSpecElasticsearchRefsPatchArrayInput interface {
	pulumi.Input

	ToAgentSpecElasticsearchRefsPatchArrayOutput() AgentSpecElasticsearchRefsPatchArrayOutput
	ToAgentSpecElasticsearchRefsPatchArrayOutputWithContext(context.Context) AgentSpecElasticsearchRefsPatchArrayOutput
}

type AgentSpecElasticsearchRefsPatchArray []AgentSpecElasticsearchRefsPatchInput

func (AgentSpecElasticsearchRefsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecElasticsearchRefsPatch)(nil)).Elem()
}

func (i AgentSpecElasticsearchRefsPatchArray) ToAgentSpecElasticsearchRefsPatchArrayOutput() AgentSpecElasticsearchRefsPatchArrayOutput {
	return i.ToAgentSpecElasticsearchRefsPatchArrayOutputWithContext(context.Background())
}

func (i AgentSpecElasticsearchRefsPatchArray) ToAgentSpecElasticsearchRefsPatchArrayOutputWithContext(ctx context.Context) AgentSpecElasticsearchRefsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecElasticsearchRefsPatchArrayOutput)
}

type AgentSpecElasticsearchRefsPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecElasticsearchRefsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecElasticsearchRefsPatch)(nil)).Elem()
}

func (o AgentSpecElasticsearchRefsPatchOutput) ToAgentSpecElasticsearchRefsPatchOutput() AgentSpecElasticsearchRefsPatchOutput {
	return o
}

func (o AgentSpecElasticsearchRefsPatchOutput) ToAgentSpecElasticsearchRefsPatchOutputWithContext(ctx context.Context) AgentSpecElasticsearchRefsPatchOutput {
	return o
}

// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
func (o AgentSpecElasticsearchRefsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecElasticsearchRefsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
func (o AgentSpecElasticsearchRefsPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecElasticsearchRefsPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o AgentSpecElasticsearchRefsPatchOutput) OutputName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecElasticsearchRefsPatch) *string { return v.OutputName }).(pulumi.StringPtrOutput)
}

// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
// Elastic resource not managed by the operator. The referenced secret must contain the following:
//   - `url`: the URL to reach the Elastic resource
//   - `username`: the username of the user to be authenticated to the Elastic resource
//   - `password`: the password of the user to be authenticated to the Elastic resource
//   - `ca.crt`: the CA certificate in PEM format (optional)
//   - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
//     This field cannot be used in combination with the other fields name, namespace or serviceName.
func (o AgentSpecElasticsearchRefsPatchOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecElasticsearchRefsPatch) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
// the referenced resource is used.
func (o AgentSpecElasticsearchRefsPatchOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecElasticsearchRefsPatch) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type AgentSpecElasticsearchRefsPatchArrayOutput struct{ *pulumi.OutputState }

func (AgentSpecElasticsearchRefsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecElasticsearchRefsPatch)(nil)).Elem()
}

func (o AgentSpecElasticsearchRefsPatchArrayOutput) ToAgentSpecElasticsearchRefsPatchArrayOutput() AgentSpecElasticsearchRefsPatchArrayOutput {
	return o
}

func (o AgentSpecElasticsearchRefsPatchArrayOutput) ToAgentSpecElasticsearchRefsPatchArrayOutputWithContext(ctx context.Context) AgentSpecElasticsearchRefsPatchArrayOutput {
	return o
}

func (o AgentSpecElasticsearchRefsPatchArrayOutput) Index(i pulumi.IntInput) AgentSpecElasticsearchRefsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentSpecElasticsearchRefsPatch {
		return vs[0].([]AgentSpecElasticsearchRefsPatch)[vs[1].(int)]
	}).(AgentSpecElasticsearchRefsPatchOutput)
}

// FleetServerRef is a reference to Fleet Server that this Agent should connect to to obtain it's configuration.
// Don't set unless `mode` is set to `fleet`.
type AgentSpecFleetServerRef struct {
	// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
	Name *string `pulumi:"name"`
	// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
	Namespace *string `pulumi:"namespace"`
	// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
	// Elastic resource not managed by the operator. The referenced secret must contain the following:
	// - `url`: the URL to reach the Elastic resource
	// - `username`: the username of the user to be authenticated to the Elastic resource
	// - `password`: the password of the user to be authenticated to the Elastic resource
	// - `ca.crt`: the CA certificate in PEM format (optional)
	// - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
	//   This field cannot be used in combination with the other fields name, namespace or serviceName.
	SecretName *string `pulumi:"secretName"`
	// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
	// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
	// the referenced resource is used.
	ServiceName *string `pulumi:"serviceName"`
}

// AgentSpecFleetServerRefInput is an input type that accepts AgentSpecFleetServerRefArgs and AgentSpecFleetServerRefOutput values.
// You can construct a concrete instance of `AgentSpecFleetServerRefInput` via:
//
//	AgentSpecFleetServerRefArgs{...}
type AgentSpecFleetServerRefInput interface {
	pulumi.Input

	ToAgentSpecFleetServerRefOutput() AgentSpecFleetServerRefOutput
	ToAgentSpecFleetServerRefOutputWithContext(context.Context) AgentSpecFleetServerRefOutput
}

// FleetServerRef is a reference to Fleet Server that this Agent should connect to to obtain it's configuration.
// Don't set unless `mode` is set to `fleet`.
type AgentSpecFleetServerRefArgs struct {
	// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
	// Elastic resource not managed by the operator. The referenced secret must contain the following:
	// - `url`: the URL to reach the Elastic resource
	// - `username`: the username of the user to be authenticated to the Elastic resource
	// - `password`: the password of the user to be authenticated to the Elastic resource
	// - `ca.crt`: the CA certificate in PEM format (optional)
	// - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
	//   This field cannot be used in combination with the other fields name, namespace or serviceName.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
	// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
	// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
	// the referenced resource is used.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (AgentSpecFleetServerRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecFleetServerRef)(nil)).Elem()
}

func (i AgentSpecFleetServerRefArgs) ToAgentSpecFleetServerRefOutput() AgentSpecFleetServerRefOutput {
	return i.ToAgentSpecFleetServerRefOutputWithContext(context.Background())
}

func (i AgentSpecFleetServerRefArgs) ToAgentSpecFleetServerRefOutputWithContext(ctx context.Context) AgentSpecFleetServerRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecFleetServerRefOutput)
}

func (i AgentSpecFleetServerRefArgs) ToAgentSpecFleetServerRefPtrOutput() AgentSpecFleetServerRefPtrOutput {
	return i.ToAgentSpecFleetServerRefPtrOutputWithContext(context.Background())
}

func (i AgentSpecFleetServerRefArgs) ToAgentSpecFleetServerRefPtrOutputWithContext(ctx context.Context) AgentSpecFleetServerRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecFleetServerRefOutput).ToAgentSpecFleetServerRefPtrOutputWithContext(ctx)
}

// AgentSpecFleetServerRefPtrInput is an input type that accepts AgentSpecFleetServerRefArgs, AgentSpecFleetServerRefPtr and AgentSpecFleetServerRefPtrOutput values.
// You can construct a concrete instance of `AgentSpecFleetServerRefPtrInput` via:
//
//	        AgentSpecFleetServerRefArgs{...}
//
//	or:
//
//	        nil
type AgentSpecFleetServerRefPtrInput interface {
	pulumi.Input

	ToAgentSpecFleetServerRefPtrOutput() AgentSpecFleetServerRefPtrOutput
	ToAgentSpecFleetServerRefPtrOutputWithContext(context.Context) AgentSpecFleetServerRefPtrOutput
}

type agentSpecFleetServerRefPtrType AgentSpecFleetServerRefArgs

func AgentSpecFleetServerRefPtr(v *AgentSpecFleetServerRefArgs) AgentSpecFleetServerRefPtrInput {
	return (*agentSpecFleetServerRefPtrType)(v)
}

func (*agentSpecFleetServerRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecFleetServerRef)(nil)).Elem()
}

func (i *agentSpecFleetServerRefPtrType) ToAgentSpecFleetServerRefPtrOutput() AgentSpecFleetServerRefPtrOutput {
	return i.ToAgentSpecFleetServerRefPtrOutputWithContext(context.Background())
}

func (i *agentSpecFleetServerRefPtrType) ToAgentSpecFleetServerRefPtrOutputWithContext(ctx context.Context) AgentSpecFleetServerRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecFleetServerRefPtrOutput)
}

// FleetServerRef is a reference to Fleet Server that this Agent should connect to to obtain it's configuration.
// Don't set unless `mode` is set to `fleet`.
type AgentSpecFleetServerRefOutput struct{ *pulumi.OutputState }

func (AgentSpecFleetServerRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecFleetServerRef)(nil)).Elem()
}

func (o AgentSpecFleetServerRefOutput) ToAgentSpecFleetServerRefOutput() AgentSpecFleetServerRefOutput {
	return o
}

func (o AgentSpecFleetServerRefOutput) ToAgentSpecFleetServerRefOutputWithContext(ctx context.Context) AgentSpecFleetServerRefOutput {
	return o
}

func (o AgentSpecFleetServerRefOutput) ToAgentSpecFleetServerRefPtrOutput() AgentSpecFleetServerRefPtrOutput {
	return o.ToAgentSpecFleetServerRefPtrOutputWithContext(context.Background())
}

func (o AgentSpecFleetServerRefOutput) ToAgentSpecFleetServerRefPtrOutputWithContext(ctx context.Context) AgentSpecFleetServerRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecFleetServerRef) *AgentSpecFleetServerRef {
		return &v
	}).(AgentSpecFleetServerRefPtrOutput)
}

// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
func (o AgentSpecFleetServerRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecFleetServerRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
func (o AgentSpecFleetServerRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecFleetServerRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
// Elastic resource not managed by the operator. The referenced secret must contain the following:
//   - `url`: the URL to reach the Elastic resource
//   - `username`: the username of the user to be authenticated to the Elastic resource
//   - `password`: the password of the user to be authenticated to the Elastic resource
//   - `ca.crt`: the CA certificate in PEM format (optional)
//   - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
//     This field cannot be used in combination with the other fields name, namespace or serviceName.
func (o AgentSpecFleetServerRefOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecFleetServerRef) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
// the referenced resource is used.
func (o AgentSpecFleetServerRefOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecFleetServerRef) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type AgentSpecFleetServerRefPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecFleetServerRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecFleetServerRef)(nil)).Elem()
}

func (o AgentSpecFleetServerRefPtrOutput) ToAgentSpecFleetServerRefPtrOutput() AgentSpecFleetServerRefPtrOutput {
	return o
}

func (o AgentSpecFleetServerRefPtrOutput) ToAgentSpecFleetServerRefPtrOutputWithContext(ctx context.Context) AgentSpecFleetServerRefPtrOutput {
	return o
}

func (o AgentSpecFleetServerRefPtrOutput) Elem() AgentSpecFleetServerRefOutput {
	return o.ApplyT(func(v *AgentSpecFleetServerRef) AgentSpecFleetServerRef {
		if v != nil {
			return *v
		}
		var ret AgentSpecFleetServerRef
		return ret
	}).(AgentSpecFleetServerRefOutput)
}

// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
func (o AgentSpecFleetServerRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecFleetServerRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
func (o AgentSpecFleetServerRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecFleetServerRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
// Elastic resource not managed by the operator. The referenced secret must contain the following:
//   - `url`: the URL to reach the Elastic resource
//   - `username`: the username of the user to be authenticated to the Elastic resource
//   - `password`: the password of the user to be authenticated to the Elastic resource
//   - `ca.crt`: the CA certificate in PEM format (optional)
//   - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
//     This field cannot be used in combination with the other fields name, namespace or serviceName.
func (o AgentSpecFleetServerRefPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecFleetServerRef) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
// the referenced resource is used.
func (o AgentSpecFleetServerRefPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecFleetServerRef) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// FleetServerRef is a reference to Fleet Server that this Agent should connect to to obtain it's configuration.
// Don't set unless `mode` is set to `fleet`.
type AgentSpecFleetServerRefPatch struct {
	// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
	Name *string `pulumi:"name"`
	// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
	Namespace *string `pulumi:"namespace"`
	// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
	// Elastic resource not managed by the operator. The referenced secret must contain the following:
	// - `url`: the URL to reach the Elastic resource
	// - `username`: the username of the user to be authenticated to the Elastic resource
	// - `password`: the password of the user to be authenticated to the Elastic resource
	// - `ca.crt`: the CA certificate in PEM format (optional)
	// - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
	//   This field cannot be used in combination with the other fields name, namespace or serviceName.
	SecretName *string `pulumi:"secretName"`
	// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
	// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
	// the referenced resource is used.
	ServiceName *string `pulumi:"serviceName"`
}

// AgentSpecFleetServerRefPatchInput is an input type that accepts AgentSpecFleetServerRefPatchArgs and AgentSpecFleetServerRefPatchOutput values.
// You can construct a concrete instance of `AgentSpecFleetServerRefPatchInput` via:
//
//	AgentSpecFleetServerRefPatchArgs{...}
type AgentSpecFleetServerRefPatchInput interface {
	pulumi.Input

	ToAgentSpecFleetServerRefPatchOutput() AgentSpecFleetServerRefPatchOutput
	ToAgentSpecFleetServerRefPatchOutputWithContext(context.Context) AgentSpecFleetServerRefPatchOutput
}

// FleetServerRef is a reference to Fleet Server that this Agent should connect to to obtain it's configuration.
// Don't set unless `mode` is set to `fleet`.
type AgentSpecFleetServerRefPatchArgs struct {
	// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
	// Elastic resource not managed by the operator. The referenced secret must contain the following:
	// - `url`: the URL to reach the Elastic resource
	// - `username`: the username of the user to be authenticated to the Elastic resource
	// - `password`: the password of the user to be authenticated to the Elastic resource
	// - `ca.crt`: the CA certificate in PEM format (optional)
	// - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
	//   This field cannot be used in combination with the other fields name, namespace or serviceName.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
	// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
	// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
	// the referenced resource is used.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (AgentSpecFleetServerRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecFleetServerRefPatch)(nil)).Elem()
}

func (i AgentSpecFleetServerRefPatchArgs) ToAgentSpecFleetServerRefPatchOutput() AgentSpecFleetServerRefPatchOutput {
	return i.ToAgentSpecFleetServerRefPatchOutputWithContext(context.Background())
}

func (i AgentSpecFleetServerRefPatchArgs) ToAgentSpecFleetServerRefPatchOutputWithContext(ctx context.Context) AgentSpecFleetServerRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecFleetServerRefPatchOutput)
}

func (i AgentSpecFleetServerRefPatchArgs) ToAgentSpecFleetServerRefPatchPtrOutput() AgentSpecFleetServerRefPatchPtrOutput {
	return i.ToAgentSpecFleetServerRefPatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecFleetServerRefPatchArgs) ToAgentSpecFleetServerRefPatchPtrOutputWithContext(ctx context.Context) AgentSpecFleetServerRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecFleetServerRefPatchOutput).ToAgentSpecFleetServerRefPatchPtrOutputWithContext(ctx)
}

// AgentSpecFleetServerRefPatchPtrInput is an input type that accepts AgentSpecFleetServerRefPatchArgs, AgentSpecFleetServerRefPatchPtr and AgentSpecFleetServerRefPatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecFleetServerRefPatchPtrInput` via:
//
//	        AgentSpecFleetServerRefPatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecFleetServerRefPatchPtrInput interface {
	pulumi.Input

	ToAgentSpecFleetServerRefPatchPtrOutput() AgentSpecFleetServerRefPatchPtrOutput
	ToAgentSpecFleetServerRefPatchPtrOutputWithContext(context.Context) AgentSpecFleetServerRefPatchPtrOutput
}

type agentSpecFleetServerRefPatchPtrType AgentSpecFleetServerRefPatchArgs

func AgentSpecFleetServerRefPatchPtr(v *AgentSpecFleetServerRefPatchArgs) AgentSpecFleetServerRefPatchPtrInput {
	return (*agentSpecFleetServerRefPatchPtrType)(v)
}

func (*agentSpecFleetServerRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecFleetServerRefPatch)(nil)).Elem()
}

func (i *agentSpecFleetServerRefPatchPtrType) ToAgentSpecFleetServerRefPatchPtrOutput() AgentSpecFleetServerRefPatchPtrOutput {
	return i.ToAgentSpecFleetServerRefPatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecFleetServerRefPatchPtrType) ToAgentSpecFleetServerRefPatchPtrOutputWithContext(ctx context.Context) AgentSpecFleetServerRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecFleetServerRefPatchPtrOutput)
}

// FleetServerRef is a reference to Fleet Server that this Agent should connect to to obtain it's configuration.
// Don't set unless `mode` is set to `fleet`.
type AgentSpecFleetServerRefPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecFleetServerRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecFleetServerRefPatch)(nil)).Elem()
}

func (o AgentSpecFleetServerRefPatchOutput) ToAgentSpecFleetServerRefPatchOutput() AgentSpecFleetServerRefPatchOutput {
	return o
}

func (o AgentSpecFleetServerRefPatchOutput) ToAgentSpecFleetServerRefPatchOutputWithContext(ctx context.Context) AgentSpecFleetServerRefPatchOutput {
	return o
}

func (o AgentSpecFleetServerRefPatchOutput) ToAgentSpecFleetServerRefPatchPtrOutput() AgentSpecFleetServerRefPatchPtrOutput {
	return o.ToAgentSpecFleetServerRefPatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecFleetServerRefPatchOutput) ToAgentSpecFleetServerRefPatchPtrOutputWithContext(ctx context.Context) AgentSpecFleetServerRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecFleetServerRefPatch) *AgentSpecFleetServerRefPatch {
		return &v
	}).(AgentSpecFleetServerRefPatchPtrOutput)
}

// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
func (o AgentSpecFleetServerRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecFleetServerRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
func (o AgentSpecFleetServerRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecFleetServerRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
// Elastic resource not managed by the operator. The referenced secret must contain the following:
//   - `url`: the URL to reach the Elastic resource
//   - `username`: the username of the user to be authenticated to the Elastic resource
//   - `password`: the password of the user to be authenticated to the Elastic resource
//   - `ca.crt`: the CA certificate in PEM format (optional)
//   - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
//     This field cannot be used in combination with the other fields name, namespace or serviceName.
func (o AgentSpecFleetServerRefPatchOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecFleetServerRefPatch) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
// the referenced resource is used.
func (o AgentSpecFleetServerRefPatchOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecFleetServerRefPatch) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type AgentSpecFleetServerRefPatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecFleetServerRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecFleetServerRefPatch)(nil)).Elem()
}

func (o AgentSpecFleetServerRefPatchPtrOutput) ToAgentSpecFleetServerRefPatchPtrOutput() AgentSpecFleetServerRefPatchPtrOutput {
	return o
}

func (o AgentSpecFleetServerRefPatchPtrOutput) ToAgentSpecFleetServerRefPatchPtrOutputWithContext(ctx context.Context) AgentSpecFleetServerRefPatchPtrOutput {
	return o
}

func (o AgentSpecFleetServerRefPatchPtrOutput) Elem() AgentSpecFleetServerRefPatchOutput {
	return o.ApplyT(func(v *AgentSpecFleetServerRefPatch) AgentSpecFleetServerRefPatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecFleetServerRefPatch
		return ret
	}).(AgentSpecFleetServerRefPatchOutput)
}

// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
func (o AgentSpecFleetServerRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecFleetServerRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
func (o AgentSpecFleetServerRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecFleetServerRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
// Elastic resource not managed by the operator. The referenced secret must contain the following:
//   - `url`: the URL to reach the Elastic resource
//   - `username`: the username of the user to be authenticated to the Elastic resource
//   - `password`: the password of the user to be authenticated to the Elastic resource
//   - `ca.crt`: the CA certificate in PEM format (optional)
//   - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
//     This field cannot be used in combination with the other fields name, namespace or serviceName.
func (o AgentSpecFleetServerRefPatchPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecFleetServerRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
// the referenced resource is used.
func (o AgentSpecFleetServerRefPatchPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecFleetServerRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// HTTP holds the HTTP layer configuration for the Agent in Fleet mode with Fleet Server enabled.
type AgentSpecHttp struct {
	Service *AgentSpecHttpService `pulumi:"service"`
	Tls     *AgentSpecHttpTls     `pulumi:"tls"`
}

// AgentSpecHttpInput is an input type that accepts AgentSpecHttpArgs and AgentSpecHttpOutput values.
// You can construct a concrete instance of `AgentSpecHttpInput` via:
//
//	AgentSpecHttpArgs{...}
type AgentSpecHttpInput interface {
	pulumi.Input

	ToAgentSpecHttpOutput() AgentSpecHttpOutput
	ToAgentSpecHttpOutputWithContext(context.Context) AgentSpecHttpOutput
}

// HTTP holds the HTTP layer configuration for the Agent in Fleet mode with Fleet Server enabled.
type AgentSpecHttpArgs struct {
	Service AgentSpecHttpServicePtrInput `pulumi:"service"`
	Tls     AgentSpecHttpTlsPtrInput     `pulumi:"tls"`
}

func (AgentSpecHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttp)(nil)).Elem()
}

func (i AgentSpecHttpArgs) ToAgentSpecHttpOutput() AgentSpecHttpOutput {
	return i.ToAgentSpecHttpOutputWithContext(context.Background())
}

func (i AgentSpecHttpArgs) ToAgentSpecHttpOutputWithContext(ctx context.Context) AgentSpecHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpOutput)
}

func (i AgentSpecHttpArgs) ToAgentSpecHttpPtrOutput() AgentSpecHttpPtrOutput {
	return i.ToAgentSpecHttpPtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpArgs) ToAgentSpecHttpPtrOutputWithContext(ctx context.Context) AgentSpecHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpOutput).ToAgentSpecHttpPtrOutputWithContext(ctx)
}

// AgentSpecHttpPtrInput is an input type that accepts AgentSpecHttpArgs, AgentSpecHttpPtr and AgentSpecHttpPtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpPtrInput` via:
//
//	        AgentSpecHttpArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpPtrInput interface {
	pulumi.Input

	ToAgentSpecHttpPtrOutput() AgentSpecHttpPtrOutput
	ToAgentSpecHttpPtrOutputWithContext(context.Context) AgentSpecHttpPtrOutput
}

type agentSpecHttpPtrType AgentSpecHttpArgs

func AgentSpecHttpPtr(v *AgentSpecHttpArgs) AgentSpecHttpPtrInput {
	return (*agentSpecHttpPtrType)(v)
}

func (*agentSpecHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttp)(nil)).Elem()
}

func (i *agentSpecHttpPtrType) ToAgentSpecHttpPtrOutput() AgentSpecHttpPtrOutput {
	return i.ToAgentSpecHttpPtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpPtrType) ToAgentSpecHttpPtrOutputWithContext(ctx context.Context) AgentSpecHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpPtrOutput)
}

// HTTP holds the HTTP layer configuration for the Agent in Fleet mode with Fleet Server enabled.
type AgentSpecHttpOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttp)(nil)).Elem()
}

func (o AgentSpecHttpOutput) ToAgentSpecHttpOutput() AgentSpecHttpOutput {
	return o
}

func (o AgentSpecHttpOutput) ToAgentSpecHttpOutputWithContext(ctx context.Context) AgentSpecHttpOutput {
	return o
}

func (o AgentSpecHttpOutput) ToAgentSpecHttpPtrOutput() AgentSpecHttpPtrOutput {
	return o.ToAgentSpecHttpPtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpOutput) ToAgentSpecHttpPtrOutputWithContext(ctx context.Context) AgentSpecHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttp) *AgentSpecHttp {
		return &v
	}).(AgentSpecHttpPtrOutput)
}

func (o AgentSpecHttpOutput) Service() AgentSpecHttpServicePtrOutput {
	return o.ApplyT(func(v AgentSpecHttp) *AgentSpecHttpService { return v.Service }).(AgentSpecHttpServicePtrOutput)
}

func (o AgentSpecHttpOutput) Tls() AgentSpecHttpTlsPtrOutput {
	return o.ApplyT(func(v AgentSpecHttp) *AgentSpecHttpTls { return v.Tls }).(AgentSpecHttpTlsPtrOutput)
}

type AgentSpecHttpPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttp)(nil)).Elem()
}

func (o AgentSpecHttpPtrOutput) ToAgentSpecHttpPtrOutput() AgentSpecHttpPtrOutput {
	return o
}

func (o AgentSpecHttpPtrOutput) ToAgentSpecHttpPtrOutputWithContext(ctx context.Context) AgentSpecHttpPtrOutput {
	return o
}

func (o AgentSpecHttpPtrOutput) Elem() AgentSpecHttpOutput {
	return o.ApplyT(func(v *AgentSpecHttp) AgentSpecHttp {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttp
		return ret
	}).(AgentSpecHttpOutput)
}

func (o AgentSpecHttpPtrOutput) Service() AgentSpecHttpServicePtrOutput {
	return o.ApplyT(func(v *AgentSpecHttp) *AgentSpecHttpService {
		if v == nil {
			return nil
		}
		return v.Service
	}).(AgentSpecHttpServicePtrOutput)
}

func (o AgentSpecHttpPtrOutput) Tls() AgentSpecHttpTlsPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttp) *AgentSpecHttpTls {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(AgentSpecHttpTlsPtrOutput)
}

// HTTP holds the HTTP layer configuration for the Agent in Fleet mode with Fleet Server enabled.
type AgentSpecHttpPatch struct {
	Service *AgentSpecHttpServicePatch `pulumi:"service"`
	Tls     *AgentSpecHttpTlsPatch     `pulumi:"tls"`
}

// AgentSpecHttpPatchInput is an input type that accepts AgentSpecHttpPatchArgs and AgentSpecHttpPatchOutput values.
// You can construct a concrete instance of `AgentSpecHttpPatchInput` via:
//
//	AgentSpecHttpPatchArgs{...}
type AgentSpecHttpPatchInput interface {
	pulumi.Input

	ToAgentSpecHttpPatchOutput() AgentSpecHttpPatchOutput
	ToAgentSpecHttpPatchOutputWithContext(context.Context) AgentSpecHttpPatchOutput
}

// HTTP holds the HTTP layer configuration for the Agent in Fleet mode with Fleet Server enabled.
type AgentSpecHttpPatchArgs struct {
	Service AgentSpecHttpServicePatchPtrInput `pulumi:"service"`
	Tls     AgentSpecHttpTlsPatchPtrInput     `pulumi:"tls"`
}

func (AgentSpecHttpPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpPatch)(nil)).Elem()
}

func (i AgentSpecHttpPatchArgs) ToAgentSpecHttpPatchOutput() AgentSpecHttpPatchOutput {
	return i.ToAgentSpecHttpPatchOutputWithContext(context.Background())
}

func (i AgentSpecHttpPatchArgs) ToAgentSpecHttpPatchOutputWithContext(ctx context.Context) AgentSpecHttpPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpPatchOutput)
}

func (i AgentSpecHttpPatchArgs) ToAgentSpecHttpPatchPtrOutput() AgentSpecHttpPatchPtrOutput {
	return i.ToAgentSpecHttpPatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpPatchArgs) ToAgentSpecHttpPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpPatchOutput).ToAgentSpecHttpPatchPtrOutputWithContext(ctx)
}

// AgentSpecHttpPatchPtrInput is an input type that accepts AgentSpecHttpPatchArgs, AgentSpecHttpPatchPtr and AgentSpecHttpPatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpPatchPtrInput` via:
//
//	        AgentSpecHttpPatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpPatchPtrInput interface {
	pulumi.Input

	ToAgentSpecHttpPatchPtrOutput() AgentSpecHttpPatchPtrOutput
	ToAgentSpecHttpPatchPtrOutputWithContext(context.Context) AgentSpecHttpPatchPtrOutput
}

type agentSpecHttpPatchPtrType AgentSpecHttpPatchArgs

func AgentSpecHttpPatchPtr(v *AgentSpecHttpPatchArgs) AgentSpecHttpPatchPtrInput {
	return (*agentSpecHttpPatchPtrType)(v)
}

func (*agentSpecHttpPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpPatch)(nil)).Elem()
}

func (i *agentSpecHttpPatchPtrType) ToAgentSpecHttpPatchPtrOutput() AgentSpecHttpPatchPtrOutput {
	return i.ToAgentSpecHttpPatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpPatchPtrType) ToAgentSpecHttpPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpPatchPtrOutput)
}

// HTTP holds the HTTP layer configuration for the Agent in Fleet mode with Fleet Server enabled.
type AgentSpecHttpPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpPatch)(nil)).Elem()
}

func (o AgentSpecHttpPatchOutput) ToAgentSpecHttpPatchOutput() AgentSpecHttpPatchOutput {
	return o
}

func (o AgentSpecHttpPatchOutput) ToAgentSpecHttpPatchOutputWithContext(ctx context.Context) AgentSpecHttpPatchOutput {
	return o
}

func (o AgentSpecHttpPatchOutput) ToAgentSpecHttpPatchPtrOutput() AgentSpecHttpPatchPtrOutput {
	return o.ToAgentSpecHttpPatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpPatchOutput) ToAgentSpecHttpPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpPatch) *AgentSpecHttpPatch {
		return &v
	}).(AgentSpecHttpPatchPtrOutput)
}

func (o AgentSpecHttpPatchOutput) Service() AgentSpecHttpServicePatchPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpPatch) *AgentSpecHttpServicePatch { return v.Service }).(AgentSpecHttpServicePatchPtrOutput)
}

func (o AgentSpecHttpPatchOutput) Tls() AgentSpecHttpTlsPatchPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpPatch) *AgentSpecHttpTlsPatch { return v.Tls }).(AgentSpecHttpTlsPatchPtrOutput)
}

type AgentSpecHttpPatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpPatch)(nil)).Elem()
}

func (o AgentSpecHttpPatchPtrOutput) ToAgentSpecHttpPatchPtrOutput() AgentSpecHttpPatchPtrOutput {
	return o
}

func (o AgentSpecHttpPatchPtrOutput) ToAgentSpecHttpPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpPatchPtrOutput {
	return o
}

func (o AgentSpecHttpPatchPtrOutput) Elem() AgentSpecHttpPatchOutput {
	return o.ApplyT(func(v *AgentSpecHttpPatch) AgentSpecHttpPatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpPatch
		return ret
	}).(AgentSpecHttpPatchOutput)
}

func (o AgentSpecHttpPatchPtrOutput) Service() AgentSpecHttpServicePatchPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpPatch) *AgentSpecHttpServicePatch {
		if v == nil {
			return nil
		}
		return v.Service
	}).(AgentSpecHttpServicePatchPtrOutput)
}

func (o AgentSpecHttpPatchPtrOutput) Tls() AgentSpecHttpTlsPatchPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpPatch) *AgentSpecHttpTlsPatch {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(AgentSpecHttpTlsPatchPtrOutput)
}

// Service defines the template for the associated Kubernetes Service object.
type AgentSpecHttpService struct {
	Metadata *AgentSpecHttpServiceMetadata `pulumi:"metadata"`
	Spec     *AgentSpecHttpServiceSpec     `pulumi:"spec"`
}

// AgentSpecHttpServiceInput is an input type that accepts AgentSpecHttpServiceArgs and AgentSpecHttpServiceOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceInput` via:
//
//	AgentSpecHttpServiceArgs{...}
type AgentSpecHttpServiceInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceOutput() AgentSpecHttpServiceOutput
	ToAgentSpecHttpServiceOutputWithContext(context.Context) AgentSpecHttpServiceOutput
}

// Service defines the template for the associated Kubernetes Service object.
type AgentSpecHttpServiceArgs struct {
	Metadata AgentSpecHttpServiceMetadataPtrInput `pulumi:"metadata"`
	Spec     AgentSpecHttpServiceSpecPtrInput     `pulumi:"spec"`
}

func (AgentSpecHttpServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpService)(nil)).Elem()
}

func (i AgentSpecHttpServiceArgs) ToAgentSpecHttpServiceOutput() AgentSpecHttpServiceOutput {
	return i.ToAgentSpecHttpServiceOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceArgs) ToAgentSpecHttpServiceOutputWithContext(ctx context.Context) AgentSpecHttpServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceOutput)
}

func (i AgentSpecHttpServiceArgs) ToAgentSpecHttpServicePtrOutput() AgentSpecHttpServicePtrOutput {
	return i.ToAgentSpecHttpServicePtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceArgs) ToAgentSpecHttpServicePtrOutputWithContext(ctx context.Context) AgentSpecHttpServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceOutput).ToAgentSpecHttpServicePtrOutputWithContext(ctx)
}

// AgentSpecHttpServicePtrInput is an input type that accepts AgentSpecHttpServiceArgs, AgentSpecHttpServicePtr and AgentSpecHttpServicePtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpServicePtrInput` via:
//
//	        AgentSpecHttpServiceArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpServicePtrInput interface {
	pulumi.Input

	ToAgentSpecHttpServicePtrOutput() AgentSpecHttpServicePtrOutput
	ToAgentSpecHttpServicePtrOutputWithContext(context.Context) AgentSpecHttpServicePtrOutput
}

type agentSpecHttpServicePtrType AgentSpecHttpServiceArgs

func AgentSpecHttpServicePtr(v *AgentSpecHttpServiceArgs) AgentSpecHttpServicePtrInput {
	return (*agentSpecHttpServicePtrType)(v)
}

func (*agentSpecHttpServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpService)(nil)).Elem()
}

func (i *agentSpecHttpServicePtrType) ToAgentSpecHttpServicePtrOutput() AgentSpecHttpServicePtrOutput {
	return i.ToAgentSpecHttpServicePtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpServicePtrType) ToAgentSpecHttpServicePtrOutputWithContext(ctx context.Context) AgentSpecHttpServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServicePtrOutput)
}

// Service defines the template for the associated Kubernetes Service object.
type AgentSpecHttpServiceOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpService)(nil)).Elem()
}

func (o AgentSpecHttpServiceOutput) ToAgentSpecHttpServiceOutput() AgentSpecHttpServiceOutput {
	return o
}

func (o AgentSpecHttpServiceOutput) ToAgentSpecHttpServiceOutputWithContext(ctx context.Context) AgentSpecHttpServiceOutput {
	return o
}

func (o AgentSpecHttpServiceOutput) ToAgentSpecHttpServicePtrOutput() AgentSpecHttpServicePtrOutput {
	return o.ToAgentSpecHttpServicePtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpServiceOutput) ToAgentSpecHttpServicePtrOutputWithContext(ctx context.Context) AgentSpecHttpServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpService) *AgentSpecHttpService {
		return &v
	}).(AgentSpecHttpServicePtrOutput)
}

func (o AgentSpecHttpServiceOutput) Metadata() AgentSpecHttpServiceMetadataPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpService) *AgentSpecHttpServiceMetadata { return v.Metadata }).(AgentSpecHttpServiceMetadataPtrOutput)
}

func (o AgentSpecHttpServiceOutput) Spec() AgentSpecHttpServiceSpecPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpService) *AgentSpecHttpServiceSpec { return v.Spec }).(AgentSpecHttpServiceSpecPtrOutput)
}

type AgentSpecHttpServicePtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpService)(nil)).Elem()
}

func (o AgentSpecHttpServicePtrOutput) ToAgentSpecHttpServicePtrOutput() AgentSpecHttpServicePtrOutput {
	return o
}

func (o AgentSpecHttpServicePtrOutput) ToAgentSpecHttpServicePtrOutputWithContext(ctx context.Context) AgentSpecHttpServicePtrOutput {
	return o
}

func (o AgentSpecHttpServicePtrOutput) Elem() AgentSpecHttpServiceOutput {
	return o.ApplyT(func(v *AgentSpecHttpService) AgentSpecHttpService {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpService
		return ret
	}).(AgentSpecHttpServiceOutput)
}

func (o AgentSpecHttpServicePtrOutput) Metadata() AgentSpecHttpServiceMetadataPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpService) *AgentSpecHttpServiceMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(AgentSpecHttpServiceMetadataPtrOutput)
}

func (o AgentSpecHttpServicePtrOutput) Spec() AgentSpecHttpServiceSpecPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpService) *AgentSpecHttpServiceSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(AgentSpecHttpServiceSpecPtrOutput)
}

// ObjectMeta is the metadata of the service.
// The name and namespace provided here are managed by ECK and will be ignored.
type AgentSpecHttpServiceMetadata struct {
	Annotations map[string]string `pulumi:"annotations"`
	Finalizers  []string          `pulumi:"finalizers"`
	Labels      map[string]string `pulumi:"labels"`
	Name        *string           `pulumi:"name"`
	Namespace   *string           `pulumi:"namespace"`
}

// AgentSpecHttpServiceMetadataInput is an input type that accepts AgentSpecHttpServiceMetadataArgs and AgentSpecHttpServiceMetadataOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceMetadataInput` via:
//
//	AgentSpecHttpServiceMetadataArgs{...}
type AgentSpecHttpServiceMetadataInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceMetadataOutput() AgentSpecHttpServiceMetadataOutput
	ToAgentSpecHttpServiceMetadataOutputWithContext(context.Context) AgentSpecHttpServiceMetadataOutput
}

// ObjectMeta is the metadata of the service.
// The name and namespace provided here are managed by ECK and will be ignored.
type AgentSpecHttpServiceMetadataArgs struct {
	Annotations pulumi.StringMapInput   `pulumi:"annotations"`
	Finalizers  pulumi.StringArrayInput `pulumi:"finalizers"`
	Labels      pulumi.StringMapInput   `pulumi:"labels"`
	Name        pulumi.StringPtrInput   `pulumi:"name"`
	Namespace   pulumi.StringPtrInput   `pulumi:"namespace"`
}

func (AgentSpecHttpServiceMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceMetadata)(nil)).Elem()
}

func (i AgentSpecHttpServiceMetadataArgs) ToAgentSpecHttpServiceMetadataOutput() AgentSpecHttpServiceMetadataOutput {
	return i.ToAgentSpecHttpServiceMetadataOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceMetadataArgs) ToAgentSpecHttpServiceMetadataOutputWithContext(ctx context.Context) AgentSpecHttpServiceMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceMetadataOutput)
}

func (i AgentSpecHttpServiceMetadataArgs) ToAgentSpecHttpServiceMetadataPtrOutput() AgentSpecHttpServiceMetadataPtrOutput {
	return i.ToAgentSpecHttpServiceMetadataPtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceMetadataArgs) ToAgentSpecHttpServiceMetadataPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceMetadataOutput).ToAgentSpecHttpServiceMetadataPtrOutputWithContext(ctx)
}

// AgentSpecHttpServiceMetadataPtrInput is an input type that accepts AgentSpecHttpServiceMetadataArgs, AgentSpecHttpServiceMetadataPtr and AgentSpecHttpServiceMetadataPtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceMetadataPtrInput` via:
//
//	        AgentSpecHttpServiceMetadataArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpServiceMetadataPtrInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceMetadataPtrOutput() AgentSpecHttpServiceMetadataPtrOutput
	ToAgentSpecHttpServiceMetadataPtrOutputWithContext(context.Context) AgentSpecHttpServiceMetadataPtrOutput
}

type agentSpecHttpServiceMetadataPtrType AgentSpecHttpServiceMetadataArgs

func AgentSpecHttpServiceMetadataPtr(v *AgentSpecHttpServiceMetadataArgs) AgentSpecHttpServiceMetadataPtrInput {
	return (*agentSpecHttpServiceMetadataPtrType)(v)
}

func (*agentSpecHttpServiceMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceMetadata)(nil)).Elem()
}

func (i *agentSpecHttpServiceMetadataPtrType) ToAgentSpecHttpServiceMetadataPtrOutput() AgentSpecHttpServiceMetadataPtrOutput {
	return i.ToAgentSpecHttpServiceMetadataPtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpServiceMetadataPtrType) ToAgentSpecHttpServiceMetadataPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceMetadataPtrOutput)
}

// ObjectMeta is the metadata of the service.
// The name and namespace provided here are managed by ECK and will be ignored.
type AgentSpecHttpServiceMetadataOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceMetadata)(nil)).Elem()
}

func (o AgentSpecHttpServiceMetadataOutput) ToAgentSpecHttpServiceMetadataOutput() AgentSpecHttpServiceMetadataOutput {
	return o
}

func (o AgentSpecHttpServiceMetadataOutput) ToAgentSpecHttpServiceMetadataOutputWithContext(ctx context.Context) AgentSpecHttpServiceMetadataOutput {
	return o
}

func (o AgentSpecHttpServiceMetadataOutput) ToAgentSpecHttpServiceMetadataPtrOutput() AgentSpecHttpServiceMetadataPtrOutput {
	return o.ToAgentSpecHttpServiceMetadataPtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpServiceMetadataOutput) ToAgentSpecHttpServiceMetadataPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpServiceMetadata) *AgentSpecHttpServiceMetadata {
		return &v
	}).(AgentSpecHttpServiceMetadataPtrOutput)
}

func (o AgentSpecHttpServiceMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

func (o AgentSpecHttpServiceMetadataOutput) Finalizers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceMetadata) []string { return v.Finalizers }).(pulumi.StringArrayOutput)
}

func (o AgentSpecHttpServiceMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o AgentSpecHttpServiceMetadataOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceMetadata) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AgentSpecHttpServiceMetadataOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceMetadata) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type AgentSpecHttpServiceMetadataPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceMetadata)(nil)).Elem()
}

func (o AgentSpecHttpServiceMetadataPtrOutput) ToAgentSpecHttpServiceMetadataPtrOutput() AgentSpecHttpServiceMetadataPtrOutput {
	return o
}

func (o AgentSpecHttpServiceMetadataPtrOutput) ToAgentSpecHttpServiceMetadataPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceMetadataPtrOutput {
	return o
}

func (o AgentSpecHttpServiceMetadataPtrOutput) Elem() AgentSpecHttpServiceMetadataOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceMetadata) AgentSpecHttpServiceMetadata {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpServiceMetadata
		return ret
	}).(AgentSpecHttpServiceMetadataOutput)
}

func (o AgentSpecHttpServiceMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

func (o AgentSpecHttpServiceMetadataPtrOutput) Finalizers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceMetadata) []string {
		if v == nil {
			return nil
		}
		return v.Finalizers
	}).(pulumi.StringArrayOutput)
}

func (o AgentSpecHttpServiceMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

func (o AgentSpecHttpServiceMetadataPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AgentSpecHttpServiceMetadataPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// ObjectMeta is the metadata of the service.
// The name and namespace provided here are managed by ECK and will be ignored.
type AgentSpecHttpServiceMetadataPatch struct {
	Annotations map[string]string `pulumi:"annotations"`
	Finalizers  []string          `pulumi:"finalizers"`
	Labels      map[string]string `pulumi:"labels"`
	Name        *string           `pulumi:"name"`
	Namespace   *string           `pulumi:"namespace"`
}

// AgentSpecHttpServiceMetadataPatchInput is an input type that accepts AgentSpecHttpServiceMetadataPatchArgs and AgentSpecHttpServiceMetadataPatchOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceMetadataPatchInput` via:
//
//	AgentSpecHttpServiceMetadataPatchArgs{...}
type AgentSpecHttpServiceMetadataPatchInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceMetadataPatchOutput() AgentSpecHttpServiceMetadataPatchOutput
	ToAgentSpecHttpServiceMetadataPatchOutputWithContext(context.Context) AgentSpecHttpServiceMetadataPatchOutput
}

// ObjectMeta is the metadata of the service.
// The name and namespace provided here are managed by ECK and will be ignored.
type AgentSpecHttpServiceMetadataPatchArgs struct {
	Annotations pulumi.StringMapInput   `pulumi:"annotations"`
	Finalizers  pulumi.StringArrayInput `pulumi:"finalizers"`
	Labels      pulumi.StringMapInput   `pulumi:"labels"`
	Name        pulumi.StringPtrInput   `pulumi:"name"`
	Namespace   pulumi.StringPtrInput   `pulumi:"namespace"`
}

func (AgentSpecHttpServiceMetadataPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceMetadataPatch)(nil)).Elem()
}

func (i AgentSpecHttpServiceMetadataPatchArgs) ToAgentSpecHttpServiceMetadataPatchOutput() AgentSpecHttpServiceMetadataPatchOutput {
	return i.ToAgentSpecHttpServiceMetadataPatchOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceMetadataPatchArgs) ToAgentSpecHttpServiceMetadataPatchOutputWithContext(ctx context.Context) AgentSpecHttpServiceMetadataPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceMetadataPatchOutput)
}

func (i AgentSpecHttpServiceMetadataPatchArgs) ToAgentSpecHttpServiceMetadataPatchPtrOutput() AgentSpecHttpServiceMetadataPatchPtrOutput {
	return i.ToAgentSpecHttpServiceMetadataPatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceMetadataPatchArgs) ToAgentSpecHttpServiceMetadataPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceMetadataPatchOutput).ToAgentSpecHttpServiceMetadataPatchPtrOutputWithContext(ctx)
}

// AgentSpecHttpServiceMetadataPatchPtrInput is an input type that accepts AgentSpecHttpServiceMetadataPatchArgs, AgentSpecHttpServiceMetadataPatchPtr and AgentSpecHttpServiceMetadataPatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceMetadataPatchPtrInput` via:
//
//	        AgentSpecHttpServiceMetadataPatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpServiceMetadataPatchPtrInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceMetadataPatchPtrOutput() AgentSpecHttpServiceMetadataPatchPtrOutput
	ToAgentSpecHttpServiceMetadataPatchPtrOutputWithContext(context.Context) AgentSpecHttpServiceMetadataPatchPtrOutput
}

type agentSpecHttpServiceMetadataPatchPtrType AgentSpecHttpServiceMetadataPatchArgs

func AgentSpecHttpServiceMetadataPatchPtr(v *AgentSpecHttpServiceMetadataPatchArgs) AgentSpecHttpServiceMetadataPatchPtrInput {
	return (*agentSpecHttpServiceMetadataPatchPtrType)(v)
}

func (*agentSpecHttpServiceMetadataPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceMetadataPatch)(nil)).Elem()
}

func (i *agentSpecHttpServiceMetadataPatchPtrType) ToAgentSpecHttpServiceMetadataPatchPtrOutput() AgentSpecHttpServiceMetadataPatchPtrOutput {
	return i.ToAgentSpecHttpServiceMetadataPatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpServiceMetadataPatchPtrType) ToAgentSpecHttpServiceMetadataPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceMetadataPatchPtrOutput)
}

// ObjectMeta is the metadata of the service.
// The name and namespace provided here are managed by ECK and will be ignored.
type AgentSpecHttpServiceMetadataPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceMetadataPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceMetadataPatch)(nil)).Elem()
}

func (o AgentSpecHttpServiceMetadataPatchOutput) ToAgentSpecHttpServiceMetadataPatchOutput() AgentSpecHttpServiceMetadataPatchOutput {
	return o
}

func (o AgentSpecHttpServiceMetadataPatchOutput) ToAgentSpecHttpServiceMetadataPatchOutputWithContext(ctx context.Context) AgentSpecHttpServiceMetadataPatchOutput {
	return o
}

func (o AgentSpecHttpServiceMetadataPatchOutput) ToAgentSpecHttpServiceMetadataPatchPtrOutput() AgentSpecHttpServiceMetadataPatchPtrOutput {
	return o.ToAgentSpecHttpServiceMetadataPatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpServiceMetadataPatchOutput) ToAgentSpecHttpServiceMetadataPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceMetadataPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpServiceMetadataPatch) *AgentSpecHttpServiceMetadataPatch {
		return &v
	}).(AgentSpecHttpServiceMetadataPatchPtrOutput)
}

func (o AgentSpecHttpServiceMetadataPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceMetadataPatch) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

func (o AgentSpecHttpServiceMetadataPatchOutput) Finalizers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceMetadataPatch) []string { return v.Finalizers }).(pulumi.StringArrayOutput)
}

func (o AgentSpecHttpServiceMetadataPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceMetadataPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o AgentSpecHttpServiceMetadataPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceMetadataPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AgentSpecHttpServiceMetadataPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceMetadataPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type AgentSpecHttpServiceMetadataPatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceMetadataPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceMetadataPatch)(nil)).Elem()
}

func (o AgentSpecHttpServiceMetadataPatchPtrOutput) ToAgentSpecHttpServiceMetadataPatchPtrOutput() AgentSpecHttpServiceMetadataPatchPtrOutput {
	return o
}

func (o AgentSpecHttpServiceMetadataPatchPtrOutput) ToAgentSpecHttpServiceMetadataPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceMetadataPatchPtrOutput {
	return o
}

func (o AgentSpecHttpServiceMetadataPatchPtrOutput) Elem() AgentSpecHttpServiceMetadataPatchOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceMetadataPatch) AgentSpecHttpServiceMetadataPatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpServiceMetadataPatch
		return ret
	}).(AgentSpecHttpServiceMetadataPatchOutput)
}

func (o AgentSpecHttpServiceMetadataPatchPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

func (o AgentSpecHttpServiceMetadataPatchPtrOutput) Finalizers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceMetadataPatch) []string {
		if v == nil {
			return nil
		}
		return v.Finalizers
	}).(pulumi.StringArrayOutput)
}

func (o AgentSpecHttpServiceMetadataPatchPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

func (o AgentSpecHttpServiceMetadataPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceMetadataPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AgentSpecHttpServiceMetadataPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceMetadataPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Service defines the template for the associated Kubernetes Service object.
type AgentSpecHttpServicePatch struct {
	Metadata *AgentSpecHttpServiceMetadataPatch `pulumi:"metadata"`
	Spec     *AgentSpecHttpServiceSpecPatch     `pulumi:"spec"`
}

// AgentSpecHttpServicePatchInput is an input type that accepts AgentSpecHttpServicePatchArgs and AgentSpecHttpServicePatchOutput values.
// You can construct a concrete instance of `AgentSpecHttpServicePatchInput` via:
//
//	AgentSpecHttpServicePatchArgs{...}
type AgentSpecHttpServicePatchInput interface {
	pulumi.Input

	ToAgentSpecHttpServicePatchOutput() AgentSpecHttpServicePatchOutput
	ToAgentSpecHttpServicePatchOutputWithContext(context.Context) AgentSpecHttpServicePatchOutput
}

// Service defines the template for the associated Kubernetes Service object.
type AgentSpecHttpServicePatchArgs struct {
	Metadata AgentSpecHttpServiceMetadataPatchPtrInput `pulumi:"metadata"`
	Spec     AgentSpecHttpServiceSpecPatchPtrInput     `pulumi:"spec"`
}

func (AgentSpecHttpServicePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServicePatch)(nil)).Elem()
}

func (i AgentSpecHttpServicePatchArgs) ToAgentSpecHttpServicePatchOutput() AgentSpecHttpServicePatchOutput {
	return i.ToAgentSpecHttpServicePatchOutputWithContext(context.Background())
}

func (i AgentSpecHttpServicePatchArgs) ToAgentSpecHttpServicePatchOutputWithContext(ctx context.Context) AgentSpecHttpServicePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServicePatchOutput)
}

func (i AgentSpecHttpServicePatchArgs) ToAgentSpecHttpServicePatchPtrOutput() AgentSpecHttpServicePatchPtrOutput {
	return i.ToAgentSpecHttpServicePatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpServicePatchArgs) ToAgentSpecHttpServicePatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpServicePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServicePatchOutput).ToAgentSpecHttpServicePatchPtrOutputWithContext(ctx)
}

// AgentSpecHttpServicePatchPtrInput is an input type that accepts AgentSpecHttpServicePatchArgs, AgentSpecHttpServicePatchPtr and AgentSpecHttpServicePatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpServicePatchPtrInput` via:
//
//	        AgentSpecHttpServicePatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpServicePatchPtrInput interface {
	pulumi.Input

	ToAgentSpecHttpServicePatchPtrOutput() AgentSpecHttpServicePatchPtrOutput
	ToAgentSpecHttpServicePatchPtrOutputWithContext(context.Context) AgentSpecHttpServicePatchPtrOutput
}

type agentSpecHttpServicePatchPtrType AgentSpecHttpServicePatchArgs

func AgentSpecHttpServicePatchPtr(v *AgentSpecHttpServicePatchArgs) AgentSpecHttpServicePatchPtrInput {
	return (*agentSpecHttpServicePatchPtrType)(v)
}

func (*agentSpecHttpServicePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServicePatch)(nil)).Elem()
}

func (i *agentSpecHttpServicePatchPtrType) ToAgentSpecHttpServicePatchPtrOutput() AgentSpecHttpServicePatchPtrOutput {
	return i.ToAgentSpecHttpServicePatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpServicePatchPtrType) ToAgentSpecHttpServicePatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpServicePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServicePatchPtrOutput)
}

// Service defines the template for the associated Kubernetes Service object.
type AgentSpecHttpServicePatchOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServicePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServicePatch)(nil)).Elem()
}

func (o AgentSpecHttpServicePatchOutput) ToAgentSpecHttpServicePatchOutput() AgentSpecHttpServicePatchOutput {
	return o
}

func (o AgentSpecHttpServicePatchOutput) ToAgentSpecHttpServicePatchOutputWithContext(ctx context.Context) AgentSpecHttpServicePatchOutput {
	return o
}

func (o AgentSpecHttpServicePatchOutput) ToAgentSpecHttpServicePatchPtrOutput() AgentSpecHttpServicePatchPtrOutput {
	return o.ToAgentSpecHttpServicePatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpServicePatchOutput) ToAgentSpecHttpServicePatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpServicePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpServicePatch) *AgentSpecHttpServicePatch {
		return &v
	}).(AgentSpecHttpServicePatchPtrOutput)
}

func (o AgentSpecHttpServicePatchOutput) Metadata() AgentSpecHttpServiceMetadataPatchPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServicePatch) *AgentSpecHttpServiceMetadataPatch { return v.Metadata }).(AgentSpecHttpServiceMetadataPatchPtrOutput)
}

func (o AgentSpecHttpServicePatchOutput) Spec() AgentSpecHttpServiceSpecPatchPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServicePatch) *AgentSpecHttpServiceSpecPatch { return v.Spec }).(AgentSpecHttpServiceSpecPatchPtrOutput)
}

type AgentSpecHttpServicePatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServicePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServicePatch)(nil)).Elem()
}

func (o AgentSpecHttpServicePatchPtrOutput) ToAgentSpecHttpServicePatchPtrOutput() AgentSpecHttpServicePatchPtrOutput {
	return o
}

func (o AgentSpecHttpServicePatchPtrOutput) ToAgentSpecHttpServicePatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpServicePatchPtrOutput {
	return o
}

func (o AgentSpecHttpServicePatchPtrOutput) Elem() AgentSpecHttpServicePatchOutput {
	return o.ApplyT(func(v *AgentSpecHttpServicePatch) AgentSpecHttpServicePatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpServicePatch
		return ret
	}).(AgentSpecHttpServicePatchOutput)
}

func (o AgentSpecHttpServicePatchPtrOutput) Metadata() AgentSpecHttpServiceMetadataPatchPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServicePatch) *AgentSpecHttpServiceMetadataPatch {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(AgentSpecHttpServiceMetadataPatchPtrOutput)
}

func (o AgentSpecHttpServicePatchPtrOutput) Spec() AgentSpecHttpServiceSpecPatchPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServicePatch) *AgentSpecHttpServiceSpecPatch {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(AgentSpecHttpServiceSpecPatchPtrOutput)
}

// Spec is the specification of the service.
type AgentSpecHttpServiceSpec struct {
	// allocateLoadBalancerNodePorts defines if NodePorts will be automatically
	// allocated for services with type LoadBalancer.  Default is "true". It
	// may be set to "false" if the cluster load-balancer does not rely on
	// NodePorts.  If the caller requests specific NodePorts (by specifying a
	// value), those requests will be respected, regardless of this field.
	// This field may only be set for services with type LoadBalancer and will
	// be cleared if the type is changed to any other type.
	AllocateLoadBalancerNodePorts *bool `pulumi:"allocateLoadBalancerNodePorts"`
	// clusterIP is the IP address of the service and is usually assigned
	// randomly. If an address is specified manually, is in-range (as per
	// system configuration), and is not in use, it will be allocated to the
	// service; otherwise creation of the service will fail. This field may not
	// be changed through updates unless the type field is also being changed
	// to ExternalName (which requires this field to be blank) or the type
	// field is being changed from ExternalName (in which case this field may
	// optionally be specified, as describe above).  Valid values are "None",
	// empty string (""), or a valid IP address. Setting this to "None" makes a
	// "headless service" (no virtual IP), which is useful when direct endpoint
	// connections are preferred and proxying is not required.  Only applies to
	// types ClusterIP, NodePort, and LoadBalancer. If this field is specified
	// when creating a Service of type ExternalName, creation will fail. This
	// field will be wiped when updating a Service to type ExternalName.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	ClusterIP *string `pulumi:"clusterIP"`
	// ClusterIPs is a list of IP addresses assigned to this service, and are
	// usually assigned randomly.  If an address is specified manually, is
	// in-range (as per system configuration), and is not in use, it will be
	// allocated to the service; otherwise creation of the service will fail.
	// This field may not be changed through updates unless the type field is
	// also being changed to ExternalName (which requires this field to be
	// empty) or the type field is being changed from ExternalName (in which
	// case this field may optionally be specified, as describe above).  Valid
	// values are "None", empty string (""), or a valid IP address.  Setting
	// this to "None" makes a "headless service" (no virtual IP), which is
	// useful when direct endpoint connections are preferred and proxying is
	// not required.  Only applies to types ClusterIP, NodePort, and
	// LoadBalancer. If this field is specified when creating a Service of type
	// ExternalName, creation will fail. This field will be wiped when updating
	// a Service to type ExternalName.  If this field is not specified, it will
	// be initialized from the clusterIP field.  If this field is specified,
	// clients must ensure that clusterIPs[0] and clusterIP have the same
	// value.
	//
	// This field may hold a maximum of two entries (dual-stack IPs, in either order).
	// These IPs must correspond to the values of the ipFamilies field. Both
	// clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	ClusterIPs []string `pulumi:"clusterIPs"`
	// externalIPs is a list of IP addresses for which nodes in the cluster
	// will also accept traffic for this service.  These IPs are not managed by
	// Kubernetes.  The user is responsible for ensuring that traffic arrives
	// at a node with this IP.  A common example is external load-balancers
	// that are not part of the Kubernetes system.
	ExternalIPs []string `pulumi:"externalIPs"`
	// externalName is the external reference that discovery mechanisms will
	// return as an alias for this service (e.g. a DNS CNAME record). No
	// proxying will be involved.  Must be a lowercase RFC-1123 hostname
	// (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
	ExternalName *string `pulumi:"externalName"`
	// externalTrafficPolicy describes how nodes distribute service traffic they
	// receive on one of the Service's "externally-facing" addresses (NodePorts,
	// ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure
	// the service in a way that assumes that external load balancers will take care
	// of balancing the service traffic between nodes, and so each node will deliver
	// traffic only to the node-local endpoints of the service, without masquerading
	// the client source IP. (Traffic mistakenly sent to a node with no endpoints will
	// be dropped.) The default value, "Cluster", uses the standard behavior of
	// routing to all endpoints evenly (possibly modified by topology and other
	// features). Note that traffic sent to an External IP or LoadBalancer IP from
	// within the cluster will always get "Cluster" semantics, but clients sending to
	// a NodePort from within the cluster may need to take traffic policy into account
	// when picking a node.
	ExternalTrafficPolicy *string `pulumi:"externalTrafficPolicy"`
	// healthCheckNodePort specifies the healthcheck nodePort for the service.
	// This only applies when type is set to LoadBalancer and
	// externalTrafficPolicy is set to Local. If a value is specified, is
	// in-range, and is not in use, it will be used.  If not specified, a value
	// will be automatically allocated.  External systems (e.g. load-balancers)
	// can use this port to determine if a given node holds endpoints for this
	// service or not.  If this field is specified when creating a Service
	// which does not need it, creation will fail. This field will be wiped
	// when updating a Service to no longer need it (e.g. changing type).
	// This field cannot be updated once set.
	HealthCheckNodePort *int `pulumi:"healthCheckNodePort"`
	// InternalTrafficPolicy describes how nodes distribute service traffic they
	// receive on the ClusterIP. If set to "Local", the proxy will assume that pods
	// only want to talk to endpoints of the service on the same node as the pod,
	// dropping the traffic if there are no local endpoints. The default value,
	// "Cluster", uses the standard behavior of routing to all endpoints evenly
	// (possibly modified by topology and other features).
	InternalTrafficPolicy *string `pulumi:"internalTrafficPolicy"`
	// IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this
	// service. This field is usually assigned automatically based on cluster
	// configuration and the ipFamilyPolicy field. If this field is specified
	// manually, the requested family is available in the cluster,
	// and ipFamilyPolicy allows it, it will be used; otherwise creation of
	// the service will fail. This field is conditionally mutable: it allows
	// for adding or removing a secondary IP family, but it does not allow
	// changing the primary IP family of the Service. Valid values are "IPv4"
	// and "IPv6".  This field only applies to Services of types ClusterIP,
	// NodePort, and LoadBalancer, and does apply to "headless" services.
	// This field will be wiped when updating a Service to type ExternalName.
	//
	// This field may hold a maximum of two entries (dual-stack families, in
	// either order).  These families must correspond to the values of the
	// clusterIPs field, if specified. Both clusterIPs and ipFamilies are
	// governed by the ipFamilyPolicy field.
	IpFamilies []string `pulumi:"ipFamilies"`
	// IPFamilyPolicy represents the dual-stack-ness requested or required by
	// this Service. If there is no value provided, then this field will be set
	// to SingleStack. Services can be "SingleStack" (a single IP family),
	// "PreferDualStack" (two IP families on dual-stack configured clusters or
	// a single IP family on single-stack clusters), or "RequireDualStack"
	// (two IP families on dual-stack configured clusters, otherwise fail). The
	// ipFamilies and clusterIPs fields depend on the value of this field. This
	// field will be wiped when updating a service to type ExternalName.
	IpFamilyPolicy *string `pulumi:"ipFamilyPolicy"`
	// loadBalancerClass is the class of the load balancer implementation this Service belongs to.
	// If specified, the value of this field must be a label-style identifier, with an optional prefix,
	// e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
	// This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
	// balancer implementation is used, today this is typically done through the cloud provider integration,
	// but should apply for any default implementation. If set, it is assumed that a load balancer
	// implementation is watching for Services with a matching class. Any default load balancer
	// implementation (e.g. cloud providers) should ignore Services that set this field.
	// This field can only be set when creating or updating a Service to type 'LoadBalancer'.
	// Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
	LoadBalancerClass *string `pulumi:"loadBalancerClass"`
	// Only applies to Service Type: LoadBalancer.
	// This feature depends on whether the underlying cloud-provider supports specifying
	// the loadBalancerIP when a load balancer is created.
	// This field will be ignored if the cloud-provider does not support the feature.
	// Deprecated: This field was under-specified and its meaning varies across implementations.
	// Using it is non-portable and it may not support dual-stack.
	// Users are encouraged to use implementation-specific annotations when available.
	LoadBalancerIP *string `pulumi:"loadBalancerIP"`
	// If specified and supported by the platform, this will restrict traffic through the cloud-provider
	// load-balancer will be restricted to the specified client IPs. This field will be ignored if the
	// cloud-provider does not support the feature."
	// More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
	LoadBalancerSourceRanges []string `pulumi:"loadBalancerSourceRanges"`
	// The list of ports that are exposed by this service.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	Ports []AgentSpecHttpServiceSpecPorts `pulumi:"ports"`
	// publishNotReadyAddresses indicates that any agent which deals with endpoints for this
	// Service should disregard any indications of ready/not-ready.
	// The primary use case for setting this field is for a StatefulSet's Headless Service to
	// propagate SRV DNS records for its Pods for the purpose of peer discovery.
	// The Kubernetes controllers that generate Endpoints and EndpointSlice resources for
	// Services interpret this to mean that all endpoints are considered "ready" even if the
	// Pods themselves are not. Agents which consume only Kubernetes generated endpoints
	// through the Endpoints or EndpointSlice resources can safely assume this behavior.
	PublishNotReadyAddresses *bool `pulumi:"publishNotReadyAddresses"`
	// Route service traffic to pods with label keys and values matching this
	// selector. If empty or not present, the service is assumed to have an
	// external process managing its endpoints, which Kubernetes will not
	// modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
	// Ignored if type is ExternalName.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/
	Selector map[string]string `pulumi:"selector"`
	// Supports "ClientIP" and "None". Used to maintain session affinity.
	// Enable client IP based session affinity.
	// Must be ClientIP or None.
	// Defaults to None.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	SessionAffinity       *string                                        `pulumi:"sessionAffinity"`
	SessionAffinityConfig *AgentSpecHttpServiceSpecSessionAffinityConfig `pulumi:"sessionAffinityConfig"`
	// TrafficDistribution offers a way to express preferences for how traffic is
	// distributed to Service endpoints. Implementations can use this field as a
	// hint, but are not required to guarantee strict adherence. If the field is
	// not set, the implementation will apply its default routing strategy. If set
	// to "PreferClose", implementations should prioritize endpoints that are
	// topologically close (e.g., same zone).
	// This is an alpha field and requires enabling ServiceTrafficDistribution feature.
	TrafficDistribution *string `pulumi:"trafficDistribution"`
	// type determines how the Service is exposed. Defaults to ClusterIP. Valid
	// options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
	// "ClusterIP" allocates a cluster-internal IP address for load-balancing
	// to endpoints. Endpoints are determined by the selector or if that is not
	// specified, by manual construction of an Endpoints object or
	// EndpointSlice objects. If clusterIP is "None", no virtual IP is
	// allocated and the endpoints are published as a set of endpoints rather
	// than a virtual IP.
	// "NodePort" builds on ClusterIP and allocates a port on every node which
	// routes to the same endpoints as the clusterIP.
	// "LoadBalancer" builds on NodePort and creates an external load-balancer
	// (if supported in the current cloud) which routes to the same endpoints
	// as the clusterIP.
	// "ExternalName" aliases this service to the specified externalName.
	// Several other fields do not apply to ExternalName services.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
	Type *string `pulumi:"type"`
}

// AgentSpecHttpServiceSpecInput is an input type that accepts AgentSpecHttpServiceSpecArgs and AgentSpecHttpServiceSpecOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecInput` via:
//
//	AgentSpecHttpServiceSpecArgs{...}
type AgentSpecHttpServiceSpecInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecOutput() AgentSpecHttpServiceSpecOutput
	ToAgentSpecHttpServiceSpecOutputWithContext(context.Context) AgentSpecHttpServiceSpecOutput
}

// Spec is the specification of the service.
type AgentSpecHttpServiceSpecArgs struct {
	// allocateLoadBalancerNodePorts defines if NodePorts will be automatically
	// allocated for services with type LoadBalancer.  Default is "true". It
	// may be set to "false" if the cluster load-balancer does not rely on
	// NodePorts.  If the caller requests specific NodePorts (by specifying a
	// value), those requests will be respected, regardless of this field.
	// This field may only be set for services with type LoadBalancer and will
	// be cleared if the type is changed to any other type.
	AllocateLoadBalancerNodePorts pulumi.BoolPtrInput `pulumi:"allocateLoadBalancerNodePorts"`
	// clusterIP is the IP address of the service and is usually assigned
	// randomly. If an address is specified manually, is in-range (as per
	// system configuration), and is not in use, it will be allocated to the
	// service; otherwise creation of the service will fail. This field may not
	// be changed through updates unless the type field is also being changed
	// to ExternalName (which requires this field to be blank) or the type
	// field is being changed from ExternalName (in which case this field may
	// optionally be specified, as describe above).  Valid values are "None",
	// empty string (""), or a valid IP address. Setting this to "None" makes a
	// "headless service" (no virtual IP), which is useful when direct endpoint
	// connections are preferred and proxying is not required.  Only applies to
	// types ClusterIP, NodePort, and LoadBalancer. If this field is specified
	// when creating a Service of type ExternalName, creation will fail. This
	// field will be wiped when updating a Service to type ExternalName.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	ClusterIP pulumi.StringPtrInput `pulumi:"clusterIP"`
	// ClusterIPs is a list of IP addresses assigned to this service, and are
	// usually assigned randomly.  If an address is specified manually, is
	// in-range (as per system configuration), and is not in use, it will be
	// allocated to the service; otherwise creation of the service will fail.
	// This field may not be changed through updates unless the type field is
	// also being changed to ExternalName (which requires this field to be
	// empty) or the type field is being changed from ExternalName (in which
	// case this field may optionally be specified, as describe above).  Valid
	// values are "None", empty string (""), or a valid IP address.  Setting
	// this to "None" makes a "headless service" (no virtual IP), which is
	// useful when direct endpoint connections are preferred and proxying is
	// not required.  Only applies to types ClusterIP, NodePort, and
	// LoadBalancer. If this field is specified when creating a Service of type
	// ExternalName, creation will fail. This field will be wiped when updating
	// a Service to type ExternalName.  If this field is not specified, it will
	// be initialized from the clusterIP field.  If this field is specified,
	// clients must ensure that clusterIPs[0] and clusterIP have the same
	// value.
	//
	// This field may hold a maximum of two entries (dual-stack IPs, in either order).
	// These IPs must correspond to the values of the ipFamilies field. Both
	// clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	ClusterIPs pulumi.StringArrayInput `pulumi:"clusterIPs"`
	// externalIPs is a list of IP addresses for which nodes in the cluster
	// will also accept traffic for this service.  These IPs are not managed by
	// Kubernetes.  The user is responsible for ensuring that traffic arrives
	// at a node with this IP.  A common example is external load-balancers
	// that are not part of the Kubernetes system.
	ExternalIPs pulumi.StringArrayInput `pulumi:"externalIPs"`
	// externalName is the external reference that discovery mechanisms will
	// return as an alias for this service (e.g. a DNS CNAME record). No
	// proxying will be involved.  Must be a lowercase RFC-1123 hostname
	// (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
	ExternalName pulumi.StringPtrInput `pulumi:"externalName"`
	// externalTrafficPolicy describes how nodes distribute service traffic they
	// receive on one of the Service's "externally-facing" addresses (NodePorts,
	// ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure
	// the service in a way that assumes that external load balancers will take care
	// of balancing the service traffic between nodes, and so each node will deliver
	// traffic only to the node-local endpoints of the service, without masquerading
	// the client source IP. (Traffic mistakenly sent to a node with no endpoints will
	// be dropped.) The default value, "Cluster", uses the standard behavior of
	// routing to all endpoints evenly (possibly modified by topology and other
	// features). Note that traffic sent to an External IP or LoadBalancer IP from
	// within the cluster will always get "Cluster" semantics, but clients sending to
	// a NodePort from within the cluster may need to take traffic policy into account
	// when picking a node.
	ExternalTrafficPolicy pulumi.StringPtrInput `pulumi:"externalTrafficPolicy"`
	// healthCheckNodePort specifies the healthcheck nodePort for the service.
	// This only applies when type is set to LoadBalancer and
	// externalTrafficPolicy is set to Local. If a value is specified, is
	// in-range, and is not in use, it will be used.  If not specified, a value
	// will be automatically allocated.  External systems (e.g. load-balancers)
	// can use this port to determine if a given node holds endpoints for this
	// service or not.  If this field is specified when creating a Service
	// which does not need it, creation will fail. This field will be wiped
	// when updating a Service to no longer need it (e.g. changing type).
	// This field cannot be updated once set.
	HealthCheckNodePort pulumi.IntPtrInput `pulumi:"healthCheckNodePort"`
	// InternalTrafficPolicy describes how nodes distribute service traffic they
	// receive on the ClusterIP. If set to "Local", the proxy will assume that pods
	// only want to talk to endpoints of the service on the same node as the pod,
	// dropping the traffic if there are no local endpoints. The default value,
	// "Cluster", uses the standard behavior of routing to all endpoints evenly
	// (possibly modified by topology and other features).
	InternalTrafficPolicy pulumi.StringPtrInput `pulumi:"internalTrafficPolicy"`
	// IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this
	// service. This field is usually assigned automatically based on cluster
	// configuration and the ipFamilyPolicy field. If this field is specified
	// manually, the requested family is available in the cluster,
	// and ipFamilyPolicy allows it, it will be used; otherwise creation of
	// the service will fail. This field is conditionally mutable: it allows
	// for adding or removing a secondary IP family, but it does not allow
	// changing the primary IP family of the Service. Valid values are "IPv4"
	// and "IPv6".  This field only applies to Services of types ClusterIP,
	// NodePort, and LoadBalancer, and does apply to "headless" services.
	// This field will be wiped when updating a Service to type ExternalName.
	//
	// This field may hold a maximum of two entries (dual-stack families, in
	// either order).  These families must correspond to the values of the
	// clusterIPs field, if specified. Both clusterIPs and ipFamilies are
	// governed by the ipFamilyPolicy field.
	IpFamilies pulumi.StringArrayInput `pulumi:"ipFamilies"`
	// IPFamilyPolicy represents the dual-stack-ness requested or required by
	// this Service. If there is no value provided, then this field will be set
	// to SingleStack. Services can be "SingleStack" (a single IP family),
	// "PreferDualStack" (two IP families on dual-stack configured clusters or
	// a single IP family on single-stack clusters), or "RequireDualStack"
	// (two IP families on dual-stack configured clusters, otherwise fail). The
	// ipFamilies and clusterIPs fields depend on the value of this field. This
	// field will be wiped when updating a service to type ExternalName.
	IpFamilyPolicy pulumi.StringPtrInput `pulumi:"ipFamilyPolicy"`
	// loadBalancerClass is the class of the load balancer implementation this Service belongs to.
	// If specified, the value of this field must be a label-style identifier, with an optional prefix,
	// e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
	// This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
	// balancer implementation is used, today this is typically done through the cloud provider integration,
	// but should apply for any default implementation. If set, it is assumed that a load balancer
	// implementation is watching for Services with a matching class. Any default load balancer
	// implementation (e.g. cloud providers) should ignore Services that set this field.
	// This field can only be set when creating or updating a Service to type 'LoadBalancer'.
	// Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
	LoadBalancerClass pulumi.StringPtrInput `pulumi:"loadBalancerClass"`
	// Only applies to Service Type: LoadBalancer.
	// This feature depends on whether the underlying cloud-provider supports specifying
	// the loadBalancerIP when a load balancer is created.
	// This field will be ignored if the cloud-provider does not support the feature.
	// Deprecated: This field was under-specified and its meaning varies across implementations.
	// Using it is non-portable and it may not support dual-stack.
	// Users are encouraged to use implementation-specific annotations when available.
	LoadBalancerIP pulumi.StringPtrInput `pulumi:"loadBalancerIP"`
	// If specified and supported by the platform, this will restrict traffic through the cloud-provider
	// load-balancer will be restricted to the specified client IPs. This field will be ignored if the
	// cloud-provider does not support the feature."
	// More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
	LoadBalancerSourceRanges pulumi.StringArrayInput `pulumi:"loadBalancerSourceRanges"`
	// The list of ports that are exposed by this service.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	Ports AgentSpecHttpServiceSpecPortsArrayInput `pulumi:"ports"`
	// publishNotReadyAddresses indicates that any agent which deals with endpoints for this
	// Service should disregard any indications of ready/not-ready.
	// The primary use case for setting this field is for a StatefulSet's Headless Service to
	// propagate SRV DNS records for its Pods for the purpose of peer discovery.
	// The Kubernetes controllers that generate Endpoints and EndpointSlice resources for
	// Services interpret this to mean that all endpoints are considered "ready" even if the
	// Pods themselves are not. Agents which consume only Kubernetes generated endpoints
	// through the Endpoints or EndpointSlice resources can safely assume this behavior.
	PublishNotReadyAddresses pulumi.BoolPtrInput `pulumi:"publishNotReadyAddresses"`
	// Route service traffic to pods with label keys and values matching this
	// selector. If empty or not present, the service is assumed to have an
	// external process managing its endpoints, which Kubernetes will not
	// modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
	// Ignored if type is ExternalName.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/
	Selector pulumi.StringMapInput `pulumi:"selector"`
	// Supports "ClientIP" and "None". Used to maintain session affinity.
	// Enable client IP based session affinity.
	// Must be ClientIP or None.
	// Defaults to None.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	SessionAffinity       pulumi.StringPtrInput                                 `pulumi:"sessionAffinity"`
	SessionAffinityConfig AgentSpecHttpServiceSpecSessionAffinityConfigPtrInput `pulumi:"sessionAffinityConfig"`
	// TrafficDistribution offers a way to express preferences for how traffic is
	// distributed to Service endpoints. Implementations can use this field as a
	// hint, but are not required to guarantee strict adherence. If the field is
	// not set, the implementation will apply its default routing strategy. If set
	// to "PreferClose", implementations should prioritize endpoints that are
	// topologically close (e.g., same zone).
	// This is an alpha field and requires enabling ServiceTrafficDistribution feature.
	TrafficDistribution pulumi.StringPtrInput `pulumi:"trafficDistribution"`
	// type determines how the Service is exposed. Defaults to ClusterIP. Valid
	// options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
	// "ClusterIP" allocates a cluster-internal IP address for load-balancing
	// to endpoints. Endpoints are determined by the selector or if that is not
	// specified, by manual construction of an Endpoints object or
	// EndpointSlice objects. If clusterIP is "None", no virtual IP is
	// allocated and the endpoints are published as a set of endpoints rather
	// than a virtual IP.
	// "NodePort" builds on ClusterIP and allocates a port on every node which
	// routes to the same endpoints as the clusterIP.
	// "LoadBalancer" builds on NodePort and creates an external load-balancer
	// (if supported in the current cloud) which routes to the same endpoints
	// as the clusterIP.
	// "ExternalName" aliases this service to the specified externalName.
	// Several other fields do not apply to ExternalName services.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AgentSpecHttpServiceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpec)(nil)).Elem()
}

func (i AgentSpecHttpServiceSpecArgs) ToAgentSpecHttpServiceSpecOutput() AgentSpecHttpServiceSpecOutput {
	return i.ToAgentSpecHttpServiceSpecOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecArgs) ToAgentSpecHttpServiceSpecOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecOutput)
}

func (i AgentSpecHttpServiceSpecArgs) ToAgentSpecHttpServiceSpecPtrOutput() AgentSpecHttpServiceSpecPtrOutput {
	return i.ToAgentSpecHttpServiceSpecPtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecArgs) ToAgentSpecHttpServiceSpecPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecOutput).ToAgentSpecHttpServiceSpecPtrOutputWithContext(ctx)
}

// AgentSpecHttpServiceSpecPtrInput is an input type that accepts AgentSpecHttpServiceSpecArgs, AgentSpecHttpServiceSpecPtr and AgentSpecHttpServiceSpecPtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecPtrInput` via:
//
//	        AgentSpecHttpServiceSpecArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpServiceSpecPtrInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecPtrOutput() AgentSpecHttpServiceSpecPtrOutput
	ToAgentSpecHttpServiceSpecPtrOutputWithContext(context.Context) AgentSpecHttpServiceSpecPtrOutput
}

type agentSpecHttpServiceSpecPtrType AgentSpecHttpServiceSpecArgs

func AgentSpecHttpServiceSpecPtr(v *AgentSpecHttpServiceSpecArgs) AgentSpecHttpServiceSpecPtrInput {
	return (*agentSpecHttpServiceSpecPtrType)(v)
}

func (*agentSpecHttpServiceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceSpec)(nil)).Elem()
}

func (i *agentSpecHttpServiceSpecPtrType) ToAgentSpecHttpServiceSpecPtrOutput() AgentSpecHttpServiceSpecPtrOutput {
	return i.ToAgentSpecHttpServiceSpecPtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpServiceSpecPtrType) ToAgentSpecHttpServiceSpecPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecPtrOutput)
}

// Spec is the specification of the service.
type AgentSpecHttpServiceSpecOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpec)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecOutput) ToAgentSpecHttpServiceSpecOutput() AgentSpecHttpServiceSpecOutput {
	return o
}

func (o AgentSpecHttpServiceSpecOutput) ToAgentSpecHttpServiceSpecOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecOutput {
	return o
}

func (o AgentSpecHttpServiceSpecOutput) ToAgentSpecHttpServiceSpecPtrOutput() AgentSpecHttpServiceSpecPtrOutput {
	return o.ToAgentSpecHttpServiceSpecPtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpServiceSpecOutput) ToAgentSpecHttpServiceSpecPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpServiceSpec) *AgentSpecHttpServiceSpec {
		return &v
	}).(AgentSpecHttpServiceSpecPtrOutput)
}

// allocateLoadBalancerNodePorts defines if NodePorts will be automatically
// allocated for services with type LoadBalancer.  Default is "true". It
// may be set to "false" if the cluster load-balancer does not rely on
// NodePorts.  If the caller requests specific NodePorts (by specifying a
// value), those requests will be respected, regardless of this field.
// This field may only be set for services with type LoadBalancer and will
// be cleared if the type is changed to any other type.
func (o AgentSpecHttpServiceSpecOutput) AllocateLoadBalancerNodePorts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *bool { return v.AllocateLoadBalancerNodePorts }).(pulumi.BoolPtrOutput)
}

// clusterIP is the IP address of the service and is usually assigned
// randomly. If an address is specified manually, is in-range (as per
// system configuration), and is not in use, it will be allocated to the
// service; otherwise creation of the service will fail. This field may not
// be changed through updates unless the type field is also being changed
// to ExternalName (which requires this field to be blank) or the type
// field is being changed from ExternalName (in which case this field may
// optionally be specified, as describe above).  Valid values are "None",
// empty string (""), or a valid IP address. Setting this to "None" makes a
// "headless service" (no virtual IP), which is useful when direct endpoint
// connections are preferred and proxying is not required.  Only applies to
// types ClusterIP, NodePort, and LoadBalancer. If this field is specified
// when creating a Service of type ExternalName, creation will fail. This
// field will be wiped when updating a Service to type ExternalName.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecOutput) ClusterIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *string { return v.ClusterIP }).(pulumi.StringPtrOutput)
}

// ClusterIPs is a list of IP addresses assigned to this service, and are
// usually assigned randomly.  If an address is specified manually, is
// in-range (as per system configuration), and is not in use, it will be
// allocated to the service; otherwise creation of the service will fail.
// This field may not be changed through updates unless the type field is
// also being changed to ExternalName (which requires this field to be
// empty) or the type field is being changed from ExternalName (in which
// case this field may optionally be specified, as describe above).  Valid
// values are "None", empty string (""), or a valid IP address.  Setting
// this to "None" makes a "headless service" (no virtual IP), which is
// useful when direct endpoint connections are preferred and proxying is
// not required.  Only applies to types ClusterIP, NodePort, and
// LoadBalancer. If this field is specified when creating a Service of type
// ExternalName, creation will fail. This field will be wiped when updating
// a Service to type ExternalName.  If this field is not specified, it will
// be initialized from the clusterIP field.  If this field is specified,
// clients must ensure that clusterIPs[0] and clusterIP have the same
// value.
//
// This field may hold a maximum of two entries (dual-stack IPs, in either order).
// These IPs must correspond to the values of the ipFamilies field. Both
// clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecOutput) ClusterIPs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) []string { return v.ClusterIPs }).(pulumi.StringArrayOutput)
}

// externalIPs is a list of IP addresses for which nodes in the cluster
// will also accept traffic for this service.  These IPs are not managed by
// Kubernetes.  The user is responsible for ensuring that traffic arrives
// at a node with this IP.  A common example is external load-balancers
// that are not part of the Kubernetes system.
func (o AgentSpecHttpServiceSpecOutput) ExternalIPs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) []string { return v.ExternalIPs }).(pulumi.StringArrayOutput)
}

// externalName is the external reference that discovery mechanisms will
// return as an alias for this service (e.g. a DNS CNAME record). No
// proxying will be involved.  Must be a lowercase RFC-1123 hostname
// (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
func (o AgentSpecHttpServiceSpecOutput) ExternalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *string { return v.ExternalName }).(pulumi.StringPtrOutput)
}

// externalTrafficPolicy describes how nodes distribute service traffic they
// receive on one of the Service's "externally-facing" addresses (NodePorts,
// ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure
// the service in a way that assumes that external load balancers will take care
// of balancing the service traffic between nodes, and so each node will deliver
// traffic only to the node-local endpoints of the service, without masquerading
// the client source IP. (Traffic mistakenly sent to a node with no endpoints will
// be dropped.) The default value, "Cluster", uses the standard behavior of
// routing to all endpoints evenly (possibly modified by topology and other
// features). Note that traffic sent to an External IP or LoadBalancer IP from
// within the cluster will always get "Cluster" semantics, but clients sending to
// a NodePort from within the cluster may need to take traffic policy into account
// when picking a node.
func (o AgentSpecHttpServiceSpecOutput) ExternalTrafficPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *string { return v.ExternalTrafficPolicy }).(pulumi.StringPtrOutput)
}

// healthCheckNodePort specifies the healthcheck nodePort for the service.
// This only applies when type is set to LoadBalancer and
// externalTrafficPolicy is set to Local. If a value is specified, is
// in-range, and is not in use, it will be used.  If not specified, a value
// will be automatically allocated.  External systems (e.g. load-balancers)
// can use this port to determine if a given node holds endpoints for this
// service or not.  If this field is specified when creating a Service
// which does not need it, creation will fail. This field will be wiped
// when updating a Service to no longer need it (e.g. changing type).
// This field cannot be updated once set.
func (o AgentSpecHttpServiceSpecOutput) HealthCheckNodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *int { return v.HealthCheckNodePort }).(pulumi.IntPtrOutput)
}

// InternalTrafficPolicy describes how nodes distribute service traffic they
// receive on the ClusterIP. If set to "Local", the proxy will assume that pods
// only want to talk to endpoints of the service on the same node as the pod,
// dropping the traffic if there are no local endpoints. The default value,
// "Cluster", uses the standard behavior of routing to all endpoints evenly
// (possibly modified by topology and other features).
func (o AgentSpecHttpServiceSpecOutput) InternalTrafficPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *string { return v.InternalTrafficPolicy }).(pulumi.StringPtrOutput)
}

// IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this
// service. This field is usually assigned automatically based on cluster
// configuration and the ipFamilyPolicy field. If this field is specified
// manually, the requested family is available in the cluster,
// and ipFamilyPolicy allows it, it will be used; otherwise creation of
// the service will fail. This field is conditionally mutable: it allows
// for adding or removing a secondary IP family, but it does not allow
// changing the primary IP family of the Service. Valid values are "IPv4"
// and "IPv6".  This field only applies to Services of types ClusterIP,
// NodePort, and LoadBalancer, and does apply to "headless" services.
// This field will be wiped when updating a Service to type ExternalName.
//
// This field may hold a maximum of two entries (dual-stack families, in
// either order).  These families must correspond to the values of the
// clusterIPs field, if specified. Both clusterIPs and ipFamilies are
// governed by the ipFamilyPolicy field.
func (o AgentSpecHttpServiceSpecOutput) IpFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) []string { return v.IpFamilies }).(pulumi.StringArrayOutput)
}

// IPFamilyPolicy represents the dual-stack-ness requested or required by
// this Service. If there is no value provided, then this field will be set
// to SingleStack. Services can be "SingleStack" (a single IP family),
// "PreferDualStack" (two IP families on dual-stack configured clusters or
// a single IP family on single-stack clusters), or "RequireDualStack"
// (two IP families on dual-stack configured clusters, otherwise fail). The
// ipFamilies and clusterIPs fields depend on the value of this field. This
// field will be wiped when updating a service to type ExternalName.
func (o AgentSpecHttpServiceSpecOutput) IpFamilyPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *string { return v.IpFamilyPolicy }).(pulumi.StringPtrOutput)
}

// loadBalancerClass is the class of the load balancer implementation this Service belongs to.
// If specified, the value of this field must be a label-style identifier, with an optional prefix,
// e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
// This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
// balancer implementation is used, today this is typically done through the cloud provider integration,
// but should apply for any default implementation. If set, it is assumed that a load balancer
// implementation is watching for Services with a matching class. Any default load balancer
// implementation (e.g. cloud providers) should ignore Services that set this field.
// This field can only be set when creating or updating a Service to type 'LoadBalancer'.
// Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
func (o AgentSpecHttpServiceSpecOutput) LoadBalancerClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *string { return v.LoadBalancerClass }).(pulumi.StringPtrOutput)
}

// Only applies to Service Type: LoadBalancer.
// This feature depends on whether the underlying cloud-provider supports specifying
// the loadBalancerIP when a load balancer is created.
// This field will be ignored if the cloud-provider does not support the feature.
// Deprecated: This field was under-specified and its meaning varies across implementations.
// Using it is non-portable and it may not support dual-stack.
// Users are encouraged to use implementation-specific annotations when available.
func (o AgentSpecHttpServiceSpecOutput) LoadBalancerIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *string { return v.LoadBalancerIP }).(pulumi.StringPtrOutput)
}

// If specified and supported by the platform, this will restrict traffic through the cloud-provider
// load-balancer will be restricted to the specified client IPs. This field will be ignored if the
// cloud-provider does not support the feature."
// More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
func (o AgentSpecHttpServiceSpecOutput) LoadBalancerSourceRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) []string { return v.LoadBalancerSourceRanges }).(pulumi.StringArrayOutput)
}

// The list of ports that are exposed by this service.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecOutput) Ports() AgentSpecHttpServiceSpecPortsArrayOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) []AgentSpecHttpServiceSpecPorts { return v.Ports }).(AgentSpecHttpServiceSpecPortsArrayOutput)
}

// publishNotReadyAddresses indicates that any agent which deals with endpoints for this
// Service should disregard any indications of ready/not-ready.
// The primary use case for setting this field is for a StatefulSet's Headless Service to
// propagate SRV DNS records for its Pods for the purpose of peer discovery.
// The Kubernetes controllers that generate Endpoints and EndpointSlice resources for
// Services interpret this to mean that all endpoints are considered "ready" even if the
// Pods themselves are not. Agents which consume only Kubernetes generated endpoints
// through the Endpoints or EndpointSlice resources can safely assume this behavior.
func (o AgentSpecHttpServiceSpecOutput) PublishNotReadyAddresses() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *bool { return v.PublishNotReadyAddresses }).(pulumi.BoolPtrOutput)
}

// Route service traffic to pods with label keys and values matching this
// selector. If empty or not present, the service is assumed to have an
// external process managing its endpoints, which Kubernetes will not
// modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
// Ignored if type is ExternalName.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/
func (o AgentSpecHttpServiceSpecOutput) Selector() pulumi.StringMapOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) map[string]string { return v.Selector }).(pulumi.StringMapOutput)
}

// Supports "ClientIP" and "None". Used to maintain session affinity.
// Enable client IP based session affinity.
// Must be ClientIP or None.
// Defaults to None.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecOutput) SessionAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *string { return v.SessionAffinity }).(pulumi.StringPtrOutput)
}

func (o AgentSpecHttpServiceSpecOutput) SessionAffinityConfig() AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *AgentSpecHttpServiceSpecSessionAffinityConfig {
		return v.SessionAffinityConfig
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput)
}

// TrafficDistribution offers a way to express preferences for how traffic is
// distributed to Service endpoints. Implementations can use this field as a
// hint, but are not required to guarantee strict adherence. If the field is
// not set, the implementation will apply its default routing strategy. If set
// to "PreferClose", implementations should prioritize endpoints that are
// topologically close (e.g., same zone).
// This is an alpha field and requires enabling ServiceTrafficDistribution feature.
func (o AgentSpecHttpServiceSpecOutput) TrafficDistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *string { return v.TrafficDistribution }).(pulumi.StringPtrOutput)
}

// type determines how the Service is exposed. Defaults to ClusterIP. Valid
// options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
// "ClusterIP" allocates a cluster-internal IP address for load-balancing
// to endpoints. Endpoints are determined by the selector or if that is not
// specified, by manual construction of an Endpoints object or
// EndpointSlice objects. If clusterIP is "None", no virtual IP is
// allocated and the endpoints are published as a set of endpoints rather
// than a virtual IP.
// "NodePort" builds on ClusterIP and allocates a port on every node which
// routes to the same endpoints as the clusterIP.
// "LoadBalancer" builds on NodePort and creates an external load-balancer
// (if supported in the current cloud) which routes to the same endpoints
// as the clusterIP.
// "ExternalName" aliases this service to the specified externalName.
// Several other fields do not apply to ExternalName services.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
func (o AgentSpecHttpServiceSpecOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AgentSpecHttpServiceSpecPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceSpec)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecPtrOutput) ToAgentSpecHttpServiceSpecPtrOutput() AgentSpecHttpServiceSpecPtrOutput {
	return o
}

func (o AgentSpecHttpServiceSpecPtrOutput) ToAgentSpecHttpServiceSpecPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPtrOutput {
	return o
}

func (o AgentSpecHttpServiceSpecPtrOutput) Elem() AgentSpecHttpServiceSpecOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) AgentSpecHttpServiceSpec {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpServiceSpec
		return ret
	}).(AgentSpecHttpServiceSpecOutput)
}

// allocateLoadBalancerNodePorts defines if NodePorts will be automatically
// allocated for services with type LoadBalancer.  Default is "true". It
// may be set to "false" if the cluster load-balancer does not rely on
// NodePorts.  If the caller requests specific NodePorts (by specifying a
// value), those requests will be respected, regardless of this field.
// This field may only be set for services with type LoadBalancer and will
// be cleared if the type is changed to any other type.
func (o AgentSpecHttpServiceSpecPtrOutput) AllocateLoadBalancerNodePorts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *bool {
		if v == nil {
			return nil
		}
		return v.AllocateLoadBalancerNodePorts
	}).(pulumi.BoolPtrOutput)
}

// clusterIP is the IP address of the service and is usually assigned
// randomly. If an address is specified manually, is in-range (as per
// system configuration), and is not in use, it will be allocated to the
// service; otherwise creation of the service will fail. This field may not
// be changed through updates unless the type field is also being changed
// to ExternalName (which requires this field to be blank) or the type
// field is being changed from ExternalName (in which case this field may
// optionally be specified, as describe above).  Valid values are "None",
// empty string (""), or a valid IP address. Setting this to "None" makes a
// "headless service" (no virtual IP), which is useful when direct endpoint
// connections are preferred and proxying is not required.  Only applies to
// types ClusterIP, NodePort, and LoadBalancer. If this field is specified
// when creating a Service of type ExternalName, creation will fail. This
// field will be wiped when updating a Service to type ExternalName.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecPtrOutput) ClusterIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.ClusterIP
	}).(pulumi.StringPtrOutput)
}

// ClusterIPs is a list of IP addresses assigned to this service, and are
// usually assigned randomly.  If an address is specified manually, is
// in-range (as per system configuration), and is not in use, it will be
// allocated to the service; otherwise creation of the service will fail.
// This field may not be changed through updates unless the type field is
// also being changed to ExternalName (which requires this field to be
// empty) or the type field is being changed from ExternalName (in which
// case this field may optionally be specified, as describe above).  Valid
// values are "None", empty string (""), or a valid IP address.  Setting
// this to "None" makes a "headless service" (no virtual IP), which is
// useful when direct endpoint connections are preferred and proxying is
// not required.  Only applies to types ClusterIP, NodePort, and
// LoadBalancer. If this field is specified when creating a Service of type
// ExternalName, creation will fail. This field will be wiped when updating
// a Service to type ExternalName.  If this field is not specified, it will
// be initialized from the clusterIP field.  If this field is specified,
// clients must ensure that clusterIPs[0] and clusterIP have the same
// value.
//
// This field may hold a maximum of two entries (dual-stack IPs, in either order).
// These IPs must correspond to the values of the ipFamilies field. Both
// clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecPtrOutput) ClusterIPs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) []string {
		if v == nil {
			return nil
		}
		return v.ClusterIPs
	}).(pulumi.StringArrayOutput)
}

// externalIPs is a list of IP addresses for which nodes in the cluster
// will also accept traffic for this service.  These IPs are not managed by
// Kubernetes.  The user is responsible for ensuring that traffic arrives
// at a node with this IP.  A common example is external load-balancers
// that are not part of the Kubernetes system.
func (o AgentSpecHttpServiceSpecPtrOutput) ExternalIPs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) []string {
		if v == nil {
			return nil
		}
		return v.ExternalIPs
	}).(pulumi.StringArrayOutput)
}

// externalName is the external reference that discovery mechanisms will
// return as an alias for this service (e.g. a DNS CNAME record). No
// proxying will be involved.  Must be a lowercase RFC-1123 hostname
// (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
func (o AgentSpecHttpServiceSpecPtrOutput) ExternalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.ExternalName
	}).(pulumi.StringPtrOutput)
}

// externalTrafficPolicy describes how nodes distribute service traffic they
// receive on one of the Service's "externally-facing" addresses (NodePorts,
// ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure
// the service in a way that assumes that external load balancers will take care
// of balancing the service traffic between nodes, and so each node will deliver
// traffic only to the node-local endpoints of the service, without masquerading
// the client source IP. (Traffic mistakenly sent to a node with no endpoints will
// be dropped.) The default value, "Cluster", uses the standard behavior of
// routing to all endpoints evenly (possibly modified by topology and other
// features). Note that traffic sent to an External IP or LoadBalancer IP from
// within the cluster will always get "Cluster" semantics, but clients sending to
// a NodePort from within the cluster may need to take traffic policy into account
// when picking a node.
func (o AgentSpecHttpServiceSpecPtrOutput) ExternalTrafficPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.ExternalTrafficPolicy
	}).(pulumi.StringPtrOutput)
}

// healthCheckNodePort specifies the healthcheck nodePort for the service.
// This only applies when type is set to LoadBalancer and
// externalTrafficPolicy is set to Local. If a value is specified, is
// in-range, and is not in use, it will be used.  If not specified, a value
// will be automatically allocated.  External systems (e.g. load-balancers)
// can use this port to determine if a given node holds endpoints for this
// service or not.  If this field is specified when creating a Service
// which does not need it, creation will fail. This field will be wiped
// when updating a Service to no longer need it (e.g. changing type).
// This field cannot be updated once set.
func (o AgentSpecHttpServiceSpecPtrOutput) HealthCheckNodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *int {
		if v == nil {
			return nil
		}
		return v.HealthCheckNodePort
	}).(pulumi.IntPtrOutput)
}

// InternalTrafficPolicy describes how nodes distribute service traffic they
// receive on the ClusterIP. If set to "Local", the proxy will assume that pods
// only want to talk to endpoints of the service on the same node as the pod,
// dropping the traffic if there are no local endpoints. The default value,
// "Cluster", uses the standard behavior of routing to all endpoints evenly
// (possibly modified by topology and other features).
func (o AgentSpecHttpServiceSpecPtrOutput) InternalTrafficPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.InternalTrafficPolicy
	}).(pulumi.StringPtrOutput)
}

// IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this
// service. This field is usually assigned automatically based on cluster
// configuration and the ipFamilyPolicy field. If this field is specified
// manually, the requested family is available in the cluster,
// and ipFamilyPolicy allows it, it will be used; otherwise creation of
// the service will fail. This field is conditionally mutable: it allows
// for adding or removing a secondary IP family, but it does not allow
// changing the primary IP family of the Service. Valid values are "IPv4"
// and "IPv6".  This field only applies to Services of types ClusterIP,
// NodePort, and LoadBalancer, and does apply to "headless" services.
// This field will be wiped when updating a Service to type ExternalName.
//
// This field may hold a maximum of two entries (dual-stack families, in
// either order).  These families must correspond to the values of the
// clusterIPs field, if specified. Both clusterIPs and ipFamilies are
// governed by the ipFamilyPolicy field.
func (o AgentSpecHttpServiceSpecPtrOutput) IpFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) []string {
		if v == nil {
			return nil
		}
		return v.IpFamilies
	}).(pulumi.StringArrayOutput)
}

// IPFamilyPolicy represents the dual-stack-ness requested or required by
// this Service. If there is no value provided, then this field will be set
// to SingleStack. Services can be "SingleStack" (a single IP family),
// "PreferDualStack" (two IP families on dual-stack configured clusters or
// a single IP family on single-stack clusters), or "RequireDualStack"
// (two IP families on dual-stack configured clusters, otherwise fail). The
// ipFamilies and clusterIPs fields depend on the value of this field. This
// field will be wiped when updating a service to type ExternalName.
func (o AgentSpecHttpServiceSpecPtrOutput) IpFamilyPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.IpFamilyPolicy
	}).(pulumi.StringPtrOutput)
}

// loadBalancerClass is the class of the load balancer implementation this Service belongs to.
// If specified, the value of this field must be a label-style identifier, with an optional prefix,
// e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
// This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
// balancer implementation is used, today this is typically done through the cloud provider integration,
// but should apply for any default implementation. If set, it is assumed that a load balancer
// implementation is watching for Services with a matching class. Any default load balancer
// implementation (e.g. cloud providers) should ignore Services that set this field.
// This field can only be set when creating or updating a Service to type 'LoadBalancer'.
// Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
func (o AgentSpecHttpServiceSpecPtrOutput) LoadBalancerClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerClass
	}).(pulumi.StringPtrOutput)
}

// Only applies to Service Type: LoadBalancer.
// This feature depends on whether the underlying cloud-provider supports specifying
// the loadBalancerIP when a load balancer is created.
// This field will be ignored if the cloud-provider does not support the feature.
// Deprecated: This field was under-specified and its meaning varies across implementations.
// Using it is non-portable and it may not support dual-stack.
// Users are encouraged to use implementation-specific annotations when available.
func (o AgentSpecHttpServiceSpecPtrOutput) LoadBalancerIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerIP
	}).(pulumi.StringPtrOutput)
}

// If specified and supported by the platform, this will restrict traffic through the cloud-provider
// load-balancer will be restricted to the specified client IPs. This field will be ignored if the
// cloud-provider does not support the feature."
// More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
func (o AgentSpecHttpServiceSpecPtrOutput) LoadBalancerSourceRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) []string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerSourceRanges
	}).(pulumi.StringArrayOutput)
}

// The list of ports that are exposed by this service.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecPtrOutput) Ports() AgentSpecHttpServiceSpecPortsArrayOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) []AgentSpecHttpServiceSpecPorts {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(AgentSpecHttpServiceSpecPortsArrayOutput)
}

// publishNotReadyAddresses indicates that any agent which deals with endpoints for this
// Service should disregard any indications of ready/not-ready.
// The primary use case for setting this field is for a StatefulSet's Headless Service to
// propagate SRV DNS records for its Pods for the purpose of peer discovery.
// The Kubernetes controllers that generate Endpoints and EndpointSlice resources for
// Services interpret this to mean that all endpoints are considered "ready" even if the
// Pods themselves are not. Agents which consume only Kubernetes generated endpoints
// through the Endpoints or EndpointSlice resources can safely assume this behavior.
func (o AgentSpecHttpServiceSpecPtrOutput) PublishNotReadyAddresses() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *bool {
		if v == nil {
			return nil
		}
		return v.PublishNotReadyAddresses
	}).(pulumi.BoolPtrOutput)
}

// Route service traffic to pods with label keys and values matching this
// selector. If empty or not present, the service is assumed to have an
// external process managing its endpoints, which Kubernetes will not
// modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
// Ignored if type is ExternalName.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/
func (o AgentSpecHttpServiceSpecPtrOutput) Selector() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) map[string]string {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(pulumi.StringMapOutput)
}

// Supports "ClientIP" and "None". Used to maintain session affinity.
// Enable client IP based session affinity.
// Must be ClientIP or None.
// Defaults to None.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecPtrOutput) SessionAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.SessionAffinity
	}).(pulumi.StringPtrOutput)
}

func (o AgentSpecHttpServiceSpecPtrOutput) SessionAffinityConfig() AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *AgentSpecHttpServiceSpecSessionAffinityConfig {
		if v == nil {
			return nil
		}
		return v.SessionAffinityConfig
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput)
}

// TrafficDistribution offers a way to express preferences for how traffic is
// distributed to Service endpoints. Implementations can use this field as a
// hint, but are not required to guarantee strict adherence. If the field is
// not set, the implementation will apply its default routing strategy. If set
// to "PreferClose", implementations should prioritize endpoints that are
// topologically close (e.g., same zone).
// This is an alpha field and requires enabling ServiceTrafficDistribution feature.
func (o AgentSpecHttpServiceSpecPtrOutput) TrafficDistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.TrafficDistribution
	}).(pulumi.StringPtrOutput)
}

// type determines how the Service is exposed. Defaults to ClusterIP. Valid
// options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
// "ClusterIP" allocates a cluster-internal IP address for load-balancing
// to endpoints. Endpoints are determined by the selector or if that is not
// specified, by manual construction of an Endpoints object or
// EndpointSlice objects. If clusterIP is "None", no virtual IP is
// allocated and the endpoints are published as a set of endpoints rather
// than a virtual IP.
// "NodePort" builds on ClusterIP and allocates a port on every node which
// routes to the same endpoints as the clusterIP.
// "LoadBalancer" builds on NodePort and creates an external load-balancer
// (if supported in the current cloud) which routes to the same endpoints
// as the clusterIP.
// "ExternalName" aliases this service to the specified externalName.
// Several other fields do not apply to ExternalName services.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
func (o AgentSpecHttpServiceSpecPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Spec is the specification of the service.
type AgentSpecHttpServiceSpecPatch struct {
	// allocateLoadBalancerNodePorts defines if NodePorts will be automatically
	// allocated for services with type LoadBalancer.  Default is "true". It
	// may be set to "false" if the cluster load-balancer does not rely on
	// NodePorts.  If the caller requests specific NodePorts (by specifying a
	// value), those requests will be respected, regardless of this field.
	// This field may only be set for services with type LoadBalancer and will
	// be cleared if the type is changed to any other type.
	AllocateLoadBalancerNodePorts *bool `pulumi:"allocateLoadBalancerNodePorts"`
	// clusterIP is the IP address of the service and is usually assigned
	// randomly. If an address is specified manually, is in-range (as per
	// system configuration), and is not in use, it will be allocated to the
	// service; otherwise creation of the service will fail. This field may not
	// be changed through updates unless the type field is also being changed
	// to ExternalName (which requires this field to be blank) or the type
	// field is being changed from ExternalName (in which case this field may
	// optionally be specified, as describe above).  Valid values are "None",
	// empty string (""), or a valid IP address. Setting this to "None" makes a
	// "headless service" (no virtual IP), which is useful when direct endpoint
	// connections are preferred and proxying is not required.  Only applies to
	// types ClusterIP, NodePort, and LoadBalancer. If this field is specified
	// when creating a Service of type ExternalName, creation will fail. This
	// field will be wiped when updating a Service to type ExternalName.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	ClusterIP *string `pulumi:"clusterIP"`
	// ClusterIPs is a list of IP addresses assigned to this service, and are
	// usually assigned randomly.  If an address is specified manually, is
	// in-range (as per system configuration), and is not in use, it will be
	// allocated to the service; otherwise creation of the service will fail.
	// This field may not be changed through updates unless the type field is
	// also being changed to ExternalName (which requires this field to be
	// empty) or the type field is being changed from ExternalName (in which
	// case this field may optionally be specified, as describe above).  Valid
	// values are "None", empty string (""), or a valid IP address.  Setting
	// this to "None" makes a "headless service" (no virtual IP), which is
	// useful when direct endpoint connections are preferred and proxying is
	// not required.  Only applies to types ClusterIP, NodePort, and
	// LoadBalancer. If this field is specified when creating a Service of type
	// ExternalName, creation will fail. This field will be wiped when updating
	// a Service to type ExternalName.  If this field is not specified, it will
	// be initialized from the clusterIP field.  If this field is specified,
	// clients must ensure that clusterIPs[0] and clusterIP have the same
	// value.
	//
	// This field may hold a maximum of two entries (dual-stack IPs, in either order).
	// These IPs must correspond to the values of the ipFamilies field. Both
	// clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	ClusterIPs []string `pulumi:"clusterIPs"`
	// externalIPs is a list of IP addresses for which nodes in the cluster
	// will also accept traffic for this service.  These IPs are not managed by
	// Kubernetes.  The user is responsible for ensuring that traffic arrives
	// at a node with this IP.  A common example is external load-balancers
	// that are not part of the Kubernetes system.
	ExternalIPs []string `pulumi:"externalIPs"`
	// externalName is the external reference that discovery mechanisms will
	// return as an alias for this service (e.g. a DNS CNAME record). No
	// proxying will be involved.  Must be a lowercase RFC-1123 hostname
	// (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
	ExternalName *string `pulumi:"externalName"`
	// externalTrafficPolicy describes how nodes distribute service traffic they
	// receive on one of the Service's "externally-facing" addresses (NodePorts,
	// ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure
	// the service in a way that assumes that external load balancers will take care
	// of balancing the service traffic between nodes, and so each node will deliver
	// traffic only to the node-local endpoints of the service, without masquerading
	// the client source IP. (Traffic mistakenly sent to a node with no endpoints will
	// be dropped.) The default value, "Cluster", uses the standard behavior of
	// routing to all endpoints evenly (possibly modified by topology and other
	// features). Note that traffic sent to an External IP or LoadBalancer IP from
	// within the cluster will always get "Cluster" semantics, but clients sending to
	// a NodePort from within the cluster may need to take traffic policy into account
	// when picking a node.
	ExternalTrafficPolicy *string `pulumi:"externalTrafficPolicy"`
	// healthCheckNodePort specifies the healthcheck nodePort for the service.
	// This only applies when type is set to LoadBalancer and
	// externalTrafficPolicy is set to Local. If a value is specified, is
	// in-range, and is not in use, it will be used.  If not specified, a value
	// will be automatically allocated.  External systems (e.g. load-balancers)
	// can use this port to determine if a given node holds endpoints for this
	// service or not.  If this field is specified when creating a Service
	// which does not need it, creation will fail. This field will be wiped
	// when updating a Service to no longer need it (e.g. changing type).
	// This field cannot be updated once set.
	HealthCheckNodePort *int `pulumi:"healthCheckNodePort"`
	// InternalTrafficPolicy describes how nodes distribute service traffic they
	// receive on the ClusterIP. If set to "Local", the proxy will assume that pods
	// only want to talk to endpoints of the service on the same node as the pod,
	// dropping the traffic if there are no local endpoints. The default value,
	// "Cluster", uses the standard behavior of routing to all endpoints evenly
	// (possibly modified by topology and other features).
	InternalTrafficPolicy *string `pulumi:"internalTrafficPolicy"`
	// IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this
	// service. This field is usually assigned automatically based on cluster
	// configuration and the ipFamilyPolicy field. If this field is specified
	// manually, the requested family is available in the cluster,
	// and ipFamilyPolicy allows it, it will be used; otherwise creation of
	// the service will fail. This field is conditionally mutable: it allows
	// for adding or removing a secondary IP family, but it does not allow
	// changing the primary IP family of the Service. Valid values are "IPv4"
	// and "IPv6".  This field only applies to Services of types ClusterIP,
	// NodePort, and LoadBalancer, and does apply to "headless" services.
	// This field will be wiped when updating a Service to type ExternalName.
	//
	// This field may hold a maximum of two entries (dual-stack families, in
	// either order).  These families must correspond to the values of the
	// clusterIPs field, if specified. Both clusterIPs and ipFamilies are
	// governed by the ipFamilyPolicy field.
	IpFamilies []string `pulumi:"ipFamilies"`
	// IPFamilyPolicy represents the dual-stack-ness requested or required by
	// this Service. If there is no value provided, then this field will be set
	// to SingleStack. Services can be "SingleStack" (a single IP family),
	// "PreferDualStack" (two IP families on dual-stack configured clusters or
	// a single IP family on single-stack clusters), or "RequireDualStack"
	// (two IP families on dual-stack configured clusters, otherwise fail). The
	// ipFamilies and clusterIPs fields depend on the value of this field. This
	// field will be wiped when updating a service to type ExternalName.
	IpFamilyPolicy *string `pulumi:"ipFamilyPolicy"`
	// loadBalancerClass is the class of the load balancer implementation this Service belongs to.
	// If specified, the value of this field must be a label-style identifier, with an optional prefix,
	// e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
	// This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
	// balancer implementation is used, today this is typically done through the cloud provider integration,
	// but should apply for any default implementation. If set, it is assumed that a load balancer
	// implementation is watching for Services with a matching class. Any default load balancer
	// implementation (e.g. cloud providers) should ignore Services that set this field.
	// This field can only be set when creating or updating a Service to type 'LoadBalancer'.
	// Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
	LoadBalancerClass *string `pulumi:"loadBalancerClass"`
	// Only applies to Service Type: LoadBalancer.
	// This feature depends on whether the underlying cloud-provider supports specifying
	// the loadBalancerIP when a load balancer is created.
	// This field will be ignored if the cloud-provider does not support the feature.
	// Deprecated: This field was under-specified and its meaning varies across implementations.
	// Using it is non-portable and it may not support dual-stack.
	// Users are encouraged to use implementation-specific annotations when available.
	LoadBalancerIP *string `pulumi:"loadBalancerIP"`
	// If specified and supported by the platform, this will restrict traffic through the cloud-provider
	// load-balancer will be restricted to the specified client IPs. This field will be ignored if the
	// cloud-provider does not support the feature."
	// More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
	LoadBalancerSourceRanges []string `pulumi:"loadBalancerSourceRanges"`
	// The list of ports that are exposed by this service.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	Ports []AgentSpecHttpServiceSpecPortsPatch `pulumi:"ports"`
	// publishNotReadyAddresses indicates that any agent which deals with endpoints for this
	// Service should disregard any indications of ready/not-ready.
	// The primary use case for setting this field is for a StatefulSet's Headless Service to
	// propagate SRV DNS records for its Pods for the purpose of peer discovery.
	// The Kubernetes controllers that generate Endpoints and EndpointSlice resources for
	// Services interpret this to mean that all endpoints are considered "ready" even if the
	// Pods themselves are not. Agents which consume only Kubernetes generated endpoints
	// through the Endpoints or EndpointSlice resources can safely assume this behavior.
	PublishNotReadyAddresses *bool `pulumi:"publishNotReadyAddresses"`
	// Route service traffic to pods with label keys and values matching this
	// selector. If empty or not present, the service is assumed to have an
	// external process managing its endpoints, which Kubernetes will not
	// modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
	// Ignored if type is ExternalName.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/
	Selector map[string]string `pulumi:"selector"`
	// Supports "ClientIP" and "None". Used to maintain session affinity.
	// Enable client IP based session affinity.
	// Must be ClientIP or None.
	// Defaults to None.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	SessionAffinity       *string                                             `pulumi:"sessionAffinity"`
	SessionAffinityConfig *AgentSpecHttpServiceSpecSessionAffinityConfigPatch `pulumi:"sessionAffinityConfig"`
	// TrafficDistribution offers a way to express preferences for how traffic is
	// distributed to Service endpoints. Implementations can use this field as a
	// hint, but are not required to guarantee strict adherence. If the field is
	// not set, the implementation will apply its default routing strategy. If set
	// to "PreferClose", implementations should prioritize endpoints that are
	// topologically close (e.g., same zone).
	// This is an alpha field and requires enabling ServiceTrafficDistribution feature.
	TrafficDistribution *string `pulumi:"trafficDistribution"`
	// type determines how the Service is exposed. Defaults to ClusterIP. Valid
	// options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
	// "ClusterIP" allocates a cluster-internal IP address for load-balancing
	// to endpoints. Endpoints are determined by the selector or if that is not
	// specified, by manual construction of an Endpoints object or
	// EndpointSlice objects. If clusterIP is "None", no virtual IP is
	// allocated and the endpoints are published as a set of endpoints rather
	// than a virtual IP.
	// "NodePort" builds on ClusterIP and allocates a port on every node which
	// routes to the same endpoints as the clusterIP.
	// "LoadBalancer" builds on NodePort and creates an external load-balancer
	// (if supported in the current cloud) which routes to the same endpoints
	// as the clusterIP.
	// "ExternalName" aliases this service to the specified externalName.
	// Several other fields do not apply to ExternalName services.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
	Type *string `pulumi:"type"`
}

// AgentSpecHttpServiceSpecPatchInput is an input type that accepts AgentSpecHttpServiceSpecPatchArgs and AgentSpecHttpServiceSpecPatchOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecPatchInput` via:
//
//	AgentSpecHttpServiceSpecPatchArgs{...}
type AgentSpecHttpServiceSpecPatchInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecPatchOutput() AgentSpecHttpServiceSpecPatchOutput
	ToAgentSpecHttpServiceSpecPatchOutputWithContext(context.Context) AgentSpecHttpServiceSpecPatchOutput
}

// Spec is the specification of the service.
type AgentSpecHttpServiceSpecPatchArgs struct {
	// allocateLoadBalancerNodePorts defines if NodePorts will be automatically
	// allocated for services with type LoadBalancer.  Default is "true". It
	// may be set to "false" if the cluster load-balancer does not rely on
	// NodePorts.  If the caller requests specific NodePorts (by specifying a
	// value), those requests will be respected, regardless of this field.
	// This field may only be set for services with type LoadBalancer and will
	// be cleared if the type is changed to any other type.
	AllocateLoadBalancerNodePorts pulumi.BoolPtrInput `pulumi:"allocateLoadBalancerNodePorts"`
	// clusterIP is the IP address of the service and is usually assigned
	// randomly. If an address is specified manually, is in-range (as per
	// system configuration), and is not in use, it will be allocated to the
	// service; otherwise creation of the service will fail. This field may not
	// be changed through updates unless the type field is also being changed
	// to ExternalName (which requires this field to be blank) or the type
	// field is being changed from ExternalName (in which case this field may
	// optionally be specified, as describe above).  Valid values are "None",
	// empty string (""), or a valid IP address. Setting this to "None" makes a
	// "headless service" (no virtual IP), which is useful when direct endpoint
	// connections are preferred and proxying is not required.  Only applies to
	// types ClusterIP, NodePort, and LoadBalancer. If this field is specified
	// when creating a Service of type ExternalName, creation will fail. This
	// field will be wiped when updating a Service to type ExternalName.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	ClusterIP pulumi.StringPtrInput `pulumi:"clusterIP"`
	// ClusterIPs is a list of IP addresses assigned to this service, and are
	// usually assigned randomly.  If an address is specified manually, is
	// in-range (as per system configuration), and is not in use, it will be
	// allocated to the service; otherwise creation of the service will fail.
	// This field may not be changed through updates unless the type field is
	// also being changed to ExternalName (which requires this field to be
	// empty) or the type field is being changed from ExternalName (in which
	// case this field may optionally be specified, as describe above).  Valid
	// values are "None", empty string (""), or a valid IP address.  Setting
	// this to "None" makes a "headless service" (no virtual IP), which is
	// useful when direct endpoint connections are preferred and proxying is
	// not required.  Only applies to types ClusterIP, NodePort, and
	// LoadBalancer. If this field is specified when creating a Service of type
	// ExternalName, creation will fail. This field will be wiped when updating
	// a Service to type ExternalName.  If this field is not specified, it will
	// be initialized from the clusterIP field.  If this field is specified,
	// clients must ensure that clusterIPs[0] and clusterIP have the same
	// value.
	//
	// This field may hold a maximum of two entries (dual-stack IPs, in either order).
	// These IPs must correspond to the values of the ipFamilies field. Both
	// clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	ClusterIPs pulumi.StringArrayInput `pulumi:"clusterIPs"`
	// externalIPs is a list of IP addresses for which nodes in the cluster
	// will also accept traffic for this service.  These IPs are not managed by
	// Kubernetes.  The user is responsible for ensuring that traffic arrives
	// at a node with this IP.  A common example is external load-balancers
	// that are not part of the Kubernetes system.
	ExternalIPs pulumi.StringArrayInput `pulumi:"externalIPs"`
	// externalName is the external reference that discovery mechanisms will
	// return as an alias for this service (e.g. a DNS CNAME record). No
	// proxying will be involved.  Must be a lowercase RFC-1123 hostname
	// (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
	ExternalName pulumi.StringPtrInput `pulumi:"externalName"`
	// externalTrafficPolicy describes how nodes distribute service traffic they
	// receive on one of the Service's "externally-facing" addresses (NodePorts,
	// ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure
	// the service in a way that assumes that external load balancers will take care
	// of balancing the service traffic between nodes, and so each node will deliver
	// traffic only to the node-local endpoints of the service, without masquerading
	// the client source IP. (Traffic mistakenly sent to a node with no endpoints will
	// be dropped.) The default value, "Cluster", uses the standard behavior of
	// routing to all endpoints evenly (possibly modified by topology and other
	// features). Note that traffic sent to an External IP or LoadBalancer IP from
	// within the cluster will always get "Cluster" semantics, but clients sending to
	// a NodePort from within the cluster may need to take traffic policy into account
	// when picking a node.
	ExternalTrafficPolicy pulumi.StringPtrInput `pulumi:"externalTrafficPolicy"`
	// healthCheckNodePort specifies the healthcheck nodePort for the service.
	// This only applies when type is set to LoadBalancer and
	// externalTrafficPolicy is set to Local. If a value is specified, is
	// in-range, and is not in use, it will be used.  If not specified, a value
	// will be automatically allocated.  External systems (e.g. load-balancers)
	// can use this port to determine if a given node holds endpoints for this
	// service or not.  If this field is specified when creating a Service
	// which does not need it, creation will fail. This field will be wiped
	// when updating a Service to no longer need it (e.g. changing type).
	// This field cannot be updated once set.
	HealthCheckNodePort pulumi.IntPtrInput `pulumi:"healthCheckNodePort"`
	// InternalTrafficPolicy describes how nodes distribute service traffic they
	// receive on the ClusterIP. If set to "Local", the proxy will assume that pods
	// only want to talk to endpoints of the service on the same node as the pod,
	// dropping the traffic if there are no local endpoints. The default value,
	// "Cluster", uses the standard behavior of routing to all endpoints evenly
	// (possibly modified by topology and other features).
	InternalTrafficPolicy pulumi.StringPtrInput `pulumi:"internalTrafficPolicy"`
	// IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this
	// service. This field is usually assigned automatically based on cluster
	// configuration and the ipFamilyPolicy field. If this field is specified
	// manually, the requested family is available in the cluster,
	// and ipFamilyPolicy allows it, it will be used; otherwise creation of
	// the service will fail. This field is conditionally mutable: it allows
	// for adding or removing a secondary IP family, but it does not allow
	// changing the primary IP family of the Service. Valid values are "IPv4"
	// and "IPv6".  This field only applies to Services of types ClusterIP,
	// NodePort, and LoadBalancer, and does apply to "headless" services.
	// This field will be wiped when updating a Service to type ExternalName.
	//
	// This field may hold a maximum of two entries (dual-stack families, in
	// either order).  These families must correspond to the values of the
	// clusterIPs field, if specified. Both clusterIPs and ipFamilies are
	// governed by the ipFamilyPolicy field.
	IpFamilies pulumi.StringArrayInput `pulumi:"ipFamilies"`
	// IPFamilyPolicy represents the dual-stack-ness requested or required by
	// this Service. If there is no value provided, then this field will be set
	// to SingleStack. Services can be "SingleStack" (a single IP family),
	// "PreferDualStack" (two IP families on dual-stack configured clusters or
	// a single IP family on single-stack clusters), or "RequireDualStack"
	// (two IP families on dual-stack configured clusters, otherwise fail). The
	// ipFamilies and clusterIPs fields depend on the value of this field. This
	// field will be wiped when updating a service to type ExternalName.
	IpFamilyPolicy pulumi.StringPtrInput `pulumi:"ipFamilyPolicy"`
	// loadBalancerClass is the class of the load balancer implementation this Service belongs to.
	// If specified, the value of this field must be a label-style identifier, with an optional prefix,
	// e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
	// This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
	// balancer implementation is used, today this is typically done through the cloud provider integration,
	// but should apply for any default implementation. If set, it is assumed that a load balancer
	// implementation is watching for Services with a matching class. Any default load balancer
	// implementation (e.g. cloud providers) should ignore Services that set this field.
	// This field can only be set when creating or updating a Service to type 'LoadBalancer'.
	// Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
	LoadBalancerClass pulumi.StringPtrInput `pulumi:"loadBalancerClass"`
	// Only applies to Service Type: LoadBalancer.
	// This feature depends on whether the underlying cloud-provider supports specifying
	// the loadBalancerIP when a load balancer is created.
	// This field will be ignored if the cloud-provider does not support the feature.
	// Deprecated: This field was under-specified and its meaning varies across implementations.
	// Using it is non-portable and it may not support dual-stack.
	// Users are encouraged to use implementation-specific annotations when available.
	LoadBalancerIP pulumi.StringPtrInput `pulumi:"loadBalancerIP"`
	// If specified and supported by the platform, this will restrict traffic through the cloud-provider
	// load-balancer will be restricted to the specified client IPs. This field will be ignored if the
	// cloud-provider does not support the feature."
	// More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
	LoadBalancerSourceRanges pulumi.StringArrayInput `pulumi:"loadBalancerSourceRanges"`
	// The list of ports that are exposed by this service.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	Ports AgentSpecHttpServiceSpecPortsPatchArrayInput `pulumi:"ports"`
	// publishNotReadyAddresses indicates that any agent which deals with endpoints for this
	// Service should disregard any indications of ready/not-ready.
	// The primary use case for setting this field is for a StatefulSet's Headless Service to
	// propagate SRV DNS records for its Pods for the purpose of peer discovery.
	// The Kubernetes controllers that generate Endpoints and EndpointSlice resources for
	// Services interpret this to mean that all endpoints are considered "ready" even if the
	// Pods themselves are not. Agents which consume only Kubernetes generated endpoints
	// through the Endpoints or EndpointSlice resources can safely assume this behavior.
	PublishNotReadyAddresses pulumi.BoolPtrInput `pulumi:"publishNotReadyAddresses"`
	// Route service traffic to pods with label keys and values matching this
	// selector. If empty or not present, the service is assumed to have an
	// external process managing its endpoints, which Kubernetes will not
	// modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
	// Ignored if type is ExternalName.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/
	Selector pulumi.StringMapInput `pulumi:"selector"`
	// Supports "ClientIP" and "None". Used to maintain session affinity.
	// Enable client IP based session affinity.
	// Must be ClientIP or None.
	// Defaults to None.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	SessionAffinity       pulumi.StringPtrInput                                      `pulumi:"sessionAffinity"`
	SessionAffinityConfig AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrInput `pulumi:"sessionAffinityConfig"`
	// TrafficDistribution offers a way to express preferences for how traffic is
	// distributed to Service endpoints. Implementations can use this field as a
	// hint, but are not required to guarantee strict adherence. If the field is
	// not set, the implementation will apply its default routing strategy. If set
	// to "PreferClose", implementations should prioritize endpoints that are
	// topologically close (e.g., same zone).
	// This is an alpha field and requires enabling ServiceTrafficDistribution feature.
	TrafficDistribution pulumi.StringPtrInput `pulumi:"trafficDistribution"`
	// type determines how the Service is exposed. Defaults to ClusterIP. Valid
	// options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
	// "ClusterIP" allocates a cluster-internal IP address for load-balancing
	// to endpoints. Endpoints are determined by the selector or if that is not
	// specified, by manual construction of an Endpoints object or
	// EndpointSlice objects. If clusterIP is "None", no virtual IP is
	// allocated and the endpoints are published as a set of endpoints rather
	// than a virtual IP.
	// "NodePort" builds on ClusterIP and allocates a port on every node which
	// routes to the same endpoints as the clusterIP.
	// "LoadBalancer" builds on NodePort and creates an external load-balancer
	// (if supported in the current cloud) which routes to the same endpoints
	// as the clusterIP.
	// "ExternalName" aliases this service to the specified externalName.
	// Several other fields do not apply to ExternalName services.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AgentSpecHttpServiceSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpecPatch)(nil)).Elem()
}

func (i AgentSpecHttpServiceSpecPatchArgs) ToAgentSpecHttpServiceSpecPatchOutput() AgentSpecHttpServiceSpecPatchOutput {
	return i.ToAgentSpecHttpServiceSpecPatchOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecPatchArgs) ToAgentSpecHttpServiceSpecPatchOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecPatchOutput)
}

func (i AgentSpecHttpServiceSpecPatchArgs) ToAgentSpecHttpServiceSpecPatchPtrOutput() AgentSpecHttpServiceSpecPatchPtrOutput {
	return i.ToAgentSpecHttpServiceSpecPatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecPatchArgs) ToAgentSpecHttpServiceSpecPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecPatchOutput).ToAgentSpecHttpServiceSpecPatchPtrOutputWithContext(ctx)
}

// AgentSpecHttpServiceSpecPatchPtrInput is an input type that accepts AgentSpecHttpServiceSpecPatchArgs, AgentSpecHttpServiceSpecPatchPtr and AgentSpecHttpServiceSpecPatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecPatchPtrInput` via:
//
//	        AgentSpecHttpServiceSpecPatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpServiceSpecPatchPtrInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecPatchPtrOutput() AgentSpecHttpServiceSpecPatchPtrOutput
	ToAgentSpecHttpServiceSpecPatchPtrOutputWithContext(context.Context) AgentSpecHttpServiceSpecPatchPtrOutput
}

type agentSpecHttpServiceSpecPatchPtrType AgentSpecHttpServiceSpecPatchArgs

func AgentSpecHttpServiceSpecPatchPtr(v *AgentSpecHttpServiceSpecPatchArgs) AgentSpecHttpServiceSpecPatchPtrInput {
	return (*agentSpecHttpServiceSpecPatchPtrType)(v)
}

func (*agentSpecHttpServiceSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceSpecPatch)(nil)).Elem()
}

func (i *agentSpecHttpServiceSpecPatchPtrType) ToAgentSpecHttpServiceSpecPatchPtrOutput() AgentSpecHttpServiceSpecPatchPtrOutput {
	return i.ToAgentSpecHttpServiceSpecPatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpServiceSpecPatchPtrType) ToAgentSpecHttpServiceSpecPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecPatchPtrOutput)
}

// Spec is the specification of the service.
type AgentSpecHttpServiceSpecPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpecPatch)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecPatchOutput) ToAgentSpecHttpServiceSpecPatchOutput() AgentSpecHttpServiceSpecPatchOutput {
	return o
}

func (o AgentSpecHttpServiceSpecPatchOutput) ToAgentSpecHttpServiceSpecPatchOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPatchOutput {
	return o
}

func (o AgentSpecHttpServiceSpecPatchOutput) ToAgentSpecHttpServiceSpecPatchPtrOutput() AgentSpecHttpServiceSpecPatchPtrOutput {
	return o.ToAgentSpecHttpServiceSpecPatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpServiceSpecPatchOutput) ToAgentSpecHttpServiceSpecPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpServiceSpecPatch) *AgentSpecHttpServiceSpecPatch {
		return &v
	}).(AgentSpecHttpServiceSpecPatchPtrOutput)
}

// allocateLoadBalancerNodePorts defines if NodePorts will be automatically
// allocated for services with type LoadBalancer.  Default is "true". It
// may be set to "false" if the cluster load-balancer does not rely on
// NodePorts.  If the caller requests specific NodePorts (by specifying a
// value), those requests will be respected, regardless of this field.
// This field may only be set for services with type LoadBalancer and will
// be cleared if the type is changed to any other type.
func (o AgentSpecHttpServiceSpecPatchOutput) AllocateLoadBalancerNodePorts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPatch) *bool { return v.AllocateLoadBalancerNodePorts }).(pulumi.BoolPtrOutput)
}

// clusterIP is the IP address of the service and is usually assigned
// randomly. If an address is specified manually, is in-range (as per
// system configuration), and is not in use, it will be allocated to the
// service; otherwise creation of the service will fail. This field may not
// be changed through updates unless the type field is also being changed
// to ExternalName (which requires this field to be blank) or the type
// field is being changed from ExternalName (in which case this field may
// optionally be specified, as describe above).  Valid values are "None",
// empty string (""), or a valid IP address. Setting this to "None" makes a
// "headless service" (no virtual IP), which is useful when direct endpoint
// connections are preferred and proxying is not required.  Only applies to
// types ClusterIP, NodePort, and LoadBalancer. If this field is specified
// when creating a Service of type ExternalName, creation will fail. This
// field will be wiped when updating a Service to type ExternalName.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecPatchOutput) ClusterIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPatch) *string { return v.ClusterIP }).(pulumi.StringPtrOutput)
}

// ClusterIPs is a list of IP addresses assigned to this service, and are
// usually assigned randomly.  If an address is specified manually, is
// in-range (as per system configuration), and is not in use, it will be
// allocated to the service; otherwise creation of the service will fail.
// This field may not be changed through updates unless the type field is
// also being changed to ExternalName (which requires this field to be
// empty) or the type field is being changed from ExternalName (in which
// case this field may optionally be specified, as describe above).  Valid
// values are "None", empty string (""), or a valid IP address.  Setting
// this to "None" makes a "headless service" (no virtual IP), which is
// useful when direct endpoint connections are preferred and proxying is
// not required.  Only applies to types ClusterIP, NodePort, and
// LoadBalancer. If this field is specified when creating a Service of type
// ExternalName, creation will fail. This field will be wiped when updating
// a Service to type ExternalName.  If this field is not specified, it will
// be initialized from the clusterIP field.  If this field is specified,
// clients must ensure that clusterIPs[0] and clusterIP have the same
// value.
//
// This field may hold a maximum of two entries (dual-stack IPs, in either order).
// These IPs must correspond to the values of the ipFamilies field. Both
// clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecPatchOutput) ClusterIPs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPatch) []string { return v.ClusterIPs }).(pulumi.StringArrayOutput)
}

// externalIPs is a list of IP addresses for which nodes in the cluster
// will also accept traffic for this service.  These IPs are not managed by
// Kubernetes.  The user is responsible for ensuring that traffic arrives
// at a node with this IP.  A common example is external load-balancers
// that are not part of the Kubernetes system.
func (o AgentSpecHttpServiceSpecPatchOutput) ExternalIPs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPatch) []string { return v.ExternalIPs }).(pulumi.StringArrayOutput)
}

// externalName is the external reference that discovery mechanisms will
// return as an alias for this service (e.g. a DNS CNAME record). No
// proxying will be involved.  Must be a lowercase RFC-1123 hostname
// (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
func (o AgentSpecHttpServiceSpecPatchOutput) ExternalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPatch) *string { return v.ExternalName }).(pulumi.StringPtrOutput)
}

// externalTrafficPolicy describes how nodes distribute service traffic they
// receive on one of the Service's "externally-facing" addresses (NodePorts,
// ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure
// the service in a way that assumes that external load balancers will take care
// of balancing the service traffic between nodes, and so each node will deliver
// traffic only to the node-local endpoints of the service, without masquerading
// the client source IP. (Traffic mistakenly sent to a node with no endpoints will
// be dropped.) The default value, "Cluster", uses the standard behavior of
// routing to all endpoints evenly (possibly modified by topology and other
// features). Note that traffic sent to an External IP or LoadBalancer IP from
// within the cluster will always get "Cluster" semantics, but clients sending to
// a NodePort from within the cluster may need to take traffic policy into account
// when picking a node.
func (o AgentSpecHttpServiceSpecPatchOutput) ExternalTrafficPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPatch) *string { return v.ExternalTrafficPolicy }).(pulumi.StringPtrOutput)
}

// healthCheckNodePort specifies the healthcheck nodePort for the service.
// This only applies when type is set to LoadBalancer and
// externalTrafficPolicy is set to Local. If a value is specified, is
// in-range, and is not in use, it will be used.  If not specified, a value
// will be automatically allocated.  External systems (e.g. load-balancers)
// can use this port to determine if a given node holds endpoints for this
// service or not.  If this field is specified when creating a Service
// which does not need it, creation will fail. This field will be wiped
// when updating a Service to no longer need it (e.g. changing type).
// This field cannot be updated once set.
func (o AgentSpecHttpServiceSpecPatchOutput) HealthCheckNodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPatch) *int { return v.HealthCheckNodePort }).(pulumi.IntPtrOutput)
}

// InternalTrafficPolicy describes how nodes distribute service traffic they
// receive on the ClusterIP. If set to "Local", the proxy will assume that pods
// only want to talk to endpoints of the service on the same node as the pod,
// dropping the traffic if there are no local endpoints. The default value,
// "Cluster", uses the standard behavior of routing to all endpoints evenly
// (possibly modified by topology and other features).
func (o AgentSpecHttpServiceSpecPatchOutput) InternalTrafficPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPatch) *string { return v.InternalTrafficPolicy }).(pulumi.StringPtrOutput)
}

// IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this
// service. This field is usually assigned automatically based on cluster
// configuration and the ipFamilyPolicy field. If this field is specified
// manually, the requested family is available in the cluster,
// and ipFamilyPolicy allows it, it will be used; otherwise creation of
// the service will fail. This field is conditionally mutable: it allows
// for adding or removing a secondary IP family, but it does not allow
// changing the primary IP family of the Service. Valid values are "IPv4"
// and "IPv6".  This field only applies to Services of types ClusterIP,
// NodePort, and LoadBalancer, and does apply to "headless" services.
// This field will be wiped when updating a Service to type ExternalName.
//
// This field may hold a maximum of two entries (dual-stack families, in
// either order).  These families must correspond to the values of the
// clusterIPs field, if specified. Both clusterIPs and ipFamilies are
// governed by the ipFamilyPolicy field.
func (o AgentSpecHttpServiceSpecPatchOutput) IpFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPatch) []string { return v.IpFamilies }).(pulumi.StringArrayOutput)
}

// IPFamilyPolicy represents the dual-stack-ness requested or required by
// this Service. If there is no value provided, then this field will be set
// to SingleStack. Services can be "SingleStack" (a single IP family),
// "PreferDualStack" (two IP families on dual-stack configured clusters or
// a single IP family on single-stack clusters), or "RequireDualStack"
// (two IP families on dual-stack configured clusters, otherwise fail). The
// ipFamilies and clusterIPs fields depend on the value of this field. This
// field will be wiped when updating a service to type ExternalName.
func (o AgentSpecHttpServiceSpecPatchOutput) IpFamilyPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPatch) *string { return v.IpFamilyPolicy }).(pulumi.StringPtrOutput)
}

// loadBalancerClass is the class of the load balancer implementation this Service belongs to.
// If specified, the value of this field must be a label-style identifier, with an optional prefix,
// e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
// This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
// balancer implementation is used, today this is typically done through the cloud provider integration,
// but should apply for any default implementation. If set, it is assumed that a load balancer
// implementation is watching for Services with a matching class. Any default load balancer
// implementation (e.g. cloud providers) should ignore Services that set this field.
// This field can only be set when creating or updating a Service to type 'LoadBalancer'.
// Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
func (o AgentSpecHttpServiceSpecPatchOutput) LoadBalancerClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPatch) *string { return v.LoadBalancerClass }).(pulumi.StringPtrOutput)
}

// Only applies to Service Type: LoadBalancer.
// This feature depends on whether the underlying cloud-provider supports specifying
// the loadBalancerIP when a load balancer is created.
// This field will be ignored if the cloud-provider does not support the feature.
// Deprecated: This field was under-specified and its meaning varies across implementations.
// Using it is non-portable and it may not support dual-stack.
// Users are encouraged to use implementation-specific annotations when available.
func (o AgentSpecHttpServiceSpecPatchOutput) LoadBalancerIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPatch) *string { return v.LoadBalancerIP }).(pulumi.StringPtrOutput)
}

// If specified and supported by the platform, this will restrict traffic through the cloud-provider
// load-balancer will be restricted to the specified client IPs. This field will be ignored if the
// cloud-provider does not support the feature."
// More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
func (o AgentSpecHttpServiceSpecPatchOutput) LoadBalancerSourceRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPatch) []string { return v.LoadBalancerSourceRanges }).(pulumi.StringArrayOutput)
}

// The list of ports that are exposed by this service.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecPatchOutput) Ports() AgentSpecHttpServiceSpecPortsPatchArrayOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPatch) []AgentSpecHttpServiceSpecPortsPatch { return v.Ports }).(AgentSpecHttpServiceSpecPortsPatchArrayOutput)
}

// publishNotReadyAddresses indicates that any agent which deals with endpoints for this
// Service should disregard any indications of ready/not-ready.
// The primary use case for setting this field is for a StatefulSet's Headless Service to
// propagate SRV DNS records for its Pods for the purpose of peer discovery.
// The Kubernetes controllers that generate Endpoints and EndpointSlice resources for
// Services interpret this to mean that all endpoints are considered "ready" even if the
// Pods themselves are not. Agents which consume only Kubernetes generated endpoints
// through the Endpoints or EndpointSlice resources can safely assume this behavior.
func (o AgentSpecHttpServiceSpecPatchOutput) PublishNotReadyAddresses() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPatch) *bool { return v.PublishNotReadyAddresses }).(pulumi.BoolPtrOutput)
}

// Route service traffic to pods with label keys and values matching this
// selector. If empty or not present, the service is assumed to have an
// external process managing its endpoints, which Kubernetes will not
// modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
// Ignored if type is ExternalName.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/
func (o AgentSpecHttpServiceSpecPatchOutput) Selector() pulumi.StringMapOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPatch) map[string]string { return v.Selector }).(pulumi.StringMapOutput)
}

// Supports "ClientIP" and "None". Used to maintain session affinity.
// Enable client IP based session affinity.
// Must be ClientIP or None.
// Defaults to None.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecPatchOutput) SessionAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPatch) *string { return v.SessionAffinity }).(pulumi.StringPtrOutput)
}

func (o AgentSpecHttpServiceSpecPatchOutput) SessionAffinityConfig() AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPatch) *AgentSpecHttpServiceSpecSessionAffinityConfigPatch {
		return v.SessionAffinityConfig
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput)
}

// TrafficDistribution offers a way to express preferences for how traffic is
// distributed to Service endpoints. Implementations can use this field as a
// hint, but are not required to guarantee strict adherence. If the field is
// not set, the implementation will apply its default routing strategy. If set
// to "PreferClose", implementations should prioritize endpoints that are
// topologically close (e.g., same zone).
// This is an alpha field and requires enabling ServiceTrafficDistribution feature.
func (o AgentSpecHttpServiceSpecPatchOutput) TrafficDistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPatch) *string { return v.TrafficDistribution }).(pulumi.StringPtrOutput)
}

// type determines how the Service is exposed. Defaults to ClusterIP. Valid
// options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
// "ClusterIP" allocates a cluster-internal IP address for load-balancing
// to endpoints. Endpoints are determined by the selector or if that is not
// specified, by manual construction of an Endpoints object or
// EndpointSlice objects. If clusterIP is "None", no virtual IP is
// allocated and the endpoints are published as a set of endpoints rather
// than a virtual IP.
// "NodePort" builds on ClusterIP and allocates a port on every node which
// routes to the same endpoints as the clusterIP.
// "LoadBalancer" builds on NodePort and creates an external load-balancer
// (if supported in the current cloud) which routes to the same endpoints
// as the clusterIP.
// "ExternalName" aliases this service to the specified externalName.
// Several other fields do not apply to ExternalName services.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
func (o AgentSpecHttpServiceSpecPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AgentSpecHttpServiceSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceSpecPatch)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecPatchPtrOutput) ToAgentSpecHttpServiceSpecPatchPtrOutput() AgentSpecHttpServiceSpecPatchPtrOutput {
	return o
}

func (o AgentSpecHttpServiceSpecPatchPtrOutput) ToAgentSpecHttpServiceSpecPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPatchPtrOutput {
	return o
}

func (o AgentSpecHttpServiceSpecPatchPtrOutput) Elem() AgentSpecHttpServiceSpecPatchOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecPatch) AgentSpecHttpServiceSpecPatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpServiceSpecPatch
		return ret
	}).(AgentSpecHttpServiceSpecPatchOutput)
}

// allocateLoadBalancerNodePorts defines if NodePorts will be automatically
// allocated for services with type LoadBalancer.  Default is "true". It
// may be set to "false" if the cluster load-balancer does not rely on
// NodePorts.  If the caller requests specific NodePorts (by specifying a
// value), those requests will be respected, regardless of this field.
// This field may only be set for services with type LoadBalancer and will
// be cleared if the type is changed to any other type.
func (o AgentSpecHttpServiceSpecPatchPtrOutput) AllocateLoadBalancerNodePorts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecPatch) *bool {
		if v == nil {
			return nil
		}
		return v.AllocateLoadBalancerNodePorts
	}).(pulumi.BoolPtrOutput)
}

// clusterIP is the IP address of the service and is usually assigned
// randomly. If an address is specified manually, is in-range (as per
// system configuration), and is not in use, it will be allocated to the
// service; otherwise creation of the service will fail. This field may not
// be changed through updates unless the type field is also being changed
// to ExternalName (which requires this field to be blank) or the type
// field is being changed from ExternalName (in which case this field may
// optionally be specified, as describe above).  Valid values are "None",
// empty string (""), or a valid IP address. Setting this to "None" makes a
// "headless service" (no virtual IP), which is useful when direct endpoint
// connections are preferred and proxying is not required.  Only applies to
// types ClusterIP, NodePort, and LoadBalancer. If this field is specified
// when creating a Service of type ExternalName, creation will fail. This
// field will be wiped when updating a Service to type ExternalName.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecPatchPtrOutput) ClusterIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.ClusterIP
	}).(pulumi.StringPtrOutput)
}

// ClusterIPs is a list of IP addresses assigned to this service, and are
// usually assigned randomly.  If an address is specified manually, is
// in-range (as per system configuration), and is not in use, it will be
// allocated to the service; otherwise creation of the service will fail.
// This field may not be changed through updates unless the type field is
// also being changed to ExternalName (which requires this field to be
// empty) or the type field is being changed from ExternalName (in which
// case this field may optionally be specified, as describe above).  Valid
// values are "None", empty string (""), or a valid IP address.  Setting
// this to "None" makes a "headless service" (no virtual IP), which is
// useful when direct endpoint connections are preferred and proxying is
// not required.  Only applies to types ClusterIP, NodePort, and
// LoadBalancer. If this field is specified when creating a Service of type
// ExternalName, creation will fail. This field will be wiped when updating
// a Service to type ExternalName.  If this field is not specified, it will
// be initialized from the clusterIP field.  If this field is specified,
// clients must ensure that clusterIPs[0] and clusterIP have the same
// value.
//
// This field may hold a maximum of two entries (dual-stack IPs, in either order).
// These IPs must correspond to the values of the ipFamilies field. Both
// clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecPatchPtrOutput) ClusterIPs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecPatch) []string {
		if v == nil {
			return nil
		}
		return v.ClusterIPs
	}).(pulumi.StringArrayOutput)
}

// externalIPs is a list of IP addresses for which nodes in the cluster
// will also accept traffic for this service.  These IPs are not managed by
// Kubernetes.  The user is responsible for ensuring that traffic arrives
// at a node with this IP.  A common example is external load-balancers
// that are not part of the Kubernetes system.
func (o AgentSpecHttpServiceSpecPatchPtrOutput) ExternalIPs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecPatch) []string {
		if v == nil {
			return nil
		}
		return v.ExternalIPs
	}).(pulumi.StringArrayOutput)
}

// externalName is the external reference that discovery mechanisms will
// return as an alias for this service (e.g. a DNS CNAME record). No
// proxying will be involved.  Must be a lowercase RFC-1123 hostname
// (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
func (o AgentSpecHttpServiceSpecPatchPtrOutput) ExternalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.ExternalName
	}).(pulumi.StringPtrOutput)
}

// externalTrafficPolicy describes how nodes distribute service traffic they
// receive on one of the Service's "externally-facing" addresses (NodePorts,
// ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure
// the service in a way that assumes that external load balancers will take care
// of balancing the service traffic between nodes, and so each node will deliver
// traffic only to the node-local endpoints of the service, without masquerading
// the client source IP. (Traffic mistakenly sent to a node with no endpoints will
// be dropped.) The default value, "Cluster", uses the standard behavior of
// routing to all endpoints evenly (possibly modified by topology and other
// features). Note that traffic sent to an External IP or LoadBalancer IP from
// within the cluster will always get "Cluster" semantics, but clients sending to
// a NodePort from within the cluster may need to take traffic policy into account
// when picking a node.
func (o AgentSpecHttpServiceSpecPatchPtrOutput) ExternalTrafficPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.ExternalTrafficPolicy
	}).(pulumi.StringPtrOutput)
}

// healthCheckNodePort specifies the healthcheck nodePort for the service.
// This only applies when type is set to LoadBalancer and
// externalTrafficPolicy is set to Local. If a value is specified, is
// in-range, and is not in use, it will be used.  If not specified, a value
// will be automatically allocated.  External systems (e.g. load-balancers)
// can use this port to determine if a given node holds endpoints for this
// service or not.  If this field is specified when creating a Service
// which does not need it, creation will fail. This field will be wiped
// when updating a Service to no longer need it (e.g. changing type).
// This field cannot be updated once set.
func (o AgentSpecHttpServiceSpecPatchPtrOutput) HealthCheckNodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecPatch) *int {
		if v == nil {
			return nil
		}
		return v.HealthCheckNodePort
	}).(pulumi.IntPtrOutput)
}

// InternalTrafficPolicy describes how nodes distribute service traffic they
// receive on the ClusterIP. If set to "Local", the proxy will assume that pods
// only want to talk to endpoints of the service on the same node as the pod,
// dropping the traffic if there are no local endpoints. The default value,
// "Cluster", uses the standard behavior of routing to all endpoints evenly
// (possibly modified by topology and other features).
func (o AgentSpecHttpServiceSpecPatchPtrOutput) InternalTrafficPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.InternalTrafficPolicy
	}).(pulumi.StringPtrOutput)
}

// IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this
// service. This field is usually assigned automatically based on cluster
// configuration and the ipFamilyPolicy field. If this field is specified
// manually, the requested family is available in the cluster,
// and ipFamilyPolicy allows it, it will be used; otherwise creation of
// the service will fail. This field is conditionally mutable: it allows
// for adding or removing a secondary IP family, but it does not allow
// changing the primary IP family of the Service. Valid values are "IPv4"
// and "IPv6".  This field only applies to Services of types ClusterIP,
// NodePort, and LoadBalancer, and does apply to "headless" services.
// This field will be wiped when updating a Service to type ExternalName.
//
// This field may hold a maximum of two entries (dual-stack families, in
// either order).  These families must correspond to the values of the
// clusterIPs field, if specified. Both clusterIPs and ipFamilies are
// governed by the ipFamilyPolicy field.
func (o AgentSpecHttpServiceSpecPatchPtrOutput) IpFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecPatch) []string {
		if v == nil {
			return nil
		}
		return v.IpFamilies
	}).(pulumi.StringArrayOutput)
}

// IPFamilyPolicy represents the dual-stack-ness requested or required by
// this Service. If there is no value provided, then this field will be set
// to SingleStack. Services can be "SingleStack" (a single IP family),
// "PreferDualStack" (two IP families on dual-stack configured clusters or
// a single IP family on single-stack clusters), or "RequireDualStack"
// (two IP families on dual-stack configured clusters, otherwise fail). The
// ipFamilies and clusterIPs fields depend on the value of this field. This
// field will be wiped when updating a service to type ExternalName.
func (o AgentSpecHttpServiceSpecPatchPtrOutput) IpFamilyPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.IpFamilyPolicy
	}).(pulumi.StringPtrOutput)
}

// loadBalancerClass is the class of the load balancer implementation this Service belongs to.
// If specified, the value of this field must be a label-style identifier, with an optional prefix,
// e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
// This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
// balancer implementation is used, today this is typically done through the cloud provider integration,
// but should apply for any default implementation. If set, it is assumed that a load balancer
// implementation is watching for Services with a matching class. Any default load balancer
// implementation (e.g. cloud providers) should ignore Services that set this field.
// This field can only be set when creating or updating a Service to type 'LoadBalancer'.
// Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
func (o AgentSpecHttpServiceSpecPatchPtrOutput) LoadBalancerClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerClass
	}).(pulumi.StringPtrOutput)
}

// Only applies to Service Type: LoadBalancer.
// This feature depends on whether the underlying cloud-provider supports specifying
// the loadBalancerIP when a load balancer is created.
// This field will be ignored if the cloud-provider does not support the feature.
// Deprecated: This field was under-specified and its meaning varies across implementations.
// Using it is non-portable and it may not support dual-stack.
// Users are encouraged to use implementation-specific annotations when available.
func (o AgentSpecHttpServiceSpecPatchPtrOutput) LoadBalancerIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerIP
	}).(pulumi.StringPtrOutput)
}

// If specified and supported by the platform, this will restrict traffic through the cloud-provider
// load-balancer will be restricted to the specified client IPs. This field will be ignored if the
// cloud-provider does not support the feature."
// More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
func (o AgentSpecHttpServiceSpecPatchPtrOutput) LoadBalancerSourceRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecPatch) []string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerSourceRanges
	}).(pulumi.StringArrayOutput)
}

// The list of ports that are exposed by this service.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecPatchPtrOutput) Ports() AgentSpecHttpServiceSpecPortsPatchArrayOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecPatch) []AgentSpecHttpServiceSpecPortsPatch {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(AgentSpecHttpServiceSpecPortsPatchArrayOutput)
}

// publishNotReadyAddresses indicates that any agent which deals with endpoints for this
// Service should disregard any indications of ready/not-ready.
// The primary use case for setting this field is for a StatefulSet's Headless Service to
// propagate SRV DNS records for its Pods for the purpose of peer discovery.
// The Kubernetes controllers that generate Endpoints and EndpointSlice resources for
// Services interpret this to mean that all endpoints are considered "ready" even if the
// Pods themselves are not. Agents which consume only Kubernetes generated endpoints
// through the Endpoints or EndpointSlice resources can safely assume this behavior.
func (o AgentSpecHttpServiceSpecPatchPtrOutput) PublishNotReadyAddresses() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecPatch) *bool {
		if v == nil {
			return nil
		}
		return v.PublishNotReadyAddresses
	}).(pulumi.BoolPtrOutput)
}

// Route service traffic to pods with label keys and values matching this
// selector. If empty or not present, the service is assumed to have an
// external process managing its endpoints, which Kubernetes will not
// modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
// Ignored if type is ExternalName.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/
func (o AgentSpecHttpServiceSpecPatchPtrOutput) Selector() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(pulumi.StringMapOutput)
}

// Supports "ClientIP" and "None". Used to maintain session affinity.
// Enable client IP based session affinity.
// Must be ClientIP or None.
// Defaults to None.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecPatchPtrOutput) SessionAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.SessionAffinity
	}).(pulumi.StringPtrOutput)
}

func (o AgentSpecHttpServiceSpecPatchPtrOutput) SessionAffinityConfig() AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecPatch) *AgentSpecHttpServiceSpecSessionAffinityConfigPatch {
		if v == nil {
			return nil
		}
		return v.SessionAffinityConfig
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput)
}

// TrafficDistribution offers a way to express preferences for how traffic is
// distributed to Service endpoints. Implementations can use this field as a
// hint, but are not required to guarantee strict adherence. If the field is
// not set, the implementation will apply its default routing strategy. If set
// to "PreferClose", implementations should prioritize endpoints that are
// topologically close (e.g., same zone).
// This is an alpha field and requires enabling ServiceTrafficDistribution feature.
func (o AgentSpecHttpServiceSpecPatchPtrOutput) TrafficDistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.TrafficDistribution
	}).(pulumi.StringPtrOutput)
}

// type determines how the Service is exposed. Defaults to ClusterIP. Valid
// options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
// "ClusterIP" allocates a cluster-internal IP address for load-balancing
// to endpoints. Endpoints are determined by the selector or if that is not
// specified, by manual construction of an Endpoints object or
// EndpointSlice objects. If clusterIP is "None", no virtual IP is
// allocated and the endpoints are published as a set of endpoints rather
// than a virtual IP.
// "NodePort" builds on ClusterIP and allocates a port on every node which
// routes to the same endpoints as the clusterIP.
// "LoadBalancer" builds on NodePort and creates an external load-balancer
// (if supported in the current cloud) which routes to the same endpoints
// as the clusterIP.
// "ExternalName" aliases this service to the specified externalName.
// Several other fields do not apply to ExternalName services.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
func (o AgentSpecHttpServiceSpecPatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// ServicePort contains information on service's port.
type AgentSpecHttpServiceSpecPorts struct {
	// The application protocol for this port.
	// This is used as a hint for implementations to offer richer behavior for protocols that they understand.
	// This field follows standard Kubernetes label syntax.
	// Valid values are either:
	//
	// * Un-prefixed protocol names - reserved for IANA standard service names (as per
	// RFC-6335 and https://www.iana.org/assignments/service-names).
	//
	// * Kubernetes-defined prefixed names:
	//   * 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-
	//   * 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455
	//   * 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455
	//
	// * Other protocols should use implementation-defined prefixed names such as
	// mycompany.com/my-custom-protocol.
	AppProtocol *string `pulumi:"appProtocol"`
	// The name of this port within the service. This must be a DNS_LABEL.
	// All ports within a ServiceSpec must have unique names. When considering
	// the endpoints for a Service, this must match the 'name' field in the
	// EndpointPort.
	// Optional if only one ServicePort is defined on this service.
	Name *string `pulumi:"name"`
	// The port on each node on which this service is exposed when type is
	// NodePort or LoadBalancer.  Usually assigned by the system. If a value is
	// specified, in-range, and not in use it will be used, otherwise the
	// operation will fail.  If not specified, a port will be allocated if this
	// Service requires one.  If this field is specified when creating a
	// Service which does not need it, creation will fail. This field will be
	// wiped when updating a Service to no longer need it (e.g. changing type
	// from NodePort to ClusterIP).
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
	NodePort *int `pulumi:"nodePort"`
	// The port that will be exposed by this service.
	Port *int `pulumi:"port"`
	// The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
	// Default is TCP.
	Protocol *string `pulumi:"protocol"`
	// Number or name of the port to access on the pods targeted by the service.
	// Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	// If this is a string, it will be looked up as a named port in the
	// target Pod's container ports. If this is not specified, the value
	// of the 'port' field is used (an identity map).
	// This field is ignored for services with clusterIP=None, and should be
	// omitted or set equal to the 'port' field.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
	TargetPort interface{} `pulumi:"targetPort"`
}

// AgentSpecHttpServiceSpecPortsInput is an input type that accepts AgentSpecHttpServiceSpecPortsArgs and AgentSpecHttpServiceSpecPortsOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecPortsInput` via:
//
//	AgentSpecHttpServiceSpecPortsArgs{...}
type AgentSpecHttpServiceSpecPortsInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecPortsOutput() AgentSpecHttpServiceSpecPortsOutput
	ToAgentSpecHttpServiceSpecPortsOutputWithContext(context.Context) AgentSpecHttpServiceSpecPortsOutput
}

// ServicePort contains information on service's port.
type AgentSpecHttpServiceSpecPortsArgs struct {
	// The application protocol for this port.
	// This is used as a hint for implementations to offer richer behavior for protocols that they understand.
	// This field follows standard Kubernetes label syntax.
	// Valid values are either:
	//
	// * Un-prefixed protocol names - reserved for IANA standard service names (as per
	// RFC-6335 and https://www.iana.org/assignments/service-names).
	//
	// * Kubernetes-defined prefixed names:
	//   * 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-
	//   * 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455
	//   * 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455
	//
	// * Other protocols should use implementation-defined prefixed names such as
	// mycompany.com/my-custom-protocol.
	AppProtocol pulumi.StringPtrInput `pulumi:"appProtocol"`
	// The name of this port within the service. This must be a DNS_LABEL.
	// All ports within a ServiceSpec must have unique names. When considering
	// the endpoints for a Service, this must match the 'name' field in the
	// EndpointPort.
	// Optional if only one ServicePort is defined on this service.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The port on each node on which this service is exposed when type is
	// NodePort or LoadBalancer.  Usually assigned by the system. If a value is
	// specified, in-range, and not in use it will be used, otherwise the
	// operation will fail.  If not specified, a port will be allocated if this
	// Service requires one.  If this field is specified when creating a
	// Service which does not need it, creation will fail. This field will be
	// wiped when updating a Service to no longer need it (e.g. changing type
	// from NodePort to ClusterIP).
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
	NodePort pulumi.IntPtrInput `pulumi:"nodePort"`
	// The port that will be exposed by this service.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
	// Default is TCP.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Number or name of the port to access on the pods targeted by the service.
	// Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	// If this is a string, it will be looked up as a named port in the
	// target Pod's container ports. If this is not specified, the value
	// of the 'port' field is used (an identity map).
	// This field is ignored for services with clusterIP=None, and should be
	// omitted or set equal to the 'port' field.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
	TargetPort pulumi.Input `pulumi:"targetPort"`
}

func (AgentSpecHttpServiceSpecPortsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpecPorts)(nil)).Elem()
}

func (i AgentSpecHttpServiceSpecPortsArgs) ToAgentSpecHttpServiceSpecPortsOutput() AgentSpecHttpServiceSpecPortsOutput {
	return i.ToAgentSpecHttpServiceSpecPortsOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecPortsArgs) ToAgentSpecHttpServiceSpecPortsOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPortsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecPortsOutput)
}

// AgentSpecHttpServiceSpecPortsArrayInput is an input type that accepts AgentSpecHttpServiceSpecPortsArray and AgentSpecHttpServiceSpecPortsArrayOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecPortsArrayInput` via:
//
//	AgentSpecHttpServiceSpecPortsArray{ AgentSpecHttpServiceSpecPortsArgs{...} }
type AgentSpecHttpServiceSpecPortsArrayInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecPortsArrayOutput() AgentSpecHttpServiceSpecPortsArrayOutput
	ToAgentSpecHttpServiceSpecPortsArrayOutputWithContext(context.Context) AgentSpecHttpServiceSpecPortsArrayOutput
}

type AgentSpecHttpServiceSpecPortsArray []AgentSpecHttpServiceSpecPortsInput

func (AgentSpecHttpServiceSpecPortsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecHttpServiceSpecPorts)(nil)).Elem()
}

func (i AgentSpecHttpServiceSpecPortsArray) ToAgentSpecHttpServiceSpecPortsArrayOutput() AgentSpecHttpServiceSpecPortsArrayOutput {
	return i.ToAgentSpecHttpServiceSpecPortsArrayOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecPortsArray) ToAgentSpecHttpServiceSpecPortsArrayOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPortsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecPortsArrayOutput)
}

// ServicePort contains information on service's port.
type AgentSpecHttpServiceSpecPortsOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecPortsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpecPorts)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecPortsOutput) ToAgentSpecHttpServiceSpecPortsOutput() AgentSpecHttpServiceSpecPortsOutput {
	return o
}

func (o AgentSpecHttpServiceSpecPortsOutput) ToAgentSpecHttpServiceSpecPortsOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPortsOutput {
	return o
}

// The application protocol for this port.
// This is used as a hint for implementations to offer richer behavior for protocols that they understand.
// This field follows standard Kubernetes label syntax.
// Valid values are either:
//
// * Un-prefixed protocol names - reserved for IANA standard service names (as per
// RFC-6335 and https://www.iana.org/assignments/service-names).
//
// * Kubernetes-defined prefixed names:
//   - 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-
//   - 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455
//   - 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455
//
// * Other protocols should use implementation-defined prefixed names such as
// mycompany.com/my-custom-protocol.
func (o AgentSpecHttpServiceSpecPortsOutput) AppProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPorts) *string { return v.AppProtocol }).(pulumi.StringPtrOutput)
}

// The name of this port within the service. This must be a DNS_LABEL.
// All ports within a ServiceSpec must have unique names. When considering
// the endpoints for a Service, this must match the 'name' field in the
// EndpointPort.
// Optional if only one ServicePort is defined on this service.
func (o AgentSpecHttpServiceSpecPortsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPorts) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The port on each node on which this service is exposed when type is
// NodePort or LoadBalancer.  Usually assigned by the system. If a value is
// specified, in-range, and not in use it will be used, otherwise the
// operation will fail.  If not specified, a port will be allocated if this
// Service requires one.  If this field is specified when creating a
// Service which does not need it, creation will fail. This field will be
// wiped when updating a Service to no longer need it (e.g. changing type
// from NodePort to ClusterIP).
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
func (o AgentSpecHttpServiceSpecPortsOutput) NodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPorts) *int { return v.NodePort }).(pulumi.IntPtrOutput)
}

// The port that will be exposed by this service.
func (o AgentSpecHttpServiceSpecPortsOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPorts) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
// Default is TCP.
func (o AgentSpecHttpServiceSpecPortsOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPorts) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the pods targeted by the service.
// Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
// If this is a string, it will be looked up as a named port in the
// target Pod's container ports. If this is not specified, the value
// of the 'port' field is used (an identity map).
// This field is ignored for services with clusterIP=None, and should be
// omitted or set equal to the 'port' field.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
func (o AgentSpecHttpServiceSpecPortsOutput) TargetPort() pulumi.AnyOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPorts) interface{} { return v.TargetPort }).(pulumi.AnyOutput)
}

type AgentSpecHttpServiceSpecPortsArrayOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecPortsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecHttpServiceSpecPorts)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecPortsArrayOutput) ToAgentSpecHttpServiceSpecPortsArrayOutput() AgentSpecHttpServiceSpecPortsArrayOutput {
	return o
}

func (o AgentSpecHttpServiceSpecPortsArrayOutput) ToAgentSpecHttpServiceSpecPortsArrayOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPortsArrayOutput {
	return o
}

func (o AgentSpecHttpServiceSpecPortsArrayOutput) Index(i pulumi.IntInput) AgentSpecHttpServiceSpecPortsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentSpecHttpServiceSpecPorts {
		return vs[0].([]AgentSpecHttpServiceSpecPorts)[vs[1].(int)]
	}).(AgentSpecHttpServiceSpecPortsOutput)
}

// ServicePort contains information on service's port.
type AgentSpecHttpServiceSpecPortsPatch struct {
	// The application protocol for this port.
	// This is used as a hint for implementations to offer richer behavior for protocols that they understand.
	// This field follows standard Kubernetes label syntax.
	// Valid values are either:
	//
	// * Un-prefixed protocol names - reserved for IANA standard service names (as per
	// RFC-6335 and https://www.iana.org/assignments/service-names).
	//
	// * Kubernetes-defined prefixed names:
	//   * 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-
	//   * 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455
	//   * 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455
	//
	// * Other protocols should use implementation-defined prefixed names such as
	// mycompany.com/my-custom-protocol.
	AppProtocol *string `pulumi:"appProtocol"`
	// The name of this port within the service. This must be a DNS_LABEL.
	// All ports within a ServiceSpec must have unique names. When considering
	// the endpoints for a Service, this must match the 'name' field in the
	// EndpointPort.
	// Optional if only one ServicePort is defined on this service.
	Name *string `pulumi:"name"`
	// The port on each node on which this service is exposed when type is
	// NodePort or LoadBalancer.  Usually assigned by the system. If a value is
	// specified, in-range, and not in use it will be used, otherwise the
	// operation will fail.  If not specified, a port will be allocated if this
	// Service requires one.  If this field is specified when creating a
	// Service which does not need it, creation will fail. This field will be
	// wiped when updating a Service to no longer need it (e.g. changing type
	// from NodePort to ClusterIP).
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
	NodePort *int `pulumi:"nodePort"`
	// The port that will be exposed by this service.
	Port *int `pulumi:"port"`
	// The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
	// Default is TCP.
	Protocol *string `pulumi:"protocol"`
	// Number or name of the port to access on the pods targeted by the service.
	// Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	// If this is a string, it will be looked up as a named port in the
	// target Pod's container ports. If this is not specified, the value
	// of the 'port' field is used (an identity map).
	// This field is ignored for services with clusterIP=None, and should be
	// omitted or set equal to the 'port' field.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
	TargetPort interface{} `pulumi:"targetPort"`
}

// AgentSpecHttpServiceSpecPortsPatchInput is an input type that accepts AgentSpecHttpServiceSpecPortsPatchArgs and AgentSpecHttpServiceSpecPortsPatchOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecPortsPatchInput` via:
//
//	AgentSpecHttpServiceSpecPortsPatchArgs{...}
type AgentSpecHttpServiceSpecPortsPatchInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecPortsPatchOutput() AgentSpecHttpServiceSpecPortsPatchOutput
	ToAgentSpecHttpServiceSpecPortsPatchOutputWithContext(context.Context) AgentSpecHttpServiceSpecPortsPatchOutput
}

// ServicePort contains information on service's port.
type AgentSpecHttpServiceSpecPortsPatchArgs struct {
	// The application protocol for this port.
	// This is used as a hint for implementations to offer richer behavior for protocols that they understand.
	// This field follows standard Kubernetes label syntax.
	// Valid values are either:
	//
	// * Un-prefixed protocol names - reserved for IANA standard service names (as per
	// RFC-6335 and https://www.iana.org/assignments/service-names).
	//
	// * Kubernetes-defined prefixed names:
	//   * 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-
	//   * 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455
	//   * 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455
	//
	// * Other protocols should use implementation-defined prefixed names such as
	// mycompany.com/my-custom-protocol.
	AppProtocol pulumi.StringPtrInput `pulumi:"appProtocol"`
	// The name of this port within the service. This must be a DNS_LABEL.
	// All ports within a ServiceSpec must have unique names. When considering
	// the endpoints for a Service, this must match the 'name' field in the
	// EndpointPort.
	// Optional if only one ServicePort is defined on this service.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The port on each node on which this service is exposed when type is
	// NodePort or LoadBalancer.  Usually assigned by the system. If a value is
	// specified, in-range, and not in use it will be used, otherwise the
	// operation will fail.  If not specified, a port will be allocated if this
	// Service requires one.  If this field is specified when creating a
	// Service which does not need it, creation will fail. This field will be
	// wiped when updating a Service to no longer need it (e.g. changing type
	// from NodePort to ClusterIP).
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
	NodePort pulumi.IntPtrInput `pulumi:"nodePort"`
	// The port that will be exposed by this service.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
	// Default is TCP.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Number or name of the port to access on the pods targeted by the service.
	// Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	// If this is a string, it will be looked up as a named port in the
	// target Pod's container ports. If this is not specified, the value
	// of the 'port' field is used (an identity map).
	// This field is ignored for services with clusterIP=None, and should be
	// omitted or set equal to the 'port' field.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
	TargetPort pulumi.Input `pulumi:"targetPort"`
}

func (AgentSpecHttpServiceSpecPortsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpecPortsPatch)(nil)).Elem()
}

func (i AgentSpecHttpServiceSpecPortsPatchArgs) ToAgentSpecHttpServiceSpecPortsPatchOutput() AgentSpecHttpServiceSpecPortsPatchOutput {
	return i.ToAgentSpecHttpServiceSpecPortsPatchOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecPortsPatchArgs) ToAgentSpecHttpServiceSpecPortsPatchOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPortsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecPortsPatchOutput)
}

// AgentSpecHttpServiceSpecPortsPatchArrayInput is an input type that accepts AgentSpecHttpServiceSpecPortsPatchArray and AgentSpecHttpServiceSpecPortsPatchArrayOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecPortsPatchArrayInput` via:
//
//	AgentSpecHttpServiceSpecPortsPatchArray{ AgentSpecHttpServiceSpecPortsPatchArgs{...} }
type AgentSpecHttpServiceSpecPortsPatchArrayInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecPortsPatchArrayOutput() AgentSpecHttpServiceSpecPortsPatchArrayOutput
	ToAgentSpecHttpServiceSpecPortsPatchArrayOutputWithContext(context.Context) AgentSpecHttpServiceSpecPortsPatchArrayOutput
}

type AgentSpecHttpServiceSpecPortsPatchArray []AgentSpecHttpServiceSpecPortsPatchInput

func (AgentSpecHttpServiceSpecPortsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecHttpServiceSpecPortsPatch)(nil)).Elem()
}

func (i AgentSpecHttpServiceSpecPortsPatchArray) ToAgentSpecHttpServiceSpecPortsPatchArrayOutput() AgentSpecHttpServiceSpecPortsPatchArrayOutput {
	return i.ToAgentSpecHttpServiceSpecPortsPatchArrayOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecPortsPatchArray) ToAgentSpecHttpServiceSpecPortsPatchArrayOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPortsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecPortsPatchArrayOutput)
}

// ServicePort contains information on service's port.
type AgentSpecHttpServiceSpecPortsPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecPortsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpecPortsPatch)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecPortsPatchOutput) ToAgentSpecHttpServiceSpecPortsPatchOutput() AgentSpecHttpServiceSpecPortsPatchOutput {
	return o
}

func (o AgentSpecHttpServiceSpecPortsPatchOutput) ToAgentSpecHttpServiceSpecPortsPatchOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPortsPatchOutput {
	return o
}

// The application protocol for this port.
// This is used as a hint for implementations to offer richer behavior for protocols that they understand.
// This field follows standard Kubernetes label syntax.
// Valid values are either:
//
// * Un-prefixed protocol names - reserved for IANA standard service names (as per
// RFC-6335 and https://www.iana.org/assignments/service-names).
//
// * Kubernetes-defined prefixed names:
//   - 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-
//   - 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455
//   - 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455
//
// * Other protocols should use implementation-defined prefixed names such as
// mycompany.com/my-custom-protocol.
func (o AgentSpecHttpServiceSpecPortsPatchOutput) AppProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPortsPatch) *string { return v.AppProtocol }).(pulumi.StringPtrOutput)
}

// The name of this port within the service. This must be a DNS_LABEL.
// All ports within a ServiceSpec must have unique names. When considering
// the endpoints for a Service, this must match the 'name' field in the
// EndpointPort.
// Optional if only one ServicePort is defined on this service.
func (o AgentSpecHttpServiceSpecPortsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPortsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The port on each node on which this service is exposed when type is
// NodePort or LoadBalancer.  Usually assigned by the system. If a value is
// specified, in-range, and not in use it will be used, otherwise the
// operation will fail.  If not specified, a port will be allocated if this
// Service requires one.  If this field is specified when creating a
// Service which does not need it, creation will fail. This field will be
// wiped when updating a Service to no longer need it (e.g. changing type
// from NodePort to ClusterIP).
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
func (o AgentSpecHttpServiceSpecPortsPatchOutput) NodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPortsPatch) *int { return v.NodePort }).(pulumi.IntPtrOutput)
}

// The port that will be exposed by this service.
func (o AgentSpecHttpServiceSpecPortsPatchOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPortsPatch) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
// Default is TCP.
func (o AgentSpecHttpServiceSpecPortsPatchOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPortsPatch) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the pods targeted by the service.
// Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
// If this is a string, it will be looked up as a named port in the
// target Pod's container ports. If this is not specified, the value
// of the 'port' field is used (an identity map).
// This field is ignored for services with clusterIP=None, and should be
// omitted or set equal to the 'port' field.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
func (o AgentSpecHttpServiceSpecPortsPatchOutput) TargetPort() pulumi.AnyOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPortsPatch) interface{} { return v.TargetPort }).(pulumi.AnyOutput)
}

type AgentSpecHttpServiceSpecPortsPatchArrayOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecPortsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecHttpServiceSpecPortsPatch)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecPortsPatchArrayOutput) ToAgentSpecHttpServiceSpecPortsPatchArrayOutput() AgentSpecHttpServiceSpecPortsPatchArrayOutput {
	return o
}

func (o AgentSpecHttpServiceSpecPortsPatchArrayOutput) ToAgentSpecHttpServiceSpecPortsPatchArrayOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPortsPatchArrayOutput {
	return o
}

func (o AgentSpecHttpServiceSpecPortsPatchArrayOutput) Index(i pulumi.IntInput) AgentSpecHttpServiceSpecPortsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentSpecHttpServiceSpecPortsPatch {
		return vs[0].([]AgentSpecHttpServiceSpecPortsPatch)[vs[1].(int)]
	}).(AgentSpecHttpServiceSpecPortsPatchOutput)
}

// sessionAffinityConfig contains the configurations of session affinity.
type AgentSpecHttpServiceSpecSessionAffinityConfig struct {
	ClientIP *AgentSpecHttpServiceSpecSessionAffinityConfigClientIP `pulumi:"clientIP"`
}

// AgentSpecHttpServiceSpecSessionAffinityConfigInput is an input type that accepts AgentSpecHttpServiceSpecSessionAffinityConfigArgs and AgentSpecHttpServiceSpecSessionAffinityConfigOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecSessionAffinityConfigInput` via:
//
//	AgentSpecHttpServiceSpecSessionAffinityConfigArgs{...}
type AgentSpecHttpServiceSpecSessionAffinityConfigInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecSessionAffinityConfigOutput() AgentSpecHttpServiceSpecSessionAffinityConfigOutput
	ToAgentSpecHttpServiceSpecSessionAffinityConfigOutputWithContext(context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigOutput
}

// sessionAffinityConfig contains the configurations of session affinity.
type AgentSpecHttpServiceSpecSessionAffinityConfigArgs struct {
	ClientIP AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrInput `pulumi:"clientIP"`
}

func (AgentSpecHttpServiceSpecSessionAffinityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfig)(nil)).Elem()
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigOutput() AgentSpecHttpServiceSpecSessionAffinityConfigOutput {
	return i.ToAgentSpecHttpServiceSpecSessionAffinityConfigOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecSessionAffinityConfigOutput)
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return i.ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecSessionAffinityConfigOutput).ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(ctx)
}

// AgentSpecHttpServiceSpecSessionAffinityConfigPtrInput is an input type that accepts AgentSpecHttpServiceSpecSessionAffinityConfigArgs, AgentSpecHttpServiceSpecSessionAffinityConfigPtr and AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecSessionAffinityConfigPtrInput` via:
//
//	        AgentSpecHttpServiceSpecSessionAffinityConfigArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpServiceSpecSessionAffinityConfigPtrInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput
	ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput
}

type agentSpecHttpServiceSpecSessionAffinityConfigPtrType AgentSpecHttpServiceSpecSessionAffinityConfigArgs

func AgentSpecHttpServiceSpecSessionAffinityConfigPtr(v *AgentSpecHttpServiceSpecSessionAffinityConfigArgs) AgentSpecHttpServiceSpecSessionAffinityConfigPtrInput {
	return (*agentSpecHttpServiceSpecSessionAffinityConfigPtrType)(v)
}

func (*agentSpecHttpServiceSpecSessionAffinityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceSpecSessionAffinityConfig)(nil)).Elem()
}

func (i *agentSpecHttpServiceSpecSessionAffinityConfigPtrType) ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return i.ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpServiceSpecSessionAffinityConfigPtrType) ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput)
}

// sessionAffinityConfig contains the configurations of session affinity.
type AgentSpecHttpServiceSpecSessionAffinityConfigOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecSessionAffinityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfig)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigOutput() AgentSpecHttpServiceSpecSessionAffinityConfigOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return o.ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpServiceSpecSessionAffinityConfig) *AgentSpecHttpServiceSpecSessionAffinityConfig {
		return &v
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput)
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigOutput) ClientIP() AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecSessionAffinityConfig) *AgentSpecHttpServiceSpecSessionAffinityConfigClientIP {
		return v.ClientIP
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput)
}

type AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceSpecSessionAffinityConfig)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput) Elem() AgentSpecHttpServiceSpecSessionAffinityConfigOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecSessionAffinityConfig) AgentSpecHttpServiceSpecSessionAffinityConfig {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpServiceSpecSessionAffinityConfig
		return ret
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigOutput)
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput) ClientIP() AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecSessionAffinityConfig) *AgentSpecHttpServiceSpecSessionAffinityConfigClientIP {
		if v == nil {
			return nil
		}
		return v.ClientIP
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput)
}

// clientIP contains the configurations of Client IP based session affinity.
type AgentSpecHttpServiceSpecSessionAffinityConfigClientIP struct {
	// timeoutSeconds specifies the seconds of ClientIP type session sticky time.
	// The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
	// Default value is 10800(for 3 hours).
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// AgentSpecHttpServiceSpecSessionAffinityConfigClientIPInput is an input type that accepts AgentSpecHttpServiceSpecSessionAffinityConfigClientIPArgs and AgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecSessionAffinityConfigClientIPInput` via:
//
//	AgentSpecHttpServiceSpecSessionAffinityConfigClientIPArgs{...}
type AgentSpecHttpServiceSpecSessionAffinityConfigClientIPInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutput
	ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutputWithContext(context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutput
}

// clientIP contains the configurations of Client IP based session affinity.
type AgentSpecHttpServiceSpecSessionAffinityConfigClientIPArgs struct {
	// timeoutSeconds specifies the seconds of ClientIP type session sticky time.
	// The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
	// Default value is 10800(for 3 hours).
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (AgentSpecHttpServiceSpecSessionAffinityConfigClientIPArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfigClientIP)(nil)).Elem()
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigClientIPArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutput {
	return i.ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigClientIPArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutput)
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigClientIPArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return i.ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigClientIPArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutput).ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(ctx)
}

// AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrInput is an input type that accepts AgentSpecHttpServiceSpecSessionAffinityConfigClientIPArgs, AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtr and AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrInput` via:
//
//	        AgentSpecHttpServiceSpecSessionAffinityConfigClientIPArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput
	ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput
}

type agentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrType AgentSpecHttpServiceSpecSessionAffinityConfigClientIPArgs

func AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtr(v *AgentSpecHttpServiceSpecSessionAffinityConfigClientIPArgs) AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrInput {
	return (*agentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrType)(v)
}

func (*agentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceSpecSessionAffinityConfigClientIP)(nil)).Elem()
}

func (i *agentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrType) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return i.ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrType) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput)
}

// clientIP contains the configurations of Client IP based session affinity.
type AgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfigClientIP)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return o.ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpServiceSpecSessionAffinityConfigClientIP) *AgentSpecHttpServiceSpecSessionAffinityConfigClientIP {
		return &v
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput)
}

// timeoutSeconds specifies the seconds of ClientIP type session sticky time.
// The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
// Default value is 10800(for 3 hours).
func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecSessionAffinityConfigClientIP) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceSpecSessionAffinityConfigClientIP)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput) Elem() AgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecSessionAffinityConfigClientIP) AgentSpecHttpServiceSpecSessionAffinityConfigClientIP {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpServiceSpecSessionAffinityConfigClientIP
		return ret
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutput)
}

// timeoutSeconds specifies the seconds of ClientIP type session sticky time.
// The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
// Default value is 10800(for 3 hours).
func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecSessionAffinityConfigClientIP) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// clientIP contains the configurations of Client IP based session affinity.
type AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatch struct {
	// timeoutSeconds specifies the seconds of ClientIP type session sticky time.
	// The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
	// Default value is 10800(for 3 hours).
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchInput is an input type that accepts AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchArgs and AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchInput` via:
//
//	AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchArgs{...}
type AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutput
	ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutputWithContext(context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutput
}

// clientIP contains the configurations of Client IP based session affinity.
type AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchArgs struct {
	// timeoutSeconds specifies the seconds of ClientIP type session sticky time.
	// The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
	// Default value is 10800(for 3 hours).
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatch)(nil)).Elem()
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutput {
	return i.ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutput)
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput {
	return i.ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutput).ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutputWithContext(ctx)
}

// AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrInput is an input type that accepts AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchArgs, AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtr and AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrInput` via:
//
//	        AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput
	ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutputWithContext(context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput
}

type agentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrType AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchArgs

func AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtr(v *AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchArgs) AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrInput {
	return (*agentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrType)(v)
}

func (*agentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatch)(nil)).Elem()
}

func (i *agentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrType) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput {
	return i.ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrType) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput)
}

// clientIP contains the configurations of Client IP based session affinity.
type AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatch)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput {
	return o.ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatch) *AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatch {
		return &v
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput)
}

// timeoutSeconds specifies the seconds of ClientIP type session sticky time.
// The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
// Default value is 10800(for 3 hours).
func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatch) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatch)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput) Elem() AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatch) AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatch
		return ret
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutput)
}

// timeoutSeconds specifies the seconds of ClientIP type session sticky time.
// The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
// Default value is 10800(for 3 hours).
func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatch) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// sessionAffinityConfig contains the configurations of session affinity.
type AgentSpecHttpServiceSpecSessionAffinityConfigPatch struct {
	ClientIP *AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatch `pulumi:"clientIP"`
}

// AgentSpecHttpServiceSpecSessionAffinityConfigPatchInput is an input type that accepts AgentSpecHttpServiceSpecSessionAffinityConfigPatchArgs and AgentSpecHttpServiceSpecSessionAffinityConfigPatchOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecSessionAffinityConfigPatchInput` via:
//
//	AgentSpecHttpServiceSpecSessionAffinityConfigPatchArgs{...}
type AgentSpecHttpServiceSpecSessionAffinityConfigPatchInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecSessionAffinityConfigPatchOutput() AgentSpecHttpServiceSpecSessionAffinityConfigPatchOutput
	ToAgentSpecHttpServiceSpecSessionAffinityConfigPatchOutputWithContext(context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigPatchOutput
}

// sessionAffinityConfig contains the configurations of session affinity.
type AgentSpecHttpServiceSpecSessionAffinityConfigPatchArgs struct {
	ClientIP AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrInput `pulumi:"clientIP"`
}

func (AgentSpecHttpServiceSpecSessionAffinityConfigPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfigPatch)(nil)).Elem()
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigPatchArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigPatchOutput() AgentSpecHttpServiceSpecSessionAffinityConfigPatchOutput {
	return i.ToAgentSpecHttpServiceSpecSessionAffinityConfigPatchOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigPatchArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigPatchOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecSessionAffinityConfigPatchOutput)
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigPatchArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput {
	return i.ToAgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigPatchArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecSessionAffinityConfigPatchOutput).ToAgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutputWithContext(ctx)
}

// AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrInput is an input type that accepts AgentSpecHttpServiceSpecSessionAffinityConfigPatchArgs, AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtr and AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrInput` via:
//
//	        AgentSpecHttpServiceSpecSessionAffinityConfigPatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput
	ToAgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutputWithContext(context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput
}

type agentSpecHttpServiceSpecSessionAffinityConfigPatchPtrType AgentSpecHttpServiceSpecSessionAffinityConfigPatchArgs

func AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtr(v *AgentSpecHttpServiceSpecSessionAffinityConfigPatchArgs) AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrInput {
	return (*agentSpecHttpServiceSpecSessionAffinityConfigPatchPtrType)(v)
}

func (*agentSpecHttpServiceSpecSessionAffinityConfigPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceSpecSessionAffinityConfigPatch)(nil)).Elem()
}

func (i *agentSpecHttpServiceSpecSessionAffinityConfigPatchPtrType) ToAgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput {
	return i.ToAgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpServiceSpecSessionAffinityConfigPatchPtrType) ToAgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput)
}

// sessionAffinityConfig contains the configurations of session affinity.
type AgentSpecHttpServiceSpecSessionAffinityConfigPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecSessionAffinityConfigPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfigPatch)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigPatchOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigPatchOutput() AgentSpecHttpServiceSpecSessionAffinityConfigPatchOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigPatchOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigPatchOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigPatchOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigPatchOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput {
	return o.ToAgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigPatchOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpServiceSpecSessionAffinityConfigPatch) *AgentSpecHttpServiceSpecSessionAffinityConfigPatch {
		return &v
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput)
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigPatchOutput) ClientIP() AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecSessionAffinityConfigPatch) *AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatch {
		return v.ClientIP
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput)
}

type AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceSpecSessionAffinityConfigPatch)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput) Elem() AgentSpecHttpServiceSpecSessionAffinityConfigPatchOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecSessionAffinityConfigPatch) AgentSpecHttpServiceSpecSessionAffinityConfigPatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpServiceSpecSessionAffinityConfigPatch
		return ret
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigPatchOutput)
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput) ClientIP() AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecSessionAffinityConfigPatch) *AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatch {
		if v == nil {
			return nil
		}
		return v.ClientIP
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput)
}

// TLS defines options for configuring TLS for HTTP.
type AgentSpecHttpTls struct {
	Certificate           *AgentSpecHttpTlsCertificate           `pulumi:"certificate"`
	SelfSignedCertificate *AgentSpecHttpTlsSelfSignedCertificate `pulumi:"selfSignedCertificate"`
}

// AgentSpecHttpTlsInput is an input type that accepts AgentSpecHttpTlsArgs and AgentSpecHttpTlsOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsInput` via:
//
//	AgentSpecHttpTlsArgs{...}
type AgentSpecHttpTlsInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsOutput() AgentSpecHttpTlsOutput
	ToAgentSpecHttpTlsOutputWithContext(context.Context) AgentSpecHttpTlsOutput
}

// TLS defines options for configuring TLS for HTTP.
type AgentSpecHttpTlsArgs struct {
	Certificate           AgentSpecHttpTlsCertificatePtrInput           `pulumi:"certificate"`
	SelfSignedCertificate AgentSpecHttpTlsSelfSignedCertificatePtrInput `pulumi:"selfSignedCertificate"`
}

func (AgentSpecHttpTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTls)(nil)).Elem()
}

func (i AgentSpecHttpTlsArgs) ToAgentSpecHttpTlsOutput() AgentSpecHttpTlsOutput {
	return i.ToAgentSpecHttpTlsOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsArgs) ToAgentSpecHttpTlsOutputWithContext(ctx context.Context) AgentSpecHttpTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsOutput)
}

func (i AgentSpecHttpTlsArgs) ToAgentSpecHttpTlsPtrOutput() AgentSpecHttpTlsPtrOutput {
	return i.ToAgentSpecHttpTlsPtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsArgs) ToAgentSpecHttpTlsPtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsOutput).ToAgentSpecHttpTlsPtrOutputWithContext(ctx)
}

// AgentSpecHttpTlsPtrInput is an input type that accepts AgentSpecHttpTlsArgs, AgentSpecHttpTlsPtr and AgentSpecHttpTlsPtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsPtrInput` via:
//
//	        AgentSpecHttpTlsArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpTlsPtrInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsPtrOutput() AgentSpecHttpTlsPtrOutput
	ToAgentSpecHttpTlsPtrOutputWithContext(context.Context) AgentSpecHttpTlsPtrOutput
}

type agentSpecHttpTlsPtrType AgentSpecHttpTlsArgs

func AgentSpecHttpTlsPtr(v *AgentSpecHttpTlsArgs) AgentSpecHttpTlsPtrInput {
	return (*agentSpecHttpTlsPtrType)(v)
}

func (*agentSpecHttpTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpTls)(nil)).Elem()
}

func (i *agentSpecHttpTlsPtrType) ToAgentSpecHttpTlsPtrOutput() AgentSpecHttpTlsPtrOutput {
	return i.ToAgentSpecHttpTlsPtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpTlsPtrType) ToAgentSpecHttpTlsPtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsPtrOutput)
}

// TLS defines options for configuring TLS for HTTP.
type AgentSpecHttpTlsOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTls)(nil)).Elem()
}

func (o AgentSpecHttpTlsOutput) ToAgentSpecHttpTlsOutput() AgentSpecHttpTlsOutput {
	return o
}

func (o AgentSpecHttpTlsOutput) ToAgentSpecHttpTlsOutputWithContext(ctx context.Context) AgentSpecHttpTlsOutput {
	return o
}

func (o AgentSpecHttpTlsOutput) ToAgentSpecHttpTlsPtrOutput() AgentSpecHttpTlsPtrOutput {
	return o.ToAgentSpecHttpTlsPtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpTlsOutput) ToAgentSpecHttpTlsPtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpTls) *AgentSpecHttpTls {
		return &v
	}).(AgentSpecHttpTlsPtrOutput)
}

func (o AgentSpecHttpTlsOutput) Certificate() AgentSpecHttpTlsCertificatePtrOutput {
	return o.ApplyT(func(v AgentSpecHttpTls) *AgentSpecHttpTlsCertificate { return v.Certificate }).(AgentSpecHttpTlsCertificatePtrOutput)
}

func (o AgentSpecHttpTlsOutput) SelfSignedCertificate() AgentSpecHttpTlsSelfSignedCertificatePtrOutput {
	return o.ApplyT(func(v AgentSpecHttpTls) *AgentSpecHttpTlsSelfSignedCertificate { return v.SelfSignedCertificate }).(AgentSpecHttpTlsSelfSignedCertificatePtrOutput)
}

type AgentSpecHttpTlsPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpTls)(nil)).Elem()
}

func (o AgentSpecHttpTlsPtrOutput) ToAgentSpecHttpTlsPtrOutput() AgentSpecHttpTlsPtrOutput {
	return o
}

func (o AgentSpecHttpTlsPtrOutput) ToAgentSpecHttpTlsPtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsPtrOutput {
	return o
}

func (o AgentSpecHttpTlsPtrOutput) Elem() AgentSpecHttpTlsOutput {
	return o.ApplyT(func(v *AgentSpecHttpTls) AgentSpecHttpTls {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpTls
		return ret
	}).(AgentSpecHttpTlsOutput)
}

func (o AgentSpecHttpTlsPtrOutput) Certificate() AgentSpecHttpTlsCertificatePtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpTls) *AgentSpecHttpTlsCertificate {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(AgentSpecHttpTlsCertificatePtrOutput)
}

func (o AgentSpecHttpTlsPtrOutput) SelfSignedCertificate() AgentSpecHttpTlsSelfSignedCertificatePtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpTls) *AgentSpecHttpTlsSelfSignedCertificate {
		if v == nil {
			return nil
		}
		return v.SelfSignedCertificate
	}).(AgentSpecHttpTlsSelfSignedCertificatePtrOutput)
}

// Certificate is a reference to a Kubernetes secret that contains the certificate and private key for enabling TLS.
// The referenced secret should contain the following:
//
// - `ca.crt`: The certificate authority (optional).
// - `tls.crt`: The certificate (or a chain).
// - `tls.key`: The private key to the first certificate in the certificate chain.
type AgentSpecHttpTlsCertificate struct {
	// SecretName is the name of the secret.
	SecretName *string `pulumi:"secretName"`
}

// AgentSpecHttpTlsCertificateInput is an input type that accepts AgentSpecHttpTlsCertificateArgs and AgentSpecHttpTlsCertificateOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsCertificateInput` via:
//
//	AgentSpecHttpTlsCertificateArgs{...}
type AgentSpecHttpTlsCertificateInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsCertificateOutput() AgentSpecHttpTlsCertificateOutput
	ToAgentSpecHttpTlsCertificateOutputWithContext(context.Context) AgentSpecHttpTlsCertificateOutput
}

// Certificate is a reference to a Kubernetes secret that contains the certificate and private key for enabling TLS.
// The referenced secret should contain the following:
//
// - `ca.crt`: The certificate authority (optional).
// - `tls.crt`: The certificate (or a chain).
// - `tls.key`: The private key to the first certificate in the certificate chain.
type AgentSpecHttpTlsCertificateArgs struct {
	// SecretName is the name of the secret.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (AgentSpecHttpTlsCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTlsCertificate)(nil)).Elem()
}

func (i AgentSpecHttpTlsCertificateArgs) ToAgentSpecHttpTlsCertificateOutput() AgentSpecHttpTlsCertificateOutput {
	return i.ToAgentSpecHttpTlsCertificateOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsCertificateArgs) ToAgentSpecHttpTlsCertificateOutputWithContext(ctx context.Context) AgentSpecHttpTlsCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsCertificateOutput)
}

func (i AgentSpecHttpTlsCertificateArgs) ToAgentSpecHttpTlsCertificatePtrOutput() AgentSpecHttpTlsCertificatePtrOutput {
	return i.ToAgentSpecHttpTlsCertificatePtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsCertificateArgs) ToAgentSpecHttpTlsCertificatePtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsCertificateOutput).ToAgentSpecHttpTlsCertificatePtrOutputWithContext(ctx)
}

// AgentSpecHttpTlsCertificatePtrInput is an input type that accepts AgentSpecHttpTlsCertificateArgs, AgentSpecHttpTlsCertificatePtr and AgentSpecHttpTlsCertificatePtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsCertificatePtrInput` via:
//
//	        AgentSpecHttpTlsCertificateArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpTlsCertificatePtrInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsCertificatePtrOutput() AgentSpecHttpTlsCertificatePtrOutput
	ToAgentSpecHttpTlsCertificatePtrOutputWithContext(context.Context) AgentSpecHttpTlsCertificatePtrOutput
}

type agentSpecHttpTlsCertificatePtrType AgentSpecHttpTlsCertificateArgs

func AgentSpecHttpTlsCertificatePtr(v *AgentSpecHttpTlsCertificateArgs) AgentSpecHttpTlsCertificatePtrInput {
	return (*agentSpecHttpTlsCertificatePtrType)(v)
}

func (*agentSpecHttpTlsCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpTlsCertificate)(nil)).Elem()
}

func (i *agentSpecHttpTlsCertificatePtrType) ToAgentSpecHttpTlsCertificatePtrOutput() AgentSpecHttpTlsCertificatePtrOutput {
	return i.ToAgentSpecHttpTlsCertificatePtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpTlsCertificatePtrType) ToAgentSpecHttpTlsCertificatePtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsCertificatePtrOutput)
}

// Certificate is a reference to a Kubernetes secret that contains the certificate and private key for enabling TLS.
// The referenced secret should contain the following:
//
// - `ca.crt`: The certificate authority (optional).
// - `tls.crt`: The certificate (or a chain).
// - `tls.key`: The private key to the first certificate in the certificate chain.
type AgentSpecHttpTlsCertificateOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTlsCertificate)(nil)).Elem()
}

func (o AgentSpecHttpTlsCertificateOutput) ToAgentSpecHttpTlsCertificateOutput() AgentSpecHttpTlsCertificateOutput {
	return o
}

func (o AgentSpecHttpTlsCertificateOutput) ToAgentSpecHttpTlsCertificateOutputWithContext(ctx context.Context) AgentSpecHttpTlsCertificateOutput {
	return o
}

func (o AgentSpecHttpTlsCertificateOutput) ToAgentSpecHttpTlsCertificatePtrOutput() AgentSpecHttpTlsCertificatePtrOutput {
	return o.ToAgentSpecHttpTlsCertificatePtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpTlsCertificateOutput) ToAgentSpecHttpTlsCertificatePtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpTlsCertificate) *AgentSpecHttpTlsCertificate {
		return &v
	}).(AgentSpecHttpTlsCertificatePtrOutput)
}

// SecretName is the name of the secret.
func (o AgentSpecHttpTlsCertificateOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpTlsCertificate) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type AgentSpecHttpTlsCertificatePtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpTlsCertificate)(nil)).Elem()
}

func (o AgentSpecHttpTlsCertificatePtrOutput) ToAgentSpecHttpTlsCertificatePtrOutput() AgentSpecHttpTlsCertificatePtrOutput {
	return o
}

func (o AgentSpecHttpTlsCertificatePtrOutput) ToAgentSpecHttpTlsCertificatePtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsCertificatePtrOutput {
	return o
}

func (o AgentSpecHttpTlsCertificatePtrOutput) Elem() AgentSpecHttpTlsCertificateOutput {
	return o.ApplyT(func(v *AgentSpecHttpTlsCertificate) AgentSpecHttpTlsCertificate {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpTlsCertificate
		return ret
	}).(AgentSpecHttpTlsCertificateOutput)
}

// SecretName is the name of the secret.
func (o AgentSpecHttpTlsCertificatePtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpTlsCertificate) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// Certificate is a reference to a Kubernetes secret that contains the certificate and private key for enabling TLS.
// The referenced secret should contain the following:
//
// - `ca.crt`: The certificate authority (optional).
// - `tls.crt`: The certificate (or a chain).
// - `tls.key`: The private key to the first certificate in the certificate chain.
type AgentSpecHttpTlsCertificatePatch struct {
	// SecretName is the name of the secret.
	SecretName *string `pulumi:"secretName"`
}

// AgentSpecHttpTlsCertificatePatchInput is an input type that accepts AgentSpecHttpTlsCertificatePatchArgs and AgentSpecHttpTlsCertificatePatchOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsCertificatePatchInput` via:
//
//	AgentSpecHttpTlsCertificatePatchArgs{...}
type AgentSpecHttpTlsCertificatePatchInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsCertificatePatchOutput() AgentSpecHttpTlsCertificatePatchOutput
	ToAgentSpecHttpTlsCertificatePatchOutputWithContext(context.Context) AgentSpecHttpTlsCertificatePatchOutput
}

// Certificate is a reference to a Kubernetes secret that contains the certificate and private key for enabling TLS.
// The referenced secret should contain the following:
//
// - `ca.crt`: The certificate authority (optional).
// - `tls.crt`: The certificate (or a chain).
// - `tls.key`: The private key to the first certificate in the certificate chain.
type AgentSpecHttpTlsCertificatePatchArgs struct {
	// SecretName is the name of the secret.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (AgentSpecHttpTlsCertificatePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTlsCertificatePatch)(nil)).Elem()
}

func (i AgentSpecHttpTlsCertificatePatchArgs) ToAgentSpecHttpTlsCertificatePatchOutput() AgentSpecHttpTlsCertificatePatchOutput {
	return i.ToAgentSpecHttpTlsCertificatePatchOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsCertificatePatchArgs) ToAgentSpecHttpTlsCertificatePatchOutputWithContext(ctx context.Context) AgentSpecHttpTlsCertificatePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsCertificatePatchOutput)
}

func (i AgentSpecHttpTlsCertificatePatchArgs) ToAgentSpecHttpTlsCertificatePatchPtrOutput() AgentSpecHttpTlsCertificatePatchPtrOutput {
	return i.ToAgentSpecHttpTlsCertificatePatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsCertificatePatchArgs) ToAgentSpecHttpTlsCertificatePatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsCertificatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsCertificatePatchOutput).ToAgentSpecHttpTlsCertificatePatchPtrOutputWithContext(ctx)
}

// AgentSpecHttpTlsCertificatePatchPtrInput is an input type that accepts AgentSpecHttpTlsCertificatePatchArgs, AgentSpecHttpTlsCertificatePatchPtr and AgentSpecHttpTlsCertificatePatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsCertificatePatchPtrInput` via:
//
//	        AgentSpecHttpTlsCertificatePatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpTlsCertificatePatchPtrInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsCertificatePatchPtrOutput() AgentSpecHttpTlsCertificatePatchPtrOutput
	ToAgentSpecHttpTlsCertificatePatchPtrOutputWithContext(context.Context) AgentSpecHttpTlsCertificatePatchPtrOutput
}

type agentSpecHttpTlsCertificatePatchPtrType AgentSpecHttpTlsCertificatePatchArgs

func AgentSpecHttpTlsCertificatePatchPtr(v *AgentSpecHttpTlsCertificatePatchArgs) AgentSpecHttpTlsCertificatePatchPtrInput {
	return (*agentSpecHttpTlsCertificatePatchPtrType)(v)
}

func (*agentSpecHttpTlsCertificatePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpTlsCertificatePatch)(nil)).Elem()
}

func (i *agentSpecHttpTlsCertificatePatchPtrType) ToAgentSpecHttpTlsCertificatePatchPtrOutput() AgentSpecHttpTlsCertificatePatchPtrOutput {
	return i.ToAgentSpecHttpTlsCertificatePatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpTlsCertificatePatchPtrType) ToAgentSpecHttpTlsCertificatePatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsCertificatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsCertificatePatchPtrOutput)
}

// Certificate is a reference to a Kubernetes secret that contains the certificate and private key for enabling TLS.
// The referenced secret should contain the following:
//
// - `ca.crt`: The certificate authority (optional).
// - `tls.crt`: The certificate (or a chain).
// - `tls.key`: The private key to the first certificate in the certificate chain.
type AgentSpecHttpTlsCertificatePatchOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsCertificatePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTlsCertificatePatch)(nil)).Elem()
}

func (o AgentSpecHttpTlsCertificatePatchOutput) ToAgentSpecHttpTlsCertificatePatchOutput() AgentSpecHttpTlsCertificatePatchOutput {
	return o
}

func (o AgentSpecHttpTlsCertificatePatchOutput) ToAgentSpecHttpTlsCertificatePatchOutputWithContext(ctx context.Context) AgentSpecHttpTlsCertificatePatchOutput {
	return o
}

func (o AgentSpecHttpTlsCertificatePatchOutput) ToAgentSpecHttpTlsCertificatePatchPtrOutput() AgentSpecHttpTlsCertificatePatchPtrOutput {
	return o.ToAgentSpecHttpTlsCertificatePatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpTlsCertificatePatchOutput) ToAgentSpecHttpTlsCertificatePatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsCertificatePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpTlsCertificatePatch) *AgentSpecHttpTlsCertificatePatch {
		return &v
	}).(AgentSpecHttpTlsCertificatePatchPtrOutput)
}

// SecretName is the name of the secret.
func (o AgentSpecHttpTlsCertificatePatchOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpTlsCertificatePatch) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type AgentSpecHttpTlsCertificatePatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsCertificatePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpTlsCertificatePatch)(nil)).Elem()
}

func (o AgentSpecHttpTlsCertificatePatchPtrOutput) ToAgentSpecHttpTlsCertificatePatchPtrOutput() AgentSpecHttpTlsCertificatePatchPtrOutput {
	return o
}

func (o AgentSpecHttpTlsCertificatePatchPtrOutput) ToAgentSpecHttpTlsCertificatePatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsCertificatePatchPtrOutput {
	return o
}

func (o AgentSpecHttpTlsCertificatePatchPtrOutput) Elem() AgentSpecHttpTlsCertificatePatchOutput {
	return o.ApplyT(func(v *AgentSpecHttpTlsCertificatePatch) AgentSpecHttpTlsCertificatePatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpTlsCertificatePatch
		return ret
	}).(AgentSpecHttpTlsCertificatePatchOutput)
}

// SecretName is the name of the secret.
func (o AgentSpecHttpTlsCertificatePatchPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpTlsCertificatePatch) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// TLS defines options for configuring TLS for HTTP.
type AgentSpecHttpTlsPatch struct {
	Certificate           *AgentSpecHttpTlsCertificatePatch           `pulumi:"certificate"`
	SelfSignedCertificate *AgentSpecHttpTlsSelfSignedCertificatePatch `pulumi:"selfSignedCertificate"`
}

// AgentSpecHttpTlsPatchInput is an input type that accepts AgentSpecHttpTlsPatchArgs and AgentSpecHttpTlsPatchOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsPatchInput` via:
//
//	AgentSpecHttpTlsPatchArgs{...}
type AgentSpecHttpTlsPatchInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsPatchOutput() AgentSpecHttpTlsPatchOutput
	ToAgentSpecHttpTlsPatchOutputWithContext(context.Context) AgentSpecHttpTlsPatchOutput
}

// TLS defines options for configuring TLS for HTTP.
type AgentSpecHttpTlsPatchArgs struct {
	Certificate           AgentSpecHttpTlsCertificatePatchPtrInput           `pulumi:"certificate"`
	SelfSignedCertificate AgentSpecHttpTlsSelfSignedCertificatePatchPtrInput `pulumi:"selfSignedCertificate"`
}

func (AgentSpecHttpTlsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTlsPatch)(nil)).Elem()
}

func (i AgentSpecHttpTlsPatchArgs) ToAgentSpecHttpTlsPatchOutput() AgentSpecHttpTlsPatchOutput {
	return i.ToAgentSpecHttpTlsPatchOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsPatchArgs) ToAgentSpecHttpTlsPatchOutputWithContext(ctx context.Context) AgentSpecHttpTlsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsPatchOutput)
}

func (i AgentSpecHttpTlsPatchArgs) ToAgentSpecHttpTlsPatchPtrOutput() AgentSpecHttpTlsPatchPtrOutput {
	return i.ToAgentSpecHttpTlsPatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsPatchArgs) ToAgentSpecHttpTlsPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsPatchOutput).ToAgentSpecHttpTlsPatchPtrOutputWithContext(ctx)
}

// AgentSpecHttpTlsPatchPtrInput is an input type that accepts AgentSpecHttpTlsPatchArgs, AgentSpecHttpTlsPatchPtr and AgentSpecHttpTlsPatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsPatchPtrInput` via:
//
//	        AgentSpecHttpTlsPatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpTlsPatchPtrInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsPatchPtrOutput() AgentSpecHttpTlsPatchPtrOutput
	ToAgentSpecHttpTlsPatchPtrOutputWithContext(context.Context) AgentSpecHttpTlsPatchPtrOutput
}

type agentSpecHttpTlsPatchPtrType AgentSpecHttpTlsPatchArgs

func AgentSpecHttpTlsPatchPtr(v *AgentSpecHttpTlsPatchArgs) AgentSpecHttpTlsPatchPtrInput {
	return (*agentSpecHttpTlsPatchPtrType)(v)
}

func (*agentSpecHttpTlsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpTlsPatch)(nil)).Elem()
}

func (i *agentSpecHttpTlsPatchPtrType) ToAgentSpecHttpTlsPatchPtrOutput() AgentSpecHttpTlsPatchPtrOutput {
	return i.ToAgentSpecHttpTlsPatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpTlsPatchPtrType) ToAgentSpecHttpTlsPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsPatchPtrOutput)
}

// TLS defines options for configuring TLS for HTTP.
type AgentSpecHttpTlsPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTlsPatch)(nil)).Elem()
}

func (o AgentSpecHttpTlsPatchOutput) ToAgentSpecHttpTlsPatchOutput() AgentSpecHttpTlsPatchOutput {
	return o
}

func (o AgentSpecHttpTlsPatchOutput) ToAgentSpecHttpTlsPatchOutputWithContext(ctx context.Context) AgentSpecHttpTlsPatchOutput {
	return o
}

func (o AgentSpecHttpTlsPatchOutput) ToAgentSpecHttpTlsPatchPtrOutput() AgentSpecHttpTlsPatchPtrOutput {
	return o.ToAgentSpecHttpTlsPatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpTlsPatchOutput) ToAgentSpecHttpTlsPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpTlsPatch) *AgentSpecHttpTlsPatch {
		return &v
	}).(AgentSpecHttpTlsPatchPtrOutput)
}

func (o AgentSpecHttpTlsPatchOutput) Certificate() AgentSpecHttpTlsCertificatePatchPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpTlsPatch) *AgentSpecHttpTlsCertificatePatch { return v.Certificate }).(AgentSpecHttpTlsCertificatePatchPtrOutput)
}

func (o AgentSpecHttpTlsPatchOutput) SelfSignedCertificate() AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpTlsPatch) *AgentSpecHttpTlsSelfSignedCertificatePatch {
		return v.SelfSignedCertificate
	}).(AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput)
}

type AgentSpecHttpTlsPatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpTlsPatch)(nil)).Elem()
}

func (o AgentSpecHttpTlsPatchPtrOutput) ToAgentSpecHttpTlsPatchPtrOutput() AgentSpecHttpTlsPatchPtrOutput {
	return o
}

func (o AgentSpecHttpTlsPatchPtrOutput) ToAgentSpecHttpTlsPatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsPatchPtrOutput {
	return o
}

func (o AgentSpecHttpTlsPatchPtrOutput) Elem() AgentSpecHttpTlsPatchOutput {
	return o.ApplyT(func(v *AgentSpecHttpTlsPatch) AgentSpecHttpTlsPatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpTlsPatch
		return ret
	}).(AgentSpecHttpTlsPatchOutput)
}

func (o AgentSpecHttpTlsPatchPtrOutput) Certificate() AgentSpecHttpTlsCertificatePatchPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpTlsPatch) *AgentSpecHttpTlsCertificatePatch {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(AgentSpecHttpTlsCertificatePatchPtrOutput)
}

func (o AgentSpecHttpTlsPatchPtrOutput) SelfSignedCertificate() AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpTlsPatch) *AgentSpecHttpTlsSelfSignedCertificatePatch {
		if v == nil {
			return nil
		}
		return v.SelfSignedCertificate
	}).(AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput)
}

// SelfSignedCertificate allows configuring the self-signed certificate generated by the operator.
type AgentSpecHttpTlsSelfSignedCertificate struct {
	// Disabled indicates that the provisioning of the self-signed certifcate should be disabled.
	Disabled *bool `pulumi:"disabled"`
	// SubjectAlternativeNames is a list of SANs to include in the generated HTTP TLS certificate.
	SubjectAltNames []AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames `pulumi:"subjectAltNames"`
}

// AgentSpecHttpTlsSelfSignedCertificateInput is an input type that accepts AgentSpecHttpTlsSelfSignedCertificateArgs and AgentSpecHttpTlsSelfSignedCertificateOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsSelfSignedCertificateInput` via:
//
//	AgentSpecHttpTlsSelfSignedCertificateArgs{...}
type AgentSpecHttpTlsSelfSignedCertificateInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsSelfSignedCertificateOutput() AgentSpecHttpTlsSelfSignedCertificateOutput
	ToAgentSpecHttpTlsSelfSignedCertificateOutputWithContext(context.Context) AgentSpecHttpTlsSelfSignedCertificateOutput
}

// SelfSignedCertificate allows configuring the self-signed certificate generated by the operator.
type AgentSpecHttpTlsSelfSignedCertificateArgs struct {
	// Disabled indicates that the provisioning of the self-signed certifcate should be disabled.
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// SubjectAlternativeNames is a list of SANs to include in the generated HTTP TLS certificate.
	SubjectAltNames AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayInput `pulumi:"subjectAltNames"`
}

func (AgentSpecHttpTlsSelfSignedCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificate)(nil)).Elem()
}

func (i AgentSpecHttpTlsSelfSignedCertificateArgs) ToAgentSpecHttpTlsSelfSignedCertificateOutput() AgentSpecHttpTlsSelfSignedCertificateOutput {
	return i.ToAgentSpecHttpTlsSelfSignedCertificateOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsSelfSignedCertificateArgs) ToAgentSpecHttpTlsSelfSignedCertificateOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsSelfSignedCertificateOutput)
}

func (i AgentSpecHttpTlsSelfSignedCertificateArgs) ToAgentSpecHttpTlsSelfSignedCertificatePtrOutput() AgentSpecHttpTlsSelfSignedCertificatePtrOutput {
	return i.ToAgentSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsSelfSignedCertificateArgs) ToAgentSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsSelfSignedCertificateOutput).ToAgentSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(ctx)
}

// AgentSpecHttpTlsSelfSignedCertificatePtrInput is an input type that accepts AgentSpecHttpTlsSelfSignedCertificateArgs, AgentSpecHttpTlsSelfSignedCertificatePtr and AgentSpecHttpTlsSelfSignedCertificatePtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsSelfSignedCertificatePtrInput` via:
//
//	        AgentSpecHttpTlsSelfSignedCertificateArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpTlsSelfSignedCertificatePtrInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsSelfSignedCertificatePtrOutput() AgentSpecHttpTlsSelfSignedCertificatePtrOutput
	ToAgentSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(context.Context) AgentSpecHttpTlsSelfSignedCertificatePtrOutput
}

type agentSpecHttpTlsSelfSignedCertificatePtrType AgentSpecHttpTlsSelfSignedCertificateArgs

func AgentSpecHttpTlsSelfSignedCertificatePtr(v *AgentSpecHttpTlsSelfSignedCertificateArgs) AgentSpecHttpTlsSelfSignedCertificatePtrInput {
	return (*agentSpecHttpTlsSelfSignedCertificatePtrType)(v)
}

func (*agentSpecHttpTlsSelfSignedCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpTlsSelfSignedCertificate)(nil)).Elem()
}

func (i *agentSpecHttpTlsSelfSignedCertificatePtrType) ToAgentSpecHttpTlsSelfSignedCertificatePtrOutput() AgentSpecHttpTlsSelfSignedCertificatePtrOutput {
	return i.ToAgentSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpTlsSelfSignedCertificatePtrType) ToAgentSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsSelfSignedCertificatePtrOutput)
}

// SelfSignedCertificate allows configuring the self-signed certificate generated by the operator.
type AgentSpecHttpTlsSelfSignedCertificateOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsSelfSignedCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificate)(nil)).Elem()
}

func (o AgentSpecHttpTlsSelfSignedCertificateOutput) ToAgentSpecHttpTlsSelfSignedCertificateOutput() AgentSpecHttpTlsSelfSignedCertificateOutput {
	return o
}

func (o AgentSpecHttpTlsSelfSignedCertificateOutput) ToAgentSpecHttpTlsSelfSignedCertificateOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificateOutput {
	return o
}

func (o AgentSpecHttpTlsSelfSignedCertificateOutput) ToAgentSpecHttpTlsSelfSignedCertificatePtrOutput() AgentSpecHttpTlsSelfSignedCertificatePtrOutput {
	return o.ToAgentSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpTlsSelfSignedCertificateOutput) ToAgentSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpTlsSelfSignedCertificate) *AgentSpecHttpTlsSelfSignedCertificate {
		return &v
	}).(AgentSpecHttpTlsSelfSignedCertificatePtrOutput)
}

// Disabled indicates that the provisioning of the self-signed certifcate should be disabled.
func (o AgentSpecHttpTlsSelfSignedCertificateOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpTlsSelfSignedCertificate) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// SubjectAlternativeNames is a list of SANs to include in the generated HTTP TLS certificate.
func (o AgentSpecHttpTlsSelfSignedCertificateOutput) SubjectAltNames() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput {
	return o.ApplyT(func(v AgentSpecHttpTlsSelfSignedCertificate) []AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames {
		return v.SubjectAltNames
	}).(AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput)
}

type AgentSpecHttpTlsSelfSignedCertificatePtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsSelfSignedCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpTlsSelfSignedCertificate)(nil)).Elem()
}

func (o AgentSpecHttpTlsSelfSignedCertificatePtrOutput) ToAgentSpecHttpTlsSelfSignedCertificatePtrOutput() AgentSpecHttpTlsSelfSignedCertificatePtrOutput {
	return o
}

func (o AgentSpecHttpTlsSelfSignedCertificatePtrOutput) ToAgentSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificatePtrOutput {
	return o
}

func (o AgentSpecHttpTlsSelfSignedCertificatePtrOutput) Elem() AgentSpecHttpTlsSelfSignedCertificateOutput {
	return o.ApplyT(func(v *AgentSpecHttpTlsSelfSignedCertificate) AgentSpecHttpTlsSelfSignedCertificate {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpTlsSelfSignedCertificate
		return ret
	}).(AgentSpecHttpTlsSelfSignedCertificateOutput)
}

// Disabled indicates that the provisioning of the self-signed certifcate should be disabled.
func (o AgentSpecHttpTlsSelfSignedCertificatePtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpTlsSelfSignedCertificate) *bool {
		if v == nil {
			return nil
		}
		return v.Disabled
	}).(pulumi.BoolPtrOutput)
}

// SubjectAlternativeNames is a list of SANs to include in the generated HTTP TLS certificate.
func (o AgentSpecHttpTlsSelfSignedCertificatePtrOutput) SubjectAltNames() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput {
	return o.ApplyT(func(v *AgentSpecHttpTlsSelfSignedCertificate) []AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames {
		if v == nil {
			return nil
		}
		return v.SubjectAltNames
	}).(AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput)
}

// SelfSignedCertificate allows configuring the self-signed certificate generated by the operator.
type AgentSpecHttpTlsSelfSignedCertificatePatch struct {
	// Disabled indicates that the provisioning of the self-signed certifcate should be disabled.
	Disabled *bool `pulumi:"disabled"`
	// SubjectAlternativeNames is a list of SANs to include in the generated HTTP TLS certificate.
	SubjectAltNames []AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatch `pulumi:"subjectAltNames"`
}

// AgentSpecHttpTlsSelfSignedCertificatePatchInput is an input type that accepts AgentSpecHttpTlsSelfSignedCertificatePatchArgs and AgentSpecHttpTlsSelfSignedCertificatePatchOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsSelfSignedCertificatePatchInput` via:
//
//	AgentSpecHttpTlsSelfSignedCertificatePatchArgs{...}
type AgentSpecHttpTlsSelfSignedCertificatePatchInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsSelfSignedCertificatePatchOutput() AgentSpecHttpTlsSelfSignedCertificatePatchOutput
	ToAgentSpecHttpTlsSelfSignedCertificatePatchOutputWithContext(context.Context) AgentSpecHttpTlsSelfSignedCertificatePatchOutput
}

// SelfSignedCertificate allows configuring the self-signed certificate generated by the operator.
type AgentSpecHttpTlsSelfSignedCertificatePatchArgs struct {
	// Disabled indicates that the provisioning of the self-signed certifcate should be disabled.
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// SubjectAlternativeNames is a list of SANs to include in the generated HTTP TLS certificate.
	SubjectAltNames AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayInput `pulumi:"subjectAltNames"`
}

func (AgentSpecHttpTlsSelfSignedCertificatePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificatePatch)(nil)).Elem()
}

func (i AgentSpecHttpTlsSelfSignedCertificatePatchArgs) ToAgentSpecHttpTlsSelfSignedCertificatePatchOutput() AgentSpecHttpTlsSelfSignedCertificatePatchOutput {
	return i.ToAgentSpecHttpTlsSelfSignedCertificatePatchOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsSelfSignedCertificatePatchArgs) ToAgentSpecHttpTlsSelfSignedCertificatePatchOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificatePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsSelfSignedCertificatePatchOutput)
}

func (i AgentSpecHttpTlsSelfSignedCertificatePatchArgs) ToAgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput() AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput {
	return i.ToAgentSpecHttpTlsSelfSignedCertificatePatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsSelfSignedCertificatePatchArgs) ToAgentSpecHttpTlsSelfSignedCertificatePatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsSelfSignedCertificatePatchOutput).ToAgentSpecHttpTlsSelfSignedCertificatePatchPtrOutputWithContext(ctx)
}

// AgentSpecHttpTlsSelfSignedCertificatePatchPtrInput is an input type that accepts AgentSpecHttpTlsSelfSignedCertificatePatchArgs, AgentSpecHttpTlsSelfSignedCertificatePatchPtr and AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsSelfSignedCertificatePatchPtrInput` via:
//
//	        AgentSpecHttpTlsSelfSignedCertificatePatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpTlsSelfSignedCertificatePatchPtrInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput() AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput
	ToAgentSpecHttpTlsSelfSignedCertificatePatchPtrOutputWithContext(context.Context) AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput
}

type agentSpecHttpTlsSelfSignedCertificatePatchPtrType AgentSpecHttpTlsSelfSignedCertificatePatchArgs

func AgentSpecHttpTlsSelfSignedCertificatePatchPtr(v *AgentSpecHttpTlsSelfSignedCertificatePatchArgs) AgentSpecHttpTlsSelfSignedCertificatePatchPtrInput {
	return (*agentSpecHttpTlsSelfSignedCertificatePatchPtrType)(v)
}

func (*agentSpecHttpTlsSelfSignedCertificatePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpTlsSelfSignedCertificatePatch)(nil)).Elem()
}

func (i *agentSpecHttpTlsSelfSignedCertificatePatchPtrType) ToAgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput() AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput {
	return i.ToAgentSpecHttpTlsSelfSignedCertificatePatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpTlsSelfSignedCertificatePatchPtrType) ToAgentSpecHttpTlsSelfSignedCertificatePatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput)
}

// SelfSignedCertificate allows configuring the self-signed certificate generated by the operator.
type AgentSpecHttpTlsSelfSignedCertificatePatchOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsSelfSignedCertificatePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificatePatch)(nil)).Elem()
}

func (o AgentSpecHttpTlsSelfSignedCertificatePatchOutput) ToAgentSpecHttpTlsSelfSignedCertificatePatchOutput() AgentSpecHttpTlsSelfSignedCertificatePatchOutput {
	return o
}

func (o AgentSpecHttpTlsSelfSignedCertificatePatchOutput) ToAgentSpecHttpTlsSelfSignedCertificatePatchOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificatePatchOutput {
	return o
}

func (o AgentSpecHttpTlsSelfSignedCertificatePatchOutput) ToAgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput() AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput {
	return o.ToAgentSpecHttpTlsSelfSignedCertificatePatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpTlsSelfSignedCertificatePatchOutput) ToAgentSpecHttpTlsSelfSignedCertificatePatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpTlsSelfSignedCertificatePatch) *AgentSpecHttpTlsSelfSignedCertificatePatch {
		return &v
	}).(AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput)
}

// Disabled indicates that the provisioning of the self-signed certifcate should be disabled.
func (o AgentSpecHttpTlsSelfSignedCertificatePatchOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpTlsSelfSignedCertificatePatch) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// SubjectAlternativeNames is a list of SANs to include in the generated HTTP TLS certificate.
func (o AgentSpecHttpTlsSelfSignedCertificatePatchOutput) SubjectAltNames() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutput {
	return o.ApplyT(func(v AgentSpecHttpTlsSelfSignedCertificatePatch) []AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatch {
		return v.SubjectAltNames
	}).(AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutput)
}

type AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpTlsSelfSignedCertificatePatch)(nil)).Elem()
}

func (o AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput) ToAgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput() AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput {
	return o
}

func (o AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput) ToAgentSpecHttpTlsSelfSignedCertificatePatchPtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput {
	return o
}

func (o AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput) Elem() AgentSpecHttpTlsSelfSignedCertificatePatchOutput {
	return o.ApplyT(func(v *AgentSpecHttpTlsSelfSignedCertificatePatch) AgentSpecHttpTlsSelfSignedCertificatePatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpTlsSelfSignedCertificatePatch
		return ret
	}).(AgentSpecHttpTlsSelfSignedCertificatePatchOutput)
}

// Disabled indicates that the provisioning of the self-signed certifcate should be disabled.
func (o AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpTlsSelfSignedCertificatePatch) *bool {
		if v == nil {
			return nil
		}
		return v.Disabled
	}).(pulumi.BoolPtrOutput)
}

// SubjectAlternativeNames is a list of SANs to include in the generated HTTP TLS certificate.
func (o AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput) SubjectAltNames() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutput {
	return o.ApplyT(func(v *AgentSpecHttpTlsSelfSignedCertificatePatch) []AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatch {
		if v == nil {
			return nil
		}
		return v.SubjectAltNames
	}).(AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutput)
}

// SubjectAlternativeName represents a SAN entry in a x509 certificate.
type AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames struct {
	// DNS is the DNS name of the subject.
	Dns *string `pulumi:"dns"`
	// IP is the IP address of the subject.
	Ip *string `pulumi:"ip"`
}

// AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesInput is an input type that accepts AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArgs and AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesInput` via:
//
//	AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArgs{...}
type AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput
	ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutputWithContext(context.Context) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput
}

// SubjectAlternativeName represents a SAN entry in a x509 certificate.
type AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArgs struct {
	// DNS is the DNS name of the subject.
	Dns pulumi.StringPtrInput `pulumi:"dns"`
	// IP is the IP address of the subject.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames)(nil)).Elem()
}

func (i AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArgs) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput {
	return i.ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArgs) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput)
}

// AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayInput is an input type that accepts AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArray and AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayInput` via:
//
//	AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArray{ AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArgs{...} }
type AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput
	ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutputWithContext(context.Context) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput
}

type AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArray []AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesInput

func (AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames)(nil)).Elem()
}

func (i AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArray) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput {
	return i.ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArray) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput)
}

// SubjectAlternativeName represents a SAN entry in a x509 certificate.
type AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames)(nil)).Elem()
}

func (o AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput {
	return o
}

func (o AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput {
	return o
}

// DNS is the DNS name of the subject.
func (o AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput) Dns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames) *string { return v.Dns }).(pulumi.StringPtrOutput)
}

// IP is the IP address of the subject.
func (o AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames)(nil)).Elem()
}

func (o AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput {
	return o
}

func (o AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput {
	return o
}

func (o AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput) Index(i pulumi.IntInput) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames {
		return vs[0].([]AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames)[vs[1].(int)]
	}).(AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput)
}

// SubjectAlternativeName represents a SAN entry in a x509 certificate.
type AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatch struct {
	// DNS is the DNS name of the subject.
	Dns *string `pulumi:"dns"`
	// IP is the IP address of the subject.
	Ip *string `pulumi:"ip"`
}

// AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchInput is an input type that accepts AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArgs and AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchInput` via:
//
//	AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArgs{...}
type AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutput() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutput
	ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutputWithContext(context.Context) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutput
}

// SubjectAlternativeName represents a SAN entry in a x509 certificate.
type AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArgs struct {
	// DNS is the DNS name of the subject.
	Dns pulumi.StringPtrInput `pulumi:"dns"`
	// IP is the IP address of the subject.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatch)(nil)).Elem()
}

func (i AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArgs) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutput() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutput {
	return i.ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArgs) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutput)
}

// AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayInput is an input type that accepts AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArray and AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayInput` via:
//
//	AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArray{ AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArgs{...} }
type AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutput() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutput
	ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutputWithContext(context.Context) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutput
}

type AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArray []AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchInput

func (AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatch)(nil)).Elem()
}

func (i AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArray) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutput() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutput {
	return i.ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArray) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutput)
}

// SubjectAlternativeName represents a SAN entry in a x509 certificate.
type AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatch)(nil)).Elem()
}

func (o AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutput) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutput() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutput {
	return o
}

func (o AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutput) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutput {
	return o
}

// DNS is the DNS name of the subject.
func (o AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutput) Dns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatch) *string { return v.Dns }).(pulumi.StringPtrOutput)
}

// IP is the IP address of the subject.
func (o AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatch) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatch)(nil)).Elem()
}

func (o AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutput) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutput() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutput {
	return o
}

func (o AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutput) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutput {
	return o
}

func (o AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutput) Index(i pulumi.IntInput) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatch {
		return vs[0].([]AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatch)[vs[1].(int)]
	}).(AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutput)
}

// KibanaRef is a reference to Kibana where Fleet should be set up and this Agent should be enrolled. Don't set
// unless `mode` is set to `fleet`.
type AgentSpecKibanaRef struct {
	// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
	Name *string `pulumi:"name"`
	// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
	Namespace *string `pulumi:"namespace"`
	// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
	// Elastic resource not managed by the operator. The referenced secret must contain the following:
	// - `url`: the URL to reach the Elastic resource
	// - `username`: the username of the user to be authenticated to the Elastic resource
	// - `password`: the password of the user to be authenticated to the Elastic resource
	// - `ca.crt`: the CA certificate in PEM format (optional)
	// - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
	//   This field cannot be used in combination with the other fields name, namespace or serviceName.
	SecretName *string `pulumi:"secretName"`
	// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
	// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
	// the referenced resource is used.
	ServiceName *string `pulumi:"serviceName"`
}

// AgentSpecKibanaRefInput is an input type that accepts AgentSpecKibanaRefArgs and AgentSpecKibanaRefOutput values.
// You can construct a concrete instance of `AgentSpecKibanaRefInput` via:
//
//	AgentSpecKibanaRefArgs{...}
type AgentSpecKibanaRefInput interface {
	pulumi.Input

	ToAgentSpecKibanaRefOutput() AgentSpecKibanaRefOutput
	ToAgentSpecKibanaRefOutputWithContext(context.Context) AgentSpecKibanaRefOutput
}

// KibanaRef is a reference to Kibana where Fleet should be set up and this Agent should be enrolled. Don't set
// unless `mode` is set to `fleet`.
type AgentSpecKibanaRefArgs struct {
	// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
	// Elastic resource not managed by the operator. The referenced secret must contain the following:
	// - `url`: the URL to reach the Elastic resource
	// - `username`: the username of the user to be authenticated to the Elastic resource
	// - `password`: the password of the user to be authenticated to the Elastic resource
	// - `ca.crt`: the CA certificate in PEM format (optional)
	// - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
	//   This field cannot be used in combination with the other fields name, namespace or serviceName.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
	// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
	// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
	// the referenced resource is used.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (AgentSpecKibanaRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecKibanaRef)(nil)).Elem()
}

func (i AgentSpecKibanaRefArgs) ToAgentSpecKibanaRefOutput() AgentSpecKibanaRefOutput {
	return i.ToAgentSpecKibanaRefOutputWithContext(context.Background())
}

func (i AgentSpecKibanaRefArgs) ToAgentSpecKibanaRefOutputWithContext(ctx context.Context) AgentSpecKibanaRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecKibanaRefOutput)
}

func (i AgentSpecKibanaRefArgs) ToAgentSpecKibanaRefPtrOutput() AgentSpecKibanaRefPtrOutput {
	return i.ToAgentSpecKibanaRefPtrOutputWithContext(context.Background())
}

func (i AgentSpecKibanaRefArgs) ToAgentSpecKibanaRefPtrOutputWithContext(ctx context.Context) AgentSpecKibanaRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecKibanaRefOutput).ToAgentSpecKibanaRefPtrOutputWithContext(ctx)
}

// AgentSpecKibanaRefPtrInput is an input type that accepts AgentSpecKibanaRefArgs, AgentSpecKibanaRefPtr and AgentSpecKibanaRefPtrOutput values.
// You can construct a concrete instance of `AgentSpecKibanaRefPtrInput` via:
//
//	        AgentSpecKibanaRefArgs{...}
//
//	or:
//
//	        nil
type AgentSpecKibanaRefPtrInput interface {
	pulumi.Input

	ToAgentSpecKibanaRefPtrOutput() AgentSpecKibanaRefPtrOutput
	ToAgentSpecKibanaRefPtrOutputWithContext(context.Context) AgentSpecKibanaRefPtrOutput
}

type agentSpecKibanaRefPtrType AgentSpecKibanaRefArgs

func AgentSpecKibanaRefPtr(v *AgentSpecKibanaRefArgs) AgentSpecKibanaRefPtrInput {
	return (*agentSpecKibanaRefPtrType)(v)
}

func (*agentSpecKibanaRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecKibanaRef)(nil)).Elem()
}

func (i *agentSpecKibanaRefPtrType) ToAgentSpecKibanaRefPtrOutput() AgentSpecKibanaRefPtrOutput {
	return i.ToAgentSpecKibanaRefPtrOutputWithContext(context.Background())
}

func (i *agentSpecKibanaRefPtrType) ToAgentSpecKibanaRefPtrOutputWithContext(ctx context.Context) AgentSpecKibanaRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecKibanaRefPtrOutput)
}

// KibanaRef is a reference to Kibana where Fleet should be set up and this Agent should be enrolled. Don't set
// unless `mode` is set to `fleet`.
type AgentSpecKibanaRefOutput struct{ *pulumi.OutputState }

func (AgentSpecKibanaRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecKibanaRef)(nil)).Elem()
}

func (o AgentSpecKibanaRefOutput) ToAgentSpecKibanaRefOutput() AgentSpecKibanaRefOutput {
	return o
}

func (o AgentSpecKibanaRefOutput) ToAgentSpecKibanaRefOutputWithContext(ctx context.Context) AgentSpecKibanaRefOutput {
	return o
}

func (o AgentSpecKibanaRefOutput) ToAgentSpecKibanaRefPtrOutput() AgentSpecKibanaRefPtrOutput {
	return o.ToAgentSpecKibanaRefPtrOutputWithContext(context.Background())
}

func (o AgentSpecKibanaRefOutput) ToAgentSpecKibanaRefPtrOutputWithContext(ctx context.Context) AgentSpecKibanaRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecKibanaRef) *AgentSpecKibanaRef {
		return &v
	}).(AgentSpecKibanaRefPtrOutput)
}

// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
func (o AgentSpecKibanaRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecKibanaRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
func (o AgentSpecKibanaRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecKibanaRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
// Elastic resource not managed by the operator. The referenced secret must contain the following:
//   - `url`: the URL to reach the Elastic resource
//   - `username`: the username of the user to be authenticated to the Elastic resource
//   - `password`: the password of the user to be authenticated to the Elastic resource
//   - `ca.crt`: the CA certificate in PEM format (optional)
//   - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
//     This field cannot be used in combination with the other fields name, namespace or serviceName.
func (o AgentSpecKibanaRefOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecKibanaRef) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
// the referenced resource is used.
func (o AgentSpecKibanaRefOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecKibanaRef) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type AgentSpecKibanaRefPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecKibanaRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecKibanaRef)(nil)).Elem()
}

func (o AgentSpecKibanaRefPtrOutput) ToAgentSpecKibanaRefPtrOutput() AgentSpecKibanaRefPtrOutput {
	return o
}

func (o AgentSpecKibanaRefPtrOutput) ToAgentSpecKibanaRefPtrOutputWithContext(ctx context.Context) AgentSpecKibanaRefPtrOutput {
	return o
}

func (o AgentSpecKibanaRefPtrOutput) Elem() AgentSpecKibanaRefOutput {
	return o.ApplyT(func(v *AgentSpecKibanaRef) AgentSpecKibanaRef {
		if v != nil {
			return *v
		}
		var ret AgentSpecKibanaRef
		return ret
	}).(AgentSpecKibanaRefOutput)
}

// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
func (o AgentSpecKibanaRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecKibanaRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
func (o AgentSpecKibanaRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecKibanaRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
// Elastic resource not managed by the operator. The referenced secret must contain the following:
//   - `url`: the URL to reach the Elastic resource
//   - `username`: the username of the user to be authenticated to the Elastic resource
//   - `password`: the password of the user to be authenticated to the Elastic resource
//   - `ca.crt`: the CA certificate in PEM format (optional)
//   - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
//     This field cannot be used in combination with the other fields name, namespace or serviceName.
func (o AgentSpecKibanaRefPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecKibanaRef) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
// the referenced resource is used.
func (o AgentSpecKibanaRefPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecKibanaRef) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// KibanaRef is a reference to Kibana where Fleet should be set up and this Agent should be enrolled. Don't set
// unless `mode` is set to `fleet`.
type AgentSpecKibanaRefPatch struct {
	// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
	Name *string `pulumi:"name"`
	// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
	Namespace *string `pulumi:"namespace"`
	// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
	// Elastic resource not managed by the operator. The referenced secret must contain the following:
	// - `url`: the URL to reach the Elastic resource
	// - `username`: the username of the user to be authenticated to the Elastic resource
	// - `password`: the password of the user to be authenticated to the Elastic resource
	// - `ca.crt`: the CA certificate in PEM format (optional)
	// - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
	//   This field cannot be used in combination with the other fields name, namespace or serviceName.
	SecretName *string `pulumi:"secretName"`
	// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
	// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
	// the referenced resource is used.
	ServiceName *string `pulumi:"serviceName"`
}

// AgentSpecKibanaRefPatchInput is an input type that accepts AgentSpecKibanaRefPatchArgs and AgentSpecKibanaRefPatchOutput values.
// You can construct a concrete instance of `AgentSpecKibanaRefPatchInput` via:
//
//	AgentSpecKibanaRefPatchArgs{...}
type AgentSpecKibanaRefPatchInput interface {
	pulumi.Input

	ToAgentSpecKibanaRefPatchOutput() AgentSpecKibanaRefPatchOutput
	ToAgentSpecKibanaRefPatchOutputWithContext(context.Context) AgentSpecKibanaRefPatchOutput
}

// KibanaRef is a reference to Kibana where Fleet should be set up and this Agent should be enrolled. Don't set
// unless `mode` is set to `fleet`.
type AgentSpecKibanaRefPatchArgs struct {
	// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
	// Elastic resource not managed by the operator. The referenced secret must contain the following:
	// - `url`: the URL to reach the Elastic resource
	// - `username`: the username of the user to be authenticated to the Elastic resource
	// - `password`: the password of the user to be authenticated to the Elastic resource
	// - `ca.crt`: the CA certificate in PEM format (optional)
	// - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
	//   This field cannot be used in combination with the other fields name, namespace or serviceName.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
	// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
	// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
	// the referenced resource is used.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (AgentSpecKibanaRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecKibanaRefPatch)(nil)).Elem()
}

func (i AgentSpecKibanaRefPatchArgs) ToAgentSpecKibanaRefPatchOutput() AgentSpecKibanaRefPatchOutput {
	return i.ToAgentSpecKibanaRefPatchOutputWithContext(context.Background())
}

func (i AgentSpecKibanaRefPatchArgs) ToAgentSpecKibanaRefPatchOutputWithContext(ctx context.Context) AgentSpecKibanaRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecKibanaRefPatchOutput)
}

func (i AgentSpecKibanaRefPatchArgs) ToAgentSpecKibanaRefPatchPtrOutput() AgentSpecKibanaRefPatchPtrOutput {
	return i.ToAgentSpecKibanaRefPatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecKibanaRefPatchArgs) ToAgentSpecKibanaRefPatchPtrOutputWithContext(ctx context.Context) AgentSpecKibanaRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecKibanaRefPatchOutput).ToAgentSpecKibanaRefPatchPtrOutputWithContext(ctx)
}

// AgentSpecKibanaRefPatchPtrInput is an input type that accepts AgentSpecKibanaRefPatchArgs, AgentSpecKibanaRefPatchPtr and AgentSpecKibanaRefPatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecKibanaRefPatchPtrInput` via:
//
//	        AgentSpecKibanaRefPatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecKibanaRefPatchPtrInput interface {
	pulumi.Input

	ToAgentSpecKibanaRefPatchPtrOutput() AgentSpecKibanaRefPatchPtrOutput
	ToAgentSpecKibanaRefPatchPtrOutputWithContext(context.Context) AgentSpecKibanaRefPatchPtrOutput
}

type agentSpecKibanaRefPatchPtrType AgentSpecKibanaRefPatchArgs

func AgentSpecKibanaRefPatchPtr(v *AgentSpecKibanaRefPatchArgs) AgentSpecKibanaRefPatchPtrInput {
	return (*agentSpecKibanaRefPatchPtrType)(v)
}

func (*agentSpecKibanaRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecKibanaRefPatch)(nil)).Elem()
}

func (i *agentSpecKibanaRefPatchPtrType) ToAgentSpecKibanaRefPatchPtrOutput() AgentSpecKibanaRefPatchPtrOutput {
	return i.ToAgentSpecKibanaRefPatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecKibanaRefPatchPtrType) ToAgentSpecKibanaRefPatchPtrOutputWithContext(ctx context.Context) AgentSpecKibanaRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecKibanaRefPatchPtrOutput)
}

// KibanaRef is a reference to Kibana where Fleet should be set up and this Agent should be enrolled. Don't set
// unless `mode` is set to `fleet`.
type AgentSpecKibanaRefPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecKibanaRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecKibanaRefPatch)(nil)).Elem()
}

func (o AgentSpecKibanaRefPatchOutput) ToAgentSpecKibanaRefPatchOutput() AgentSpecKibanaRefPatchOutput {
	return o
}

func (o AgentSpecKibanaRefPatchOutput) ToAgentSpecKibanaRefPatchOutputWithContext(ctx context.Context) AgentSpecKibanaRefPatchOutput {
	return o
}

func (o AgentSpecKibanaRefPatchOutput) ToAgentSpecKibanaRefPatchPtrOutput() AgentSpecKibanaRefPatchPtrOutput {
	return o.ToAgentSpecKibanaRefPatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecKibanaRefPatchOutput) ToAgentSpecKibanaRefPatchPtrOutputWithContext(ctx context.Context) AgentSpecKibanaRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecKibanaRefPatch) *AgentSpecKibanaRefPatch {
		return &v
	}).(AgentSpecKibanaRefPatchPtrOutput)
}

// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
func (o AgentSpecKibanaRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecKibanaRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
func (o AgentSpecKibanaRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecKibanaRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
// Elastic resource not managed by the operator. The referenced secret must contain the following:
//   - `url`: the URL to reach the Elastic resource
//   - `username`: the username of the user to be authenticated to the Elastic resource
//   - `password`: the password of the user to be authenticated to the Elastic resource
//   - `ca.crt`: the CA certificate in PEM format (optional)
//   - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
//     This field cannot be used in combination with the other fields name, namespace or serviceName.
func (o AgentSpecKibanaRefPatchOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecKibanaRefPatch) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
// the referenced resource is used.
func (o AgentSpecKibanaRefPatchOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecKibanaRefPatch) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type AgentSpecKibanaRefPatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecKibanaRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecKibanaRefPatch)(nil)).Elem()
}

func (o AgentSpecKibanaRefPatchPtrOutput) ToAgentSpecKibanaRefPatchPtrOutput() AgentSpecKibanaRefPatchPtrOutput {
	return o
}

func (o AgentSpecKibanaRefPatchPtrOutput) ToAgentSpecKibanaRefPatchPtrOutputWithContext(ctx context.Context) AgentSpecKibanaRefPatchPtrOutput {
	return o
}

func (o AgentSpecKibanaRefPatchPtrOutput) Elem() AgentSpecKibanaRefPatchOutput {
	return o.ApplyT(func(v *AgentSpecKibanaRefPatch) AgentSpecKibanaRefPatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecKibanaRefPatch
		return ret
	}).(AgentSpecKibanaRefPatchOutput)
}

// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
func (o AgentSpecKibanaRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecKibanaRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
func (o AgentSpecKibanaRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecKibanaRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
// Elastic resource not managed by the operator. The referenced secret must contain the following:
//   - `url`: the URL to reach the Elastic resource
//   - `username`: the username of the user to be authenticated to the Elastic resource
//   - `password`: the password of the user to be authenticated to the Elastic resource
//   - `ca.crt`: the CA certificate in PEM format (optional)
//   - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
//     This field cannot be used in combination with the other fields name, namespace or serviceName.
func (o AgentSpecKibanaRefPatchPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecKibanaRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
// the referenced resource is used.
func (o AgentSpecKibanaRefPatchPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecKibanaRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// AgentSpec defines the desired state of the Agent
type AgentSpecPatch struct {
	// Config holds the Agent configuration. At most one of [`Config`, `ConfigRef`] can be specified.
	Config     map[string]interface{}    `pulumi:"config"`
	ConfigRef  *AgentSpecConfigRefPatch  `pulumi:"configRef"`
	DaemonSet  *AgentSpecDaemonSetPatch  `pulumi:"daemonSet"`
	Deployment *AgentSpecDeploymentPatch `pulumi:"deployment"`
	// ElasticsearchRefs is a reference to a list of Elasticsearch clusters running in the same Kubernetes cluster.
	// Due to existing limitations, only a single ES cluster is currently supported.
	ElasticsearchRefs []AgentSpecElasticsearchRefsPatch `pulumi:"elasticsearchRefs"`
	// FleetServerEnabled determines whether this Agent will launch Fleet Server. Don't set unless `mode` is set to `fleet`.
	FleetServerEnabled *bool                         `pulumi:"fleetServerEnabled"`
	FleetServerRef     *AgentSpecFleetServerRefPatch `pulumi:"fleetServerRef"`
	Http               *AgentSpecHttpPatch           `pulumi:"http"`
	// Image is the Agent Docker image to deploy. Version has to match the Agent in the image.
	Image     *string                  `pulumi:"image"`
	KibanaRef *AgentSpecKibanaRefPatch `pulumi:"kibanaRef"`
	// Mode specifies the source of configuration for the Agent. The configuration can be specified locally through
	// `config` or `configRef` (`standalone` mode), or come from Fleet during runtime (`fleet` mode).
	// Defaults to `standalone` mode.
	Mode *string `pulumi:"mode"`
	// PolicyID determines into which Agent Policy this Agent will be enrolled.
	// This field will become mandatory in a future release, default policies are deprecated since 8.1.0.
	PolicyID *string `pulumi:"policyID"`
	// RevisionHistoryLimit is the number of revisions to retain to allow rollback in the underlying DaemonSet or Deployment or StatefulSet.
	RevisionHistoryLimit *int `pulumi:"revisionHistoryLimit"`
	// SecureSettings is a list of references to Kubernetes Secrets containing sensitive configuration options for the Agent.
	// Secrets data can be then referenced in the Agent config using the Secret's keys or as specified in `Entries` field of
	// each SecureSetting.
	SecureSettings []AgentSpecSecureSettingsPatch `pulumi:"secureSettings"`
	// ServiceAccountName is used to check access from the current resource to an Elasticsearch resource in a different namespace.
	// Can only be used if ECK is enforcing RBAC on references.
	ServiceAccountName *string                    `pulumi:"serviceAccountName"`
	StatefulSet        *AgentSpecStatefulSetPatch `pulumi:"statefulSet"`
	// Version of the Agent.
	Version *string `pulumi:"version"`
}

// AgentSpecPatchInput is an input type that accepts AgentSpecPatchArgs and AgentSpecPatchOutput values.
// You can construct a concrete instance of `AgentSpecPatchInput` via:
//
//	AgentSpecPatchArgs{...}
type AgentSpecPatchInput interface {
	pulumi.Input

	ToAgentSpecPatchOutput() AgentSpecPatchOutput
	ToAgentSpecPatchOutputWithContext(context.Context) AgentSpecPatchOutput
}

// AgentSpec defines the desired state of the Agent
type AgentSpecPatchArgs struct {
	// Config holds the Agent configuration. At most one of [`Config`, `ConfigRef`] can be specified.
	Config     pulumi.MapInput                  `pulumi:"config"`
	ConfigRef  AgentSpecConfigRefPatchPtrInput  `pulumi:"configRef"`
	DaemonSet  AgentSpecDaemonSetPatchPtrInput  `pulumi:"daemonSet"`
	Deployment AgentSpecDeploymentPatchPtrInput `pulumi:"deployment"`
	// ElasticsearchRefs is a reference to a list of Elasticsearch clusters running in the same Kubernetes cluster.
	// Due to existing limitations, only a single ES cluster is currently supported.
	ElasticsearchRefs AgentSpecElasticsearchRefsPatchArrayInput `pulumi:"elasticsearchRefs"`
	// FleetServerEnabled determines whether this Agent will launch Fleet Server. Don't set unless `mode` is set to `fleet`.
	FleetServerEnabled pulumi.BoolPtrInput                  `pulumi:"fleetServerEnabled"`
	FleetServerRef     AgentSpecFleetServerRefPatchPtrInput `pulumi:"fleetServerRef"`
	Http               AgentSpecHttpPatchPtrInput           `pulumi:"http"`
	// Image is the Agent Docker image to deploy. Version has to match the Agent in the image.
	Image     pulumi.StringPtrInput           `pulumi:"image"`
	KibanaRef AgentSpecKibanaRefPatchPtrInput `pulumi:"kibanaRef"`
	// Mode specifies the source of configuration for the Agent. The configuration can be specified locally through
	// `config` or `configRef` (`standalone` mode), or come from Fleet during runtime (`fleet` mode).
	// Defaults to `standalone` mode.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// PolicyID determines into which Agent Policy this Agent will be enrolled.
	// This field will become mandatory in a future release, default policies are deprecated since 8.1.0.
	PolicyID pulumi.StringPtrInput `pulumi:"policyID"`
	// RevisionHistoryLimit is the number of revisions to retain to allow rollback in the underlying DaemonSet or Deployment or StatefulSet.
	RevisionHistoryLimit pulumi.IntPtrInput `pulumi:"revisionHistoryLimit"`
	// SecureSettings is a list of references to Kubernetes Secrets containing sensitive configuration options for the Agent.
	// Secrets data can be then referenced in the Agent config using the Secret's keys or as specified in `Entries` field of
	// each SecureSetting.
	SecureSettings AgentSpecSecureSettingsPatchArrayInput `pulumi:"secureSettings"`
	// ServiceAccountName is used to check access from the current resource to an Elasticsearch resource in a different namespace.
	// Can only be used if ECK is enforcing RBAC on references.
	ServiceAccountName pulumi.StringPtrInput             `pulumi:"serviceAccountName"`
	StatefulSet        AgentSpecStatefulSetPatchPtrInput `pulumi:"statefulSet"`
	// Version of the Agent.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (AgentSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecPatch)(nil)).Elem()
}

func (i AgentSpecPatchArgs) ToAgentSpecPatchOutput() AgentSpecPatchOutput {
	return i.ToAgentSpecPatchOutputWithContext(context.Background())
}

func (i AgentSpecPatchArgs) ToAgentSpecPatchOutputWithContext(ctx context.Context) AgentSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecPatchOutput)
}

func (i AgentSpecPatchArgs) ToAgentSpecPatchPtrOutput() AgentSpecPatchPtrOutput {
	return i.ToAgentSpecPatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecPatchArgs) ToAgentSpecPatchPtrOutputWithContext(ctx context.Context) AgentSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecPatchOutput).ToAgentSpecPatchPtrOutputWithContext(ctx)
}

// AgentSpecPatchPtrInput is an input type that accepts AgentSpecPatchArgs, AgentSpecPatchPtr and AgentSpecPatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecPatchPtrInput` via:
//
//	        AgentSpecPatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecPatchPtrInput interface {
	pulumi.Input

	ToAgentSpecPatchPtrOutput() AgentSpecPatchPtrOutput
	ToAgentSpecPatchPtrOutputWithContext(context.Context) AgentSpecPatchPtrOutput
}

type agentSpecPatchPtrType AgentSpecPatchArgs

func AgentSpecPatchPtr(v *AgentSpecPatchArgs) AgentSpecPatchPtrInput {
	return (*agentSpecPatchPtrType)(v)
}

func (*agentSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecPatch)(nil)).Elem()
}

func (i *agentSpecPatchPtrType) ToAgentSpecPatchPtrOutput() AgentSpecPatchPtrOutput {
	return i.ToAgentSpecPatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecPatchPtrType) ToAgentSpecPatchPtrOutputWithContext(ctx context.Context) AgentSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecPatchPtrOutput)
}

// AgentSpec defines the desired state of the Agent
type AgentSpecPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecPatch)(nil)).Elem()
}

func (o AgentSpecPatchOutput) ToAgentSpecPatchOutput() AgentSpecPatchOutput {
	return o
}

func (o AgentSpecPatchOutput) ToAgentSpecPatchOutputWithContext(ctx context.Context) AgentSpecPatchOutput {
	return o
}

func (o AgentSpecPatchOutput) ToAgentSpecPatchPtrOutput() AgentSpecPatchPtrOutput {
	return o.ToAgentSpecPatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecPatchOutput) ToAgentSpecPatchPtrOutputWithContext(ctx context.Context) AgentSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecPatch) *AgentSpecPatch {
		return &v
	}).(AgentSpecPatchPtrOutput)
}

// Config holds the Agent configuration. At most one of [`Config`, `ConfigRef`] can be specified.
func (o AgentSpecPatchOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v AgentSpecPatch) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

func (o AgentSpecPatchOutput) ConfigRef() AgentSpecConfigRefPatchPtrOutput {
	return o.ApplyT(func(v AgentSpecPatch) *AgentSpecConfigRefPatch { return v.ConfigRef }).(AgentSpecConfigRefPatchPtrOutput)
}

func (o AgentSpecPatchOutput) DaemonSet() AgentSpecDaemonSetPatchPtrOutput {
	return o.ApplyT(func(v AgentSpecPatch) *AgentSpecDaemonSetPatch { return v.DaemonSet }).(AgentSpecDaemonSetPatchPtrOutput)
}

func (o AgentSpecPatchOutput) Deployment() AgentSpecDeploymentPatchPtrOutput {
	return o.ApplyT(func(v AgentSpecPatch) *AgentSpecDeploymentPatch { return v.Deployment }).(AgentSpecDeploymentPatchPtrOutput)
}

// ElasticsearchRefs is a reference to a list of Elasticsearch clusters running in the same Kubernetes cluster.
// Due to existing limitations, only a single ES cluster is currently supported.
func (o AgentSpecPatchOutput) ElasticsearchRefs() AgentSpecElasticsearchRefsPatchArrayOutput {
	return o.ApplyT(func(v AgentSpecPatch) []AgentSpecElasticsearchRefsPatch { return v.ElasticsearchRefs }).(AgentSpecElasticsearchRefsPatchArrayOutput)
}

// FleetServerEnabled determines whether this Agent will launch Fleet Server. Don't set unless `mode` is set to `fleet`.
func (o AgentSpecPatchOutput) FleetServerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AgentSpecPatch) *bool { return v.FleetServerEnabled }).(pulumi.BoolPtrOutput)
}

func (o AgentSpecPatchOutput) FleetServerRef() AgentSpecFleetServerRefPatchPtrOutput {
	return o.ApplyT(func(v AgentSpecPatch) *AgentSpecFleetServerRefPatch { return v.FleetServerRef }).(AgentSpecFleetServerRefPatchPtrOutput)
}

func (o AgentSpecPatchOutput) Http() AgentSpecHttpPatchPtrOutput {
	return o.ApplyT(func(v AgentSpecPatch) *AgentSpecHttpPatch { return v.Http }).(AgentSpecHttpPatchPtrOutput)
}

// Image is the Agent Docker image to deploy. Version has to match the Agent in the image.
func (o AgentSpecPatchOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecPatch) *string { return v.Image }).(pulumi.StringPtrOutput)
}

func (o AgentSpecPatchOutput) KibanaRef() AgentSpecKibanaRefPatchPtrOutput {
	return o.ApplyT(func(v AgentSpecPatch) *AgentSpecKibanaRefPatch { return v.KibanaRef }).(AgentSpecKibanaRefPatchPtrOutput)
}

// Mode specifies the source of configuration for the Agent. The configuration can be specified locally through
// `config` or `configRef` (`standalone` mode), or come from Fleet during runtime (`fleet` mode).
// Defaults to `standalone` mode.
func (o AgentSpecPatchOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecPatch) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// PolicyID determines into which Agent Policy this Agent will be enrolled.
// This field will become mandatory in a future release, default policies are deprecated since 8.1.0.
func (o AgentSpecPatchOutput) PolicyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecPatch) *string { return v.PolicyID }).(pulumi.StringPtrOutput)
}

// RevisionHistoryLimit is the number of revisions to retain to allow rollback in the underlying DaemonSet or Deployment or StatefulSet.
func (o AgentSpecPatchOutput) RevisionHistoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentSpecPatch) *int { return v.RevisionHistoryLimit }).(pulumi.IntPtrOutput)
}

// SecureSettings is a list of references to Kubernetes Secrets containing sensitive configuration options for the Agent.
// Secrets data can be then referenced in the Agent config using the Secret's keys or as specified in `Entries` field of
// each SecureSetting.
func (o AgentSpecPatchOutput) SecureSettings() AgentSpecSecureSettingsPatchArrayOutput {
	return o.ApplyT(func(v AgentSpecPatch) []AgentSpecSecureSettingsPatch { return v.SecureSettings }).(AgentSpecSecureSettingsPatchArrayOutput)
}

// ServiceAccountName is used to check access from the current resource to an Elasticsearch resource in a different namespace.
// Can only be used if ECK is enforcing RBAC on references.
func (o AgentSpecPatchOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecPatch) *string { return v.ServiceAccountName }).(pulumi.StringPtrOutput)
}

func (o AgentSpecPatchOutput) StatefulSet() AgentSpecStatefulSetPatchPtrOutput {
	return o.ApplyT(func(v AgentSpecPatch) *AgentSpecStatefulSetPatch { return v.StatefulSet }).(AgentSpecStatefulSetPatchPtrOutput)
}

// Version of the Agent.
func (o AgentSpecPatchOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecPatch) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type AgentSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecPatch)(nil)).Elem()
}

func (o AgentSpecPatchPtrOutput) ToAgentSpecPatchPtrOutput() AgentSpecPatchPtrOutput {
	return o
}

func (o AgentSpecPatchPtrOutput) ToAgentSpecPatchPtrOutputWithContext(ctx context.Context) AgentSpecPatchPtrOutput {
	return o
}

func (o AgentSpecPatchPtrOutput) Elem() AgentSpecPatchOutput {
	return o.ApplyT(func(v *AgentSpecPatch) AgentSpecPatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecPatch
		return ret
	}).(AgentSpecPatchOutput)
}

// Config holds the Agent configuration. At most one of [`Config`, `ConfigRef`] can be specified.
func (o AgentSpecPatchPtrOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v *AgentSpecPatch) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.MapOutput)
}

func (o AgentSpecPatchPtrOutput) ConfigRef() AgentSpecConfigRefPatchPtrOutput {
	return o.ApplyT(func(v *AgentSpecPatch) *AgentSpecConfigRefPatch {
		if v == nil {
			return nil
		}
		return v.ConfigRef
	}).(AgentSpecConfigRefPatchPtrOutput)
}

func (o AgentSpecPatchPtrOutput) DaemonSet() AgentSpecDaemonSetPatchPtrOutput {
	return o.ApplyT(func(v *AgentSpecPatch) *AgentSpecDaemonSetPatch {
		if v == nil {
			return nil
		}
		return v.DaemonSet
	}).(AgentSpecDaemonSetPatchPtrOutput)
}

func (o AgentSpecPatchPtrOutput) Deployment() AgentSpecDeploymentPatchPtrOutput {
	return o.ApplyT(func(v *AgentSpecPatch) *AgentSpecDeploymentPatch {
		if v == nil {
			return nil
		}
		return v.Deployment
	}).(AgentSpecDeploymentPatchPtrOutput)
}

// ElasticsearchRefs is a reference to a list of Elasticsearch clusters running in the same Kubernetes cluster.
// Due to existing limitations, only a single ES cluster is currently supported.
func (o AgentSpecPatchPtrOutput) ElasticsearchRefs() AgentSpecElasticsearchRefsPatchArrayOutput {
	return o.ApplyT(func(v *AgentSpecPatch) []AgentSpecElasticsearchRefsPatch {
		if v == nil {
			return nil
		}
		return v.ElasticsearchRefs
	}).(AgentSpecElasticsearchRefsPatchArrayOutput)
}

// FleetServerEnabled determines whether this Agent will launch Fleet Server. Don't set unless `mode` is set to `fleet`.
func (o AgentSpecPatchPtrOutput) FleetServerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AgentSpecPatch) *bool {
		if v == nil {
			return nil
		}
		return v.FleetServerEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o AgentSpecPatchPtrOutput) FleetServerRef() AgentSpecFleetServerRefPatchPtrOutput {
	return o.ApplyT(func(v *AgentSpecPatch) *AgentSpecFleetServerRefPatch {
		if v == nil {
			return nil
		}
		return v.FleetServerRef
	}).(AgentSpecFleetServerRefPatchPtrOutput)
}

func (o AgentSpecPatchPtrOutput) Http() AgentSpecHttpPatchPtrOutput {
	return o.ApplyT(func(v *AgentSpecPatch) *AgentSpecHttpPatch {
		if v == nil {
			return nil
		}
		return v.Http
	}).(AgentSpecHttpPatchPtrOutput)
}

// Image is the Agent Docker image to deploy. Version has to match the Agent in the image.
func (o AgentSpecPatchPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

func (o AgentSpecPatchPtrOutput) KibanaRef() AgentSpecKibanaRefPatchPtrOutput {
	return o.ApplyT(func(v *AgentSpecPatch) *AgentSpecKibanaRefPatch {
		if v == nil {
			return nil
		}
		return v.KibanaRef
	}).(AgentSpecKibanaRefPatchPtrOutput)
}

// Mode specifies the source of configuration for the Agent. The configuration can be specified locally through
// `config` or `configRef` (`standalone` mode), or come from Fleet during runtime (`fleet` mode).
// Defaults to `standalone` mode.
func (o AgentSpecPatchPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// PolicyID determines into which Agent Policy this Agent will be enrolled.
// This field will become mandatory in a future release, default policies are deprecated since 8.1.0.
func (o AgentSpecPatchPtrOutput) PolicyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.PolicyID
	}).(pulumi.StringPtrOutput)
}

// RevisionHistoryLimit is the number of revisions to retain to allow rollback in the underlying DaemonSet or Deployment or StatefulSet.
func (o AgentSpecPatchPtrOutput) RevisionHistoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentSpecPatch) *int {
		if v == nil {
			return nil
		}
		return v.RevisionHistoryLimit
	}).(pulumi.IntPtrOutput)
}

// SecureSettings is a list of references to Kubernetes Secrets containing sensitive configuration options for the Agent.
// Secrets data can be then referenced in the Agent config using the Secret's keys or as specified in `Entries` field of
// each SecureSetting.
func (o AgentSpecPatchPtrOutput) SecureSettings() AgentSpecSecureSettingsPatchArrayOutput {
	return o.ApplyT(func(v *AgentSpecPatch) []AgentSpecSecureSettingsPatch {
		if v == nil {
			return nil
		}
		return v.SecureSettings
	}).(AgentSpecSecureSettingsPatchArrayOutput)
}

// ServiceAccountName is used to check access from the current resource to an Elasticsearch resource in a different namespace.
// Can only be used if ECK is enforcing RBAC on references.
func (o AgentSpecPatchPtrOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountName
	}).(pulumi.StringPtrOutput)
}

func (o AgentSpecPatchPtrOutput) StatefulSet() AgentSpecStatefulSetPatchPtrOutput {
	return o.ApplyT(func(v *AgentSpecPatch) *AgentSpecStatefulSetPatch {
		if v == nil {
			return nil
		}
		return v.StatefulSet
	}).(AgentSpecStatefulSetPatchPtrOutput)
}

// Version of the Agent.
func (o AgentSpecPatchPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// SecretSource defines a data source based on a Kubernetes Secret.
type AgentSpecSecureSettings struct {
	// Entries define how to project each key-value pair in the secret to filesystem paths.
	// If not defined, all keys will be projected to similarly named paths in the filesystem.
	// If defined, only the specified keys will be projected to the corresponding paths.
	Entries []AgentSpecSecureSettingsEntries `pulumi:"entries"`
	// SecretName is the name of the secret.
	SecretName *string `pulumi:"secretName"`
}

// AgentSpecSecureSettingsInput is an input type that accepts AgentSpecSecureSettingsArgs and AgentSpecSecureSettingsOutput values.
// You can construct a concrete instance of `AgentSpecSecureSettingsInput` via:
//
//	AgentSpecSecureSettingsArgs{...}
type AgentSpecSecureSettingsInput interface {
	pulumi.Input

	ToAgentSpecSecureSettingsOutput() AgentSpecSecureSettingsOutput
	ToAgentSpecSecureSettingsOutputWithContext(context.Context) AgentSpecSecureSettingsOutput
}

// SecretSource defines a data source based on a Kubernetes Secret.
type AgentSpecSecureSettingsArgs struct {
	// Entries define how to project each key-value pair in the secret to filesystem paths.
	// If not defined, all keys will be projected to similarly named paths in the filesystem.
	// If defined, only the specified keys will be projected to the corresponding paths.
	Entries AgentSpecSecureSettingsEntriesArrayInput `pulumi:"entries"`
	// SecretName is the name of the secret.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (AgentSpecSecureSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecSecureSettings)(nil)).Elem()
}

func (i AgentSpecSecureSettingsArgs) ToAgentSpecSecureSettingsOutput() AgentSpecSecureSettingsOutput {
	return i.ToAgentSpecSecureSettingsOutputWithContext(context.Background())
}

func (i AgentSpecSecureSettingsArgs) ToAgentSpecSecureSettingsOutputWithContext(ctx context.Context) AgentSpecSecureSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecSecureSettingsOutput)
}

// AgentSpecSecureSettingsArrayInput is an input type that accepts AgentSpecSecureSettingsArray and AgentSpecSecureSettingsArrayOutput values.
// You can construct a concrete instance of `AgentSpecSecureSettingsArrayInput` via:
//
//	AgentSpecSecureSettingsArray{ AgentSpecSecureSettingsArgs{...} }
type AgentSpecSecureSettingsArrayInput interface {
	pulumi.Input

	ToAgentSpecSecureSettingsArrayOutput() AgentSpecSecureSettingsArrayOutput
	ToAgentSpecSecureSettingsArrayOutputWithContext(context.Context) AgentSpecSecureSettingsArrayOutput
}

type AgentSpecSecureSettingsArray []AgentSpecSecureSettingsInput

func (AgentSpecSecureSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecSecureSettings)(nil)).Elem()
}

func (i AgentSpecSecureSettingsArray) ToAgentSpecSecureSettingsArrayOutput() AgentSpecSecureSettingsArrayOutput {
	return i.ToAgentSpecSecureSettingsArrayOutputWithContext(context.Background())
}

func (i AgentSpecSecureSettingsArray) ToAgentSpecSecureSettingsArrayOutputWithContext(ctx context.Context) AgentSpecSecureSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecSecureSettingsArrayOutput)
}

// SecretSource defines a data source based on a Kubernetes Secret.
type AgentSpecSecureSettingsOutput struct{ *pulumi.OutputState }

func (AgentSpecSecureSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecSecureSettings)(nil)).Elem()
}

func (o AgentSpecSecureSettingsOutput) ToAgentSpecSecureSettingsOutput() AgentSpecSecureSettingsOutput {
	return o
}

func (o AgentSpecSecureSettingsOutput) ToAgentSpecSecureSettingsOutputWithContext(ctx context.Context) AgentSpecSecureSettingsOutput {
	return o
}

// Entries define how to project each key-value pair in the secret to filesystem paths.
// If not defined, all keys will be projected to similarly named paths in the filesystem.
// If defined, only the specified keys will be projected to the corresponding paths.
func (o AgentSpecSecureSettingsOutput) Entries() AgentSpecSecureSettingsEntriesArrayOutput {
	return o.ApplyT(func(v AgentSpecSecureSettings) []AgentSpecSecureSettingsEntries { return v.Entries }).(AgentSpecSecureSettingsEntriesArrayOutput)
}

// SecretName is the name of the secret.
func (o AgentSpecSecureSettingsOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecSecureSettings) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type AgentSpecSecureSettingsArrayOutput struct{ *pulumi.OutputState }

func (AgentSpecSecureSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecSecureSettings)(nil)).Elem()
}

func (o AgentSpecSecureSettingsArrayOutput) ToAgentSpecSecureSettingsArrayOutput() AgentSpecSecureSettingsArrayOutput {
	return o
}

func (o AgentSpecSecureSettingsArrayOutput) ToAgentSpecSecureSettingsArrayOutputWithContext(ctx context.Context) AgentSpecSecureSettingsArrayOutput {
	return o
}

func (o AgentSpecSecureSettingsArrayOutput) Index(i pulumi.IntInput) AgentSpecSecureSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentSpecSecureSettings {
		return vs[0].([]AgentSpecSecureSettings)[vs[1].(int)]
	}).(AgentSpecSecureSettingsOutput)
}

// KeyToPath defines how to map a key in a Secret object to a filesystem path.
type AgentSpecSecureSettingsEntries struct {
	// Key is the key contained in the secret.
	Key *string `pulumi:"key"`
	// Path is the relative file path to map the key to.
	// Path must not be an absolute file path and must not contain any ".." components.
	Path *string `pulumi:"path"`
}

// AgentSpecSecureSettingsEntriesInput is an input type that accepts AgentSpecSecureSettingsEntriesArgs and AgentSpecSecureSettingsEntriesOutput values.
// You can construct a concrete instance of `AgentSpecSecureSettingsEntriesInput` via:
//
//	AgentSpecSecureSettingsEntriesArgs{...}
type AgentSpecSecureSettingsEntriesInput interface {
	pulumi.Input

	ToAgentSpecSecureSettingsEntriesOutput() AgentSpecSecureSettingsEntriesOutput
	ToAgentSpecSecureSettingsEntriesOutputWithContext(context.Context) AgentSpecSecureSettingsEntriesOutput
}

// KeyToPath defines how to map a key in a Secret object to a filesystem path.
type AgentSpecSecureSettingsEntriesArgs struct {
	// Key is the key contained in the secret.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Path is the relative file path to map the key to.
	// Path must not be an absolute file path and must not contain any ".." components.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (AgentSpecSecureSettingsEntriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecSecureSettingsEntries)(nil)).Elem()
}

func (i AgentSpecSecureSettingsEntriesArgs) ToAgentSpecSecureSettingsEntriesOutput() AgentSpecSecureSettingsEntriesOutput {
	return i.ToAgentSpecSecureSettingsEntriesOutputWithContext(context.Background())
}

func (i AgentSpecSecureSettingsEntriesArgs) ToAgentSpecSecureSettingsEntriesOutputWithContext(ctx context.Context) AgentSpecSecureSettingsEntriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecSecureSettingsEntriesOutput)
}

// AgentSpecSecureSettingsEntriesArrayInput is an input type that accepts AgentSpecSecureSettingsEntriesArray and AgentSpecSecureSettingsEntriesArrayOutput values.
// You can construct a concrete instance of `AgentSpecSecureSettingsEntriesArrayInput` via:
//
//	AgentSpecSecureSettingsEntriesArray{ AgentSpecSecureSettingsEntriesArgs{...} }
type AgentSpecSecureSettingsEntriesArrayInput interface {
	pulumi.Input

	ToAgentSpecSecureSettingsEntriesArrayOutput() AgentSpecSecureSettingsEntriesArrayOutput
	ToAgentSpecSecureSettingsEntriesArrayOutputWithContext(context.Context) AgentSpecSecureSettingsEntriesArrayOutput
}

type AgentSpecSecureSettingsEntriesArray []AgentSpecSecureSettingsEntriesInput

func (AgentSpecSecureSettingsEntriesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecSecureSettingsEntries)(nil)).Elem()
}

func (i AgentSpecSecureSettingsEntriesArray) ToAgentSpecSecureSettingsEntriesArrayOutput() AgentSpecSecureSettingsEntriesArrayOutput {
	return i.ToAgentSpecSecureSettingsEntriesArrayOutputWithContext(context.Background())
}

func (i AgentSpecSecureSettingsEntriesArray) ToAgentSpecSecureSettingsEntriesArrayOutputWithContext(ctx context.Context) AgentSpecSecureSettingsEntriesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecSecureSettingsEntriesArrayOutput)
}

// KeyToPath defines how to map a key in a Secret object to a filesystem path.
type AgentSpecSecureSettingsEntriesOutput struct{ *pulumi.OutputState }

func (AgentSpecSecureSettingsEntriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecSecureSettingsEntries)(nil)).Elem()
}

func (o AgentSpecSecureSettingsEntriesOutput) ToAgentSpecSecureSettingsEntriesOutput() AgentSpecSecureSettingsEntriesOutput {
	return o
}

func (o AgentSpecSecureSettingsEntriesOutput) ToAgentSpecSecureSettingsEntriesOutputWithContext(ctx context.Context) AgentSpecSecureSettingsEntriesOutput {
	return o
}

// Key is the key contained in the secret.
func (o AgentSpecSecureSettingsEntriesOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecSecureSettingsEntries) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Path is the relative file path to map the key to.
// Path must not be an absolute file path and must not contain any ".." components.
func (o AgentSpecSecureSettingsEntriesOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecSecureSettingsEntries) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type AgentSpecSecureSettingsEntriesArrayOutput struct{ *pulumi.OutputState }

func (AgentSpecSecureSettingsEntriesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecSecureSettingsEntries)(nil)).Elem()
}

func (o AgentSpecSecureSettingsEntriesArrayOutput) ToAgentSpecSecureSettingsEntriesArrayOutput() AgentSpecSecureSettingsEntriesArrayOutput {
	return o
}

func (o AgentSpecSecureSettingsEntriesArrayOutput) ToAgentSpecSecureSettingsEntriesArrayOutputWithContext(ctx context.Context) AgentSpecSecureSettingsEntriesArrayOutput {
	return o
}

func (o AgentSpecSecureSettingsEntriesArrayOutput) Index(i pulumi.IntInput) AgentSpecSecureSettingsEntriesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentSpecSecureSettingsEntries {
		return vs[0].([]AgentSpecSecureSettingsEntries)[vs[1].(int)]
	}).(AgentSpecSecureSettingsEntriesOutput)
}

// KeyToPath defines how to map a key in a Secret object to a filesystem path.
type AgentSpecSecureSettingsEntriesPatch struct {
	// Key is the key contained in the secret.
	Key *string `pulumi:"key"`
	// Path is the relative file path to map the key to.
	// Path must not be an absolute file path and must not contain any ".." components.
	Path *string `pulumi:"path"`
}

// AgentSpecSecureSettingsEntriesPatchInput is an input type that accepts AgentSpecSecureSettingsEntriesPatchArgs and AgentSpecSecureSettingsEntriesPatchOutput values.
// You can construct a concrete instance of `AgentSpecSecureSettingsEntriesPatchInput` via:
//
//	AgentSpecSecureSettingsEntriesPatchArgs{...}
type AgentSpecSecureSettingsEntriesPatchInput interface {
	pulumi.Input

	ToAgentSpecSecureSettingsEntriesPatchOutput() AgentSpecSecureSettingsEntriesPatchOutput
	ToAgentSpecSecureSettingsEntriesPatchOutputWithContext(context.Context) AgentSpecSecureSettingsEntriesPatchOutput
}

// KeyToPath defines how to map a key in a Secret object to a filesystem path.
type AgentSpecSecureSettingsEntriesPatchArgs struct {
	// Key is the key contained in the secret.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Path is the relative file path to map the key to.
	// Path must not be an absolute file path and must not contain any ".." components.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (AgentSpecSecureSettingsEntriesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecSecureSettingsEntriesPatch)(nil)).Elem()
}

func (i AgentSpecSecureSettingsEntriesPatchArgs) ToAgentSpecSecureSettingsEntriesPatchOutput() AgentSpecSecureSettingsEntriesPatchOutput {
	return i.ToAgentSpecSecureSettingsEntriesPatchOutputWithContext(context.Background())
}

func (i AgentSpecSecureSettingsEntriesPatchArgs) ToAgentSpecSecureSettingsEntriesPatchOutputWithContext(ctx context.Context) AgentSpecSecureSettingsEntriesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecSecureSettingsEntriesPatchOutput)
}

// AgentSpecSecureSettingsEntriesPatchArrayInput is an input type that accepts AgentSpecSecureSettingsEntriesPatchArray and AgentSpecSecureSettingsEntriesPatchArrayOutput values.
// You can construct a concrete instance of `AgentSpecSecureSettingsEntriesPatchArrayInput` via:
//
//	AgentSpecSecureSettingsEntriesPatchArray{ AgentSpecSecureSettingsEntriesPatchArgs{...} }
type AgentSpecSecureSettingsEntriesPatchArrayInput interface {
	pulumi.Input

	ToAgentSpecSecureSettingsEntriesPatchArrayOutput() AgentSpecSecureSettingsEntriesPatchArrayOutput
	ToAgentSpecSecureSettingsEntriesPatchArrayOutputWithContext(context.Context) AgentSpecSecureSettingsEntriesPatchArrayOutput
}

type AgentSpecSecureSettingsEntriesPatchArray []AgentSpecSecureSettingsEntriesPatchInput

func (AgentSpecSecureSettingsEntriesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecSecureSettingsEntriesPatch)(nil)).Elem()
}

func (i AgentSpecSecureSettingsEntriesPatchArray) ToAgentSpecSecureSettingsEntriesPatchArrayOutput() AgentSpecSecureSettingsEntriesPatchArrayOutput {
	return i.ToAgentSpecSecureSettingsEntriesPatchArrayOutputWithContext(context.Background())
}

func (i AgentSpecSecureSettingsEntriesPatchArray) ToAgentSpecSecureSettingsEntriesPatchArrayOutputWithContext(ctx context.Context) AgentSpecSecureSettingsEntriesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecSecureSettingsEntriesPatchArrayOutput)
}

// KeyToPath defines how to map a key in a Secret object to a filesystem path.
type AgentSpecSecureSettingsEntriesPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecSecureSettingsEntriesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecSecureSettingsEntriesPatch)(nil)).Elem()
}

func (o AgentSpecSecureSettingsEntriesPatchOutput) ToAgentSpecSecureSettingsEntriesPatchOutput() AgentSpecSecureSettingsEntriesPatchOutput {
	return o
}

func (o AgentSpecSecureSettingsEntriesPatchOutput) ToAgentSpecSecureSettingsEntriesPatchOutputWithContext(ctx context.Context) AgentSpecSecureSettingsEntriesPatchOutput {
	return o
}

// Key is the key contained in the secret.
func (o AgentSpecSecureSettingsEntriesPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecSecureSettingsEntriesPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Path is the relative file path to map the key to.
// Path must not be an absolute file path and must not contain any ".." components.
func (o AgentSpecSecureSettingsEntriesPatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecSecureSettingsEntriesPatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type AgentSpecSecureSettingsEntriesPatchArrayOutput struct{ *pulumi.OutputState }

func (AgentSpecSecureSettingsEntriesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecSecureSettingsEntriesPatch)(nil)).Elem()
}

func (o AgentSpecSecureSettingsEntriesPatchArrayOutput) ToAgentSpecSecureSettingsEntriesPatchArrayOutput() AgentSpecSecureSettingsEntriesPatchArrayOutput {
	return o
}

func (o AgentSpecSecureSettingsEntriesPatchArrayOutput) ToAgentSpecSecureSettingsEntriesPatchArrayOutputWithContext(ctx context.Context) AgentSpecSecureSettingsEntriesPatchArrayOutput {
	return o
}

func (o AgentSpecSecureSettingsEntriesPatchArrayOutput) Index(i pulumi.IntInput) AgentSpecSecureSettingsEntriesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentSpecSecureSettingsEntriesPatch {
		return vs[0].([]AgentSpecSecureSettingsEntriesPatch)[vs[1].(int)]
	}).(AgentSpecSecureSettingsEntriesPatchOutput)
}

// SecretSource defines a data source based on a Kubernetes Secret.
type AgentSpecSecureSettingsPatch struct {
	// Entries define how to project each key-value pair in the secret to filesystem paths.
	// If not defined, all keys will be projected to similarly named paths in the filesystem.
	// If defined, only the specified keys will be projected to the corresponding paths.
	Entries []AgentSpecSecureSettingsEntriesPatch `pulumi:"entries"`
	// SecretName is the name of the secret.
	SecretName *string `pulumi:"secretName"`
}

// AgentSpecSecureSettingsPatchInput is an input type that accepts AgentSpecSecureSettingsPatchArgs and AgentSpecSecureSettingsPatchOutput values.
// You can construct a concrete instance of `AgentSpecSecureSettingsPatchInput` via:
//
//	AgentSpecSecureSettingsPatchArgs{...}
type AgentSpecSecureSettingsPatchInput interface {
	pulumi.Input

	ToAgentSpecSecureSettingsPatchOutput() AgentSpecSecureSettingsPatchOutput
	ToAgentSpecSecureSettingsPatchOutputWithContext(context.Context) AgentSpecSecureSettingsPatchOutput
}

// SecretSource defines a data source based on a Kubernetes Secret.
type AgentSpecSecureSettingsPatchArgs struct {
	// Entries define how to project each key-value pair in the secret to filesystem paths.
	// If not defined, all keys will be projected to similarly named paths in the filesystem.
	// If defined, only the specified keys will be projected to the corresponding paths.
	Entries AgentSpecSecureSettingsEntriesPatchArrayInput `pulumi:"entries"`
	// SecretName is the name of the secret.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (AgentSpecSecureSettingsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecSecureSettingsPatch)(nil)).Elem()
}

func (i AgentSpecSecureSettingsPatchArgs) ToAgentSpecSecureSettingsPatchOutput() AgentSpecSecureSettingsPatchOutput {
	return i.ToAgentSpecSecureSettingsPatchOutputWithContext(context.Background())
}

func (i AgentSpecSecureSettingsPatchArgs) ToAgentSpecSecureSettingsPatchOutputWithContext(ctx context.Context) AgentSpecSecureSettingsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecSecureSettingsPatchOutput)
}

// AgentSpecSecureSettingsPatchArrayInput is an input type that accepts AgentSpecSecureSettingsPatchArray and AgentSpecSecureSettingsPatchArrayOutput values.
// You can construct a concrete instance of `AgentSpecSecureSettingsPatchArrayInput` via:
//
//	AgentSpecSecureSettingsPatchArray{ AgentSpecSecureSettingsPatchArgs{...} }
type AgentSpecSecureSettingsPatchArrayInput interface {
	pulumi.Input

	ToAgentSpecSecureSettingsPatchArrayOutput() AgentSpecSecureSettingsPatchArrayOutput
	ToAgentSpecSecureSettingsPatchArrayOutputWithContext(context.Context) AgentSpecSecureSettingsPatchArrayOutput
}

type AgentSpecSecureSettingsPatchArray []AgentSpecSecureSettingsPatchInput

func (AgentSpecSecureSettingsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecSecureSettingsPatch)(nil)).Elem()
}

func (i AgentSpecSecureSettingsPatchArray) ToAgentSpecSecureSettingsPatchArrayOutput() AgentSpecSecureSettingsPatchArrayOutput {
	return i.ToAgentSpecSecureSettingsPatchArrayOutputWithContext(context.Background())
}

func (i AgentSpecSecureSettingsPatchArray) ToAgentSpecSecureSettingsPatchArrayOutputWithContext(ctx context.Context) AgentSpecSecureSettingsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecSecureSettingsPatchArrayOutput)
}

// SecretSource defines a data source based on a Kubernetes Secret.
type AgentSpecSecureSettingsPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecSecureSettingsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecSecureSettingsPatch)(nil)).Elem()
}

func (o AgentSpecSecureSettingsPatchOutput) ToAgentSpecSecureSettingsPatchOutput() AgentSpecSecureSettingsPatchOutput {
	return o
}

func (o AgentSpecSecureSettingsPatchOutput) ToAgentSpecSecureSettingsPatchOutputWithContext(ctx context.Context) AgentSpecSecureSettingsPatchOutput {
	return o
}

// Entries define how to project each key-value pair in the secret to filesystem paths.
// If not defined, all keys will be projected to similarly named paths in the filesystem.
// If defined, only the specified keys will be projected to the corresponding paths.
func (o AgentSpecSecureSettingsPatchOutput) Entries() AgentSpecSecureSettingsEntriesPatchArrayOutput {
	return o.ApplyT(func(v AgentSpecSecureSettingsPatch) []AgentSpecSecureSettingsEntriesPatch { return v.Entries }).(AgentSpecSecureSettingsEntriesPatchArrayOutput)
}

// SecretName is the name of the secret.
func (o AgentSpecSecureSettingsPatchOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecSecureSettingsPatch) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type AgentSpecSecureSettingsPatchArrayOutput struct{ *pulumi.OutputState }

func (AgentSpecSecureSettingsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecSecureSettingsPatch)(nil)).Elem()
}

func (o AgentSpecSecureSettingsPatchArrayOutput) ToAgentSpecSecureSettingsPatchArrayOutput() AgentSpecSecureSettingsPatchArrayOutput {
	return o
}

func (o AgentSpecSecureSettingsPatchArrayOutput) ToAgentSpecSecureSettingsPatchArrayOutputWithContext(ctx context.Context) AgentSpecSecureSettingsPatchArrayOutput {
	return o
}

func (o AgentSpecSecureSettingsPatchArrayOutput) Index(i pulumi.IntInput) AgentSpecSecureSettingsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentSpecSecureSettingsPatch {
		return vs[0].([]AgentSpecSecureSettingsPatch)[vs[1].(int)]
	}).(AgentSpecSecureSettingsPatchOutput)
}

// StatefulSet specifies the Agent should be deployed as a StatefulSet, and allows providing its spec.
// Cannot be used along with `daemonSet` or `deployment`.
type AgentSpecStatefulSet struct {
	// PodManagementPolicy controls how pods are created during initial scale up,
	// when replacing pods on nodes, or when scaling down. The default policy is
	// `Parallel`, where pods are created in parallel to match the desired scale
	// without waiting, and on scale down will delete all pods at once.
	// The alternative policy is `OrderedReady`, the default for vanilla kubernetes
	// StatefulSets, where pods are created in increasing order in increasing order
	// (pod-0, then pod-1, etc.) and the controller will wait until each pod is ready before
	// continuing. When scaling down, the pods are removed in the opposite order.
	PodManagementPolicy *string `pulumi:"podManagementPolicy"`
	// PodTemplateSpec describes the data a pod should have when created from a template
	PodTemplate map[string]interface{} `pulumi:"podTemplate"`
	Replicas    *int                   `pulumi:"replicas"`
	ServiceName *string                `pulumi:"serviceName"`
	// VolumeClaimTemplates is a list of persistent volume claims to be used by each Pod.
	// Every claim in this list must have a matching volumeMount in one of the containers defined in the PodTemplate.
	// Items defined here take precedence over any default claims added by the operator with the same name.
	VolumeClaimTemplates []AgentSpecStatefulSetVolumeClaimTemplates `pulumi:"volumeClaimTemplates"`
}

// AgentSpecStatefulSetInput is an input type that accepts AgentSpecStatefulSetArgs and AgentSpecStatefulSetOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetInput` via:
//
//	AgentSpecStatefulSetArgs{...}
type AgentSpecStatefulSetInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetOutput() AgentSpecStatefulSetOutput
	ToAgentSpecStatefulSetOutputWithContext(context.Context) AgentSpecStatefulSetOutput
}

// StatefulSet specifies the Agent should be deployed as a StatefulSet, and allows providing its spec.
// Cannot be used along with `daemonSet` or `deployment`.
type AgentSpecStatefulSetArgs struct {
	// PodManagementPolicy controls how pods are created during initial scale up,
	// when replacing pods on nodes, or when scaling down. The default policy is
	// `Parallel`, where pods are created in parallel to match the desired scale
	// without waiting, and on scale down will delete all pods at once.
	// The alternative policy is `OrderedReady`, the default for vanilla kubernetes
	// StatefulSets, where pods are created in increasing order in increasing order
	// (pod-0, then pod-1, etc.) and the controller will wait until each pod is ready before
	// continuing. When scaling down, the pods are removed in the opposite order.
	PodManagementPolicy pulumi.StringPtrInput `pulumi:"podManagementPolicy"`
	// PodTemplateSpec describes the data a pod should have when created from a template
	PodTemplate pulumi.MapInput       `pulumi:"podTemplate"`
	Replicas    pulumi.IntPtrInput    `pulumi:"replicas"`
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
	// VolumeClaimTemplates is a list of persistent volume claims to be used by each Pod.
	// Every claim in this list must have a matching volumeMount in one of the containers defined in the PodTemplate.
	// Items defined here take precedence over any default claims added by the operator with the same name.
	VolumeClaimTemplates AgentSpecStatefulSetVolumeClaimTemplatesArrayInput `pulumi:"volumeClaimTemplates"`
}

func (AgentSpecStatefulSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSet)(nil)).Elem()
}

func (i AgentSpecStatefulSetArgs) ToAgentSpecStatefulSetOutput() AgentSpecStatefulSetOutput {
	return i.ToAgentSpecStatefulSetOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetArgs) ToAgentSpecStatefulSetOutputWithContext(ctx context.Context) AgentSpecStatefulSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetOutput)
}

func (i AgentSpecStatefulSetArgs) ToAgentSpecStatefulSetPtrOutput() AgentSpecStatefulSetPtrOutput {
	return i.ToAgentSpecStatefulSetPtrOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetArgs) ToAgentSpecStatefulSetPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetOutput).ToAgentSpecStatefulSetPtrOutputWithContext(ctx)
}

// AgentSpecStatefulSetPtrInput is an input type that accepts AgentSpecStatefulSetArgs, AgentSpecStatefulSetPtr and AgentSpecStatefulSetPtrOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetPtrInput` via:
//
//	        AgentSpecStatefulSetArgs{...}
//
//	or:
//
//	        nil
type AgentSpecStatefulSetPtrInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetPtrOutput() AgentSpecStatefulSetPtrOutput
	ToAgentSpecStatefulSetPtrOutputWithContext(context.Context) AgentSpecStatefulSetPtrOutput
}

type agentSpecStatefulSetPtrType AgentSpecStatefulSetArgs

func AgentSpecStatefulSetPtr(v *AgentSpecStatefulSetArgs) AgentSpecStatefulSetPtrInput {
	return (*agentSpecStatefulSetPtrType)(v)
}

func (*agentSpecStatefulSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSet)(nil)).Elem()
}

func (i *agentSpecStatefulSetPtrType) ToAgentSpecStatefulSetPtrOutput() AgentSpecStatefulSetPtrOutput {
	return i.ToAgentSpecStatefulSetPtrOutputWithContext(context.Background())
}

func (i *agentSpecStatefulSetPtrType) ToAgentSpecStatefulSetPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetPtrOutput)
}

// StatefulSet specifies the Agent should be deployed as a StatefulSet, and allows providing its spec.
// Cannot be used along with `daemonSet` or `deployment`.
type AgentSpecStatefulSetOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSet)(nil)).Elem()
}

func (o AgentSpecStatefulSetOutput) ToAgentSpecStatefulSetOutput() AgentSpecStatefulSetOutput {
	return o
}

func (o AgentSpecStatefulSetOutput) ToAgentSpecStatefulSetOutputWithContext(ctx context.Context) AgentSpecStatefulSetOutput {
	return o
}

func (o AgentSpecStatefulSetOutput) ToAgentSpecStatefulSetPtrOutput() AgentSpecStatefulSetPtrOutput {
	return o.ToAgentSpecStatefulSetPtrOutputWithContext(context.Background())
}

func (o AgentSpecStatefulSetOutput) ToAgentSpecStatefulSetPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecStatefulSet) *AgentSpecStatefulSet {
		return &v
	}).(AgentSpecStatefulSetPtrOutput)
}

// PodManagementPolicy controls how pods are created during initial scale up,
// when replacing pods on nodes, or when scaling down. The default policy is
// `Parallel`, where pods are created in parallel to match the desired scale
// without waiting, and on scale down will delete all pods at once.
// The alternative policy is `OrderedReady`, the default for vanilla kubernetes
// StatefulSets, where pods are created in increasing order in increasing order
// (pod-0, then pod-1, etc.) and the controller will wait until each pod is ready before
// continuing. When scaling down, the pods are removed in the opposite order.
func (o AgentSpecStatefulSetOutput) PodManagementPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSet) *string { return v.PodManagementPolicy }).(pulumi.StringPtrOutput)
}

// PodTemplateSpec describes the data a pod should have when created from a template
func (o AgentSpecStatefulSetOutput) PodTemplate() pulumi.MapOutput {
	return o.ApplyT(func(v AgentSpecStatefulSet) map[string]interface{} { return v.PodTemplate }).(pulumi.MapOutput)
}

func (o AgentSpecStatefulSetOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSet) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

func (o AgentSpecStatefulSetOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSet) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// VolumeClaimTemplates is a list of persistent volume claims to be used by each Pod.
// Every claim in this list must have a matching volumeMount in one of the containers defined in the PodTemplate.
// Items defined here take precedence over any default claims added by the operator with the same name.
func (o AgentSpecStatefulSetOutput) VolumeClaimTemplates() AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput {
	return o.ApplyT(func(v AgentSpecStatefulSet) []AgentSpecStatefulSetVolumeClaimTemplates { return v.VolumeClaimTemplates }).(AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput)
}

type AgentSpecStatefulSetPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSet)(nil)).Elem()
}

func (o AgentSpecStatefulSetPtrOutput) ToAgentSpecStatefulSetPtrOutput() AgentSpecStatefulSetPtrOutput {
	return o
}

func (o AgentSpecStatefulSetPtrOutput) ToAgentSpecStatefulSetPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetPtrOutput {
	return o
}

func (o AgentSpecStatefulSetPtrOutput) Elem() AgentSpecStatefulSetOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSet) AgentSpecStatefulSet {
		if v != nil {
			return *v
		}
		var ret AgentSpecStatefulSet
		return ret
	}).(AgentSpecStatefulSetOutput)
}

// PodManagementPolicy controls how pods are created during initial scale up,
// when replacing pods on nodes, or when scaling down. The default policy is
// `Parallel`, where pods are created in parallel to match the desired scale
// without waiting, and on scale down will delete all pods at once.
// The alternative policy is `OrderedReady`, the default for vanilla kubernetes
// StatefulSets, where pods are created in increasing order in increasing order
// (pod-0, then pod-1, etc.) and the controller will wait until each pod is ready before
// continuing. When scaling down, the pods are removed in the opposite order.
func (o AgentSpecStatefulSetPtrOutput) PodManagementPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSet) *string {
		if v == nil {
			return nil
		}
		return v.PodManagementPolicy
	}).(pulumi.StringPtrOutput)
}

// PodTemplateSpec describes the data a pod should have when created from a template
func (o AgentSpecStatefulSetPtrOutput) PodTemplate() pulumi.MapOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSet) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.PodTemplate
	}).(pulumi.MapOutput)
}

func (o AgentSpecStatefulSetPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSet) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

func (o AgentSpecStatefulSetPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSet) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// VolumeClaimTemplates is a list of persistent volume claims to be used by each Pod.
// Every claim in this list must have a matching volumeMount in one of the containers defined in the PodTemplate.
// Items defined here take precedence over any default claims added by the operator with the same name.
func (o AgentSpecStatefulSetPtrOutput) VolumeClaimTemplates() AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSet) []AgentSpecStatefulSetVolumeClaimTemplates {
		if v == nil {
			return nil
		}
		return v.VolumeClaimTemplates
	}).(AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput)
}

// StatefulSet specifies the Agent should be deployed as a StatefulSet, and allows providing its spec.
// Cannot be used along with `daemonSet` or `deployment`.
type AgentSpecStatefulSetPatch struct {
	// PodManagementPolicy controls how pods are created during initial scale up,
	// when replacing pods on nodes, or when scaling down. The default policy is
	// `Parallel`, where pods are created in parallel to match the desired scale
	// without waiting, and on scale down will delete all pods at once.
	// The alternative policy is `OrderedReady`, the default for vanilla kubernetes
	// StatefulSets, where pods are created in increasing order in increasing order
	// (pod-0, then pod-1, etc.) and the controller will wait until each pod is ready before
	// continuing. When scaling down, the pods are removed in the opposite order.
	PodManagementPolicy *string `pulumi:"podManagementPolicy"`
	// PodTemplateSpec describes the data a pod should have when created from a template
	PodTemplate map[string]interface{} `pulumi:"podTemplate"`
	Replicas    *int                   `pulumi:"replicas"`
	ServiceName *string                `pulumi:"serviceName"`
	// VolumeClaimTemplates is a list of persistent volume claims to be used by each Pod.
	// Every claim in this list must have a matching volumeMount in one of the containers defined in the PodTemplate.
	// Items defined here take precedence over any default claims added by the operator with the same name.
	VolumeClaimTemplates []AgentSpecStatefulSetVolumeClaimTemplatesPatch `pulumi:"volumeClaimTemplates"`
}

// AgentSpecStatefulSetPatchInput is an input type that accepts AgentSpecStatefulSetPatchArgs and AgentSpecStatefulSetPatchOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetPatchInput` via:
//
//	AgentSpecStatefulSetPatchArgs{...}
type AgentSpecStatefulSetPatchInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetPatchOutput() AgentSpecStatefulSetPatchOutput
	ToAgentSpecStatefulSetPatchOutputWithContext(context.Context) AgentSpecStatefulSetPatchOutput
}

// StatefulSet specifies the Agent should be deployed as a StatefulSet, and allows providing its spec.
// Cannot be used along with `daemonSet` or `deployment`.
type AgentSpecStatefulSetPatchArgs struct {
	// PodManagementPolicy controls how pods are created during initial scale up,
	// when replacing pods on nodes, or when scaling down. The default policy is
	// `Parallel`, where pods are created in parallel to match the desired scale
	// without waiting, and on scale down will delete all pods at once.
	// The alternative policy is `OrderedReady`, the default for vanilla kubernetes
	// StatefulSets, where pods are created in increasing order in increasing order
	// (pod-0, then pod-1, etc.) and the controller will wait until each pod is ready before
	// continuing. When scaling down, the pods are removed in the opposite order.
	PodManagementPolicy pulumi.StringPtrInput `pulumi:"podManagementPolicy"`
	// PodTemplateSpec describes the data a pod should have when created from a template
	PodTemplate pulumi.MapInput       `pulumi:"podTemplate"`
	Replicas    pulumi.IntPtrInput    `pulumi:"replicas"`
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
	// VolumeClaimTemplates is a list of persistent volume claims to be used by each Pod.
	// Every claim in this list must have a matching volumeMount in one of the containers defined in the PodTemplate.
	// Items defined here take precedence over any default claims added by the operator with the same name.
	VolumeClaimTemplates AgentSpecStatefulSetVolumeClaimTemplatesPatchArrayInput `pulumi:"volumeClaimTemplates"`
}

func (AgentSpecStatefulSetPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetPatch)(nil)).Elem()
}

func (i AgentSpecStatefulSetPatchArgs) ToAgentSpecStatefulSetPatchOutput() AgentSpecStatefulSetPatchOutput {
	return i.ToAgentSpecStatefulSetPatchOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetPatchArgs) ToAgentSpecStatefulSetPatchOutputWithContext(ctx context.Context) AgentSpecStatefulSetPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetPatchOutput)
}

func (i AgentSpecStatefulSetPatchArgs) ToAgentSpecStatefulSetPatchPtrOutput() AgentSpecStatefulSetPatchPtrOutput {
	return i.ToAgentSpecStatefulSetPatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetPatchArgs) ToAgentSpecStatefulSetPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetPatchOutput).ToAgentSpecStatefulSetPatchPtrOutputWithContext(ctx)
}

// AgentSpecStatefulSetPatchPtrInput is an input type that accepts AgentSpecStatefulSetPatchArgs, AgentSpecStatefulSetPatchPtr and AgentSpecStatefulSetPatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetPatchPtrInput` via:
//
//	        AgentSpecStatefulSetPatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecStatefulSetPatchPtrInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetPatchPtrOutput() AgentSpecStatefulSetPatchPtrOutput
	ToAgentSpecStatefulSetPatchPtrOutputWithContext(context.Context) AgentSpecStatefulSetPatchPtrOutput
}

type agentSpecStatefulSetPatchPtrType AgentSpecStatefulSetPatchArgs

func AgentSpecStatefulSetPatchPtr(v *AgentSpecStatefulSetPatchArgs) AgentSpecStatefulSetPatchPtrInput {
	return (*agentSpecStatefulSetPatchPtrType)(v)
}

func (*agentSpecStatefulSetPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetPatch)(nil)).Elem()
}

func (i *agentSpecStatefulSetPatchPtrType) ToAgentSpecStatefulSetPatchPtrOutput() AgentSpecStatefulSetPatchPtrOutput {
	return i.ToAgentSpecStatefulSetPatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecStatefulSetPatchPtrType) ToAgentSpecStatefulSetPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetPatchPtrOutput)
}

// StatefulSet specifies the Agent should be deployed as a StatefulSet, and allows providing its spec.
// Cannot be used along with `daemonSet` or `deployment`.
type AgentSpecStatefulSetPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetPatch)(nil)).Elem()
}

func (o AgentSpecStatefulSetPatchOutput) ToAgentSpecStatefulSetPatchOutput() AgentSpecStatefulSetPatchOutput {
	return o
}

func (o AgentSpecStatefulSetPatchOutput) ToAgentSpecStatefulSetPatchOutputWithContext(ctx context.Context) AgentSpecStatefulSetPatchOutput {
	return o
}

func (o AgentSpecStatefulSetPatchOutput) ToAgentSpecStatefulSetPatchPtrOutput() AgentSpecStatefulSetPatchPtrOutput {
	return o.ToAgentSpecStatefulSetPatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecStatefulSetPatchOutput) ToAgentSpecStatefulSetPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecStatefulSetPatch) *AgentSpecStatefulSetPatch {
		return &v
	}).(AgentSpecStatefulSetPatchPtrOutput)
}

// PodManagementPolicy controls how pods are created during initial scale up,
// when replacing pods on nodes, or when scaling down. The default policy is
// `Parallel`, where pods are created in parallel to match the desired scale
// without waiting, and on scale down will delete all pods at once.
// The alternative policy is `OrderedReady`, the default for vanilla kubernetes
// StatefulSets, where pods are created in increasing order in increasing order
// (pod-0, then pod-1, etc.) and the controller will wait until each pod is ready before
// continuing. When scaling down, the pods are removed in the opposite order.
func (o AgentSpecStatefulSetPatchOutput) PodManagementPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetPatch) *string { return v.PodManagementPolicy }).(pulumi.StringPtrOutput)
}

// PodTemplateSpec describes the data a pod should have when created from a template
func (o AgentSpecStatefulSetPatchOutput) PodTemplate() pulumi.MapOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetPatch) map[string]interface{} { return v.PodTemplate }).(pulumi.MapOutput)
}

func (o AgentSpecStatefulSetPatchOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetPatch) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

func (o AgentSpecStatefulSetPatchOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetPatch) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// VolumeClaimTemplates is a list of persistent volume claims to be used by each Pod.
// Every claim in this list must have a matching volumeMount in one of the containers defined in the PodTemplate.
// Items defined here take precedence over any default claims added by the operator with the same name.
func (o AgentSpecStatefulSetPatchOutput) VolumeClaimTemplates() AgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetPatch) []AgentSpecStatefulSetVolumeClaimTemplatesPatch {
		return v.VolumeClaimTemplates
	}).(AgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutput)
}

type AgentSpecStatefulSetPatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetPatch)(nil)).Elem()
}

func (o AgentSpecStatefulSetPatchPtrOutput) ToAgentSpecStatefulSetPatchPtrOutput() AgentSpecStatefulSetPatchPtrOutput {
	return o
}

func (o AgentSpecStatefulSetPatchPtrOutput) ToAgentSpecStatefulSetPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetPatchPtrOutput {
	return o
}

func (o AgentSpecStatefulSetPatchPtrOutput) Elem() AgentSpecStatefulSetPatchOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetPatch) AgentSpecStatefulSetPatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecStatefulSetPatch
		return ret
	}).(AgentSpecStatefulSetPatchOutput)
}

// PodManagementPolicy controls how pods are created during initial scale up,
// when replacing pods on nodes, or when scaling down. The default policy is
// `Parallel`, where pods are created in parallel to match the desired scale
// without waiting, and on scale down will delete all pods at once.
// The alternative policy is `OrderedReady`, the default for vanilla kubernetes
// StatefulSets, where pods are created in increasing order in increasing order
// (pod-0, then pod-1, etc.) and the controller will wait until each pod is ready before
// continuing. When scaling down, the pods are removed in the opposite order.
func (o AgentSpecStatefulSetPatchPtrOutput) PodManagementPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetPatch) *string {
		if v == nil {
			return nil
		}
		return v.PodManagementPolicy
	}).(pulumi.StringPtrOutput)
}

// PodTemplateSpec describes the data a pod should have when created from a template
func (o AgentSpecStatefulSetPatchPtrOutput) PodTemplate() pulumi.MapOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetPatch) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.PodTemplate
	}).(pulumi.MapOutput)
}

func (o AgentSpecStatefulSetPatchPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetPatch) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

func (o AgentSpecStatefulSetPatchPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetPatch) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// VolumeClaimTemplates is a list of persistent volume claims to be used by each Pod.
// Every claim in this list must have a matching volumeMount in one of the containers defined in the PodTemplate.
// Items defined here take precedence over any default claims added by the operator with the same name.
func (o AgentSpecStatefulSetPatchPtrOutput) VolumeClaimTemplates() AgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetPatch) []AgentSpecStatefulSetVolumeClaimTemplatesPatch {
		if v == nil {
			return nil
		}
		return v.VolumeClaimTemplates
	}).(AgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutput)
}

// PersistentVolumeClaim is a user's request for and claim to a persistent volume
type AgentSpecStatefulSetVolumeClaimTemplates struct {
	// APIVersion defines the versioned schema of this representation of an object.
	// Servers should convert recognized schemas to the latest internal value, and
	// may reject unrecognized values.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents.
	// Servers may infer this from the endpoint the client submits requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind     *string                                           `pulumi:"kind"`
	Metadata *AgentSpecStatefulSetVolumeClaimTemplatesMetadata `pulumi:"metadata"`
	Spec     *AgentSpecStatefulSetVolumeClaimTemplatesSpec     `pulumi:"spec"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesArgs and AgentSpecStatefulSetVolumeClaimTemplatesOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesOutput() AgentSpecStatefulSetVolumeClaimTemplatesOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesOutput
}

// PersistentVolumeClaim is a user's request for and claim to a persistent volume
type AgentSpecStatefulSetVolumeClaimTemplatesArgs struct {
	// APIVersion defines the versioned schema of this representation of an object.
	// Servers should convert recognized schemas to the latest internal value, and
	// may reject unrecognized values.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents.
	// Servers may infer this from the endpoint the client submits requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind     pulumi.StringPtrInput                                    `pulumi:"kind"`
	Metadata AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrInput `pulumi:"metadata"`
	Spec     AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrInput     `pulumi:"spec"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplates)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesOutput() AgentSpecStatefulSetVolumeClaimTemplatesOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesOutput)
}

// AgentSpecStatefulSetVolumeClaimTemplatesArrayInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesArray and AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesArrayInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesArray{ AgentSpecStatefulSetVolumeClaimTemplatesArgs{...} }
type AgentSpecStatefulSetVolumeClaimTemplatesArrayInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesArrayOutput() AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesArrayOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput
}

type AgentSpecStatefulSetVolumeClaimTemplatesArray []AgentSpecStatefulSetVolumeClaimTemplatesInput

func (AgentSpecStatefulSetVolumeClaimTemplatesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecStatefulSetVolumeClaimTemplates)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesArray) ToAgentSpecStatefulSetVolumeClaimTemplatesArrayOutput() AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesArrayOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesArray) ToAgentSpecStatefulSetVolumeClaimTemplatesArrayOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput)
}

// PersistentVolumeClaim is a user's request for and claim to a persistent volume
type AgentSpecStatefulSetVolumeClaimTemplatesOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplates)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesOutput() AgentSpecStatefulSetVolumeClaimTemplatesOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object.
// Servers should convert recognized schemas to the latest internal value, and
// may reject unrecognized values.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o AgentSpecStatefulSetVolumeClaimTemplatesOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplates) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents.
// Servers may infer this from the endpoint the client submits requests to.
// Cannot be updated.
// In CamelCase.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AgentSpecStatefulSetVolumeClaimTemplatesOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplates) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesOutput) Metadata() AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplates) *AgentSpecStatefulSetVolumeClaimTemplatesMetadata {
		return v.Metadata
	}).(AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesOutput) Spec() AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplates) *AgentSpecStatefulSetVolumeClaimTemplatesSpec {
		return v.Spec
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecStatefulSetVolumeClaimTemplates)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesArrayOutput() AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesArrayOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput) Index(i pulumi.IntInput) AgentSpecStatefulSetVolumeClaimTemplatesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentSpecStatefulSetVolumeClaimTemplates {
		return vs[0].([]AgentSpecStatefulSetVolumeClaimTemplates)[vs[1].(int)]
	}).(AgentSpecStatefulSetVolumeClaimTemplatesOutput)
}

// Standard object's metadata.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
type AgentSpecStatefulSetVolumeClaimTemplatesMetadata struct {
	Annotations map[string]string `pulumi:"annotations"`
	Finalizers  []string          `pulumi:"finalizers"`
	Labels      map[string]string `pulumi:"labels"`
	Name        *string           `pulumi:"name"`
	Namespace   *string           `pulumi:"namespace"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesMetadataInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs and AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesMetadataInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesMetadataInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput
}

// Standard object's metadata.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
type AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs struct {
	Annotations pulumi.StringMapInput   `pulumi:"annotations"`
	Finalizers  pulumi.StringArrayInput `pulumi:"finalizers"`
	Labels      pulumi.StringMapInput   `pulumi:"labels"`
	Name        pulumi.StringPtrInput   `pulumi:"name"`
	Namespace   pulumi.StringPtrInput   `pulumi:"namespace"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesMetadata)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput)
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput).ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutputWithContext(ctx)
}

// AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs, AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtr and AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrInput` via:
//
//	        AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs{...}
//
//	or:
//
//	        nil
type AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput
}

type agentSpecStatefulSetVolumeClaimTemplatesMetadataPtrType AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs

func AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtr(v *AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs) AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrInput {
	return (*agentSpecStatefulSetVolumeClaimTemplatesMetadataPtrType)(v)
}

func (*agentSpecStatefulSetVolumeClaimTemplatesMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesMetadata)(nil)).Elem()
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesMetadataPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutputWithContext(context.Background())
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesMetadataPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput)
}

// Standard object's metadata.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
type AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesMetadata)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput {
	return o.ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutputWithContext(context.Background())
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecStatefulSetVolumeClaimTemplatesMetadata) *AgentSpecStatefulSetVolumeClaimTemplatesMetadata {
		return &v
	}).(AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput) Finalizers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesMetadata) []string { return v.Finalizers }).(pulumi.StringArrayOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesMetadata) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesMetadata) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesMetadata)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput) Elem() AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesMetadata) AgentSpecStatefulSetVolumeClaimTemplatesMetadata {
		if v != nil {
			return *v
		}
		var ret AgentSpecStatefulSetVolumeClaimTemplatesMetadata
		return ret
	}).(AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput) Finalizers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesMetadata) []string {
		if v == nil {
			return nil
		}
		return v.Finalizers
	}).(pulumi.StringArrayOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Standard object's metadata.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
type AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatch struct {
	Annotations map[string]string `pulumi:"annotations"`
	Finalizers  []string          `pulumi:"finalizers"`
	Labels      map[string]string `pulumi:"labels"`
	Name        *string           `pulumi:"name"`
	Namespace   *string           `pulumi:"namespace"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchArgs and AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput
}

// Standard object's metadata.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
type AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchArgs struct {
	Annotations pulumi.StringMapInput   `pulumi:"annotations"`
	Finalizers  pulumi.StringArrayInput `pulumi:"finalizers"`
	Labels      pulumi.StringMapInput   `pulumi:"labels"`
	Name        pulumi.StringPtrInput   `pulumi:"name"`
	Namespace   pulumi.StringPtrInput   `pulumi:"namespace"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatch)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput)
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput).ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutputWithContext(ctx)
}

// AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchArgs, AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtr and AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrInput` via:
//
//	        AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput
}

type agentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrType AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchArgs

func AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtr(v *AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchArgs) AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrInput {
	return (*agentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrType)(v)
}

func (*agentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatch)(nil)).Elem()
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput)
}

// Standard object's metadata.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
type AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatch)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput {
	return o.ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatch) *AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatch {
		return &v
	}).(AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatch) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput) Finalizers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatch) []string { return v.Finalizers }).(pulumi.StringArrayOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatch)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput) Elem() AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatch) AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatch
		return ret
	}).(AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput) Finalizers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatch) []string {
		if v == nil {
			return nil
		}
		return v.Finalizers
	}).(pulumi.StringArrayOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// PersistentVolumeClaim is a user's request for and claim to a persistent volume
type AgentSpecStatefulSetVolumeClaimTemplatesPatch struct {
	// APIVersion defines the versioned schema of this representation of an object.
	// Servers should convert recognized schemas to the latest internal value, and
	// may reject unrecognized values.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents.
	// Servers may infer this from the endpoint the client submits requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind     *string                                                `pulumi:"kind"`
	Metadata *AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatch `pulumi:"metadata"`
	Spec     *AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch     `pulumi:"spec"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesPatchInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesPatchArgs and AgentSpecStatefulSetVolumeClaimTemplatesPatchOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesPatchInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesPatchArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesPatchInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesPatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesPatchOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesPatchOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesPatchOutput
}

// PersistentVolumeClaim is a user's request for and claim to a persistent volume
type AgentSpecStatefulSetVolumeClaimTemplatesPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object.
	// Servers should convert recognized schemas to the latest internal value, and
	// may reject unrecognized values.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents.
	// Servers may infer this from the endpoint the client submits requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind     pulumi.StringPtrInput                                         `pulumi:"kind"`
	Metadata AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrInput `pulumi:"metadata"`
	Spec     AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrInput     `pulumi:"spec"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesPatch)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesPatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesPatchOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesPatchOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesPatchOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesPatchOutput)
}

// AgentSpecStatefulSetVolumeClaimTemplatesPatchArrayInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesPatchArray and AgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesPatchArrayInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesPatchArray{ AgentSpecStatefulSetVolumeClaimTemplatesPatchArgs{...} }
type AgentSpecStatefulSetVolumeClaimTemplatesPatchArrayInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutput() AgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutput
}

type AgentSpecStatefulSetVolumeClaimTemplatesPatchArray []AgentSpecStatefulSetVolumeClaimTemplatesPatchInput

func (AgentSpecStatefulSetVolumeClaimTemplatesPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecStatefulSetVolumeClaimTemplatesPatch)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesPatchArray) ToAgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutput() AgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesPatchArray) ToAgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutput)
}

// PersistentVolumeClaim is a user's request for and claim to a persistent volume
type AgentSpecStatefulSetVolumeClaimTemplatesPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesPatch)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesPatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesPatchOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesPatchOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesPatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object.
// Servers should convert recognized schemas to the latest internal value, and
// may reject unrecognized values.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o AgentSpecStatefulSetVolumeClaimTemplatesPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesPatch) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents.
// Servers may infer this from the endpoint the client submits requests to.
// Cannot be updated.
// In CamelCase.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AgentSpecStatefulSetVolumeClaimTemplatesPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesPatch) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesPatchOutput) Metadata() AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesPatch) *AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatch {
		return v.Metadata
	}).(AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesPatchOutput) Spec() AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesPatch) *AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch {
		return v.Spec
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecStatefulSetVolumeClaimTemplatesPatch)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutput() AgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutput) Index(i pulumi.IntInput) AgentSpecStatefulSetVolumeClaimTemplatesPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentSpecStatefulSetVolumeClaimTemplatesPatch {
		return vs[0].([]AgentSpecStatefulSetVolumeClaimTemplatesPatch)[vs[1].(int)]
	}).(AgentSpecStatefulSetVolumeClaimTemplatesPatchOutput)
}

// spec defines the desired characteristics of a volume requested by a pod author.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type AgentSpecStatefulSetVolumeClaimTemplatesSpec struct {
	// accessModes contains the desired access modes the volume should have.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
	AccessModes   []string                                                   `pulumi:"accessModes"`
	DataSource    *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource    `pulumi:"dataSource"`
	DataSourceRef *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef `pulumi:"dataSourceRef"`
	Resources     *AgentSpecStatefulSetVolumeClaimTemplatesSpecResources     `pulumi:"resources"`
	Selector      *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector      `pulumi:"selector"`
	// storageClassName is the name of the StorageClass required by the claim.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
	StorageClassName *string `pulumi:"storageClassName"`
	// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
	// If specified, the CSI driver will create or update the volume with the attributes defined
	// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
	// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
	// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
	// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
	// will be set by the persistentvolume controller if it exists.
	// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
	// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
	// exists.
	// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
	// (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
	VolumeAttributesClassName *string `pulumi:"volumeAttributesClassName"`
	// volumeMode defines what type of volume is required by the claim.
	// Value of Filesystem is implied when not included in claim spec.
	VolumeMode *string `pulumi:"volumeMode"`
	// volumeName is the binding reference to the PersistentVolume backing this claim.
	VolumeName *string `pulumi:"volumeName"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs and AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesSpecInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput
}

// spec defines the desired characteristics of a volume requested by a pod author.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs struct {
	// accessModes contains the desired access modes the volume should have.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
	AccessModes   pulumi.StringArrayInput                                           `pulumi:"accessModes"`
	DataSource    AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrInput    `pulumi:"dataSource"`
	DataSourceRef AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrInput `pulumi:"dataSourceRef"`
	Resources     AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrInput     `pulumi:"resources"`
	Selector      AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrInput      `pulumi:"selector"`
	// storageClassName is the name of the StorageClass required by the claim.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
	StorageClassName pulumi.StringPtrInput `pulumi:"storageClassName"`
	// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
	// If specified, the CSI driver will create or update the volume with the attributes defined
	// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
	// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
	// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
	// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
	// will be set by the persistentvolume controller if it exists.
	// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
	// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
	// exists.
	// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
	// (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
	VolumeAttributesClassName pulumi.StringPtrInput `pulumi:"volumeAttributesClassName"`
	// volumeMode defines what type of volume is required by the claim.
	// Value of Filesystem is implied when not included in claim spec.
	VolumeMode pulumi.StringPtrInput `pulumi:"volumeMode"`
	// volumeName is the binding reference to the PersistentVolume backing this claim.
	VolumeName pulumi.StringPtrInput `pulumi:"volumeName"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpec)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput)
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput).ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutputWithContext(ctx)
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs, AgentSpecStatefulSetVolumeClaimTemplatesSpecPtr and AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrInput` via:
//
//	        AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs{...}
//
//	or:
//
//	        nil
type AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput
}

type agentSpecStatefulSetVolumeClaimTemplatesSpecPtrType AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs

func AgentSpecStatefulSetVolumeClaimTemplatesSpecPtr(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs) AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrInput {
	return (*agentSpecStatefulSetVolumeClaimTemplatesSpecPtrType)(v)
}

func (*agentSpecStatefulSetVolumeClaimTemplatesSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpec)(nil)).Elem()
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutputWithContext(context.Background())
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput)
}

// spec defines the desired characteristics of a volume requested by a pod author.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpec)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput {
	return o.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutputWithContext(context.Background())
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecStatefulSetVolumeClaimTemplatesSpec) *AgentSpecStatefulSetVolumeClaimTemplatesSpec {
		return &v
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput)
}

// accessModes contains the desired access modes the volume should have.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpec) []string { return v.AccessModes }).(pulumi.StringArrayOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) DataSource() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpec) *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource {
		return v.DataSource
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) DataSourceRef() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpec) *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef {
		return v.DataSourceRef
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) Resources() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpec) *AgentSpecStatefulSetVolumeClaimTemplatesSpecResources {
		return v.Resources
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) Selector() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpec) *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector {
		return v.Selector
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput)
}

// storageClassName is the name of the StorageClass required by the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpec) *string { return v.StorageClassName }).(pulumi.StringPtrOutput)
}

// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
// If specified, the CSI driver will create or update the volume with the attributes defined
// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
// will be set by the persistentvolume controller if it exists.
// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
// exists.
// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
// (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) VolumeAttributesClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpec) *string { return v.VolumeAttributesClassName }).(pulumi.StringPtrOutput)
}

// volumeMode defines what type of volume is required by the claim.
// Value of Filesystem is implied when not included in claim spec.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) VolumeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpec) *string { return v.VolumeMode }).(pulumi.StringPtrOutput)
}

// volumeName is the binding reference to the PersistentVolume backing this claim.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpec) *string { return v.VolumeName }).(pulumi.StringPtrOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpec)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) Elem() AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpec) AgentSpecStatefulSetVolumeClaimTemplatesSpec {
		if v != nil {
			return *v
		}
		var ret AgentSpecStatefulSetVolumeClaimTemplatesSpec
		return ret
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput)
}

// accessModes contains the desired access modes the volume should have.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpec) []string {
		if v == nil {
			return nil
		}
		return v.AccessModes
	}).(pulumi.StringArrayOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) DataSource() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpec) *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource {
		if v == nil {
			return nil
		}
		return v.DataSource
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) DataSourceRef() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpec) *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef {
		if v == nil {
			return nil
		}
		return v.DataSourceRef
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) Resources() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpec) *AgentSpecStatefulSetVolumeClaimTemplatesSpecResources {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) Selector() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpec) *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput)
}

// storageClassName is the name of the StorageClass required by the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpec) *string {
		if v == nil {
			return nil
		}
		return v.StorageClassName
	}).(pulumi.StringPtrOutput)
}

// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
// If specified, the CSI driver will create or update the volume with the attributes defined
// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
// will be set by the persistentvolume controller if it exists.
// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
// exists.
// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
// (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) VolumeAttributesClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpec) *string {
		if v == nil {
			return nil
		}
		return v.VolumeAttributesClassName
	}).(pulumi.StringPtrOutput)
}

// volumeMode defines what type of volume is required by the claim.
// Value of Filesystem is implied when not included in claim spec.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) VolumeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpec) *string {
		if v == nil {
			return nil
		}
		return v.VolumeMode
	}).(pulumi.StringPtrOutput)
}

// volumeName is the binding reference to the PersistentVolume backing this claim.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpec) *string {
		if v == nil {
			return nil
		}
		return v.VolumeName
	}).(pulumi.StringPtrOutput)
}

// dataSource field can be used to specify either:
//   - An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
//   - An existing PVC (PersistentVolumeClaim)
//     If the provisioner or an external controller can support the specified data source,
//     it will create a new volume based on the contents of the specified data source.
//     When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
//     and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
//     If the namespace is specified, then dataSourceRef will not be copied to dataSource.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup *string `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind *string `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name *string `pulumi:"name"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs and AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput
}

// dataSource field can be used to specify either:
//   - An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
//   - An existing PVC (PersistentVolumeClaim)
//     If the provisioner or an external controller can support the specified data source,
//     it will create a new volume based on the contents of the specified data source.
//     When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
//     and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
//     If the namespace is specified, then dataSourceRef will not be copied to dataSource.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup pulumi.StringPtrInput `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput)
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput).ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(ctx)
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs, AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtr and AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrInput` via:
//
//	        AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs{...}
//
//	or:
//
//	        nil
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput
}

type agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrType AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs

func AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtr(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrInput {
	return (*agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrType)(v)
}

func (*agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource)(nil)).Elem()
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(context.Background())
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput)
}

// dataSource field can be used to specify either:
//   - An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
//   - An existing PVC (PersistentVolumeClaim)
//     If the provisioner or an external controller can support the specified data source,
//     it will create a new volume based on the contents of the specified data source.
//     When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
//     and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
//     If the namespace is specified, then dataSourceRef will not be copied to dataSource.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return o.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(context.Background())
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource) *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource {
		return &v
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource) *string { return v.ApiGroup }).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput) Elem() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource {
		if v != nil {
			return *v
		}
		var ret AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource
		return ret
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource) *string {
		if v == nil {
			return nil
		}
		return v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// dataSource field can be used to specify either:
//   - An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
//   - An existing PVC (PersistentVolumeClaim)
//     If the provisioner or an external controller can support the specified data source,
//     it will create a new volume based on the contents of the specified data source.
//     When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
//     and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
//     If the namespace is specified, then dataSourceRef will not be copied to dataSource.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatch struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup *string `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind *string `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name *string `pulumi:"name"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchArgs and AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput
}

// dataSource field can be used to specify either:
//   - An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
//   - An existing PVC (PersistentVolumeClaim)
//     If the provisioner or an external controller can support the specified data source,
//     it will create a new volume based on the contents of the specified data source.
//     When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
//     and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
//     If the namespace is specified, then dataSourceRef will not be copied to dataSource.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchArgs struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup pulumi.StringPtrInput `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatch)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput)
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput).ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutputWithContext(ctx)
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchArgs, AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtr and AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrInput` via:
//
//	        AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput
}

type agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrType AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchArgs

func AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtr(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchArgs) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrInput {
	return (*agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrType)(v)
}

func (*agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatch)(nil)).Elem()
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput)
}

// dataSource field can be used to specify either:
//   - An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
//   - An existing PVC (PersistentVolumeClaim)
//     If the provisioner or an external controller can support the specified data source,
//     it will create a new volume based on the contents of the specified data source.
//     When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
//     and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
//     If the namespace is specified, then dataSourceRef will not be copied to dataSource.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatch)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput {
	return o.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatch) *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatch {
		return &v
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatch) *string { return v.ApiGroup }).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatch) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatch)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput) Elem() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatch) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatch
		return ret
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatch) *string {
		if v == nil {
			return nil
		}
		return v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatch) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
// volume is desired. This may be any object from a non-empty API group (non
// core object) or a PersistentVolumeClaim object.
// When this field is specified, volume binding will only succeed if the type of
// the specified object matches some installed volume populator or dynamic
// provisioner.
// This field will replace the functionality of the dataSource field and as such
// if both fields are non-empty, they must have the same value. For backwards
// compatibility, when namespace isn't specified in dataSourceRef,
// both fields (dataSource and dataSourceRef) will be set to the same
// value automatically if one of them is empty and the other is non-empty.
// When namespace is specified in dataSourceRef,
// dataSource isn't set to the same value and must be empty.
// There are three important differences between dataSource and dataSourceRef:
//   - While dataSource only allows two specific types of objects, dataSourceRef
//     allows any non-core object, as well as PersistentVolumeClaim objects.
//   - While dataSource ignores disallowed values (dropping them), dataSourceRef
//     preserves all values, and generates an error if a disallowed value is
//     specified.
//   - While dataSource only allows local objects, dataSourceRef allows objects
//     in any namespaces.
//     (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
//     (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup *string `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind *string `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name *string `pulumi:"name"`
	// Namespace is the namespace of resource being referenced
	// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
	// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
	Namespace *string `pulumi:"namespace"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs and AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput
}

// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
// volume is desired. This may be any object from a non-empty API group (non
// core object) or a PersistentVolumeClaim object.
// When this field is specified, volume binding will only succeed if the type of
// the specified object matches some installed volume populator or dynamic
// provisioner.
// This field will replace the functionality of the dataSource field and as such
// if both fields are non-empty, they must have the same value. For backwards
// compatibility, when namespace isn't specified in dataSourceRef,
// both fields (dataSource and dataSourceRef) will be set to the same
// value automatically if one of them is empty and the other is non-empty.
// When namespace is specified in dataSourceRef,
// dataSource isn't set to the same value and must be empty.
// There are three important differences between dataSource and dataSourceRef:
//   - While dataSource only allows two specific types of objects, dataSourceRef
//     allows any non-core object, as well as PersistentVolumeClaim objects.
//   - While dataSource ignores disallowed values (dropping them), dataSourceRef
//     preserves all values, and generates an error if a disallowed value is
//     specified.
//   - While dataSource only allows local objects, dataSourceRef allows objects
//     in any namespaces.
//     (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
//     (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup pulumi.StringPtrInput `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace is the namespace of resource being referenced
	// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
	// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput)
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput).ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutputWithContext(ctx)
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs, AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtr and AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrInput` via:
//
//	        AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs{...}
//
//	or:
//
//	        nil
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput
}

type agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrType AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs

func AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtr(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrInput {
	return (*agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrType)(v)
}

func (*agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef)(nil)).Elem()
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutputWithContext(context.Background())
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput)
}

// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
// volume is desired. This may be any object from a non-empty API group (non
// core object) or a PersistentVolumeClaim object.
// When this field is specified, volume binding will only succeed if the type of
// the specified object matches some installed volume populator or dynamic
// provisioner.
// This field will replace the functionality of the dataSource field and as such
// if both fields are non-empty, they must have the same value. For backwards
// compatibility, when namespace isn't specified in dataSourceRef,
// both fields (dataSource and dataSourceRef) will be set to the same
// value automatically if one of them is empty and the other is non-empty.
// When namespace is specified in dataSourceRef,
// dataSource isn't set to the same value and must be empty.
// There are three important differences between dataSource and dataSourceRef:
//   - While dataSource only allows two specific types of objects, dataSourceRef
//     allows any non-core object, as well as PersistentVolumeClaim objects.
//   - While dataSource ignores disallowed values (dropping them), dataSourceRef
//     preserves all values, and generates an error if a disallowed value is
//     specified.
//   - While dataSource only allows local objects, dataSourceRef allows objects
//     in any namespaces.
//     (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
//     (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput {
	return o.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutputWithContext(context.Background())
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef) *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef {
		return &v
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef) *string { return v.ApiGroup }).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of resource being referenced
// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput) Elem() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef {
		if v != nil {
			return *v
		}
		var ret AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef
		return ret
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of resource being referenced
// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
// volume is desired. This may be any object from a non-empty API group (non
// core object) or a PersistentVolumeClaim object.
// When this field is specified, volume binding will only succeed if the type of
// the specified object matches some installed volume populator or dynamic
// provisioner.
// This field will replace the functionality of the dataSource field and as such
// if both fields are non-empty, they must have the same value. For backwards
// compatibility, when namespace isn't specified in dataSourceRef,
// both fields (dataSource and dataSourceRef) will be set to the same
// value automatically if one of them is empty and the other is non-empty.
// When namespace is specified in dataSourceRef,
// dataSource isn't set to the same value and must be empty.
// There are three important differences between dataSource and dataSourceRef:
//   - While dataSource only allows two specific types of objects, dataSourceRef
//     allows any non-core object, as well as PersistentVolumeClaim objects.
//   - While dataSource ignores disallowed values (dropping them), dataSourceRef
//     preserves all values, and generates an error if a disallowed value is
//     specified.
//   - While dataSource only allows local objects, dataSourceRef allows objects
//     in any namespaces.
//     (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
//     (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatch struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup *string `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind *string `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name *string `pulumi:"name"`
	// Namespace is the namespace of resource being referenced
	// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
	// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
	Namespace *string `pulumi:"namespace"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchArgs and AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput
}

// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
// volume is desired. This may be any object from a non-empty API group (non
// core object) or a PersistentVolumeClaim object.
// When this field is specified, volume binding will only succeed if the type of
// the specified object matches some installed volume populator or dynamic
// provisioner.
// This field will replace the functionality of the dataSource field and as such
// if both fields are non-empty, they must have the same value. For backwards
// compatibility, when namespace isn't specified in dataSourceRef,
// both fields (dataSource and dataSourceRef) will be set to the same
// value automatically if one of them is empty and the other is non-empty.
// When namespace is specified in dataSourceRef,
// dataSource isn't set to the same value and must be empty.
// There are three important differences between dataSource and dataSourceRef:
//   - While dataSource only allows two specific types of objects, dataSourceRef
//     allows any non-core object, as well as PersistentVolumeClaim objects.
//   - While dataSource ignores disallowed values (dropping them), dataSourceRef
//     preserves all values, and generates an error if a disallowed value is
//     specified.
//   - While dataSource only allows local objects, dataSourceRef allows objects
//     in any namespaces.
//     (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
//     (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchArgs struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup pulumi.StringPtrInput `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace is the namespace of resource being referenced
	// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
	// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatch)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput)
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput).ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutputWithContext(ctx)
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchArgs, AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtr and AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrInput` via:
//
//	        AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput
}

type agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrType AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchArgs

func AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtr(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchArgs) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrInput {
	return (*agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrType)(v)
}

func (*agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatch)(nil)).Elem()
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput)
}

// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
// volume is desired. This may be any object from a non-empty API group (non
// core object) or a PersistentVolumeClaim object.
// When this field is specified, volume binding will only succeed if the type of
// the specified object matches some installed volume populator or dynamic
// provisioner.
// This field will replace the functionality of the dataSource field and as such
// if both fields are non-empty, they must have the same value. For backwards
// compatibility, when namespace isn't specified in dataSourceRef,
// both fields (dataSource and dataSourceRef) will be set to the same
// value automatically if one of them is empty and the other is non-empty.
// When namespace is specified in dataSourceRef,
// dataSource isn't set to the same value and must be empty.
// There are three important differences between dataSource and dataSourceRef:
//   - While dataSource only allows two specific types of objects, dataSourceRef
//     allows any non-core object, as well as PersistentVolumeClaim objects.
//   - While dataSource ignores disallowed values (dropping them), dataSourceRef
//     preserves all values, and generates an error if a disallowed value is
//     specified.
//   - While dataSource only allows local objects, dataSourceRef allows objects
//     in any namespaces.
//     (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
//     (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatch)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput {
	return o.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatch) *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatch {
		return &v
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatch) *string { return v.ApiGroup }).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatch) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of resource being referenced
// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatch)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput) Elem() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatch) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatch
		return ret
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of resource being referenced
// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// spec defines the desired characteristics of a volume requested by a pod author.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch struct {
	// accessModes contains the desired access modes the volume should have.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
	AccessModes   []string                                                        `pulumi:"accessModes"`
	DataSource    *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatch    `pulumi:"dataSource"`
	DataSourceRef *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatch `pulumi:"dataSourceRef"`
	Resources     *AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatch     `pulumi:"resources"`
	Selector      *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatch      `pulumi:"selector"`
	// storageClassName is the name of the StorageClass required by the claim.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
	StorageClassName *string `pulumi:"storageClassName"`
	// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
	// If specified, the CSI driver will create or update the volume with the attributes defined
	// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
	// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
	// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
	// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
	// will be set by the persistentvolume controller if it exists.
	// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
	// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
	// exists.
	// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
	// (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
	VolumeAttributesClassName *string `pulumi:"volumeAttributesClassName"`
	// volumeMode defines what type of volume is required by the claim.
	// Value of Filesystem is implied when not included in claim spec.
	VolumeMode *string `pulumi:"volumeMode"`
	// volumeName is the binding reference to the PersistentVolume backing this claim.
	VolumeName *string `pulumi:"volumeName"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchArgs and AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput
}

// spec defines the desired characteristics of a volume requested by a pod author.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchArgs struct {
	// accessModes contains the desired access modes the volume should have.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
	AccessModes   pulumi.StringArrayInput                                                `pulumi:"accessModes"`
	DataSource    AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrInput    `pulumi:"dataSource"`
	DataSourceRef AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrInput `pulumi:"dataSourceRef"`
	Resources     AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrInput     `pulumi:"resources"`
	Selector      AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrInput      `pulumi:"selector"`
	// storageClassName is the name of the StorageClass required by the claim.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
	StorageClassName pulumi.StringPtrInput `pulumi:"storageClassName"`
	// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
	// If specified, the CSI driver will create or update the volume with the attributes defined
	// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
	// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
	// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
	// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
	// will be set by the persistentvolume controller if it exists.
	// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
	// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
	// exists.
	// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
	// (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
	VolumeAttributesClassName pulumi.StringPtrInput `pulumi:"volumeAttributesClassName"`
	// volumeMode defines what type of volume is required by the claim.
	// Value of Filesystem is implied when not included in claim spec.
	VolumeMode pulumi.StringPtrInput `pulumi:"volumeMode"`
	// volumeName is the binding reference to the PersistentVolume backing this claim.
	VolumeName pulumi.StringPtrInput `pulumi:"volumeName"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput)
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput).ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutputWithContext(ctx)
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchArgs, AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtr and AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrInput` via:
//
//	        AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput
}

type agentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrType AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchArgs

func AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtr(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchArgs) AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrInput {
	return (*agentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrType)(v)
}

func (*agentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch)(nil)).Elem()
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput)
}

// spec defines the desired characteristics of a volume requested by a pod author.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput {
	return o.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch) *AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch {
		return &v
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput)
}

// accessModes contains the desired access modes the volume should have.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch) []string { return v.AccessModes }).(pulumi.StringArrayOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput) DataSource() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch) *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatch {
		return v.DataSource
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput) DataSourceRef() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch) *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatch {
		return v.DataSourceRef
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput) Resources() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch) *AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatch {
		return v.Resources
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput) Selector() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch) *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatch {
		return v.Selector
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput)
}

// storageClassName is the name of the StorageClass required by the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch) *string { return v.StorageClassName }).(pulumi.StringPtrOutput)
}

// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
// If specified, the CSI driver will create or update the volume with the attributes defined
// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
// will be set by the persistentvolume controller if it exists.
// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
// exists.
// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
// (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput) VolumeAttributesClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch) *string { return v.VolumeAttributesClassName }).(pulumi.StringPtrOutput)
}

// volumeMode defines what type of volume is required by the claim.
// Value of Filesystem is implied when not included in claim spec.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput) VolumeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch) *string { return v.VolumeMode }).(pulumi.StringPtrOutput)
}

// volumeName is the binding reference to the PersistentVolume backing this claim.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch) *string { return v.VolumeName }).(pulumi.StringPtrOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput) Elem() AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch) AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch
		return ret
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput)
}

// accessModes contains the desired access modes the volume should have.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch) []string {
		if v == nil {
			return nil
		}
		return v.AccessModes
	}).(pulumi.StringArrayOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput) DataSource() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch) *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatch {
		if v == nil {
			return nil
		}
		return v.DataSource
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput) DataSourceRef() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch) *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatch {
		if v == nil {
			return nil
		}
		return v.DataSourceRef
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput) Resources() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch) *AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatch {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput) Selector() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch) *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatch {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput)
}

// storageClassName is the name of the StorageClass required by the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.StorageClassName
	}).(pulumi.StringPtrOutput)
}

// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
// If specified, the CSI driver will create or update the volume with the attributes defined
// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
// will be set by the persistentvolume controller if it exists.
// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
// exists.
// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
// (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput) VolumeAttributesClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.VolumeAttributesClassName
	}).(pulumi.StringPtrOutput)
}

// volumeMode defines what type of volume is required by the claim.
// Value of Filesystem is implied when not included in claim spec.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput) VolumeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.VolumeMode
	}).(pulumi.StringPtrOutput)
}

// volumeName is the binding reference to the PersistentVolume backing this claim.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.VolumeName
	}).(pulumi.StringPtrOutput)
}

// resources represents the minimum resources the volume should have.
// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
// that are lower than previous value but must still be higher than capacity recorded in the
// status field of the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
type AgentSpecStatefulSetVolumeClaimTemplatesSpecResources struct {
	// Limits describes the maximum amount of compute resources allowed.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Limits map[string]interface{} `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required.
	// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
	// otherwise to an implementation-defined value. Requests cannot exceed Limits.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Requests map[string]interface{} `pulumi:"requests"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs and AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput
}

// resources represents the minimum resources the volume should have.
// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
// that are lower than previous value but must still be higher than capacity recorded in the
// status field of the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
type AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs struct {
	// Limits describes the maximum amount of compute resources allowed.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Limits pulumi.MapInput `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required.
	// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
	// otherwise to an implementation-defined value. Requests cannot exceed Limits.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Requests pulumi.MapInput `pulumi:"requests"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecResources)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput)
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput).ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(ctx)
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs, AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtr and AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrInput` via:
//
//	        AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs{...}
//
//	or:
//
//	        nil
type AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput
}

type agentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrType AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs

func AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtr(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrInput {
	return (*agentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrType)(v)
}

func (*agentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecResources)(nil)).Elem()
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(context.Background())
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput)
}

// resources represents the minimum resources the volume should have.
// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
// that are lower than previous value but must still be higher than capacity recorded in the
// status field of the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
type AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecResources)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput {
	return o.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(context.Background())
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecStatefulSetVolumeClaimTemplatesSpecResources) *AgentSpecStatefulSetVolumeClaimTemplatesSpecResources {
		return &v
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput)
}

// Limits describes the maximum amount of compute resources allowed.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput) Limits() pulumi.MapOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecResources) map[string]interface{} { return v.Limits }).(pulumi.MapOutput)
}

// Requests describes the minimum amount of compute resources required.
// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
// otherwise to an implementation-defined value. Requests cannot exceed Limits.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput) Requests() pulumi.MapOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecResources) map[string]interface{} {
		return v.Requests
	}).(pulumi.MapOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecResources)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput) Elem() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecResources) AgentSpecStatefulSetVolumeClaimTemplatesSpecResources {
		if v != nil {
			return *v
		}
		var ret AgentSpecStatefulSetVolumeClaimTemplatesSpecResources
		return ret
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput)
}

// Limits describes the maximum amount of compute resources allowed.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput) Limits() pulumi.MapOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecResources) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.MapOutput)
}

// Requests describes the minimum amount of compute resources required.
// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
// otherwise to an implementation-defined value. Requests cannot exceed Limits.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput) Requests() pulumi.MapOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecResources) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(pulumi.MapOutput)
}

// resources represents the minimum resources the volume should have.
// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
// that are lower than previous value but must still be higher than capacity recorded in the
// status field of the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
type AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatch struct {
	// Limits describes the maximum amount of compute resources allowed.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Limits map[string]interface{} `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required.
	// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
	// otherwise to an implementation-defined value. Requests cannot exceed Limits.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Requests map[string]interface{} `pulumi:"requests"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchArgs and AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutput
}

// resources represents the minimum resources the volume should have.
// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
// that are lower than previous value but must still be higher than capacity recorded in the
// status field of the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
type AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchArgs struct {
	// Limits describes the maximum amount of compute resources allowed.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Limits pulumi.MapInput `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required.
	// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
	// otherwise to an implementation-defined value. Requests cannot exceed Limits.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Requests pulumi.MapInput `pulumi:"requests"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatch)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutput)
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutput).ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutputWithContext(ctx)
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchArgs, AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtr and AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrInput` via:
//
//	        AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput
}

type agentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrType AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchArgs

func AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtr(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchArgs) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrInput {
	return (*agentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrType)(v)
}

func (*agentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatch)(nil)).Elem()
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput)
}

// resources represents the minimum resources the volume should have.
// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
// that are lower than previous value but must still be higher than capacity recorded in the
// status field of the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
type AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatch)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput {
	return o.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatch) *AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatch {
		return &v
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput)
}

// Limits describes the maximum amount of compute resources allowed.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutput) Limits() pulumi.MapOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatch) map[string]interface{} {
		return v.Limits
	}).(pulumi.MapOutput)
}

// Requests describes the minimum amount of compute resources required.
// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
// otherwise to an implementation-defined value. Requests cannot exceed Limits.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutput) Requests() pulumi.MapOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatch) map[string]interface{} {
		return v.Requests
	}).(pulumi.MapOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatch)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput) Elem() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatch) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatch
		return ret
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutput)
}

// Limits describes the maximum amount of compute resources allowed.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput) Limits() pulumi.MapOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatch) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.MapOutput)
}

// Requests describes the minimum amount of compute resources required.
// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
// otherwise to an implementation-defined value. Requests cannot exceed Limits.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput) Requests() pulumi.MapOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatch) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(pulumi.MapOutput)
}

// selector is a label query over volumes to consider for binding.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs and AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput
}

// selector is a label query over volumes to consider for binding.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput)
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput).ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(ctx)
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs, AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtr and AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrInput` via:
//
//	        AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs{...}
//
//	or:
//
//	        nil
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput
}

type agentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrType AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs

func AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtr(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrInput {
	return (*agentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrType)(v)
}

func (*agentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector)(nil)).Elem()
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(context.Background())
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput)
}

// selector is a label query over volumes to consider for binding.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput {
	return o.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(context.Background())
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector) *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector {
		return &v
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput) MatchExpressions() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector) []AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions {
		return v.MatchExpressions
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput) Elem() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector {
		if v != nil {
			return *v
		}
		var ret AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector
		return ret
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput) MatchExpressions() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector) []AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArgs and AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput)
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArray and AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArray{ AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArgs{...} }
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput
}

type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArray []AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsInput

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArray) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArray) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions {
		return vs[0].([]AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions)[vs[1].(int)]
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatch struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArgs and AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutput)
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArray and AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArray{ AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArgs{...} }
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutput
}

type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArray []AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchInput

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArray) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArray) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutput {
	return o
}

// key is the label key that the selector applies to.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatch) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatch) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatch {
		return vs[0].([]AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutput)
}

// selector is a label query over volumes to consider for binding.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatch struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchArgs and AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutput
}

// selector is a label query over volumes to consider for binding.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatch)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutput)
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutput).ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutputWithContext(ctx)
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchArgs, AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtr and AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrInput` via:
//
//	        AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput
}

type agentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrType AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchArgs

func AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtr(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchArgs) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrInput {
	return (*agentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrType)(v)
}

func (*agentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatch)(nil)).Elem()
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput)
}

// selector is a label query over volumes to consider for binding.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatch)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput {
	return o.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutputWithContext(context.Background())
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatch) *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatch {
		return &v
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutput) MatchExpressions() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatch) []AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatch) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatch)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput) Elem() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatch) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatch {
		if v != nil {
			return *v
		}
		var ret AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatch
		return ret
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput) MatchExpressions() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatch) []AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// AgentStatus defines the observed state of the Agent
type AgentStatus struct {
	AvailableNodes *int `pulumi:"availableNodes"`
	// AssociationStatusMap is the map of association's namespaced name string to its AssociationStatus. For resources that
	// have a single Association of a given type (for ex. single ES reference), this map contains a single entry.
	ElasticsearchAssociationsStatus map[string]string `pulumi:"elasticsearchAssociationsStatus"`
	ExpectedNodes                   *int              `pulumi:"expectedNodes"`
	// AssociationStatus is the status of an association resource.
	FleetServerAssociationStatus *string `pulumi:"fleetServerAssociationStatus"`
	Health                       *string `pulumi:"health"`
	// AssociationStatus is the status of an association resource.
	KibanaAssociationStatus *string `pulumi:"kibanaAssociationStatus"`
	// ObservedGeneration is the most recent generation observed for this Elastic Agent.
	// It corresponds to the metadata generation, which is updated on mutation by the API Server.
	// If the generation observed in status diverges from the generation in metadata, the Elastic
	// Agent controller has not yet processed the changes contained in the Elastic Agent specification.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// Version of the stack resource currently running. During version upgrades, multiple versions may run
	// in parallel: this value specifies the lowest version currently running.
	Version *string `pulumi:"version"`
}

// AgentStatusInput is an input type that accepts AgentStatusArgs and AgentStatusOutput values.
// You can construct a concrete instance of `AgentStatusInput` via:
//
//	AgentStatusArgs{...}
type AgentStatusInput interface {
	pulumi.Input

	ToAgentStatusOutput() AgentStatusOutput
	ToAgentStatusOutputWithContext(context.Context) AgentStatusOutput
}

// AgentStatus defines the observed state of the Agent
type AgentStatusArgs struct {
	AvailableNodes pulumi.IntPtrInput `pulumi:"availableNodes"`
	// AssociationStatusMap is the map of association's namespaced name string to its AssociationStatus. For resources that
	// have a single Association of a given type (for ex. single ES reference), this map contains a single entry.
	ElasticsearchAssociationsStatus pulumi.StringMapInput `pulumi:"elasticsearchAssociationsStatus"`
	ExpectedNodes                   pulumi.IntPtrInput    `pulumi:"expectedNodes"`
	// AssociationStatus is the status of an association resource.
	FleetServerAssociationStatus pulumi.StringPtrInput `pulumi:"fleetServerAssociationStatus"`
	Health                       pulumi.StringPtrInput `pulumi:"health"`
	// AssociationStatus is the status of an association resource.
	KibanaAssociationStatus pulumi.StringPtrInput `pulumi:"kibanaAssociationStatus"`
	// ObservedGeneration is the most recent generation observed for this Elastic Agent.
	// It corresponds to the metadata generation, which is updated on mutation by the API Server.
	// If the generation observed in status diverges from the generation in metadata, the Elastic
	// Agent controller has not yet processed the changes contained in the Elastic Agent specification.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// Version of the stack resource currently running. During version upgrades, multiple versions may run
	// in parallel: this value specifies the lowest version currently running.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (AgentStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentStatus)(nil)).Elem()
}

func (i AgentStatusArgs) ToAgentStatusOutput() AgentStatusOutput {
	return i.ToAgentStatusOutputWithContext(context.Background())
}

func (i AgentStatusArgs) ToAgentStatusOutputWithContext(ctx context.Context) AgentStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentStatusOutput)
}

func (i AgentStatusArgs) ToAgentStatusPtrOutput() AgentStatusPtrOutput {
	return i.ToAgentStatusPtrOutputWithContext(context.Background())
}

func (i AgentStatusArgs) ToAgentStatusPtrOutputWithContext(ctx context.Context) AgentStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentStatusOutput).ToAgentStatusPtrOutputWithContext(ctx)
}

// AgentStatusPtrInput is an input type that accepts AgentStatusArgs, AgentStatusPtr and AgentStatusPtrOutput values.
// You can construct a concrete instance of `AgentStatusPtrInput` via:
//
//	        AgentStatusArgs{...}
//
//	or:
//
//	        nil
type AgentStatusPtrInput interface {
	pulumi.Input

	ToAgentStatusPtrOutput() AgentStatusPtrOutput
	ToAgentStatusPtrOutputWithContext(context.Context) AgentStatusPtrOutput
}

type agentStatusPtrType AgentStatusArgs

func AgentStatusPtr(v *AgentStatusArgs) AgentStatusPtrInput {
	return (*agentStatusPtrType)(v)
}

func (*agentStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentStatus)(nil)).Elem()
}

func (i *agentStatusPtrType) ToAgentStatusPtrOutput() AgentStatusPtrOutput {
	return i.ToAgentStatusPtrOutputWithContext(context.Background())
}

func (i *agentStatusPtrType) ToAgentStatusPtrOutputWithContext(ctx context.Context) AgentStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentStatusPtrOutput)
}

// AgentStatus defines the observed state of the Agent
type AgentStatusOutput struct{ *pulumi.OutputState }

func (AgentStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentStatus)(nil)).Elem()
}

func (o AgentStatusOutput) ToAgentStatusOutput() AgentStatusOutput {
	return o
}

func (o AgentStatusOutput) ToAgentStatusOutputWithContext(ctx context.Context) AgentStatusOutput {
	return o
}

func (o AgentStatusOutput) ToAgentStatusPtrOutput() AgentStatusPtrOutput {
	return o.ToAgentStatusPtrOutputWithContext(context.Background())
}

func (o AgentStatusOutput) ToAgentStatusPtrOutputWithContext(ctx context.Context) AgentStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentStatus) *AgentStatus {
		return &v
	}).(AgentStatusPtrOutput)
}

func (o AgentStatusOutput) AvailableNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentStatus) *int { return v.AvailableNodes }).(pulumi.IntPtrOutput)
}

// AssociationStatusMap is the map of association's namespaced name string to its AssociationStatus. For resources that
// have a single Association of a given type (for ex. single ES reference), this map contains a single entry.
func (o AgentStatusOutput) ElasticsearchAssociationsStatus() pulumi.StringMapOutput {
	return o.ApplyT(func(v AgentStatus) map[string]string { return v.ElasticsearchAssociationsStatus }).(pulumi.StringMapOutput)
}

func (o AgentStatusOutput) ExpectedNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentStatus) *int { return v.ExpectedNodes }).(pulumi.IntPtrOutput)
}

// AssociationStatus is the status of an association resource.
func (o AgentStatusOutput) FleetServerAssociationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentStatus) *string { return v.FleetServerAssociationStatus }).(pulumi.StringPtrOutput)
}

func (o AgentStatusOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentStatus) *string { return v.Health }).(pulumi.StringPtrOutput)
}

// AssociationStatus is the status of an association resource.
func (o AgentStatusOutput) KibanaAssociationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentStatus) *string { return v.KibanaAssociationStatus }).(pulumi.StringPtrOutput)
}

// ObservedGeneration is the most recent generation observed for this Elastic Agent.
// It corresponds to the metadata generation, which is updated on mutation by the API Server.
// If the generation observed in status diverges from the generation in metadata, the Elastic
// Agent controller has not yet processed the changes contained in the Elastic Agent specification.
func (o AgentStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// Version of the stack resource currently running. During version upgrades, multiple versions may run
// in parallel: this value specifies the lowest version currently running.
func (o AgentStatusOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentStatus) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type AgentStatusPtrOutput struct{ *pulumi.OutputState }

func (AgentStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentStatus)(nil)).Elem()
}

func (o AgentStatusPtrOutput) ToAgentStatusPtrOutput() AgentStatusPtrOutput {
	return o
}

func (o AgentStatusPtrOutput) ToAgentStatusPtrOutputWithContext(ctx context.Context) AgentStatusPtrOutput {
	return o
}

func (o AgentStatusPtrOutput) Elem() AgentStatusOutput {
	return o.ApplyT(func(v *AgentStatus) AgentStatus {
		if v != nil {
			return *v
		}
		var ret AgentStatus
		return ret
	}).(AgentStatusOutput)
}

func (o AgentStatusPtrOutput) AvailableNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentStatus) *int {
		if v == nil {
			return nil
		}
		return v.AvailableNodes
	}).(pulumi.IntPtrOutput)
}

// AssociationStatusMap is the map of association's namespaced name string to its AssociationStatus. For resources that
// have a single Association of a given type (for ex. single ES reference), this map contains a single entry.
func (o AgentStatusPtrOutput) ElasticsearchAssociationsStatus() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentStatus) map[string]string {
		if v == nil {
			return nil
		}
		return v.ElasticsearchAssociationsStatus
	}).(pulumi.StringMapOutput)
}

func (o AgentStatusPtrOutput) ExpectedNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentStatus) *int {
		if v == nil {
			return nil
		}
		return v.ExpectedNodes
	}).(pulumi.IntPtrOutput)
}

// AssociationStatus is the status of an association resource.
func (o AgentStatusPtrOutput) FleetServerAssociationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentStatus) *string {
		if v == nil {
			return nil
		}
		return v.FleetServerAssociationStatus
	}).(pulumi.StringPtrOutput)
}

func (o AgentStatusPtrOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentStatus) *string {
		if v == nil {
			return nil
		}
		return v.Health
	}).(pulumi.StringPtrOutput)
}

// AssociationStatus is the status of an association resource.
func (o AgentStatusPtrOutput) KibanaAssociationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentStatus) *string {
		if v == nil {
			return nil
		}
		return v.KibanaAssociationStatus
	}).(pulumi.StringPtrOutput)
}

// ObservedGeneration is the most recent generation observed for this Elastic Agent.
// It corresponds to the metadata generation, which is updated on mutation by the API Server.
// If the generation observed in status diverges from the generation in metadata, the Elastic
// Agent controller has not yet processed the changes contained in the Elastic Agent specification.
func (o AgentStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// Version of the stack resource currently running. During version upgrades, multiple versions may run
// in parallel: this value specifies the lowest version currently running.
func (o AgentStatusPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentStatus) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// AgentStatus defines the observed state of the Agent
type AgentStatusPatch struct {
	AvailableNodes *int `pulumi:"availableNodes"`
	// AssociationStatusMap is the map of association's namespaced name string to its AssociationStatus. For resources that
	// have a single Association of a given type (for ex. single ES reference), this map contains a single entry.
	ElasticsearchAssociationsStatus map[string]string `pulumi:"elasticsearchAssociationsStatus"`
	ExpectedNodes                   *int              `pulumi:"expectedNodes"`
	// AssociationStatus is the status of an association resource.
	FleetServerAssociationStatus *string `pulumi:"fleetServerAssociationStatus"`
	Health                       *string `pulumi:"health"`
	// AssociationStatus is the status of an association resource.
	KibanaAssociationStatus *string `pulumi:"kibanaAssociationStatus"`
	// ObservedGeneration is the most recent generation observed for this Elastic Agent.
	// It corresponds to the metadata generation, which is updated on mutation by the API Server.
	// If the generation observed in status diverges from the generation in metadata, the Elastic
	// Agent controller has not yet processed the changes contained in the Elastic Agent specification.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// Version of the stack resource currently running. During version upgrades, multiple versions may run
	// in parallel: this value specifies the lowest version currently running.
	Version *string `pulumi:"version"`
}

// AgentStatusPatchInput is an input type that accepts AgentStatusPatchArgs and AgentStatusPatchOutput values.
// You can construct a concrete instance of `AgentStatusPatchInput` via:
//
//	AgentStatusPatchArgs{...}
type AgentStatusPatchInput interface {
	pulumi.Input

	ToAgentStatusPatchOutput() AgentStatusPatchOutput
	ToAgentStatusPatchOutputWithContext(context.Context) AgentStatusPatchOutput
}

// AgentStatus defines the observed state of the Agent
type AgentStatusPatchArgs struct {
	AvailableNodes pulumi.IntPtrInput `pulumi:"availableNodes"`
	// AssociationStatusMap is the map of association's namespaced name string to its AssociationStatus. For resources that
	// have a single Association of a given type (for ex. single ES reference), this map contains a single entry.
	ElasticsearchAssociationsStatus pulumi.StringMapInput `pulumi:"elasticsearchAssociationsStatus"`
	ExpectedNodes                   pulumi.IntPtrInput    `pulumi:"expectedNodes"`
	// AssociationStatus is the status of an association resource.
	FleetServerAssociationStatus pulumi.StringPtrInput `pulumi:"fleetServerAssociationStatus"`
	Health                       pulumi.StringPtrInput `pulumi:"health"`
	// AssociationStatus is the status of an association resource.
	KibanaAssociationStatus pulumi.StringPtrInput `pulumi:"kibanaAssociationStatus"`
	// ObservedGeneration is the most recent generation observed for this Elastic Agent.
	// It corresponds to the metadata generation, which is updated on mutation by the API Server.
	// If the generation observed in status diverges from the generation in metadata, the Elastic
	// Agent controller has not yet processed the changes contained in the Elastic Agent specification.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// Version of the stack resource currently running. During version upgrades, multiple versions may run
	// in parallel: this value specifies the lowest version currently running.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (AgentStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentStatusPatch)(nil)).Elem()
}

func (i AgentStatusPatchArgs) ToAgentStatusPatchOutput() AgentStatusPatchOutput {
	return i.ToAgentStatusPatchOutputWithContext(context.Background())
}

func (i AgentStatusPatchArgs) ToAgentStatusPatchOutputWithContext(ctx context.Context) AgentStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentStatusPatchOutput)
}

func (i AgentStatusPatchArgs) ToAgentStatusPatchPtrOutput() AgentStatusPatchPtrOutput {
	return i.ToAgentStatusPatchPtrOutputWithContext(context.Background())
}

func (i AgentStatusPatchArgs) ToAgentStatusPatchPtrOutputWithContext(ctx context.Context) AgentStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentStatusPatchOutput).ToAgentStatusPatchPtrOutputWithContext(ctx)
}

// AgentStatusPatchPtrInput is an input type that accepts AgentStatusPatchArgs, AgentStatusPatchPtr and AgentStatusPatchPtrOutput values.
// You can construct a concrete instance of `AgentStatusPatchPtrInput` via:
//
//	        AgentStatusPatchArgs{...}
//
//	or:
//
//	        nil
type AgentStatusPatchPtrInput interface {
	pulumi.Input

	ToAgentStatusPatchPtrOutput() AgentStatusPatchPtrOutput
	ToAgentStatusPatchPtrOutputWithContext(context.Context) AgentStatusPatchPtrOutput
}

type agentStatusPatchPtrType AgentStatusPatchArgs

func AgentStatusPatchPtr(v *AgentStatusPatchArgs) AgentStatusPatchPtrInput {
	return (*agentStatusPatchPtrType)(v)
}

func (*agentStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentStatusPatch)(nil)).Elem()
}

func (i *agentStatusPatchPtrType) ToAgentStatusPatchPtrOutput() AgentStatusPatchPtrOutput {
	return i.ToAgentStatusPatchPtrOutputWithContext(context.Background())
}

func (i *agentStatusPatchPtrType) ToAgentStatusPatchPtrOutputWithContext(ctx context.Context) AgentStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentStatusPatchPtrOutput)
}

// AgentStatus defines the observed state of the Agent
type AgentStatusPatchOutput struct{ *pulumi.OutputState }

func (AgentStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentStatusPatch)(nil)).Elem()
}

func (o AgentStatusPatchOutput) ToAgentStatusPatchOutput() AgentStatusPatchOutput {
	return o
}

func (o AgentStatusPatchOutput) ToAgentStatusPatchOutputWithContext(ctx context.Context) AgentStatusPatchOutput {
	return o
}

func (o AgentStatusPatchOutput) ToAgentStatusPatchPtrOutput() AgentStatusPatchPtrOutput {
	return o.ToAgentStatusPatchPtrOutputWithContext(context.Background())
}

func (o AgentStatusPatchOutput) ToAgentStatusPatchPtrOutputWithContext(ctx context.Context) AgentStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentStatusPatch) *AgentStatusPatch {
		return &v
	}).(AgentStatusPatchPtrOutput)
}

func (o AgentStatusPatchOutput) AvailableNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentStatusPatch) *int { return v.AvailableNodes }).(pulumi.IntPtrOutput)
}

// AssociationStatusMap is the map of association's namespaced name string to its AssociationStatus. For resources that
// have a single Association of a given type (for ex. single ES reference), this map contains a single entry.
func (o AgentStatusPatchOutput) ElasticsearchAssociationsStatus() pulumi.StringMapOutput {
	return o.ApplyT(func(v AgentStatusPatch) map[string]string { return v.ElasticsearchAssociationsStatus }).(pulumi.StringMapOutput)
}

func (o AgentStatusPatchOutput) ExpectedNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentStatusPatch) *int { return v.ExpectedNodes }).(pulumi.IntPtrOutput)
}

// AssociationStatus is the status of an association resource.
func (o AgentStatusPatchOutput) FleetServerAssociationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentStatusPatch) *string { return v.FleetServerAssociationStatus }).(pulumi.StringPtrOutput)
}

func (o AgentStatusPatchOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentStatusPatch) *string { return v.Health }).(pulumi.StringPtrOutput)
}

// AssociationStatus is the status of an association resource.
func (o AgentStatusPatchOutput) KibanaAssociationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentStatusPatch) *string { return v.KibanaAssociationStatus }).(pulumi.StringPtrOutput)
}

// ObservedGeneration is the most recent generation observed for this Elastic Agent.
// It corresponds to the metadata generation, which is updated on mutation by the API Server.
// If the generation observed in status diverges from the generation in metadata, the Elastic
// Agent controller has not yet processed the changes contained in the Elastic Agent specification.
func (o AgentStatusPatchOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentStatusPatch) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// Version of the stack resource currently running. During version upgrades, multiple versions may run
// in parallel: this value specifies the lowest version currently running.
func (o AgentStatusPatchOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentStatusPatch) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type AgentStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (AgentStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentStatusPatch)(nil)).Elem()
}

func (o AgentStatusPatchPtrOutput) ToAgentStatusPatchPtrOutput() AgentStatusPatchPtrOutput {
	return o
}

func (o AgentStatusPatchPtrOutput) ToAgentStatusPatchPtrOutputWithContext(ctx context.Context) AgentStatusPatchPtrOutput {
	return o
}

func (o AgentStatusPatchPtrOutput) Elem() AgentStatusPatchOutput {
	return o.ApplyT(func(v *AgentStatusPatch) AgentStatusPatch {
		if v != nil {
			return *v
		}
		var ret AgentStatusPatch
		return ret
	}).(AgentStatusPatchOutput)
}

func (o AgentStatusPatchPtrOutput) AvailableNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentStatusPatch) *int {
		if v == nil {
			return nil
		}
		return v.AvailableNodes
	}).(pulumi.IntPtrOutput)
}

// AssociationStatusMap is the map of association's namespaced name string to its AssociationStatus. For resources that
// have a single Association of a given type (for ex. single ES reference), this map contains a single entry.
func (o AgentStatusPatchPtrOutput) ElasticsearchAssociationsStatus() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentStatusPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.ElasticsearchAssociationsStatus
	}).(pulumi.StringMapOutput)
}

func (o AgentStatusPatchPtrOutput) ExpectedNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentStatusPatch) *int {
		if v == nil {
			return nil
		}
		return v.ExpectedNodes
	}).(pulumi.IntPtrOutput)
}

// AssociationStatus is the status of an association resource.
func (o AgentStatusPatchPtrOutput) FleetServerAssociationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.FleetServerAssociationStatus
	}).(pulumi.StringPtrOutput)
}

func (o AgentStatusPatchPtrOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.Health
	}).(pulumi.StringPtrOutput)
}

// AssociationStatus is the status of an association resource.
func (o AgentStatusPatchPtrOutput) KibanaAssociationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.KibanaAssociationStatus
	}).(pulumi.StringPtrOutput)
}

// ObservedGeneration is the most recent generation observed for this Elastic Agent.
// It corresponds to the metadata generation, which is updated on mutation by the API Server.
// If the generation observed in status diverges from the generation in metadata, the Elastic
// Agent controller has not yet processed the changes contained in the Elastic Agent specification.
func (o AgentStatusPatchPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentStatusPatch) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// Version of the stack resource currently running. During version upgrades, multiple versions may run
// in parallel: this value specifies the lowest version currently running.
func (o AgentStatusPatchPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AgentTypeInput)(nil)).Elem(), AgentTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentTypeArrayInput)(nil)).Elem(), AgentTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentListTypeInput)(nil)).Elem(), AgentListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentPatchTypeInput)(nil)).Elem(), AgentPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecInput)(nil)).Elem(), AgentSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecPtrInput)(nil)).Elem(), AgentSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecConfigRefInput)(nil)).Elem(), AgentSpecConfigRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecConfigRefPtrInput)(nil)).Elem(), AgentSpecConfigRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecConfigRefPatchInput)(nil)).Elem(), AgentSpecConfigRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecConfigRefPatchPtrInput)(nil)).Elem(), AgentSpecConfigRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDaemonSetInput)(nil)).Elem(), AgentSpecDaemonSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDaemonSetPtrInput)(nil)).Elem(), AgentSpecDaemonSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDaemonSetPatchInput)(nil)).Elem(), AgentSpecDaemonSetPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDaemonSetPatchPtrInput)(nil)).Elem(), AgentSpecDaemonSetPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategyInput)(nil)).Elem(), AgentSpecDaemonSetUpdateStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategyPtrInput)(nil)).Elem(), AgentSpecDaemonSetUpdateStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategyPatchInput)(nil)).Elem(), AgentSpecDaemonSetUpdateStrategyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategyPatchPtrInput)(nil)).Elem(), AgentSpecDaemonSetUpdateStrategyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategyRollingUpdateInput)(nil)).Elem(), AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrInput)(nil)).Elem(), AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchInput)(nil)).Elem(), AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrInput)(nil)).Elem(), AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDeploymentInput)(nil)).Elem(), AgentSpecDeploymentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDeploymentPtrInput)(nil)).Elem(), AgentSpecDeploymentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDeploymentPatchInput)(nil)).Elem(), AgentSpecDeploymentPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDeploymentPatchPtrInput)(nil)).Elem(), AgentSpecDeploymentPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDeploymentStrategyInput)(nil)).Elem(), AgentSpecDeploymentStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDeploymentStrategyPtrInput)(nil)).Elem(), AgentSpecDeploymentStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDeploymentStrategyPatchInput)(nil)).Elem(), AgentSpecDeploymentStrategyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDeploymentStrategyPatchPtrInput)(nil)).Elem(), AgentSpecDeploymentStrategyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDeploymentStrategyRollingUpdateInput)(nil)).Elem(), AgentSpecDeploymentStrategyRollingUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDeploymentStrategyRollingUpdatePtrInput)(nil)).Elem(), AgentSpecDeploymentStrategyRollingUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDeploymentStrategyRollingUpdatePatchInput)(nil)).Elem(), AgentSpecDeploymentStrategyRollingUpdatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDeploymentStrategyRollingUpdatePatchPtrInput)(nil)).Elem(), AgentSpecDeploymentStrategyRollingUpdatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecElasticsearchRefsInput)(nil)).Elem(), AgentSpecElasticsearchRefsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecElasticsearchRefsArrayInput)(nil)).Elem(), AgentSpecElasticsearchRefsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecElasticsearchRefsPatchInput)(nil)).Elem(), AgentSpecElasticsearchRefsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecElasticsearchRefsPatchArrayInput)(nil)).Elem(), AgentSpecElasticsearchRefsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecFleetServerRefInput)(nil)).Elem(), AgentSpecFleetServerRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecFleetServerRefPtrInput)(nil)).Elem(), AgentSpecFleetServerRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecFleetServerRefPatchInput)(nil)).Elem(), AgentSpecFleetServerRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecFleetServerRefPatchPtrInput)(nil)).Elem(), AgentSpecFleetServerRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpInput)(nil)).Elem(), AgentSpecHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpPtrInput)(nil)).Elem(), AgentSpecHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpPatchInput)(nil)).Elem(), AgentSpecHttpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpPatchPtrInput)(nil)).Elem(), AgentSpecHttpPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceInput)(nil)).Elem(), AgentSpecHttpServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServicePtrInput)(nil)).Elem(), AgentSpecHttpServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceMetadataInput)(nil)).Elem(), AgentSpecHttpServiceMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceMetadataPtrInput)(nil)).Elem(), AgentSpecHttpServiceMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceMetadataPatchInput)(nil)).Elem(), AgentSpecHttpServiceMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceMetadataPatchPtrInput)(nil)).Elem(), AgentSpecHttpServiceMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServicePatchInput)(nil)).Elem(), AgentSpecHttpServicePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServicePatchPtrInput)(nil)).Elem(), AgentSpecHttpServicePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecInput)(nil)).Elem(), AgentSpecHttpServiceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecPtrInput)(nil)).Elem(), AgentSpecHttpServiceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecPatchInput)(nil)).Elem(), AgentSpecHttpServiceSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecPatchPtrInput)(nil)).Elem(), AgentSpecHttpServiceSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecPortsInput)(nil)).Elem(), AgentSpecHttpServiceSpecPortsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecPortsArrayInput)(nil)).Elem(), AgentSpecHttpServiceSpecPortsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecPortsPatchInput)(nil)).Elem(), AgentSpecHttpServiceSpecPortsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecPortsPatchArrayInput)(nil)).Elem(), AgentSpecHttpServiceSpecPortsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfigInput)(nil)).Elem(), AgentSpecHttpServiceSpecSessionAffinityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfigPtrInput)(nil)).Elem(), AgentSpecHttpServiceSpecSessionAffinityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfigClientIPInput)(nil)).Elem(), AgentSpecHttpServiceSpecSessionAffinityConfigClientIPArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrInput)(nil)).Elem(), AgentSpecHttpServiceSpecSessionAffinityConfigClientIPArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchInput)(nil)).Elem(), AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrInput)(nil)).Elem(), AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfigPatchInput)(nil)).Elem(), AgentSpecHttpServiceSpecSessionAffinityConfigPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrInput)(nil)).Elem(), AgentSpecHttpServiceSpecSessionAffinityConfigPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsInput)(nil)).Elem(), AgentSpecHttpTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsPtrInput)(nil)).Elem(), AgentSpecHttpTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsCertificateInput)(nil)).Elem(), AgentSpecHttpTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsCertificatePtrInput)(nil)).Elem(), AgentSpecHttpTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsCertificatePatchInput)(nil)).Elem(), AgentSpecHttpTlsCertificatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsCertificatePatchPtrInput)(nil)).Elem(), AgentSpecHttpTlsCertificatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsPatchInput)(nil)).Elem(), AgentSpecHttpTlsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsPatchPtrInput)(nil)).Elem(), AgentSpecHttpTlsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificateInput)(nil)).Elem(), AgentSpecHttpTlsSelfSignedCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificatePtrInput)(nil)).Elem(), AgentSpecHttpTlsSelfSignedCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificatePatchInput)(nil)).Elem(), AgentSpecHttpTlsSelfSignedCertificatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificatePatchPtrInput)(nil)).Elem(), AgentSpecHttpTlsSelfSignedCertificatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesInput)(nil)).Elem(), AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayInput)(nil)).Elem(), AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchInput)(nil)).Elem(), AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayInput)(nil)).Elem(), AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecKibanaRefInput)(nil)).Elem(), AgentSpecKibanaRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecKibanaRefPtrInput)(nil)).Elem(), AgentSpecKibanaRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecKibanaRefPatchInput)(nil)).Elem(), AgentSpecKibanaRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecKibanaRefPatchPtrInput)(nil)).Elem(), AgentSpecKibanaRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecPatchInput)(nil)).Elem(), AgentSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecPatchPtrInput)(nil)).Elem(), AgentSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecSecureSettingsInput)(nil)).Elem(), AgentSpecSecureSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecSecureSettingsArrayInput)(nil)).Elem(), AgentSpecSecureSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecSecureSettingsEntriesInput)(nil)).Elem(), AgentSpecSecureSettingsEntriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecSecureSettingsEntriesArrayInput)(nil)).Elem(), AgentSpecSecureSettingsEntriesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecSecureSettingsEntriesPatchInput)(nil)).Elem(), AgentSpecSecureSettingsEntriesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecSecureSettingsEntriesPatchArrayInput)(nil)).Elem(), AgentSpecSecureSettingsEntriesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecSecureSettingsPatchInput)(nil)).Elem(), AgentSpecSecureSettingsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecSecureSettingsPatchArrayInput)(nil)).Elem(), AgentSpecSecureSettingsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetInput)(nil)).Elem(), AgentSpecStatefulSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetPtrInput)(nil)).Elem(), AgentSpecStatefulSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetPatchInput)(nil)).Elem(), AgentSpecStatefulSetPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetPatchPtrInput)(nil)).Elem(), AgentSpecStatefulSetPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesArrayInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesMetadataInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesPatchInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesPatchArrayInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentStatusInput)(nil)).Elem(), AgentStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentStatusPtrInput)(nil)).Elem(), AgentStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentStatusPatchInput)(nil)).Elem(), AgentStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentStatusPatchPtrInput)(nil)).Elem(), AgentStatusPatchArgs{})
	pulumi.RegisterOutputType(AgentTypeOutput{})
	pulumi.RegisterOutputType(AgentTypeArrayOutput{})
	pulumi.RegisterOutputType(AgentListTypeOutput{})
	pulumi.RegisterOutputType(AgentPatchTypeOutput{})
	pulumi.RegisterOutputType(AgentSpecOutput{})
	pulumi.RegisterOutputType(AgentSpecPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecConfigRefOutput{})
	pulumi.RegisterOutputType(AgentSpecConfigRefPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecConfigRefPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecConfigRefPatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecDaemonSetOutput{})
	pulumi.RegisterOutputType(AgentSpecDaemonSetPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecDaemonSetPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecDaemonSetPatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecDaemonSetUpdateStrategyOutput{})
	pulumi.RegisterOutputType(AgentSpecDaemonSetUpdateStrategyPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecDaemonSetUpdateStrategyPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecDaemonSetUpdateStrategyPatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput{})
	pulumi.RegisterOutputType(AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput{})
	pulumi.RegisterOutputType(AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchOutput{})
	pulumi.RegisterOutputType(AgentSpecDaemonSetUpdateStrategyRollingUpdatePatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecDeploymentOutput{})
	pulumi.RegisterOutputType(AgentSpecDeploymentPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecDeploymentPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecDeploymentPatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecDeploymentStrategyOutput{})
	pulumi.RegisterOutputType(AgentSpecDeploymentStrategyPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecDeploymentStrategyPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecDeploymentStrategyPatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecDeploymentStrategyRollingUpdateOutput{})
	pulumi.RegisterOutputType(AgentSpecDeploymentStrategyRollingUpdatePtrOutput{})
	pulumi.RegisterOutputType(AgentSpecDeploymentStrategyRollingUpdatePatchOutput{})
	pulumi.RegisterOutputType(AgentSpecDeploymentStrategyRollingUpdatePatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecElasticsearchRefsOutput{})
	pulumi.RegisterOutputType(AgentSpecElasticsearchRefsArrayOutput{})
	pulumi.RegisterOutputType(AgentSpecElasticsearchRefsPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecElasticsearchRefsPatchArrayOutput{})
	pulumi.RegisterOutputType(AgentSpecFleetServerRefOutput{})
	pulumi.RegisterOutputType(AgentSpecFleetServerRefPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecFleetServerRefPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecFleetServerRefPatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpPatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServicePtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceMetadataOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceMetadataPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceMetadataPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceMetadataPatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServicePatchOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServicePatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecPortsOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecPortsArrayOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecPortsPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecPortsPatchArrayOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecSessionAffinityConfigOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecSessionAffinityConfigClientIPOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecSessionAffinityConfigClientIPPatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecSessionAffinityConfigPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecSessionAffinityConfigPatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsCertificateOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsCertificatePtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsCertificatePatchOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsCertificatePatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsPatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsSelfSignedCertificateOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsSelfSignedCertificatePtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsSelfSignedCertificatePatchOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsSelfSignedCertificatePatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesPatchArrayOutput{})
	pulumi.RegisterOutputType(AgentSpecKibanaRefOutput{})
	pulumi.RegisterOutputType(AgentSpecKibanaRefPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecKibanaRefPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecKibanaRefPatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecSecureSettingsOutput{})
	pulumi.RegisterOutputType(AgentSpecSecureSettingsArrayOutput{})
	pulumi.RegisterOutputType(AgentSpecSecureSettingsEntriesOutput{})
	pulumi.RegisterOutputType(AgentSpecSecureSettingsEntriesArrayOutput{})
	pulumi.RegisterOutputType(AgentSpecSecureSettingsEntriesPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecSecureSettingsEntriesPatchArrayOutput{})
	pulumi.RegisterOutputType(AgentSpecSecureSettingsPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecSecureSettingsPatchArrayOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetPatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesMetadataPatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesPatchArrayOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPatchPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(AgentStatusOutput{})
	pulumi.RegisterOutputType(AgentStatusPtrOutput{})
	pulumi.RegisterOutputType(AgentStatusPatchOutput{})
	pulumi.RegisterOutputType(AgentStatusPatchPtrOutput{})
}
