// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ElasticMapsServerList is a list of ElasticMapsServer
type ElasticMapsServerList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of elasticmapsservers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items ElasticMapsServerTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewElasticMapsServerList registers a new resource with the given unique name, arguments, and options.
func NewElasticMapsServerList(ctx *pulumi.Context,
	name string, args *ElasticMapsServerListArgs, opts ...pulumi.ResourceOption) (*ElasticMapsServerList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("maps.k8s.elastic.co/v1alpha1")
	args.Kind = pulumi.StringPtr("ElasticMapsServerList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ElasticMapsServerList
	err := ctx.RegisterResource("kubernetes:maps.k8s.elastic.co/v1alpha1:ElasticMapsServerList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetElasticMapsServerList gets an existing ElasticMapsServerList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetElasticMapsServerList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ElasticMapsServerListState, opts ...pulumi.ResourceOption) (*ElasticMapsServerList, error) {
	var resource ElasticMapsServerList
	err := ctx.ReadResource("kubernetes:maps.k8s.elastic.co/v1alpha1:ElasticMapsServerList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ElasticMapsServerList resources.
type elasticMapsServerListState struct {
}

type ElasticMapsServerListState struct {
}

func (ElasticMapsServerListState) ElementType() reflect.Type {
	return reflect.TypeOf((*elasticMapsServerListState)(nil)).Elem()
}

type elasticMapsServerListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of elasticmapsservers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []ElasticMapsServerType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a ElasticMapsServerList resource.
type ElasticMapsServerListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of elasticmapsservers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items ElasticMapsServerTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (ElasticMapsServerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*elasticMapsServerListArgs)(nil)).Elem()
}

type ElasticMapsServerListInput interface {
	pulumi.Input

	ToElasticMapsServerListOutput() ElasticMapsServerListOutput
	ToElasticMapsServerListOutputWithContext(ctx context.Context) ElasticMapsServerListOutput
}

func (*ElasticMapsServerList) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticMapsServerList)(nil)).Elem()
}

func (i *ElasticMapsServerList) ToElasticMapsServerListOutput() ElasticMapsServerListOutput {
	return i.ToElasticMapsServerListOutputWithContext(context.Background())
}

func (i *ElasticMapsServerList) ToElasticMapsServerListOutputWithContext(ctx context.Context) ElasticMapsServerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticMapsServerListOutput)
}

// ElasticMapsServerListArrayInput is an input type that accepts ElasticMapsServerListArray and ElasticMapsServerListArrayOutput values.
// You can construct a concrete instance of `ElasticMapsServerListArrayInput` via:
//
//	ElasticMapsServerListArray{ ElasticMapsServerListArgs{...} }
type ElasticMapsServerListArrayInput interface {
	pulumi.Input

	ToElasticMapsServerListArrayOutput() ElasticMapsServerListArrayOutput
	ToElasticMapsServerListArrayOutputWithContext(context.Context) ElasticMapsServerListArrayOutput
}

type ElasticMapsServerListArray []ElasticMapsServerListInput

func (ElasticMapsServerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ElasticMapsServerList)(nil)).Elem()
}

func (i ElasticMapsServerListArray) ToElasticMapsServerListArrayOutput() ElasticMapsServerListArrayOutput {
	return i.ToElasticMapsServerListArrayOutputWithContext(context.Background())
}

func (i ElasticMapsServerListArray) ToElasticMapsServerListArrayOutputWithContext(ctx context.Context) ElasticMapsServerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticMapsServerListArrayOutput)
}

// ElasticMapsServerListMapInput is an input type that accepts ElasticMapsServerListMap and ElasticMapsServerListMapOutput values.
// You can construct a concrete instance of `ElasticMapsServerListMapInput` via:
//
//	ElasticMapsServerListMap{ "key": ElasticMapsServerListArgs{...} }
type ElasticMapsServerListMapInput interface {
	pulumi.Input

	ToElasticMapsServerListMapOutput() ElasticMapsServerListMapOutput
	ToElasticMapsServerListMapOutputWithContext(context.Context) ElasticMapsServerListMapOutput
}

type ElasticMapsServerListMap map[string]ElasticMapsServerListInput

func (ElasticMapsServerListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ElasticMapsServerList)(nil)).Elem()
}

func (i ElasticMapsServerListMap) ToElasticMapsServerListMapOutput() ElasticMapsServerListMapOutput {
	return i.ToElasticMapsServerListMapOutputWithContext(context.Background())
}

func (i ElasticMapsServerListMap) ToElasticMapsServerListMapOutputWithContext(ctx context.Context) ElasticMapsServerListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticMapsServerListMapOutput)
}

type ElasticMapsServerListOutput struct{ *pulumi.OutputState }

func (ElasticMapsServerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticMapsServerList)(nil)).Elem()
}

func (o ElasticMapsServerListOutput) ToElasticMapsServerListOutput() ElasticMapsServerListOutput {
	return o
}

func (o ElasticMapsServerListOutput) ToElasticMapsServerListOutputWithContext(ctx context.Context) ElasticMapsServerListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ElasticMapsServerListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ElasticMapsServerList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of elasticmapsservers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o ElasticMapsServerListOutput) Items() ElasticMapsServerTypeArrayOutput {
	return o.ApplyT(func(v *ElasticMapsServerList) ElasticMapsServerTypeArrayOutput { return v.Items }).(ElasticMapsServerTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ElasticMapsServerListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *ElasticMapsServerList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ElasticMapsServerListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *ElasticMapsServerList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type ElasticMapsServerListArrayOutput struct{ *pulumi.OutputState }

func (ElasticMapsServerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ElasticMapsServerList)(nil)).Elem()
}

func (o ElasticMapsServerListArrayOutput) ToElasticMapsServerListArrayOutput() ElasticMapsServerListArrayOutput {
	return o
}

func (o ElasticMapsServerListArrayOutput) ToElasticMapsServerListArrayOutputWithContext(ctx context.Context) ElasticMapsServerListArrayOutput {
	return o
}

func (o ElasticMapsServerListArrayOutput) Index(i pulumi.IntInput) ElasticMapsServerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ElasticMapsServerList {
		return vs[0].([]*ElasticMapsServerList)[vs[1].(int)]
	}).(ElasticMapsServerListOutput)
}

type ElasticMapsServerListMapOutput struct{ *pulumi.OutputState }

func (ElasticMapsServerListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ElasticMapsServerList)(nil)).Elem()
}

func (o ElasticMapsServerListMapOutput) ToElasticMapsServerListMapOutput() ElasticMapsServerListMapOutput {
	return o
}

func (o ElasticMapsServerListMapOutput) ToElasticMapsServerListMapOutputWithContext(ctx context.Context) ElasticMapsServerListMapOutput {
	return o
}

func (o ElasticMapsServerListMapOutput) MapIndex(k pulumi.StringInput) ElasticMapsServerListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ElasticMapsServerList {
		return vs[0].(map[string]*ElasticMapsServerList)[vs[1].(string)]
	}).(ElasticMapsServerListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticMapsServerListInput)(nil)).Elem(), &ElasticMapsServerList{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticMapsServerListArrayInput)(nil)).Elem(), ElasticMapsServerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticMapsServerListMapInput)(nil)).Elem(), ElasticMapsServerListMap{})
	pulumi.RegisterOutputType(ElasticMapsServerListOutput{})
	pulumi.RegisterOutputType(ElasticMapsServerListArrayOutput{})
	pulumi.RegisterOutputType(ElasticMapsServerListMapOutput{})
}
