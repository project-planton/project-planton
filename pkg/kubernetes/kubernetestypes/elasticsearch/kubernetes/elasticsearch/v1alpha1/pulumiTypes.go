// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// to not break compatibility when upgrading from previous versions of the CRD
type ElasticsearchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
}

// ElasticsearchTypeInput is an input type that accepts ElasticsearchTypeArgs and ElasticsearchTypeOutput values.
// You can construct a concrete instance of `ElasticsearchTypeInput` via:
//
//	ElasticsearchTypeArgs{...}
type ElasticsearchTypeInput interface {
	pulumi.Input

	ToElasticsearchTypeOutput() ElasticsearchTypeOutput
	ToElasticsearchTypeOutputWithContext(context.Context) ElasticsearchTypeOutput
}

// to not break compatibility when upgrading from previous versions of the CRD
type ElasticsearchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
}

func (ElasticsearchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchType)(nil)).Elem()
}

func (i ElasticsearchTypeArgs) ToElasticsearchTypeOutput() ElasticsearchTypeOutput {
	return i.ToElasticsearchTypeOutputWithContext(context.Background())
}

func (i ElasticsearchTypeArgs) ToElasticsearchTypeOutputWithContext(ctx context.Context) ElasticsearchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchTypeOutput)
}

// ElasticsearchTypeArrayInput is an input type that accepts ElasticsearchTypeArray and ElasticsearchTypeArrayOutput values.
// You can construct a concrete instance of `ElasticsearchTypeArrayInput` via:
//
//	ElasticsearchTypeArray{ ElasticsearchTypeArgs{...} }
type ElasticsearchTypeArrayInput interface {
	pulumi.Input

	ToElasticsearchTypeArrayOutput() ElasticsearchTypeArrayOutput
	ToElasticsearchTypeArrayOutputWithContext(context.Context) ElasticsearchTypeArrayOutput
}

type ElasticsearchTypeArray []ElasticsearchTypeInput

func (ElasticsearchTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchType)(nil)).Elem()
}

func (i ElasticsearchTypeArray) ToElasticsearchTypeArrayOutput() ElasticsearchTypeArrayOutput {
	return i.ToElasticsearchTypeArrayOutputWithContext(context.Background())
}

func (i ElasticsearchTypeArray) ToElasticsearchTypeArrayOutputWithContext(ctx context.Context) ElasticsearchTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchTypeArrayOutput)
}

// to not break compatibility when upgrading from previous versions of the CRD
type ElasticsearchTypeOutput struct{ *pulumi.OutputState }

func (ElasticsearchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchType)(nil)).Elem()
}

func (o ElasticsearchTypeOutput) ToElasticsearchTypeOutput() ElasticsearchTypeOutput {
	return o
}

func (o ElasticsearchTypeOutput) ToElasticsearchTypeOutputWithContext(ctx context.Context) ElasticsearchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ElasticsearchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ElasticsearchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ElasticsearchTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ElasticsearchType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

type ElasticsearchTypeArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchType)(nil)).Elem()
}

func (o ElasticsearchTypeArrayOutput) ToElasticsearchTypeArrayOutput() ElasticsearchTypeArrayOutput {
	return o
}

func (o ElasticsearchTypeArrayOutput) ToElasticsearchTypeArrayOutputWithContext(ctx context.Context) ElasticsearchTypeArrayOutput {
	return o
}

func (o ElasticsearchTypeArrayOutput) Index(i pulumi.IntInput) ElasticsearchTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchType {
		return vs[0].([]ElasticsearchType)[vs[1].(int)]
	}).(ElasticsearchTypeOutput)
}

// ElasticsearchList is a list of Elasticsearch
type ElasticsearchListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of elasticsearches. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []ElasticsearchType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// ElasticsearchListTypeInput is an input type that accepts ElasticsearchListTypeArgs and ElasticsearchListTypeOutput values.
// You can construct a concrete instance of `ElasticsearchListTypeInput` via:
//
//	ElasticsearchListTypeArgs{...}
type ElasticsearchListTypeInput interface {
	pulumi.Input

	ToElasticsearchListTypeOutput() ElasticsearchListTypeOutput
	ToElasticsearchListTypeOutputWithContext(context.Context) ElasticsearchListTypeOutput
}

// ElasticsearchList is a list of Elasticsearch
type ElasticsearchListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of elasticsearches. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items ElasticsearchTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (ElasticsearchListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchListType)(nil)).Elem()
}

func (i ElasticsearchListTypeArgs) ToElasticsearchListTypeOutput() ElasticsearchListTypeOutput {
	return i.ToElasticsearchListTypeOutputWithContext(context.Background())
}

func (i ElasticsearchListTypeArgs) ToElasticsearchListTypeOutputWithContext(ctx context.Context) ElasticsearchListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchListTypeOutput)
}

// ElasticsearchList is a list of Elasticsearch
type ElasticsearchListTypeOutput struct{ *pulumi.OutputState }

func (ElasticsearchListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchListType)(nil)).Elem()
}

func (o ElasticsearchListTypeOutput) ToElasticsearchListTypeOutput() ElasticsearchListTypeOutput {
	return o
}

func (o ElasticsearchListTypeOutput) ToElasticsearchListTypeOutputWithContext(ctx context.Context) ElasticsearchListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ElasticsearchListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of elasticsearches. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o ElasticsearchListTypeOutput) Items() ElasticsearchTypeArrayOutput {
	return o.ApplyT(func(v ElasticsearchListType) []ElasticsearchType { return v.Items }).(ElasticsearchTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ElasticsearchListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ElasticsearchListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v ElasticsearchListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

// to not break compatibility when upgrading from previous versions of the CRD
type ElasticsearchPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
}

// ElasticsearchPatchTypeInput is an input type that accepts ElasticsearchPatchTypeArgs and ElasticsearchPatchTypeOutput values.
// You can construct a concrete instance of `ElasticsearchPatchTypeInput` via:
//
//	ElasticsearchPatchTypeArgs{...}
type ElasticsearchPatchTypeInput interface {
	pulumi.Input

	ToElasticsearchPatchTypeOutput() ElasticsearchPatchTypeOutput
	ToElasticsearchPatchTypeOutputWithContext(context.Context) ElasticsearchPatchTypeOutput
}

// to not break compatibility when upgrading from previous versions of the CRD
type ElasticsearchPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
}

func (ElasticsearchPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchPatchType)(nil)).Elem()
}

func (i ElasticsearchPatchTypeArgs) ToElasticsearchPatchTypeOutput() ElasticsearchPatchTypeOutput {
	return i.ToElasticsearchPatchTypeOutputWithContext(context.Background())
}

func (i ElasticsearchPatchTypeArgs) ToElasticsearchPatchTypeOutputWithContext(ctx context.Context) ElasticsearchPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchPatchTypeOutput)
}

// to not break compatibility when upgrading from previous versions of the CRD
type ElasticsearchPatchTypeOutput struct{ *pulumi.OutputState }

func (ElasticsearchPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchPatchType)(nil)).Elem()
}

func (o ElasticsearchPatchTypeOutput) ToElasticsearchPatchTypeOutput() ElasticsearchPatchTypeOutput {
	return o
}

func (o ElasticsearchPatchTypeOutput) ToElasticsearchPatchTypeOutputWithContext(ctx context.Context) ElasticsearchPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ElasticsearchPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ElasticsearchPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ElasticsearchPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v ElasticsearchPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchTypeInput)(nil)).Elem(), ElasticsearchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchTypeArrayInput)(nil)).Elem(), ElasticsearchTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchListTypeInput)(nil)).Elem(), ElasticsearchListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchPatchTypeInput)(nil)).Elem(), ElasticsearchPatchTypeArgs{})
	pulumi.RegisterOutputType(ElasticsearchTypeOutput{})
	pulumi.RegisterOutputType(ElasticsearchTypeArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchListTypeOutput{})
	pulumi.RegisterOutputType(ElasticsearchPatchTypeOutput{})
}
