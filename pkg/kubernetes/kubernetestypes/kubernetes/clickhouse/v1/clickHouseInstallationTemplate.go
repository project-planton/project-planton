// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// define a set of Kubernetes resources (StatefulSet, PVC, Service, ConfigMap) which describe behavior one or more clusters
type ClickHouseInstallationTemplate struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// Specification of the desired behavior of one or more ClickHouse clusters
	// More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md
	Spec ClickHouseInstallationTemplateSpecOutput `pulumi:"spec"`
	// Status contains many fields like a normalized configuration, clickhouse-operator version, current action and all applied action list, current taskID and all applied taskIDs and other
	Status ClickHouseInstallationTemplateStatusPtrOutput `pulumi:"status"`
}

// NewClickHouseInstallationTemplate registers a new resource with the given unique name, arguments, and options.
func NewClickHouseInstallationTemplate(ctx *pulumi.Context,
	name string, args *ClickHouseInstallationTemplateArgs, opts ...pulumi.ResourceOption) (*ClickHouseInstallationTemplate, error) {
	if args == nil {
		args = &ClickHouseInstallationTemplateArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("clickhouse.altinity.com/v1")
	args.Kind = pulumi.StringPtr("ClickHouseInstallationTemplate")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ClickHouseInstallationTemplate
	err := ctx.RegisterResource("kubernetes:clickhouse.altinity.com/v1:ClickHouseInstallationTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClickHouseInstallationTemplate gets an existing ClickHouseInstallationTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClickHouseInstallationTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClickHouseInstallationTemplateState, opts ...pulumi.ResourceOption) (*ClickHouseInstallationTemplate, error) {
	var resource ClickHouseInstallationTemplate
	err := ctx.ReadResource("kubernetes:clickhouse.altinity.com/v1:ClickHouseInstallationTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClickHouseInstallationTemplate resources.
type clickHouseInstallationTemplateState struct {
}

type ClickHouseInstallationTemplateState struct {
}

func (ClickHouseInstallationTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*clickHouseInstallationTemplateState)(nil)).Elem()
}

type clickHouseInstallationTemplateArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// Specification of the desired behavior of one or more ClickHouse clusters
	// More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md
	Spec *ClickHouseInstallationTemplateSpec `pulumi:"spec"`
	// Status contains many fields like a normalized configuration, clickhouse-operator version, current action and all applied action list, current taskID and all applied taskIDs and other
	Status *ClickHouseInstallationTemplateStatus `pulumi:"status"`
}

// The set of arguments for constructing a ClickHouseInstallationTemplate resource.
type ClickHouseInstallationTemplateArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// Specification of the desired behavior of one or more ClickHouse clusters
	// More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md
	Spec ClickHouseInstallationTemplateSpecPtrInput
	// Status contains many fields like a normalized configuration, clickhouse-operator version, current action and all applied action list, current taskID and all applied taskIDs and other
	Status ClickHouseInstallationTemplateStatusPtrInput
}

func (ClickHouseInstallationTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clickHouseInstallationTemplateArgs)(nil)).Elem()
}

type ClickHouseInstallationTemplateInput interface {
	pulumi.Input

	ToClickHouseInstallationTemplateOutput() ClickHouseInstallationTemplateOutput
	ToClickHouseInstallationTemplateOutputWithContext(ctx context.Context) ClickHouseInstallationTemplateOutput
}

func (*ClickHouseInstallationTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseInstallationTemplate)(nil)).Elem()
}

func (i *ClickHouseInstallationTemplate) ToClickHouseInstallationTemplateOutput() ClickHouseInstallationTemplateOutput {
	return i.ToClickHouseInstallationTemplateOutputWithContext(context.Background())
}

func (i *ClickHouseInstallationTemplate) ToClickHouseInstallationTemplateOutputWithContext(ctx context.Context) ClickHouseInstallationTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseInstallationTemplateOutput)
}

type ClickHouseInstallationTemplateOutput struct{ *pulumi.OutputState }

func (ClickHouseInstallationTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseInstallationTemplate)(nil)).Elem()
}

func (o ClickHouseInstallationTemplateOutput) ToClickHouseInstallationTemplateOutput() ClickHouseInstallationTemplateOutput {
	return o
}

func (o ClickHouseInstallationTemplateOutput) ToClickHouseInstallationTemplateOutputWithContext(ctx context.Context) ClickHouseInstallationTemplateOutput {
	return o
}

func (o ClickHouseInstallationTemplateOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseInstallationTemplate) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ClickHouseInstallationTemplateOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseInstallationTemplate) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ClickHouseInstallationTemplateOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v *ClickHouseInstallationTemplate) metav1.ObjectMetaPtrOutput { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// Specification of the desired behavior of one or more ClickHouse clusters
// More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md
func (o ClickHouseInstallationTemplateOutput) Spec() ClickHouseInstallationTemplateSpecOutput {
	return o.ApplyT(func(v *ClickHouseInstallationTemplate) ClickHouseInstallationTemplateSpecOutput { return v.Spec }).(ClickHouseInstallationTemplateSpecOutput)
}

// Status contains many fields like a normalized configuration, clickhouse-operator version, current action and all applied action list, current taskID and all applied taskIDs and other
func (o ClickHouseInstallationTemplateOutput) Status() ClickHouseInstallationTemplateStatusPtrOutput {
	return o.ApplyT(func(v *ClickHouseInstallationTemplate) ClickHouseInstallationTemplateStatusPtrOutput { return v.Status }).(ClickHouseInstallationTemplateStatusPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseInstallationTemplateInput)(nil)).Elem(), &ClickHouseInstallationTemplate{})
	pulumi.RegisterOutputType(ClickHouseInstallationTemplateOutput{})
}
