// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// define a set of Kubernetes resources (StatefulSet, PVC, Service, ConfigMap) which describe behavior one or more clusters
type ClickHouseKeeperInstallationType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// Specification of the desired behavior of one or more ClickHouse clusters
	// More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md
	Spec ClickHouseKeeperInstallationSpec `pulumi:"spec"`
	// Status contains many fields like a normalized configuration, clickhouse-operator version, current action and all applied action list, current taskID and all applied taskIDs and other
	Status *ClickHouseKeeperInstallationStatus `pulumi:"status"`
}

type ClickHouseKeeperInstallationMetadata struct {
}

// Specification of the desired behavior of one or more ClickHouse clusters
// More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md
type ClickHouseKeeperInstallationSpec struct {
	// allows configure multiple aspects and behavior for `clickhouse-server` instance and also allows describe multiple `clickhouse-server` clusters inside one `chi` resource
	Configuration *ClickHouseKeeperInstallationSpecConfiguration `pulumi:"configuration"`
	// define default behavior for whole ClickHouseInstallation, some behavior can be re-define on cluster, shard and replica level
	// More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specdefaults
	Defaults *ClickHouseKeeperInstallationSpecDefaults `pulumi:"defaults"`
	// Custom domain pattern which will be used for DNS names of `Service` or `Pod`.
	// Typical use scenario - custom cluster domain in Kubernetes cluster
	// Example: %s.svc.my.test
	NamespaceDomainPattern *string `pulumi:"namespaceDomainPattern"`
	// Optional, allows tuning reconciling cycle for ClickhouseInstallation from clickhouse-operator side
	Reconciling *ClickHouseKeeperInstallationSpecReconciling `pulumi:"reconciling"`
	// Allows to stop all ClickHouse clusters defined in a CHI.
	// Works as the following:
	//  - When `stop` is `1` operator sets `Replicas: 0` in each StatefulSet. Thie leads to having all `Pods` and `Service` deleted. All PVCs are kept intact.
	//  - When `stop` is `0` operator sets `Replicas: 1` and `Pod`s and `Service`s will created again and all retained PVCs will be attached to `Pod`s.
	Stop *string `pulumi:"stop"`
	// Suspend reconciliation of resources managed by a ClickHouse Keeper.
	// Works as the following:
	//  - When `suspend` is `true` operator stops reconciling all resources.
	//  - When `suspend` is `false` or not set, operator reconciles all resources.
	Suspend *string `pulumi:"suspend"`
	// Allows to define custom taskID for CHI update and watch status of this update execution.
	// Displayed in all .status.taskID* fields.
	// By default (if not filled) every update of CHI manifest will generate random taskID
	TaskID *string `pulumi:"taskID"`
	// allows define templates which will use for render Kubernetes resources like StatefulSet, ConfigMap, Service, PVC, by default, clickhouse-operator have own templates, but you can override it
	Templates *ClickHouseKeeperInstallationSpecTemplates `pulumi:"templates"`
}

// ClickHouseKeeperInstallationSpecInput is an input type that accepts ClickHouseKeeperInstallationSpecArgs and ClickHouseKeeperInstallationSpecOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecInput` via:
//
//	ClickHouseKeeperInstallationSpecArgs{...}
type ClickHouseKeeperInstallationSpecInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecOutput() ClickHouseKeeperInstallationSpecOutput
	ToClickHouseKeeperInstallationSpecOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecOutput
}

// Specification of the desired behavior of one or more ClickHouse clusters
// More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md
type ClickHouseKeeperInstallationSpecArgs struct {
	// allows configure multiple aspects and behavior for `clickhouse-server` instance and also allows describe multiple `clickhouse-server` clusters inside one `chi` resource
	Configuration ClickHouseKeeperInstallationSpecConfigurationPtrInput `pulumi:"configuration"`
	// define default behavior for whole ClickHouseInstallation, some behavior can be re-define on cluster, shard and replica level
	// More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specdefaults
	Defaults ClickHouseKeeperInstallationSpecDefaultsPtrInput `pulumi:"defaults"`
	// Custom domain pattern which will be used for DNS names of `Service` or `Pod`.
	// Typical use scenario - custom cluster domain in Kubernetes cluster
	// Example: %s.svc.my.test
	NamespaceDomainPattern pulumi.StringPtrInput `pulumi:"namespaceDomainPattern"`
	// Optional, allows tuning reconciling cycle for ClickhouseInstallation from clickhouse-operator side
	Reconciling ClickHouseKeeperInstallationSpecReconcilingPtrInput `pulumi:"reconciling"`
	// Allows to stop all ClickHouse clusters defined in a CHI.
	// Works as the following:
	//  - When `stop` is `1` operator sets `Replicas: 0` in each StatefulSet. Thie leads to having all `Pods` and `Service` deleted. All PVCs are kept intact.
	//  - When `stop` is `0` operator sets `Replicas: 1` and `Pod`s and `Service`s will created again and all retained PVCs will be attached to `Pod`s.
	Stop pulumi.StringPtrInput `pulumi:"stop"`
	// Suspend reconciliation of resources managed by a ClickHouse Keeper.
	// Works as the following:
	//  - When `suspend` is `true` operator stops reconciling all resources.
	//  - When `suspend` is `false` or not set, operator reconciles all resources.
	Suspend pulumi.StringPtrInput `pulumi:"suspend"`
	// Allows to define custom taskID for CHI update and watch status of this update execution.
	// Displayed in all .status.taskID* fields.
	// By default (if not filled) every update of CHI manifest will generate random taskID
	TaskID pulumi.StringPtrInput `pulumi:"taskID"`
	// allows define templates which will use for render Kubernetes resources like StatefulSet, ConfigMap, Service, PVC, by default, clickhouse-operator have own templates, but you can override it
	Templates ClickHouseKeeperInstallationSpecTemplatesPtrInput `pulumi:"templates"`
}

func (ClickHouseKeeperInstallationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpec)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecArgs) ToClickHouseKeeperInstallationSpecOutput() ClickHouseKeeperInstallationSpecOutput {
	return i.ToClickHouseKeeperInstallationSpecOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecArgs) ToClickHouseKeeperInstallationSpecOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecOutput)
}

func (i ClickHouseKeeperInstallationSpecArgs) ToClickHouseKeeperInstallationSpecPtrOutput() ClickHouseKeeperInstallationSpecPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecPtrOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecArgs) ToClickHouseKeeperInstallationSpecPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecOutput).ToClickHouseKeeperInstallationSpecPtrOutputWithContext(ctx)
}

// ClickHouseKeeperInstallationSpecPtrInput is an input type that accepts ClickHouseKeeperInstallationSpecArgs, ClickHouseKeeperInstallationSpecPtr and ClickHouseKeeperInstallationSpecPtrOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecPtrInput` via:
//
//	        ClickHouseKeeperInstallationSpecArgs{...}
//
//	or:
//
//	        nil
type ClickHouseKeeperInstallationSpecPtrInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecPtrOutput() ClickHouseKeeperInstallationSpecPtrOutput
	ToClickHouseKeeperInstallationSpecPtrOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecPtrOutput
}

type clickHouseKeeperInstallationSpecPtrType ClickHouseKeeperInstallationSpecArgs

func ClickHouseKeeperInstallationSpecPtr(v *ClickHouseKeeperInstallationSpecArgs) ClickHouseKeeperInstallationSpecPtrInput {
	return (*clickHouseKeeperInstallationSpecPtrType)(v)
}

func (*clickHouseKeeperInstallationSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpec)(nil)).Elem()
}

func (i *clickHouseKeeperInstallationSpecPtrType) ToClickHouseKeeperInstallationSpecPtrOutput() ClickHouseKeeperInstallationSpecPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecPtrOutputWithContext(context.Background())
}

func (i *clickHouseKeeperInstallationSpecPtrType) ToClickHouseKeeperInstallationSpecPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecPtrOutput)
}

// Specification of the desired behavior of one or more ClickHouse clusters
// More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md
type ClickHouseKeeperInstallationSpecOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpec)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecOutput) ToClickHouseKeeperInstallationSpecOutput() ClickHouseKeeperInstallationSpecOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecOutput) ToClickHouseKeeperInstallationSpecOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecOutput) ToClickHouseKeeperInstallationSpecPtrOutput() ClickHouseKeeperInstallationSpecPtrOutput {
	return o.ToClickHouseKeeperInstallationSpecPtrOutputWithContext(context.Background())
}

func (o ClickHouseKeeperInstallationSpecOutput) ToClickHouseKeeperInstallationSpecPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClickHouseKeeperInstallationSpec) *ClickHouseKeeperInstallationSpec {
		return &v
	}).(ClickHouseKeeperInstallationSpecPtrOutput)
}

// allows configure multiple aspects and behavior for `clickhouse-server` instance and also allows describe multiple `clickhouse-server` clusters inside one `chi` resource
func (o ClickHouseKeeperInstallationSpecOutput) Configuration() ClickHouseKeeperInstallationSpecConfigurationPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpec) *ClickHouseKeeperInstallationSpecConfiguration {
		return v.Configuration
	}).(ClickHouseKeeperInstallationSpecConfigurationPtrOutput)
}

// define default behavior for whole ClickHouseInstallation, some behavior can be re-define on cluster, shard and replica level
// More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specdefaults
func (o ClickHouseKeeperInstallationSpecOutput) Defaults() ClickHouseKeeperInstallationSpecDefaultsPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpec) *ClickHouseKeeperInstallationSpecDefaults { return v.Defaults }).(ClickHouseKeeperInstallationSpecDefaultsPtrOutput)
}

// Custom domain pattern which will be used for DNS names of `Service` or `Pod`.
// Typical use scenario - custom cluster domain in Kubernetes cluster
// Example: %s.svc.my.test
func (o ClickHouseKeeperInstallationSpecOutput) NamespaceDomainPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpec) *string { return v.NamespaceDomainPattern }).(pulumi.StringPtrOutput)
}

// Optional, allows tuning reconciling cycle for ClickhouseInstallation from clickhouse-operator side
func (o ClickHouseKeeperInstallationSpecOutput) Reconciling() ClickHouseKeeperInstallationSpecReconcilingPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpec) *ClickHouseKeeperInstallationSpecReconciling {
		return v.Reconciling
	}).(ClickHouseKeeperInstallationSpecReconcilingPtrOutput)
}

// Allows to stop all ClickHouse clusters defined in a CHI.
// Works as the following:
//   - When `stop` is `1` operator sets `Replicas: 0` in each StatefulSet. Thie leads to having all `Pods` and `Service` deleted. All PVCs are kept intact.
//   - When `stop` is `0` operator sets `Replicas: 1` and `Pod`s and `Service`s will created again and all retained PVCs will be attached to `Pod`s.
func (o ClickHouseKeeperInstallationSpecOutput) Stop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpec) *string { return v.Stop }).(pulumi.StringPtrOutput)
}

// Suspend reconciliation of resources managed by a ClickHouse Keeper.
// Works as the following:
//   - When `suspend` is `true` operator stops reconciling all resources.
//   - When `suspend` is `false` or not set, operator reconciles all resources.
func (o ClickHouseKeeperInstallationSpecOutput) Suspend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpec) *string { return v.Suspend }).(pulumi.StringPtrOutput)
}

// Allows to define custom taskID for CHI update and watch status of this update execution.
// Displayed in all .status.taskID* fields.
// By default (if not filled) every update of CHI manifest will generate random taskID
func (o ClickHouseKeeperInstallationSpecOutput) TaskID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpec) *string { return v.TaskID }).(pulumi.StringPtrOutput)
}

// allows define templates which will use for render Kubernetes resources like StatefulSet, ConfigMap, Service, PVC, by default, clickhouse-operator have own templates, but you can override it
func (o ClickHouseKeeperInstallationSpecOutput) Templates() ClickHouseKeeperInstallationSpecTemplatesPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpec) *ClickHouseKeeperInstallationSpecTemplates {
		return v.Templates
	}).(ClickHouseKeeperInstallationSpecTemplatesPtrOutput)
}

type ClickHouseKeeperInstallationSpecPtrOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpec)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecPtrOutput) ToClickHouseKeeperInstallationSpecPtrOutput() ClickHouseKeeperInstallationSpecPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecPtrOutput) ToClickHouseKeeperInstallationSpecPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecPtrOutput) Elem() ClickHouseKeeperInstallationSpecOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpec) ClickHouseKeeperInstallationSpec {
		if v != nil {
			return *v
		}
		var ret ClickHouseKeeperInstallationSpec
		return ret
	}).(ClickHouseKeeperInstallationSpecOutput)
}

// allows configure multiple aspects and behavior for `clickhouse-server` instance and also allows describe multiple `clickhouse-server` clusters inside one `chi` resource
func (o ClickHouseKeeperInstallationSpecPtrOutput) Configuration() ClickHouseKeeperInstallationSpecConfigurationPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpec) *ClickHouseKeeperInstallationSpecConfiguration {
		if v == nil {
			return nil
		}
		return v.Configuration
	}).(ClickHouseKeeperInstallationSpecConfigurationPtrOutput)
}

// define default behavior for whole ClickHouseInstallation, some behavior can be re-define on cluster, shard and replica level
// More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specdefaults
func (o ClickHouseKeeperInstallationSpecPtrOutput) Defaults() ClickHouseKeeperInstallationSpecDefaultsPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpec) *ClickHouseKeeperInstallationSpecDefaults {
		if v == nil {
			return nil
		}
		return v.Defaults
	}).(ClickHouseKeeperInstallationSpecDefaultsPtrOutput)
}

// Custom domain pattern which will be used for DNS names of `Service` or `Pod`.
// Typical use scenario - custom cluster domain in Kubernetes cluster
// Example: %s.svc.my.test
func (o ClickHouseKeeperInstallationSpecPtrOutput) NamespaceDomainPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpec) *string {
		if v == nil {
			return nil
		}
		return v.NamespaceDomainPattern
	}).(pulumi.StringPtrOutput)
}

// Optional, allows tuning reconciling cycle for ClickhouseInstallation from clickhouse-operator side
func (o ClickHouseKeeperInstallationSpecPtrOutput) Reconciling() ClickHouseKeeperInstallationSpecReconcilingPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpec) *ClickHouseKeeperInstallationSpecReconciling {
		if v == nil {
			return nil
		}
		return v.Reconciling
	}).(ClickHouseKeeperInstallationSpecReconcilingPtrOutput)
}

// Allows to stop all ClickHouse clusters defined in a CHI.
// Works as the following:
//   - When `stop` is `1` operator sets `Replicas: 0` in each StatefulSet. Thie leads to having all `Pods` and `Service` deleted. All PVCs are kept intact.
//   - When `stop` is `0` operator sets `Replicas: 1` and `Pod`s and `Service`s will created again and all retained PVCs will be attached to `Pod`s.
func (o ClickHouseKeeperInstallationSpecPtrOutput) Stop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpec) *string {
		if v == nil {
			return nil
		}
		return v.Stop
	}).(pulumi.StringPtrOutput)
}

// Suspend reconciliation of resources managed by a ClickHouse Keeper.
// Works as the following:
//   - When `suspend` is `true` operator stops reconciling all resources.
//   - When `suspend` is `false` or not set, operator reconciles all resources.
func (o ClickHouseKeeperInstallationSpecPtrOutput) Suspend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpec) *string {
		if v == nil {
			return nil
		}
		return v.Suspend
	}).(pulumi.StringPtrOutput)
}

// Allows to define custom taskID for CHI update and watch status of this update execution.
// Displayed in all .status.taskID* fields.
// By default (if not filled) every update of CHI manifest will generate random taskID
func (o ClickHouseKeeperInstallationSpecPtrOutput) TaskID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpec) *string {
		if v == nil {
			return nil
		}
		return v.TaskID
	}).(pulumi.StringPtrOutput)
}

// allows define templates which will use for render Kubernetes resources like StatefulSet, ConfigMap, Service, PVC, by default, clickhouse-operator have own templates, but you can override it
func (o ClickHouseKeeperInstallationSpecPtrOutput) Templates() ClickHouseKeeperInstallationSpecTemplatesPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpec) *ClickHouseKeeperInstallationSpecTemplates {
		if v == nil {
			return nil
		}
		return v.Templates
	}).(ClickHouseKeeperInstallationSpecTemplatesPtrOutput)
}

// allows configure multiple aspects and behavior for `clickhouse-server` instance and also allows describe multiple `clickhouse-server` clusters inside one `chi` resource
type ClickHouseKeeperInstallationSpecConfiguration struct {
	// describes clusters layout and allows change settings on cluster-level and replica-level
	Clusters []ClickHouseKeeperInstallationSpecConfigurationClusters `pulumi:"clusters"`
	// allows define content of any setting
	Files map[string]interface{} `pulumi:"files"`
	// allows configure multiple aspects and behavior for `clickhouse-keeper` instance
	Settings map[string]interface{} `pulumi:"settings"`
}

// ClickHouseKeeperInstallationSpecConfigurationInput is an input type that accepts ClickHouseKeeperInstallationSpecConfigurationArgs and ClickHouseKeeperInstallationSpecConfigurationOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecConfigurationInput` via:
//
//	ClickHouseKeeperInstallationSpecConfigurationArgs{...}
type ClickHouseKeeperInstallationSpecConfigurationInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecConfigurationOutput() ClickHouseKeeperInstallationSpecConfigurationOutput
	ToClickHouseKeeperInstallationSpecConfigurationOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecConfigurationOutput
}

// allows configure multiple aspects and behavior for `clickhouse-server` instance and also allows describe multiple `clickhouse-server` clusters inside one `chi` resource
type ClickHouseKeeperInstallationSpecConfigurationArgs struct {
	// describes clusters layout and allows change settings on cluster-level and replica-level
	Clusters ClickHouseKeeperInstallationSpecConfigurationClustersArrayInput `pulumi:"clusters"`
	// allows define content of any setting
	Files pulumi.MapInput `pulumi:"files"`
	// allows configure multiple aspects and behavior for `clickhouse-keeper` instance
	Settings pulumi.MapInput `pulumi:"settings"`
}

func (ClickHouseKeeperInstallationSpecConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfiguration)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecConfigurationArgs) ToClickHouseKeeperInstallationSpecConfigurationOutput() ClickHouseKeeperInstallationSpecConfigurationOutput {
	return i.ToClickHouseKeeperInstallationSpecConfigurationOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecConfigurationArgs) ToClickHouseKeeperInstallationSpecConfigurationOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecConfigurationOutput)
}

func (i ClickHouseKeeperInstallationSpecConfigurationArgs) ToClickHouseKeeperInstallationSpecConfigurationPtrOutput() ClickHouseKeeperInstallationSpecConfigurationPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecConfigurationPtrOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecConfigurationArgs) ToClickHouseKeeperInstallationSpecConfigurationPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecConfigurationOutput).ToClickHouseKeeperInstallationSpecConfigurationPtrOutputWithContext(ctx)
}

// ClickHouseKeeperInstallationSpecConfigurationPtrInput is an input type that accepts ClickHouseKeeperInstallationSpecConfigurationArgs, ClickHouseKeeperInstallationSpecConfigurationPtr and ClickHouseKeeperInstallationSpecConfigurationPtrOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecConfigurationPtrInput` via:
//
//	        ClickHouseKeeperInstallationSpecConfigurationArgs{...}
//
//	or:
//
//	        nil
type ClickHouseKeeperInstallationSpecConfigurationPtrInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecConfigurationPtrOutput() ClickHouseKeeperInstallationSpecConfigurationPtrOutput
	ToClickHouseKeeperInstallationSpecConfigurationPtrOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecConfigurationPtrOutput
}

type clickHouseKeeperInstallationSpecConfigurationPtrType ClickHouseKeeperInstallationSpecConfigurationArgs

func ClickHouseKeeperInstallationSpecConfigurationPtr(v *ClickHouseKeeperInstallationSpecConfigurationArgs) ClickHouseKeeperInstallationSpecConfigurationPtrInput {
	return (*clickHouseKeeperInstallationSpecConfigurationPtrType)(v)
}

func (*clickHouseKeeperInstallationSpecConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecConfiguration)(nil)).Elem()
}

func (i *clickHouseKeeperInstallationSpecConfigurationPtrType) ToClickHouseKeeperInstallationSpecConfigurationPtrOutput() ClickHouseKeeperInstallationSpecConfigurationPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecConfigurationPtrOutputWithContext(context.Background())
}

func (i *clickHouseKeeperInstallationSpecConfigurationPtrType) ToClickHouseKeeperInstallationSpecConfigurationPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecConfigurationPtrOutput)
}

// allows configure multiple aspects and behavior for `clickhouse-server` instance and also allows describe multiple `clickhouse-server` clusters inside one `chi` resource
type ClickHouseKeeperInstallationSpecConfigurationOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfiguration)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecConfigurationOutput) ToClickHouseKeeperInstallationSpecConfigurationOutput() ClickHouseKeeperInstallationSpecConfigurationOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationOutput) ToClickHouseKeeperInstallationSpecConfigurationOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationOutput) ToClickHouseKeeperInstallationSpecConfigurationPtrOutput() ClickHouseKeeperInstallationSpecConfigurationPtrOutput {
	return o.ToClickHouseKeeperInstallationSpecConfigurationPtrOutputWithContext(context.Background())
}

func (o ClickHouseKeeperInstallationSpecConfigurationOutput) ToClickHouseKeeperInstallationSpecConfigurationPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClickHouseKeeperInstallationSpecConfiguration) *ClickHouseKeeperInstallationSpecConfiguration {
		return &v
	}).(ClickHouseKeeperInstallationSpecConfigurationPtrOutput)
}

// describes clusters layout and allows change settings on cluster-level and replica-level
func (o ClickHouseKeeperInstallationSpecConfigurationOutput) Clusters() ClickHouseKeeperInstallationSpecConfigurationClustersArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfiguration) []ClickHouseKeeperInstallationSpecConfigurationClusters {
		return v.Clusters
	}).(ClickHouseKeeperInstallationSpecConfigurationClustersArrayOutput)
}

// allows define content of any setting
func (o ClickHouseKeeperInstallationSpecConfigurationOutput) Files() pulumi.MapOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfiguration) map[string]interface{} { return v.Files }).(pulumi.MapOutput)
}

// allows configure multiple aspects and behavior for `clickhouse-keeper` instance
func (o ClickHouseKeeperInstallationSpecConfigurationOutput) Settings() pulumi.MapOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfiguration) map[string]interface{} { return v.Settings }).(pulumi.MapOutput)
}

type ClickHouseKeeperInstallationSpecConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecConfiguration)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecConfigurationPtrOutput) ToClickHouseKeeperInstallationSpecConfigurationPtrOutput() ClickHouseKeeperInstallationSpecConfigurationPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationPtrOutput) ToClickHouseKeeperInstallationSpecConfigurationPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationPtrOutput) Elem() ClickHouseKeeperInstallationSpecConfigurationOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfiguration) ClickHouseKeeperInstallationSpecConfiguration {
		if v != nil {
			return *v
		}
		var ret ClickHouseKeeperInstallationSpecConfiguration
		return ret
	}).(ClickHouseKeeperInstallationSpecConfigurationOutput)
}

// describes clusters layout and allows change settings on cluster-level and replica-level
func (o ClickHouseKeeperInstallationSpecConfigurationPtrOutput) Clusters() ClickHouseKeeperInstallationSpecConfigurationClustersArrayOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfiguration) []ClickHouseKeeperInstallationSpecConfigurationClusters {
		if v == nil {
			return nil
		}
		return v.Clusters
	}).(ClickHouseKeeperInstallationSpecConfigurationClustersArrayOutput)
}

// allows define content of any setting
func (o ClickHouseKeeperInstallationSpecConfigurationPtrOutput) Files() pulumi.MapOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfiguration) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Files
	}).(pulumi.MapOutput)
}

// allows configure multiple aspects and behavior for `clickhouse-keeper` instance
func (o ClickHouseKeeperInstallationSpecConfigurationPtrOutput) Settings() pulumi.MapOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfiguration) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(pulumi.MapOutput)
}

type ClickHouseKeeperInstallationSpecConfigurationClusters struct {
	// optional, allows define content of any setting file inside each `Pod` on current cluster during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
	// override top-level `chi.spec.configuration.files`
	Files map[string]interface{} `pulumi:"files"`
	// describe current cluster layout, how much shards in cluster, how much replica in shard
	// allows override settings on each shard and replica separatelly
	Layout *ClickHouseKeeperInstallationSpecConfigurationClustersLayout `pulumi:"layout"`
	// cluster name, used to identify set of servers and wide used during generate names of related Kubernetes resources
	Name *string `pulumi:"name"`
	// Specifies whether the Pod Disruption Budget (PDB) should be managed.
	// During the next installation, if PDB management is enabled, the operator will
	// attempt to retrieve any existing PDB. If none is found, it will create a new one
	// and initiate a reconciliation loop. If PDB management is disabled, the existing PDB
	// will remain intact, and the reconciliation loop will not be executed. By default,
	// PDB management is enabled.
	PdbManaged *string `pulumi:"pdbManaged"`
	// Pod eviction is allowed if at most "pdbMaxUnavailable" pods are unavailable after the eviction,
	// i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions
	// by specifying 0. This is a mutually exclusive setting with "minAvailable".
	PdbMaxUnavailable *int `pulumi:"pdbMaxUnavailable"`
	// optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` only in one cluster during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/`
	// override top-level `chi.spec.configuration.settings`
	// More details: https://clickhouse.tech/docs/en/operations/settings/settings/
	Settings map[string]interface{} `pulumi:"settings"`
	// optional, configuration of the templates names which will use for generate Kubernetes resources according to selected cluster
	// override top-level `chi.spec.configuration.templates`
	Templates *ClickHouseKeeperInstallationSpecConfigurationClustersTemplates `pulumi:"templates"`
}

// ClickHouseKeeperInstallationSpecConfigurationClustersInput is an input type that accepts ClickHouseKeeperInstallationSpecConfigurationClustersArgs and ClickHouseKeeperInstallationSpecConfigurationClustersOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecConfigurationClustersInput` via:
//
//	ClickHouseKeeperInstallationSpecConfigurationClustersArgs{...}
type ClickHouseKeeperInstallationSpecConfigurationClustersInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecConfigurationClustersOutput() ClickHouseKeeperInstallationSpecConfigurationClustersOutput
	ToClickHouseKeeperInstallationSpecConfigurationClustersOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersOutput
}

type ClickHouseKeeperInstallationSpecConfigurationClustersArgs struct {
	// optional, allows define content of any setting file inside each `Pod` on current cluster during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
	// override top-level `chi.spec.configuration.files`
	Files pulumi.MapInput `pulumi:"files"`
	// describe current cluster layout, how much shards in cluster, how much replica in shard
	// allows override settings on each shard and replica separatelly
	Layout ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrInput `pulumi:"layout"`
	// cluster name, used to identify set of servers and wide used during generate names of related Kubernetes resources
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies whether the Pod Disruption Budget (PDB) should be managed.
	// During the next installation, if PDB management is enabled, the operator will
	// attempt to retrieve any existing PDB. If none is found, it will create a new one
	// and initiate a reconciliation loop. If PDB management is disabled, the existing PDB
	// will remain intact, and the reconciliation loop will not be executed. By default,
	// PDB management is enabled.
	PdbManaged pulumi.StringPtrInput `pulumi:"pdbManaged"`
	// Pod eviction is allowed if at most "pdbMaxUnavailable" pods are unavailable after the eviction,
	// i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions
	// by specifying 0. This is a mutually exclusive setting with "minAvailable".
	PdbMaxUnavailable pulumi.IntPtrInput `pulumi:"pdbMaxUnavailable"`
	// optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` only in one cluster during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/`
	// override top-level `chi.spec.configuration.settings`
	// More details: https://clickhouse.tech/docs/en/operations/settings/settings/
	Settings pulumi.MapInput `pulumi:"settings"`
	// optional, configuration of the templates names which will use for generate Kubernetes resources according to selected cluster
	// override top-level `chi.spec.configuration.templates`
	Templates ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrInput `pulumi:"templates"`
}

func (ClickHouseKeeperInstallationSpecConfigurationClustersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClusters)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersArgs) ToClickHouseKeeperInstallationSpecConfigurationClustersOutput() ClickHouseKeeperInstallationSpecConfigurationClustersOutput {
	return i.ToClickHouseKeeperInstallationSpecConfigurationClustersOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersArgs) ToClickHouseKeeperInstallationSpecConfigurationClustersOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecConfigurationClustersOutput)
}

// ClickHouseKeeperInstallationSpecConfigurationClustersArrayInput is an input type that accepts ClickHouseKeeperInstallationSpecConfigurationClustersArray and ClickHouseKeeperInstallationSpecConfigurationClustersArrayOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecConfigurationClustersArrayInput` via:
//
//	ClickHouseKeeperInstallationSpecConfigurationClustersArray{ ClickHouseKeeperInstallationSpecConfigurationClustersArgs{...} }
type ClickHouseKeeperInstallationSpecConfigurationClustersArrayInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecConfigurationClustersArrayOutput() ClickHouseKeeperInstallationSpecConfigurationClustersArrayOutput
	ToClickHouseKeeperInstallationSpecConfigurationClustersArrayOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersArrayOutput
}

type ClickHouseKeeperInstallationSpecConfigurationClustersArray []ClickHouseKeeperInstallationSpecConfigurationClustersInput

func (ClickHouseKeeperInstallationSpecConfigurationClustersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClickHouseKeeperInstallationSpecConfigurationClusters)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersArray) ToClickHouseKeeperInstallationSpecConfigurationClustersArrayOutput() ClickHouseKeeperInstallationSpecConfigurationClustersArrayOutput {
	return i.ToClickHouseKeeperInstallationSpecConfigurationClustersArrayOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersArray) ToClickHouseKeeperInstallationSpecConfigurationClustersArrayOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecConfigurationClustersArrayOutput)
}

type ClickHouseKeeperInstallationSpecConfigurationClustersOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecConfigurationClustersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClusters)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersOutput() ClickHouseKeeperInstallationSpecConfigurationClustersOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersOutput {
	return o
}

// optional, allows define content of any setting file inside each `Pod` on current cluster during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
// override top-level `chi.spec.configuration.files`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersOutput) Files() pulumi.MapOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClusters) map[string]interface{} { return v.Files }).(pulumi.MapOutput)
}

// describe current cluster layout, how much shards in cluster, how much replica in shard
// allows override settings on each shard and replica separatelly
func (o ClickHouseKeeperInstallationSpecConfigurationClustersOutput) Layout() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClusters) *ClickHouseKeeperInstallationSpecConfigurationClustersLayout {
		return v.Layout
	}).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput)
}

// cluster name, used to identify set of servers and wide used during generate names of related Kubernetes resources
func (o ClickHouseKeeperInstallationSpecConfigurationClustersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClusters) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies whether the Pod Disruption Budget (PDB) should be managed.
// During the next installation, if PDB management is enabled, the operator will
// attempt to retrieve any existing PDB. If none is found, it will create a new one
// and initiate a reconciliation loop. If PDB management is disabled, the existing PDB
// will remain intact, and the reconciliation loop will not be executed. By default,
// PDB management is enabled.
func (o ClickHouseKeeperInstallationSpecConfigurationClustersOutput) PdbManaged() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClusters) *string { return v.PdbManaged }).(pulumi.StringPtrOutput)
}

// Pod eviction is allowed if at most "pdbMaxUnavailable" pods are unavailable after the eviction,
// i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions
// by specifying 0. This is a mutually exclusive setting with "minAvailable".
func (o ClickHouseKeeperInstallationSpecConfigurationClustersOutput) PdbMaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClusters) *int { return v.PdbMaxUnavailable }).(pulumi.IntPtrOutput)
}

// optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` only in one cluster during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/`
// override top-level `chi.spec.configuration.settings`
// More details: https://clickhouse.tech/docs/en/operations/settings/settings/
func (o ClickHouseKeeperInstallationSpecConfigurationClustersOutput) Settings() pulumi.MapOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClusters) map[string]interface{} {
		return v.Settings
	}).(pulumi.MapOutput)
}

// optional, configuration of the templates names which will use for generate Kubernetes resources according to selected cluster
// override top-level `chi.spec.configuration.templates`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersOutput) Templates() ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClusters) *ClickHouseKeeperInstallationSpecConfigurationClustersTemplates {
		return v.Templates
	}).(ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput)
}

type ClickHouseKeeperInstallationSpecConfigurationClustersArrayOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecConfigurationClustersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClickHouseKeeperInstallationSpecConfigurationClusters)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersArrayOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersArrayOutput() ClickHouseKeeperInstallationSpecConfigurationClustersArrayOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersArrayOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersArrayOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersArrayOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersArrayOutput) Index(i pulumi.IntInput) ClickHouseKeeperInstallationSpecConfigurationClustersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClickHouseKeeperInstallationSpecConfigurationClusters {
		return vs[0].([]ClickHouseKeeperInstallationSpecConfigurationClusters)[vs[1].(int)]
	}).(ClickHouseKeeperInstallationSpecConfigurationClustersOutput)
}

// describe current cluster layout, how much shards in cluster, how much replica in shard
// allows override settings on each shard and replica separatelly
type ClickHouseKeeperInstallationSpecConfigurationClustersLayout struct {
	// optional, allows override top-level `chi.spec.configuration` and cluster-level `chi.spec.configuration.clusters` configuration for each replica and each shard relates to selected replica, use it only if you fully understand what you do
	Replicas []ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicas `pulumi:"replicas"`
	// how much replicas in each shards for current cluster will run in Kubernetes,
	// each replica is a separate `StatefulSet` which contains only one `Pod` with `clickhouse-server` instance,
	// every shard contains 1 replica by default"
	ReplicasCount *int `pulumi:"replicasCount"`
}

// ClickHouseKeeperInstallationSpecConfigurationClustersLayoutInput is an input type that accepts ClickHouseKeeperInstallationSpecConfigurationClustersLayoutArgs and ClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecConfigurationClustersLayoutInput` via:
//
//	ClickHouseKeeperInstallationSpecConfigurationClustersLayoutArgs{...}
type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutput
	ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutput
}

// describe current cluster layout, how much shards in cluster, how much replica in shard
// allows override settings on each shard and replica separatelly
type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutArgs struct {
	// optional, allows override top-level `chi.spec.configuration` and cluster-level `chi.spec.configuration.clusters` configuration for each replica and each shard relates to selected replica, use it only if you fully understand what you do
	Replicas ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayInput `pulumi:"replicas"`
	// how much replicas in each shards for current cluster will run in Kubernetes,
	// each replica is a separate `StatefulSet` which contains only one `Pod` with `clickhouse-server` instance,
	// every shard contains 1 replica by default"
	ReplicasCount pulumi.IntPtrInput `pulumi:"replicasCount"`
}

func (ClickHouseKeeperInstallationSpecConfigurationClustersLayoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersLayout)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersLayoutArgs) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutput {
	return i.ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersLayoutArgs) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutput)
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersLayoutArgs) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersLayoutArgs) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutput).ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutputWithContext(ctx)
}

// ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrInput is an input type that accepts ClickHouseKeeperInstallationSpecConfigurationClustersLayoutArgs, ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtr and ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrInput` via:
//
//	        ClickHouseKeeperInstallationSpecConfigurationClustersLayoutArgs{...}
//
//	or:
//
//	        nil
type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput
	ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput
}

type clickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrType ClickHouseKeeperInstallationSpecConfigurationClustersLayoutArgs

func ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtr(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutArgs) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrInput {
	return (*clickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrType)(v)
}

func (*clickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecConfigurationClustersLayout)(nil)).Elem()
}

func (i *clickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrType) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutputWithContext(context.Background())
}

func (i *clickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrType) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput)
}

// describe current cluster layout, how much shards in cluster, how much replica in shard
// allows override settings on each shard and replica separatelly
type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersLayout)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput {
	return o.ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutputWithContext(context.Background())
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClickHouseKeeperInstallationSpecConfigurationClustersLayout) *ClickHouseKeeperInstallationSpecConfigurationClustersLayout {
		return &v
	}).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput)
}

// optional, allows override top-level `chi.spec.configuration` and cluster-level `chi.spec.configuration.clusters` configuration for each replica and each shard relates to selected replica, use it only if you fully understand what you do
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutput) Replicas() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayout) []ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicas {
		return v.Replicas
	}).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutput)
}

// how much replicas in each shards for current cluster will run in Kubernetes,
// each replica is a separate `StatefulSet` which contains only one `Pod` with `clickhouse-server` instance,
// every shard contains 1 replica by default"
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutput) ReplicasCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayout) *int { return v.ReplicasCount }).(pulumi.IntPtrOutput)
}

type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecConfigurationClustersLayout)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput) Elem() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayout) ClickHouseKeeperInstallationSpecConfigurationClustersLayout {
		if v != nil {
			return *v
		}
		var ret ClickHouseKeeperInstallationSpecConfigurationClustersLayout
		return ret
	}).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutput)
}

// optional, allows override top-level `chi.spec.configuration` and cluster-level `chi.spec.configuration.clusters` configuration for each replica and each shard relates to selected replica, use it only if you fully understand what you do
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput) Replicas() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayout) []ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicas {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutput)
}

// how much replicas in each shards for current cluster will run in Kubernetes,
// each replica is a separate `StatefulSet` which contains only one `Pod` with `clickhouse-server` instance,
// every shard contains 1 replica by default"
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput) ReplicasCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayout) *int {
		if v == nil {
			return nil
		}
		return v.ReplicasCount
	}).(pulumi.IntPtrOutput)
}

type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicas struct {
	// optional, allows define content of any setting file inside each `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
	// override top-level `chi.spec.configuration.files` and cluster-level `chi.spec.configuration.clusters.files`, will ignore if `chi.spec.configuration.clusters.layout.shards` presents
	Files map[string]interface{} `pulumi:"files"`
	// optional, by default replica name is generated, but you can override it and setup custom name
	Name *string `pulumi:"name"`
	// optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
	// override top-level `chi.spec.configuration.settings`, cluster-level `chi.spec.configuration.clusters.settings` and will ignore if shard-level `chi.spec.configuration.clusters.layout.shards` present
	// More details: https://clickhouse.tech/docs/en/operations/settings/settings/
	Settings map[string]interface{} `pulumi:"settings"`
	// optional, list of shards related to current replica, will ignore if `chi.spec.configuration.clusters.layout.shards` presents
	Shards []ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShards `pulumi:"shards"`
	// optional, count of shards related to current replica, you can override each shard behavior on low-level `chi.spec.configuration.clusters.layout.replicas.shards`
	ShardsCount *int `pulumi:"shardsCount"`
	// optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
	// override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates`
	Templates *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates `pulumi:"templates"`
}

// ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasInput is an input type that accepts ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArgs and ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasInput` via:
//
//	ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArgs{...}
type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput
	ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput
}

type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArgs struct {
	// optional, allows define content of any setting file inside each `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
	// override top-level `chi.spec.configuration.files` and cluster-level `chi.spec.configuration.clusters.files`, will ignore if `chi.spec.configuration.clusters.layout.shards` presents
	Files pulumi.MapInput `pulumi:"files"`
	// optional, by default replica name is generated, but you can override it and setup custom name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
	// override top-level `chi.spec.configuration.settings`, cluster-level `chi.spec.configuration.clusters.settings` and will ignore if shard-level `chi.spec.configuration.clusters.layout.shards` present
	// More details: https://clickhouse.tech/docs/en/operations/settings/settings/
	Settings pulumi.MapInput `pulumi:"settings"`
	// optional, list of shards related to current replica, will ignore if `chi.spec.configuration.clusters.layout.shards` presents
	Shards ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayInput `pulumi:"shards"`
	// optional, count of shards related to current replica, you can override each shard behavior on low-level `chi.spec.configuration.clusters.layout.replicas.shards`
	ShardsCount pulumi.IntPtrInput `pulumi:"shardsCount"`
	// optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
	// override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates`
	Templates ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrInput `pulumi:"templates"`
}

func (ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicas)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArgs) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput {
	return i.ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArgs) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput)
}

// ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayInput is an input type that accepts ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArray and ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayInput` via:
//
//	ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArray{ ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArgs{...} }
type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutput
	ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutput
}

type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArray []ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasInput

func (ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicas)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArray) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutput {
	return i.ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArray) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutput)
}

type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicas)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput {
	return o
}

// optional, allows define content of any setting file inside each `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
// override top-level `chi.spec.configuration.files` and cluster-level `chi.spec.configuration.clusters.files`, will ignore if `chi.spec.configuration.clusters.layout.shards` presents
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput) Files() pulumi.MapOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicas) map[string]interface{} {
		return v.Files
	}).(pulumi.MapOutput)
}

// optional, by default replica name is generated, but you can override it and setup custom name
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicas) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
// override top-level `chi.spec.configuration.settings`, cluster-level `chi.spec.configuration.clusters.settings` and will ignore if shard-level `chi.spec.configuration.clusters.layout.shards` present
// More details: https://clickhouse.tech/docs/en/operations/settings/settings/
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput) Settings() pulumi.MapOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicas) map[string]interface{} {
		return v.Settings
	}).(pulumi.MapOutput)
}

// optional, list of shards related to current replica, will ignore if `chi.spec.configuration.clusters.layout.shards` presents
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput) Shards() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicas) []ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShards {
		return v.Shards
	}).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayOutput)
}

// optional, count of shards related to current replica, you can override each shard behavior on low-level `chi.spec.configuration.clusters.layout.replicas.shards`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput) ShardsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicas) *int { return v.ShardsCount }).(pulumi.IntPtrOutput)
}

// optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
// override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput) Templates() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicas) *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates {
		return v.Templates
	}).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput)
}

type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicas)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutput) Index(i pulumi.IntInput) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicas {
		return vs[0].([]ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicas)[vs[1].(int)]
	}).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput)
}

type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShards struct {
	// optional, allows define content of any setting file inside each `Pod` only in one shard related to current replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
	// override top-level `chi.spec.configuration.files` and cluster-level `chi.spec.configuration.clusters.files`, will ignore if `chi.spec.configuration.clusters.layout.shards` presents
	Files map[string]interface{} `pulumi:"files"`
	// optional, by default shard name is generated, but you can override it and setup custom name
	Name     *string `pulumi:"name"`
	RaftPort *int    `pulumi:"raftPort"`
	// optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in `Pod` only in one shard related to current replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
	// override top-level `chi.spec.configuration.settings`, cluster-level `chi.spec.configuration.clusters.settings` and replica-level `chi.spec.configuration.clusters.layout.replicas.settings`
	// More details: https://clickhouse.tech/docs/en/operations/settings/settings/
	Settings map[string]interface{} `pulumi:"settings"`
	// optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
	// override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates`, replica-level `chi.spec.configuration.clusters.layout.replicas.templates`
	Templates *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates `pulumi:"templates"`
	ZkPort    *int                                                                                `pulumi:"zkPort"`
}

// ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsInput is an input type that accepts ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArgs and ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsInput` via:
//
//	ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArgs{...}
type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput
	ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput
}

type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArgs struct {
	// optional, allows define content of any setting file inside each `Pod` only in one shard related to current replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
	// override top-level `chi.spec.configuration.files` and cluster-level `chi.spec.configuration.clusters.files`, will ignore if `chi.spec.configuration.clusters.layout.shards` presents
	Files pulumi.MapInput `pulumi:"files"`
	// optional, by default shard name is generated, but you can override it and setup custom name
	Name     pulumi.StringPtrInput `pulumi:"name"`
	RaftPort pulumi.IntPtrInput    `pulumi:"raftPort"`
	// optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in `Pod` only in one shard related to current replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
	// override top-level `chi.spec.configuration.settings`, cluster-level `chi.spec.configuration.clusters.settings` and replica-level `chi.spec.configuration.clusters.layout.replicas.settings`
	// More details: https://clickhouse.tech/docs/en/operations/settings/settings/
	Settings pulumi.MapInput `pulumi:"settings"`
	// optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
	// override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates`, replica-level `chi.spec.configuration.clusters.layout.replicas.templates`
	Templates ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrInput `pulumi:"templates"`
	ZkPort    pulumi.IntPtrInput                                                                         `pulumi:"zkPort"`
}

func (ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShards)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArgs) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput {
	return i.ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArgs) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput)
}

// ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayInput is an input type that accepts ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArray and ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayInput` via:
//
//	ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArray{ ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArgs{...} }
type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayOutput
	ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayOutput
}

type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArray []ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsInput

func (ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShards)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArray) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayOutput {
	return i.ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArray) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayOutput)
}

type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShards)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput {
	return o
}

// optional, allows define content of any setting file inside each `Pod` only in one shard related to current replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
// override top-level `chi.spec.configuration.files` and cluster-level `chi.spec.configuration.clusters.files`, will ignore if `chi.spec.configuration.clusters.layout.shards` presents
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput) Files() pulumi.MapOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShards) map[string]interface{} {
		return v.Files
	}).(pulumi.MapOutput)
}

// optional, by default shard name is generated, but you can override it and setup custom name
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShards) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput) RaftPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShards) *int {
		return v.RaftPort
	}).(pulumi.IntPtrOutput)
}

// optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in `Pod` only in one shard related to current replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
// override top-level `chi.spec.configuration.settings`, cluster-level `chi.spec.configuration.clusters.settings` and replica-level `chi.spec.configuration.clusters.layout.replicas.settings`
// More details: https://clickhouse.tech/docs/en/operations/settings/settings/
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput) Settings() pulumi.MapOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShards) map[string]interface{} {
		return v.Settings
	}).(pulumi.MapOutput)
}

// optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
// override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates`, replica-level `chi.spec.configuration.clusters.layout.replicas.templates`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput) Templates() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShards) *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates {
		return v.Templates
	}).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput)
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput) ZkPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShards) *int {
		return v.ZkPort
	}).(pulumi.IntPtrOutput)
}

type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShards)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayOutput) Index(i pulumi.IntInput) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShards {
		return vs[0].([]ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShards)[vs[1].(int)]
	}).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput)
}

// optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
// override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates`, replica-level `chi.spec.configuration.clusters.layout.replicas.templates`
type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates struct {
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
	ClusterServiceTemplate *string `pulumi:"clusterServiceTemplate"`
	// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	DataVolumeClaimTemplate *string `pulumi:"dataVolumeClaimTemplate"`
	// optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
	HostTemplate *string `pulumi:"hostTemplate"`
	// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	LogVolumeClaimTemplate *string `pulumi:"logVolumeClaimTemplate"`
	// optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	PodTemplate *string `pulumi:"podTemplate"`
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
	ReplicaServiceTemplate *string `pulumi:"replicaServiceTemplate"`
	// optional, template name from chi.spec.templates.serviceTemplates. used for customization of the `Service` resource, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
	ServiceTemplate *string `pulumi:"serviceTemplate"`
	// optional, template names from chi.spec.templates.serviceTemplates. used for customization of the `Service` resources, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
	ServiceTemplates []string `pulumi:"serviceTemplates"`
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
	ShardServiceTemplate *string `pulumi:"shardServiceTemplate"`
	// optional, alias for dataVolumeClaimTemplate, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	VolumeClaimTemplate *string `pulumi:"volumeClaimTemplate"`
}

// ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesInput is an input type that accepts ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesArgs and ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesInput` via:
//
//	ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesArgs{...}
type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput
	ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput
}

// optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
// override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates`, replica-level `chi.spec.configuration.clusters.layout.replicas.templates`
type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesArgs struct {
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
	ClusterServiceTemplate pulumi.StringPtrInput `pulumi:"clusterServiceTemplate"`
	// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	DataVolumeClaimTemplate pulumi.StringPtrInput `pulumi:"dataVolumeClaimTemplate"`
	// optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
	HostTemplate pulumi.StringPtrInput `pulumi:"hostTemplate"`
	// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	LogVolumeClaimTemplate pulumi.StringPtrInput `pulumi:"logVolumeClaimTemplate"`
	// optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	PodTemplate pulumi.StringPtrInput `pulumi:"podTemplate"`
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
	ReplicaServiceTemplate pulumi.StringPtrInput `pulumi:"replicaServiceTemplate"`
	// optional, template name from chi.spec.templates.serviceTemplates. used for customization of the `Service` resource, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
	ServiceTemplate pulumi.StringPtrInput `pulumi:"serviceTemplate"`
	// optional, template names from chi.spec.templates.serviceTemplates. used for customization of the `Service` resources, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
	ServiceTemplates pulumi.StringArrayInput `pulumi:"serviceTemplates"`
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
	ShardServiceTemplate pulumi.StringPtrInput `pulumi:"shardServiceTemplate"`
	// optional, alias for dataVolumeClaimTemplate, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	VolumeClaimTemplate pulumi.StringPtrInput `pulumi:"volumeClaimTemplate"`
}

func (ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesArgs) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput {
	return i.ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesArgs) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput)
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesArgs) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesArgs) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput).ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutputWithContext(ctx)
}

// ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrInput is an input type that accepts ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesArgs, ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtr and ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrInput` via:
//
//	        ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesArgs{...}
//
//	or:
//
//	        nil
type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput
	ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput
}

type clickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrType ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesArgs

func ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtr(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesArgs) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrInput {
	return (*clickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrType)(v)
}

func (*clickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates)(nil)).Elem()
}

func (i *clickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrType) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutputWithContext(context.Background())
}

func (i *clickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrType) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput)
}

// optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
// override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates`, replica-level `chi.spec.configuration.clusters.layout.replicas.templates`
type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput {
	return o.ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutputWithContext(context.Background())
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates) *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates {
		return &v
	}).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput) ClusterServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates) *string {
		return v.ClusterServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput) DataVolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates) *string {
		return v.DataVolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput) HostTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates) *string {
		return v.HostTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput) LogVolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates) *string {
		return v.LogVolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput) PodTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates) *string {
		return v.PodTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput) ReplicaServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates) *string {
		return v.ReplicaServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates. used for customization of the `Service` resource, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput) ServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates) *string {
		return v.ServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template names from chi.spec.templates.serviceTemplates. used for customization of the `Service` resources, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput) ServiceTemplates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates) []string {
		return v.ServiceTemplates
	}).(pulumi.StringArrayOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput) ShardServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates) *string {
		return v.ShardServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, alias for dataVolumeClaimTemplate, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput) VolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates) *string {
		return v.VolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput) Elem() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates {
		if v != nil {
			return *v
		}
		var ret ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates
		return ret
	}).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput) ClusterServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates) *string {
		if v == nil {
			return nil
		}
		return v.ClusterServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput) DataVolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates) *string {
		if v == nil {
			return nil
		}
		return v.DataVolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput) HostTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates) *string {
		if v == nil {
			return nil
		}
		return v.HostTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput) LogVolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates) *string {
		if v == nil {
			return nil
		}
		return v.LogVolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput) PodTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates) *string {
		if v == nil {
			return nil
		}
		return v.PodTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput) ReplicaServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates) *string {
		if v == nil {
			return nil
		}
		return v.ReplicaServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates. used for customization of the `Service` resource, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput) ServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates) *string {
		if v == nil {
			return nil
		}
		return v.ServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template names from chi.spec.templates.serviceTemplates. used for customization of the `Service` resources, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput) ServiceTemplates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates) []string {
		if v == nil {
			return nil
		}
		return v.ServiceTemplates
	}).(pulumi.StringArrayOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput) ShardServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates) *string {
		if v == nil {
			return nil
		}
		return v.ShardServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, alias for dataVolumeClaimTemplate, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput) VolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplates) *string {
		if v == nil {
			return nil
		}
		return v.VolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
// override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates`
type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates struct {
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
	ClusterServiceTemplate *string `pulumi:"clusterServiceTemplate"`
	// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	DataVolumeClaimTemplate *string `pulumi:"dataVolumeClaimTemplate"`
	// optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
	HostTemplate *string `pulumi:"hostTemplate"`
	// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	LogVolumeClaimTemplate *string `pulumi:"logVolumeClaimTemplate"`
	// optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	PodTemplate *string `pulumi:"podTemplate"`
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
	ReplicaServiceTemplate *string `pulumi:"replicaServiceTemplate"`
	// optional, template name from chi.spec.templates.serviceTemplates. used for customization of the `Service` resource, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
	ServiceTemplate *string `pulumi:"serviceTemplate"`
	// optional, template names from chi.spec.templates.serviceTemplates. used for customization of the `Service` resources, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
	ServiceTemplates []string `pulumi:"serviceTemplates"`
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
	ShardServiceTemplate *string `pulumi:"shardServiceTemplate"`
	// optional, alias for dataVolumeClaimTemplate, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	VolumeClaimTemplate *string `pulumi:"volumeClaimTemplate"`
}

// ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesInput is an input type that accepts ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesArgs and ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesInput` via:
//
//	ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesArgs{...}
type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput
	ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput
}

// optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
// override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates`
type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesArgs struct {
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
	ClusterServiceTemplate pulumi.StringPtrInput `pulumi:"clusterServiceTemplate"`
	// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	DataVolumeClaimTemplate pulumi.StringPtrInput `pulumi:"dataVolumeClaimTemplate"`
	// optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
	HostTemplate pulumi.StringPtrInput `pulumi:"hostTemplate"`
	// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	LogVolumeClaimTemplate pulumi.StringPtrInput `pulumi:"logVolumeClaimTemplate"`
	// optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	PodTemplate pulumi.StringPtrInput `pulumi:"podTemplate"`
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
	ReplicaServiceTemplate pulumi.StringPtrInput `pulumi:"replicaServiceTemplate"`
	// optional, template name from chi.spec.templates.serviceTemplates. used for customization of the `Service` resource, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
	ServiceTemplate pulumi.StringPtrInput `pulumi:"serviceTemplate"`
	// optional, template names from chi.spec.templates.serviceTemplates. used for customization of the `Service` resources, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
	ServiceTemplates pulumi.StringArrayInput `pulumi:"serviceTemplates"`
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
	ShardServiceTemplate pulumi.StringPtrInput `pulumi:"shardServiceTemplate"`
	// optional, alias for dataVolumeClaimTemplate, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	VolumeClaimTemplate pulumi.StringPtrInput `pulumi:"volumeClaimTemplate"`
}

func (ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesArgs) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput {
	return i.ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesArgs) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput)
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesArgs) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesArgs) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput).ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutputWithContext(ctx)
}

// ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrInput is an input type that accepts ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesArgs, ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtr and ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrInput` via:
//
//	        ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesArgs{...}
//
//	or:
//
//	        nil
type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput
	ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput
}

type clickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrType ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesArgs

func ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtr(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesArgs) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrInput {
	return (*clickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrType)(v)
}

func (*clickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates)(nil)).Elem()
}

func (i *clickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrType) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutputWithContext(context.Background())
}

func (i *clickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrType) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput)
}

// optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
// override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates`
type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput {
	return o.ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutputWithContext(context.Background())
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates) *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates {
		return &v
	}).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput) ClusterServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates) *string {
		return v.ClusterServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput) DataVolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates) *string {
		return v.DataVolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput) HostTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates) *string {
		return v.HostTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput) LogVolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates) *string {
		return v.LogVolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput) PodTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates) *string {
		return v.PodTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput) ReplicaServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates) *string {
		return v.ReplicaServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates. used for customization of the `Service` resource, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput) ServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates) *string {
		return v.ServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template names from chi.spec.templates.serviceTemplates. used for customization of the `Service` resources, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput) ServiceTemplates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates) []string {
		return v.ServiceTemplates
	}).(pulumi.StringArrayOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput) ShardServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates) *string {
		return v.ShardServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, alias for dataVolumeClaimTemplate, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput) VolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates) *string {
		return v.VolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

type ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput) Elem() ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates) ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates {
		if v != nil {
			return *v
		}
		var ret ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates
		return ret
	}).(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput) ClusterServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates) *string {
		if v == nil {
			return nil
		}
		return v.ClusterServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput) DataVolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates) *string {
		if v == nil {
			return nil
		}
		return v.DataVolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput) HostTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates) *string {
		if v == nil {
			return nil
		}
		return v.HostTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput) LogVolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates) *string {
		if v == nil {
			return nil
		}
		return v.LogVolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput) PodTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates) *string {
		if v == nil {
			return nil
		}
		return v.PodTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput) ReplicaServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates) *string {
		if v == nil {
			return nil
		}
		return v.ReplicaServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates. used for customization of the `Service` resource, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput) ServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates) *string {
		if v == nil {
			return nil
		}
		return v.ServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template names from chi.spec.templates.serviceTemplates. used for customization of the `Service` resources, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput) ServiceTemplates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates) []string {
		if v == nil {
			return nil
		}
		return v.ServiceTemplates
	}).(pulumi.StringArrayOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput) ShardServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates) *string {
		if v == nil {
			return nil
		}
		return v.ShardServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, alias for dataVolumeClaimTemplate, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput) VolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplates) *string {
		if v == nil {
			return nil
		}
		return v.VolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, configuration of the templates names which will use for generate Kubernetes resources according to selected cluster
// override top-level `chi.spec.configuration.templates`
type ClickHouseKeeperInstallationSpecConfigurationClustersTemplates struct {
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
	ClusterServiceTemplate *string `pulumi:"clusterServiceTemplate"`
	// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	DataVolumeClaimTemplate *string `pulumi:"dataVolumeClaimTemplate"`
	// optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
	HostTemplate *string `pulumi:"hostTemplate"`
	// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	LogVolumeClaimTemplate *string `pulumi:"logVolumeClaimTemplate"`
	// optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	PodTemplate *string `pulumi:"podTemplate"`
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
	ReplicaServiceTemplate *string `pulumi:"replicaServiceTemplate"`
	// optional, template name from chi.spec.templates.serviceTemplates. used for customization of the `Service` resource, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
	ServiceTemplate *string `pulumi:"serviceTemplate"`
	// optional, template names from chi.spec.templates.serviceTemplates. used for customization of the `Service` resources, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
	ServiceTemplates []string `pulumi:"serviceTemplates"`
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
	ShardServiceTemplate *string `pulumi:"shardServiceTemplate"`
	// optional, alias for dataVolumeClaimTemplate, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	VolumeClaimTemplate *string `pulumi:"volumeClaimTemplate"`
}

// ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesInput is an input type that accepts ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesArgs and ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesInput` via:
//
//	ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesArgs{...}
type ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput() ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput
	ToClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput
}

// optional, configuration of the templates names which will use for generate Kubernetes resources according to selected cluster
// override top-level `chi.spec.configuration.templates`
type ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesArgs struct {
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
	ClusterServiceTemplate pulumi.StringPtrInput `pulumi:"clusterServiceTemplate"`
	// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	DataVolumeClaimTemplate pulumi.StringPtrInput `pulumi:"dataVolumeClaimTemplate"`
	// optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
	HostTemplate pulumi.StringPtrInput `pulumi:"hostTemplate"`
	// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	LogVolumeClaimTemplate pulumi.StringPtrInput `pulumi:"logVolumeClaimTemplate"`
	// optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	PodTemplate pulumi.StringPtrInput `pulumi:"podTemplate"`
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
	ReplicaServiceTemplate pulumi.StringPtrInput `pulumi:"replicaServiceTemplate"`
	// optional, template name from chi.spec.templates.serviceTemplates. used for customization of the `Service` resource, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
	ServiceTemplate pulumi.StringPtrInput `pulumi:"serviceTemplate"`
	// optional, template names from chi.spec.templates.serviceTemplates. used for customization of the `Service` resources, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
	ServiceTemplates pulumi.StringArrayInput `pulumi:"serviceTemplates"`
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
	ShardServiceTemplate pulumi.StringPtrInput `pulumi:"shardServiceTemplate"`
	// optional, alias for dataVolumeClaimTemplate, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	VolumeClaimTemplate pulumi.StringPtrInput `pulumi:"volumeClaimTemplate"`
}

func (ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersTemplates)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesArgs) ToClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput() ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput {
	return i.ToClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesArgs) ToClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput)
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesArgs) ToClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput() ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesArgs) ToClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput).ToClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutputWithContext(ctx)
}

// ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrInput is an input type that accepts ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesArgs, ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtr and ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrInput` via:
//
//	        ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesArgs{...}
//
//	or:
//
//	        nil
type ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput() ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput
	ToClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput
}

type clickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrType ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesArgs

func ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtr(v *ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesArgs) ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrInput {
	return (*clickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrType)(v)
}

func (*clickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecConfigurationClustersTemplates)(nil)).Elem()
}

func (i *clickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrType) ToClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput() ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutputWithContext(context.Background())
}

func (i *clickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrType) ToClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput)
}

// optional, configuration of the templates names which will use for generate Kubernetes resources according to selected cluster
// override top-level `chi.spec.configuration.templates`
type ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersTemplates)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput() ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput() ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput {
	return o.ToClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutputWithContext(context.Background())
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClickHouseKeeperInstallationSpecConfigurationClustersTemplates) *ClickHouseKeeperInstallationSpecConfigurationClustersTemplates {
		return &v
	}).(ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput) ClusterServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersTemplates) *string {
		return v.ClusterServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput) DataVolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersTemplates) *string {
		return v.DataVolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput) HostTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersTemplates) *string { return v.HostTemplate }).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput) LogVolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersTemplates) *string {
		return v.LogVolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput) PodTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersTemplates) *string { return v.PodTemplate }).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput) ReplicaServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersTemplates) *string {
		return v.ReplicaServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates. used for customization of the `Service` resource, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput) ServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersTemplates) *string {
		return v.ServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template names from chi.spec.templates.serviceTemplates. used for customization of the `Service` resources, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput) ServiceTemplates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersTemplates) []string {
		return v.ServiceTemplates
	}).(pulumi.StringArrayOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput) ShardServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersTemplates) *string {
		return v.ShardServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, alias for dataVolumeClaimTemplate, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput) VolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecConfigurationClustersTemplates) *string {
		return v.VolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

type ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecConfigurationClustersTemplates)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput() ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput) ToClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput) Elem() ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersTemplates) ClickHouseKeeperInstallationSpecConfigurationClustersTemplates {
		if v != nil {
			return *v
		}
		var ret ClickHouseKeeperInstallationSpecConfigurationClustersTemplates
		return ret
	}).(ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput) ClusterServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersTemplates) *string {
		if v == nil {
			return nil
		}
		return v.ClusterServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput) DataVolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersTemplates) *string {
		if v == nil {
			return nil
		}
		return v.DataVolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput) HostTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersTemplates) *string {
		if v == nil {
			return nil
		}
		return v.HostTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput) LogVolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersTemplates) *string {
		if v == nil {
			return nil
		}
		return v.LogVolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput) PodTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersTemplates) *string {
		if v == nil {
			return nil
		}
		return v.PodTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput) ReplicaServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersTemplates) *string {
		if v == nil {
			return nil
		}
		return v.ReplicaServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates. used for customization of the `Service` resource, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput) ServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersTemplates) *string {
		if v == nil {
			return nil
		}
		return v.ServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template names from chi.spec.templates.serviceTemplates. used for customization of the `Service` resources, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput) ServiceTemplates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersTemplates) []string {
		if v == nil {
			return nil
		}
		return v.ServiceTemplates
	}).(pulumi.StringArrayOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput) ShardServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersTemplates) *string {
		if v == nil {
			return nil
		}
		return v.ShardServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, alias for dataVolumeClaimTemplate, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput) VolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecConfigurationClustersTemplates) *string {
		if v == nil {
			return nil
		}
		return v.VolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

// define default behavior for whole ClickHouseInstallation, some behavior can be re-define on cluster, shard and replica level
// More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specdefaults
type ClickHouseKeeperInstallationSpecDefaults struct {
	// allows change `<yandex><distributed_ddl></distributed_ddl></yandex>` settings
	// More info: https://clickhouse.tech/docs/en/operations/server-configuration-parameters/settings/#server-settings-distributed_ddl
	DistributedDDL *ClickHouseKeeperInstallationSpecDefaultsDistributedDdl `pulumi:"distributedDDL"`
	// define should replicas be specified by FQDN in `<host></host>`.
	// In case of "no" will use short hostname and clickhouse-server will use kubernetes default suffixes for DNS lookup
	// "no" by default
	ReplicasUseFQDN *string `pulumi:"replicasUseFQDN"`
	// default storage management options
	StorageManagement *ClickHouseKeeperInstallationSpecDefaultsStorageManagement `pulumi:"storageManagement"`
	// optional, configuration of the templates names which will use for generate Kubernetes resources according to one or more ClickHouse clusters described in current ClickHouseInstallation (chi) resource
	Templates *ClickHouseKeeperInstallationSpecDefaultsTemplates `pulumi:"templates"`
}

// ClickHouseKeeperInstallationSpecDefaultsInput is an input type that accepts ClickHouseKeeperInstallationSpecDefaultsArgs and ClickHouseKeeperInstallationSpecDefaultsOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecDefaultsInput` via:
//
//	ClickHouseKeeperInstallationSpecDefaultsArgs{...}
type ClickHouseKeeperInstallationSpecDefaultsInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecDefaultsOutput() ClickHouseKeeperInstallationSpecDefaultsOutput
	ToClickHouseKeeperInstallationSpecDefaultsOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecDefaultsOutput
}

// define default behavior for whole ClickHouseInstallation, some behavior can be re-define on cluster, shard and replica level
// More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specdefaults
type ClickHouseKeeperInstallationSpecDefaultsArgs struct {
	// allows change `<yandex><distributed_ddl></distributed_ddl></yandex>` settings
	// More info: https://clickhouse.tech/docs/en/operations/server-configuration-parameters/settings/#server-settings-distributed_ddl
	DistributedDDL ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrInput `pulumi:"distributedDDL"`
	// define should replicas be specified by FQDN in `<host></host>`.
	// In case of "no" will use short hostname and clickhouse-server will use kubernetes default suffixes for DNS lookup
	// "no" by default
	ReplicasUseFQDN pulumi.StringPtrInput `pulumi:"replicasUseFQDN"`
	// default storage management options
	StorageManagement ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrInput `pulumi:"storageManagement"`
	// optional, configuration of the templates names which will use for generate Kubernetes resources according to one or more ClickHouse clusters described in current ClickHouseInstallation (chi) resource
	Templates ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrInput `pulumi:"templates"`
}

func (ClickHouseKeeperInstallationSpecDefaultsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecDefaults)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecDefaultsArgs) ToClickHouseKeeperInstallationSpecDefaultsOutput() ClickHouseKeeperInstallationSpecDefaultsOutput {
	return i.ToClickHouseKeeperInstallationSpecDefaultsOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecDefaultsArgs) ToClickHouseKeeperInstallationSpecDefaultsOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecDefaultsOutput)
}

func (i ClickHouseKeeperInstallationSpecDefaultsArgs) ToClickHouseKeeperInstallationSpecDefaultsPtrOutput() ClickHouseKeeperInstallationSpecDefaultsPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecDefaultsPtrOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecDefaultsArgs) ToClickHouseKeeperInstallationSpecDefaultsPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecDefaultsOutput).ToClickHouseKeeperInstallationSpecDefaultsPtrOutputWithContext(ctx)
}

// ClickHouseKeeperInstallationSpecDefaultsPtrInput is an input type that accepts ClickHouseKeeperInstallationSpecDefaultsArgs, ClickHouseKeeperInstallationSpecDefaultsPtr and ClickHouseKeeperInstallationSpecDefaultsPtrOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecDefaultsPtrInput` via:
//
//	        ClickHouseKeeperInstallationSpecDefaultsArgs{...}
//
//	or:
//
//	        nil
type ClickHouseKeeperInstallationSpecDefaultsPtrInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecDefaultsPtrOutput() ClickHouseKeeperInstallationSpecDefaultsPtrOutput
	ToClickHouseKeeperInstallationSpecDefaultsPtrOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecDefaultsPtrOutput
}

type clickHouseKeeperInstallationSpecDefaultsPtrType ClickHouseKeeperInstallationSpecDefaultsArgs

func ClickHouseKeeperInstallationSpecDefaultsPtr(v *ClickHouseKeeperInstallationSpecDefaultsArgs) ClickHouseKeeperInstallationSpecDefaultsPtrInput {
	return (*clickHouseKeeperInstallationSpecDefaultsPtrType)(v)
}

func (*clickHouseKeeperInstallationSpecDefaultsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecDefaults)(nil)).Elem()
}

func (i *clickHouseKeeperInstallationSpecDefaultsPtrType) ToClickHouseKeeperInstallationSpecDefaultsPtrOutput() ClickHouseKeeperInstallationSpecDefaultsPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecDefaultsPtrOutputWithContext(context.Background())
}

func (i *clickHouseKeeperInstallationSpecDefaultsPtrType) ToClickHouseKeeperInstallationSpecDefaultsPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecDefaultsPtrOutput)
}

// define default behavior for whole ClickHouseInstallation, some behavior can be re-define on cluster, shard and replica level
// More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specdefaults
type ClickHouseKeeperInstallationSpecDefaultsOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecDefaultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecDefaults)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecDefaultsOutput) ToClickHouseKeeperInstallationSpecDefaultsOutput() ClickHouseKeeperInstallationSpecDefaultsOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecDefaultsOutput) ToClickHouseKeeperInstallationSpecDefaultsOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecDefaultsOutput) ToClickHouseKeeperInstallationSpecDefaultsPtrOutput() ClickHouseKeeperInstallationSpecDefaultsPtrOutput {
	return o.ToClickHouseKeeperInstallationSpecDefaultsPtrOutputWithContext(context.Background())
}

func (o ClickHouseKeeperInstallationSpecDefaultsOutput) ToClickHouseKeeperInstallationSpecDefaultsPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClickHouseKeeperInstallationSpecDefaults) *ClickHouseKeeperInstallationSpecDefaults {
		return &v
	}).(ClickHouseKeeperInstallationSpecDefaultsPtrOutput)
}

// allows change `<yandex><distributed_ddl></distributed_ddl></yandex>` settings
// More info: https://clickhouse.tech/docs/en/operations/server-configuration-parameters/settings/#server-settings-distributed_ddl
func (o ClickHouseKeeperInstallationSpecDefaultsOutput) DistributedDDL() ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecDefaults) *ClickHouseKeeperInstallationSpecDefaultsDistributedDdl {
		return v.DistributedDDL
	}).(ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput)
}

// define should replicas be specified by FQDN in `<host></host>`.
// In case of "no" will use short hostname and clickhouse-server will use kubernetes default suffixes for DNS lookup
// "no" by default
func (o ClickHouseKeeperInstallationSpecDefaultsOutput) ReplicasUseFQDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecDefaults) *string { return v.ReplicasUseFQDN }).(pulumi.StringPtrOutput)
}

// default storage management options
func (o ClickHouseKeeperInstallationSpecDefaultsOutput) StorageManagement() ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecDefaults) *ClickHouseKeeperInstallationSpecDefaultsStorageManagement {
		return v.StorageManagement
	}).(ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput)
}

// optional, configuration of the templates names which will use for generate Kubernetes resources according to one or more ClickHouse clusters described in current ClickHouseInstallation (chi) resource
func (o ClickHouseKeeperInstallationSpecDefaultsOutput) Templates() ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecDefaults) *ClickHouseKeeperInstallationSpecDefaultsTemplates {
		return v.Templates
	}).(ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput)
}

type ClickHouseKeeperInstallationSpecDefaultsPtrOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecDefaultsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecDefaults)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecDefaultsPtrOutput) ToClickHouseKeeperInstallationSpecDefaultsPtrOutput() ClickHouseKeeperInstallationSpecDefaultsPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecDefaultsPtrOutput) ToClickHouseKeeperInstallationSpecDefaultsPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecDefaultsPtrOutput) Elem() ClickHouseKeeperInstallationSpecDefaultsOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecDefaults) ClickHouseKeeperInstallationSpecDefaults {
		if v != nil {
			return *v
		}
		var ret ClickHouseKeeperInstallationSpecDefaults
		return ret
	}).(ClickHouseKeeperInstallationSpecDefaultsOutput)
}

// allows change `<yandex><distributed_ddl></distributed_ddl></yandex>` settings
// More info: https://clickhouse.tech/docs/en/operations/server-configuration-parameters/settings/#server-settings-distributed_ddl
func (o ClickHouseKeeperInstallationSpecDefaultsPtrOutput) DistributedDDL() ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecDefaults) *ClickHouseKeeperInstallationSpecDefaultsDistributedDdl {
		if v == nil {
			return nil
		}
		return v.DistributedDDL
	}).(ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput)
}

// define should replicas be specified by FQDN in `<host></host>`.
// In case of "no" will use short hostname and clickhouse-server will use kubernetes default suffixes for DNS lookup
// "no" by default
func (o ClickHouseKeeperInstallationSpecDefaultsPtrOutput) ReplicasUseFQDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecDefaults) *string {
		if v == nil {
			return nil
		}
		return v.ReplicasUseFQDN
	}).(pulumi.StringPtrOutput)
}

// default storage management options
func (o ClickHouseKeeperInstallationSpecDefaultsPtrOutput) StorageManagement() ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecDefaults) *ClickHouseKeeperInstallationSpecDefaultsStorageManagement {
		if v == nil {
			return nil
		}
		return v.StorageManagement
	}).(ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput)
}

// optional, configuration of the templates names which will use for generate Kubernetes resources according to one or more ClickHouse clusters described in current ClickHouseInstallation (chi) resource
func (o ClickHouseKeeperInstallationSpecDefaultsPtrOutput) Templates() ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecDefaults) *ClickHouseKeeperInstallationSpecDefaultsTemplates {
		if v == nil {
			return nil
		}
		return v.Templates
	}).(ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput)
}

// allows change `<yandex><distributed_ddl></distributed_ddl></yandex>` settings
// More info: https://clickhouse.tech/docs/en/operations/server-configuration-parameters/settings/#server-settings-distributed_ddl
type ClickHouseKeeperInstallationSpecDefaultsDistributedDdl struct {
	// Settings from this profile will be used to execute DDL queries
	Profile *string `pulumi:"profile"`
}

// ClickHouseKeeperInstallationSpecDefaultsDistributedDdlInput is an input type that accepts ClickHouseKeeperInstallationSpecDefaultsDistributedDdlArgs and ClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecDefaultsDistributedDdlInput` via:
//
//	ClickHouseKeeperInstallationSpecDefaultsDistributedDdlArgs{...}
type ClickHouseKeeperInstallationSpecDefaultsDistributedDdlInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutput() ClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutput
	ToClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutput
}

// allows change `<yandex><distributed_ddl></distributed_ddl></yandex>` settings
// More info: https://clickhouse.tech/docs/en/operations/server-configuration-parameters/settings/#server-settings-distributed_ddl
type ClickHouseKeeperInstallationSpecDefaultsDistributedDdlArgs struct {
	// Settings from this profile will be used to execute DDL queries
	Profile pulumi.StringPtrInput `pulumi:"profile"`
}

func (ClickHouseKeeperInstallationSpecDefaultsDistributedDdlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecDefaultsDistributedDdl)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecDefaultsDistributedDdlArgs) ToClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutput() ClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutput {
	return i.ToClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecDefaultsDistributedDdlArgs) ToClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutput)
}

func (i ClickHouseKeeperInstallationSpecDefaultsDistributedDdlArgs) ToClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput() ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecDefaultsDistributedDdlArgs) ToClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutput).ToClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutputWithContext(ctx)
}

// ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrInput is an input type that accepts ClickHouseKeeperInstallationSpecDefaultsDistributedDdlArgs, ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtr and ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrInput` via:
//
//	        ClickHouseKeeperInstallationSpecDefaultsDistributedDdlArgs{...}
//
//	or:
//
//	        nil
type ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput() ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput
	ToClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput
}

type clickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrType ClickHouseKeeperInstallationSpecDefaultsDistributedDdlArgs

func ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtr(v *ClickHouseKeeperInstallationSpecDefaultsDistributedDdlArgs) ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrInput {
	return (*clickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrType)(v)
}

func (*clickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecDefaultsDistributedDdl)(nil)).Elem()
}

func (i *clickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrType) ToClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput() ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutputWithContext(context.Background())
}

func (i *clickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrType) ToClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput)
}

// allows change `<yandex><distributed_ddl></distributed_ddl></yandex>` settings
// More info: https://clickhouse.tech/docs/en/operations/server-configuration-parameters/settings/#server-settings-distributed_ddl
type ClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecDefaultsDistributedDdl)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutput) ToClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutput() ClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutput) ToClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutput) ToClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput() ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput {
	return o.ToClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutputWithContext(context.Background())
}

func (o ClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutput) ToClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClickHouseKeeperInstallationSpecDefaultsDistributedDdl) *ClickHouseKeeperInstallationSpecDefaultsDistributedDdl {
		return &v
	}).(ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput)
}

// Settings from this profile will be used to execute DDL queries
func (o ClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecDefaultsDistributedDdl) *string { return v.Profile }).(pulumi.StringPtrOutput)
}

type ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecDefaultsDistributedDdl)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput) ToClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput() ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput) ToClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput) Elem() ClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecDefaultsDistributedDdl) ClickHouseKeeperInstallationSpecDefaultsDistributedDdl {
		if v != nil {
			return *v
		}
		var ret ClickHouseKeeperInstallationSpecDefaultsDistributedDdl
		return ret
	}).(ClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutput)
}

// Settings from this profile will be used to execute DDL queries
func (o ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecDefaultsDistributedDdl) *string {
		if v == nil {
			return nil
		}
		return v.Profile
	}).(pulumi.StringPtrOutput)
}

// default storage management options
type ClickHouseKeeperInstallationSpecDefaultsStorageManagement struct {
	// defines `PVC` provisioner - be it StatefulSet or the Operator
	Provisioner *string `pulumi:"provisioner"`
	// defines behavior of `PVC` deletion.
	// `Delete` by default, if `Retain` specified then `PVC` will be kept when deleting StatefulSet
	ReclaimPolicy *string `pulumi:"reclaimPolicy"`
}

// ClickHouseKeeperInstallationSpecDefaultsStorageManagementInput is an input type that accepts ClickHouseKeeperInstallationSpecDefaultsStorageManagementArgs and ClickHouseKeeperInstallationSpecDefaultsStorageManagementOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecDefaultsStorageManagementInput` via:
//
//	ClickHouseKeeperInstallationSpecDefaultsStorageManagementArgs{...}
type ClickHouseKeeperInstallationSpecDefaultsStorageManagementInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecDefaultsStorageManagementOutput() ClickHouseKeeperInstallationSpecDefaultsStorageManagementOutput
	ToClickHouseKeeperInstallationSpecDefaultsStorageManagementOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecDefaultsStorageManagementOutput
}

// default storage management options
type ClickHouseKeeperInstallationSpecDefaultsStorageManagementArgs struct {
	// defines `PVC` provisioner - be it StatefulSet or the Operator
	Provisioner pulumi.StringPtrInput `pulumi:"provisioner"`
	// defines behavior of `PVC` deletion.
	// `Delete` by default, if `Retain` specified then `PVC` will be kept when deleting StatefulSet
	ReclaimPolicy pulumi.StringPtrInput `pulumi:"reclaimPolicy"`
}

func (ClickHouseKeeperInstallationSpecDefaultsStorageManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecDefaultsStorageManagement)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecDefaultsStorageManagementArgs) ToClickHouseKeeperInstallationSpecDefaultsStorageManagementOutput() ClickHouseKeeperInstallationSpecDefaultsStorageManagementOutput {
	return i.ToClickHouseKeeperInstallationSpecDefaultsStorageManagementOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecDefaultsStorageManagementArgs) ToClickHouseKeeperInstallationSpecDefaultsStorageManagementOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsStorageManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecDefaultsStorageManagementOutput)
}

func (i ClickHouseKeeperInstallationSpecDefaultsStorageManagementArgs) ToClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput() ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecDefaultsStorageManagementArgs) ToClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecDefaultsStorageManagementOutput).ToClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutputWithContext(ctx)
}

// ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrInput is an input type that accepts ClickHouseKeeperInstallationSpecDefaultsStorageManagementArgs, ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtr and ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrInput` via:
//
//	        ClickHouseKeeperInstallationSpecDefaultsStorageManagementArgs{...}
//
//	or:
//
//	        nil
type ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput() ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput
	ToClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput
}

type clickHouseKeeperInstallationSpecDefaultsStorageManagementPtrType ClickHouseKeeperInstallationSpecDefaultsStorageManagementArgs

func ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtr(v *ClickHouseKeeperInstallationSpecDefaultsStorageManagementArgs) ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrInput {
	return (*clickHouseKeeperInstallationSpecDefaultsStorageManagementPtrType)(v)
}

func (*clickHouseKeeperInstallationSpecDefaultsStorageManagementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecDefaultsStorageManagement)(nil)).Elem()
}

func (i *clickHouseKeeperInstallationSpecDefaultsStorageManagementPtrType) ToClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput() ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutputWithContext(context.Background())
}

func (i *clickHouseKeeperInstallationSpecDefaultsStorageManagementPtrType) ToClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput)
}

// default storage management options
type ClickHouseKeeperInstallationSpecDefaultsStorageManagementOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecDefaultsStorageManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecDefaultsStorageManagement)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecDefaultsStorageManagementOutput) ToClickHouseKeeperInstallationSpecDefaultsStorageManagementOutput() ClickHouseKeeperInstallationSpecDefaultsStorageManagementOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecDefaultsStorageManagementOutput) ToClickHouseKeeperInstallationSpecDefaultsStorageManagementOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsStorageManagementOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecDefaultsStorageManagementOutput) ToClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput() ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput {
	return o.ToClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutputWithContext(context.Background())
}

func (o ClickHouseKeeperInstallationSpecDefaultsStorageManagementOutput) ToClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClickHouseKeeperInstallationSpecDefaultsStorageManagement) *ClickHouseKeeperInstallationSpecDefaultsStorageManagement {
		return &v
	}).(ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput)
}

// defines `PVC` provisioner - be it StatefulSet or the Operator
func (o ClickHouseKeeperInstallationSpecDefaultsStorageManagementOutput) Provisioner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecDefaultsStorageManagement) *string { return v.Provisioner }).(pulumi.StringPtrOutput)
}

// defines behavior of `PVC` deletion.
// `Delete` by default, if `Retain` specified then `PVC` will be kept when deleting StatefulSet
func (o ClickHouseKeeperInstallationSpecDefaultsStorageManagementOutput) ReclaimPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecDefaultsStorageManagement) *string { return v.ReclaimPolicy }).(pulumi.StringPtrOutput)
}

type ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecDefaultsStorageManagement)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput) ToClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput() ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput) ToClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput) Elem() ClickHouseKeeperInstallationSpecDefaultsStorageManagementOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecDefaultsStorageManagement) ClickHouseKeeperInstallationSpecDefaultsStorageManagement {
		if v != nil {
			return *v
		}
		var ret ClickHouseKeeperInstallationSpecDefaultsStorageManagement
		return ret
	}).(ClickHouseKeeperInstallationSpecDefaultsStorageManagementOutput)
}

// defines `PVC` provisioner - be it StatefulSet or the Operator
func (o ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput) Provisioner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecDefaultsStorageManagement) *string {
		if v == nil {
			return nil
		}
		return v.Provisioner
	}).(pulumi.StringPtrOutput)
}

// defines behavior of `PVC` deletion.
// `Delete` by default, if `Retain` specified then `PVC` will be kept when deleting StatefulSet
func (o ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput) ReclaimPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecDefaultsStorageManagement) *string {
		if v == nil {
			return nil
		}
		return v.ReclaimPolicy
	}).(pulumi.StringPtrOutput)
}

// optional, configuration of the templates names which will use for generate Kubernetes resources according to one or more ClickHouse clusters described in current ClickHouseInstallation (chi) resource
type ClickHouseKeeperInstallationSpecDefaultsTemplates struct {
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
	ClusterServiceTemplate *string `pulumi:"clusterServiceTemplate"`
	// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	DataVolumeClaimTemplate *string `pulumi:"dataVolumeClaimTemplate"`
	// optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
	HostTemplate *string `pulumi:"hostTemplate"`
	// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	LogVolumeClaimTemplate *string `pulumi:"logVolumeClaimTemplate"`
	// optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	PodTemplate *string `pulumi:"podTemplate"`
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
	ReplicaServiceTemplate *string `pulumi:"replicaServiceTemplate"`
	// optional, template name from chi.spec.templates.serviceTemplates. used for customization of the `Service` resource, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
	ServiceTemplate *string `pulumi:"serviceTemplate"`
	// optional, template names from chi.spec.templates.serviceTemplates. used for customization of the `Service` resources, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
	ServiceTemplates []string `pulumi:"serviceTemplates"`
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
	ShardServiceTemplate *string `pulumi:"shardServiceTemplate"`
	// optional, alias for dataVolumeClaimTemplate, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	VolumeClaimTemplate *string `pulumi:"volumeClaimTemplate"`
}

// ClickHouseKeeperInstallationSpecDefaultsTemplatesInput is an input type that accepts ClickHouseKeeperInstallationSpecDefaultsTemplatesArgs and ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecDefaultsTemplatesInput` via:
//
//	ClickHouseKeeperInstallationSpecDefaultsTemplatesArgs{...}
type ClickHouseKeeperInstallationSpecDefaultsTemplatesInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecDefaultsTemplatesOutput() ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput
	ToClickHouseKeeperInstallationSpecDefaultsTemplatesOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput
}

// optional, configuration of the templates names which will use for generate Kubernetes resources according to one or more ClickHouse clusters described in current ClickHouseInstallation (chi) resource
type ClickHouseKeeperInstallationSpecDefaultsTemplatesArgs struct {
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
	ClusterServiceTemplate pulumi.StringPtrInput `pulumi:"clusterServiceTemplate"`
	// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	DataVolumeClaimTemplate pulumi.StringPtrInput `pulumi:"dataVolumeClaimTemplate"`
	// optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
	HostTemplate pulumi.StringPtrInput `pulumi:"hostTemplate"`
	// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	LogVolumeClaimTemplate pulumi.StringPtrInput `pulumi:"logVolumeClaimTemplate"`
	// optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	PodTemplate pulumi.StringPtrInput `pulumi:"podTemplate"`
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
	ReplicaServiceTemplate pulumi.StringPtrInput `pulumi:"replicaServiceTemplate"`
	// optional, template name from chi.spec.templates.serviceTemplates. used for customization of the `Service` resource, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
	ServiceTemplate pulumi.StringPtrInput `pulumi:"serviceTemplate"`
	// optional, template names from chi.spec.templates.serviceTemplates. used for customization of the `Service` resources, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
	ServiceTemplates pulumi.StringArrayInput `pulumi:"serviceTemplates"`
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
	ShardServiceTemplate pulumi.StringPtrInput `pulumi:"shardServiceTemplate"`
	// optional, alias for dataVolumeClaimTemplate, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	VolumeClaimTemplate pulumi.StringPtrInput `pulumi:"volumeClaimTemplate"`
}

func (ClickHouseKeeperInstallationSpecDefaultsTemplatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecDefaultsTemplates)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecDefaultsTemplatesArgs) ToClickHouseKeeperInstallationSpecDefaultsTemplatesOutput() ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput {
	return i.ToClickHouseKeeperInstallationSpecDefaultsTemplatesOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecDefaultsTemplatesArgs) ToClickHouseKeeperInstallationSpecDefaultsTemplatesOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput)
}

func (i ClickHouseKeeperInstallationSpecDefaultsTemplatesArgs) ToClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput() ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecDefaultsTemplatesArgs) ToClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput).ToClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutputWithContext(ctx)
}

// ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrInput is an input type that accepts ClickHouseKeeperInstallationSpecDefaultsTemplatesArgs, ClickHouseKeeperInstallationSpecDefaultsTemplatesPtr and ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrInput` via:
//
//	        ClickHouseKeeperInstallationSpecDefaultsTemplatesArgs{...}
//
//	or:
//
//	        nil
type ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput() ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput
	ToClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput
}

type clickHouseKeeperInstallationSpecDefaultsTemplatesPtrType ClickHouseKeeperInstallationSpecDefaultsTemplatesArgs

func ClickHouseKeeperInstallationSpecDefaultsTemplatesPtr(v *ClickHouseKeeperInstallationSpecDefaultsTemplatesArgs) ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrInput {
	return (*clickHouseKeeperInstallationSpecDefaultsTemplatesPtrType)(v)
}

func (*clickHouseKeeperInstallationSpecDefaultsTemplatesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecDefaultsTemplates)(nil)).Elem()
}

func (i *clickHouseKeeperInstallationSpecDefaultsTemplatesPtrType) ToClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput() ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutputWithContext(context.Background())
}

func (i *clickHouseKeeperInstallationSpecDefaultsTemplatesPtrType) ToClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput)
}

// optional, configuration of the templates names which will use for generate Kubernetes resources according to one or more ClickHouse clusters described in current ClickHouseInstallation (chi) resource
type ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecDefaultsTemplates)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput) ToClickHouseKeeperInstallationSpecDefaultsTemplatesOutput() ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput) ToClickHouseKeeperInstallationSpecDefaultsTemplatesOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput) ToClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput() ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput {
	return o.ToClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutputWithContext(context.Background())
}

func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput) ToClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClickHouseKeeperInstallationSpecDefaultsTemplates) *ClickHouseKeeperInstallationSpecDefaultsTemplates {
		return &v
	}).(ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput) ClusterServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecDefaultsTemplates) *string { return v.ClusterServiceTemplate }).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput) DataVolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecDefaultsTemplates) *string { return v.DataVolumeClaimTemplate }).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput) HostTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecDefaultsTemplates) *string { return v.HostTemplate }).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput) LogVolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecDefaultsTemplates) *string { return v.LogVolumeClaimTemplate }).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput) PodTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecDefaultsTemplates) *string { return v.PodTemplate }).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput) ReplicaServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecDefaultsTemplates) *string { return v.ReplicaServiceTemplate }).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates. used for customization of the `Service` resource, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput) ServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecDefaultsTemplates) *string { return v.ServiceTemplate }).(pulumi.StringPtrOutput)
}

// optional, template names from chi.spec.templates.serviceTemplates. used for customization of the `Service` resources, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput) ServiceTemplates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecDefaultsTemplates) []string { return v.ServiceTemplates }).(pulumi.StringArrayOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput) ShardServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecDefaultsTemplates) *string { return v.ShardServiceTemplate }).(pulumi.StringPtrOutput)
}

// optional, alias for dataVolumeClaimTemplate, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput) VolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecDefaultsTemplates) *string { return v.VolumeClaimTemplate }).(pulumi.StringPtrOutput)
}

type ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecDefaultsTemplates)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput) ToClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput() ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput) ToClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput) Elem() ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecDefaultsTemplates) ClickHouseKeeperInstallationSpecDefaultsTemplates {
		if v != nil {
			return *v
		}
		var ret ClickHouseKeeperInstallationSpecDefaultsTemplates
		return ret
	}).(ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput) ClusterServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecDefaultsTemplates) *string {
		if v == nil {
			return nil
		}
		return v.ClusterServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput) DataVolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecDefaultsTemplates) *string {
		if v == nil {
			return nil
		}
		return v.DataVolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput) HostTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecDefaultsTemplates) *string {
		if v == nil {
			return nil
		}
		return v.HostTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput) LogVolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecDefaultsTemplates) *string {
		if v == nil {
			return nil
		}
		return v.LogVolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput) PodTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecDefaultsTemplates) *string {
		if v == nil {
			return nil
		}
		return v.PodTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput) ReplicaServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecDefaultsTemplates) *string {
		if v == nil {
			return nil
		}
		return v.ReplicaServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates. used for customization of the `Service` resource, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput) ServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecDefaultsTemplates) *string {
		if v == nil {
			return nil
		}
		return v.ServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template names from chi.spec.templates.serviceTemplates. used for customization of the `Service` resources, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput) ServiceTemplates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecDefaultsTemplates) []string {
		if v == nil {
			return nil
		}
		return v.ServiceTemplates
	}).(pulumi.StringArrayOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput) ShardServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecDefaultsTemplates) *string {
		if v == nil {
			return nil
		}
		return v.ShardServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, alias for dataVolumeClaimTemplate, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput) VolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecDefaultsTemplates) *string {
		if v == nil {
			return nil
		}
		return v.VolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

// Optional, allows tuning reconciling cycle for ClickhouseInstallation from clickhouse-operator side
type ClickHouseKeeperInstallationSpecReconciling struct {
	// Optional, defines behavior for cleanup Kubernetes resources during reconcile cycle
	Cleanup *ClickHouseKeeperInstallationSpecReconcilingCleanup `pulumi:"cleanup"`
	// Timeout in seconds for `clickhouse-operator` to wait for modified `ConfigMap` to propagate into the `Pod`
	// More details: https://kubernetes.io/docs/concepts/configuration/configmap/#mounted-configmaps-are-updated-automatically
	ConfigMapPropagationTimeout *int `pulumi:"configMapPropagationTimeout"`
	// DISCUSSED TO BE DEPRECATED
	// Syntax sugar
	// Overrides all three 'reconcile.host.wait.{exclude, queries, include}' values from the operator's config
	// Possible values:
	//  - wait - should wait to exclude host, complete queries and include host back into the cluster
	//  - nowait - should NOT wait to exclude host, complete queries and include host back into the cluster
	Policy *string `pulumi:"policy"`
}

// ClickHouseKeeperInstallationSpecReconcilingInput is an input type that accepts ClickHouseKeeperInstallationSpecReconcilingArgs and ClickHouseKeeperInstallationSpecReconcilingOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecReconcilingInput` via:
//
//	ClickHouseKeeperInstallationSpecReconcilingArgs{...}
type ClickHouseKeeperInstallationSpecReconcilingInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecReconcilingOutput() ClickHouseKeeperInstallationSpecReconcilingOutput
	ToClickHouseKeeperInstallationSpecReconcilingOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecReconcilingOutput
}

// Optional, allows tuning reconciling cycle for ClickhouseInstallation from clickhouse-operator side
type ClickHouseKeeperInstallationSpecReconcilingArgs struct {
	// Optional, defines behavior for cleanup Kubernetes resources during reconcile cycle
	Cleanup ClickHouseKeeperInstallationSpecReconcilingCleanupPtrInput `pulumi:"cleanup"`
	// Timeout in seconds for `clickhouse-operator` to wait for modified `ConfigMap` to propagate into the `Pod`
	// More details: https://kubernetes.io/docs/concepts/configuration/configmap/#mounted-configmaps-are-updated-automatically
	ConfigMapPropagationTimeout pulumi.IntPtrInput `pulumi:"configMapPropagationTimeout"`
	// DISCUSSED TO BE DEPRECATED
	// Syntax sugar
	// Overrides all three 'reconcile.host.wait.{exclude, queries, include}' values from the operator's config
	// Possible values:
	//  - wait - should wait to exclude host, complete queries and include host back into the cluster
	//  - nowait - should NOT wait to exclude host, complete queries and include host back into the cluster
	Policy pulumi.StringPtrInput `pulumi:"policy"`
}

func (ClickHouseKeeperInstallationSpecReconcilingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecReconciling)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecReconcilingArgs) ToClickHouseKeeperInstallationSpecReconcilingOutput() ClickHouseKeeperInstallationSpecReconcilingOutput {
	return i.ToClickHouseKeeperInstallationSpecReconcilingOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecReconcilingArgs) ToClickHouseKeeperInstallationSpecReconcilingOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecReconcilingOutput)
}

func (i ClickHouseKeeperInstallationSpecReconcilingArgs) ToClickHouseKeeperInstallationSpecReconcilingPtrOutput() ClickHouseKeeperInstallationSpecReconcilingPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecReconcilingPtrOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecReconcilingArgs) ToClickHouseKeeperInstallationSpecReconcilingPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecReconcilingOutput).ToClickHouseKeeperInstallationSpecReconcilingPtrOutputWithContext(ctx)
}

// ClickHouseKeeperInstallationSpecReconcilingPtrInput is an input type that accepts ClickHouseKeeperInstallationSpecReconcilingArgs, ClickHouseKeeperInstallationSpecReconcilingPtr and ClickHouseKeeperInstallationSpecReconcilingPtrOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecReconcilingPtrInput` via:
//
//	        ClickHouseKeeperInstallationSpecReconcilingArgs{...}
//
//	or:
//
//	        nil
type ClickHouseKeeperInstallationSpecReconcilingPtrInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecReconcilingPtrOutput() ClickHouseKeeperInstallationSpecReconcilingPtrOutput
	ToClickHouseKeeperInstallationSpecReconcilingPtrOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecReconcilingPtrOutput
}

type clickHouseKeeperInstallationSpecReconcilingPtrType ClickHouseKeeperInstallationSpecReconcilingArgs

func ClickHouseKeeperInstallationSpecReconcilingPtr(v *ClickHouseKeeperInstallationSpecReconcilingArgs) ClickHouseKeeperInstallationSpecReconcilingPtrInput {
	return (*clickHouseKeeperInstallationSpecReconcilingPtrType)(v)
}

func (*clickHouseKeeperInstallationSpecReconcilingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecReconciling)(nil)).Elem()
}

func (i *clickHouseKeeperInstallationSpecReconcilingPtrType) ToClickHouseKeeperInstallationSpecReconcilingPtrOutput() ClickHouseKeeperInstallationSpecReconcilingPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecReconcilingPtrOutputWithContext(context.Background())
}

func (i *clickHouseKeeperInstallationSpecReconcilingPtrType) ToClickHouseKeeperInstallationSpecReconcilingPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecReconcilingPtrOutput)
}

// Optional, allows tuning reconciling cycle for ClickhouseInstallation from clickhouse-operator side
type ClickHouseKeeperInstallationSpecReconcilingOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecReconcilingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecReconciling)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecReconcilingOutput) ToClickHouseKeeperInstallationSpecReconcilingOutput() ClickHouseKeeperInstallationSpecReconcilingOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecReconcilingOutput) ToClickHouseKeeperInstallationSpecReconcilingOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecReconcilingOutput) ToClickHouseKeeperInstallationSpecReconcilingPtrOutput() ClickHouseKeeperInstallationSpecReconcilingPtrOutput {
	return o.ToClickHouseKeeperInstallationSpecReconcilingPtrOutputWithContext(context.Background())
}

func (o ClickHouseKeeperInstallationSpecReconcilingOutput) ToClickHouseKeeperInstallationSpecReconcilingPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClickHouseKeeperInstallationSpecReconciling) *ClickHouseKeeperInstallationSpecReconciling {
		return &v
	}).(ClickHouseKeeperInstallationSpecReconcilingPtrOutput)
}

// Optional, defines behavior for cleanup Kubernetes resources during reconcile cycle
func (o ClickHouseKeeperInstallationSpecReconcilingOutput) Cleanup() ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecReconciling) *ClickHouseKeeperInstallationSpecReconcilingCleanup {
		return v.Cleanup
	}).(ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput)
}

// Timeout in seconds for `clickhouse-operator` to wait for modified `ConfigMap` to propagate into the `Pod`
// More details: https://kubernetes.io/docs/concepts/configuration/configmap/#mounted-configmaps-are-updated-automatically
func (o ClickHouseKeeperInstallationSpecReconcilingOutput) ConfigMapPropagationTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecReconciling) *int { return v.ConfigMapPropagationTimeout }).(pulumi.IntPtrOutput)
}

// DISCUSSED TO BE DEPRECATED
// Syntax sugar
// Overrides all three 'reconcile.host.wait.{exclude, queries, include}' values from the operator's config
// Possible values:
//   - wait - should wait to exclude host, complete queries and include host back into the cluster
//   - nowait - should NOT wait to exclude host, complete queries and include host back into the cluster
func (o ClickHouseKeeperInstallationSpecReconcilingOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecReconciling) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

type ClickHouseKeeperInstallationSpecReconcilingPtrOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecReconcilingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecReconciling)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecReconcilingPtrOutput) ToClickHouseKeeperInstallationSpecReconcilingPtrOutput() ClickHouseKeeperInstallationSpecReconcilingPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecReconcilingPtrOutput) ToClickHouseKeeperInstallationSpecReconcilingPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecReconcilingPtrOutput) Elem() ClickHouseKeeperInstallationSpecReconcilingOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecReconciling) ClickHouseKeeperInstallationSpecReconciling {
		if v != nil {
			return *v
		}
		var ret ClickHouseKeeperInstallationSpecReconciling
		return ret
	}).(ClickHouseKeeperInstallationSpecReconcilingOutput)
}

// Optional, defines behavior for cleanup Kubernetes resources during reconcile cycle
func (o ClickHouseKeeperInstallationSpecReconcilingPtrOutput) Cleanup() ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecReconciling) *ClickHouseKeeperInstallationSpecReconcilingCleanup {
		if v == nil {
			return nil
		}
		return v.Cleanup
	}).(ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput)
}

// Timeout in seconds for `clickhouse-operator` to wait for modified `ConfigMap` to propagate into the `Pod`
// More details: https://kubernetes.io/docs/concepts/configuration/configmap/#mounted-configmaps-are-updated-automatically
func (o ClickHouseKeeperInstallationSpecReconcilingPtrOutput) ConfigMapPropagationTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecReconciling) *int {
		if v == nil {
			return nil
		}
		return v.ConfigMapPropagationTimeout
	}).(pulumi.IntPtrOutput)
}

// DISCUSSED TO BE DEPRECATED
// Syntax sugar
// Overrides all three 'reconcile.host.wait.{exclude, queries, include}' values from the operator's config
// Possible values:
//   - wait - should wait to exclude host, complete queries and include host back into the cluster
//   - nowait - should NOT wait to exclude host, complete queries and include host back into the cluster
func (o ClickHouseKeeperInstallationSpecReconcilingPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecReconciling) *string {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(pulumi.StringPtrOutput)
}

// Optional, defines behavior for cleanup Kubernetes resources during reconcile cycle
type ClickHouseKeeperInstallationSpecReconcilingCleanup struct {
	// Describes what clickhouse-operator should do with Kubernetes resources which are failed during reconcile.
	// Default behavior is `Retain`"
	ReconcileFailedObjects *ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjects `pulumi:"reconcileFailedObjects"`
	// Describes what clickhouse-operator should do with found Kubernetes resources which should be managed by clickhouse-operator,
	// but do not have `ownerReference` to any currently managed `ClickHouseInstallation` resource.
	// Default behavior is `Delete`"
	UnknownObjects *ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjects `pulumi:"unknownObjects"`
}

// ClickHouseKeeperInstallationSpecReconcilingCleanupInput is an input type that accepts ClickHouseKeeperInstallationSpecReconcilingCleanupArgs and ClickHouseKeeperInstallationSpecReconcilingCleanupOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecReconcilingCleanupInput` via:
//
//	ClickHouseKeeperInstallationSpecReconcilingCleanupArgs{...}
type ClickHouseKeeperInstallationSpecReconcilingCleanupInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecReconcilingCleanupOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupOutput
	ToClickHouseKeeperInstallationSpecReconcilingCleanupOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupOutput
}

// Optional, defines behavior for cleanup Kubernetes resources during reconcile cycle
type ClickHouseKeeperInstallationSpecReconcilingCleanupArgs struct {
	// Describes what clickhouse-operator should do with Kubernetes resources which are failed during reconcile.
	// Default behavior is `Retain`"
	ReconcileFailedObjects ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrInput `pulumi:"reconcileFailedObjects"`
	// Describes what clickhouse-operator should do with found Kubernetes resources which should be managed by clickhouse-operator,
	// but do not have `ownerReference` to any currently managed `ClickHouseInstallation` resource.
	// Default behavior is `Delete`"
	UnknownObjects ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrInput `pulumi:"unknownObjects"`
}

func (ClickHouseKeeperInstallationSpecReconcilingCleanupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecReconcilingCleanup)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecReconcilingCleanupArgs) ToClickHouseKeeperInstallationSpecReconcilingCleanupOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupOutput {
	return i.ToClickHouseKeeperInstallationSpecReconcilingCleanupOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecReconcilingCleanupArgs) ToClickHouseKeeperInstallationSpecReconcilingCleanupOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecReconcilingCleanupOutput)
}

func (i ClickHouseKeeperInstallationSpecReconcilingCleanupArgs) ToClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecReconcilingCleanupArgs) ToClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecReconcilingCleanupOutput).ToClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutputWithContext(ctx)
}

// ClickHouseKeeperInstallationSpecReconcilingCleanupPtrInput is an input type that accepts ClickHouseKeeperInstallationSpecReconcilingCleanupArgs, ClickHouseKeeperInstallationSpecReconcilingCleanupPtr and ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecReconcilingCleanupPtrInput` via:
//
//	        ClickHouseKeeperInstallationSpecReconcilingCleanupArgs{...}
//
//	or:
//
//	        nil
type ClickHouseKeeperInstallationSpecReconcilingCleanupPtrInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput
	ToClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput
}

type clickHouseKeeperInstallationSpecReconcilingCleanupPtrType ClickHouseKeeperInstallationSpecReconcilingCleanupArgs

func ClickHouseKeeperInstallationSpecReconcilingCleanupPtr(v *ClickHouseKeeperInstallationSpecReconcilingCleanupArgs) ClickHouseKeeperInstallationSpecReconcilingCleanupPtrInput {
	return (*clickHouseKeeperInstallationSpecReconcilingCleanupPtrType)(v)
}

func (*clickHouseKeeperInstallationSpecReconcilingCleanupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecReconcilingCleanup)(nil)).Elem()
}

func (i *clickHouseKeeperInstallationSpecReconcilingCleanupPtrType) ToClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutputWithContext(context.Background())
}

func (i *clickHouseKeeperInstallationSpecReconcilingCleanupPtrType) ToClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput)
}

// Optional, defines behavior for cleanup Kubernetes resources during reconcile cycle
type ClickHouseKeeperInstallationSpecReconcilingCleanupOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecReconcilingCleanupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecReconcilingCleanup)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecReconcilingCleanupOutput) ToClickHouseKeeperInstallationSpecReconcilingCleanupOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecReconcilingCleanupOutput) ToClickHouseKeeperInstallationSpecReconcilingCleanupOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecReconcilingCleanupOutput) ToClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput {
	return o.ToClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutputWithContext(context.Background())
}

func (o ClickHouseKeeperInstallationSpecReconcilingCleanupOutput) ToClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClickHouseKeeperInstallationSpecReconcilingCleanup) *ClickHouseKeeperInstallationSpecReconcilingCleanup {
		return &v
	}).(ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput)
}

// Describes what clickhouse-operator should do with Kubernetes resources which are failed during reconcile.
// Default behavior is `Retain`"
func (o ClickHouseKeeperInstallationSpecReconcilingCleanupOutput) ReconcileFailedObjects() ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecReconcilingCleanup) *ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjects {
		return v.ReconcileFailedObjects
	}).(ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput)
}

// Describes what clickhouse-operator should do with found Kubernetes resources which should be managed by clickhouse-operator,
// but do not have `ownerReference` to any currently managed `ClickHouseInstallation` resource.
// Default behavior is `Delete`"
func (o ClickHouseKeeperInstallationSpecReconcilingCleanupOutput) UnknownObjects() ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecReconcilingCleanup) *ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjects {
		return v.UnknownObjects
	}).(ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput)
}

type ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecReconcilingCleanup)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput) ToClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput) ToClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput) Elem() ClickHouseKeeperInstallationSpecReconcilingCleanupOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecReconcilingCleanup) ClickHouseKeeperInstallationSpecReconcilingCleanup {
		if v != nil {
			return *v
		}
		var ret ClickHouseKeeperInstallationSpecReconcilingCleanup
		return ret
	}).(ClickHouseKeeperInstallationSpecReconcilingCleanupOutput)
}

// Describes what clickhouse-operator should do with Kubernetes resources which are failed during reconcile.
// Default behavior is `Retain`"
func (o ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput) ReconcileFailedObjects() ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecReconcilingCleanup) *ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjects {
		if v == nil {
			return nil
		}
		return v.ReconcileFailedObjects
	}).(ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput)
}

// Describes what clickhouse-operator should do with found Kubernetes resources which should be managed by clickhouse-operator,
// but do not have `ownerReference` to any currently managed `ClickHouseInstallation` resource.
// Default behavior is `Delete`"
func (o ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput) UnknownObjects() ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecReconcilingCleanup) *ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjects {
		if v == nil {
			return nil
		}
		return v.UnknownObjects
	}).(ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput)
}

// Describes what clickhouse-operator should do with Kubernetes resources which are failed during reconcile.
// Default behavior is `Retain`"
type ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjects struct {
	// Behavior policy for failed ConfigMap, `Retain` by default
	ConfigMap *string `pulumi:"configMap"`
	// Behavior policy for failed PVC, `Retain` by default
	Pvc *string `pulumi:"pvc"`
	// Behavior policy for failed Service, `Retain` by default
	Service *string `pulumi:"service"`
	// Behavior policy for failed StatefulSet, `Retain` by default
	StatefulSet *string `pulumi:"statefulSet"`
}

// ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsInput is an input type that accepts ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsArgs and ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsInput` via:
//
//	ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsArgs{...}
type ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput
	ToClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput
}

// Describes what clickhouse-operator should do with Kubernetes resources which are failed during reconcile.
// Default behavior is `Retain`"
type ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsArgs struct {
	// Behavior policy for failed ConfigMap, `Retain` by default
	ConfigMap pulumi.StringPtrInput `pulumi:"configMap"`
	// Behavior policy for failed PVC, `Retain` by default
	Pvc pulumi.StringPtrInput `pulumi:"pvc"`
	// Behavior policy for failed Service, `Retain` by default
	Service pulumi.StringPtrInput `pulumi:"service"`
	// Behavior policy for failed StatefulSet, `Retain` by default
	StatefulSet pulumi.StringPtrInput `pulumi:"statefulSet"`
}

func (ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjects)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsArgs) ToClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput {
	return i.ToClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsArgs) ToClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput)
}

func (i ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsArgs) ToClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsArgs) ToClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput).ToClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutputWithContext(ctx)
}

// ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrInput is an input type that accepts ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsArgs, ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtr and ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrInput` via:
//
//	        ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsArgs{...}
//
//	or:
//
//	        nil
type ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput
	ToClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput
}

type clickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrType ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsArgs

func ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtr(v *ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsArgs) ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrInput {
	return (*clickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrType)(v)
}

func (*clickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjects)(nil)).Elem()
}

func (i *clickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrType) ToClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutputWithContext(context.Background())
}

func (i *clickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrType) ToClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput)
}

// Describes what clickhouse-operator should do with Kubernetes resources which are failed during reconcile.
// Default behavior is `Retain`"
type ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjects)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput) ToClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput) ToClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput) ToClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput {
	return o.ToClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutputWithContext(context.Background())
}

func (o ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput) ToClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjects) *ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjects {
		return &v
	}).(ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput)
}

// Behavior policy for failed ConfigMap, `Retain` by default
func (o ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput) ConfigMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjects) *string {
		return v.ConfigMap
	}).(pulumi.StringPtrOutput)
}

// Behavior policy for failed PVC, `Retain` by default
func (o ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput) Pvc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjects) *string { return v.Pvc }).(pulumi.StringPtrOutput)
}

// Behavior policy for failed Service, `Retain` by default
func (o ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjects) *string {
		return v.Service
	}).(pulumi.StringPtrOutput)
}

// Behavior policy for failed StatefulSet, `Retain` by default
func (o ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput) StatefulSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjects) *string {
		return v.StatefulSet
	}).(pulumi.StringPtrOutput)
}

type ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjects)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput) ToClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput) ToClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput) Elem() ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjects) ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjects {
		if v != nil {
			return *v
		}
		var ret ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjects
		return ret
	}).(ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput)
}

// Behavior policy for failed ConfigMap, `Retain` by default
func (o ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput) ConfigMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjects) *string {
		if v == nil {
			return nil
		}
		return v.ConfigMap
	}).(pulumi.StringPtrOutput)
}

// Behavior policy for failed PVC, `Retain` by default
func (o ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput) Pvc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjects) *string {
		if v == nil {
			return nil
		}
		return v.Pvc
	}).(pulumi.StringPtrOutput)
}

// Behavior policy for failed Service, `Retain` by default
func (o ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjects) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

// Behavior policy for failed StatefulSet, `Retain` by default
func (o ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput) StatefulSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjects) *string {
		if v == nil {
			return nil
		}
		return v.StatefulSet
	}).(pulumi.StringPtrOutput)
}

// Describes what clickhouse-operator should do with found Kubernetes resources which should be managed by clickhouse-operator,
// but do not have `ownerReference` to any currently managed `ClickHouseInstallation` resource.
// Default behavior is `Delete`"
type ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjects struct {
	// Behavior policy for unknown ConfigMap, `Delete` by default
	ConfigMap *string `pulumi:"configMap"`
	// Behavior policy for unknown PVC, `Delete` by default
	Pvc *string `pulumi:"pvc"`
	// Behavior policy for unknown Service, `Delete` by default
	Service *string `pulumi:"service"`
	// Behavior policy for unknown StatefulSet, `Delete` by default
	StatefulSet *string `pulumi:"statefulSet"`
}

// ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsInput is an input type that accepts ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsArgs and ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsInput` via:
//
//	ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsArgs{...}
type ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput
	ToClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput
}

// Describes what clickhouse-operator should do with found Kubernetes resources which should be managed by clickhouse-operator,
// but do not have `ownerReference` to any currently managed `ClickHouseInstallation` resource.
// Default behavior is `Delete`"
type ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsArgs struct {
	// Behavior policy for unknown ConfigMap, `Delete` by default
	ConfigMap pulumi.StringPtrInput `pulumi:"configMap"`
	// Behavior policy for unknown PVC, `Delete` by default
	Pvc pulumi.StringPtrInput `pulumi:"pvc"`
	// Behavior policy for unknown Service, `Delete` by default
	Service pulumi.StringPtrInput `pulumi:"service"`
	// Behavior policy for unknown StatefulSet, `Delete` by default
	StatefulSet pulumi.StringPtrInput `pulumi:"statefulSet"`
}

func (ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjects)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsArgs) ToClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput {
	return i.ToClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsArgs) ToClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput)
}

func (i ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsArgs) ToClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsArgs) ToClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput).ToClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutputWithContext(ctx)
}

// ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrInput is an input type that accepts ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsArgs, ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtr and ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrInput` via:
//
//	        ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsArgs{...}
//
//	or:
//
//	        nil
type ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput
	ToClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput
}

type clickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrType ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsArgs

func ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtr(v *ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsArgs) ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrInput {
	return (*clickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrType)(v)
}

func (*clickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjects)(nil)).Elem()
}

func (i *clickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrType) ToClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutputWithContext(context.Background())
}

func (i *clickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrType) ToClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput)
}

// Describes what clickhouse-operator should do with found Kubernetes resources which should be managed by clickhouse-operator,
// but do not have `ownerReference` to any currently managed `ClickHouseInstallation` resource.
// Default behavior is `Delete`"
type ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjects)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput) ToClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput) ToClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput) ToClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput {
	return o.ToClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutputWithContext(context.Background())
}

func (o ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput) ToClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjects) *ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjects {
		return &v
	}).(ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput)
}

// Behavior policy for unknown ConfigMap, `Delete` by default
func (o ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput) ConfigMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjects) *string { return v.ConfigMap }).(pulumi.StringPtrOutput)
}

// Behavior policy for unknown PVC, `Delete` by default
func (o ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput) Pvc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjects) *string { return v.Pvc }).(pulumi.StringPtrOutput)
}

// Behavior policy for unknown Service, `Delete` by default
func (o ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjects) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// Behavior policy for unknown StatefulSet, `Delete` by default
func (o ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput) StatefulSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjects) *string { return v.StatefulSet }).(pulumi.StringPtrOutput)
}

type ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjects)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput) ToClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput() ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput) ToClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput) Elem() ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjects) ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjects {
		if v != nil {
			return *v
		}
		var ret ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjects
		return ret
	}).(ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput)
}

// Behavior policy for unknown ConfigMap, `Delete` by default
func (o ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput) ConfigMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjects) *string {
		if v == nil {
			return nil
		}
		return v.ConfigMap
	}).(pulumi.StringPtrOutput)
}

// Behavior policy for unknown PVC, `Delete` by default
func (o ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput) Pvc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjects) *string {
		if v == nil {
			return nil
		}
		return v.Pvc
	}).(pulumi.StringPtrOutput)
}

// Behavior policy for unknown Service, `Delete` by default
func (o ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjects) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

// Behavior policy for unknown StatefulSet, `Delete` by default
func (o ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput) StatefulSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjects) *string {
		if v == nil {
			return nil
		}
		return v.StatefulSet
	}).(pulumi.StringPtrOutput)
}

// allows define templates which will use for render Kubernetes resources like StatefulSet, ConfigMap, Service, PVC, by default, clickhouse-operator have own templates, but you can override it
type ClickHouseKeeperInstallationSpecTemplates struct {
	// hostTemplate will use during apply to generate `clickhose-server` config files
	HostTemplates []ClickHouseKeeperInstallationSpecTemplatesHostTemplates `pulumi:"hostTemplates"`
	// podTemplate will use during render `Pod` inside `StatefulSet.spec` and allows define rendered `Pod.spec`, pod scheduling distribution and pod zone
	// More information: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatespodtemplates
	PodTemplates []ClickHouseKeeperInstallationSpecTemplatesPodTemplates `pulumi:"podTemplates"`
	// allows define template for rendering `Service` which would get endpoint from Pods which scoped chi-wide, cluster-wide, shard-wide, replica-wide level
	ServiceTemplates []ClickHouseKeeperInstallationSpecTemplatesServiceTemplates `pulumi:"serviceTemplates"`
	// allows define template for rendering `PVC` kubernetes resource, which would use inside `Pod` for mount clickhouse `data`, clickhouse `logs` or something else
	VolumeClaimTemplates []ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplates `pulumi:"volumeClaimTemplates"`
}

// ClickHouseKeeperInstallationSpecTemplatesInput is an input type that accepts ClickHouseKeeperInstallationSpecTemplatesArgs and ClickHouseKeeperInstallationSpecTemplatesOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecTemplatesInput` via:
//
//	ClickHouseKeeperInstallationSpecTemplatesArgs{...}
type ClickHouseKeeperInstallationSpecTemplatesInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecTemplatesOutput() ClickHouseKeeperInstallationSpecTemplatesOutput
	ToClickHouseKeeperInstallationSpecTemplatesOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecTemplatesOutput
}

// allows define templates which will use for render Kubernetes resources like StatefulSet, ConfigMap, Service, PVC, by default, clickhouse-operator have own templates, but you can override it
type ClickHouseKeeperInstallationSpecTemplatesArgs struct {
	// hostTemplate will use during apply to generate `clickhose-server` config files
	HostTemplates ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayInput `pulumi:"hostTemplates"`
	// podTemplate will use during render `Pod` inside `StatefulSet.spec` and allows define rendered `Pod.spec`, pod scheduling distribution and pod zone
	// More information: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatespodtemplates
	PodTemplates ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayInput `pulumi:"podTemplates"`
	// allows define template for rendering `Service` which would get endpoint from Pods which scoped chi-wide, cluster-wide, shard-wide, replica-wide level
	ServiceTemplates ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayInput `pulumi:"serviceTemplates"`
	// allows define template for rendering `PVC` kubernetes resource, which would use inside `Pod` for mount clickhouse `data`, clickhouse `logs` or something else
	VolumeClaimTemplates ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayInput `pulumi:"volumeClaimTemplates"`
}

func (ClickHouseKeeperInstallationSpecTemplatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplates)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecTemplatesArgs) ToClickHouseKeeperInstallationSpecTemplatesOutput() ClickHouseKeeperInstallationSpecTemplatesOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecTemplatesArgs) ToClickHouseKeeperInstallationSpecTemplatesOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesOutput)
}

func (i ClickHouseKeeperInstallationSpecTemplatesArgs) ToClickHouseKeeperInstallationSpecTemplatesPtrOutput() ClickHouseKeeperInstallationSpecTemplatesPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesPtrOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecTemplatesArgs) ToClickHouseKeeperInstallationSpecTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesOutput).ToClickHouseKeeperInstallationSpecTemplatesPtrOutputWithContext(ctx)
}

// ClickHouseKeeperInstallationSpecTemplatesPtrInput is an input type that accepts ClickHouseKeeperInstallationSpecTemplatesArgs, ClickHouseKeeperInstallationSpecTemplatesPtr and ClickHouseKeeperInstallationSpecTemplatesPtrOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecTemplatesPtrInput` via:
//
//	        ClickHouseKeeperInstallationSpecTemplatesArgs{...}
//
//	or:
//
//	        nil
type ClickHouseKeeperInstallationSpecTemplatesPtrInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecTemplatesPtrOutput() ClickHouseKeeperInstallationSpecTemplatesPtrOutput
	ToClickHouseKeeperInstallationSpecTemplatesPtrOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecTemplatesPtrOutput
}

type clickHouseKeeperInstallationSpecTemplatesPtrType ClickHouseKeeperInstallationSpecTemplatesArgs

func ClickHouseKeeperInstallationSpecTemplatesPtr(v *ClickHouseKeeperInstallationSpecTemplatesArgs) ClickHouseKeeperInstallationSpecTemplatesPtrInput {
	return (*clickHouseKeeperInstallationSpecTemplatesPtrType)(v)
}

func (*clickHouseKeeperInstallationSpecTemplatesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecTemplates)(nil)).Elem()
}

func (i *clickHouseKeeperInstallationSpecTemplatesPtrType) ToClickHouseKeeperInstallationSpecTemplatesPtrOutput() ClickHouseKeeperInstallationSpecTemplatesPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesPtrOutputWithContext(context.Background())
}

func (i *clickHouseKeeperInstallationSpecTemplatesPtrType) ToClickHouseKeeperInstallationSpecTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesPtrOutput)
}

// allows define templates which will use for render Kubernetes resources like StatefulSet, ConfigMap, Service, PVC, by default, clickhouse-operator have own templates, but you can override it
type ClickHouseKeeperInstallationSpecTemplatesOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecTemplatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplates)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecTemplatesOutput) ToClickHouseKeeperInstallationSpecTemplatesOutput() ClickHouseKeeperInstallationSpecTemplatesOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesOutput) ToClickHouseKeeperInstallationSpecTemplatesOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesOutput) ToClickHouseKeeperInstallationSpecTemplatesPtrOutput() ClickHouseKeeperInstallationSpecTemplatesPtrOutput {
	return o.ToClickHouseKeeperInstallationSpecTemplatesPtrOutputWithContext(context.Background())
}

func (o ClickHouseKeeperInstallationSpecTemplatesOutput) ToClickHouseKeeperInstallationSpecTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClickHouseKeeperInstallationSpecTemplates) *ClickHouseKeeperInstallationSpecTemplates {
		return &v
	}).(ClickHouseKeeperInstallationSpecTemplatesPtrOutput)
}

// hostTemplate will use during apply to generate `clickhose-server` config files
func (o ClickHouseKeeperInstallationSpecTemplatesOutput) HostTemplates() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplates) []ClickHouseKeeperInstallationSpecTemplatesHostTemplates {
		return v.HostTemplates
	}).(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutput)
}

// podTemplate will use during render `Pod` inside `StatefulSet.spec` and allows define rendered `Pod.spec`, pod scheduling distribution and pod zone
// More information: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatespodtemplates
func (o ClickHouseKeeperInstallationSpecTemplatesOutput) PodTemplates() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplates) []ClickHouseKeeperInstallationSpecTemplatesPodTemplates {
		return v.PodTemplates
	}).(ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutput)
}

// allows define template for rendering `Service` which would get endpoint from Pods which scoped chi-wide, cluster-wide, shard-wide, replica-wide level
func (o ClickHouseKeeperInstallationSpecTemplatesOutput) ServiceTemplates() ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplates) []ClickHouseKeeperInstallationSpecTemplatesServiceTemplates {
		return v.ServiceTemplates
	}).(ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutput)
}

// allows define template for rendering `PVC` kubernetes resource, which would use inside `Pod` for mount clickhouse `data`, clickhouse `logs` or something else
func (o ClickHouseKeeperInstallationSpecTemplatesOutput) VolumeClaimTemplates() ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplates) []ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplates {
		return v.VolumeClaimTemplates
	}).(ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesPtrOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecTemplatesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecTemplates)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecTemplatesPtrOutput) ToClickHouseKeeperInstallationSpecTemplatesPtrOutput() ClickHouseKeeperInstallationSpecTemplatesPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesPtrOutput) ToClickHouseKeeperInstallationSpecTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesPtrOutput) Elem() ClickHouseKeeperInstallationSpecTemplatesOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplates) ClickHouseKeeperInstallationSpecTemplates {
		if v != nil {
			return *v
		}
		var ret ClickHouseKeeperInstallationSpecTemplates
		return ret
	}).(ClickHouseKeeperInstallationSpecTemplatesOutput)
}

// hostTemplate will use during apply to generate `clickhose-server` config files
func (o ClickHouseKeeperInstallationSpecTemplatesPtrOutput) HostTemplates() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplates) []ClickHouseKeeperInstallationSpecTemplatesHostTemplates {
		if v == nil {
			return nil
		}
		return v.HostTemplates
	}).(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutput)
}

// podTemplate will use during render `Pod` inside `StatefulSet.spec` and allows define rendered `Pod.spec`, pod scheduling distribution and pod zone
// More information: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatespodtemplates
func (o ClickHouseKeeperInstallationSpecTemplatesPtrOutput) PodTemplates() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplates) []ClickHouseKeeperInstallationSpecTemplatesPodTemplates {
		if v == nil {
			return nil
		}
		return v.PodTemplates
	}).(ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutput)
}

// allows define template for rendering `Service` which would get endpoint from Pods which scoped chi-wide, cluster-wide, shard-wide, replica-wide level
func (o ClickHouseKeeperInstallationSpecTemplatesPtrOutput) ServiceTemplates() ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplates) []ClickHouseKeeperInstallationSpecTemplatesServiceTemplates {
		if v == nil {
			return nil
		}
		return v.ServiceTemplates
	}).(ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutput)
}

// allows define template for rendering `PVC` kubernetes resource, which would use inside `Pod` for mount clickhouse `data`, clickhouse `logs` or something else
func (o ClickHouseKeeperInstallationSpecTemplatesPtrOutput) VolumeClaimTemplates() ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplates) []ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplates {
		if v == nil {
			return nil
		}
		return v.VolumeClaimTemplates
	}).(ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesHostTemplates struct {
	// template name, could use to link inside top-level `chi.spec.defaults.templates.hostTemplate`, cluster-level `chi.spec.configuration.clusters.templates.hostTemplate`, shard-level `chi.spec.configuration.clusters.layout.shards.temlates.hostTemplate`, replica-level `chi.spec.configuration.clusters.layout.replicas.templates.hostTemplate`
	Name *string `pulumi:"name"`
	// define how will distribute numeric values of named ports in `Pod.spec.containers.ports` and clickhouse-server configs
	PortDistribution []ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistribution `pulumi:"portDistribution"`
	Spec             *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec              `pulumi:"spec"`
}

// ClickHouseKeeperInstallationSpecTemplatesHostTemplatesInput is an input type that accepts ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArgs and ClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecTemplatesHostTemplatesInput` via:
//
//	ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArgs{...}
type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutput
	ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutput
}

type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArgs struct {
	// template name, could use to link inside top-level `chi.spec.defaults.templates.hostTemplate`, cluster-level `chi.spec.configuration.clusters.templates.hostTemplate`, shard-level `chi.spec.configuration.clusters.layout.shards.temlates.hostTemplate`, replica-level `chi.spec.configuration.clusters.layout.replicas.templates.hostTemplate`
	Name pulumi.StringPtrInput `pulumi:"name"`
	// define how will distribute numeric values of named ports in `Pod.spec.containers.ports` and clickhouse-server configs
	PortDistribution ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayInput `pulumi:"portDistribution"`
	Spec             ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrInput               `pulumi:"spec"`
}

func (ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesHostTemplates)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArgs) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArgs) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutput)
}

// ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayInput is an input type that accepts ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArray and ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayInput` via:
//
//	ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArray{ ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArgs{...} }
type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutput
	ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutput
}

type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArray []ClickHouseKeeperInstallationSpecTemplatesHostTemplatesInput

func (ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClickHouseKeeperInstallationSpecTemplatesHostTemplates)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArray) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArray) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesHostTemplates)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutput) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutput) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutput {
	return o
}

// template name, could use to link inside top-level `chi.spec.defaults.templates.hostTemplate`, cluster-level `chi.spec.configuration.clusters.templates.hostTemplate`, shard-level `chi.spec.configuration.clusters.layout.shards.temlates.hostTemplate`, replica-level `chi.spec.configuration.clusters.layout.replicas.templates.hostTemplate`
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesHostTemplates) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// define how will distribute numeric values of named ports in `Pod.spec.containers.ports` and clickhouse-server configs
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutput) PortDistribution() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesHostTemplates) []ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistribution {
		return v.PortDistribution
	}).(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayOutput)
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutput) Spec() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesHostTemplates) *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec {
		return v.Spec
	}).(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClickHouseKeeperInstallationSpecTemplatesHostTemplates)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutput) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutput) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutput) Index(i pulumi.IntInput) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClickHouseKeeperInstallationSpecTemplatesHostTemplates {
		return vs[0].([]ClickHouseKeeperInstallationSpecTemplatesHostTemplates)[vs[1].(int)]
	}).(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistribution struct {
	// type of distribution, when `Unspecified` (default value) then all listen ports on clickhouse-server configuration in all Pods will have the same value, when `ClusterScopeIndex` then ports will increment to offset from base value depends on shard and replica index inside cluster with combination of `chi.spec.templates.podTemlates.spec.HostNetwork` it allows setup ClickHouse cluster inside Kubernetes and provide access via external network bypass Kubernetes internal network
	Type *string `pulumi:"type"`
}

// ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionInput is an input type that accepts ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArgs and ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionInput` via:
//
//	ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArgs{...}
type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionOutput
	ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionOutput
}

type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArgs struct {
	// type of distribution, when `Unspecified` (default value) then all listen ports on clickhouse-server configuration in all Pods will have the same value, when `ClusterScopeIndex` then ports will increment to offset from base value depends on shard and replica index inside cluster with combination of `chi.spec.templates.podTemlates.spec.HostNetwork` it allows setup ClickHouse cluster inside Kubernetes and provide access via external network bypass Kubernetes internal network
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistribution)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArgs) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArgs) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionOutput)
}

// ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayInput is an input type that accepts ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArray and ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayInput` via:
//
//	ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArray{ ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArgs{...} }
type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayOutput
	ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayOutput
}

type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArray []ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionInput

func (ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistribution)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArray) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArray) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistribution)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionOutput) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionOutput) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionOutput {
	return o
}

// type of distribution, when `Unspecified` (default value) then all listen ports on clickhouse-server configuration in all Pods will have the same value, when `ClusterScopeIndex` then ports will increment to offset from base value depends on shard and replica index inside cluster with combination of `chi.spec.templates.podTemlates.spec.HostNetwork` it allows setup ClickHouse cluster inside Kubernetes and provide access via external network bypass Kubernetes internal network
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistribution) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistribution)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayOutput) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayOutput) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayOutput) Index(i pulumi.IntInput) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistribution {
		return vs[0].([]ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistribution)[vs[1].(int)]
	}).(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec struct {
	// optional, allows define content of any setting file inside each `Pod` where this template will apply during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
	Files map[string]interface{} `pulumi:"files"`
	// by default, hostname will generate, but this allows define custom name for each `clickhouse-server`
	Name     *string `pulumi:"name"`
	RaftPort *int    `pulumi:"raftPort"`
	// optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` where this template will apply during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
	// More details: https://clickhouse.tech/docs/en/operations/settings/settings/
	Settings map[string]interface{} `pulumi:"settings"`
	// be careful, this part of CRD allows override template inside template, don't use it if you don't understand what you do
	Templates *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates `pulumi:"templates"`
	ZkPort    *int                                                                 `pulumi:"zkPort"`
}

// ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecInput is an input type that accepts ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecArgs and ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecInput` via:
//
//	ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecArgs{...}
type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput
	ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput
}

type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecArgs struct {
	// optional, allows define content of any setting file inside each `Pod` where this template will apply during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
	Files pulumi.MapInput `pulumi:"files"`
	// by default, hostname will generate, but this allows define custom name for each `clickhouse-server`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	RaftPort pulumi.IntPtrInput    `pulumi:"raftPort"`
	// optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` where this template will apply during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
	// More details: https://clickhouse.tech/docs/en/operations/settings/settings/
	Settings pulumi.MapInput `pulumi:"settings"`
	// be careful, this part of CRD allows override template inside template, don't use it if you don't understand what you do
	Templates ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrInput `pulumi:"templates"`
	ZkPort    pulumi.IntPtrInput                                                          `pulumi:"zkPort"`
}

func (ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecArgs) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecArgs) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput)
}

func (i ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecArgs) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecArgs) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput).ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutputWithContext(ctx)
}

// ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrInput is an input type that accepts ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecArgs, ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtr and ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrInput` via:
//
//	        ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecArgs{...}
//
//	or:
//
//	        nil
type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput
	ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput
}

type clickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrType ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecArgs

func ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtr(v *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecArgs) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrInput {
	return (*clickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrType)(v)
}

func (*clickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec)(nil)).Elem()
}

func (i *clickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrType) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutputWithContext(context.Background())
}

func (i *clickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrType) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput {
	return o.ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutputWithContext(context.Background())
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec) *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec {
		return &v
	}).(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput)
}

// optional, allows define content of any setting file inside each `Pod` where this template will apply during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput) Files() pulumi.MapOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec) map[string]interface{} {
		return v.Files
	}).(pulumi.MapOutput)
}

// by default, hostname will generate, but this allows define custom name for each `clickhouse-server`
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput) RaftPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec) *int { return v.RaftPort }).(pulumi.IntPtrOutput)
}

// optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` where this template will apply during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
// More details: https://clickhouse.tech/docs/en/operations/settings/settings/
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput) Settings() pulumi.MapOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec) map[string]interface{} {
		return v.Settings
	}).(pulumi.MapOutput)
}

// be careful, this part of CRD allows override template inside template, don't use it if you don't understand what you do
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput) Templates() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec) *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates {
		return v.Templates
	}).(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput)
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput) ZkPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec) *int { return v.ZkPort }).(pulumi.IntPtrOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput) Elem() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec {
		if v != nil {
			return *v
		}
		var ret ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec
		return ret
	}).(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput)
}

// optional, allows define content of any setting file inside each `Pod` where this template will apply during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput) Files() pulumi.MapOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Files
	}).(pulumi.MapOutput)
}

// by default, hostname will generate, but this allows define custom name for each `clickhouse-server`
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput) RaftPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec) *int {
		if v == nil {
			return nil
		}
		return v.RaftPort
	}).(pulumi.IntPtrOutput)
}

// optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` where this template will apply during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
// More details: https://clickhouse.tech/docs/en/operations/settings/settings/
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput) Settings() pulumi.MapOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(pulumi.MapOutput)
}

// be careful, this part of CRD allows override template inside template, don't use it if you don't understand what you do
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput) Templates() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec) *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates {
		if v == nil {
			return nil
		}
		return v.Templates
	}).(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput)
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput) ZkPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpec) *int {
		if v == nil {
			return nil
		}
		return v.ZkPort
	}).(pulumi.IntPtrOutput)
}

// be careful, this part of CRD allows override template inside template, don't use it if you don't understand what you do
type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates struct {
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
	ClusterServiceTemplate *string `pulumi:"clusterServiceTemplate"`
	// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	DataVolumeClaimTemplate *string `pulumi:"dataVolumeClaimTemplate"`
	// optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
	HostTemplate *string `pulumi:"hostTemplate"`
	// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	LogVolumeClaimTemplate *string `pulumi:"logVolumeClaimTemplate"`
	// optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	PodTemplate *string `pulumi:"podTemplate"`
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
	ReplicaServiceTemplate *string `pulumi:"replicaServiceTemplate"`
	// optional, template name from chi.spec.templates.serviceTemplates. used for customization of the `Service` resource, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
	ServiceTemplate *string `pulumi:"serviceTemplate"`
	// optional, template names from chi.spec.templates.serviceTemplates. used for customization of the `Service` resources, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
	ServiceTemplates []string `pulumi:"serviceTemplates"`
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
	ShardServiceTemplate *string `pulumi:"shardServiceTemplate"`
	// optional, alias for dataVolumeClaimTemplate, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	VolumeClaimTemplate *string `pulumi:"volumeClaimTemplate"`
}

// ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesInput is an input type that accepts ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesArgs and ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesInput` via:
//
//	ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesArgs{...}
type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput
	ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput
}

// be careful, this part of CRD allows override template inside template, don't use it if you don't understand what you do
type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesArgs struct {
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
	ClusterServiceTemplate pulumi.StringPtrInput `pulumi:"clusterServiceTemplate"`
	// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	DataVolumeClaimTemplate pulumi.StringPtrInput `pulumi:"dataVolumeClaimTemplate"`
	// optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
	HostTemplate pulumi.StringPtrInput `pulumi:"hostTemplate"`
	// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	LogVolumeClaimTemplate pulumi.StringPtrInput `pulumi:"logVolumeClaimTemplate"`
	// optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	PodTemplate pulumi.StringPtrInput `pulumi:"podTemplate"`
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
	ReplicaServiceTemplate pulumi.StringPtrInput `pulumi:"replicaServiceTemplate"`
	// optional, template name from chi.spec.templates.serviceTemplates. used for customization of the `Service` resource, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
	ServiceTemplate pulumi.StringPtrInput `pulumi:"serviceTemplate"`
	// optional, template names from chi.spec.templates.serviceTemplates. used for customization of the `Service` resources, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
	ServiceTemplates pulumi.StringArrayInput `pulumi:"serviceTemplates"`
	// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
	ShardServiceTemplate pulumi.StringPtrInput `pulumi:"shardServiceTemplate"`
	// optional, alias for dataVolumeClaimTemplate, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
	VolumeClaimTemplate pulumi.StringPtrInput `pulumi:"volumeClaimTemplate"`
}

func (ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesArgs) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesArgs) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput)
}

func (i ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesArgs) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesArgs) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput).ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutputWithContext(ctx)
}

// ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrInput is an input type that accepts ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesArgs, ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtr and ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrInput` via:
//
//	        ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesArgs{...}
//
//	or:
//
//	        nil
type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput
	ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput
}

type clickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrType ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesArgs

func ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtr(v *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesArgs) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrInput {
	return (*clickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrType)(v)
}

func (*clickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates)(nil)).Elem()
}

func (i *clickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrType) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutputWithContext(context.Background())
}

func (i *clickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrType) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput)
}

// be careful, this part of CRD allows override template inside template, don't use it if you don't understand what you do
type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput {
	return o.ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutputWithContext(context.Background())
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates) *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates {
		return &v
	}).(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput) ClusterServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates) *string {
		return v.ClusterServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput) DataVolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates) *string {
		return v.DataVolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput) HostTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates) *string {
		return v.HostTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput) LogVolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates) *string {
		return v.LogVolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput) PodTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates) *string {
		return v.PodTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput) ReplicaServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates) *string {
		return v.ReplicaServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates. used for customization of the `Service` resource, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput) ServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates) *string {
		return v.ServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template names from chi.spec.templates.serviceTemplates. used for customization of the `Service` resources, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput) ServiceTemplates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates) []string {
		return v.ServiceTemplates
	}).(pulumi.StringArrayOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput) ShardServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates) *string {
		return v.ShardServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, alias for dataVolumeClaimTemplate, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput) VolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates) *string {
		return v.VolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput) ToClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput) Elem() ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates) ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates {
		if v != nil {
			return *v
		}
		var ret ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates
		return ret
	}).(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput) ClusterServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates) *string {
		if v == nil {
			return nil
		}
		return v.ClusterServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput) DataVolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates) *string {
		if v == nil {
			return nil
		}
		return v.DataVolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput) HostTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates) *string {
		if v == nil {
			return nil
		}
		return v.HostTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput) LogVolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates) *string {
		if v == nil {
			return nil
		}
		return v.LogVolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput) PodTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates) *string {
		if v == nil {
			return nil
		}
		return v.PodTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput) ReplicaServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates) *string {
		if v == nil {
			return nil
		}
		return v.ReplicaServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates. used for customization of the `Service` resource, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput) ServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates) *string {
		if v == nil {
			return nil
		}
		return v.ServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, template names from chi.spec.templates.serviceTemplates. used for customization of the `Service` resources, created by `clickhouse-operator` to cover all clusters in whole `chi` resource
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput) ServiceTemplates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates) []string {
		if v == nil {
			return nil
		}
		return v.ServiceTemplates
	}).(pulumi.StringArrayOutput)
}

// optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput) ShardServiceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates) *string {
		if v == nil {
			return nil
		}
		return v.ShardServiceTemplate
	}).(pulumi.StringPtrOutput)
}

// optional, alias for dataVolumeClaimTemplate, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
func (o ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput) VolumeClaimTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplates) *string {
		if v == nil {
			return nil
		}
		return v.VolumeClaimTemplate
	}).(pulumi.StringPtrOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesPodTemplates struct {
	// DEPRECATED, shortcut for `chi.spec.templates.podTemplates.spec.affinity.podAntiAffinity`
	Distribution *string `pulumi:"distribution"`
	// allows define format for generated `Pod` name, look to https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatesservicetemplates for details about available template variables
	GenerateName *string `pulumi:"generateName"`
	// allows pass standard object's metadata from template to Pod
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata map[string]interface{} `pulumi:"metadata"`
	// template name, could use to link inside top-level `chi.spec.defaults.templates.podTemplate`, cluster-level `chi.spec.configuration.clusters.templates.podTemplate`, shard-level `chi.spec.configuration.clusters.layout.shards.temlates.podTemplate`, replica-level `chi.spec.configuration.clusters.layout.replicas.templates.podTemplate`
	Name *string `pulumi:"name"`
	// define ClickHouse Pod distribution policy between Kubernetes Nodes inside Shard, Replica, Namespace, CHI, another ClickHouse cluster
	PodDistribution []ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistribution `pulumi:"podDistribution"`
	// allows define whole Pod.spec inside StaefulSet.spec, look to https://kubernetes.io/docs/concepts/workloads/pods/#pod-templates for details
	Spec map[string]interface{} `pulumi:"spec"`
	// allows define custom zone name and will separate ClickHouse `Pods` between nodes, shortcut for `chi.spec.templates.podTemplates.spec.affinity.podAntiAffinity`
	Zone *ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZone `pulumi:"zone"`
}

// ClickHouseKeeperInstallationSpecTemplatesPodTemplatesInput is an input type that accepts ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArgs and ClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecTemplatesPodTemplatesInput` via:
//
//	ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArgs{...}
type ClickHouseKeeperInstallationSpecTemplatesPodTemplatesInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput
	ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput
}

type ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArgs struct {
	// DEPRECATED, shortcut for `chi.spec.templates.podTemplates.spec.affinity.podAntiAffinity`
	Distribution pulumi.StringPtrInput `pulumi:"distribution"`
	// allows define format for generated `Pod` name, look to https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatesservicetemplates for details about available template variables
	GenerateName pulumi.StringPtrInput `pulumi:"generateName"`
	// allows pass standard object's metadata from template to Pod
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata pulumi.MapInput `pulumi:"metadata"`
	// template name, could use to link inside top-level `chi.spec.defaults.templates.podTemplate`, cluster-level `chi.spec.configuration.clusters.templates.podTemplate`, shard-level `chi.spec.configuration.clusters.layout.shards.temlates.podTemplate`, replica-level `chi.spec.configuration.clusters.layout.replicas.templates.podTemplate`
	Name pulumi.StringPtrInput `pulumi:"name"`
	// define ClickHouse Pod distribution policy between Kubernetes Nodes inside Shard, Replica, Namespace, CHI, another ClickHouse cluster
	PodDistribution ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayInput `pulumi:"podDistribution"`
	// allows define whole Pod.spec inside StaefulSet.spec, look to https://kubernetes.io/docs/concepts/workloads/pods/#pod-templates for details
	Spec pulumi.MapInput `pulumi:"spec"`
	// allows define custom zone name and will separate ClickHouse `Pods` between nodes, shortcut for `chi.spec.templates.podTemplates.spec.affinity.podAntiAffinity`
	Zone ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrInput `pulumi:"zone"`
}

func (ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesPodTemplates)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArgs) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArgs) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput)
}

// ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayInput is an input type that accepts ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArray and ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayInput` via:
//
//	ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArray{ ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArgs{...} }
type ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutput() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutput
	ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutput
}

type ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArray []ClickHouseKeeperInstallationSpecTemplatesPodTemplatesInput

func (ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClickHouseKeeperInstallationSpecTemplatesPodTemplates)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArray) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutput() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArray) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesPodTemplates)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput {
	return o
}

// DEPRECATED, shortcut for `chi.spec.templates.podTemplates.spec.affinity.podAntiAffinity`
func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput) Distribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesPodTemplates) *string { return v.Distribution }).(pulumi.StringPtrOutput)
}

// allows define format for generated `Pod` name, look to https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatesservicetemplates for details about available template variables
func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput) GenerateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesPodTemplates) *string { return v.GenerateName }).(pulumi.StringPtrOutput)
}

// allows pass standard object's metadata from template to Pod
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesPodTemplates) map[string]interface{} {
		return v.Metadata
	}).(pulumi.MapOutput)
}

// template name, could use to link inside top-level `chi.spec.defaults.templates.podTemplate`, cluster-level `chi.spec.configuration.clusters.templates.podTemplate`, shard-level `chi.spec.configuration.clusters.layout.shards.temlates.podTemplate`, replica-level `chi.spec.configuration.clusters.layout.replicas.templates.podTemplate`
func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesPodTemplates) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// define ClickHouse Pod distribution policy between Kubernetes Nodes inside Shard, Replica, Namespace, CHI, another ClickHouse cluster
func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput) PodDistribution() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesPodTemplates) []ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistribution {
		return v.PodDistribution
	}).(ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayOutput)
}

// allows define whole Pod.spec inside StaefulSet.spec, look to https://kubernetes.io/docs/concepts/workloads/pods/#pod-templates for details
func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput) Spec() pulumi.MapOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesPodTemplates) map[string]interface{} { return v.Spec }).(pulumi.MapOutput)
}

// allows define custom zone name and will separate ClickHouse `Pods` between nodes, shortcut for `chi.spec.templates.podTemplates.spec.affinity.podAntiAffinity`
func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput) Zone() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesPodTemplates) *ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZone {
		return v.Zone
	}).(ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClickHouseKeeperInstallationSpecTemplatesPodTemplates)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutput) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutput() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutput) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutput) Index(i pulumi.IntInput) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClickHouseKeeperInstallationSpecTemplatesPodTemplates {
		return vs[0].([]ClickHouseKeeperInstallationSpecTemplatesPodTemplates)[vs[1].(int)]
	}).(ClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistribution struct {
	// define, how much ClickHouse Pods could be inside selected scope with selected distribution type
	Number *int `pulumi:"number"`
	// scope for apply each podDistribution
	Scope *string `pulumi:"scope"`
	// use for inter-pod affinity look to `pod.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.topologyKey`,
	// more info: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity"
	TopologyKey *string `pulumi:"topologyKey"`
	// you can define multiple affinity policy types
	Type *string `pulumi:"type"`
}

// ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionInput is an input type that accepts ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArgs and ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionInput` via:
//
//	ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArgs{...}
type ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutput() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutput
	ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutput
}

type ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArgs struct {
	// define, how much ClickHouse Pods could be inside selected scope with selected distribution type
	Number pulumi.IntPtrInput `pulumi:"number"`
	// scope for apply each podDistribution
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// use for inter-pod affinity look to `pod.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.topologyKey`,
	// more info: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity"
	TopologyKey pulumi.StringPtrInput `pulumi:"topologyKey"`
	// you can define multiple affinity policy types
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistribution)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArgs) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutput() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArgs) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutput)
}

// ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayInput is an input type that accepts ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArray and ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayInput` via:
//
//	ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArray{ ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArgs{...} }
type ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayOutput() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayOutput
	ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayOutput
}

type ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArray []ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionInput

func (ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistribution)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArray) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayOutput() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArray) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistribution)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutput) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutput() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutput) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutput {
	return o
}

// define, how much ClickHouse Pods could be inside selected scope with selected distribution type
func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistribution) *int { return v.Number }).(pulumi.IntPtrOutput)
}

// scope for apply each podDistribution
func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistribution) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// use for inter-pod affinity look to `pod.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.topologyKey`,
// more info: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity"
func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutput) TopologyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistribution) *string {
		return v.TopologyKey
	}).(pulumi.StringPtrOutput)
}

// you can define multiple affinity policy types
func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistribution) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistribution)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayOutput) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayOutput() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayOutput) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayOutput) Index(i pulumi.IntInput) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistribution {
		return vs[0].([]ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistribution)[vs[1].(int)]
	}).(ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutput)
}

// allows define custom zone name and will separate ClickHouse `Pods` between nodes, shortcut for `chi.spec.templates.podTemplates.spec.affinity.podAntiAffinity`
type ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZone struct {
	// optional, if defined, allows select kubernetes nodes by label with `name` equal `key`
	Key *string `pulumi:"key"`
	// optional, if defined, allows select kubernetes nodes by label with `value` in `values`
	Values []string `pulumi:"values"`
}

// ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneInput is an input type that accepts ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneArgs and ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneInput` via:
//
//	ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneArgs{...}
type ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutput() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutput
	ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutput
}

// allows define custom zone name and will separate ClickHouse `Pods` between nodes, shortcut for `chi.spec.templates.podTemplates.spec.affinity.podAntiAffinity`
type ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneArgs struct {
	// optional, if defined, allows select kubernetes nodes by label with `name` equal `key`
	Key pulumi.StringPtrInput `pulumi:"key"`
	// optional, if defined, allows select kubernetes nodes by label with `value` in `values`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZone)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneArgs) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutput() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneArgs) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutput)
}

func (i ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneArgs) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneArgs) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutput).ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutputWithContext(ctx)
}

// ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrInput is an input type that accepts ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneArgs, ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtr and ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrInput` via:
//
//	        ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneArgs{...}
//
//	or:
//
//	        nil
type ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput
	ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput
}

type clickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrType ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneArgs

func ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtr(v *ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneArgs) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrInput {
	return (*clickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrType)(v)
}

func (*clickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZone)(nil)).Elem()
}

func (i *clickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrType) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutputWithContext(context.Background())
}

func (i *clickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrType) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput)
}

// allows define custom zone name and will separate ClickHouse `Pods` between nodes, shortcut for `chi.spec.templates.podTemplates.spec.affinity.podAntiAffinity`
type ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZone)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutput) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutput() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutput) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutput) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput {
	return o.ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutputWithContext(context.Background())
}

func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutput) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZone) *ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZone {
		return &v
	}).(ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput)
}

// optional, if defined, allows select kubernetes nodes by label with `name` equal `key`
func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZone) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// optional, if defined, allows select kubernetes nodes by label with `value` in `values`
func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZone) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZone)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput) ToClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput) Elem() ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZone) ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZone {
		if v != nil {
			return *v
		}
		var ret ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZone
		return ret
	}).(ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutput)
}

// optional, if defined, allows select kubernetes nodes by label with `name` equal `key`
func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZone) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// optional, if defined, allows select kubernetes nodes by label with `value` in `values`
func (o ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZone) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesServiceTemplates struct {
	// allows define format for generated `Service` name,
	// look to https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatesservicetemplates
	// for details about available template variables"
	GenerateName *string `pulumi:"generateName"`
	// allows pass standard object's metadata from template to Service
	// Could be use for define specificly for Cloud Provider metadata which impact to behavior of service
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata map[string]interface{} `pulumi:"metadata"`
	// template name, could use to link inside
	// chi-level `chi.spec.defaults.templates.serviceTemplate`
	// cluster-level `chi.spec.configuration.clusters.templates.clusterServiceTemplate`
	// shard-level `chi.spec.configuration.clusters.layout.shards.temlates.shardServiceTemplate`
	// replica-level `chi.spec.configuration.clusters.layout.replicas.templates.replicaServiceTemplate` or `chi.spec.configuration.clusters.layout.shards.replicas.replicaServiceTemplate`
	Name *string `pulumi:"name"`
	// describe behavior of generated Service
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/
	Spec map[string]interface{} `pulumi:"spec"`
}

// ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesInput is an input type that accepts ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArgs and ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesInput` via:
//
//	ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArgs{...}
type ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutput() ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutput
	ToClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutput
}

type ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArgs struct {
	// allows define format for generated `Service` name,
	// look to https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatesservicetemplates
	// for details about available template variables"
	GenerateName pulumi.StringPtrInput `pulumi:"generateName"`
	// allows pass standard object's metadata from template to Service
	// Could be use for define specificly for Cloud Provider metadata which impact to behavior of service
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata pulumi.MapInput `pulumi:"metadata"`
	// template name, could use to link inside
	// chi-level `chi.spec.defaults.templates.serviceTemplate`
	// cluster-level `chi.spec.configuration.clusters.templates.clusterServiceTemplate`
	// shard-level `chi.spec.configuration.clusters.layout.shards.temlates.shardServiceTemplate`
	// replica-level `chi.spec.configuration.clusters.layout.replicas.templates.replicaServiceTemplate` or `chi.spec.configuration.clusters.layout.shards.replicas.replicaServiceTemplate`
	Name pulumi.StringPtrInput `pulumi:"name"`
	// describe behavior of generated Service
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/
	Spec pulumi.MapInput `pulumi:"spec"`
}

func (ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesServiceTemplates)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArgs) ToClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutput() ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArgs) ToClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutput)
}

// ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayInput is an input type that accepts ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArray and ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayInput` via:
//
//	ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArray{ ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArgs{...} }
type ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutput() ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutput
	ToClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutput
}

type ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArray []ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesInput

func (ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClickHouseKeeperInstallationSpecTemplatesServiceTemplates)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArray) ToClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutput() ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArray) ToClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesServiceTemplates)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutput) ToClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutput() ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutput) ToClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutput {
	return o
}

// allows define format for generated `Service` name,
// look to https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatesservicetemplates
// for details about available template variables"
func (o ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutput) GenerateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesServiceTemplates) *string { return v.GenerateName }).(pulumi.StringPtrOutput)
}

// allows pass standard object's metadata from template to Service
// Could be use for define specificly for Cloud Provider metadata which impact to behavior of service
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesServiceTemplates) map[string]interface{} {
		return v.Metadata
	}).(pulumi.MapOutput)
}

// template name, could use to link inside
// chi-level `chi.spec.defaults.templates.serviceTemplate`
// cluster-level `chi.spec.configuration.clusters.templates.clusterServiceTemplate`
// shard-level `chi.spec.configuration.clusters.layout.shards.temlates.shardServiceTemplate`
// replica-level `chi.spec.configuration.clusters.layout.replicas.templates.replicaServiceTemplate` or `chi.spec.configuration.clusters.layout.shards.replicas.replicaServiceTemplate`
func (o ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesServiceTemplates) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// describe behavior of generated Service
// More info: https://kubernetes.io/docs/concepts/services-networking/service/
func (o ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutput) Spec() pulumi.MapOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesServiceTemplates) map[string]interface{} {
		return v.Spec
	}).(pulumi.MapOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClickHouseKeeperInstallationSpecTemplatesServiceTemplates)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutput) ToClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutput() ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutput) ToClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutput) Index(i pulumi.IntInput) ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClickHouseKeeperInstallationSpecTemplatesServiceTemplates {
		return vs[0].([]ClickHouseKeeperInstallationSpecTemplatesServiceTemplates)[vs[1].(int)]
	}).(ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplates struct {
	// allows to pass standard object's metadata from template to PVC
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata map[string]interface{} `pulumi:"metadata"`
	// template name, could use to link inside
	// top-level `chi.spec.defaults.templates.dataVolumeClaimTemplate` or `chi.spec.defaults.templates.logVolumeClaimTemplate`,
	// cluster-level `chi.spec.configuration.clusters.templates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.templates.logVolumeClaimTemplate`,
	// shard-level `chi.spec.configuration.clusters.layout.shards.temlates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.layout.shards.temlates.logVolumeClaimTemplate`
	// replica-level `chi.spec.configuration.clusters.layout.replicas.templates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.layout.replicas.templates.logVolumeClaimTemplate`
	Name *string `pulumi:"name"`
	// defines `PVC` provisioner - be it StatefulSet or the Operator
	Provisioner *string `pulumi:"provisioner"`
	// defines behavior of `PVC` deletion.
	// `Delete` by default, if `Retain` specified then `PVC` will be kept when deleting StatefulSet
	ReclaimPolicy *string `pulumi:"reclaimPolicy"`
	// allows define all aspects of `PVC` resource
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims
	Spec map[string]interface{} `pulumi:"spec"`
}

// ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesInput is an input type that accepts ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArgs and ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesInput` via:
//
//	ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArgs{...}
type ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutput() ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutput
	ToClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutput
}

type ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArgs struct {
	// allows to pass standard object's metadata from template to PVC
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata pulumi.MapInput `pulumi:"metadata"`
	// template name, could use to link inside
	// top-level `chi.spec.defaults.templates.dataVolumeClaimTemplate` or `chi.spec.defaults.templates.logVolumeClaimTemplate`,
	// cluster-level `chi.spec.configuration.clusters.templates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.templates.logVolumeClaimTemplate`,
	// shard-level `chi.spec.configuration.clusters.layout.shards.temlates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.layout.shards.temlates.logVolumeClaimTemplate`
	// replica-level `chi.spec.configuration.clusters.layout.replicas.templates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.layout.replicas.templates.logVolumeClaimTemplate`
	Name pulumi.StringPtrInput `pulumi:"name"`
	// defines `PVC` provisioner - be it StatefulSet or the Operator
	Provisioner pulumi.StringPtrInput `pulumi:"provisioner"`
	// defines behavior of `PVC` deletion.
	// `Delete` by default, if `Retain` specified then `PVC` will be kept when deleting StatefulSet
	ReclaimPolicy pulumi.StringPtrInput `pulumi:"reclaimPolicy"`
	// allows define all aspects of `PVC` resource
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims
	Spec pulumi.MapInput `pulumi:"spec"`
}

func (ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplates)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArgs) ToClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutput() ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArgs) ToClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutput)
}

// ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayInput is an input type that accepts ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArray and ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayInput` via:
//
//	ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArray{ ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArgs{...} }
type ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutput() ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutput
	ToClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutputWithContext(context.Context) ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutput
}

type ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArray []ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesInput

func (ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplates)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArray) ToClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutput() ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutput {
	return i.ToClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArray) ToClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplates)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutput) ToClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutput() ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutput) ToClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutput {
	return o
}

// allows to pass standard object's metadata from template to PVC
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplates) map[string]interface{} {
		return v.Metadata
	}).(pulumi.MapOutput)
}

// template name, could use to link inside
// top-level `chi.spec.defaults.templates.dataVolumeClaimTemplate` or `chi.spec.defaults.templates.logVolumeClaimTemplate`,
// cluster-level `chi.spec.configuration.clusters.templates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.templates.logVolumeClaimTemplate`,
// shard-level `chi.spec.configuration.clusters.layout.shards.temlates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.layout.shards.temlates.logVolumeClaimTemplate`
// replica-level `chi.spec.configuration.clusters.layout.replicas.templates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.layout.replicas.templates.logVolumeClaimTemplate`
func (o ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplates) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// defines `PVC` provisioner - be it StatefulSet or the Operator
func (o ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutput) Provisioner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplates) *string { return v.Provisioner }).(pulumi.StringPtrOutput)
}

// defines behavior of `PVC` deletion.
// `Delete` by default, if `Retain` specified then `PVC` will be kept when deleting StatefulSet
func (o ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutput) ReclaimPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplates) *string { return v.ReclaimPolicy }).(pulumi.StringPtrOutput)
}

// allows define all aspects of `PVC` resource
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims
func (o ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutput) Spec() pulumi.MapOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplates) map[string]interface{} {
		return v.Spec
	}).(pulumi.MapOutput)
}

type ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplates)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutput) ToClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutput() ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutput) ToClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutput {
	return o
}

func (o ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutput) Index(i pulumi.IntInput) ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplates {
		return vs[0].([]ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplates)[vs[1].(int)]
	}).(ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutput)
}

// Status contains many fields like a normalized configuration, clickhouse-operator version, current action and all applied action list, current taskID and all applied taskIDs and other
type ClickHouseKeeperInstallationStatus struct {
	// Action
	Action *string `pulumi:"action"`
	// Actions
	Actions []string `pulumi:"actions"`
	// Operator git commit SHA
	ChopCommit *string `pulumi:"chop-commit"`
	// Operator build date
	ChopDate *string `pulumi:"chop-date"`
	// IP address of the operator's pod which managed this resource
	ChopIp *string `pulumi:"chop-ip"`
	// Operator version
	ChopVersion *string `pulumi:"chop-version"`
	// Clusters count
	Clusters *int `pulumi:"clusters"`
	// Endpoint
	Endpoint *string `pulumi:"endpoint"`
	// All endpoints
	Endpoints []string `pulumi:"endpoints"`
	// Last error
	Error *string `pulumi:"error"`
	// Errors
	Errors []string `pulumi:"errors"`
	// Pods FQDNs
	Fqdns []string `pulumi:"fqdns"`
	// Generation
	Generation *int `pulumi:"generation"`
	// Hosts count
	Hosts *int `pulumi:"hosts"`
	// Added Hosts count
	HostsAdded *int `pulumi:"hostsAdded"`
	// Completed Hosts count
	HostsCompleted *int `pulumi:"hostsCompleted"`
	// About to delete Hosts count
	HostsDelete *int `pulumi:"hostsDelete"`
	// Deleted Hosts count
	HostsDeleted *int `pulumi:"hostsDeleted"`
	// Unchanged Hosts count
	HostsUnchanged *int `pulumi:"hostsUnchanged"`
	// Updated Hosts count
	HostsUpdated *int `pulumi:"hostsUpdated"`
	// List of hosts with replica caught up
	HostsWithReplicaCaughtUp []string `pulumi:"hostsWithReplicaCaughtUp"`
	// List of hosts with tables created by the operator
	HostsWithTablesCreated []string `pulumi:"hostsWithTablesCreated"`
	// Normalized resource requested
	Normalized map[string]interface{} `pulumi:"normalized"`
	// Normalized resource completed
	NormalizedCompleted map[string]interface{} `pulumi:"normalizedCompleted"`
	// Pod IPs
	PodIps []string `pulumi:"pod-ips"`
	// Pods
	Pods []string `pulumi:"pods"`
	// Replicas count
	Replicas *int `pulumi:"replicas"`
	// Shards count
	Shards *int `pulumi:"shards"`
	// Status
	Status *string `pulumi:"status"`
	// Current task id
	TaskID *string `pulumi:"taskID"`
	// Completed task ids
	TaskIDsCompleted []string `pulumi:"taskIDsCompleted"`
	// Started task ids
	TaskIDsStarted []string `pulumi:"taskIDsStarted"`
	// List of templates used to build this CHI
	UsedTemplates map[string]interface{} `pulumi:"usedTemplates"`
}

// ClickHouseKeeperInstallationStatusInput is an input type that accepts ClickHouseKeeperInstallationStatusArgs and ClickHouseKeeperInstallationStatusOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationStatusInput` via:
//
//	ClickHouseKeeperInstallationStatusArgs{...}
type ClickHouseKeeperInstallationStatusInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationStatusOutput() ClickHouseKeeperInstallationStatusOutput
	ToClickHouseKeeperInstallationStatusOutputWithContext(context.Context) ClickHouseKeeperInstallationStatusOutput
}

// Status contains many fields like a normalized configuration, clickhouse-operator version, current action and all applied action list, current taskID and all applied taskIDs and other
type ClickHouseKeeperInstallationStatusArgs struct {
	// Action
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Actions
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// Operator git commit SHA
	ChopCommit pulumi.StringPtrInput `pulumi:"chop-commit"`
	// Operator build date
	ChopDate pulumi.StringPtrInput `pulumi:"chop-date"`
	// IP address of the operator's pod which managed this resource
	ChopIp pulumi.StringPtrInput `pulumi:"chop-ip"`
	// Operator version
	ChopVersion pulumi.StringPtrInput `pulumi:"chop-version"`
	// Clusters count
	Clusters pulumi.IntPtrInput `pulumi:"clusters"`
	// Endpoint
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// All endpoints
	Endpoints pulumi.StringArrayInput `pulumi:"endpoints"`
	// Last error
	Error pulumi.StringPtrInput `pulumi:"error"`
	// Errors
	Errors pulumi.StringArrayInput `pulumi:"errors"`
	// Pods FQDNs
	Fqdns pulumi.StringArrayInput `pulumi:"fqdns"`
	// Generation
	Generation pulumi.IntPtrInput `pulumi:"generation"`
	// Hosts count
	Hosts pulumi.IntPtrInput `pulumi:"hosts"`
	// Added Hosts count
	HostsAdded pulumi.IntPtrInput `pulumi:"hostsAdded"`
	// Completed Hosts count
	HostsCompleted pulumi.IntPtrInput `pulumi:"hostsCompleted"`
	// About to delete Hosts count
	HostsDelete pulumi.IntPtrInput `pulumi:"hostsDelete"`
	// Deleted Hosts count
	HostsDeleted pulumi.IntPtrInput `pulumi:"hostsDeleted"`
	// Unchanged Hosts count
	HostsUnchanged pulumi.IntPtrInput `pulumi:"hostsUnchanged"`
	// Updated Hosts count
	HostsUpdated pulumi.IntPtrInput `pulumi:"hostsUpdated"`
	// List of hosts with replica caught up
	HostsWithReplicaCaughtUp pulumi.StringArrayInput `pulumi:"hostsWithReplicaCaughtUp"`
	// List of hosts with tables created by the operator
	HostsWithTablesCreated pulumi.StringArrayInput `pulumi:"hostsWithTablesCreated"`
	// Normalized resource requested
	Normalized pulumi.MapInput `pulumi:"normalized"`
	// Normalized resource completed
	NormalizedCompleted pulumi.MapInput `pulumi:"normalizedCompleted"`
	// Pod IPs
	PodIps pulumi.StringArrayInput `pulumi:"pod-ips"`
	// Pods
	Pods pulumi.StringArrayInput `pulumi:"pods"`
	// Replicas count
	Replicas pulumi.IntPtrInput `pulumi:"replicas"`
	// Shards count
	Shards pulumi.IntPtrInput `pulumi:"shards"`
	// Status
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Current task id
	TaskID pulumi.StringPtrInput `pulumi:"taskID"`
	// Completed task ids
	TaskIDsCompleted pulumi.StringArrayInput `pulumi:"taskIDsCompleted"`
	// Started task ids
	TaskIDsStarted pulumi.StringArrayInput `pulumi:"taskIDsStarted"`
	// List of templates used to build this CHI
	UsedTemplates pulumi.MapInput `pulumi:"usedTemplates"`
}

func (ClickHouseKeeperInstallationStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationStatus)(nil)).Elem()
}

func (i ClickHouseKeeperInstallationStatusArgs) ToClickHouseKeeperInstallationStatusOutput() ClickHouseKeeperInstallationStatusOutput {
	return i.ToClickHouseKeeperInstallationStatusOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationStatusArgs) ToClickHouseKeeperInstallationStatusOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationStatusOutput)
}

func (i ClickHouseKeeperInstallationStatusArgs) ToClickHouseKeeperInstallationStatusPtrOutput() ClickHouseKeeperInstallationStatusPtrOutput {
	return i.ToClickHouseKeeperInstallationStatusPtrOutputWithContext(context.Background())
}

func (i ClickHouseKeeperInstallationStatusArgs) ToClickHouseKeeperInstallationStatusPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationStatusOutput).ToClickHouseKeeperInstallationStatusPtrOutputWithContext(ctx)
}

// ClickHouseKeeperInstallationStatusPtrInput is an input type that accepts ClickHouseKeeperInstallationStatusArgs, ClickHouseKeeperInstallationStatusPtr and ClickHouseKeeperInstallationStatusPtrOutput values.
// You can construct a concrete instance of `ClickHouseKeeperInstallationStatusPtrInput` via:
//
//	        ClickHouseKeeperInstallationStatusArgs{...}
//
//	or:
//
//	        nil
type ClickHouseKeeperInstallationStatusPtrInput interface {
	pulumi.Input

	ToClickHouseKeeperInstallationStatusPtrOutput() ClickHouseKeeperInstallationStatusPtrOutput
	ToClickHouseKeeperInstallationStatusPtrOutputWithContext(context.Context) ClickHouseKeeperInstallationStatusPtrOutput
}

type clickHouseKeeperInstallationStatusPtrType ClickHouseKeeperInstallationStatusArgs

func ClickHouseKeeperInstallationStatusPtr(v *ClickHouseKeeperInstallationStatusArgs) ClickHouseKeeperInstallationStatusPtrInput {
	return (*clickHouseKeeperInstallationStatusPtrType)(v)
}

func (*clickHouseKeeperInstallationStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationStatus)(nil)).Elem()
}

func (i *clickHouseKeeperInstallationStatusPtrType) ToClickHouseKeeperInstallationStatusPtrOutput() ClickHouseKeeperInstallationStatusPtrOutput {
	return i.ToClickHouseKeeperInstallationStatusPtrOutputWithContext(context.Background())
}

func (i *clickHouseKeeperInstallationStatusPtrType) ToClickHouseKeeperInstallationStatusPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClickHouseKeeperInstallationStatusPtrOutput)
}

// Status contains many fields like a normalized configuration, clickhouse-operator version, current action and all applied action list, current taskID and all applied taskIDs and other
type ClickHouseKeeperInstallationStatusOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClickHouseKeeperInstallationStatus)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationStatusOutput) ToClickHouseKeeperInstallationStatusOutput() ClickHouseKeeperInstallationStatusOutput {
	return o
}

func (o ClickHouseKeeperInstallationStatusOutput) ToClickHouseKeeperInstallationStatusOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationStatusOutput {
	return o
}

func (o ClickHouseKeeperInstallationStatusOutput) ToClickHouseKeeperInstallationStatusPtrOutput() ClickHouseKeeperInstallationStatusPtrOutput {
	return o.ToClickHouseKeeperInstallationStatusPtrOutputWithContext(context.Background())
}

func (o ClickHouseKeeperInstallationStatusOutput) ToClickHouseKeeperInstallationStatusPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClickHouseKeeperInstallationStatus) *ClickHouseKeeperInstallationStatus {
		return &v
	}).(ClickHouseKeeperInstallationStatusPtrOutput)
}

// Action
func (o ClickHouseKeeperInstallationStatusOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Actions
func (o ClickHouseKeeperInstallationStatusOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// Operator git commit SHA
func (o ClickHouseKeeperInstallationStatusOutput) ChopCommit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) *string { return v.ChopCommit }).(pulumi.StringPtrOutput)
}

// Operator build date
func (o ClickHouseKeeperInstallationStatusOutput) ChopDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) *string { return v.ChopDate }).(pulumi.StringPtrOutput)
}

// IP address of the operator's pod which managed this resource
func (o ClickHouseKeeperInstallationStatusOutput) ChopIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) *string { return v.ChopIp }).(pulumi.StringPtrOutput)
}

// Operator version
func (o ClickHouseKeeperInstallationStatusOutput) ChopVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) *string { return v.ChopVersion }).(pulumi.StringPtrOutput)
}

// Clusters count
func (o ClickHouseKeeperInstallationStatusOutput) Clusters() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) *int { return v.Clusters }).(pulumi.IntPtrOutput)
}

// Endpoint
func (o ClickHouseKeeperInstallationStatusOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// All endpoints
func (o ClickHouseKeeperInstallationStatusOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) []string { return v.Endpoints }).(pulumi.StringArrayOutput)
}

// Last error
func (o ClickHouseKeeperInstallationStatusOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) *string { return v.Error }).(pulumi.StringPtrOutput)
}

// Errors
func (o ClickHouseKeeperInstallationStatusOutput) Errors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) []string { return v.Errors }).(pulumi.StringArrayOutput)
}

// Pods FQDNs
func (o ClickHouseKeeperInstallationStatusOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) []string { return v.Fqdns }).(pulumi.StringArrayOutput)
}

// Generation
func (o ClickHouseKeeperInstallationStatusOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) *int { return v.Generation }).(pulumi.IntPtrOutput)
}

// Hosts count
func (o ClickHouseKeeperInstallationStatusOutput) Hosts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) *int { return v.Hosts }).(pulumi.IntPtrOutput)
}

// Added Hosts count
func (o ClickHouseKeeperInstallationStatusOutput) HostsAdded() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) *int { return v.HostsAdded }).(pulumi.IntPtrOutput)
}

// Completed Hosts count
func (o ClickHouseKeeperInstallationStatusOutput) HostsCompleted() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) *int { return v.HostsCompleted }).(pulumi.IntPtrOutput)
}

// About to delete Hosts count
func (o ClickHouseKeeperInstallationStatusOutput) HostsDelete() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) *int { return v.HostsDelete }).(pulumi.IntPtrOutput)
}

// Deleted Hosts count
func (o ClickHouseKeeperInstallationStatusOutput) HostsDeleted() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) *int { return v.HostsDeleted }).(pulumi.IntPtrOutput)
}

// Unchanged Hosts count
func (o ClickHouseKeeperInstallationStatusOutput) HostsUnchanged() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) *int { return v.HostsUnchanged }).(pulumi.IntPtrOutput)
}

// Updated Hosts count
func (o ClickHouseKeeperInstallationStatusOutput) HostsUpdated() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) *int { return v.HostsUpdated }).(pulumi.IntPtrOutput)
}

// List of hosts with replica caught up
func (o ClickHouseKeeperInstallationStatusOutput) HostsWithReplicaCaughtUp() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) []string { return v.HostsWithReplicaCaughtUp }).(pulumi.StringArrayOutput)
}

// List of hosts with tables created by the operator
func (o ClickHouseKeeperInstallationStatusOutput) HostsWithTablesCreated() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) []string { return v.HostsWithTablesCreated }).(pulumi.StringArrayOutput)
}

// Normalized resource requested
func (o ClickHouseKeeperInstallationStatusOutput) Normalized() pulumi.MapOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) map[string]interface{} { return v.Normalized }).(pulumi.MapOutput)
}

// Normalized resource completed
func (o ClickHouseKeeperInstallationStatusOutput) NormalizedCompleted() pulumi.MapOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) map[string]interface{} { return v.NormalizedCompleted }).(pulumi.MapOutput)
}

// Pod IPs
func (o ClickHouseKeeperInstallationStatusOutput) PodIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) []string { return v.PodIps }).(pulumi.StringArrayOutput)
}

// Pods
func (o ClickHouseKeeperInstallationStatusOutput) Pods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) []string { return v.Pods }).(pulumi.StringArrayOutput)
}

// Replicas count
func (o ClickHouseKeeperInstallationStatusOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

// Shards count
func (o ClickHouseKeeperInstallationStatusOutput) Shards() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) *int { return v.Shards }).(pulumi.IntPtrOutput)
}

// Status
func (o ClickHouseKeeperInstallationStatusOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Current task id
func (o ClickHouseKeeperInstallationStatusOutput) TaskID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) *string { return v.TaskID }).(pulumi.StringPtrOutput)
}

// Completed task ids
func (o ClickHouseKeeperInstallationStatusOutput) TaskIDsCompleted() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) []string { return v.TaskIDsCompleted }).(pulumi.StringArrayOutput)
}

// Started task ids
func (o ClickHouseKeeperInstallationStatusOutput) TaskIDsStarted() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) []string { return v.TaskIDsStarted }).(pulumi.StringArrayOutput)
}

// List of templates used to build this CHI
func (o ClickHouseKeeperInstallationStatusOutput) UsedTemplates() pulumi.MapOutput {
	return o.ApplyT(func(v ClickHouseKeeperInstallationStatus) map[string]interface{} { return v.UsedTemplates }).(pulumi.MapOutput)
}

type ClickHouseKeeperInstallationStatusPtrOutput struct{ *pulumi.OutputState }

func (ClickHouseKeeperInstallationStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClickHouseKeeperInstallationStatus)(nil)).Elem()
}

func (o ClickHouseKeeperInstallationStatusPtrOutput) ToClickHouseKeeperInstallationStatusPtrOutput() ClickHouseKeeperInstallationStatusPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationStatusPtrOutput) ToClickHouseKeeperInstallationStatusPtrOutputWithContext(ctx context.Context) ClickHouseKeeperInstallationStatusPtrOutput {
	return o
}

func (o ClickHouseKeeperInstallationStatusPtrOutput) Elem() ClickHouseKeeperInstallationStatusOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) ClickHouseKeeperInstallationStatus {
		if v != nil {
			return *v
		}
		var ret ClickHouseKeeperInstallationStatus
		return ret
	}).(ClickHouseKeeperInstallationStatusOutput)
}

// Action
func (o ClickHouseKeeperInstallationStatusPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// Actions
func (o ClickHouseKeeperInstallationStatusPtrOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) []string {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(pulumi.StringArrayOutput)
}

// Operator git commit SHA
func (o ClickHouseKeeperInstallationStatusPtrOutput) ChopCommit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) *string {
		if v == nil {
			return nil
		}
		return v.ChopCommit
	}).(pulumi.StringPtrOutput)
}

// Operator build date
func (o ClickHouseKeeperInstallationStatusPtrOutput) ChopDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) *string {
		if v == nil {
			return nil
		}
		return v.ChopDate
	}).(pulumi.StringPtrOutput)
}

// IP address of the operator's pod which managed this resource
func (o ClickHouseKeeperInstallationStatusPtrOutput) ChopIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) *string {
		if v == nil {
			return nil
		}
		return v.ChopIp
	}).(pulumi.StringPtrOutput)
}

// Operator version
func (o ClickHouseKeeperInstallationStatusPtrOutput) ChopVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) *string {
		if v == nil {
			return nil
		}
		return v.ChopVersion
	}).(pulumi.StringPtrOutput)
}

// Clusters count
func (o ClickHouseKeeperInstallationStatusPtrOutput) Clusters() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) *int {
		if v == nil {
			return nil
		}
		return v.Clusters
	}).(pulumi.IntPtrOutput)
}

// Endpoint
func (o ClickHouseKeeperInstallationStatusPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// All endpoints
func (o ClickHouseKeeperInstallationStatusPtrOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) []string {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(pulumi.StringArrayOutput)
}

// Last error
func (o ClickHouseKeeperInstallationStatusPtrOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) *string {
		if v == nil {
			return nil
		}
		return v.Error
	}).(pulumi.StringPtrOutput)
}

// Errors
func (o ClickHouseKeeperInstallationStatusPtrOutput) Errors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) []string {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(pulumi.StringArrayOutput)
}

// Pods FQDNs
func (o ClickHouseKeeperInstallationStatusPtrOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) []string {
		if v == nil {
			return nil
		}
		return v.Fqdns
	}).(pulumi.StringArrayOutput)
}

// Generation
func (o ClickHouseKeeperInstallationStatusPtrOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) *int {
		if v == nil {
			return nil
		}
		return v.Generation
	}).(pulumi.IntPtrOutput)
}

// Hosts count
func (o ClickHouseKeeperInstallationStatusPtrOutput) Hosts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) *int {
		if v == nil {
			return nil
		}
		return v.Hosts
	}).(pulumi.IntPtrOutput)
}

// Added Hosts count
func (o ClickHouseKeeperInstallationStatusPtrOutput) HostsAdded() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) *int {
		if v == nil {
			return nil
		}
		return v.HostsAdded
	}).(pulumi.IntPtrOutput)
}

// Completed Hosts count
func (o ClickHouseKeeperInstallationStatusPtrOutput) HostsCompleted() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) *int {
		if v == nil {
			return nil
		}
		return v.HostsCompleted
	}).(pulumi.IntPtrOutput)
}

// About to delete Hosts count
func (o ClickHouseKeeperInstallationStatusPtrOutput) HostsDelete() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) *int {
		if v == nil {
			return nil
		}
		return v.HostsDelete
	}).(pulumi.IntPtrOutput)
}

// Deleted Hosts count
func (o ClickHouseKeeperInstallationStatusPtrOutput) HostsDeleted() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) *int {
		if v == nil {
			return nil
		}
		return v.HostsDeleted
	}).(pulumi.IntPtrOutput)
}

// Unchanged Hosts count
func (o ClickHouseKeeperInstallationStatusPtrOutput) HostsUnchanged() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) *int {
		if v == nil {
			return nil
		}
		return v.HostsUnchanged
	}).(pulumi.IntPtrOutput)
}

// Updated Hosts count
func (o ClickHouseKeeperInstallationStatusPtrOutput) HostsUpdated() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) *int {
		if v == nil {
			return nil
		}
		return v.HostsUpdated
	}).(pulumi.IntPtrOutput)
}

// List of hosts with replica caught up
func (o ClickHouseKeeperInstallationStatusPtrOutput) HostsWithReplicaCaughtUp() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) []string {
		if v == nil {
			return nil
		}
		return v.HostsWithReplicaCaughtUp
	}).(pulumi.StringArrayOutput)
}

// List of hosts with tables created by the operator
func (o ClickHouseKeeperInstallationStatusPtrOutput) HostsWithTablesCreated() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) []string {
		if v == nil {
			return nil
		}
		return v.HostsWithTablesCreated
	}).(pulumi.StringArrayOutput)
}

// Normalized resource requested
func (o ClickHouseKeeperInstallationStatusPtrOutput) Normalized() pulumi.MapOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Normalized
	}).(pulumi.MapOutput)
}

// Normalized resource completed
func (o ClickHouseKeeperInstallationStatusPtrOutput) NormalizedCompleted() pulumi.MapOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.NormalizedCompleted
	}).(pulumi.MapOutput)
}

// Pod IPs
func (o ClickHouseKeeperInstallationStatusPtrOutput) PodIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) []string {
		if v == nil {
			return nil
		}
		return v.PodIps
	}).(pulumi.StringArrayOutput)
}

// Pods
func (o ClickHouseKeeperInstallationStatusPtrOutput) Pods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) []string {
		if v == nil {
			return nil
		}
		return v.Pods
	}).(pulumi.StringArrayOutput)
}

// Replicas count
func (o ClickHouseKeeperInstallationStatusPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

// Shards count
func (o ClickHouseKeeperInstallationStatusPtrOutput) Shards() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) *int {
		if v == nil {
			return nil
		}
		return v.Shards
	}).(pulumi.IntPtrOutput)
}

// Status
func (o ClickHouseKeeperInstallationStatusPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Current task id
func (o ClickHouseKeeperInstallationStatusPtrOutput) TaskID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) *string {
		if v == nil {
			return nil
		}
		return v.TaskID
	}).(pulumi.StringPtrOutput)
}

// Completed task ids
func (o ClickHouseKeeperInstallationStatusPtrOutput) TaskIDsCompleted() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) []string {
		if v == nil {
			return nil
		}
		return v.TaskIDsCompleted
	}).(pulumi.StringArrayOutput)
}

// Started task ids
func (o ClickHouseKeeperInstallationStatusPtrOutput) TaskIDsStarted() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) []string {
		if v == nil {
			return nil
		}
		return v.TaskIDsStarted
	}).(pulumi.StringArrayOutput)
}

// List of templates used to build this CHI
func (o ClickHouseKeeperInstallationStatusPtrOutput) UsedTemplates() pulumi.MapOutput {
	return o.ApplyT(func(v *ClickHouseKeeperInstallationStatus) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.UsedTemplates
	}).(pulumi.MapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecPtrInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationPtrInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecConfigurationClustersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersArrayInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecConfigurationClustersArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersLayoutInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecConfigurationClustersLayoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecConfigurationClustersLayoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecDefaultsInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecDefaultsPtrInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecDefaultsDistributedDdlInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecDefaultsDistributedDdlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecDefaultsDistributedDdlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecDefaultsStorageManagementInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecDefaultsStorageManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecDefaultsStorageManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecDefaultsTemplatesInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecDefaultsTemplatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecDefaultsTemplatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecReconcilingInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecReconcilingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecReconcilingPtrInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecReconcilingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecReconcilingCleanupInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecReconcilingCleanupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecReconcilingCleanupPtrInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecReconcilingCleanupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecTemplatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesPtrInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecTemplatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesHostTemplatesInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesPodTemplatesInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayInput)(nil)).Elem(), ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationStatusInput)(nil)).Elem(), ClickHouseKeeperInstallationStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClickHouseKeeperInstallationStatusPtrInput)(nil)).Elem(), ClickHouseKeeperInstallationStatusArgs{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecPtrOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecConfigurationOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecConfigurationClustersOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecConfigurationClustersArrayOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutPtrOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasArrayOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsArrayOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasShardsTemplatesPtrOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecConfigurationClustersLayoutReplicasTemplatesPtrOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecConfigurationClustersTemplatesPtrOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecDefaultsOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecDefaultsPtrOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecDefaultsDistributedDdlOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecDefaultsDistributedDdlPtrOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecDefaultsStorageManagementOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecDefaultsStorageManagementPtrOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecDefaultsTemplatesOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecDefaultsTemplatesPtrOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecReconcilingOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecReconcilingPtrOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecReconcilingCleanupOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecReconcilingCleanupPtrOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecReconcilingCleanupReconcileFailedObjectsPtrOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecReconcilingCleanupUnknownObjectsPtrOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecTemplatesOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecTemplatesPtrOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesArrayOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesPortDistributionArrayOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecPtrOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecTemplatesHostTemplatesSpecTemplatesPtrOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecTemplatesPodTemplatesOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecTemplatesPodTemplatesArrayOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecTemplatesPodTemplatesPodDistributionArrayOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZoneOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecTemplatesPodTemplatesZonePtrOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecTemplatesServiceTemplatesArrayOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationSpecTemplatesVolumeClaimTemplatesArrayOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationStatusOutput{})
	pulumi.RegisterOutputType(ClickHouseKeeperInstallationStatusPtrOutput{})
}
