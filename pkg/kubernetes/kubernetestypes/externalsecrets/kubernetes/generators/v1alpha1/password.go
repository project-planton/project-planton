// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Password generates a random password based on the
// configuration parameters in spec.
// You can specify the length, characterset and other attributes.
type Password struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput `pulumi:"metadata"`
	Spec     PasswordSpecOutput      `pulumi:"spec"`
}

// NewPassword registers a new resource with the given unique name, arguments, and options.
func NewPassword(ctx *pulumi.Context,
	name string, args *PasswordArgs, opts ...pulumi.ResourceOption) (*Password, error) {
	if args == nil {
		args = &PasswordArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("generators.external-secrets.io/v1alpha1")
	args.Kind = pulumi.StringPtr("Password")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Password
	err := ctx.RegisterResource("kubernetes:generators.external-secrets.io/v1alpha1:Password", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPassword gets an existing Password resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPassword(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PasswordState, opts ...pulumi.ResourceOption) (*Password, error) {
	var resource Password
	err := ctx.ReadResource("kubernetes:generators.external-secrets.io/v1alpha1:Password", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Password resources.
type passwordState struct {
}

type PasswordState struct {
}

func (PasswordState) ElementType() reflect.Type {
	return reflect.TypeOf((*passwordState)(nil)).Elem()
}

type passwordArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *PasswordSpec      `pulumi:"spec"`
}

// The set of arguments for constructing a Password resource.
type PasswordArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     PasswordSpecPtrInput
}

func (PasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*passwordArgs)(nil)).Elem()
}

type PasswordInput interface {
	pulumi.Input

	ToPasswordOutput() PasswordOutput
	ToPasswordOutputWithContext(ctx context.Context) PasswordOutput
}

func (*Password) ElementType() reflect.Type {
	return reflect.TypeOf((**Password)(nil)).Elem()
}

func (i *Password) ToPasswordOutput() PasswordOutput {
	return i.ToPasswordOutputWithContext(context.Background())
}

func (i *Password) ToPasswordOutputWithContext(ctx context.Context) PasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PasswordOutput)
}

// PasswordArrayInput is an input type that accepts PasswordArray and PasswordArrayOutput values.
// You can construct a concrete instance of `PasswordArrayInput` via:
//
//	PasswordArray{ PasswordArgs{...} }
type PasswordArrayInput interface {
	pulumi.Input

	ToPasswordArrayOutput() PasswordArrayOutput
	ToPasswordArrayOutputWithContext(context.Context) PasswordArrayOutput
}

type PasswordArray []PasswordInput

func (PasswordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Password)(nil)).Elem()
}

func (i PasswordArray) ToPasswordArrayOutput() PasswordArrayOutput {
	return i.ToPasswordArrayOutputWithContext(context.Background())
}

func (i PasswordArray) ToPasswordArrayOutputWithContext(ctx context.Context) PasswordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PasswordArrayOutput)
}

// PasswordMapInput is an input type that accepts PasswordMap and PasswordMapOutput values.
// You can construct a concrete instance of `PasswordMapInput` via:
//
//	PasswordMap{ "key": PasswordArgs{...} }
type PasswordMapInput interface {
	pulumi.Input

	ToPasswordMapOutput() PasswordMapOutput
	ToPasswordMapOutputWithContext(context.Context) PasswordMapOutput
}

type PasswordMap map[string]PasswordInput

func (PasswordMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Password)(nil)).Elem()
}

func (i PasswordMap) ToPasswordMapOutput() PasswordMapOutput {
	return i.ToPasswordMapOutputWithContext(context.Background())
}

func (i PasswordMap) ToPasswordMapOutputWithContext(ctx context.Context) PasswordMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PasswordMapOutput)
}

type PasswordOutput struct{ *pulumi.OutputState }

func (PasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Password)(nil)).Elem()
}

func (o PasswordOutput) ToPasswordOutput() PasswordOutput {
	return o
}

func (o PasswordOutput) ToPasswordOutputWithContext(ctx context.Context) PasswordOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PasswordOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Password) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PasswordOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *Password) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PasswordOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *Password) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o PasswordOutput) Spec() PasswordSpecOutput {
	return o.ApplyT(func(v *Password) PasswordSpecOutput { return v.Spec }).(PasswordSpecOutput)
}

type PasswordArrayOutput struct{ *pulumi.OutputState }

func (PasswordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Password)(nil)).Elem()
}

func (o PasswordArrayOutput) ToPasswordArrayOutput() PasswordArrayOutput {
	return o
}

func (o PasswordArrayOutput) ToPasswordArrayOutputWithContext(ctx context.Context) PasswordArrayOutput {
	return o
}

func (o PasswordArrayOutput) Index(i pulumi.IntInput) PasswordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Password {
		return vs[0].([]*Password)[vs[1].(int)]
	}).(PasswordOutput)
}

type PasswordMapOutput struct{ *pulumi.OutputState }

func (PasswordMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Password)(nil)).Elem()
}

func (o PasswordMapOutput) ToPasswordMapOutput() PasswordMapOutput {
	return o
}

func (o PasswordMapOutput) ToPasswordMapOutputWithContext(ctx context.Context) PasswordMapOutput {
	return o
}

func (o PasswordMapOutput) MapIndex(k pulumi.StringInput) PasswordOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Password {
		return vs[0].(map[string]*Password)[vs[1].(string)]
	}).(PasswordOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PasswordInput)(nil)).Elem(), &Password{})
	pulumi.RegisterInputType(reflect.TypeOf((*PasswordArrayInput)(nil)).Elem(), PasswordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PasswordMapInput)(nil)).Elem(), PasswordMap{})
	pulumi.RegisterOutputType(PasswordOutput{})
	pulumi.RegisterOutputType(PasswordArrayOutput{})
	pulumi.RegisterOutputType(PasswordMapOutput{})
}
