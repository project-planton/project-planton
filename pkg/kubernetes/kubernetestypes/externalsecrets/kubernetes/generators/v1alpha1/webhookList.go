// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// WebhookList is a list of Webhook
type WebhookList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of webhooks. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items WebhookTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewWebhookList registers a new resource with the given unique name, arguments, and options.
func NewWebhookList(ctx *pulumi.Context,
	name string, args *WebhookListArgs, opts ...pulumi.ResourceOption) (*WebhookList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("generators.external-secrets.io/v1alpha1")
	args.Kind = pulumi.StringPtr("WebhookList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource WebhookList
	err := ctx.RegisterResource("kubernetes:generators.external-secrets.io/v1alpha1:WebhookList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebhookList gets an existing WebhookList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebhookList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebhookListState, opts ...pulumi.ResourceOption) (*WebhookList, error) {
	var resource WebhookList
	err := ctx.ReadResource("kubernetes:generators.external-secrets.io/v1alpha1:WebhookList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebhookList resources.
type webhookListState struct {
}

type WebhookListState struct {
}

func (WebhookListState) ElementType() reflect.Type {
	return reflect.TypeOf((*webhookListState)(nil)).Elem()
}

type webhookListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of webhooks. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []WebhookType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a WebhookList resource.
type WebhookListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of webhooks. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items WebhookTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (WebhookListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webhookListArgs)(nil)).Elem()
}

type WebhookListInput interface {
	pulumi.Input

	ToWebhookListOutput() WebhookListOutput
	ToWebhookListOutputWithContext(ctx context.Context) WebhookListOutput
}

func (*WebhookList) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookList)(nil)).Elem()
}

func (i *WebhookList) ToWebhookListOutput() WebhookListOutput {
	return i.ToWebhookListOutputWithContext(context.Background())
}

func (i *WebhookList) ToWebhookListOutputWithContext(ctx context.Context) WebhookListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookListOutput)
}

// WebhookListArrayInput is an input type that accepts WebhookListArray and WebhookListArrayOutput values.
// You can construct a concrete instance of `WebhookListArrayInput` via:
//
//	WebhookListArray{ WebhookListArgs{...} }
type WebhookListArrayInput interface {
	pulumi.Input

	ToWebhookListArrayOutput() WebhookListArrayOutput
	ToWebhookListArrayOutputWithContext(context.Context) WebhookListArrayOutput
}

type WebhookListArray []WebhookListInput

func (WebhookListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebhookList)(nil)).Elem()
}

func (i WebhookListArray) ToWebhookListArrayOutput() WebhookListArrayOutput {
	return i.ToWebhookListArrayOutputWithContext(context.Background())
}

func (i WebhookListArray) ToWebhookListArrayOutputWithContext(ctx context.Context) WebhookListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookListArrayOutput)
}

// WebhookListMapInput is an input type that accepts WebhookListMap and WebhookListMapOutput values.
// You can construct a concrete instance of `WebhookListMapInput` via:
//
//	WebhookListMap{ "key": WebhookListArgs{...} }
type WebhookListMapInput interface {
	pulumi.Input

	ToWebhookListMapOutput() WebhookListMapOutput
	ToWebhookListMapOutputWithContext(context.Context) WebhookListMapOutput
}

type WebhookListMap map[string]WebhookListInput

func (WebhookListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebhookList)(nil)).Elem()
}

func (i WebhookListMap) ToWebhookListMapOutput() WebhookListMapOutput {
	return i.ToWebhookListMapOutputWithContext(context.Background())
}

func (i WebhookListMap) ToWebhookListMapOutputWithContext(ctx context.Context) WebhookListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookListMapOutput)
}

type WebhookListOutput struct{ *pulumi.OutputState }

func (WebhookListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookList)(nil)).Elem()
}

func (o WebhookListOutput) ToWebhookListOutput() WebhookListOutput {
	return o
}

func (o WebhookListOutput) ToWebhookListOutputWithContext(ctx context.Context) WebhookListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o WebhookListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *WebhookList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of webhooks. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o WebhookListOutput) Items() WebhookTypeArrayOutput {
	return o.ApplyT(func(v *WebhookList) WebhookTypeArrayOutput { return v.Items }).(WebhookTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o WebhookListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *WebhookList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o WebhookListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *WebhookList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type WebhookListArrayOutput struct{ *pulumi.OutputState }

func (WebhookListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebhookList)(nil)).Elem()
}

func (o WebhookListArrayOutput) ToWebhookListArrayOutput() WebhookListArrayOutput {
	return o
}

func (o WebhookListArrayOutput) ToWebhookListArrayOutputWithContext(ctx context.Context) WebhookListArrayOutput {
	return o
}

func (o WebhookListArrayOutput) Index(i pulumi.IntInput) WebhookListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebhookList {
		return vs[0].([]*WebhookList)[vs[1].(int)]
	}).(WebhookListOutput)
}

type WebhookListMapOutput struct{ *pulumi.OutputState }

func (WebhookListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebhookList)(nil)).Elem()
}

func (o WebhookListMapOutput) ToWebhookListMapOutput() WebhookListMapOutput {
	return o
}

func (o WebhookListMapOutput) ToWebhookListMapOutputWithContext(ctx context.Context) WebhookListMapOutput {
	return o
}

func (o WebhookListMapOutput) MapIndex(k pulumi.StringInput) WebhookListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebhookList {
		return vs[0].(map[string]*WebhookList)[vs[1].(string)]
	}).(WebhookListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookListInput)(nil)).Elem(), &WebhookList{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookListArrayInput)(nil)).Elem(), WebhookListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookListMapInput)(nil)).Elem(), WebhookListMap{})
	pulumi.RegisterOutputType(WebhookListOutput{})
	pulumi.RegisterOutputType(WebhookListArrayOutput{})
	pulumi.RegisterOutputType(WebhookListMapOutput{})
}
