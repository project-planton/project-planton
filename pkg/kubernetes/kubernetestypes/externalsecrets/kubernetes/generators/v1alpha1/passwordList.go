// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// PasswordList is a list of Password
type PasswordList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of passwords. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PasswordTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewPasswordList registers a new resource with the given unique name, arguments, and options.
func NewPasswordList(ctx *pulumi.Context,
	name string, args *PasswordListArgs, opts ...pulumi.ResourceOption) (*PasswordList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("generators.external-secrets.io/v1alpha1")
	args.Kind = pulumi.StringPtr("PasswordList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PasswordList
	err := ctx.RegisterResource("kubernetes:generators.external-secrets.io/v1alpha1:PasswordList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPasswordList gets an existing PasswordList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPasswordList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PasswordListState, opts ...pulumi.ResourceOption) (*PasswordList, error) {
	var resource PasswordList
	err := ctx.ReadResource("kubernetes:generators.external-secrets.io/v1alpha1:PasswordList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PasswordList resources.
type passwordListState struct {
}

type PasswordListState struct {
}

func (PasswordListState) ElementType() reflect.Type {
	return reflect.TypeOf((*passwordListState)(nil)).Elem()
}

type passwordListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of passwords. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []PasswordType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a PasswordList resource.
type PasswordListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of passwords. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PasswordTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (PasswordListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*passwordListArgs)(nil)).Elem()
}

type PasswordListInput interface {
	pulumi.Input

	ToPasswordListOutput() PasswordListOutput
	ToPasswordListOutputWithContext(ctx context.Context) PasswordListOutput
}

func (*PasswordList) ElementType() reflect.Type {
	return reflect.TypeOf((**PasswordList)(nil)).Elem()
}

func (i *PasswordList) ToPasswordListOutput() PasswordListOutput {
	return i.ToPasswordListOutputWithContext(context.Background())
}

func (i *PasswordList) ToPasswordListOutputWithContext(ctx context.Context) PasswordListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PasswordListOutput)
}

// PasswordListArrayInput is an input type that accepts PasswordListArray and PasswordListArrayOutput values.
// You can construct a concrete instance of `PasswordListArrayInput` via:
//
//	PasswordListArray{ PasswordListArgs{...} }
type PasswordListArrayInput interface {
	pulumi.Input

	ToPasswordListArrayOutput() PasswordListArrayOutput
	ToPasswordListArrayOutputWithContext(context.Context) PasswordListArrayOutput
}

type PasswordListArray []PasswordListInput

func (PasswordListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PasswordList)(nil)).Elem()
}

func (i PasswordListArray) ToPasswordListArrayOutput() PasswordListArrayOutput {
	return i.ToPasswordListArrayOutputWithContext(context.Background())
}

func (i PasswordListArray) ToPasswordListArrayOutputWithContext(ctx context.Context) PasswordListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PasswordListArrayOutput)
}

// PasswordListMapInput is an input type that accepts PasswordListMap and PasswordListMapOutput values.
// You can construct a concrete instance of `PasswordListMapInput` via:
//
//	PasswordListMap{ "key": PasswordListArgs{...} }
type PasswordListMapInput interface {
	pulumi.Input

	ToPasswordListMapOutput() PasswordListMapOutput
	ToPasswordListMapOutputWithContext(context.Context) PasswordListMapOutput
}

type PasswordListMap map[string]PasswordListInput

func (PasswordListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PasswordList)(nil)).Elem()
}

func (i PasswordListMap) ToPasswordListMapOutput() PasswordListMapOutput {
	return i.ToPasswordListMapOutputWithContext(context.Background())
}

func (i PasswordListMap) ToPasswordListMapOutputWithContext(ctx context.Context) PasswordListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PasswordListMapOutput)
}

type PasswordListOutput struct{ *pulumi.OutputState }

func (PasswordListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PasswordList)(nil)).Elem()
}

func (o PasswordListOutput) ToPasswordListOutput() PasswordListOutput {
	return o
}

func (o PasswordListOutput) ToPasswordListOutputWithContext(ctx context.Context) PasswordListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PasswordListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *PasswordList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of passwords. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o PasswordListOutput) Items() PasswordTypeArrayOutput {
	return o.ApplyT(func(v *PasswordList) PasswordTypeArrayOutput { return v.Items }).(PasswordTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PasswordListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *PasswordList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PasswordListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *PasswordList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type PasswordListArrayOutput struct{ *pulumi.OutputState }

func (PasswordListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PasswordList)(nil)).Elem()
}

func (o PasswordListArrayOutput) ToPasswordListArrayOutput() PasswordListArrayOutput {
	return o
}

func (o PasswordListArrayOutput) ToPasswordListArrayOutputWithContext(ctx context.Context) PasswordListArrayOutput {
	return o
}

func (o PasswordListArrayOutput) Index(i pulumi.IntInput) PasswordListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PasswordList {
		return vs[0].([]*PasswordList)[vs[1].(int)]
	}).(PasswordListOutput)
}

type PasswordListMapOutput struct{ *pulumi.OutputState }

func (PasswordListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PasswordList)(nil)).Elem()
}

func (o PasswordListMapOutput) ToPasswordListMapOutput() PasswordListMapOutput {
	return o
}

func (o PasswordListMapOutput) ToPasswordListMapOutputWithContext(ctx context.Context) PasswordListMapOutput {
	return o
}

func (o PasswordListMapOutput) MapIndex(k pulumi.StringInput) PasswordListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PasswordList {
		return vs[0].(map[string]*PasswordList)[vs[1].(string)]
	}).(PasswordListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PasswordListInput)(nil)).Elem(), &PasswordList{})
	pulumi.RegisterInputType(reflect.TypeOf((*PasswordListArrayInput)(nil)).Elem(), PasswordListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PasswordListMapInput)(nil)).Elem(), PasswordListMap{})
	pulumi.RegisterOutputType(PasswordListOutput{})
	pulumi.RegisterOutputType(PasswordListArrayOutput{})
	pulumi.RegisterOutputType(PasswordListMapOutput{})
}
