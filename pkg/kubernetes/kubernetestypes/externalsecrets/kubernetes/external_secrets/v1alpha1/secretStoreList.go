// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// SecretStoreList is a list of SecretStore
type SecretStoreList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of secretstores. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items SecretStoreTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewSecretStoreList registers a new resource with the given unique name, arguments, and options.
func NewSecretStoreList(ctx *pulumi.Context,
	name string, args *SecretStoreListArgs, opts ...pulumi.ResourceOption) (*SecretStoreList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("external-secrets.io/v1alpha1")
	args.Kind = pulumi.StringPtr("SecretStoreList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource SecretStoreList
	err := ctx.RegisterResource("kubernetes:external-secrets.io/v1alpha1:SecretStoreList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecretStoreList gets an existing SecretStoreList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecretStoreList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecretStoreListState, opts ...pulumi.ResourceOption) (*SecretStoreList, error) {
	var resource SecretStoreList
	err := ctx.ReadResource("kubernetes:external-secrets.io/v1alpha1:SecretStoreList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecretStoreList resources.
type secretStoreListState struct {
}

type SecretStoreListState struct {
}

func (SecretStoreListState) ElementType() reflect.Type {
	return reflect.TypeOf((*secretStoreListState)(nil)).Elem()
}

type secretStoreListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of secretstores. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []SecretStoreType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a SecretStoreList resource.
type SecretStoreListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of secretstores. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items SecretStoreTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (SecretStoreListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secretStoreListArgs)(nil)).Elem()
}

type SecretStoreListInput interface {
	pulumi.Input

	ToSecretStoreListOutput() SecretStoreListOutput
	ToSecretStoreListOutputWithContext(ctx context.Context) SecretStoreListOutput
}

func (*SecretStoreList) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreList)(nil)).Elem()
}

func (i *SecretStoreList) ToSecretStoreListOutput() SecretStoreListOutput {
	return i.ToSecretStoreListOutputWithContext(context.Background())
}

func (i *SecretStoreList) ToSecretStoreListOutputWithContext(ctx context.Context) SecretStoreListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreListOutput)
}

// SecretStoreListArrayInput is an input type that accepts SecretStoreListArray and SecretStoreListArrayOutput values.
// You can construct a concrete instance of `SecretStoreListArrayInput` via:
//
//	SecretStoreListArray{ SecretStoreListArgs{...} }
type SecretStoreListArrayInput interface {
	pulumi.Input

	ToSecretStoreListArrayOutput() SecretStoreListArrayOutput
	ToSecretStoreListArrayOutputWithContext(context.Context) SecretStoreListArrayOutput
}

type SecretStoreListArray []SecretStoreListInput

func (SecretStoreListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecretStoreList)(nil)).Elem()
}

func (i SecretStoreListArray) ToSecretStoreListArrayOutput() SecretStoreListArrayOutput {
	return i.ToSecretStoreListArrayOutputWithContext(context.Background())
}

func (i SecretStoreListArray) ToSecretStoreListArrayOutputWithContext(ctx context.Context) SecretStoreListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreListArrayOutput)
}

// SecretStoreListMapInput is an input type that accepts SecretStoreListMap and SecretStoreListMapOutput values.
// You can construct a concrete instance of `SecretStoreListMapInput` via:
//
//	SecretStoreListMap{ "key": SecretStoreListArgs{...} }
type SecretStoreListMapInput interface {
	pulumi.Input

	ToSecretStoreListMapOutput() SecretStoreListMapOutput
	ToSecretStoreListMapOutputWithContext(context.Context) SecretStoreListMapOutput
}

type SecretStoreListMap map[string]SecretStoreListInput

func (SecretStoreListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecretStoreList)(nil)).Elem()
}

func (i SecretStoreListMap) ToSecretStoreListMapOutput() SecretStoreListMapOutput {
	return i.ToSecretStoreListMapOutputWithContext(context.Background())
}

func (i SecretStoreListMap) ToSecretStoreListMapOutputWithContext(ctx context.Context) SecretStoreListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreListMapOutput)
}

type SecretStoreListOutput struct{ *pulumi.OutputState }

func (SecretStoreListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreList)(nil)).Elem()
}

func (o SecretStoreListOutput) ToSecretStoreListOutput() SecretStoreListOutput {
	return o
}

func (o SecretStoreListOutput) ToSecretStoreListOutputWithContext(ctx context.Context) SecretStoreListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o SecretStoreListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretStoreList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of secretstores. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o SecretStoreListOutput) Items() SecretStoreTypeArrayOutput {
	return o.ApplyT(func(v *SecretStoreList) SecretStoreTypeArrayOutput { return v.Items }).(SecretStoreTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o SecretStoreListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretStoreList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o SecretStoreListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *SecretStoreList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type SecretStoreListArrayOutput struct{ *pulumi.OutputState }

func (SecretStoreListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecretStoreList)(nil)).Elem()
}

func (o SecretStoreListArrayOutput) ToSecretStoreListArrayOutput() SecretStoreListArrayOutput {
	return o
}

func (o SecretStoreListArrayOutput) ToSecretStoreListArrayOutputWithContext(ctx context.Context) SecretStoreListArrayOutput {
	return o
}

func (o SecretStoreListArrayOutput) Index(i pulumi.IntInput) SecretStoreListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecretStoreList {
		return vs[0].([]*SecretStoreList)[vs[1].(int)]
	}).(SecretStoreListOutput)
}

type SecretStoreListMapOutput struct{ *pulumi.OutputState }

func (SecretStoreListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecretStoreList)(nil)).Elem()
}

func (o SecretStoreListMapOutput) ToSecretStoreListMapOutput() SecretStoreListMapOutput {
	return o
}

func (o SecretStoreListMapOutput) ToSecretStoreListMapOutputWithContext(ctx context.Context) SecretStoreListMapOutput {
	return o
}

func (o SecretStoreListMapOutput) MapIndex(k pulumi.StringInput) SecretStoreListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecretStoreList {
		return vs[0].(map[string]*SecretStoreList)[vs[1].(string)]
	}).(SecretStoreListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreListInput)(nil)).Elem(), &SecretStoreList{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreListArrayInput)(nil)).Elem(), SecretStoreListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreListMapInput)(nil)).Elem(), SecretStoreListMap{})
	pulumi.RegisterOutputType(SecretStoreListOutput{})
	pulumi.RegisterOutputType(SecretStoreListArrayOutput{})
	pulumi.RegisterOutputType(SecretStoreListMapOutput{})
}
