// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "kubernetes:external-secrets.io/v1alpha1:ClusterSecretStore":
		r = &ClusterSecretStore{}
	case "kubernetes:external-secrets.io/v1alpha1:ClusterSecretStoreList":
		r = &ClusterSecretStoreList{}
	case "kubernetes:external-secrets.io/v1alpha1:ClusterSecretStorePatch":
		r = &ClusterSecretStorePatch{}
	case "kubernetes:external-secrets.io/v1alpha1:ExternalSecret":
		r = &ExternalSecret{}
	case "kubernetes:external-secrets.io/v1alpha1:ExternalSecretList":
		r = &ExternalSecretList{}
	case "kubernetes:external-secrets.io/v1alpha1:ExternalSecretPatch":
		r = &ExternalSecretPatch{}
	case "kubernetes:external-secrets.io/v1alpha1:PushSecret":
		r = &PushSecret{}
	case "kubernetes:external-secrets.io/v1alpha1:PushSecretList":
		r = &PushSecretList{}
	case "kubernetes:external-secrets.io/v1alpha1:PushSecretPatch":
		r = &PushSecretPatch{}
	case "kubernetes:external-secrets.io/v1alpha1:SecretStore":
		r = &SecretStore{}
	case "kubernetes:external-secrets.io/v1alpha1:SecretStoreList":
		r = &SecretStoreList{}
	case "kubernetes:external-secrets.io/v1alpha1:SecretStorePatch":
		r = &SecretStorePatch{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := utilities.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"crds",
		"external-secrets.io/v1alpha1",
		&module{version},
	)
}
