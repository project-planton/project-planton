// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha3

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// DestinationRuleList is a list of DestinationRule
type DestinationRuleList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of destinationrules. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items DestinationRuleTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewDestinationRuleList registers a new resource with the given unique name, arguments, and options.
func NewDestinationRuleList(ctx *pulumi.Context,
	name string, args *DestinationRuleListArgs, opts ...pulumi.ResourceOption) (*DestinationRuleList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("networking.istio.io/v1alpha3")
	args.Kind = pulumi.StringPtr("DestinationRuleList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource DestinationRuleList
	err := ctx.RegisterResource("kubernetes:networking.istio.io/v1alpha3:DestinationRuleList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDestinationRuleList gets an existing DestinationRuleList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDestinationRuleList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DestinationRuleListState, opts ...pulumi.ResourceOption) (*DestinationRuleList, error) {
	var resource DestinationRuleList
	err := ctx.ReadResource("kubernetes:networking.istio.io/v1alpha3:DestinationRuleList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DestinationRuleList resources.
type destinationRuleListState struct {
}

type DestinationRuleListState struct {
}

func (DestinationRuleListState) ElementType() reflect.Type {
	return reflect.TypeOf((*destinationRuleListState)(nil)).Elem()
}

type destinationRuleListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of destinationrules. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []DestinationRuleType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a DestinationRuleList resource.
type DestinationRuleListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of destinationrules. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items DestinationRuleTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (DestinationRuleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*destinationRuleListArgs)(nil)).Elem()
}

type DestinationRuleListInput interface {
	pulumi.Input

	ToDestinationRuleListOutput() DestinationRuleListOutput
	ToDestinationRuleListOutputWithContext(ctx context.Context) DestinationRuleListOutput
}

func (*DestinationRuleList) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleList)(nil)).Elem()
}

func (i *DestinationRuleList) ToDestinationRuleListOutput() DestinationRuleListOutput {
	return i.ToDestinationRuleListOutputWithContext(context.Background())
}

func (i *DestinationRuleList) ToDestinationRuleListOutputWithContext(ctx context.Context) DestinationRuleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleListOutput)
}

// DestinationRuleListArrayInput is an input type that accepts DestinationRuleListArray and DestinationRuleListArrayOutput values.
// You can construct a concrete instance of `DestinationRuleListArrayInput` via:
//
//	DestinationRuleListArray{ DestinationRuleListArgs{...} }
type DestinationRuleListArrayInput interface {
	pulumi.Input

	ToDestinationRuleListArrayOutput() DestinationRuleListArrayOutput
	ToDestinationRuleListArrayOutputWithContext(context.Context) DestinationRuleListArrayOutput
}

type DestinationRuleListArray []DestinationRuleListInput

func (DestinationRuleListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DestinationRuleList)(nil)).Elem()
}

func (i DestinationRuleListArray) ToDestinationRuleListArrayOutput() DestinationRuleListArrayOutput {
	return i.ToDestinationRuleListArrayOutputWithContext(context.Background())
}

func (i DestinationRuleListArray) ToDestinationRuleListArrayOutputWithContext(ctx context.Context) DestinationRuleListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleListArrayOutput)
}

// DestinationRuleListMapInput is an input type that accepts DestinationRuleListMap and DestinationRuleListMapOutput values.
// You can construct a concrete instance of `DestinationRuleListMapInput` via:
//
//	DestinationRuleListMap{ "key": DestinationRuleListArgs{...} }
type DestinationRuleListMapInput interface {
	pulumi.Input

	ToDestinationRuleListMapOutput() DestinationRuleListMapOutput
	ToDestinationRuleListMapOutputWithContext(context.Context) DestinationRuleListMapOutput
}

type DestinationRuleListMap map[string]DestinationRuleListInput

func (DestinationRuleListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DestinationRuleList)(nil)).Elem()
}

func (i DestinationRuleListMap) ToDestinationRuleListMapOutput() DestinationRuleListMapOutput {
	return i.ToDestinationRuleListMapOutputWithContext(context.Background())
}

func (i DestinationRuleListMap) ToDestinationRuleListMapOutputWithContext(ctx context.Context) DestinationRuleListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationRuleListMapOutput)
}

type DestinationRuleListOutput struct{ *pulumi.OutputState }

func (DestinationRuleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationRuleList)(nil)).Elem()
}

func (o DestinationRuleListOutput) ToDestinationRuleListOutput() DestinationRuleListOutput {
	return o
}

func (o DestinationRuleListOutput) ToDestinationRuleListOutputWithContext(ctx context.Context) DestinationRuleListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o DestinationRuleListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *DestinationRuleList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of destinationrules. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o DestinationRuleListOutput) Items() DestinationRuleTypeArrayOutput {
	return o.ApplyT(func(v *DestinationRuleList) DestinationRuleTypeArrayOutput { return v.Items }).(DestinationRuleTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o DestinationRuleListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *DestinationRuleList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o DestinationRuleListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *DestinationRuleList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type DestinationRuleListArrayOutput struct{ *pulumi.OutputState }

func (DestinationRuleListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DestinationRuleList)(nil)).Elem()
}

func (o DestinationRuleListArrayOutput) ToDestinationRuleListArrayOutput() DestinationRuleListArrayOutput {
	return o
}

func (o DestinationRuleListArrayOutput) ToDestinationRuleListArrayOutputWithContext(ctx context.Context) DestinationRuleListArrayOutput {
	return o
}

func (o DestinationRuleListArrayOutput) Index(i pulumi.IntInput) DestinationRuleListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DestinationRuleList {
		return vs[0].([]*DestinationRuleList)[vs[1].(int)]
	}).(DestinationRuleListOutput)
}

type DestinationRuleListMapOutput struct{ *pulumi.OutputState }

func (DestinationRuleListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DestinationRuleList)(nil)).Elem()
}

func (o DestinationRuleListMapOutput) ToDestinationRuleListMapOutput() DestinationRuleListMapOutput {
	return o
}

func (o DestinationRuleListMapOutput) ToDestinationRuleListMapOutputWithContext(ctx context.Context) DestinationRuleListMapOutput {
	return o
}

func (o DestinationRuleListMapOutput) MapIndex(k pulumi.StringInput) DestinationRuleListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DestinationRuleList {
		return vs[0].(map[string]*DestinationRuleList)[vs[1].(string)]
	}).(DestinationRuleListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleListInput)(nil)).Elem(), &DestinationRuleList{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleListArrayInput)(nil)).Elem(), DestinationRuleListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationRuleListMapInput)(nil)).Elem(), DestinationRuleListMap{})
	pulumi.RegisterOutputType(DestinationRuleListOutput{})
	pulumi.RegisterOutputType(DestinationRuleListArrayOutput{})
	pulumi.RegisterOutputType(DestinationRuleListMapOutput{})
}
