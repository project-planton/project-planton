// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// WorkloadEntryList is a list of WorkloadEntry
type WorkloadEntryList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of workloadentries. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items WorkloadEntryTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewWorkloadEntryList registers a new resource with the given unique name, arguments, and options.
func NewWorkloadEntryList(ctx *pulumi.Context,
	name string, args *WorkloadEntryListArgs, opts ...pulumi.ResourceOption) (*WorkloadEntryList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("networking.istio.io/v1")
	args.Kind = pulumi.StringPtr("WorkloadEntryList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource WorkloadEntryList
	err := ctx.RegisterResource("kubernetes:networking.istio.io/v1:WorkloadEntryList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkloadEntryList gets an existing WorkloadEntryList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkloadEntryList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkloadEntryListState, opts ...pulumi.ResourceOption) (*WorkloadEntryList, error) {
	var resource WorkloadEntryList
	err := ctx.ReadResource("kubernetes:networking.istio.io/v1:WorkloadEntryList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkloadEntryList resources.
type workloadEntryListState struct {
}

type WorkloadEntryListState struct {
}

func (WorkloadEntryListState) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadEntryListState)(nil)).Elem()
}

type workloadEntryListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of workloadentries. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []WorkloadEntryType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a WorkloadEntryList resource.
type WorkloadEntryListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of workloadentries. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items WorkloadEntryTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (WorkloadEntryListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadEntryListArgs)(nil)).Elem()
}

type WorkloadEntryListInput interface {
	pulumi.Input

	ToWorkloadEntryListOutput() WorkloadEntryListOutput
	ToWorkloadEntryListOutputWithContext(ctx context.Context) WorkloadEntryListOutput
}

func (*WorkloadEntryList) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadEntryList)(nil)).Elem()
}

func (i *WorkloadEntryList) ToWorkloadEntryListOutput() WorkloadEntryListOutput {
	return i.ToWorkloadEntryListOutputWithContext(context.Background())
}

func (i *WorkloadEntryList) ToWorkloadEntryListOutputWithContext(ctx context.Context) WorkloadEntryListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadEntryListOutput)
}

// WorkloadEntryListArrayInput is an input type that accepts WorkloadEntryListArray and WorkloadEntryListArrayOutput values.
// You can construct a concrete instance of `WorkloadEntryListArrayInput` via:
//
//	WorkloadEntryListArray{ WorkloadEntryListArgs{...} }
type WorkloadEntryListArrayInput interface {
	pulumi.Input

	ToWorkloadEntryListArrayOutput() WorkloadEntryListArrayOutput
	ToWorkloadEntryListArrayOutputWithContext(context.Context) WorkloadEntryListArrayOutput
}

type WorkloadEntryListArray []WorkloadEntryListInput

func (WorkloadEntryListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkloadEntryList)(nil)).Elem()
}

func (i WorkloadEntryListArray) ToWorkloadEntryListArrayOutput() WorkloadEntryListArrayOutput {
	return i.ToWorkloadEntryListArrayOutputWithContext(context.Background())
}

func (i WorkloadEntryListArray) ToWorkloadEntryListArrayOutputWithContext(ctx context.Context) WorkloadEntryListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadEntryListArrayOutput)
}

// WorkloadEntryListMapInput is an input type that accepts WorkloadEntryListMap and WorkloadEntryListMapOutput values.
// You can construct a concrete instance of `WorkloadEntryListMapInput` via:
//
//	WorkloadEntryListMap{ "key": WorkloadEntryListArgs{...} }
type WorkloadEntryListMapInput interface {
	pulumi.Input

	ToWorkloadEntryListMapOutput() WorkloadEntryListMapOutput
	ToWorkloadEntryListMapOutputWithContext(context.Context) WorkloadEntryListMapOutput
}

type WorkloadEntryListMap map[string]WorkloadEntryListInput

func (WorkloadEntryListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkloadEntryList)(nil)).Elem()
}

func (i WorkloadEntryListMap) ToWorkloadEntryListMapOutput() WorkloadEntryListMapOutput {
	return i.ToWorkloadEntryListMapOutputWithContext(context.Background())
}

func (i WorkloadEntryListMap) ToWorkloadEntryListMapOutputWithContext(ctx context.Context) WorkloadEntryListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadEntryListMapOutput)
}

type WorkloadEntryListOutput struct{ *pulumi.OutputState }

func (WorkloadEntryListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadEntryList)(nil)).Elem()
}

func (o WorkloadEntryListOutput) ToWorkloadEntryListOutput() WorkloadEntryListOutput {
	return o
}

func (o WorkloadEntryListOutput) ToWorkloadEntryListOutputWithContext(ctx context.Context) WorkloadEntryListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o WorkloadEntryListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadEntryList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of workloadentries. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o WorkloadEntryListOutput) Items() WorkloadEntryTypeArrayOutput {
	return o.ApplyT(func(v *WorkloadEntryList) WorkloadEntryTypeArrayOutput { return v.Items }).(WorkloadEntryTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o WorkloadEntryListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadEntryList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o WorkloadEntryListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *WorkloadEntryList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type WorkloadEntryListArrayOutput struct{ *pulumi.OutputState }

func (WorkloadEntryListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkloadEntryList)(nil)).Elem()
}

func (o WorkloadEntryListArrayOutput) ToWorkloadEntryListArrayOutput() WorkloadEntryListArrayOutput {
	return o
}

func (o WorkloadEntryListArrayOutput) ToWorkloadEntryListArrayOutputWithContext(ctx context.Context) WorkloadEntryListArrayOutput {
	return o
}

func (o WorkloadEntryListArrayOutput) Index(i pulumi.IntInput) WorkloadEntryListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkloadEntryList {
		return vs[0].([]*WorkloadEntryList)[vs[1].(int)]
	}).(WorkloadEntryListOutput)
}

type WorkloadEntryListMapOutput struct{ *pulumi.OutputState }

func (WorkloadEntryListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkloadEntryList)(nil)).Elem()
}

func (o WorkloadEntryListMapOutput) ToWorkloadEntryListMapOutput() WorkloadEntryListMapOutput {
	return o
}

func (o WorkloadEntryListMapOutput) ToWorkloadEntryListMapOutputWithContext(ctx context.Context) WorkloadEntryListMapOutput {
	return o
}

func (o WorkloadEntryListMapOutput) MapIndex(k pulumi.StringInput) WorkloadEntryListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkloadEntryList {
		return vs[0].(map[string]*WorkloadEntryList)[vs[1].(string)]
	}).(WorkloadEntryListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadEntryListInput)(nil)).Elem(), &WorkloadEntryList{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadEntryListArrayInput)(nil)).Elem(), WorkloadEntryListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadEntryListMapInput)(nil)).Elem(), WorkloadEntryListMap{})
	pulumi.RegisterOutputType(WorkloadEntryListOutput{})
	pulumi.RegisterOutputType(WorkloadEntryListArrayOutput{})
	pulumi.RegisterOutputType(WorkloadEntryListMapOutput{})
}
