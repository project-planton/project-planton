// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
type ProxyConfigPatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput `pulumi:"metadata"`
	Spec     ProxyConfigSpecPatchPtrOutput   `pulumi:"spec"`
	Status   pulumi.MapOutput                `pulumi:"status"`
}

// NewProxyConfigPatch registers a new resource with the given unique name, arguments, and options.
func NewProxyConfigPatch(ctx *pulumi.Context,
	name string, args *ProxyConfigPatchArgs, opts ...pulumi.ResourceOption) (*ProxyConfigPatch, error) {
	if args == nil {
		args = &ProxyConfigPatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("networking.istio.io/v1beta1")
	args.Kind = pulumi.StringPtr("ProxyConfig")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ProxyConfigPatch
	err := ctx.RegisterResource("kubernetes:networking.istio.io/v1beta1:ProxyConfigPatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProxyConfigPatch gets an existing ProxyConfigPatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProxyConfigPatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProxyConfigPatchState, opts ...pulumi.ResourceOption) (*ProxyConfigPatch, error) {
	var resource ProxyConfigPatch
	err := ctx.ReadResource("kubernetes:networking.istio.io/v1beta1:ProxyConfigPatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProxyConfigPatch resources.
type proxyConfigPatchState struct {
}

type ProxyConfigPatchState struct {
}

func (ProxyConfigPatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*proxyConfigPatchState)(nil)).Elem()
}

type proxyConfigPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *ProxyConfigSpecPatch   `pulumi:"spec"`
}

// The set of arguments for constructing a ProxyConfigPatch resource.
type ProxyConfigPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     ProxyConfigSpecPatchPtrInput
}

func (ProxyConfigPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*proxyConfigPatchArgs)(nil)).Elem()
}

type ProxyConfigPatchInput interface {
	pulumi.Input

	ToProxyConfigPatchOutput() ProxyConfigPatchOutput
	ToProxyConfigPatchOutputWithContext(ctx context.Context) ProxyConfigPatchOutput
}

func (*ProxyConfigPatch) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyConfigPatch)(nil)).Elem()
}

func (i *ProxyConfigPatch) ToProxyConfigPatchOutput() ProxyConfigPatchOutput {
	return i.ToProxyConfigPatchOutputWithContext(context.Background())
}

func (i *ProxyConfigPatch) ToProxyConfigPatchOutputWithContext(ctx context.Context) ProxyConfigPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigPatchOutput)
}

// ProxyConfigPatchArrayInput is an input type that accepts ProxyConfigPatchArray and ProxyConfigPatchArrayOutput values.
// You can construct a concrete instance of `ProxyConfigPatchArrayInput` via:
//
//	ProxyConfigPatchArray{ ProxyConfigPatchArgs{...} }
type ProxyConfigPatchArrayInput interface {
	pulumi.Input

	ToProxyConfigPatchArrayOutput() ProxyConfigPatchArrayOutput
	ToProxyConfigPatchArrayOutputWithContext(context.Context) ProxyConfigPatchArrayOutput
}

type ProxyConfigPatchArray []ProxyConfigPatchInput

func (ProxyConfigPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProxyConfigPatch)(nil)).Elem()
}

func (i ProxyConfigPatchArray) ToProxyConfigPatchArrayOutput() ProxyConfigPatchArrayOutput {
	return i.ToProxyConfigPatchArrayOutputWithContext(context.Background())
}

func (i ProxyConfigPatchArray) ToProxyConfigPatchArrayOutputWithContext(ctx context.Context) ProxyConfigPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigPatchArrayOutput)
}

// ProxyConfigPatchMapInput is an input type that accepts ProxyConfigPatchMap and ProxyConfigPatchMapOutput values.
// You can construct a concrete instance of `ProxyConfigPatchMapInput` via:
//
//	ProxyConfigPatchMap{ "key": ProxyConfigPatchArgs{...} }
type ProxyConfigPatchMapInput interface {
	pulumi.Input

	ToProxyConfigPatchMapOutput() ProxyConfigPatchMapOutput
	ToProxyConfigPatchMapOutputWithContext(context.Context) ProxyConfigPatchMapOutput
}

type ProxyConfigPatchMap map[string]ProxyConfigPatchInput

func (ProxyConfigPatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProxyConfigPatch)(nil)).Elem()
}

func (i ProxyConfigPatchMap) ToProxyConfigPatchMapOutput() ProxyConfigPatchMapOutput {
	return i.ToProxyConfigPatchMapOutputWithContext(context.Background())
}

func (i ProxyConfigPatchMap) ToProxyConfigPatchMapOutputWithContext(ctx context.Context) ProxyConfigPatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigPatchMapOutput)
}

type ProxyConfigPatchOutput struct{ *pulumi.OutputState }

func (ProxyConfigPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyConfigPatch)(nil)).Elem()
}

func (o ProxyConfigPatchOutput) ToProxyConfigPatchOutput() ProxyConfigPatchOutput {
	return o
}

func (o ProxyConfigPatchOutput) ToProxyConfigPatchOutputWithContext(ctx context.Context) ProxyConfigPatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ProxyConfigPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProxyConfigPatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ProxyConfigPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProxyConfigPatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ProxyConfigPatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *ProxyConfigPatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o ProxyConfigPatchOutput) Spec() ProxyConfigSpecPatchPtrOutput {
	return o.ApplyT(func(v *ProxyConfigPatch) ProxyConfigSpecPatchPtrOutput { return v.Spec }).(ProxyConfigSpecPatchPtrOutput)
}

func (o ProxyConfigPatchOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v *ProxyConfigPatch) pulumi.MapOutput { return v.Status }).(pulumi.MapOutput)
}

type ProxyConfigPatchArrayOutput struct{ *pulumi.OutputState }

func (ProxyConfigPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProxyConfigPatch)(nil)).Elem()
}

func (o ProxyConfigPatchArrayOutput) ToProxyConfigPatchArrayOutput() ProxyConfigPatchArrayOutput {
	return o
}

func (o ProxyConfigPatchArrayOutput) ToProxyConfigPatchArrayOutputWithContext(ctx context.Context) ProxyConfigPatchArrayOutput {
	return o
}

func (o ProxyConfigPatchArrayOutput) Index(i pulumi.IntInput) ProxyConfigPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProxyConfigPatch {
		return vs[0].([]*ProxyConfigPatch)[vs[1].(int)]
	}).(ProxyConfigPatchOutput)
}

type ProxyConfigPatchMapOutput struct{ *pulumi.OutputState }

func (ProxyConfigPatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProxyConfigPatch)(nil)).Elem()
}

func (o ProxyConfigPatchMapOutput) ToProxyConfigPatchMapOutput() ProxyConfigPatchMapOutput {
	return o
}

func (o ProxyConfigPatchMapOutput) ToProxyConfigPatchMapOutputWithContext(ctx context.Context) ProxyConfigPatchMapOutput {
	return o
}

func (o ProxyConfigPatchMapOutput) MapIndex(k pulumi.StringInput) ProxyConfigPatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProxyConfigPatch {
		return vs[0].(map[string]*ProxyConfigPatch)[vs[1].(string)]
	}).(ProxyConfigPatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyConfigPatchInput)(nil)).Elem(), &ProxyConfigPatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyConfigPatchArrayInput)(nil)).Elem(), ProxyConfigPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyConfigPatchMapInput)(nil)).Elem(), ProxyConfigPatchMap{})
	pulumi.RegisterOutputType(ProxyConfigPatchOutput{})
	pulumi.RegisterOutputType(ProxyConfigPatchArrayOutput{})
	pulumi.RegisterOutputType(ProxyConfigPatchMapOutput{})
}
