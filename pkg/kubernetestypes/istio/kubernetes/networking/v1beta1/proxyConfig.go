// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ProxyConfig struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput `pulumi:"metadata"`
	Spec     ProxyConfigSpecOutput   `pulumi:"spec"`
	Status   pulumi.MapOutput        `pulumi:"status"`
}

// NewProxyConfig registers a new resource with the given unique name, arguments, and options.
func NewProxyConfig(ctx *pulumi.Context,
	name string, args *ProxyConfigArgs, opts ...pulumi.ResourceOption) (*ProxyConfig, error) {
	if args == nil {
		args = &ProxyConfigArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("networking.istio.io/v1beta1")
	args.Kind = pulumi.StringPtr("ProxyConfig")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ProxyConfig
	err := ctx.RegisterResource("kubernetes:networking.istio.io/v1beta1:ProxyConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProxyConfig gets an existing ProxyConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProxyConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProxyConfigState, opts ...pulumi.ResourceOption) (*ProxyConfig, error) {
	var resource ProxyConfig
	err := ctx.ReadResource("kubernetes:networking.istio.io/v1beta1:ProxyConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProxyConfig resources.
type proxyConfigState struct {
}

type ProxyConfigState struct {
}

func (ProxyConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*proxyConfigState)(nil)).Elem()
}

type proxyConfigArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *ProxyConfigSpec   `pulumi:"spec"`
}

// The set of arguments for constructing a ProxyConfig resource.
type ProxyConfigArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     ProxyConfigSpecPtrInput
}

func (ProxyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*proxyConfigArgs)(nil)).Elem()
}

type ProxyConfigInput interface {
	pulumi.Input

	ToProxyConfigOutput() ProxyConfigOutput
	ToProxyConfigOutputWithContext(ctx context.Context) ProxyConfigOutput
}

func (*ProxyConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyConfig)(nil)).Elem()
}

func (i *ProxyConfig) ToProxyConfigOutput() ProxyConfigOutput {
	return i.ToProxyConfigOutputWithContext(context.Background())
}

func (i *ProxyConfig) ToProxyConfigOutputWithContext(ctx context.Context) ProxyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigOutput)
}

// ProxyConfigArrayInput is an input type that accepts ProxyConfigArray and ProxyConfigArrayOutput values.
// You can construct a concrete instance of `ProxyConfigArrayInput` via:
//
//	ProxyConfigArray{ ProxyConfigArgs{...} }
type ProxyConfigArrayInput interface {
	pulumi.Input

	ToProxyConfigArrayOutput() ProxyConfigArrayOutput
	ToProxyConfigArrayOutputWithContext(context.Context) ProxyConfigArrayOutput
}

type ProxyConfigArray []ProxyConfigInput

func (ProxyConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProxyConfig)(nil)).Elem()
}

func (i ProxyConfigArray) ToProxyConfigArrayOutput() ProxyConfigArrayOutput {
	return i.ToProxyConfigArrayOutputWithContext(context.Background())
}

func (i ProxyConfigArray) ToProxyConfigArrayOutputWithContext(ctx context.Context) ProxyConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigArrayOutput)
}

// ProxyConfigMapInput is an input type that accepts ProxyConfigMap and ProxyConfigMapOutput values.
// You can construct a concrete instance of `ProxyConfigMapInput` via:
//
//	ProxyConfigMap{ "key": ProxyConfigArgs{...} }
type ProxyConfigMapInput interface {
	pulumi.Input

	ToProxyConfigMapOutput() ProxyConfigMapOutput
	ToProxyConfigMapOutputWithContext(context.Context) ProxyConfigMapOutput
}

type ProxyConfigMap map[string]ProxyConfigInput

func (ProxyConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProxyConfig)(nil)).Elem()
}

func (i ProxyConfigMap) ToProxyConfigMapOutput() ProxyConfigMapOutput {
	return i.ToProxyConfigMapOutputWithContext(context.Background())
}

func (i ProxyConfigMap) ToProxyConfigMapOutputWithContext(ctx context.Context) ProxyConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyConfigMapOutput)
}

type ProxyConfigOutput struct{ *pulumi.OutputState }

func (ProxyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyConfig)(nil)).Elem()
}

func (o ProxyConfigOutput) ToProxyConfigOutput() ProxyConfigOutput {
	return o
}

func (o ProxyConfigOutput) ToProxyConfigOutputWithContext(ctx context.Context) ProxyConfigOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ProxyConfigOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyConfig) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ProxyConfigOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyConfig) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ProxyConfigOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *ProxyConfig) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o ProxyConfigOutput) Spec() ProxyConfigSpecOutput {
	return o.ApplyT(func(v *ProxyConfig) ProxyConfigSpecOutput { return v.Spec }).(ProxyConfigSpecOutput)
}

func (o ProxyConfigOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v *ProxyConfig) pulumi.MapOutput { return v.Status }).(pulumi.MapOutput)
}

type ProxyConfigArrayOutput struct{ *pulumi.OutputState }

func (ProxyConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProxyConfig)(nil)).Elem()
}

func (o ProxyConfigArrayOutput) ToProxyConfigArrayOutput() ProxyConfigArrayOutput {
	return o
}

func (o ProxyConfigArrayOutput) ToProxyConfigArrayOutputWithContext(ctx context.Context) ProxyConfigArrayOutput {
	return o
}

func (o ProxyConfigArrayOutput) Index(i pulumi.IntInput) ProxyConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProxyConfig {
		return vs[0].([]*ProxyConfig)[vs[1].(int)]
	}).(ProxyConfigOutput)
}

type ProxyConfigMapOutput struct{ *pulumi.OutputState }

func (ProxyConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProxyConfig)(nil)).Elem()
}

func (o ProxyConfigMapOutput) ToProxyConfigMapOutput() ProxyConfigMapOutput {
	return o
}

func (o ProxyConfigMapOutput) ToProxyConfigMapOutputWithContext(ctx context.Context) ProxyConfigMapOutput {
	return o
}

func (o ProxyConfigMapOutput) MapIndex(k pulumi.StringInput) ProxyConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProxyConfig {
		return vs[0].(map[string]*ProxyConfig)[vs[1].(string)]
	}).(ProxyConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyConfigInput)(nil)).Elem(), &ProxyConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyConfigArrayInput)(nil)).Elem(), ProxyConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyConfigMapInput)(nil)).Elem(), ProxyConfigMap{})
	pulumi.RegisterOutputType(ProxyConfigOutput{})
	pulumi.RegisterOutputType(ProxyConfigArrayOutput{})
	pulumi.RegisterOutputType(ProxyConfigMapOutput{})
}
