// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
type RequestAuthenticationPatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput         `pulumi:"metadata"`
	Spec     RequestAuthenticationSpecPatchPtrOutput `pulumi:"spec"`
	Status   pulumi.MapOutput                        `pulumi:"status"`
}

// NewRequestAuthenticationPatch registers a new resource with the given unique name, arguments, and options.
func NewRequestAuthenticationPatch(ctx *pulumi.Context,
	name string, args *RequestAuthenticationPatchArgs, opts ...pulumi.ResourceOption) (*RequestAuthenticationPatch, error) {
	if args == nil {
		args = &RequestAuthenticationPatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("security.istio.io/v1beta1")
	args.Kind = pulumi.StringPtr("RequestAuthentication")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("kubernetes:security.istio.io/v1:RequestAuthenticationPatch"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource RequestAuthenticationPatch
	err := ctx.RegisterResource("kubernetes:security.istio.io/v1beta1:RequestAuthenticationPatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRequestAuthenticationPatch gets an existing RequestAuthenticationPatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRequestAuthenticationPatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RequestAuthenticationPatchState, opts ...pulumi.ResourceOption) (*RequestAuthenticationPatch, error) {
	var resource RequestAuthenticationPatch
	err := ctx.ReadResource("kubernetes:security.istio.io/v1beta1:RequestAuthenticationPatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RequestAuthenticationPatch resources.
type requestAuthenticationPatchState struct {
}

type RequestAuthenticationPatchState struct {
}

func (RequestAuthenticationPatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*requestAuthenticationPatchState)(nil)).Elem()
}

type requestAuthenticationPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch         `pulumi:"metadata"`
	Spec     *RequestAuthenticationSpecPatch `pulumi:"spec"`
}

// The set of arguments for constructing a RequestAuthenticationPatch resource.
type RequestAuthenticationPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     RequestAuthenticationSpecPatchPtrInput
}

func (RequestAuthenticationPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*requestAuthenticationPatchArgs)(nil)).Elem()
}

type RequestAuthenticationPatchInput interface {
	pulumi.Input

	ToRequestAuthenticationPatchOutput() RequestAuthenticationPatchOutput
	ToRequestAuthenticationPatchOutputWithContext(ctx context.Context) RequestAuthenticationPatchOutput
}

func (*RequestAuthenticationPatch) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationPatch)(nil)).Elem()
}

func (i *RequestAuthenticationPatch) ToRequestAuthenticationPatchOutput() RequestAuthenticationPatchOutput {
	return i.ToRequestAuthenticationPatchOutputWithContext(context.Background())
}

func (i *RequestAuthenticationPatch) ToRequestAuthenticationPatchOutputWithContext(ctx context.Context) RequestAuthenticationPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationPatchOutput)
}

// RequestAuthenticationPatchArrayInput is an input type that accepts RequestAuthenticationPatchArray and RequestAuthenticationPatchArrayOutput values.
// You can construct a concrete instance of `RequestAuthenticationPatchArrayInput` via:
//
//	RequestAuthenticationPatchArray{ RequestAuthenticationPatchArgs{...} }
type RequestAuthenticationPatchArrayInput interface {
	pulumi.Input

	ToRequestAuthenticationPatchArrayOutput() RequestAuthenticationPatchArrayOutput
	ToRequestAuthenticationPatchArrayOutputWithContext(context.Context) RequestAuthenticationPatchArrayOutput
}

type RequestAuthenticationPatchArray []RequestAuthenticationPatchInput

func (RequestAuthenticationPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RequestAuthenticationPatch)(nil)).Elem()
}

func (i RequestAuthenticationPatchArray) ToRequestAuthenticationPatchArrayOutput() RequestAuthenticationPatchArrayOutput {
	return i.ToRequestAuthenticationPatchArrayOutputWithContext(context.Background())
}

func (i RequestAuthenticationPatchArray) ToRequestAuthenticationPatchArrayOutputWithContext(ctx context.Context) RequestAuthenticationPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationPatchArrayOutput)
}

// RequestAuthenticationPatchMapInput is an input type that accepts RequestAuthenticationPatchMap and RequestAuthenticationPatchMapOutput values.
// You can construct a concrete instance of `RequestAuthenticationPatchMapInput` via:
//
//	RequestAuthenticationPatchMap{ "key": RequestAuthenticationPatchArgs{...} }
type RequestAuthenticationPatchMapInput interface {
	pulumi.Input

	ToRequestAuthenticationPatchMapOutput() RequestAuthenticationPatchMapOutput
	ToRequestAuthenticationPatchMapOutputWithContext(context.Context) RequestAuthenticationPatchMapOutput
}

type RequestAuthenticationPatchMap map[string]RequestAuthenticationPatchInput

func (RequestAuthenticationPatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RequestAuthenticationPatch)(nil)).Elem()
}

func (i RequestAuthenticationPatchMap) ToRequestAuthenticationPatchMapOutput() RequestAuthenticationPatchMapOutput {
	return i.ToRequestAuthenticationPatchMapOutputWithContext(context.Background())
}

func (i RequestAuthenticationPatchMap) ToRequestAuthenticationPatchMapOutputWithContext(ctx context.Context) RequestAuthenticationPatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationPatchMapOutput)
}

type RequestAuthenticationPatchOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationPatch)(nil)).Elem()
}

func (o RequestAuthenticationPatchOutput) ToRequestAuthenticationPatchOutput() RequestAuthenticationPatchOutput {
	return o
}

func (o RequestAuthenticationPatchOutput) ToRequestAuthenticationPatchOutputWithContext(ctx context.Context) RequestAuthenticationPatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o RequestAuthenticationPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAuthenticationPatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o RequestAuthenticationPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAuthenticationPatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o RequestAuthenticationPatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *RequestAuthenticationPatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o RequestAuthenticationPatchOutput) Spec() RequestAuthenticationSpecPatchPtrOutput {
	return o.ApplyT(func(v *RequestAuthenticationPatch) RequestAuthenticationSpecPatchPtrOutput { return v.Spec }).(RequestAuthenticationSpecPatchPtrOutput)
}

func (o RequestAuthenticationPatchOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v *RequestAuthenticationPatch) pulumi.MapOutput { return v.Status }).(pulumi.MapOutput)
}

type RequestAuthenticationPatchArrayOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RequestAuthenticationPatch)(nil)).Elem()
}

func (o RequestAuthenticationPatchArrayOutput) ToRequestAuthenticationPatchArrayOutput() RequestAuthenticationPatchArrayOutput {
	return o
}

func (o RequestAuthenticationPatchArrayOutput) ToRequestAuthenticationPatchArrayOutputWithContext(ctx context.Context) RequestAuthenticationPatchArrayOutput {
	return o
}

func (o RequestAuthenticationPatchArrayOutput) Index(i pulumi.IntInput) RequestAuthenticationPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RequestAuthenticationPatch {
		return vs[0].([]*RequestAuthenticationPatch)[vs[1].(int)]
	}).(RequestAuthenticationPatchOutput)
}

type RequestAuthenticationPatchMapOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationPatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RequestAuthenticationPatch)(nil)).Elem()
}

func (o RequestAuthenticationPatchMapOutput) ToRequestAuthenticationPatchMapOutput() RequestAuthenticationPatchMapOutput {
	return o
}

func (o RequestAuthenticationPatchMapOutput) ToRequestAuthenticationPatchMapOutputWithContext(ctx context.Context) RequestAuthenticationPatchMapOutput {
	return o
}

func (o RequestAuthenticationPatchMapOutput) MapIndex(k pulumi.StringInput) RequestAuthenticationPatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RequestAuthenticationPatch {
		return vs[0].(map[string]*RequestAuthenticationPatch)[vs[1].(string)]
	}).(RequestAuthenticationPatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationPatchInput)(nil)).Elem(), &RequestAuthenticationPatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationPatchArrayInput)(nil)).Elem(), RequestAuthenticationPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationPatchMapInput)(nil)).Elem(), RequestAuthenticationPatchMap{})
	pulumi.RegisterOutputType(RequestAuthenticationPatchOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationPatchArrayOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationPatchMapOutput{})
}
