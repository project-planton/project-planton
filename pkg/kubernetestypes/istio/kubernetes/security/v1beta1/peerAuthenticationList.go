// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// PeerAuthenticationList is a list of PeerAuthentication
type PeerAuthenticationList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of peerauthentications. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PeerAuthenticationTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewPeerAuthenticationList registers a new resource with the given unique name, arguments, and options.
func NewPeerAuthenticationList(ctx *pulumi.Context,
	name string, args *PeerAuthenticationListArgs, opts ...pulumi.ResourceOption) (*PeerAuthenticationList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("security.istio.io/v1beta1")
	args.Kind = pulumi.StringPtr("PeerAuthenticationList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PeerAuthenticationList
	err := ctx.RegisterResource("kubernetes:security.istio.io/v1beta1:PeerAuthenticationList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPeerAuthenticationList gets an existing PeerAuthenticationList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPeerAuthenticationList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PeerAuthenticationListState, opts ...pulumi.ResourceOption) (*PeerAuthenticationList, error) {
	var resource PeerAuthenticationList
	err := ctx.ReadResource("kubernetes:security.istio.io/v1beta1:PeerAuthenticationList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PeerAuthenticationList resources.
type peerAuthenticationListState struct {
}

type PeerAuthenticationListState struct {
}

func (PeerAuthenticationListState) ElementType() reflect.Type {
	return reflect.TypeOf((*peerAuthenticationListState)(nil)).Elem()
}

type peerAuthenticationListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of peerauthentications. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []PeerAuthenticationType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a PeerAuthenticationList resource.
type PeerAuthenticationListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of peerauthentications. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PeerAuthenticationTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (PeerAuthenticationListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*peerAuthenticationListArgs)(nil)).Elem()
}

type PeerAuthenticationListInput interface {
	pulumi.Input

	ToPeerAuthenticationListOutput() PeerAuthenticationListOutput
	ToPeerAuthenticationListOutputWithContext(ctx context.Context) PeerAuthenticationListOutput
}

func (*PeerAuthenticationList) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationList)(nil)).Elem()
}

func (i *PeerAuthenticationList) ToPeerAuthenticationListOutput() PeerAuthenticationListOutput {
	return i.ToPeerAuthenticationListOutputWithContext(context.Background())
}

func (i *PeerAuthenticationList) ToPeerAuthenticationListOutputWithContext(ctx context.Context) PeerAuthenticationListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationListOutput)
}

// PeerAuthenticationListArrayInput is an input type that accepts PeerAuthenticationListArray and PeerAuthenticationListArrayOutput values.
// You can construct a concrete instance of `PeerAuthenticationListArrayInput` via:
//
//	PeerAuthenticationListArray{ PeerAuthenticationListArgs{...} }
type PeerAuthenticationListArrayInput interface {
	pulumi.Input

	ToPeerAuthenticationListArrayOutput() PeerAuthenticationListArrayOutput
	ToPeerAuthenticationListArrayOutputWithContext(context.Context) PeerAuthenticationListArrayOutput
}

type PeerAuthenticationListArray []PeerAuthenticationListInput

func (PeerAuthenticationListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PeerAuthenticationList)(nil)).Elem()
}

func (i PeerAuthenticationListArray) ToPeerAuthenticationListArrayOutput() PeerAuthenticationListArrayOutput {
	return i.ToPeerAuthenticationListArrayOutputWithContext(context.Background())
}

func (i PeerAuthenticationListArray) ToPeerAuthenticationListArrayOutputWithContext(ctx context.Context) PeerAuthenticationListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationListArrayOutput)
}

// PeerAuthenticationListMapInput is an input type that accepts PeerAuthenticationListMap and PeerAuthenticationListMapOutput values.
// You can construct a concrete instance of `PeerAuthenticationListMapInput` via:
//
//	PeerAuthenticationListMap{ "key": PeerAuthenticationListArgs{...} }
type PeerAuthenticationListMapInput interface {
	pulumi.Input

	ToPeerAuthenticationListMapOutput() PeerAuthenticationListMapOutput
	ToPeerAuthenticationListMapOutputWithContext(context.Context) PeerAuthenticationListMapOutput
}

type PeerAuthenticationListMap map[string]PeerAuthenticationListInput

func (PeerAuthenticationListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PeerAuthenticationList)(nil)).Elem()
}

func (i PeerAuthenticationListMap) ToPeerAuthenticationListMapOutput() PeerAuthenticationListMapOutput {
	return i.ToPeerAuthenticationListMapOutputWithContext(context.Background())
}

func (i PeerAuthenticationListMap) ToPeerAuthenticationListMapOutputWithContext(ctx context.Context) PeerAuthenticationListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationListMapOutput)
}

type PeerAuthenticationListOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationList)(nil)).Elem()
}

func (o PeerAuthenticationListOutput) ToPeerAuthenticationListOutput() PeerAuthenticationListOutput {
	return o
}

func (o PeerAuthenticationListOutput) ToPeerAuthenticationListOutputWithContext(ctx context.Context) PeerAuthenticationListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PeerAuthenticationListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *PeerAuthenticationList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of peerauthentications. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o PeerAuthenticationListOutput) Items() PeerAuthenticationTypeArrayOutput {
	return o.ApplyT(func(v *PeerAuthenticationList) PeerAuthenticationTypeArrayOutput { return v.Items }).(PeerAuthenticationTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PeerAuthenticationListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *PeerAuthenticationList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PeerAuthenticationListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *PeerAuthenticationList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type PeerAuthenticationListArrayOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PeerAuthenticationList)(nil)).Elem()
}

func (o PeerAuthenticationListArrayOutput) ToPeerAuthenticationListArrayOutput() PeerAuthenticationListArrayOutput {
	return o
}

func (o PeerAuthenticationListArrayOutput) ToPeerAuthenticationListArrayOutputWithContext(ctx context.Context) PeerAuthenticationListArrayOutput {
	return o
}

func (o PeerAuthenticationListArrayOutput) Index(i pulumi.IntInput) PeerAuthenticationListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PeerAuthenticationList {
		return vs[0].([]*PeerAuthenticationList)[vs[1].(int)]
	}).(PeerAuthenticationListOutput)
}

type PeerAuthenticationListMapOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PeerAuthenticationList)(nil)).Elem()
}

func (o PeerAuthenticationListMapOutput) ToPeerAuthenticationListMapOutput() PeerAuthenticationListMapOutput {
	return o
}

func (o PeerAuthenticationListMapOutput) ToPeerAuthenticationListMapOutputWithContext(ctx context.Context) PeerAuthenticationListMapOutput {
	return o
}

func (o PeerAuthenticationListMapOutput) MapIndex(k pulumi.StringInput) PeerAuthenticationListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PeerAuthenticationList {
		return vs[0].(map[string]*PeerAuthenticationList)[vs[1].(string)]
	}).(PeerAuthenticationListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationListInput)(nil)).Elem(), &PeerAuthenticationList{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationListArrayInput)(nil)).Elem(), PeerAuthenticationListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationListMapInput)(nil)).Elem(), PeerAuthenticationListMap{})
	pulumi.RegisterOutputType(PeerAuthenticationListOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationListArrayOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationListMapOutput{})
}
