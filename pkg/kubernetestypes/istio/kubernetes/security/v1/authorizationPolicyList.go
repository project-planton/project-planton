// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AuthorizationPolicyList is a list of AuthorizationPolicy
type AuthorizationPolicyList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of authorizationpolicies. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items AuthorizationPolicyTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewAuthorizationPolicyList registers a new resource with the given unique name, arguments, and options.
func NewAuthorizationPolicyList(ctx *pulumi.Context,
	name string, args *AuthorizationPolicyListArgs, opts ...pulumi.ResourceOption) (*AuthorizationPolicyList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("security.istio.io/v1")
	args.Kind = pulumi.StringPtr("AuthorizationPolicyList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource AuthorizationPolicyList
	err := ctx.RegisterResource("kubernetes:security.istio.io/v1:AuthorizationPolicyList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthorizationPolicyList gets an existing AuthorizationPolicyList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthorizationPolicyList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthorizationPolicyListState, opts ...pulumi.ResourceOption) (*AuthorizationPolicyList, error) {
	var resource AuthorizationPolicyList
	err := ctx.ReadResource("kubernetes:security.istio.io/v1:AuthorizationPolicyList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AuthorizationPolicyList resources.
type authorizationPolicyListState struct {
}

type AuthorizationPolicyListState struct {
}

func (AuthorizationPolicyListState) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizationPolicyListState)(nil)).Elem()
}

type authorizationPolicyListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of authorizationpolicies. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []AuthorizationPolicyType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a AuthorizationPolicyList resource.
type AuthorizationPolicyListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of authorizationpolicies. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items AuthorizationPolicyTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (AuthorizationPolicyListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizationPolicyListArgs)(nil)).Elem()
}

type AuthorizationPolicyListInput interface {
	pulumi.Input

	ToAuthorizationPolicyListOutput() AuthorizationPolicyListOutput
	ToAuthorizationPolicyListOutputWithContext(ctx context.Context) AuthorizationPolicyListOutput
}

func (*AuthorizationPolicyList) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicyList)(nil)).Elem()
}

func (i *AuthorizationPolicyList) ToAuthorizationPolicyListOutput() AuthorizationPolicyListOutput {
	return i.ToAuthorizationPolicyListOutputWithContext(context.Background())
}

func (i *AuthorizationPolicyList) ToAuthorizationPolicyListOutputWithContext(ctx context.Context) AuthorizationPolicyListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicyListOutput)
}

// AuthorizationPolicyListArrayInput is an input type that accepts AuthorizationPolicyListArray and AuthorizationPolicyListArrayOutput values.
// You can construct a concrete instance of `AuthorizationPolicyListArrayInput` via:
//
//	AuthorizationPolicyListArray{ AuthorizationPolicyListArgs{...} }
type AuthorizationPolicyListArrayInput interface {
	pulumi.Input

	ToAuthorizationPolicyListArrayOutput() AuthorizationPolicyListArrayOutput
	ToAuthorizationPolicyListArrayOutputWithContext(context.Context) AuthorizationPolicyListArrayOutput
}

type AuthorizationPolicyListArray []AuthorizationPolicyListInput

func (AuthorizationPolicyListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AuthorizationPolicyList)(nil)).Elem()
}

func (i AuthorizationPolicyListArray) ToAuthorizationPolicyListArrayOutput() AuthorizationPolicyListArrayOutput {
	return i.ToAuthorizationPolicyListArrayOutputWithContext(context.Background())
}

func (i AuthorizationPolicyListArray) ToAuthorizationPolicyListArrayOutputWithContext(ctx context.Context) AuthorizationPolicyListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicyListArrayOutput)
}

// AuthorizationPolicyListMapInput is an input type that accepts AuthorizationPolicyListMap and AuthorizationPolicyListMapOutput values.
// You can construct a concrete instance of `AuthorizationPolicyListMapInput` via:
//
//	AuthorizationPolicyListMap{ "key": AuthorizationPolicyListArgs{...} }
type AuthorizationPolicyListMapInput interface {
	pulumi.Input

	ToAuthorizationPolicyListMapOutput() AuthorizationPolicyListMapOutput
	ToAuthorizationPolicyListMapOutputWithContext(context.Context) AuthorizationPolicyListMapOutput
}

type AuthorizationPolicyListMap map[string]AuthorizationPolicyListInput

func (AuthorizationPolicyListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AuthorizationPolicyList)(nil)).Elem()
}

func (i AuthorizationPolicyListMap) ToAuthorizationPolicyListMapOutput() AuthorizationPolicyListMapOutput {
	return i.ToAuthorizationPolicyListMapOutputWithContext(context.Background())
}

func (i AuthorizationPolicyListMap) ToAuthorizationPolicyListMapOutputWithContext(ctx context.Context) AuthorizationPolicyListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicyListMapOutput)
}

type AuthorizationPolicyListOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicyListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicyList)(nil)).Elem()
}

func (o AuthorizationPolicyListOutput) ToAuthorizationPolicyListOutput() AuthorizationPolicyListOutput {
	return o
}

func (o AuthorizationPolicyListOutput) ToAuthorizationPolicyListOutputWithContext(ctx context.Context) AuthorizationPolicyListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o AuthorizationPolicyListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthorizationPolicyList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of authorizationpolicies. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o AuthorizationPolicyListOutput) Items() AuthorizationPolicyTypeArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicyList) AuthorizationPolicyTypeArrayOutput { return v.Items }).(AuthorizationPolicyTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AuthorizationPolicyListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthorizationPolicyList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AuthorizationPolicyListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *AuthorizationPolicyList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type AuthorizationPolicyListArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicyListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AuthorizationPolicyList)(nil)).Elem()
}

func (o AuthorizationPolicyListArrayOutput) ToAuthorizationPolicyListArrayOutput() AuthorizationPolicyListArrayOutput {
	return o
}

func (o AuthorizationPolicyListArrayOutput) ToAuthorizationPolicyListArrayOutputWithContext(ctx context.Context) AuthorizationPolicyListArrayOutput {
	return o
}

func (o AuthorizationPolicyListArrayOutput) Index(i pulumi.IntInput) AuthorizationPolicyListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AuthorizationPolicyList {
		return vs[0].([]*AuthorizationPolicyList)[vs[1].(int)]
	}).(AuthorizationPolicyListOutput)
}

type AuthorizationPolicyListMapOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicyListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AuthorizationPolicyList)(nil)).Elem()
}

func (o AuthorizationPolicyListMapOutput) ToAuthorizationPolicyListMapOutput() AuthorizationPolicyListMapOutput {
	return o
}

func (o AuthorizationPolicyListMapOutput) ToAuthorizationPolicyListMapOutputWithContext(ctx context.Context) AuthorizationPolicyListMapOutput {
	return o
}

func (o AuthorizationPolicyListMapOutput) MapIndex(k pulumi.StringInput) AuthorizationPolicyListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AuthorizationPolicyList {
		return vs[0].(map[string]*AuthorizationPolicyList)[vs[1].(string)]
	}).(AuthorizationPolicyListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicyListInput)(nil)).Elem(), &AuthorizationPolicyList{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicyListArrayInput)(nil)).Elem(), AuthorizationPolicyListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicyListMapInput)(nil)).Elem(), AuthorizationPolicyListMap{})
	pulumi.RegisterOutputType(AuthorizationPolicyListOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicyListArrayOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicyListMapOutput{})
}
