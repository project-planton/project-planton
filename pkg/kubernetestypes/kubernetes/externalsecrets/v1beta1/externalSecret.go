// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ExternalSecret is the Schema for the external-secrets API.
type ExternalSecret struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// ExternalSecretSpec defines the desired state of ExternalSecret.
	Spec   ExternalSecretSpecPtrOutput   `pulumi:"spec"`
	Status ExternalSecretStatusPtrOutput `pulumi:"status"`
}

// NewExternalSecret registers a new resource with the given unique name, arguments, and options.
func NewExternalSecret(ctx *pulumi.Context,
	name string, args *ExternalSecretArgs, opts ...pulumi.ResourceOption) (*ExternalSecret, error) {
	if args == nil {
		args = &ExternalSecretArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("external-secrets.io/v1beta1")
	args.Kind = pulumi.StringPtr("ExternalSecret")
	if args.Spec != nil {
		args.Spec = args.Spec.ToExternalSecretSpecPtrOutput().ApplyT(func(v *ExternalSecretSpec) *ExternalSecretSpec { return v.Defaults() }).(ExternalSecretSpecPtrOutput)
	}
	if args.Status != nil {
		args.Status = args.Status.ToExternalSecretStatusPtrOutput().ApplyT(func(v *ExternalSecretStatus) *ExternalSecretStatus { return v.Defaults() }).(ExternalSecretStatusPtrOutput)
	}
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ExternalSecret
	err := ctx.RegisterResource("kubernetes:external-secrets.io/v1beta1:ExternalSecret", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExternalSecret gets an existing ExternalSecret resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExternalSecret(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExternalSecretState, opts ...pulumi.ResourceOption) (*ExternalSecret, error) {
	var resource ExternalSecret
	err := ctx.ReadResource("kubernetes:external-secrets.io/v1beta1:ExternalSecret", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExternalSecret resources.
type externalSecretState struct {
}

type ExternalSecretState struct {
}

func (ExternalSecretState) ElementType() reflect.Type {
	return reflect.TypeOf((*externalSecretState)(nil)).Elem()
}

type externalSecretArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// ExternalSecretSpec defines the desired state of ExternalSecret.
	Spec   *ExternalSecretSpec   `pulumi:"spec"`
	Status *ExternalSecretStatus `pulumi:"status"`
}

// The set of arguments for constructing a ExternalSecret resource.
type ExternalSecretArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// ExternalSecretSpec defines the desired state of ExternalSecret.
	Spec   ExternalSecretSpecPtrInput
	Status ExternalSecretStatusPtrInput
}

func (ExternalSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*externalSecretArgs)(nil)).Elem()
}

type ExternalSecretInput interface {
	pulumi.Input

	ToExternalSecretOutput() ExternalSecretOutput
	ToExternalSecretOutputWithContext(ctx context.Context) ExternalSecretOutput
}

func (*ExternalSecret) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecret)(nil)).Elem()
}

func (i *ExternalSecret) ToExternalSecretOutput() ExternalSecretOutput {
	return i.ToExternalSecretOutputWithContext(context.Background())
}

func (i *ExternalSecret) ToExternalSecretOutputWithContext(ctx context.Context) ExternalSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretOutput)
}

type ExternalSecretOutput struct{ *pulumi.OutputState }

func (ExternalSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecret)(nil)).Elem()
}

func (o ExternalSecretOutput) ToExternalSecretOutput() ExternalSecretOutput {
	return o
}

func (o ExternalSecretOutput) ToExternalSecretOutputWithContext(ctx context.Context) ExternalSecretOutput {
	return o
}

func (o ExternalSecretOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecret) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ExternalSecretOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecret) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ExternalSecretOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v *ExternalSecret) metav1.ObjectMetaPtrOutput { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// ExternalSecretSpec defines the desired state of ExternalSecret.
func (o ExternalSecretOutput) Spec() ExternalSecretSpecPtrOutput {
	return o.ApplyT(func(v *ExternalSecret) ExternalSecretSpecPtrOutput { return v.Spec }).(ExternalSecretSpecPtrOutput)
}

func (o ExternalSecretOutput) Status() ExternalSecretStatusPtrOutput {
	return o.ApplyT(func(v *ExternalSecret) ExternalSecretStatusPtrOutput { return v.Status }).(ExternalSecretStatusPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretInput)(nil)).Elem(), &ExternalSecret{})
	pulumi.RegisterOutputType(ExternalSecretOutput{})
}
